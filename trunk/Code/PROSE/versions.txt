
Current version
---------------

03-09-2011

03A 		: All internal commands now accept path strings.

		: Commands and scripts can be lauched with a path, EG:
		  entering "tests/joystick" from the root dir will launch
		  joystick.ezp (remember that this does not change the current PROSE dir)

		: Scripts go back to the original folder on completion (unless
                  the directory was changed in-script).
		
		: Internal commands now set the ERROR envar too.

		: When # is used (AVAIL,FI,VERS etc) to output data to envars
                  the command runs without showing text (only error code
                  returns. FI is an exception, it does not return an error code
                  when # is used allowing it to silently test for the existence
		  of a file. See below.

		: In scripts: "IF envar_name = *" syntax added, this tests for the
		  mere existence of an envar. EG: Following an "FI filename #", test
		  "OUT00" with "if OUT00 = * file_exists", a jump will occur to the
		  file_exists label if the file specified exists.
 
		: If A = FE on return from a program, PROSE will run the command
		  string pointed at by HL.
			
		: When a program is started with RX !, the location of argument string
		  following the "!" is now set up in HL

		: CD with no args now reports current dir in correct PROSE format
		  (no fwd slash after VOLx: or after last dir name)
			

------------------------------------------------------------------------------------------
Previous versions:
------------------------------------------------------------------------------------------


039		: PATH environment variable created, set to "COMMANDS" by default
                  extra folders can be added with spaced between the dir names.
                  EG: SET PATH = "COMMANDS APPS" note: quotes must be used when spaces
                  are required.

                : Removed EXEC command, scripts can now be run by entering their
                  file names (no extension required)

                : Script extension is now .PBF (PROSE batch file) to prevent clash
                  with Windows .SCR (screen saver files)

		: LB and SB commands allow full path in filename string

		: Removed PALETTE command, PEN performs now handles palette changes
		  EG: PEN x y aaa bbb (aaa bbb are palette colours)

		: G command, when a program is run from G xxxx, HL = first parameter
                  after the address.

		: ECHO command is now internal

		: Colour F = pink

		: Serial buffer separated from disk sector buffer
		
		: Fixed CD with no-args-shows-path (filesystem routine was not adjusting ZF)
		
		: Added kr_init_msec_timer and kr_read_msec_timer - uses timer 1 and IRQ
                : to count seconds and milliseconds





038		: Kernal call "kr_set_pointer" initialize / display the mouse pointer
	        : (512 bytes at top of VRAM B reserved for OS pointer sprite)
	
		: Entering "G 0" enables the ROM for reset (was hanging due to vector table
                ; overwriting the RAM copy of ROM)

		: Added support routines for relocatable code
		
		: Added memory allocation feature: "kr_allocate_memory", "kr_deallocate_memory"

		: Added AVAIL command for memory info
		
		: Added "kr_get_mem_top" (and renamed "kr_get_os_high" to "kr_get_mem_base")

                : Command line loading of EZP programs, RX and LB commands check for protected
                  areas of RAM and prompt the user to confirm the operation if these would be overwritten.

		: Added: Return values to envars: New PROSE standard - commands can pass 24bit values to envars on exit
		  starting at "OUT00", then "OUT01" etc.  AVAIL and VERS do this when they have the argument "#"

                ; Added FI [filename] (file info) command, additional # argument is accepted.

                ; Fixed PROSE error reports for filesystem errors $cc and $cd

                ; DIR and format show capacity in MB (or KB if less than 1MB)
 



037		: File loads faster (when more than 4 bytes at a time are loaded)

                : Program return codes slightly changed, if A = 0: All OK, If A = 1
                  driver error (driver error code in B), FF/FE are the same. Zero flag
                  no longer important.

                : kr_set_timeout and kr_test_timeout added

                : Error messages shown on new line on return to PROSE

		: Interrupt vector table set up in page 0 for all eZ80 IRQs.



036          :  Bugfix: New SD card driver was relying on previous ROM-based driver code
                to initialize the card (a 4ms time delay was missing from the new init code)


035 - Update :  New SD card driver. Now supports SDHC, faster reads.
		From this release, drivers should return with the Zero Flag set if all OK.
		
	New  :  "kr_get_disk_sector_ptr" - returns location of the prose sector pointer (in HL)
                 and the location of the sector buffer in DE.



034 - Bugfix : When a card was formatted without a label, garbage would be displayed
               when using MOUNT or DIR commands. This has now been fixed.

	New  : "Home" and "End" keys reposition cursor on OS screen.


033 - Changed: Disables sprites upon restart or when "kr_OS_display" is called
               Changed NMI handler for AMOEBA v107
               "PEN" command will now accept palette data (3rd parameter onwards)
               
		REQUIRES AMOEBA v107



032 - Changed: Pushes and Pops IX and IY around kernal calls. No kernal calls now use
               IX or IY to pass data.

		"kr_file_sector_list"		- now passes data out in BC instead of IX
		"kr_serial_receive_header"	- now passes data out in DE instead of IX
		"kr_serial_send_file"		- now set xDE = source address, xBC = length 



031 - Changed: Font rendering. Uses new character map mode (much faster) Requires AMOEBA v106

      Removed: Variable font size support code.
               Kernal routine: "kr_get_font_parameters" - obsolete.

      Added:   kernal routine: "kr_set_video_mode" 
               kernal routine: "kr_set_cursor_image"
               kernal routine: "kr_remove_cursor"
	       kernal routine: "kr_char_to_font" - for user defined graphics

      Renamed: kernal routine: "kr_get_display_size" to "kr_get_video_mode", 
               now returns video mode in A (B = width, C = height as before)

      Added:   Checks AMOEBA version on start-up, shows message if not the required version.
     
      Changed: PROSE fonts are now the full 256 character set (256x8 bytes)
               Cursor handling is handled via character swap (def modification)


030 - Added:  Kernal routine: "kr_play_audio" - sets audio channel(s) playing.
              kernal routine: "kr_disable_audio" - silences all channels.
              kernal routine: "kr_get_joysticks" - provides convenient joystick reading. 

02f - Changed: kernal keyboard routines now return ASCII codes (0-31) for keys when
               CTRL is held (lower-case ASCII code of the key - 96). Note if these
               characters are displayed, they will show up as garbage so user programs
               should check for them.

      Fixed:   kr_get_display_size (wasn't returning correct figures)

      Changed: kr_get_string now null-terminates the ascii string


02e - Fixed "EXEC" command and added basic jump features (IF <condition> LABEL), END.
      See docs for usage.

      Changed "?" command list (excludes < etc)

02D - (11-07-2011) Tested entire (documented) opcode list for ez80 CPU.
      Fixed some rogue opcode translations in the D command.


02C - Added "D - disassemble" command (and "DZ - disassemble Z80" command)


02B - Added Environment variables (see kernal routines)
      Added SET command for enviroment variables
      Programs now update the ERROR environment variable on return to PROSE

    - Fixed the reported Stack Pointer value when NMI freezer button is pressed.
      (Was originally 6 bytes too low due to a CALL and a PUSH prior to its value
      being read)

02A - Fixed "kr_write_file" call. External calls cannot use IX to pass data
      to PROSE as it is used to compute the jump! Inputs are now HL: filename
      DE: location, BC: Length.

029 - Improved keyboard and mouse initialization code: Requires AMOEBA v03

027 - Intellimouse Scroll Wheel enabled. Mouse Kernal calls return a counter 0-255 in B,
      (value is adjusted by mouse delta in 4th byte of Intellimouse packets)

026 - Mouse driver updated:

      Allow MS Intellimouse style mice (scroll wheel) that use 4-byte packets (untested).

      If incompatible mouse is connected, an error is now reported.

      Mouse initialization now skips ACK wait, and instead waits for $AA "POST OK" response.

025 - Bugfix: Minimum PROSE version from program header did not work.

024 - "RX" command updated. When argument = ">" the file is copied to the current
      disk directory (and not loaded to RAM in its entirity. Warning: uses a 32KB
      buffer at top of OS) - Requires Serial Link V3.0+

023 - Kernal routine "kr_get_font_info" added

01F - Changed font system, default font now unpacked to VRAM and full 32-255 ASCII
      character codes available
    - Added "FONT" command

01E - VMODE command added (made display code more flexible to suit).
   
01D - Joystick port pins configured as inputs

01C - Fixed format in SD card routines, other odd and ends.

01B - Lots of changes: File system error codes, kernal calls fixed / registers swapped etc
      
01A - Updated for AMOEBA v81

016 - Updated mouse routines

015 - Added internal "Mouse" Command to activate mouse driver

014 - Upon cold start sets small stack pointer to $ffff (top of MBASE: page)



