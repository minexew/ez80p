Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       0000002D            A    17    prose_version	equ 2dh
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 AE 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 F9 53 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 37 5E 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD 21 39 00         A    88    				call disable_irqs
000A5C CD A9 3A 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A 7C 5F 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD CE 40 00         A    94    				call init_keyboard
000A6B 28 06               A    95    				jr z,kb_ok
000A6D 21 7D 5F 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 7C 5F 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 AC 5F 00         A   102    				ld hl,os_variables				000A7C 01 E7 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 4B 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 D3 5D 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD 0F 40 00         A   110    				call hwsc_default_hw_settings
                           A   111    				
000A91 3A 96 5D 00         A   112    				ld a,(video_mode)
000A95 CD BE 33 00         A   113    				call set_vmode					                           A   114    
000A99 21 A1 62 00         A   115    				ld hl,packed_font_start
000A9D ED5B D0 5D 00       A   116    				ld de,(font_addr)
000AA2 01 DF 02 00         A   117    				ld bc,packed_font_end-packed_fo
000AA6 CD A9 15 00         A   118    				call unpack_rle
                           A   119    
000AAA 3E5F                A   120    				ld a,5fh
000AAC 32 BC 5D 00         A   121    				ld (req_cursor_image),a
                           A   122    
000AB0 21 C8 54 00         A   123    				ld hl,welcome_message			000AB4 CD 25 0F 00         A   124    				call os_print_string
000AB8 CD 10 35 00         A   125    				call os_get_mem_high			000ABC EB                  A   126    				ex de,hl
000ABD CD F0 12 00         A   127    				call os_show_hex_address
                           A   128    
000AC1 CD B8 13 00         A   129    				call os_new_line
000AC5 CD B8 13 00         A   130    				call os_new_line
000AC9 CD F7 31 00         A   131    				call os_cmd_vers				000ACD CD EB 31 00         A   132    				call os_cmd_remount				                           A   133    
000AD1 CD B8 13 00         A   134    				call os_new_line				                           A   135    
000AD5 CD 8C 41 00         A   136    				call purge_keyboard
                           A   137    				
000AD9 CD EC 38 00         A   138    				call set_irq_vector
000ADD CD FE 38 00         A   139    				call enable_os_irqs
000AE1 FB                  A   140    				ei
000AE2 CD 91 3A 00         A   141    				call set_nmi_vector
                           A   142    				
000AE6 21 7D 5F 00         A   143    				ld hl,devices_connected			000AEA CB46                A   144    				bit 0,(hl)
000AEC 20 08               A   145    				jr nz,kb_present
000AEE 21 21 5A 00         A   146    				ld hl,no_keyboard_msg
000AF2 CD EF 13 00         A   147    				call os_show_packed_text
000AF6                     A   148    kb_present				
000AF6 21 18 55 00         A   149    				ld hl,startup_script_fn
000AFA 22 D5 60 00         A   150    				ld (os_args_loc),hl
000AFE CD 28 32 00         A   151    				call os_cmd_exec				000B02 AF                  A   152    				xor a
000B03 32 E1 60 00         A   153    				ld (in_script_flag),a
                           A   154    									
000B07 3A 7B 5F 00         A   155    				ld a,(frozen)					000B0B B7                  A   156    				or a
000B0C 28 11               A   157    				jr z,os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0E AF                  A   158    				xor a
000B0F 32 7B 5F 00         A   159    				ld (frozen),a
000B13 21 70 55 00         A   160    				ld hl,nmi_freeze_txt
000B17 CD 25 0F 00         A   161    				call os_print_string
000B1B CD 42 2D 00         A   162    				call os_cmd_r
                           A   163    				
                           A   164    	
                           A   165    ;==============================================
                           A   166    
000B1F                     A   167    os_main_loop
                           A   168    								
000B1F CD FF 3F 00         A   169    				call hwsc_wait_vrt				                           A   170    
000B23 CD 76 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B27 CD 5C 43 00         A   173    				call os_get_key_press
000B2B 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B2D 32 68 61 00         A   176    				ld (current_scancode),a
000B31 78                  A   177    				ld a,b
000B32 32 69 61 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B36 CD 47 3E 00         A   180    				call hwsc_remove_cursor
000B3A 3E18                A   181    				ld a,24							000B3C 32 16 60 00         A   182    				ld (cursorflashtimer),a			000B40 AF                  A   183    				xor a
000B41 32 17 60 00         A   184    				ld (cursor_status),a
                           A   185    				
000B45 3A 68 61 00         A   186    				ld a,(current_scancode)			000B49 FE70                A   187    				cp 70h
000B4B 20 16               A   188    				jr nz,os_notins
000B4D 3A 67 61 00         A   189     				ld a,(insert_mode)
000B51 EE01                A   190    				xor 1
000B53 32 67 61 00         A   191    				ld (insert_mode),a
000B57 3E5F                A   192    				ld a,5fh
000B59 28 02               A   193    				jr z,linecurs
000B5B 3E7F                A   194    				ld a,7fh
000B5D 32 BC 5D 00         A   195    linecurs		ld (req_cursor_image),a
000B61 18 BC               A   196    				jr os_main_loop
                           A   197    
000B63 21 14 60 00         A   198    os_notins		ld hl,cursor_x					000B67 FE6B                A   199    				cp 06bh			
000B69 20 0E               A   200    				jr nz,os_ntlft
000B6B 35                  A   201    				dec (hl)
000B6C 7E                  A   202    				ld a,(hl)
000B6D FEFF                A   203    				cp 0ffh	
000B6F 20 AE               A   204    				jr nz,os_main_loop
000B71 3A C1 5D 00         A   205    				ld a,(window_columns)
000B75 3D                  A   206    				dec a
000B76 77                  A   207    				ld (hl),a						000B77 18 A6               A   208    				jr os_main_loop
                           A   209    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B79 FE74                A   210    os_ntlft		cp 074h							000B7B 20 0C               A   211    				jr nz,os_ntrig
000B7D 34                  A   212    				inc (hl)
000B7E 3A C1 5D 00         A   213    				ld a,(window_columns)
000B82 BE                  A   214    				cp (hl)
000B83 20 9A               A   215    				jr nz,os_main_loop
000B85 3600                A   216    				ld (hl),0						000B87 18 96               A   217    				jr os_main_loop
                           A   218    
000B89 21 13 60 00         A   219    os_ntrig		ld hl,cursor_y
000B8D FE75                A   220    				cp 075h							000B8F 20 09               A   221    				jr nz,os_ntup
000B91 35                  A   222    				dec (hl)
000B92 CB7E                A   223    				bit 7,(hl)
000B94 28 89               A   224    				jr z,os_main_loop
000B96 3600                A   225    				ld (hl),0						000B98 18 85               A   226    				jr os_main_loop
                           A   227    
000B9A FE72                A   228    os_ntup			cp 072h
000B9C 20 14               A   229    				jr nz,os_ntdwn					000B9E 34                  A   230    				inc (hl)
000B9F 3A BE 5D 00         A   231    				ld a,(window_rows)
000BA3 BE                  A   232    				cp (hl)
000BA4 C2 1F 0B 00         A   233    				jr nz,os_main_loop
000BA8 3D                  A   234    				dec a
000BA9 77                  A   235    				ld (hl),a						000BAA CD 76 3C 00         A   236    				call hwsc_scroll_up
000BAE C3 1F 0B 00         A   237    				jr os_main_loop
                           A   238    
000BB2 FE71                A   239    os_ntdwn		cp 071h							000BB4 20 08               A   240    				jr nz,os_nodel		
000BB6 3A 14 60 00         A   241    				ld a,(cursor_x)					000BBA 47                  A   242    				ld b,a
000BBB 04                  A   243    				inc b
000BBC 18 13               A   244    				jr os_chrbk
                           A   245    
000BBE FE66                A   246    os_nodel		cp 066h							000BC0 20 17               A   247    				jr nz,os_nbksp
000BC2 3A 14 60 00         A   248    				ld a,(cursor_x)					000BC6 B7                  A   249    				or a							000BC7 CA 1F 0B 00         A   250    				jp z,os_main_loop
000BCB 47                  A   251    				ld b,a
000BCC 3D                  A   252    				dec a
000BCD 32 14 60 00         A   253    				ld (cursor_x),a					000BD1 CD 10 3F 00         A   254    os_chrbk		call hwsc_chars_left			000BD5 C3 1F 0B 00         A   255    				jp os_main_loop
                           A   256    
000BD9 FE5A                A   257    os_nbksp		cp 05ah							000BDB CA 22 0C 00         A   258    				jp z,os_enter_pressed
                           A   259    	
000BDF 3A 69 61 00         A   260    				ld a,(current_asciicode)		000BE3 B7                  A   261    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BE4 28 38               A   262    				jr z,os_nvdun					                           A   263    
000BE6 FE7B                A   264    				cp 07bh							000BE8 30 12               A   265    				jr nc,os_gtcha					000BEA FE61                A   266    				cp 061h
000BEC 38 04               A   267    				jr c,os_ntupc
000BEE D620                A   268    				sub 020h
000BF0 18 0A               A   269    				jr os_gtcha
000BF2 FE5B                A   270    os_ntupc		cp 05bh
000BF4 30 06               A   271    				jr nc,os_gtcha
000BF6 FE41                A   272    				cp 041h
000BF8 38 02               A   273    				jr c,os_gtcha
000BFA C620                A   274    				add a,020h
000BFC 57                  A   275    os_gtcha		ld d,a							000BFD 3A 67 61 00         A   276    				ld a,(insert_mode)				000C01 B7                  A   277    				or a
000C02 CC 57 3F 00         A   278    				call z,hwsc_chars_right
                           A   279    				
000C06 ED4B 13 60 00       A   280    os_schi			ld bc,(cursor_pos)				000C0B 7A                  A   281    				ld a,d							000C0C CD 1A 3D 00         A   282    				call hwsc_plot_char		
000C10 21 14 60 00         A   283    				ld hl,cursor_x					000C14 34                  A   284    				inc (hl)
000C15 3A C1 5D 00         A   285    				ld a,(window_columns)
000C19 BE                  A   286    				cp (hl)							000C1A 20 02               A   287    				jr nz,os_nvdun
000C1C 3600                A   288    				ld (hl),0
                           A   289    
000C1E C3 1F 0B 00         A   290    os_nvdun		jp os_main_loop
                           A   291    	
                           A   292    
                           A   293    ;----------------------------------------------
                           A   294    
000C22                     A   295    os_enter_pressed
                           A   296    	
000C22 CD E2 3F 00         A   297    				call hwsc_charline_to_command_s
                           A   298    
000C26 AF                  A   299    				xor a
000C27 32 14 60 00         A   300    				ld (cursor_x),a					000C2B 21 13 60 00         A   301    				ld hl,cursor_y					000C2F 34                  A   302    				inc (hl)
000C30 3A BE 5D 00         A   303    				ld a,(window_rows)
000C34 BE                  A   304    				cp (hl)
000C35 20 06               A   305    				jr nz,os_esdok
000C37 3D                  A   306    				dec a
000C38 77                  A   307    				ld (hl),a
000C39 CD 76 3C 00         A   308    				call hwsc_scroll_up
                           A   309    
000C3D CD 4A 0C 00         A   310    os_esdok		call os_parse_cmd_chk_ps		                           A   311    
000C41 AF                  A   312    post_csb		xor a
000C42 32 E1 60 00         A   313    				ld (in_script_flag),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C46 C3 1F 0B 00         A   314    				jp os_main_loop
                           A   315    
                           A   316    	
                           A   317    ;----------------------------------------------
                           A   318    
                           A   319    
000C4A                     A   320    os_parse_cmd_chk_ps
                           A   321    
000C4A CD 5D 0C 00         A   322    				call os_parse_command_line
000C4E FEFE                A   323    				cp 0feh							000C50 C0                  A   324    				ret nz
000C51 01500000            A   325    				ld bc,max_buffer_chars			000C55 11 31 60 00         A   326    				ld de,commandstring				000C59 EDB0                A   327    				ldir
000C5B 18 ED               A   328    				jr os_parse_cmd_chk_ps
                           A   329    
                           A   330    	
                           A   331    ;----------------------------------------------
                           A   332    	
000C5D                     A   333    os_parse_command_line
                           A   334    
000C5D 3E01                A   335    				ld a,1
000C5F 32 AC 5F 00         A   336    				ld (store_registers),a			                           A   337    
000C63 21 31 60 00         A   338    				ld hl,commandstring				000C67 0650                A   339    				ld b,max_buffer_chars			000C69 CD BB 0F 00         A   340    				call os_scan_for_non_space		000C6D B7                  A   341    				or a							000C6E C8                  A   342    				ret z
000C6F 11 8D 55 00         A   343    				ld de,dictionary-1				000C73 D5                  A   344    				push de
000C74 D1                  A   345    compcstr		pop de
000C75 E5                  A   346    				push hl
000C76 FDE1                A   347    				pop iy
000C78 13                  A   348    notacmd			inc de
000C79 1A                  A   349    				ld a,(de)
000C7A FE01                A   350    				cp 1							000C7C CA 16 0D 00         A   351    				jp z,os_no_kernal_command_found
000C80 CB7F                A   352    				bit 7,a
000C82 28 F4               A   353    				jr z,notacmd					000C84 E67F                A   354    				and 07fh
000C86 4F                  A   355    				ld c,a							000C87 D5                  A   356    				push de
000C88 13                  A   357    cmdnscan		inc de
000C89 FD7E00              A   358    				ld a,(iy)						000C8C CD 19 12 00         A   359    				call os_uppercasify
000C90 47                  A   360    				ld b,a
000C91 1A                  A   361    				ld a,(de)						000C92 B8                  A   362    				cp b
000C93 FD23                A   363    				inc iy
000C95 28 F1               A   364    				jr z,cmdnscan					000C97 1A                  A   365    nomatch			ld a,(de)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C98 B7                  A   366    				or a
000C99 28 04               A   367    				jr z,posmatch					000C9B CB7F                A   368    				bit 7,a			
000C9D 28 D5               A   369    				jr z,compcstr					000C9F FD7EFF              A   370    posmatch		ld a,(iy-1)						000CA2 FE20                A   371    				cp 32
000CA4 20 CE               A   372    				jr nz,compcstr					                           A   373    	
000CA6 D1                  A   374    				pop de				
000CA7 FDE5                A   375    				push iy							000CA9 E1                  A   376    				pop hl
000CAA CD BB 0F 00         A   377    				call os_scan_for_non_space
000CAE 22 D5 60 00         A   378    				ld (os_args_loc),hl				                           A   379    	
000CB2 21 25 5B 00         A   380    				ld hl,os_cmd_locs
000CB6 11030000            A   381    				ld de,3
000CBA 51                  A   382    				ld d,c
000CBB ED5C                A   383    				mlt de							000CBD 19                  A   384    				add hl,de
000CBE ED37                A   385    				ld ix,(hl)						                           A   386    
000CC0 2A D5 60 00         A   387    				ld hl,(os_args_loc)				000CC4 CD F8 0E 00         A   388    				call os_run_command				                           A   389    
000CC8 C8                  A   390    				ret z							000CC9 B7                  A   391    				or a
000CCA 20 13               A   392    				jr nz,show_erm
000CCC 78                  A   393    os_hwe1			ld a,b							000CCD 21 8D 58 00         A   394    os_hwerr		ld hl,hex_byte_txt		
000CD1 CD 68 10 00         A   395    				call hexbyte_to_ascii	
000CD5 21 14 5A 00         A   396    				ld hl,hw_err_msg
000CD9 CD EF 13 00         A   397    				call os_show_packed_text
000CDD AF                  A   398    				xor a
000CDE C9                  A   399    				ret
                           A   400    
000CDF 01000000            A   401    show_erm		ld bc,0							000CE3 4F                  A   402    				ld c,a
000CE4 D680                A   403    				sub 080h						000CE6 38 11               A   404    				jr c,no_trans					000CE8 21 47 5C 00         A   405    				ld hl,kernal_error_code_transla
000CEC CB77                A   406    				bit 6,a							000CEE 28 06               A   407    				jr z,not_fs_err					000CF0 21 53 5C 00         A   408    				ld hl,fs_error_code_translation
000CF4 D640                A   409    				sub 040h
000CF6 4F                  A   410    not_fs_err		ld c,a
000CF7 09                  A   411    				add hl,bc
000CF8 4E                  A   412    				ld c,(hl)
000CF9 0600                A   413    no_trans		ld b,0
000CFB 21 8B 5B 00         A   414    				ld hl,packed_msg_list
000CFF 7E                  A   415    findmsg			ld a,(hl)
000D00 FEFF                A   416    				cp 0ffh
000D02 C8                  A   417    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D03 23                  A   418    				inc hl
000D04 B7                  A   419    				or a
000D05 20 F8               A   420    				jr nz,findmsg					000D07 04                  A   421    				inc b
000D08 79                  A   422    				ld a,c							000D09 B8                  A   423    				cp b
000D0A 20 F3               A   424    				jr nz,findmsg
000D0C CD EF 13 00         A   425    				call os_show_packed_text
000D10 CD B8 13 00         A   426    				call os_new_line
000D14 AF                  A   427    				xor a
000D15 C9                  A   428    				ret
                           A   429    	
                           A   430    
000D16                     A   431    os_no_kernal_command_found
                           A   432    
000D16 3E30                A   433    				ld a,030h						000D18 32 40 5E 00         A   434    fvolcmd			ld (vol_txt+4),a				000D1C F5                  A   435    				push af			
000D1D 11 3D 5E 00         A   436    				ld de,vol_txt+1		
000D21 0605                A   437    				ld b,5			
000D23 CD DF 11 00         A   438    				call os_compare_strings	
000D27 28 08               A   439    				jr z,gotvolcmd		
000D29 F1                  A   440    				pop af				
000D2A 3C                  A   441    				inc a			
000D2B FE38                A   442    				cp 030h+max_volumes		
000D2D 20 E9               A   443    				jr nz,fvolcmd		
000D2F 18 0B               A   444    				jr novolcmd		
000D31 F1                  A   445    gotvolcmd		pop af
000D32 D630                A   446    				sub 030h
000D34 CD 96 1A 00         A   447    				call os_change_volume
000D38 C3 DD 0E 00         A   448    				jp extcmderf					                           A   449    		
                           A   450    
                           A   451    
000D3C 7E                  A   452    novolcmd		ld a,(hl)						000D3D FE47                A   453    				cp 'G'							000D3F 20 29               A   454    				jr nz,not_g_cmd					000D41 23                  A   455    				inc hl
000D42 7E                  A   456    				ld a,(hl)
000D43 2B                  A   457    				dec hl
000D44 FE20                A   458    				cp ' '
000D46 20 22               A   459    				jr nz,not_g_cmd
000D48 23                  A   460    				inc hl
000D49 CD BB 0F 00         A   461    				call os_scan_for_non_space
000D4D 22 D5 60 00         A   462    				ld (os_args_loc),hl				000D51 B7                  A   463    				or a
000D52 20 04               A   464    				jr nz,gotgargs
000D54 3E1F                A   465    				ld a,01fh						000D56 18 87               A   466    				jr show_erm
000D58 CD A7 10 00         A   467    gotgargs		call ascii_to_hex_no_scan		000D5C B7                  A   468    				or a
000D5D 20 80               A   469    				jr nz,show_erm
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D5F CD A0 3A 00         A   470    				call enable_nmi					000D63 D5                  A   471    				push de
000D64 DDE1                A   472    				pop ix			
000D66 C3 F8 0E 00         A   473    				jp os_run_command				                           A   474    				
                           A   475    				
                           A   476    
000D6A 22 D5 60 00         A   477    not_g_cmd		ld (os_args_loc),hl				000D6E 22 D8 60 00         A   478    				ld (os_args_pos_cache),hl
000D72 CD EF 0F 00         A   479    				call os_args_to_fn_append_ezp	                           A   480    	
000D76 CD 02 0F 00         A   481    				call cache_dir_block			                           A   482    
000D7A CD 6F 47 00         A   483    				call fs_check_disk_format		000D7E 38 3C               A   484    				jr c,os_ndfxc
000D80 B7                  A   485    				or a							000D81 20 39               A   486    				jr nz,os_ndfxc
                           A   487    	
000D83 CD 11 49 00         A   488    				call fs_open_file_command		000D87 DA CD 0C 00         A   489    				jp c,os_hwerr			 		000D8B B7                  A   490    				or a
000D8C 28 38               A   491    				jr z,os_gecmd					                           A   492    
000D8E CD E2 48 00         A   493    				call fs_goto_root_dir_command	000D92 21 0F 55 00         A   494    				ld hl,os_dos_cmds_txt
000D96 CD 70 51 00         A   495    				call fs_hl_to_filename
000D9A CD BD 48 00         A   496    				call fs_change_dir_command		000D9E DA CD 0C 00         A   497    				jp c,os_hwerr
000DA2 B7                  A   498    				or a
000DA3 20 17               A   499    				jr nz,os_ndfxc					                           A   500    	
000DA5 2A D8 60 00         A   501    				ld hl,(os_args_pos_cache)		000DA9 22 D5 60 00         A   502    				ld (os_args_loc),hl
000DAD CD EF 0F 00         A   503    				call os_args_to_fn_append_ezp	000DB1 CD 11 49 00         A   504    				call fs_open_file_command		000DB5 DA CD 0C 00         A   505    				jp c,os_hwerr
000DB9 B7                  A   506    				or a
000DBA 28 0A               A   507    				jr z,os_gecmd
000DBC CD 0E 0F 00         A   508    os_ndfxc		call restore_dir_block			000DC0 3E0B                A   509    				ld a,0bh						000DC2 C3 DF 0C 00         A   510    				jp show_erm
                           A   511    
000DC6 2A D5 60 00         A   512    os_gecmd		ld hl,(os_args_loc)				000DCA CD BB 0F 00         A   513    				call os_scan_for_non_space		000DCE 22 D5 60 00         A   514    				ld (os_args_loc),hl
                           A   515    
000DD2 11100000            A   516    				ld de,16
000DD6 CD 0E 16 00         A   517    				call os_set_load_length			000DDA 21 80 67 00         A   518    				ld hl,scratch_pad
000DDE 22 D0 53 00         A   519    				ld (fs_ez80_address),hl
000DE2 CD 5C 49 00         A   520    				call fs_read_data_command
000DE6 DA CD 0C 00         A   521    				jp c,os_hwerr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DEA B7                  A   522    				or a
000DEB C2 DF 0C 00         A   523    				jp nz,show_erm					000DEF 2A 82 67 00         A   524    				ld hl,(scratch_pad+2)
000DF3 1150524F            A   525    				ld de,04f5250h					000DF7 AF                  A   526    				xor a	
000DF8 ED52                A   527    				sbc hl,de
000DFA 28 0A               A   528    				jr z,loc_header
000DFC CD 0E 0F 00         A   529    				call restore_dir_block			000E00 3E1A                A   530    				ld a,01ah						000E02 C3 DF 0C 00         A   531    				jp show_erm						                           A   532    				
000E06 3A 8F 67 00         A   533    loc_header		ld a,(scratch_pad+15)			000E0A 32 AB 5F 00         A   534    				ld (store_adl),a			
000E0E CD 11 49 00         A   535    				call fs_open_file_command		000E12 DA CD 0C 00         A   536    				jp c,os_hwerr
000E16 B7                  A   537    				or a	
000E17 20 A3               A   538    				jr nz,os_ndfxc
000E19 2A 85 67 00         A   539    				ld hl,(scratch_pad+5)			000E1D 22 D0 53 00         A   540    				ld (fs_ez80_address),hl
000E21 ED5B 7E 5F 00       A   541    				ld de,(sys_ram_high)
000E26 AF                  A   542    				xor a
000E27 E5                  A   543    				push hl
000E28 ED52                A   544    				sbc hl,de
000E2A E1                  A   545    				pop hl
000E2B 30 0A               A   546    				jr nc,osmemok
000E2D CD 0E 0F 00         A   547    				call restore_dir_block			000E31 3E26                A   548    				ld a,026h
000E33 C3 DF 0C 00         A   549    				jp show_erm
                           A   550    
000E37 ED5B 8B 67 00       A   551    osmemok			ld de,(scratch_pad+11)			000E3C 7B                  A   552    				ld a,e
000E3D B2                  A   553    				or d
000E3E 28 14               A   554    				jr z,noprov_spec				000E40 212D0000            A   555    				ld hl,prose_version
000E44 AF                  A   556    				xor a
000E45 40ED52              A   557    				sbc.sis hl,de					000E48 30 0A               A   558    				jr nc,noprov_spec
000E4A CD 0E 0F 00         A   559    				call restore_dir_block
000E4E 3E1B                A   560    				ld a,01bh						000E50 C3 DF 0C 00         A   561    				jp show_erm
                           A   562    				
000E54 CD 52 40 00         A   563    noprov_spec		call hwsc_get_version			000E58 2A 8D 67 00         A   564    				ld hl,(scratch_pad+13)			000E5C EB                  A   565    				ex de,hl						000E5D 7B                  A   566    				ld a,e
000E5E B2                  A   567    				or d
000E5F 28 10               A   568    				jr z,nohwv_spec					000E61 AF                  A   569    				xor a
000E62 40ED52              A   570    				sbc.sis hl,de					000E65 30 0A               A   571    				jr nc,nohwv_spec
000E67 CD 0E 0F 00         A   572    				call restore_dir_block
000E6B 3E2B                A   573    				ld a,02bh						Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E6D C3 DF 0C 00         A   574    				jp show_erm
                           A   575    
000E71 ED5B 88 67 00       A   576    nohwv_spec		ld de,(scratch_pad+8)			000E76 3A 8A 67 00         A   577    				ld a,(scratch_pad+10)			000E7A B2                  A   578    				or d
000E7B B3                  A   579    				or e
000E7C 28 04               A   580    				jr z,readcode					000E7E CD 0E 16 00         A   581    				call os_set_load_length			                           A   582    		
000E82 2A 85 67 00         A   583    readcode		ld hl,(scratch_pad+5)
000E86 22 DE 60 00         A   584    				ld (os_extcmd_jmp_addr),hl		000E8A CD 5C 49 00         A   585    				call fs_read_data_command
000E8E F5                  A   586    				push af
000E8F CD 0E 0F 00         A   587    				call restore_dir_block			000E93 F1                  A   588    				pop af
000E94 DA CD 0C 00         A   589    				jp c,os_hwerr					000E98 B7                  A   590    				or a
000E99 C2 DF 0C 00         A   591    				jp nz,show_erm					                           A   592    	
000E9D CD A0 3A 00         A   593    				call enable_nmi					000EA1 DD2A DE 60 00       A   594    				ld ix,(os_extcmd_jmp_addr)		000EA6 2A D5 60 00         A   595    				ld hl,(os_args_loc)				000EAA C3 F8 0E 00         A   596    				jp os_run_command				                           A   597    
000EAE F5                  A   598    extcmd_return	push af							000EAF CD 0F 40 00         A   599    				call hwsc_default_hw_settings	000EB3 3A AC 5F 00         A   600    				ld a,(store_registers)
000EB7 B7                  A   601    				or a
000EB8 28 06               A   602    				jr z,skp_strg
000EBA F1                  A   603    				pop af
000EBB CD 31 13 00         A   604    				call os_store_CPU_regs			000EBF F5                  A   605    				push af
000EC0 F1                  A   606    skp_strg		pop af
                           A   607    
000EC1 F5                  A   608    cntuasr			push af
000EC2 21 80 67 00         A   609    				ld hl,scratch_pad				000EC6 CD 68 10 00         A   610    				call hexbyte_to_ascii
000ECA 3600                A   611    				ld (hl),0
000ECC 11 80 67 00         A   612    				ld de,scratch_pad
000ED0 21 88 55 00         A   613    				ld hl,error_txt
000ED4 CD 41 1B 00         A   614    				call os_set_envar
000ED8 CD A9 3A 00         A   615    				call disable_nmi				000EDC F1                  A   616    				pop af
000EDD 28 12               A   617    extcmderf		jr z,not_errc					000EDF B7                  A   618    				or a
000EE0 CA CC 0C 00         A   619    				jp z,os_hwe1					000EE4 FEFF                A   620    				cp 0ffh							000EE6 CA 48 0A 00         A   621    				jp z,os_cold_start
000EEA FEFE                A   622    				cp 0feh							000EEC C8                  A   623    				ret z
000EED C3 DF 0C 00         A   624    				jp show_erm						000EF1 FEFF                A   625    not_errc		cp 0ffh							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EF3 CA 48 0A 00         A   626    				jp z,os_cold_start
000EF7 C9                  A   627    				ret
                           A   628    				
                           A   629    ;----------------------------------------------
                           A   630    
000EF8                     A   631    os_run_command									000EF8 ED3906              A   632    				out0 (port_nmi_ack),a			000EFB DD22 AD 5F 00       A   633    				ld (com_start_addr),ix			000F00 DDE9                A   634    				jp (ix)							                           A   635    
                           A   636    ;----------------------------------------------
                           A   637    
000F02                     A   638    cache_dir_block
                           A   639    
                           A   640    	
000F02 D5                  A   641    				push de
000F03 CD 3A 1A 00         A   642    				call fs_get_dir_cluster	
000F07 ED53 DB 60 00       A   643    				ld (os_dir_block_cache),de
000F0C D1                  A   644    				pop de	
000F0D C9                  A   645    				ret
                           A   646    		
                           A   647    
000F0E                     A   648    restore_dir_block
                           A   649    
000F0E D5                  A   650    				push de
000F0F ED5B DB 60 00       A   651    				ld de,(os_dir_block_cache)
000F14 CD 46 1A 00         A   652    				call fs_update_dir_cluster
000F18 D1                  A   653    				pop de
000F19 C9                  A   654    				ret
                           A   655    		
                           A   656    ;==============================================
                           A   657    ; Routines called by command line
                           A   658    ;==============================================
                           A   659    
                           A   660    ; Set:-
                           A   661    ; HL to address of string
                           A   662    ; c = y
                           A   663    ; b = x
                           A   664    
000F1A                     A   665    ext_print_string
                           A   666    
000F1A CC 72 15 00         A   667    				call z,mbase_hl
000F1E 18 05               A   668    				jr os_print_string
                           A   669    
000F20                     A   670    os_print_string_cond
                           A   671    
000F20 CD ED 19 00         A   672    				call test_quiet_mode
000F24 C0                  A   673    				ret nz
                           A   674    
000F25                     A   675    os_print_string
                           A   676    
000F25 D5                  A   677    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F26 C5                  A   678    				push bc
000F27 ED4B 13 60 00       A   679    				ld bc,(cursor_pos)				000F2C 7E                  A   680    prstr_lp		ld a,(hl)
000F2D 23                  A   681    				inc hl
000F2E B7                  A   682    				or a
000F2F 20 09               A   683    				jr nz,prstr_ne
000F31 ED43 13 60 00       A   684    				ld (cursor_pos),bc
000F36 C1                  A   685    				pop bc
000F37 D1                  A   686    				pop de
000F38 AF                  A   687    				xor a							000F39 C9                  A   688    				ret
                           A   689    
000F3A FE0D                A   690    prstr_ne		cp 13
000F3C 20 04               A   691    				jr nz,not_cr
000F3E 0600                A   692    				ld b,0
000F40 18 EA               A   693    				jr prstr_lp
000F42 FE0A                A   694    not_cr			cp 10
000F44 28 12               A   695    				jr z,line_feed				
000F46 FE0B                A   696    				cp 11
000F48 28 0C               A   697    				jr z,next_line
000F4A CD 1A 3D 00         A   698    				call hwsc_plot_char
000F4E 04                  A   699    				inc b
000F4F 3A C1 5D 00         A   700    				ld a,(window_columns)
000F53 B8                  A   701    				cp b
000F54 20 D6               A   702    				jr nz,prstr_lp
000F56 0600                A   703    next_line		ld b,0
000F58 0C                  A   704    line_feed		inc c
000F59 3A BE 5D 00         A   705    				ld a,(window_rows)
000F5D B9                  A   706    				cp c
000F5E 20 CC               A   707    				jr nz,prstr_lp
000F60 0D                  A   708    				dec c
000F61 CD 76 3C 00         A   709    				call hwsc_scroll_up
000F65 18 C5               A   710    				jr prstr_lp
                           A   711    
                           A   712    ;----------------------------------------------
                           A   713    
000F67 21 40 61 00         A   714    os_print_char	ld hl,char_to_print
000F6B 77                  A   715    				ld (hl),a
000F6C 18 B7               A   716    				jr os_print_string
                           A   717    
                           A   718    ;----------------------------------------------
                           A   719    
000F6E F5                  A   720    home_cursor		push af
000F6F AF                  A   721    				xor a
000F70 32 14 60 00         A   722    				ld (cursor_x),a
000F74 F1                  A   723    				pop af
000F75 C9                  A   724    				ret
                           A   725    				
                           A   726    ;----------------------------------------------
                           A   727    
000F76                     A   728    os_cursor_flash
                           A   729    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F76 21 16 60 00         A   730    				ld hl,cursorflashtimer
000F7A 34                  A   731    				inc (hl)
000F7B 7E                  A   732    				ld a,(hl)
000F7C FE19                A   733    				cp 25
000F7E C0                  A   734    				ret nz
000F7F 3600                A   735    				ld (hl),0
000F81 3A 17 60 00         A   736    				ld a,(cursor_status)
000F85 EE01                A   737    				xor 1
000F87 32 17 60 00         A   738    				ld (cursor_status),a
000F8B 28 05               A   739    				jr z,no_cursor
000F8D CD 5A 3E 00         A   740    				call hwsc_draw_cursor			000F91 C9                  A   741    				ret
000F92 CD 47 3E 00         A   742    no_cursor		call hwsc_remove_cursor
000F96 C9                  A   743    				ret
                           A   744    
                           A   745    ;----------------------------------------------
                           A   746    
000F97                     A   747    os_refresh_screen
                           A   748    
000F97 0E00                A   749    				ld c,0							000F99 CD BA 3F 00         A   750    rs_yloop		call hwsc_redraw_ui_line
000F9D 0C                  A   751    				inc c
000F9E 3A BE 5D 00         A   752    				ld a,(window_rows)		
000FA2 B9                  A   753    				cp c
000FA3 20 F4               A   754    				jr nz,rs_yloop
000FA5 C9                  A   755    				ret
                           A   756    
                           A   757    ;----------------------------------------------
                           A   758    
000FA6                     A   759    os_next_arg
                           A   760    
000FA6 CD B2 0F 00         A   761    				call os_scan_for_space
000FAA B7                  A   762    				or a
000FAB C8                  A   763    				ret z
000FAC CD BB 0F 00         A   764    				call os_scan_for_non_space
000FB0 B7                  A   765    				or a
000FB1 C9                  A   766    				ret
                           A   767    
                           A   768    
                           A   769    ;----------------------------------------------
                           A   770    	
                           A   771    
000FB2                     A   772    os_scan_for_space
                           A   773    
000FB2 7E                  A   774    os_sfspl 		ld a,(hl)						000FB3 B7                  A   775    				or a							000FB4 C8                  A   776    				ret z
000FB5 FE20                A   777    				cp ' '
000FB7 C8                  A   778    				ret z
000FB8 23                  A   779    				inc hl
000FB9 18 F7               A   780    				jr os_sfspl
                           A   781    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   782    
                           A   783    ;----------------------------------------------
                           A   784    	
                           A   785    
000FBB                     A   786    os_scan_for_non_space
                           A   787    
000FBB 2B                  A   788    				dec hl							000FBC 23                  A   789    os_nsplp		inc hl			
000FBD 7E                  A   790    				ld a,(hl)			
000FBE B7                  A   791    				or a			
000FBF C8                  A   792    				ret z							000FC0 FE20                A   793    				cp ' '
000FC2 28 F8               A   794    				jr z,os_nsplp
000FC4 C9                  A   795    				ret
                           A   796    	
                           A   797    	
                           A   798    ;----------------------------------------------
                           A   799    
000FC5                     A   800    os_args_to_alt_filename
                           A   801    
000FC5 CD 1F 10 00         A   802    				call os_atfn_pre				000FC9 C8                  A   803    				ret z
000FCA CD 6A 51 00         A   804    				call fs_hl_to_alt_filename
000FCE 18 09               A   805    				jr os_atfrl
                           A   806    	
                           A   807    	
                           A   808    	
                           A   809    		
000FD0                     A   810    os_args_to_filename
                           A   811    
000FD0 CD 1F 10 00         A   812    				call os_atfn_pre				000FD4 C8                  A   813    				ret z
000FD5 CD 70 51 00         A   814    				call fs_hl_to_filename	
                           A   815    
000FD9 7E                  A   816    os_atfrl		ld a,(hl)						000FDA B7                  A   817    				or a							000FDB 28 0B               A   818    				jr z,os_cfne
000FDD FE20                A   819    				cp 32
000FDF 28 07               A   820    				jr z,os_cfne
000FE1 FE2F                A   821    				cp 02fh
000FE3 28 03               A   822    				jr z,os_cfne
000FE5 23                  A   823    				inc hl
000FE6 18 F1               A   824    				jr os_atfrl	
000FE8 22 D5 60 00         A   825    os_cfne			ld (os_args_loc),hl				000FEC 79                  A   826    				ld a,c			
000FED B7                  A   827    				or a							000FEE C9                  A   828    				ret
                           A   829    
                           A   830    
                           A   831    
                           A   832    
000FEF                     A   833    os_args_to_fn_append_ezp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   834    
                           A   835    	
000FEF CD 1F 10 00         A   836    				call os_atfn_pre				000FF3 C8                  A   837    				ret z
000FF4 11 B0 5F 00         A   838    				ld de,temp_string
000FF8 7E                  A   839    ccmdtlp			ld a,(hl)						000FF9 B7                  A   840    				or a
000FFA 28 0D               A   841    				jr z,goteocmd
000FFC FE20                A   842    				cp ' '
000FFE 28 09               A   843    				jr z,goteocmd
001000 FE2E                A   844    				cp '.'
001002 28 05               A   845    				jr z,goteocmd
001004 12                  A   846    				ld (de),a
001005 13                  A   847    				inc de
001006 23                  A   848    				inc hl
001007 18 EF               A   849    				jr ccmdtlp
                           A   850    	
001009 E5                  A   851    goteocmd		push hl
00100A 21 62 55 00         A   852    				ld hl,ezp_extension_txt
00100E 01050000            A   853    				ld bc,5
001012 EDB0                A   854    				ldir 
001014 21 B0 5F 00         A   855    				ld hl,temp_string
001018 CD 70 51 00         A   856    				call fs_hl_to_filename
00101C E1                  A   857    				pop hl
00101D 18 BA               A   858    				jr os_atfrl
                           A   859    	
                           A   860    
                           A   861    
                           A   862    
00101F                     A   863    os_atfn_pre
                           A   864    
00101F 2A D5 60 00         A   865    				ld hl,(os_args_loc)				001023 CD BB 0F 00         A   866    				call os_scan_for_non_space
001027 B7                  A   867    				or a
001028 C8                  A   868    				ret z
001029 7E                  A   869    				ld a,(hl)
00102A FE2F                A   870    				cp 02fh							00102C 20 01               A   871    				jr nz,notfsl1
00102E 23                  A   872    				inc hl
00102F AF                  A   873    notfsl1			xor a
001030 3C                  A   874    				inc a
001031 C9                  A   875    				ret
                           A   876    
                           A   877    
                           A   878    ;--------- Number <-> String functions --------
                           A   879    
                           A   880    
001032                     A   881    os_clear_output_line
                           A   882    
001032 C5                  A   883    				push bc
001033 E5                  A   884    				push hl			
001034 21 83 60 00         A   885    				ld hl,output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001038 01500000            A   886    				ld bc,max_buffer_chars
00103C 3E20                A   887    				ld a,32
00103E CD 4B 15 00         A   888    				call os_bchl_memfill
001042 E1                  A   889    				pop hl
001043 C1                  A   890    				pop bc
001044 C9                  A   891    				ret
                           A   892    	
                           A   893    	
                           A   894    	
001045                     A   895    os_skip_leading_ascii_zeros
                           A   896    
001045 7E                  A   897    slazlp			ld a,(hl)						001046 FE30                A   898    				cp '0'							001048 C0                  A   899    				ret nz
001049 23                  A   900    				inc hl
00104A 10 F9               A   901    				djnz slazlp
00104C C9                  A   902    				ret
                           A   903    	
                           A   904    
                           A   905    
00104D                     A   906    os_leading_ascii_zeros_to_spaces
                           A   907    
00104D E5                  A   908    				push hl
00104E 7E                  A   909    clazlp			ld a,(hl)						00104F FE30                A   910    				cp '0'							001051 20 05               A   911    				jr nz,claze	
001053 3620                A   912    				ld (hl),' '
001055 23                  A   913    				inc hl
001056 10 F6               A   914    				djnz clazlp
001058 E1                  A   915    claze			pop hl
001059 C9                  A   916    				ret
                           A   917    	
                           A   918    
                           A   919    
                           A   920    		
00105A                     A   921    n_hexbytes_to_ascii
                           A   922    
00105A 1A                  A   923    				ld a,(de)						00105B CD 68 10 00         A   924    				call hexbyte_to_ascii			00105F 1B                  A   925    				dec de
001060 10 F8               A   926    				djnz n_hexbytes_to_ascii
001062 C9                  A   927    				ret
                           A   928    			
                           A   929    			
                           A   930    
001063                     A   931    ext_hexbyte_to_ascii
                           A   932    
001063 CC 72 15 00         A   933    				call z,mbase_hl
001067 7B                  A   934    				ld a,e
                           A   935    
001068                     A   936    hexbyte_to_ascii
                           A   937    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001068 C5                  A   938    				push bc
001069 47                  A   939    				ld b,a							00106A CB3F                A   940    				srl a							00106C CB3F                A   941    				srl a
00106E CB3F                A   942    				srl a
001070 CB3F                A   943    				srl a
001072 CD 84 10 00         A   944    				call hxdigconv
001076 77                  A   945    				ld (hl),a
001077 23                  A   946    				inc hl
001078 78                  A   947    				ld a,b
001079 E60F                A   948    				and 0fh
00107B CD 84 10 00         A   949    				call hxdigconv
00107F 77                  A   950    				ld (hl),a
001080 23                  A   951    				inc hl
001081 C1                  A   952    				pop bc
001082 AF                  A   953    				xor a							001083 C9                  A   954    				ret
                           A   955    				
001084 C630                A   956    hxdigconv		add a,030h
001086 FE3A                A   957    				cp 03ah
001088 38 02               A   958    				jr c,hxdone
00108A C607                A   959    				add a,7
00108C C9                  A   960    hxdone			ret
                           A   961    
                           A   962    
                           A   963    
                           A   964    
00108D                     A   965    hexword_to_ascii	
                           A   966    
00108D 7A                  A   967    				ld a,d							00108E CD 68 10 00         A   968    				call hexbyte_to_ascii
001092 7B                  A   969    				ld a,e
001093 CD 68 10 00         A   970    				call hexbyte_to_ascii
001097 C9                  A   971    				ret
                           A   972    	
                           A   973    
                           A   974    
                           A   975    
001098                     A   976    ext_ascii_to_hexword
                           A   977    		
001098 CC 72 15 00         A   978    				call z,mbase_hl
                           A   979    
00109C                     A   980    ascii_to_hexword
                           A   981    	
00109C CD BB 0F 00         A   982    				call os_scan_for_non_space		0010A0 B7                  A   983    				or a
0010A1 20 04               A   984    				jr nz,ascii_to_hex_no_scan
0010A3 3E81                A   985    				ld a,081h						0010A5 B7                  A   986    				or a
0010A6 C9                  A   987    				ret	
                           A   988    
                           A   989    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010A7                     A   990    ascii_to_hex_no_scan
                           A   991    
0010A7 DDE5                A   992    				push ix
0010A9 C5                  A   993    				push bc
0010AA DD210000 00         A   994    				ld ix,0
0010AF 0606                A   995    				ld b,6							0010B1 CD DD 10 00         A   996    athlp			call ascii_to_hex_digit
0010B5 FEF0                A   997    				cp 0f0h							0010B7 28 17               A   998    				jr z,athend
0010B9 FED0                A   999    				cp 0d0h
0010BB 28 13               A  1000    				jr z,athend						0010BD FE10                A  1001    				cp 16
0010BF 30 17               A  1002    				jr nc,badhex					0010C1 DD29                A  1003    				add ix,ix						0010C3 DD29                A  1004    				add ix,ix
0010C5 DD29                A  1005    				add ix,ix
0010C7 DD29                A  1006    				add ix,ix
0010C9 DDB5                A  1007    				or a,ixl
0010CB DD6F                A  1008    				ld ixl,a
0010CD 23                  A  1009    				inc hl
0010CE 10 E1               A  1010    				djnz athlp
0010D0 DDE5                A  1011    athend			push ix
0010D2 D1                  A  1012    				pop de
0010D3 AF                  A  1013    				xor a
0010D4 C1                  A  1014    ath_quit		pop bc
0010D5 DDE1                A  1015    				pop ix							0010D7 C9                  A  1016    				ret
                           A  1017    		
0010D8 3E82                A  1018    badhex			ld a,82h						0010DA B7                  A  1019    				or a
0010DB 18 F7               A  1020    				jr ath_quit
                           A  1021    				
                           A  1022    	
                           A  1023    		
0010DD                     A  1024    ascii_to_hex_digit
                           A  1025    
0010DD 7E                  A  1026    				ld a,(hl)						0010DE FE61                A  1027    				cp 061h
0010E0 38 02               A  1028    				jr c,hc_uppercase
0010E2 D620                A  1029    				sub 020h						0010E4 D63A                A  1030    hc_uppercase	sub 03ah						0010E6 38 02               A  1031    				jr c,zeronine
0010E8 C6F9                A  1032    				add a,0f9h
0010EA C60A                A  1033    zeronine		add a,0ah
0010EC C9                  A  1034    				ret
                           A  1035    
                           A  1036    
                           A  1037    ;--------- Text Input / Non-numeric string func
                           A  1038    
                           A  1039    ; Waits for user to enter a string of character
                           A  1040    ; Before calling, set:  HL = destination of str
                           A  1041    ;                        E = max number of char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1042    ; Returns:   A  = number of characters in enter
                           A  1043    
                           A  1044    
0010ED                     A  1045    ext_user_input
0010ED CC 72 15 00         A  1046    				call z,mbase_hl
                           A  1047    				
0010F1                     A  1048    os_user_input
0010F1 AF                  A  1049    				xor a
0010F2 32 91 5D 00         A  1050    				ld (ui_index),a
0010F6 22 93 5D 00         A  1051    				ld (ui_string_addr),hl
0010FA 7B                  A  1052    				ld a,e
0010FB 32 92 5D 00         A  1053    				ld (ui_maxchars),a
                           A  1054    				
0010FF 3A 67 61 00         A  1055    				ld a,(insert_mode)
001103 32 30 60 00         A  1056    				ld (ui_im_cache),a
001107 AF                  A  1057    				xor a
001108 32 67 61 00         A  1058    				ld (insert_mode),a				                           A  1059    				
00110C CD 5A 3E 00         A  1060    ui_loop			call hwsc_draw_cursor			001110 CD 15 43 00         A  1061    				call os_wait_key_press			001114 32 68 61 00         A  1062    				ld (current_scancode),a
001118 78                  A  1063    				ld a,b
001119 32 69 61 00         A  1064    				ld (current_asciicode),a		00111D CD 47 3E 00         A  1065    				call hwsc_remove_cursor
                           A  1066    	
001121 3A 68 61 00         A  1067    				ld a,(current_scancode)
001125 FE66                A  1068    				cp 066h							001127 20 1F               A  1069    				jr nz,os_nuibs
001129 3A 91 5D 00         A  1070    				ld a,(ui_index)
00112D B7                  A  1071    				or a
00112E 28 DC               A  1072    				jr z,ui_loop					001130 21 14 60 00         A  1073    				ld hl,cursor_x					001134 35                  A  1074    				dec (hl)						001135 46                  A  1075    os_uixok		ld b,(hl)		
001136 3A 13 60 00         A  1076    				ld a,(cursor_y)
00113A 4F                  A  1077    				ld c,a
00113B 3E20                A  1078    				ld a,32
00113D CD 1A 3D 00         A  1079    				call hwsc_plot_char
001141 21 91 5D 00         A  1080    				ld hl,ui_index
001145 35                  A  1081    				dec (hl)						001146 18 C4               A  1082    				jr ui_loop
                           A  1083    
001148 FE76                A  1084    os_nuibs		cp 076h							00114A 28 5E               A  1085    				jr z,ui_aborted
00114C FE5A                A  1086    				cp 05ah							00114E 28 45               A  1087    				jr z,ui_enter_pressed
                           A  1088    	
001150 3A 91 5D 00         A  1089    				ld a,(ui_index)					001154 21 92 5D 00         A  1090    				ld hl,ui_maxchars
001158 BE                  A  1091    				cp (hl)
001159 28 B1               A  1092    				jr z,ui_loop	
                           A  1093    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00115B 3A 69 61 00         A  1094    				ld a,(current_asciicode)		00115F B7                  A  1095    				or a							001160 28 AA               A  1096    				jr z,ui_loop					                           A  1097    
001162 57                  A  1098    ui_gtcha		ld d,a
001163 2A 93 5D 00         A  1099    				ld hl,(ui_string_addr)
001167 3A 91 5D 00         A  1100    				ld a,(ui_index)
00116B 01000000            A  1101    				ld bc,0
00116F 4F                  A  1102    				ld c,a
001170 09                  A  1103    				add hl,bc
001171 72                  A  1104    				ld (hl),d						001172 3C                  A  1105    				inc a
001173 32 91 5D 00         A  1106    				ld (ui_index),a					                           A  1107    				
001177 ED4B 13 60 00       A  1108    				ld bc,(cursor_y)				00117C 7A                  A  1109    				ld a,d
00117D CD 1A 3D 00         A  1110    				call hwsc_plot_char		
001181 21 14 60 00         A  1111    				ld hl,cursor_x					001185 34                  A  1112    				inc (hl)
001186 3A C1 5D 00         A  1113    				ld a,(window_columns)			00118A BE                  A  1114    				cp (hl)
00118B C2 0C 11 00         A  1115    				jp nz,ui_loop
00118F 3600                A  1116    				ld (hl),0
001191 C3 0C 11 00         A  1117    				jp ui_loop
                           A  1118    
001195                     A  1119    ui_enter_pressed
                           A  1120    				
001195 3A 30 60 00         A  1121    				ld a,(ui_im_cache)				001199 32 67 61 00         A  1122    				ld (insert_mode),a
00119D 3A 91 5D 00         A  1123    				ld a,(ui_index)					0011A1 B7                  A  1124    				or a
0011A2 20 04               A  1125    				jr nz,ui_data
0011A4 3E81                A  1126    				ld a,081h						0011A6 B7                  A  1127    				or a
0011A7 C9                  A  1128    				ret
0011A8 BF                  A  1129    ui_data			cp a							0011A9 C9                  A  1130    				ret
                           A  1131    
0011AA 3A 30 60 00         A  1132    ui_aborted		ld a,(ui_im_cache)				0011AE 32 67 61 00         A  1133    				ld (insert_mode),a
0011B2 3E80                A  1134    				ld a,080h						0011B4 B7                  A  1135    				or a							0011B5 C9                  A  1136    				ret
                           A  1137    		
                           A  1138    ;----------------------------------------------
                           A  1139    	
0011B6                     A  1140    os_count_lines
                           A  1141    
0011B6 E5                  A  1142    				push hl							0011B7 0679                A  1143    				ld b,'y'						0011B9 21 18 60 00         A  1144    				ld hl,os_linecount			
0011BD 34                  A  1145    				inc (hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011BE 3A BE 5D 00         A  1146    				ld a,(window_rows)
0011C2 D604                A  1147    				sub 4
0011C4 BE                  A  1148    				cp (hl)
0011C5 20 0E               A  1149    				jr nz,os_nntpo
0011C7 3600                A  1150    				ld (hl),0
0011C9 21 67 55 00         A  1151    				ld hl,os_more_txt
0011CD CD 25 0F 00         A  1152    				call os_print_string
0011D1 CD 15 43 00         A  1153    				call os_wait_key_press	
0011D5 E1                  A  1154    os_nntpo		pop hl
0011D6 C9                  A  1155    				ret
                           A  1156    
                           A  1157    ;----------------------------------------------
                           A  1158    
0011D7                     A  1159    ext_compare_strings
                           A  1160    	
0011D7 CC 72 15 00         A  1161    				call z,mbase_hl
0011DB CC 83 15 00         A  1162    				call z,mbase_de
                           A  1163    				
0011DF                     A  1164    os_compare_strings
                           A  1165    
                           A  1166    ; both strings at HL/DE should be zero terminat
                           A  1167    ; compare will fail if string lengths are diffe
                           A  1168    ; unless count (B) is reached first
                           A  1169    ; Case is ignored
                           A  1170    ; Zero flag set on return if same
                           A  1171    
0011DF E5                  A  1172    				push hl							0011E0 D5                  A  1173    				push de							0011E1 1A                  A  1174    ocslp			ld a,(de)						0011E2 B7                  A  1175    				or a
0011E3 28 0C               A  1176    				jr z,ocsbt
0011E5 CD 22 12 00         A  1177    				call case_insensitive_compare	0011E9 20 0E               A  1178    				jr nz,ocs_diff
0011EB 13                  A  1179    				inc de
0011EC 23                  A  1180    				inc hl
0011ED 10 F2               A  1181    				djnz ocslp
0011EF 18 04               A  1182    				jr ocs_same
0011F1 1A                  A  1183    ocsbt			ld a,(de)						0011F2 B6                  A  1184    				or (hl)
0011F3 20 04               A  1185    				jr nz,ocs_diff
0011F5 D1                  A  1186    ocs_same		pop de
0011F6 E1                  A  1187    				pop hl
0011F7 AF                  A  1188    				xor a							0011F8 C9                  A  1189    				ret
0011F9 D1                  A  1190    ocs_diff		pop de
0011FA E1                  A  1191    				pop hl
0011FB AF                  A  1192    				xor a							0011FC 3C                  A  1193    				inc a
0011FD C9                  A  1194    				ret
                           A  1195    
                           A  1196    
                           A  1197    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1198    
0011FE                     A  1199    os_copy_ascii_run
                           A  1200    
                           A  1201    ;INPUT HL = source ($00 or $20 terminates)
                           A  1202    ;      DE = dest
                           A  1203    ;       b = max chars
                           A  1204    
                           A  1205    ;OUTPUT HL/DE = end of runs
                           A  1206    ;           c = char count
                           A  1207    	
0011FE 0E00                A  1208    				ld c,0
001200 7E                  A  1209    cpyar_lp		ld a,(hl)
001201 B7                  A  1210    				or a
001202 C8                  A  1211    				ret z
001203 FE20                A  1212    				cp 32
001205 C8                  A  1213    				ret z
001206 12                  A  1214    				ld (de),a
001207 23                  A  1215    				inc hl
001208 13                  A  1216    				inc de
001209 0C                  A  1217    				inc c
00120A 10 F4               A  1218    				djnz cpyar_lp
00120C C9                  A  1219    				ret
                           A  1220    
                           A  1221    ;----------------------------------------------
                           A  1222    
00120D                     A  1223    uppercasify_string
                           A  1224    
                           A  1225    ; Set HL to string location ($00 quits)
                           A  1226    ; Set B to max number of chars
                           A  1227    
00120D 7E                  A  1228    				ld a,(hl)
00120E B7                  A  1229    				or a
00120F C8                  A  1230    				ret z
001210 CD 19 12 00         A  1231    				call os_uppercasify
001214 77                  A  1232    				ld (hl),a
001215 23                  A  1233    				inc hl
001216 10 F5               A  1234    				djnz uppercasify_string	
001218 C9                  A  1235    				ret
                           A  1236    	
                           A  1237    
001219                     A  1238    os_uppercasify
                           A  1239    
                           A  1240    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1241    
001219 FE61                A  1242    				cp 061h			
00121B D8                  A  1243    				ret c
00121C FE7B                A  1244    				cp 07bh
00121E D0                  A  1245    				ret nc
00121F D620                A  1246    				sub 020h				
001221 C9                  A  1247    				ret
                           A  1248    
                           A  1249    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1250    
001222                     A  1251    case_insensitive_compare
                           A  1252    
                           A  1253    ; compares A with (HL) disregarding the case of
                           A  1254    ; Zero flag set if the characters are the same
                           A  1255    ; all registers are preserved.
                           A  1256    
001222 C5                  A  1257    				push bc					
001223 4F                  A  1258    				ld c,a
                           A  1259    
001224 CD 19 12 00         A  1260    				call os_uppercasify				001228 47                  A  1261    				ld b,a
001229 7E                  A  1262    				ld a,(hl)
00122A CD 19 12 00         A  1263    				call os_uppercasify
00122E B8                  A  1264    				cp b
                           A  1265    
00122F 79                  A  1266    				ld a,c
001230 C1                  A  1267    				pop bc
001231 C9                  A  1268    				ret
                           A  1269    
                           A  1270    ;----------------------------------------------
                           A  1271    
001232                     A  1272    os_decimal_add
                           A  1273    
                           A  1274    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1275    
001232 C5                  A  1276    				push bc
001233 0E00                A  1277    				ld c,0
001235 1A                  A  1278    decdlp			ld a,(de)
001236 86                  A  1279    				add a,(hl)
001237 81                  A  1280    				add a,c
001238 FE0A                A  1281    				cp 10
00123A 38 0B               A  1282    				jr c,daddnc
00123C D60A                A  1283    				sub 10
00123E 0E01                A  1284    				ld c,1
001240 12                  A  1285    decnclp			ld (de),a
001241 23                  A  1286    				inc hl
001242 13                  A  1287    				inc de
001243 10 F0               A  1288    				djnz decdlp
001245 C1                  A  1289    				pop bc
001246 C9                  A  1290    				ret
001247 0E00                A  1291    daddnc			ld c,0
001249 18 F5               A  1292    				jr decnclp
                           A  1293    	
                           A  1294    ;----------------------------------------------
                           A  1295    
00124B                     A  1296    os_hex_to_decimal
                           A  1297    
                           A  1298    ; INPUT xDE hex longword
                           A  1299    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1300    
       00006780            A  1301    hex_to_convert		equ scratch_pad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       00006783            A  1302    decimal_digits		equ scratch_pad+3
       0000678B            A  1303    decimal_add_digits	equ scratch_pad+3+8
                           A  1304    
00124B ED53 80 67 00       A  1305    				ld (hex_to_convert),de
                           A  1306    		
001250 21 8B 67 00         A  1307    				ld hl,decimal_add_digits
001254 E5                  A  1308    				push hl
001255 11 83 67 00         A  1309    				ld de,decimal_digits
001259 AF                  A  1310    				xor a
00125A 0608                A  1311    				ld b,8
00125C 12                  A  1312    setupdec		ld (de),a
00125D 77                  A  1313    				ld (hl),a
00125E 23                  A  1314    				inc hl
00125F 13                  A  1315    				inc de
001260 10 FA               A  1316    				djnz setupdec
001262 E1                  A  1317    				pop hl
001263 3601                A  1318    				ld (hl),1
                           A  1319    	
001265 21 80 67 00         A  1320    				ld hl,hex_to_convert
001269 0603                A  1321    				ld b,3
00126B C5                  A  1322    decconvlp		push bc
00126C 7E                  A  1323    				ld a,(hl)
00126D CD 8B 12 00         A  1324    				call decadder
001271 CD A4 12 00         A  1325    				call decaddx16
001275 7E                  A  1326    				ld a,(hl)
001276 0F                  A  1327    				rrca
001277 0F                  A  1328    				rrca
001278 0F                  A  1329    				rrca
001279 0F                  A  1330    				rrca
00127A CD 8B 12 00         A  1331    				call decadder
00127E CD A4 12 00         A  1332    				call decaddx16
001282 C1                  A  1333    				pop bc
001283 23                  A  1334    				inc hl
001284 10 E5               A  1335    				djnz decconvlp
001286 21 83 67 00         A  1336    				ld hl,decimal_digits
00128A C9                  A  1337    				ret
                           A  1338    
                           A  1339    
                           A  1340    
00128B E60F                A  1341    decadder		and 15
00128D C8                  A  1342    				ret z
00128E 47                  A  1343    				ld b,a
00128F E5                  A  1344    				push hl
001290 C5                  A  1345    daddlp			push bc
001291 11 83 67 00         A  1346    				ld de,decimal_digits
001295 21 8B 67 00         A  1347    				ld hl,decimal_add_digits
001299 0608                A  1348    				ld b,8
00129B CD 32 12 00         A  1349    				call os_decimal_add
00129F C1                  A  1350    				pop bc
0012A0 10 EE               A  1351    				djnz daddlp	
0012A2 E1                  A  1352    				pop hl
0012A3 C9                  A  1353    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1354    			
                           A  1355    				
0012A4 E5                  A  1356    decaddx16		push hl
0012A5 0604                A  1357    				ld b,4							0012A7 C5                  A  1358    x16loop			push bc
0012A8 11 8B 67 00         A  1359    				ld de,decimal_add_digits
0012AC 21 8B 67 00         A  1360    				ld hl,decimal_add_digits
0012B0 0608                A  1361    				ld b,8
0012B2 CD 32 12 00         A  1362    				call os_decimal_add
0012B6 C1                  A  1363    				pop bc
0012B7 10 EE               A  1364    				djnz x16loop	
0012B9 E1                  A  1365    				pop hl
0012BA C9                  A  1366    				ret
                           A  1367    	
                           A  1368    	
                           A  1369    ;----------------------------------------------
                           A  1370    
0012BB                     A  1371    os_show_decimal
                           A  1372    
0012BB 11 83 60 00         A  1373    				ld de,output_line				0012BF 01090000            A  1374    				ld bc,9
0012C3 09                  A  1375    				add hl,bc
0012C4 060A                A  1376    				ld b,10
0012C6 7E                  A  1377    shdeclp			ld a,(hl)
0012C7 B7                  A  1378    				or a
0012C8 28 04               A  1379    				jr z,dnodigit
0012CA C630                A  1380    				add a,030h
0012CC 12                  A  1381    				ld (de),a
0012CD 13                  A  1382    				inc de
0012CE 2B                  A  1383    dnodigit		dec hl
0012CF 10 F5               A  1384    				djnz shdeclp
0012D1 AF                  A  1385    				xor a
0012D2 12                  A  1386    				ld (de),a
0012D3 CD 1B 13 00         A  1387    				call os_print_output_line
0012D7 C9                  A  1388    				ret
                           A  1389    				
                           A  1390    ;----------------------------------------------
                           A  1391    		
0012D8                     A  1392    os_copy_to_output_line
                           A  1393    	
0012D8 D5                  A  1394    				push de
0012D9 C5                  A  1395    				push bc
0012DA 11 83 60 00         A  1396    				ld de,output_line				0012DE 01510000            A  1397    				ld bc,max_buffer_chars+1		0012E2 EDA0                A  1398    os_cloll		ldi
0012E4 7E                  A  1399    				ld a,(hl)
0012E5 B7                  A  1400    				or a
0012E6 28 04               A  1401    				jr z,os_clold
0012E8 78                  A  1402    				ld a,b
0012E9 B1                  A  1403    				or c
0012EA 20 F6               A  1404    				jr nz,os_cloll
0012EC 12                  A  1405    os_clold		ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012ED C1                  A  1406    				pop bc
0012EE D1                  A  1407    				pop de
0012EF C9                  A  1408    				ret
                           A  1409    
                           A  1410    
                           A  1411    ;----------------------------------------------
                           A  1412    
0012F0                     A  1413    os_show_hex_address
                           A  1414    
0012F0 E5                  A  1415    				push hl							0012F1 21 83 60 00         A  1416    				ld hl,output_line
0012F5 ED53 25 60 00       A  1417    				ld (hex_address),de
0012FA 3A 27 60 00         A  1418    				ld a,(hex_address+2)
0012FE CD 68 10 00         A  1419    				call hexbyte_to_ascii
001302 18 10               A  1420    				jr shw_nt
                           A  1421    				
                           A  1422    
001304                     A  1423    os_show_hex_byte
                           A  1424    
001304 E5                  A  1425    				push hl							001305 21 83 60 00         A  1426    				ld hl,output_line
001309 CD 68 10 00         A  1427    				call hexbyte_to_ascii
00130D 18 09               A  1428    				jr shb_nt
                           A  1429    
                           A  1430    
                           A  1431    
00130F                     A  1432    os_show_hex_word
                           A  1433    
00130F E5                  A  1434    				push hl							001310 21 83 60 00         A  1435    				ld hl,output_line
001314 CD 8D 10 00         A  1436    shw_nt			call hexword_to_ascii
001318 3600                A  1437    shb_nt			ld (hl),0
00131A E1                  A  1438    				pop hl
                           A  1439    
                           A  1440    	
                           A  1441    
00131B                     A  1442    os_print_output_line
                           A  1443    
00131B E5                  A  1444    				push hl
00131C 21 83 60 00         A  1445    				ld hl,output_line
001320 CD 25 0F 00         A  1446    cproline		call os_print_string
001324 E1                  A  1447    				pop hl
001325 C9                  A  1448    				ret
                           A  1449    
                           A  1450    
                           A  1451    
001326                     A  1452    os_print_output_line_skip_zeroes
                           A  1453    
001326 E5                  A  1454    				push hl
001327 21 83 60 00         A  1455    				ld hl,output_line
00132B CD 45 10 00         A  1456    				call os_skip_leading_ascii_zero
00132F 18 EF               A  1457    				jr cproline
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1458    				
                           A  1459    		
                           A  1460    ;----------------------------------------------
                           A  1461    
001331                     A  1462    os_store_CPU_regs
                           A  1463    
001331 F3                  A  1464    				di								                           A  1465    
001332 33                  A  1466    				inc sp							001333 33                  A  1467    				inc sp
001334 33                  A  1468    				inc sp
001335 ED73 A4 5F 00       A  1469    				ld (store_spl),sp
00133A 3B                  A  1470    				dec sp							00133B 3B                  A  1471    				dec sp
00133C 3B                  A  1472    				dec sp
                           A  1473    				
00133D F5                  A  1474    				push af
00133E 32 87 5F 00         A  1475    				ld (store_a1),a					001342 08                  A  1476    				ex af,af'
001343 32 91 5F 00         A  1477    				ld (store_a2),a
001347 08                  A  1478    				ex af,af'
001348 ED43 88 5F 00       A  1479    				ld (store_bc1),bc		
00134D ED53 8B 5F 00       A  1480    				ld (store_de1),de
001352 22 8E 5F 00         A  1481    				ld (store_hl1),hl
001356 D9                  A  1482    				exx
001357 ED43 92 5F 00       A  1483    				ld (store_bc2),bc
00135C ED53 95 5F 00       A  1484    				ld (store_de2),de
001361 22 98 5F 00         A  1485    				ld (store_hl2),hl
001365 D9                  A  1486    				exx
001366 DD22 9B 5F 00       A  1487    				ld (store_ix),ix
00136B FD22 9E 5F 00       A  1488    				ld (store_iy),iy
                           A  1489    				
001370 ED6E                A  1490    			    ld a,MB
001372 32 A9 5F 00         A  1491    				ld (store_mbase),a
                           A  1492    								
001376 C5                  A  1493    				push bc
001377 0600                A  1494    				ld b,0
001379 20 02               A  1495    				jr nz,zfstzero					00137B CBF0                A  1496    				set 6,b
                           A  1497    
00137D 30 02               A  1498    zfstzero		jr nc,cfstzero					00137F CBC0                A  1499    				set 0,b
                           A  1500    
001381 F2 87 13 00         A  1501    cfstzero		jp p,sfstzero					001385 CBF8                A  1502    				set 7,b
                           A  1503    
001387 EA 8D 13 00         A  1504    sfstzero		jp pe,pfstzero					00138B CBD0                A  1505    				set 2,b
                           A  1506    
00138D ED57                A  1507    pfstzero		ld a,i			
00138F EA 95 13 00         A  1508    				jp pe,ifstzero					001393 CBE0                A  1509    				set 4,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1510    
001395 78                  A  1511    ifstzero		ld a,b
001396 32 AA 5F 00         A  1512    				ld (store_f),a
                           A  1513    				
00139A 3E00                A  1514    				ld a,os_location/65536			00139C ED6D                A  1515    				ld MB,a							00139E 40ED73 A7 5F        A  1516    				ld.sis (store_sps),sp
0013A3 3A A9 5F 00         A  1517    				ld a,(store_mbase)				0013A7 ED6D                A  1518    				ld MB,a
                           A  1519    				
0013A9 C1                  A  1520    				pop bc
0013AA F1                  A  1521    				pop af
0013AB FB                  A  1522    				ei
0013AC C9                  A  1523    				ret
                           A  1524    
                           A  1525    
                           A  1526    
0013AD                     A  1527    os_dont_store_registers
                           A  1528    
0013AD AF                  A  1529    				xor a
0013AE 32 AC 5F 00         A  1530    				ld (store_registers),a			0013B2 C9                  A  1531    				ret
                           A  1532    	
                           A  1533    	
                           A  1534    ;----------------------------------------------
                           A  1535    
0013B3                     A  1536    os_new_line_cond
                           A  1537    
0013B3 CD ED 19 00         A  1538    				call test_quiet_mode
0013B7 C0                  A  1539    				ret nz
                           A  1540    
                           A  1541    	
0013B8                     A  1542    os_new_line
                           A  1543    
0013B8 E5                  A  1544    				push hl
0013B9 21 7F 55 00         A  1545    				ld hl,crlfx2_txt+1
0013BD CD 25 0F 00         A  1546    				call os_print_string
0013C1 E1                  A  1547    				pop hl
0013C2 C9                  A  1548    				ret
                           A  1549    				
                           A  1550    ;----------------------------------------------
                           A  1551    
0013C3                     A  1552    os_set_cursor_position
                           A  1553    				
                           A  1554    												0013C3 3A BE 5D 00         A  1555    				ld a,(window_rows)				0013C7 3D                  A  1556    				dec a							0013C8 B9                  A  1557    				cp c
0013C9 38 14               A  1558    				jr c,badpos
0013CB 79                  A  1559    				ld a,c
0013CC 32 13 60 00         A  1560    				ld (cursor_y),a
                           A  1561    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013D0 3A C1 5D 00         A  1562    				ld a,(window_columns)
0013D4 3D                  A  1563    				dec a
0013D5 B8                  A  1564    				cp b
0013D6 38 07               A  1565    				jr c,badpos
0013D8 78                  A  1566    				ld a,b
0013D9 32 14 60 00         A  1567    				ld (cursor_x),a
0013DD AF                  A  1568    				xor a
0013DE C9                  A  1569    				ret				
                           A  1570    
0013DF 3E82                A  1571    badpos			ld a,82h
0013E1 B7                  A  1572    				or a
0013E2 C9                  A  1573    				ret
                           A  1574    
                           A  1575    
                           A  1576    					
                           A  1577    	
                           A  1578    	
0013E3                     A  1579    os_get_cursor_position
                           A  1580    
0013E3 ED4B 13 60 00       A  1581    				ld bc,(cursor_pos)				0013E8 BF                  A  1582    				cp a							0013E9 C9                  A  1583    				ret
                           A  1584    
                           A  1585    
                           A  1586    ;----------------------------------------------
                           A  1587    
0013EA                     A  1588    os_show_packed_text_cond
                           A  1589    
0013EA CD ED 19 00         A  1590    				call test_quiet_mode
0013EE C0                  A  1591    				ret nz
                           A  1592    
                           A  1593    	
0013EF                     A  1594    os_show_packed_text
                           A  1595    
                           A  1596    ; Construct sentence from internal dictionary u
                           A  1597    	
0013EF C5                  A  1598    				push bc
0013F0 D5                  A  1599    				push de
0013F1 DDE5                A  1600    				push ix
0013F3 DD21 83 60 00       A  1601    				ld ix,output_line
0013F8 7E                  A  1602    readpind		ld a,(hl)
0013F9 B7                  A  1603    				or a
0013FA 20 10               A  1604    				jr nz,getword					0013FC DD2B                A  1605    				dec ix							0013FE DD7700              A  1606    				ld (ix),a						                           A  1607    			
001401 E5                  A  1608    				push hl
001402 CD 1B 13 00         A  1609    				call os_print_output_line
001406 E1                  A  1610    				pop hl
                           A  1611    			
001407 DDE1                A  1612    				pop ix
001409 D1                  A  1613    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00140A C1                  A  1614    				pop bc
00140B C9                  A  1615    				ret
                           A  1616    				
00140C 11 8D 55 00         A  1617    getword			ld de,dictionary-1
001410 0E00                A  1618    				ld c,0
001412 13                  A  1619    dictloop		inc de
001413 1A                  A  1620    				ld a,(de)
001414 B7                  A  1621    				or a							001415 28 04               A  1622    				jr z,faword
001417 CB7F                A  1623    				bit 7,a							001419 28 F7               A  1624    				jr z,dictloop	
                           A  1625    			
00141B 0C                  A  1626    faword			inc c							00141C 79                  A  1627    				ld a,c
00141D BE                  A  1628    				cp (hl)
00141E 20 F2               A  1629    				jr nz,dictloop
001420 13                  A  1630    copytol			inc de							001421 1A                  A  1631    				ld a,(de)
001422 B7                  A  1632    				or a
001423 28 0B               A  1633    				jr z,eoword						001425 CB7F                A  1634    				bit 7,a
001427 20 07               A  1635    				jr nz,eoword
001429 DD7700              A  1636    				ld (ix),a						00142C DD23                A  1637    				inc ix
00142E 18 F0               A  1638    				jr copytol
001430 DD360020            A  1639    eoword			ld (ix),32						001434 DD23                A  1640    				inc ix
001436 23                  A  1641    				inc hl
001437 18 BF               A  1642    				jr readpind
                           A  1643    
                           A  1644    
                           A  1645    		
                           A  1646    ;--------- Mouse functions --------------------
                           A  1647    
001439                     A  1648    os_set_mouse_window
                           A  1649    
                           A  1650    ; Set: HL/DE = window size mouse pointer is to 
                           A  1651    	
001439 22 7A 61 00         A  1652    				ld (mouse_window_size_x),hl	 
00143D ED53 7D 61 00       A  1653    				ld (mouse_window_size_y),de
001442 21000000            A  1654    				ld hl,0
001446 22 80 61 00         A  1655    				ld (mouse_abs_x),hl
00144A 22 83 61 00         A  1656    				ld (mouse_abs_y),hl
00144E 3E01                A  1657    				ld a,1
001450 32 92 61 00         A  1658    				ld (mouse_new_window),a
001454 AF                  A  1659    				xor a
001455 C9                  A  1660    				ret
                           A  1661    				
                           A  1662    			
001456                     A  1663    os_get_mouse_motion
                           A  1664    			
                           A  1665    ; Returns: ZF = Set: Relative X coord in HL, Re
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1666    ;          ZF = Not set: Mouse driver not initi
                           A  1667    			
001456 3A 7D 5F 00         A  1668    				ld a,(devices_connected)
00145A E602                A  1669    				and 2
00145C EE02                A  1670    				xor 2
00145E C0                  A  1671    				ret nz
00145F AF                  A  1672    ms_reread		xor a
001460 32 79 61 00         A  1673    				ld (mouse_updated),a
001464 2A 72 61 00         A  1674    				ld hl,(mouse_disp_x)			001468 ED5B 75 61 00       A  1675    				ld de,(mouse_disp_y)
00146D 3A 79 61 00         A  1676    				ld a,(mouse_updated)			001471 B7                  A  1677    				or a
001472 20 EB               A  1678    				jr nz,ms_reread
001474 AF                  A  1679    mouse_end		xor a
001475 3A 78 61 00         A  1680    				ld a,(mouse_wheel)
001479 47                  A  1681    				ld b,a
00147A 3A 71 61 00         A  1682    				ld a,(mouse_buttons)
00147E C9                  A  1683    				ret
                           A  1684    			
                           A  1685    			
00147F                     A  1686    os_get_mouse_position
                           A  1687    
                           A  1688    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1689    ;          ZF = Not set: Mouse driver not initi
                           A  1690    				
00147F CD 56 14 00         A  1691    				call os_get_mouse_motion
001483 C0                  A  1692    				ret nz
001484 22 8C 61 00         A  1693    				ld (mouse_disp_x_buffer),hl
001488 ED53 8F 61 00       A  1694    				ld (mouse_disp_y_buffer),de
00148D 3A 92 61 00         A  1695    				ld a,(mouse_new_window)
001491 B7                  A  1696    				or a
001492 20 6C               A  1697    				jr nz,ms_nmw
                           A  1698    
001494 ED5B 86 61 00       A  1699    				ld de,(mouse_disp_x_old)
001499 AF                  A  1700    				xor a
00149A ED52                A  1701    				sbc hl,de
00149C EB                  A  1702    				ex de,hl
00149D 2A 80 61 00         A  1703    				ld hl,(mouse_abs_x)
0014A1 19                  A  1704    				add hl,de
0014A2 E5                  A  1705    				push hl
0014A3 C1                  A  1706    				pop bc
0014A4 DD210000 80         A  1707    				ld ix,800000h					0014A9 DD09                A  1708    				add ix,bc
0014AB 30 06               A  1709    				jr nc,ms_x_ok1
0014AD 01000000            A  1710    				ld bc,0
0014B1 18 10               A  1711    				jr ms_x_ok2
0014B3 ED5B 7A 61 00       A  1712    ms_x_ok1		ld de,(mouse_window_size_x)
0014B8 AF                  A  1713    				xor a
0014B9 ED52                A  1714    				sbc hl,de
0014BB 38 06               A  1715    				jr c,ms_x_ok2
0014BD ED4B 7A 61 00       A  1716    				ld bc,(mouse_window_size_x)		0014C2 0B                  A  1717    				dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C3 ED43 80 61 00       A  1718    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1719    					
0014C8 2A 8F 61 00         A  1720    				ld hl,(mouse_disp_y_buffer)
0014CC ED5B 89 61 00       A  1721    				ld de,(mouse_disp_y_old)
0014D1 AF                  A  1722    				xor a
0014D2 ED52                A  1723    				sbc hl,de
0014D4 EB                  A  1724    				ex de,hl
0014D5 2A 83 61 00         A  1725    				ld hl,(mouse_abs_y)
0014D9 19                  A  1726    				add hl,de
0014DA E5                  A  1727    				push hl
0014DB C1                  A  1728    				pop bc
0014DC DD210000 80         A  1729    				ld ix,800000h					0014E1 DD09                A  1730    				add ix,bc
0014E3 30 06               A  1731    				jr nc,ms_y_ok1
0014E5 01000000            A  1732    				ld bc,0
0014E9 18 10               A  1733    				jr ms_y_ok2
0014EB ED5B 7D 61 00       A  1734    ms_y_ok1		ld de,(mouse_window_size_y)
0014F0 AF                  A  1735    				xor a
0014F1 ED52                A  1736    				sbc hl,de
0014F3 38 06               A  1737    				jr c,ms_y_ok2
0014F5 ED4B 7D 61 00       A  1738    				ld bc,(mouse_window_size_y)		0014FA 0B                  A  1739    				dec bc
0014FB ED43 83 61 00       A  1740    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1741    
                           A  1742    				
001500 2A 8C 61 00         A  1743    ms_nmw			ld hl,(mouse_disp_x_buffer)
001504 22 86 61 00         A  1744    				ld (mouse_disp_x_old),hl
001508 2A 8F 61 00         A  1745    				ld hl,(mouse_disp_y_buffer)
00150C 22 89 61 00         A  1746    				ld (mouse_disp_y_old),hl
                           A  1747    				
001510 2A 80 61 00         A  1748    				ld hl,(mouse_abs_x)
001514 ED5B 83 61 00       A  1749    				ld de,(mouse_abs_y)
                           A  1750    				
001519 AF                  A  1751    				xor a
00151A 32 92 61 00         A  1752    				ld (mouse_new_window),a
00151E C3 74 14 00         A  1753    				jp mouse_end
                           A  1754    				
                           A  1755    	
                           A  1756    ;==============================================
                           A  1757    ;----- General Subroutines --------------------
                           A  1758    ;==============================================
                           A  1759    
                           A  1760    ; .--------------.
                           A  1761    ; ! CRC Checksum !
                           A  1762    ; '--------------'
                           A  1763    
                           A  1764    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1765    
001522                     A  1766    crc_checksum
                           A  1767    
001522 21FFFF00            A  1768    				ld hl,0ffffh		
001526 1A                  A  1769    crcloop			ld a,(de)			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001527 AC                  A  1770    				xor h			
001528 67                  A  1771    				ld h,a			
001529 0608                A  1772    				ld b,8
00152B 4029                A  1773    crcbyte			add.sis hl,hl					00152D 30 08               A  1774    				jr nc,crcnext
00152F 7C                  A  1775    				ld a,h
001530 EE10                A  1776    				xor 10h
001532 67                  A  1777    				ld h,a
001533 7D                  A  1778    				ld a,l
001534 EE21                A  1779    				xor 21h
001536 6F                  A  1780    				ld l,a
001537 10 F2               A  1781    crcnext			djnz crcbyte
001539 13                  A  1782    				inc de
00153A 0D                  A  1783    				dec c
00153B 20 E9               A  1784    				jr nz,crcloop
00153D C9                  A  1785    				ret
                           A  1786    
                           A  1787    
                           A  1788    ;----------------------------------------------
                           A  1789    
00153E                     A  1790    os_get_key_mod_flags
                           A  1791    
00153E 3A 66 61 00         A  1792    				ld a,(key_mod_flags)
001542 BF                  A  1793    				cp a							001543 C9                  A  1794    				ret
                           A  1795    
                           A  1796    ;----------------------------------------------
                           A  1797    
001544                     A  1798    os_get_display_size
                           A  1799    			
001544 ED4B BE 5D 00       A  1800    				ld bc,(display_parameters)
001549 BF                  A  1801    				cp a
00154A C9                  A  1802    				ret
                           A  1803    
                           A  1804    ;----------------------------------------------
                           A  1805    
00154B                     A  1806    os_bchl_memfill
                           A  1807    
                           A  1808    ; fill memory from xHL with A. Count in xBC.
                           A  1809    		
00154B 77                  A  1810    mf_loop			ld (hl),a
00154C EDA1                A  1811    				cpi								00154E EA 4B 15 00         A  1812    				jp pe,mf_loop
001552 C9                  A  1813    				ret
                           A  1814    	
                           A  1815    ;----------------------------------------------
                           A  1816    
001553 7B                  A  1817    ext_set_pen		ld a,e
                           A  1818    
001554 32 97 5D 00         A  1819    os_set_pen		ld (current_pen),a
001558 BF                  A  1820    				cp a							001559 C9                  A  1821    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1822    
                           A  1823    ;----------------------------------------------
                           A  1824    	
00155A 3A 97 5D 00         A  1825    os_get_pen		ld a,(current_pen)
00155E BF                  A  1826    				cp a							00155F C9                  A  1827    				ret	
                           A  1828    
                           A  1829    ;----------------------------------------------
                           A  1830    
001560                     A  1831    ext_background_colours
                           A  1832    				
001560 CC 72 15 00         A  1833    				call z,mbase_hl
001564 C3 21 3C 00         A  1834    				jp hswc_set_ui_colours
                           A  1835    				
                           A  1836    				
                           A  1837    ;----------------------------------------------
                           A  1838    
001568                     A  1839    os_get_xde_msb	
                           A  1840    			
001568 ED53 2B 60 00       A  1841    				ld (xrr_temp),de				00156D 3A 2D 60 00         A  1842    				ld a,(xrr_temp+2)
001571 C9                  A  1843    				ret
                           A  1844    
                           A  1845    ;----------------------------------------------
                           A  1846    
001572 F5                  A  1847    mbase_hl		push af
001573 22 2B 60 00         A  1848    				ld (xrr_temp),hl				001577 ED6E                A  1849    				ld a,MB
001579 32 2D 60 00         A  1850    				ld (xrr_temp+2),a
00157D 2A 2B 60 00         A  1851    				ld hl,(xrr_temp)
001581 F1                  A  1852    				pop af
001582 C9                  A  1853    				ret
                           A  1854    				
001583 F5                  A  1855    mbase_de		push af
001584 ED53 2B 60 00       A  1856    				ld (xrr_temp),de				001589 ED6E                A  1857    				ld a,MB
00158B 32 2D 60 00         A  1858    				ld (xrr_temp+2),a
00158F ED5B 2B 60 00       A  1859    				ld de,(xrr_temp)
001594 F1                  A  1860    				pop af
001595 C9                  A  1861    				ret
                           A  1862    
001596 F5                  A  1863    mbase_ix		push af
001597 DD22 2B 60 00       A  1864    				ld (xrr_temp),ix				00159C ED6E                A  1865    				ld a,MB
00159E 32 2D 60 00         A  1866    				ld (xrr_temp+2),a
0015A2 DD2A 2B 60 00       A  1867    				ld ix,(xrr_temp)
0015A7 F1                  A  1868    				pop af
0015A8 C9                  A  1869    				ret
                           A  1870    							
                           A  1871    ;----------------------------------------------
                           A  1872    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1873    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1874    
0015A9                     A  1875    unpack_rle
                           A  1876    
                           A  1877    ;set xHL = source address of packed file
                           A  1878    ;set xDE = destination address for unpacked dat
                           A  1879    ;set xBC = length of packed file
                           A  1880    
0015A9 E5                  A  1881    			push hl	
0015AA DDE1                A  1882    			pop ix
0015AC 0B                  A  1883    			dec bc								0015AD 23                  A  1884    			inc hl
0015AE DD7E00              A  1885    unp_gtok	ld a,(ix)							0015B1 BE                  A  1886    unp_next	cp (hl)								0015B2 28 07               A  1887    			jr z,unp_brun						0015B4 EDA0                A  1888    			ldi									0015B6 EA B1 15 00         A  1889    			jp pe,unp_next						0015BA C9                  A  1890    			ret
                           A  1891    	
0015BB C5                  A  1892    unp_brun	push bc								0015BC 23                  A  1893    			inc hl		
0015BD 7E                  A  1894    			ld a,(hl)							0015BE 23                  A  1895    			inc hl		
0015BF 46                  A  1896    			ld b,(hl)							0015C0 23                  A  1897    			inc hl
                           A  1898    	
0015C1 12                  A  1899    unp_rllp	ld (de),a							0015C2 13                  A  1900    			inc de			
0015C3 10 FC               A  1901    			djnz unp_rllp
                           A  1902    	
0015C5 C1                  A  1903    			pop bc	
0015C6 0B                  A  1904    			dec bc								0015C7 0B                  A  1905    			dec bc
0015C8 0B                  A  1906    			dec bc
0015C9 E5                  A  1907    			push hl								0015CA 21000000            A  1908    			ld hl,0
0015CE B7                  A  1909    			or a
0015CF ED4A                A  1910    			adc hl,bc
0015D1 E1                  A  1911    			pop hl
0015D2 20 DA               A  1912    			jr nz,unp_gtok
0015D4 C9                  A  1913    			ret	
                           A  1914    	
                           A  1915    ;----------------------------------------------
                           A  1916    ; Commonly called error messages - gets message
                           A  1917    ;----------------------------------------------
                           A  1918    
                           A  1919    
0015D5 3E0D                A  1920    os_no_fn_error		ld a,0dh
0015D7 B7                  A  1921    					or a
0015D8 C9                  A  1922    					ret
                           A  1923    			
0015D9 3E15                A  1924    os_fn_too_long		ld a,15h
0015DB B7                  A  1925    					or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015DC C9                  A  1926    					ret
                           A  1927    				
0015DD 3E16                A  1928    os_no_start_addr	ld a,16h
0015DF B7                  A  1929    					or a
0015E0 C9                  A  1930    					ret
                           A  1931    			
0015E1 3E17                A  1932    os_no_filesize		ld a,17h
0015E3 B7                  A  1933    					or a
0015E4 C9                  A  1934    					ret
                           A  1935    			
0015E5 3E18                A  1936    os_abort_save		ld a,18h
0015E7 B7                  A  1937    					or a
0015E8 C9                  A  1938    					ret
                           A  1939    			
0015E9 3E1C                A  1940    os_no_e_addr_error	ld a,1ch
0015EB B7                  A  1941    					or a
0015EC C9                  A  1942    					ret
                           A  1943    			
0015ED 3E1D                A  1944    os_no_d_addr_error	ld a,1dh
0015EF B7                  A  1945    					or a
0015F0 C9                  A  1946    					ret
                           A  1947    				
0015F1 3E1E                A  1948    os_range_error		ld a,1eh
0015F3 B7                  A  1949    					or a
0015F4 C9                  A  1950    					ret
                           A  1951    			
0015F5 3E1F                A  1952    os_no_args_error	ld a,1fh
0015F7 B7                  A  1953    					or a
0015F8 C9                  A  1954    					ret	
                           A  1955    
                           A  1956    ;----------------------------------------------
                           A  1957    
                           A  1958    ; Set xHL to address of zero terminated filenam
                           A  1959    ; RETURNS:	C:xDE  = File length
                           A  1960    ;    		HL     = Start cluster of file
                           A  1961    
0015F9 CC 72 15 00         A  1962    ext_find_file	call z,mbase_hl
                           A  1963    
0015FD CD 70 51 00         A  1964    os_find_file	call fs_hl_to_filename
001601 CD 11 49 00         A  1965    				call fs_open_file_command		001605 38 02               A  1966    				jr c,os_fferr					001607 B7                  A  1967    				or a							001608 C9                  A  1968    				ret 		
                           A  1969    								
001609 47                  A  1970    os_fferr		ld b,a							00160A AF                  A  1971    				xor a			
00160B 4F                  A  1972    				ld c,a
00160C 0C                  A  1973    				inc c							00160D C9                  A  1974    				ret	
                           A  1975    
                           A  1976    ;----------------------------------------------
                           A  1977    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00160E                     A  1978    os_set_load_length
                           A  1979    
00160E ED53 C7 53 00       A  1980    				ld (fs_file_transfer_length),de
001613 BF                  A  1981    				cp a							001614 C9                  A  1982    				ret
                           A  1983    				
                           A  1984    ;----------------------------------------------
                           A  1985    
001615                     A  1986    ext_set_file_pointer
                           A  1987    
001615 79                  A  1988    				ld a,c
                           A  1989    				
001616                     A  1990    os_set_file_pointer
                           A  1991    
                           A  1992    ; Moves the 'start of file' pointer allowing ra
                           A  1993    ; Note: File pointer is reset by opening a file
                           A  1994    ; by normal read function.
                           A  1995    
001616 ED53 BB 53 00       A  1996    				ld (fs_file_pointer),de			00161B 32 BE 53 00         A  1997    				ld (fs_file_pointer+3),a
00161F F5                  A  1998    				push af
001620 AF                  A  1999    				xor a
001621 32 ED 53 00         A  2000    				ld (fs_filepointer_valid),a		001625 F1                  A  2001    				pop af
001626 BF                  A  2002    				cp a							001627 C9                  A  2003    				ret
                           A  2004    				
                           A  2005    ;----------------------------------------------
                           A  2006    
                           A  2007    ; set xHL = load address 
                           A  2008    ; (Before calling this routine, call os_find_fi
                           A  2009    
001628                     A  2010    ext_read_bytes_from_file
                           A  2011    
001628 CC 72 15 00         A  2012    				call z,mbase_hl					                           A  2013    				
00162C                     A  2014    os_read_bytes_from_file
                           A  2015    
00162C 22 D0 53 00         A  2016    				ld (fs_ez80_address),hl			001630 CD 5C 49 00         A  2017    				call fs_read_data_command
001634 38 D3               A  2018    				jr c,os_fferr
001636 B7                  A  2019    				or a
001637 C9                  A  2020    				ret
                           A  2021    
                           A  2022    ;----------------------------------------------
                           A  2023    
                           A  2024    ; Before calling, set xHL = address of zero ter
                           A  2025    
001638 CC 72 15 00         A  2026    ext_create_file	call z,mbase_hl
                           A  2027    
00163C CD 70 51 00         A  2028    os_create_file	call fs_hl_to_filename
001640 CD 12 4C 00         A  2029    				call fs_create_file_command		Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001644 DA 09 16 00         A  2030    				jp c,os_fferr					001648 B7                  A  2031    				or a
001649 C9                  A  2032    				ret
                           A  2033    
                           A  2034    ;----------------------------------------------
                           A  2035    
00164A                     A  2036    ext_write_bytes_to_file
                           A  2037    
00164A CC 72 15 00         A  2038    				call z,mbase_hl
00164E CC 83 15 00         A  2039    				call z,mbase_de
                           A  2040    
001652                     A  2041    os_write_bytes_to_file
                           A  2042    
                           A  2043    ; Before calling, set..
                           A  2044    
                           A  2045    ; xDE   = address to save data from
                           A  2046    ; xBC   = number of bytes to save
                           A  2047    ; xHL   = address of null-terminated ascii name
                           A  2048    
                           A  2049    ; On return:
                           A  2050    
                           A  2051    ; If zero flag NOT set, there was an error.
                           A  2052    ; If   A = $00, b = hardware error code
                           A  2053    ; Else A = File system error code
                           A  2054    
                           A  2055    ; NOTE:
                           A  2056    ; Will return 'file not found' if the file has 
                           A  2057    				
001652 ED43 C7 53 00       A  2058    				ld (fs_file_transfer_length),bc
001657 ED53 D0 53 00       A  2059    				ld (fs_ez80_address),de	 	
00165C CD 70 51 00         A  2060    				call fs_hl_to_filename
001660 CD 44 4C 00         A  2061    				call fs_write_bytes_to_file_com
001664 DA 09 16 00         A  2062    				jp c,os_fferr
001668 B7                  A  2063    				or a
001669 C9                  A  2064    				ret
                           A  2065    		
                           A  2066    		
                           A  2067    ;----------------------------------------------
                           A  2068    	
                           A  2069    
00166A                     A  2070    os_check_volume_format
                           A  2071    
00166A CD 6F 47 00         A  2072    				call fs_check_disk_format
00166E DA 09 16 00         A  2073    os_rffsc		jp c,os_fferr
001672 B7                  A  2074    				or a
001673 C9                  A  2075    				ret
                           A  2076    
                           A  2077    ;----------------------------------------------
                           A  2078    
                           A  2079    
001674 7B                  A  2080    ext_format		ld a,e
001675 CC 72 15 00         A  2081    				call z,mbase_hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2082    
001679 E5                  A  2083    os_format		push hl							00167A CD 80 1A 00         A  2084    				call dev_to_driver_lookup
00167E E1                  A  2085    				pop hl
00167F 38 04               A  2086    				jr c,sdevok
001681 3ED0                A  2087    				ld a,0d0h						001683 B7                  A  2088    				or a
001684 C9                  A  2089    				ret
                           A  2090    
001685 F5                  A  2091    sdevok			push af				
001686 11 97 53 00         A  2092    				ld de,fs_sought_filename
00168A CD 7F 52 00         A  2093    				call fs_clear_filename
00168E 060B                A  2094    				ld b,11
001690 CD FE 11 00         A  2095    				call os_copy_ascii_run
001694 F1                  A  2096    				pop af
                           A  2097    				
001695 21 39 5E 00         A  2098    				ld hl,current_driver
001699 46                  A  2099    				ld b,(hl)
00169A 77                  A  2100    				ld (hl),a
00169B C5                  A  2101    				push bc
00169C E5                  A  2102    				push hl
00169D CD E4 45 00         A  2103    				call fs_format_device_command
0016A1 E1                  A  2104    				pop hl
0016A2 C1                  A  2105    				pop bc
0016A3 70                  A  2106    				ld (hl),b
0016A4 18 C8               A  2107    				jr os_rffsc
                           A  2108    
                           A  2109    
                           A  2110    ;----------------------------------------------
                           A  2111    
                           A  2112    
0016A6 CC 72 15 00         A  2113    ext_make_dir	call z,mbase_hl					                           A  2114    
0016AA CD 70 51 00         A  2115    os_make_dir		call fs_hl_to_filename
0016AE CD 8A 4A 00         A  2116    				call fs_make_dir_command
0016B2 18 BA               A  2117    				jr os_rffsc
                           A  2118    
                           A  2119    
                           A  2120    ;----------------------------------------------
                           A  2121    
                           A  2122    
0016B4 CC 72 15 00         A  2123    ext_change_dir	call z,mbase_hl					                           A  2124    
0016B8 CD 70 51 00         A  2125    os_change_dir	call fs_hl_to_filename
0016BC CD BD 48 00         A  2126    				call fs_change_dir_command
0016C0 18 AC               A  2127    				jr os_rffsc
                           A  2128    				
                           A  2129    	
                           A  2130    ;----------------------------------------------
                           A  2131    	
                           A  2132    	
0016C2 CD EE 48 00         A  2133    os_parent_dir	call fs_parent_dir_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016C6 18 A6               A  2134    				jr os_rffsc
                           A  2135    				
                           A  2136    
                           A  2137    ;----------------------------------------------
                           A  2138    
                           A  2139    	
0016C8 CD E2 48 00         A  2140    os_root_dir		call fs_goto_root_dir_command
0016CC 18 A0               A  2141    				jr os_rffsc
                           A  2142    
                           A  2143    
                           A  2144    ;----------------------------------------------
                           A  2145    
                           A  2146    
0016CE CC 72 15 00         A  2147    ext_erase_file	call z,mbase_hl					                           A  2148    
0016D2 CD 70 51 00         A  2149    os_erase_file	call fs_hl_to_filename
0016D6 CD D3 4D 00         A  2150    				call fs_erase_file_command
0016DA 18 92               A  2151    				jr os_rffsc
                           A  2152    	
                           A  2153    
                           A  2154    ;----------------------------------------------
                           A  2155    
                           A  2156    
0016DC                     A  2157    os_goto_first_dir_entry	
                           A  2158    
0016DC CD 2E 4E 00         A  2159    				call fs_goto_first_dir_entry
0016E0 18 8C               A  2160    				jr os_rffsc
                           A  2161    
                           A  2162    
                           A  2163    ;----------------------------------------------
                           A  2164    
                           A  2165    
0016E2                     A  2166    os_get_dir_entry		
                           A  2167    
0016E2 CD 45 4E 00         A  2168    				call fs_get_dir_entry	
0016E6 18 86               A  2169    				jr os_rffsc
                           A  2170    
                           A  2171    
                           A  2172    ;----------------------------------------------
                           A  2173    
                           A  2174    
0016E8                     A  2175    os_goto_next_dir_entry	
                           A  2176    	
0016E8 CD D2 4E 00         A  2177    				call fs_goto_next_dir_entry	
0016EC 18 80               A  2178    				jr os_rffsc
                           A  2179    
                           A  2180    
                           A  2181    ;----------------------------------------------
                           A  2182    
                           A  2183    
0016EE                     A  2184    os_get_current_dir_name
                           A  2185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016EE CD 36 52 00         A  2186    				call fs_get_current_dir_name
0016F2 C3 6E 16 00         A  2187    				jr os_rffsc
                           A  2188    				
                           A  2189    
                           A  2190    ;----------------------------------------------
                           A  2191    
                           A  2192    
0016F6 CC 72 15 00         A  2193    ext_rename_file	call z,mbase_hl
0016FA CC 83 15 00         A  2194    				call z,mbase_de
                           A  2195    
0016FE D5                  A  2196    os_rename_file	push de
0016FF CD 6A 51 00         A  2197    				call fs_hl_to_alt_filename		001703 E1                  A  2198    				pop hl				
001704 CD 70 51 00         A  2199    				call fs_hl_to_filename	
001708 CD EA 4D 00         A  2200    				call fs_rename_command
00170C C3 6E 16 00         A  2201    				jr os_rffsc
                           A  2202    				
                           A  2203    
                           A  2204    ;----------------------------------------------
                           A  2205    
                           A  2206    
001710 CC 72 15 00         A  2207    ext_delete_dir	call z,mbase_hl					                           A  2208    
001714 CD 70 51 00         A  2209    os_delete_dir	call fs_hl_to_filename
001718 CD 63 4B 00         A  2210    				call fs_delete_dir_command
00171C C3 6E 16 00         A  2211    				jp os_rffsc
                           A  2212    	
                           A  2213    	
                           A  2214    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2215    
                           A  2216    
001720                     A  2217    ext_read_sector
001720 CD 6B 17 00         A  2218    				call ext_sector_access_preamble
001724 C0                  A  2219    				ret nz
001725 32 39 5E 00         A  2220    				ld (current_driver),a
001729 CD 0D 53 00         A  2221    				call fs_read_sector
00172D 20 11               A  2222    				jr nz,sect_done
00172F 38 0F               A  2223    				jr c,sect_done
001731 21 80 65 00         A  2224    				ld hl,sector_buffer
001735 ED5B 49 5E 00       A  2225    				ld de,(sector_rd_wr_addr)
00173A 01000200            A  2226    				ld bc,512
00173E EDB0                A  2227    				ldir			
001740 F5                  A  2228    sect_done		push af
001741 3A 6F 5F 00         A  2229    				ld a,(sys_driver_backup)		001745 32 39 5E 00         A  2230    				ld (current_driver),a
001749 F1                  A  2231    				pop af
00174A C3 6E 16 00         A  2232    				jp os_rffsc
                           A  2233    				
                           A  2234    
00174E                     A  2235    ext_write_sector
                           A  2236    			
00174E CD 6B 17 00         A  2237    				call ext_sector_access_preamble
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001752 C0                  A  2238    				ret nz
001753 32 39 5E 00         A  2239    				ld (current_driver),a
001757 2A 49 5E 00         A  2240    				ld hl,(sector_rd_wr_addr)
00175B 11 80 65 00         A  2241    				ld de,sector_buffer
00175F 01000200            A  2242    				ld bc,512
001763 EDB0                A  2243    				ldir			
001765 CD 25 53 00         A  2244    				call fs_write_sector
001769 18 D5               A  2245    				jr sect_done
                           A  2246    
                           A  2247    
00176B                     A  2248    ext_sector_access_preamble
                           A  2249    
00176B CC 72 15 00         A  2250    				call z,mbase_hl
00176F 22 49 5E 00         A  2251    				ld (sector_rd_wr_addr),hl
                           A  2252    				
001773 78                  A  2253    				ld a,b
001774 F5                  A  2254    				push af							001775 DD21 0F 60 00       A  2255    				ld ix,sector_lba0
00177A DD1F00              A  2256    				ld (ix),de						00177D DD7103              A  2257    				ld (ix+3),c
001780 CD 80 1A 00         A  2258    				call dev_to_driver_lookup		001784 E5                  A  2259    				push hl
001785 DDE1                A  2260    				pop ix
001787 2A 0F 60 00         A  2261    				ld hl,(sector_lba0)				00178B 3A 12 60 00         A  2262    				ld a,(sector_lba3)				00178F DD0701              A  2263    				ld bc,(ix+1)					001792 B7                  A  2264    				or a							001793 ED42                A  2265    				sbc hl,bc
001795 DD9E04              A  2266    				sbc a,(ix+4)
001798 38 05               A  2267    				jr c,range_ok
00179A F1                  A  2268    				pop af
00179B 3ED5                A  2269    				ld a,0d5h						00179D B7                  A  2270    				or a							00179E C9                  A  2271    				ret
                           A  2272    	
00179F 3A 39 5E 00         A  2273    range_ok		ld a,(current_driver)
0017A3 32 6F 5F 00         A  2274    				ld (sys_driver_backup),a
0017A7 F1                  A  2275    				pop af							0017A8 CD 80 1A 00         A  2276    				call dev_to_driver_lookup
0017AC 30 02               A  2277    				jr nc,bad_dev
0017AE BF                  A  2278    os_null			cp a							0017AF C9                  A  2279    				ret
                           A  2280    					
0017B0 3ED0                A  2281    bad_dev			ld a,0d0h						0017B2 B7                  A  2282    				or a							0017B3 C9                  A  2283    				ret	
                           A  2284    			
                           A  2285    
                           A  2286    ;----------------------------------------------
                           A  2287    
                           A  2288    
0017B4                     A  2289    os_get_device_info
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2290    
0017B4 21 EA 5E 00         A  2291    				ld hl,host_device_hardware_info
0017B8 11 4C 5E 00         A  2292    				ld de,driver_table
0017BC 3A 3A 5E 00         A  2293    				ld a,(device_count)
0017C0 47                  A  2294    				ld b,a
0017C1 3A 39 5E 00         A  2295    				ld a,(current_driver)
0017C5 BF                  A  2296    				cp a
0017C6 C9                  A  2297    				ret
                           A  2298    
                           A  2299    
                           A  2300    
                           A  2301    
0017C7                     A  2302    os_get_volume_info
                           A  2303    
0017C7 21 6A 5E 00         A  2304    				ld hl,volume_mount_list	
0017CB 3A 3B 5E 00         A  2305    				ld a,(volume_count)
0017CF 47                  A  2306    				ld b,a
0017D0 3A 38 5E 00         A  2307    				ld a,(current_volume)
0017D4 C9                  A  2308    				ret
                           A  2309    				
                           A  2310    		
                           A  2311    ;----------------------------------------------
                           A  2312    
                           A  2313    
0017D5                     A  2314    ext_serial_get_header
                           A  2315    
0017D5 CC 72 15 00         A  2316    				call z,mbase_hl
0017D9 7B                  A  2317    				ld a,e
0017DA CD 77 43 00         A  2318    				call serial_get_header
0017DE C9                  A  2319    				ret
                           A  2320    				
                           A  2321    				
0017DF                     A  2322    ext_serial_receive_file
                           A  2323    				
0017DF CC 72 15 00         A  2324    				call z,mbase_hl
0017E3 CD 12 44 00         A  2325    				call serial_receive_file
0017E7 C9                  A  2326    				ret
                           A  2327    				
                           A  2328    	
0017E8                     A  2329    ext_serial_send_file
                           A  2330    
0017E8 CC 72 15 00         A  2331    				call z,mbase_hl
0017EC CC 96 15 00         A  2332    				call z,mbase_ix				
0017F0 CD DB 44 00         A  2333    				call serial_send_file
0017F4 C9                  A  2334    				ret
                           A  2335    
                           A  2336    
0017F5                     A  2337    ext_serial_tx
0017F5 7B                  A  2338    				ld a,e
0017F6 CD EA 3A 00         A  2339    				call send_serial_byte
0017FA AF                  A  2340    				xor a							0017FB C9                  A  2341    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2342    
                           A  2343    
0017FC                     A  2344    ext_serial_rx
0017FC 7B                  A  2345    				ld a,e
0017FD 32 08 5E 00         A  2346    				ld (serial_timeout),a
001801 CD AF 3A 00         A  2347    				call receive_serial_byte
001805 C9                  A  2348    				ret
                           A  2349    				
                           A  2350    
                           A  2351    ;----------------------------------------------
                           A  2352    
001806                     A  2353    ext_mount_volumes
                           A  2354    
001806 7B                  A  2355    				ld a,e
                           A  2356    
001807                     A  2357    os_mount_volumes
                           A  2358    				
001807 32 70 5F 00         A  2359    				ld (os_quiet_mode),a			                           A  2360    				
00180B 21 06 55 00         A  2361    				ld hl,storage_txt
00180F CD 20 0F 00         A  2362    				call os_print_string_cond
001813 CD 3B 18 00         A  2363    				call mount_go
001817 AF                  A  2364    				xor a
001818 32 38 5E 00         A  2365    tvloop			ld (current_volume),a
00181C CD 96 1A 00         A  2366    				call os_change_volume			001820 C8                  A  2367    				ret z							001821 3A 38 5E 00         A  2368    				ld a,(current_volume)			001825 3C                  A  2369    				inc a
001826 FE08                A  2370    				cp max_volumes
001828 20 EE               A  2371    				jr nz,tvloop
00182A 3A 3A 5E 00         A  2372    				ld a,(device_count)
00182E B7                  A  2373    				or a
00182F 20 08               A  2374    				jr nz,mfsdevs
001831 21 22 5C 00         A  2375    				ld hl,none_found_msg
001835 CD EA 13 00         A  2376    				call os_show_packed_text_cond
001839 AF                  A  2377    mfsdevs			xor a
00183A C9                  A  2378    				ret
                           A  2379    
                           A  2380    
                           A  2381    
00183B 21 6A 5E 00         A  2382    mount_go		ld hl,volume_mount_list			00183F 01800000            A  2383    				ld bc,max_volumes*16
001843 AF                  A  2384    clrdl_lp		xor a
001844 CD 4B 15 00         A  2385    				call os_bchl_memfill
                           A  2386    								
001848 21 52 5E 00         A  2387    				ld hl,volume_dir_clusters		00184C 01180000            A  2388    				ld bc,max_volumes*3		
001850 AF                  A  2389    				xor a	
001851 CD 4B 15 00         A  2390    				call os_bchl_memfill	
                           A  2391    			
001855 11 EA 5E 00         A  2392    				ld de,host_device_hardware_info
001859 ED53 6A 5F 00       A  2393    				ld (dhwn_temp_pointer),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2394    				
00185E FD21 6A 5E 00       A  2395    				ld iy,volume_mount_list
001863 AF                  A  2396    				xor a
001864 32 3B 5E 00         A  2397    				ld (volume_count),a
001868 32 3A 5E 00         A  2398    				ld (device_count),a
00186C 32 39 5E 00         A  2399    mnt_loop		ld (current_driver),a			001870 CD 0C 1A 00         A  2400    				call locate_driver_base			001874 21000000            A  2401    				ld hl,0
001878 AF                  A  2402    				xor a
001879 ED5A                A  2403    				adc hl,de
00187B C8                  A  2404    				ret z							00187C EB                  A  2405    				ex de,hl						00187D FDE5                A  2406    				push iy
00187F CD 90 18 00         A  2407    				call find_dev					001883 FDE1                A  2408    				pop iy							001885 DC 91 18 00         A  2409    				call c,got_dev		
001889 3A 39 5E 00         A  2410    nxt_drv			ld a,(current_driver)			00188D 3C                  A  2411    				inc a
00188E 18 DC               A  2412    				jr mnt_loop
                           A  2413    
                           A  2414    				
001890 E9                  A  2415    find_dev		jp (hl)
                           A  2416    			
                           A  2417    			
001891 E5                  A  2418    got_dev			push hl							001892 D5                  A  2419    				push de							001893 C5                  A  2420    				push bc
001894 CD B3 13 00         A  2421    				call os_new_line_cond			001898 015B0100            A  2422    				ld bc,015bh
00189C CD 1D 1A 00         A  2423    				call os_print_multiple_chars_co
0018A0 3A 39 5E 00         A  2424    				ld a,(current_driver)
0018A4 CD 0C 1A 00         A  2425    				call locate_driver_base
0018A8 210C0000            A  2426    				ld hl,0ch
0018AC 19                  A  2427    				add hl,de
0018AD CD 20 0F 00         A  2428    				call os_print_string_cond		0018B1 015D0100            A  2429    				ld bc,015dh
0018B5 CD 1D 1A 00         A  2430    				call os_print_multiple_chars_co
0018B9 C1                  A  2431    				pop bc
0018BA D1                  A  2432    				pop de
0018BB AF                  A  2433    				xor a
0018BC 32 6E 5F 00         A  2434    				ld (vols_on_device_temp),a
                           A  2435    				
0018C0 21 3A 5E 00         A  2436    				ld hl,device_count
0018C4 34                  A  2437    				inc (hl)						0018C5 3A 39 5E 00         A  2438    				ld a,(current_driver)
0018C9 2A 6A 5F 00         A  2439    				ld hl,(dhwn_temp_pointer)	
0018CD 77                  A  2440    				ld (hl),a
0018CE 23                  A  2441    				inc hl
0018CF 73                  A  2442    				ld (hl),e						0018D0 FD7304              A  2443    				ld (iy+4),e						0018D3 23                  A  2444    				inc hl							0018D4 72                  A  2445    				ld (hl),d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018D5 FD7205              A  2446    				ld (iy+5),d
0018D8 23                  A  2447    				inc hl
0018D9 71                  A  2448    				ld (hl),c			
0018DA FD7106              A  2449    				ld (iy+6),c
0018DD 23                  A  2450    				inc hl
0018DE 70                  A  2451    				ld (hl),b						0018DF 23                  A  2452    				inc hl
0018E0 D1                  A  2453    				pop de
0018E1 EB                  A  2454    				ex de,hl
0018E2 01160000            A  2455    				ld bc,22
0018E6 EDB0                A  2456    				ldir							0018E8 AF                  A  2457    				xor a
0018E9 0605                A  2458    				ld b,5		
0018EB 12                  A  2459    clrrode			ld (de),a						0018EC 13                  A  2460    				inc de
0018ED 10 FC               A  2461    				djnz clrrode
0018EF ED53 6A 5F 00       A  2462    				ld (dhwn_temp_pointer),de		                           A  2463    					
0018F4 AF                  A  2464    				xor a							0018F5 FDE5                A  2465    fnxtpart		push iy
0018F7 CD 0D 47 00         A  2466    				call fs_get_partition_info
0018FB FDE1                A  2467    				pop iy
0018FD 38 31               A  2468    				jr c,nxt_dev					0018FF FECE                A  2469    				cp 0ceh							001901 28 2D               A  2470    				jr z,nxt_dev
001903 F5                  A  2471    				push af
001904 FD360001            A  2472    				ld (iy),1						001908 3A 39 5E 00         A  2473    				ld a,(current_driver)
00190C FD7701              A  2474    				ld (iy+1),a						00190F 3A 6D 5F 00         A  2475    				ld a,(partition_temp)	
001913 FD7707              A  2476    				ld (iy+7),a						001916 F1                  A  2477    				pop af
001917 B7                  A  2478    				or a
001918 28 35               A  2479    				jr z,dev_mbr
00191A AF                  A  2480    				xor a
00191B FD7708              A  2481    				ld (iy+8),a						00191E FD7709              A  2482    				ld (iy+9),a						001921 FD770A              A  2483    				ld (iy+10),a					001924 FD770B              A  2484    				ld (iy+11),a
001927 CD 9B 19 00         A  2485    				call show_vol_info
00192B CD 8C 19 00         A  2486    				call test_max_vol
00192F C8                  A  2487    				ret z							                           A  2488    			
001930 3A 6E 5F 00         A  2489    nxt_dev			ld a,(vols_on_device_temp)		001934 B7                  A  2490    				or a
001935 C0                  A  2491    				ret nz		
001936 CD ED 19 00         A  2492    				call test_quiet_mode
00193A 20 06               A  2493    				jr nz,skp_cu
00193C 3E0A                A  2494    				ld a,10
00193E 32 14 60 00         A  2495    				ld (cursor_x),a
001942 21 1F 5C 00         A  2496    skp_cu			ld hl,no_vols_msg				001946 CD EA 13 00         A  2497    				call os_show_packed_text_cond
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00194A CD B3 13 00         A  2498    				call os_new_line_cond
00194E C9                  A  2499    				ret
                           A  2500    				
                           A  2501    			
00194F 11040000            A  2502    dev_mbr			ld de,4
001953 19                  A  2503    				add hl,de
001954 7E                  A  2504    				ld a,(hl)						001955 B7                  A  2505    				or a
001956 C8                  A  2506    				ret z							001957 19                  A  2507    				add hl,de
                           A  2508    				
001958 FDE5                A  2509    				push iy
00195A 0604                A  2510    				ld b,4
00195C 7E                  A  2511    sfmbrlp			ld a,(hl)						00195D FD7708              A  2512    				ld (iy+8),a
001960 23                  A  2513    				inc hl
001961 FD23                A  2514    				inc iy
001963 10 F7               A  2515    				djnz sfmbrlp
001965 FDE1                A  2516    				pop iy
001967 FDE5                A  2517    				push iy
001969 0603                A  2518    				ld b,3	
00196B 7E                  A  2519    nsivlp			ld a,(hl)
00196C FD7704              A  2520    				ld (iy+4),a						00196F 23                  A  2521    				inc hl
001970 FD23                A  2522    				inc iy
001972 10 F7               A  2523    				djnz nsivlp
001974 FDE1                A  2524    				pop iy
                           A  2525    				
001976 CD 9B 19 00         A  2526    				call show_vol_info
00197A CD 8C 19 00         A  2527    				call test_max_vol	
00197E C8                  A  2528    				ret z							00197F 3A 6D 5F 00         A  2529    				ld a,(partition_temp)
001983 3C                  A  2530    				inc a
001984 FE04                A  2531    				cp 4							001986 C2 F5 18 00         A  2532    				jp nz,fnxtpart
00198A 18 A4               A  2533    				jr nxt_dev
                           A  2534    				
                           A  2535    
00198C                     A  2536    test_max_vol
                           A  2537    			
00198C 11100000            A  2538    				ld de,16
001990 FD19                A  2539    				add iy,de			
001992 21 3B 5E 00         A  2540    				ld hl,volume_count
001996 34                  A  2541    				inc (hl)
001997 7E                  A  2542    				ld a,(hl)
001998 FE08                A  2543    				cp max_volumes
00199A C9                  A  2544    				ret
                           A  2545    			
                           A  2546    			
00199B                     A  2547    show_vol_info
                           A  2548    				
00199B CD ED 19 00         A  2549    				call test_quiet_mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00199F 20 06               A  2550    				jr nz,skp_cm2
0019A1 3E09                A  2551    				ld a,9			
0019A3 32 14 60 00         A  2552    				ld (cursor_x),a
0019A7 3A 3B 5E 00         A  2553    skp_cm2			ld a,(volume_count)
0019AB F5                  A  2554    				push af
0019AC C630                A  2555    				add a,30h		
0019AE 32 40 5E 00         A  2556    				ld (vol_txt+4),a	
0019B2 21 3C 5E 00         A  2557    				ld hl,vol_txt
0019B6 CD 20 0F 00         A  2558    				call os_print_string_cond		0019BA 21 6E 5F 00         A  2559    				ld hl,vols_on_device_temp
0019BE CBC6                A  2560    				set 0,(hl)						                           A  2561    			
0019C0 F1                  A  2562    				pop af
0019C1 FDE5                A  2563    				push iy
0019C3 CD 96 1A 00         A  2564    				call os_change_volume			0019C7 28 0A               A  2565    				jr z,vform_ok					0019C9 21 CF 5B 00         A  2566    svi_fe			ld hl,format_err_msg		
0019CD CD EA 13 00         A  2567    svi_pem			call os_show_packed_text_cond	0019D1 18 0D               A  2568    				jr skpsvl
                           A  2569    			
0019D3 CD 29 4F 00         A  2570    vform_ok		call fs_get_volume_label
0019D7 38 0E               A  2571    				jr c,svi_hwe
0019D9 B7                  A  2572    				or a
0019DA 20 ED               A  2573    				jr nz,svi_fe
0019DC CD 20 0F 00         A  2574    				call os_print_string_cond		                           A  2575    			
0019E0 CD B3 13 00         A  2576    skpsvl			call os_new_line_cond
0019E4 FDE1                A  2577    				pop iy
0019E6 C9                  A  2578    				ret
                           A  2579    				
0019E7 21 19 5A 00         A  2580    svi_hwe			ld hl,disk_err_msg
0019EB 18 E0               A  2581    				jr svi_pem
                           A  2582    			
                           A  2583    			
0019ED                     A  2584    test_quiet_mode
                           A  2585    			
0019ED 3A 70 5F 00         A  2586    				ld a,(os_quiet_mode)
0019F1 B7                  A  2587    				or a
0019F2 C9                  A  2588    				ret
                           A  2589    
                           A  2590    ;----------------------------------------------
                           A  2591    
                           A  2592    
0019F3                     A  2593    show_dev_driver_name
                           A  2594    	
                           A  2595    	
0019F3 CD 0C 1A 00         A  2596    				call locate_driver_base			0019F7 EB                  A  2597    				ex de,hl
0019F8 110C0000            A  2598    				ld de,0ch
0019FC 19                  A  2599    				add hl,de
0019FD CD 25 0F 00         A  2600    				call os_print_string			001A01 C5                  A  2601    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A02 01200100            A  2602    				ld bc,0120h
001A06 CD 22 1A 00         A  2603    				call os_print_multiple_chars	001A0A C1                  A  2604    				pop bc
001A0B C9                  A  2605    				ret
                           A  2606    
                           A  2607    
001A0C                     A  2608    locate_driver_base
                           A  2609    
001A0C E5                  A  2610    				push hl							001A0D 11030000            A  2611    				ld de,3							001A11 57                  A  2612    				ld d,a
001A12 ED5C                A  2613    				mlt de
001A14 21 4C 5E 00         A  2614    				ld hl,driver_table
001A18 19                  A  2615    				add hl,de
001A19 ED17                A  2616    				ld de,(hl)
001A1B E1                  A  2617    				pop hl
001A1C C9                  A  2618    				ret
                           A  2619    				
                           A  2620    		
                           A  2621    ;----------------------------------------------
                           A  2622    
001A1D                     A  2623    os_print_multiple_chars_cond
                           A  2624    
001A1D CD ED 19 00         A  2625    				call test_quiet_mode
001A21 C0                  A  2626    				ret nz
                           A  2627    			
001A22                     A  2628    os_print_multiple_chars
                           A  2629    
                           A  2630    ;c = char
                           A  2631    ;b = count
001A22 C5                  A  2632    				push bc
001A23 E5                  A  2633    				push hl
001A24 79                  A  2634    				ld a,c
001A25 21 81 55 00         A  2635    				ld hl,rep_char_txt
001A29 77                  A  2636    				ld (hl),a
001A2A E5                  A  2637    pmch_lp			push hl
001A2B CD 25 0F 00         A  2638    				call os_print_string
001A2F E1                  A  2639    				pop hl
001A30 10 F8               A  2640    				djnz pmch_lp
001A32 E1                  A  2641    				pop hl
001A33 C1                  A  2642    				pop bc
001A34 C9                  A  2643    				ret
                           A  2644    
                           A  2645    ;----------------------------------------------
                           A  2646    
                           A  2647    
001A35 7B                  A  2648    ext_plot_char	ld a,e
001A36 C3 1A 3D 00         A  2649    				jp hwsc_plot_char
                           A  2650    				
                           A  2651    
                           A  2652    ;----------------------------------------------
                           A  2653    ; Some file system related routines 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2654    ;----------------------------------------------
                           A  2655    
                           A  2656    
001A3A                     A  2657    fs_get_dir_cluster
                           A  2658    
                           A  2659    
001A3A F5                  A  2660    				push af							001A3B E5                  A  2661    				push hl			
001A3C CD 52 1A 00         A  2662    				call fs_get_dir_cluster_address
001A40 ED17                A  2663    				ld de,(hl)
001A42 E1                  A  2664    dclopdone		pop hl
001A43 F1                  A  2665    				pop af
001A44 BF                  A  2666    				cp a							001A45 C9                  A  2667    				ret
                           A  2668    				
                           A  2669    
                           A  2670    
                           A  2671    
                           A  2672    
001A46                     A  2673    fs_update_dir_cluster
                           A  2674    
001A46 F5                  A  2675    				push af							001A47 E5                  A  2676    				push hl			
001A48 D5                  A  2677    				push de			
001A49 CD 52 1A 00         A  2678    				call fs_get_dir_cluster_address
001A4D D1                  A  2679    				pop de
001A4E ED1F                A  2680    				ld (hl),de
001A50 18 F0               A  2681    				jr dclopdone
                           A  2682    			
                           A  2683    
                           A  2684    
                           A  2685    
                           A  2686    
001A52                     A  2687    fs_get_dir_cluster_address
                           A  2688    
001A52 21 52 5E 00         A  2689    				ld hl,volume_dir_clusters		001A56 3A 38 5E 00         A  2690    				ld a,(current_volume)	
001A5A 11030000            A  2691    				ld de,3
001A5E 57                  A  2692    				ld d,a
001A5F ED5C                A  2693    				mlt de
001A61 19                  A  2694    				add hl,de
001A62 C9                  A  2695    				ret
                           A  2696    				
                           A  2697    	
                           A  2698    
                           A  2699    	
                           A  2700    	
001A63                     A  2701    fs_get_total_sectors
                           A  2702    
                           A  2703    
001A63 F5                  A  2704    				push af
001A64 E5                  A  2705    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A65 CD 74 1A 00         A  2706    				call fs_calc_volume_offset	
001A69 21 6E 5E 00         A  2707    				ld hl,volume_mount_list+4
001A6D 19                  A  2708    				add hl,de
001A6E ED17                A  2709    				ld de,(hl)
001A70 E1                  A  2710    				pop hl
001A71 F1                  A  2711    				pop af
001A72 BF                  A  2712    				cp a							001A73 C9                  A  2713    				ret
                           A  2714    
                           A  2715    
                           A  2716    
                           A  2717    
                           A  2718    
001A74                     A  2719    fs_calc_volume_offset
                           A  2720    
001A74 3A 38 5E 00         A  2721    				ld a,(current_volume)			001A78 11100000            A  2722    calc_vol		ld de,16
001A7C 57                  A  2723    				ld d,a
001A7D ED5C                A  2724    				mlt de
001A7F C9                  A  2725    				ret
                           A  2726    
                           A  2727    
                           A  2728    
                           A  2729    
                           A  2730    
001A80                     A  2731    dev_to_driver_lookup
                           A  2732    
001A80 21 3A 5E 00         A  2733    				ld hl,device_count				001A84 BE                  A  2734    				cp (hl)							001A85 D0                  A  2735    				ret nc
001A86 11200000            A  2736    				ld de,32						001A8A 57                  A  2737    				ld d,a
001A8B ED5C                A  2738    				mlt de
001A8D 21 EA 5E 00         A  2739    				ld hl,host_device_hardware_info
001A91 19                  A  2740    				add hl,de
001A92 7E                  A  2741    				ld a,(hl)
001A93 37                  A  2742    				scf
001A94 C9                  A  2743    				ret
                           A  2744    				
                           A  2745    
                           A  2746    
001A95                     A  2747    ext_change_volume
                           A  2748    
001A95 7B                  A  2749    				ld a,e
                           A  2750    
001A96                     A  2751    os_change_volume
                           A  2752    
001A96 47                  A  2753    				ld b,a							001A97 FE08                A  2754    				cp max_volumes		
001A99 30 23               A  2755    				jr nc,fs_ccv2					                           A  2756    			
001A9B 3A 38 5E 00         A  2757    				ld a,(current_volume)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A9F F5                  A  2758    				push af
001AA0 78                  A  2759    				ld a,b
001AA1 32 38 5E 00         A  2760    				ld (current_volume),a			001AA5 CD C2 1A 00         A  2761    				call fs_set_driver_for_volume	                           A  2762    				
001AA9 CD 6F 47 00         A  2763    				call fs_check_disk_format		001AAD 38 06               A  2764    				jr c,fs_cant_chg_vols	
001AAF B7                  A  2765    				or a
001AB0 20 03               A  2766    				jr nz,fs_cant_chg_vols
001AB2 F1                  A  2767    				pop af							001AB3 AF                  A  2768    				xor a							001AB4 C9                  A  2769    				ret
                           A  2770    
                           A  2771    
001AB5                     A  2772    fs_cant_chg_vols
                           A  2773    			
001AB5 F1                  A  2774    				pop af
001AB6 32 38 5E 00         A  2775    				ld (current_volume),a			001ABA CD C2 1A 00         A  2776    				call fs_set_driver_for_volume	                           A  2777    				
001ABE 3ECF                A  2778    fs_ccv2			ld a,0cfh						001AC0 B7                  A  2779    				or a
001AC1 C9                  A  2780    				ret
                           A  2781    					
                           A  2782    	
001AC2                     A  2783    fs_set_driver_for_volume
                           A  2784    
001AC2 CD 74 1A 00         A  2785    				call fs_calc_volume_offset		001AC6 21 6B 5E 00         A  2786    				ld hl,volume_mount_list+1
001ACA 19                  A  2787    				add hl,de
001ACB 7E                  A  2788    				ld a,(hl)
001ACC 32 39 5E 00         A  2789    				ld (current_driver),a
001AD0 C9                  A  2790    				ret
                           A  2791    
                           A  2792    
                           A  2793    ;----------------------------------------------
                           A  2794    
001AD1                     A  2795    ext_file_sector_list
                           A  2796    
                           A  2797    ;Input HL = cluster, E = sector offset
                           A  2798    
                           A  2799    ;Output HL = new cluster, E = new sector number
                           A  2800    ;       IX = address of LBA0 LSB of sector (int
                           A  2801    
                           A  2802    				
001AD1 3A 80 53 00         A  2803    				ld a,(fs_cluster_size)
001AD5 BB                  A  2804    				cp e
001AD6 20 0A               A  2805    				jr nz,fsl_sc
001AD8 CD B5 51 00         A  2806    				call get_fat_entry_for_cluster
001ADC DA 09 16 00         A  2807    				jp c,os_fferr
001AE0 1E00                A  2808    				ld e,0
001AE2 CD 8C 52 00         A  2809    fsl_sc			call cluster_and_offset_to_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AE6 1C                  A  2810    				inc e
001AE7 DD21 0F 60 00       A  2811    fsl_done		ld ix,sector_lba0
001AEC BF                  A  2812    				cp a							001AED C9                  A  2813    				ret
                           A  2814    				
                           A  2815    ;----------------------------------------------
                           A  2816    
                           A  2817    
001AEE E5                  A  2818    os_count_chars	push hl							001AEF 01000000            A  2819    				ld bc,0
001AF3 7E                  A  2820    cch_lp			ld a,(hl)
001AF4 B7                  A  2821    				or a
001AF5 28 04               A  2822    				jr z,cch_end
001AF7 23                  A  2823    				inc hl
001AF8 03                  A  2824    				inc bc
001AF9 18 F8               A  2825    				jr cch_lp
001AFB E1                  A  2826    cch_end			pop hl
001AFC C9                  A  2827    				ret
                           A  2828    				
                           A  2829    			
                           A  2830    ;----------------------------------------------
                           A  2831    ; Environment variable code V0.01
                           A  2832    ;----------------------------------------------
                           A  2833    
       00000100            A  2834    envar_buffer_size equ 256
                           A  2835    
                           A  2836    ;----------------------------------------------
                           A  2837    
001AFD                     A  2838    ext_get_envar
001AFD CC 72 15 00         A  2839    				call z,mbase_hl
                           A  2840    
001B01                     A  2841    os_get_envar
                           A  2842    
                           A  2843    ;Set: 		HL = name of required variable
                           A  2844    ;Returns:	ZF Set: DE = address of variable's 
                           A  2845    ;        	ZF Not Set: Couldn't find variable
                           A  2846    				
001B01 DD21 93 61 00       A  2847    				ld ix,envar_list-1
001B06 CD EE 1A 00         A  2848    env_fname		call os_count_chars				001B0A 78                  A  2849    				ld a,b
001B0B B1                  A  2850    				or c
001B0C 28 27               A  2851    				jr z,env_bad
                           A  2852    								
001B0E ED1201              A  2853    env_cname		lea de,ix+1
001B11 1A                  A  2854    				ld a,(de)
001B12 FEFF                A  2855    				cp 0ffh
001B14 28 1F               A  2856    				jr z,env_bad
001B16 C5                  A  2857    				push bc
001B17 41                  A  2858    				ld b,c
001B18 CD DF 11 00         A  2859    				call os_compare_strings
001B1C C1                  A  2860    				pop bc
001B1D 20 06               A  2861    				jr nz,env_nomatch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B1F 03                  A  2862    				inc bc							001B20 EB                  A  2863    				ex de,hl
001B21 09                  A  2864    				add hl,bc
001B22 EB                  A  2865    				ex de,hl						001B23 AF                  A  2866    				xor a
001B24 C9                  A  2867    				ret			
                           A  2868    				
001B25 DD23                A  2869    env_nomatch		inc ix							001B27 CD CD 1B 00         A  2870    				call check_envar_bounds
001B2B 20 08               A  2871    				jr nz,env_bad
001B2D DD7E00              A  2872    				ld a,(ix)
001B30 B7                  A  2873    				or a
001B31 28 DB               A  2874    				jr z,env_cname
001B33 18 F0               A  2875    				jr env_nomatch
                           A  2876    
001B35 3E82                A  2877    env_bad			ld a,82h						001B37 B7                  A  2878    				or a
001B38 C9                  A  2879    				ret	
                           A  2880    				
                           A  2881    ;----------------------------------------------
                           A  2882    
001B39                     A  2883    ext_set_envar
                           A  2884    
                           A  2885    ;HL = addr of variable name (zero terminated)
                           A  2886    ;DE = addr of data for variable (zero terminate
                           A  2887    
                           A  2888    ;Returns:
                           A  2889    ;ZF = Set: OK
                           A  2890    ;ZF = Not Set: No enough space for new variable
                           A  2891    		
001B39 CC 72 15 00         A  2892    				call z,mbase_hl
001B3D CC 83 15 00         A  2893    				call z,mbase_de
                           A  2894    
001B41 7E                  A  2895    os_set_envar	ld a,(hl)						001B42 B7                  A  2896    				or a
001B43 28 F0               A  2897    				jr z,env_bad
001B45 1A                  A  2898    				ld a,(de)
001B46 B7                  A  2899    				or a
001B47 28 EC               A  2900    				jr z,env_bad
                           A  2901    
001B49 E5                  A  2902    				push hl
001B4A D5                  A  2903    				push de
001B4B CD 97 1B 00         A  2904    				call os_delete_envar			001B4F D1                  A  2905    				pop de
001B50 E1                  A  2906    				pop hl
                           A  2907    				
001B51 DD2A 9E 62 00       A  2908    				ld ix,(envar_top_loc)			001B56 CD CD 1B 00         A  2909    env_enlp		call check_envar_bounds
001B5A 20 D9               A  2910    				jr nz,env_bad
001B5C 7E                  A  2911    				ld a,(hl)						001B5D DD7700              A  2912    				ld (ix),a
001B60 B7                  A  2913    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B61 28 05               A  2914    				jr z,env_ndone
001B63 23                  A  2915    				inc hl
001B64 DD23                A  2916    				inc ix
001B66 18 EE               A  2917    				jr env_enlp
                           A  2918    				
001B68 CD CD 1B 00         A  2919    env_ndone		call check_envar_bounds			001B6C 20 C7               A  2920    				jr nz,env_bad
001B6E DD36003D            A  2921    				ld (ix),'='
001B72 DD23                A  2922    				inc ix
                           A  2923    
001B74 CD CD 1B 00         A  2924    env_evlp		call check_envar_bounds			001B78 20 BB               A  2925    				jr nz,env_bad
001B7A 1A                  A  2926    				ld a,(de)
001B7B DD7700              A  2927    				ld (ix),a
001B7E B7                  A  2928    				or a
001B7F 28 05               A  2929    				jr z,env_vdone
001B81 13                  A  2930    				inc de
001B82 DD23                A  2931    				inc ix
001B84 18 EE               A  2932    				jr env_evlp
                           A  2933    
001B86 DD23                A  2934    env_vdone		inc ix
001B88 DD3600FF            A  2935    				ld (ix),0ffh
001B8C DD22 9E 62 00       A  2936    				ld (envar_top_loc),ix			001B91 AF                  A  2937    				xor a
001B92 C9                  A  2938    				ret
                           A  2939    
                           A  2940    	
                           A  2941    ;----------------------------------------------
                           A  2942    
001B93                     A  2943    ext_delete_envar
                           A  2944    
001B93 CC 72 15 00         A  2945    				call z,mbase_hl
                           A  2946    
001B97                     A  2947    os_delete_envar
                           A  2948    
                           A  2949    ;HL = name of required variable (null terminate
                           A  2950    ;ZF = Set: OK
                           A  2951    ;ZF = Not Set: Didnt find named variable
                           A  2952    
                           A  2953    
001B97 CD 01 1B 00         A  2954    				call os_get_envar				001B9B C0                  A  2955    				ret nz
                           A  2956    				
001B9C D5                  A  2957    				push de
001B9D E1                  A  2958    				pop hl
001B9E AF                  A  2959    				xor a
001B9F ED42                A  2960    				sbc hl,bc						                           A  2961    				
001BA1 13                  A  2962    env_fnxt		inc de							001BA2 D5                  A  2963    				push de
001BA3 DDE1                A  2964    				pop ix
001BA5 CD CD 1B 00         A  2965    				call check_envar_bounds
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BA9 20 8A               A  2966    				jr nz,env_bad
001BAB 1A                  A  2967    				ld a,(de)
001BAC B7                  A  2968    				or a
001BAD 20 F2               A  2969    				jr nz,env_fnxt
                           A  2970    
001BAF 13                  A  2971    env_gnxt		inc de							001BB0 EB                  A  2972    				ex de,hl
001BB1 7E                  A  2973    env_collp		ld a,(hl)
001BB2 12                  A  2974    				ld (de),a						001BB3 FEFF                A  2975    				cp 0ffh
001BB5 28 0F               A  2976    				jr z,env_clspd					001BB7 E5                  A  2977    				push hl
001BB8 DDE1                A  2978    				pop ix
001BBA CD CD 1B 00         A  2979    				call check_envar_bounds
001BBE C2 35 1B 00         A  2980    				jr nz,env_bad
001BC2 23                  A  2981    				inc hl
001BC3 13                  A  2982    				inc de
001BC4 18 EB               A  2983    				jr env_collp
                           A  2984    
001BC6 ED53 9E 62 00       A  2985    env_clspd		ld (envar_top_loc),de			001BCB AF                  A  2986    				xor a
001BCC C9                  A  2987    				ret
                           A  2988    				
                           A  2989    ;----------------------------------------------
                           A  2990    
001BCD                     A  2991    check_envar_bounds
                           A  2992    
001BCD C5                  A  2993    				push bc
001BCE E5                  A  2994    				push hl
001BCF DDE5                A  2995    				push ix
001BD1 E1                  A  2996    				pop hl
001BD2 01 95 62 00         A  2997    				ld bc,1+(envar_list+envar_buffe
001BD6 AF                  A  2998    				xor a
001BD7 ED42                A  2999    				sbc hl,bc
001BD9 38 05               A  3000    				jr c,env_bok
001BDB AF                  A  3001    				xor a
001BDC 3C                  A  3002    				inc a
001BDD E1                  A  3003    				pop hl
001BDE C1                  A  3004    				pop bc
001BDF C9                  A  3005    				ret
                           A  3006    
001BE0 AF                  A  3007    env_bok			xor a
001BE1 E1                  A  3008    				pop hl
001BE2 C1                  A  3009    				pop bc
001BE3 C9                  A  3010    				ret
                           A  3011    						
                           A  3012    ;----------------------------------------------
                           A  3013    
001BE4                     A  3014    os_get_keymap_location
                           A  3015    
001BE4 21 6B 5C 00         A  3016    				ld hl,unshifted_keymap
001BE8 BF                  A  3017    				cp a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BE9 C9                  A  3018    				ret
                           A  3019    
                           A  3020    ;----------------------------------------------
                           A  3021    
001BEA                     A  3022    os_get_font_info
                           A  3023    
001BEA DD21 CA 5D 00       A  3024    				ld ix,font_parameters
001BEF BF                  A  3025    				cp a
001BF0 C9                  A  3026    				ret
                           A  3027    
                           A  3028    ;==============================================
                           A  3029    ; Internal OS command routines
                           A  3030    ;==============================================
                           A  3031    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001BF1                     B     5    os_cmd_c
                           B     6    
001BF1 CD 27 1C 00         B     7    				call get_start_and_end			                           B     8    				
001BF5 CD 50 1C 00         B     9    				call hexword_or_bust			001BF9 CA ED 15 00         B    10    				jp z,os_no_d_addr_error
001BFD ED53 22 60 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C02 CD 15 1C 00         B    13    				call test_mem_range				001C06 DA F1 15 00         B    14    				jp c,os_range_error				001C0A ED5B 22 60 00       B    15    				ld de,(copy_dest_address)
001C0F EDB0                B    16    				ldir
                           B    17    
001C11 3E20                B    18    copy_done		ld a,020h						001C13 B7                  B    19    				or a
001C14 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C15                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C15 2A 1F 60 00         B    33    				ld hl,(cmdop_end_address)	
001C19 ED4B 1C 60 00       B    34    				ld bc,(cmdop_start_address)
001C1E C5                  B    35    				push bc
001C1F AF                  B    36    				xor a
001C20 ED42                B    37    				sbc hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C22 E5                  B    38    				push hl
001C23 C1                  B    39    				pop bc
001C24 03                  B    40    				inc bc
001C25 E1                  B    41    				pop hl
001C26 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C27                     B    46    get_start_and_end
                           B    47    			
001C27 CD 9C 10 00         B    48    				call ascii_to_hexword			001C2B ED53 1C 60 00       B    49    				ld (cmdop_start_address),de
001C30 23                  B    50    				inc hl
001C31 28 09               B    51    				jr z,st_addrok
001C33 E1                  B    52    				pop hl							001C34 FE82                B    53    				cp 82h							001C36 28 02               B    54    				jr z,c_badhex
001C38 3E16                B    55    				ld a,016h						001C3A B7                  B    56    c_badhex		or a
001C3B C9                  B    57    				ret
                           B    58    				
001C3C CD 9C 10 00         B    59    st_addrok		call ascii_to_hexword			001C40 ED53 1F 60 00       B    60    				ld (cmdop_end_address),de
001C45 23                  B    61    				inc hl
001C46 B7                  B    62    				or a
001C47 C8                  B    63    				ret z
001C48 E1                  B    64    				pop hl							001C49 FE82                B    65    				cp 82h							001C4B 28 ED               B    66    				jr z,c_badhex
001C4D 3E1C                B    67    				ld a,01ch						001C4F C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C50                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C50 CD 9C 10 00         B    79    				call ascii_to_hexword		
001C54 FE82                B    80    				cp 82h
001C56 20 03               B    81    				jr nz,hex_good
001C58 E1                  B    82    				pop hl						; r
001C59 B7                  B    83    				or a	
001C5A C9                  B    84    				ret			 
001C5B FE81                B    85    hex_good		cp 081h						; n
001C5D C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C5E                     B     5    os_cmd_cd	
                           B     6    
001C5E CD 6A 16 00         B     7    				call os_check_volume_format	
001C62 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C63 7E                  B    11    				ld a,(hl)						001C64 B7                  B    12    				or a				
001C65 CA 0C 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C69 7E                  B    16    				ld a,(hl)						001C6A 23                  B    17    				inc hl
001C6B 46                  B    18    				ld b,(hl)
001C6C 2B                  B    19    				dec hl
001C6D FE2E                B    20    				cp '.'			
001C6F 20 08               B    21    				jr nz,cd_nual
001C71 B8                  B    22    				cp b
001C72 20 05               B    23    				jr nz,cd_nual
001C74 CD C2 16 00         B    24    				call os_parent_dir	
001C78 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001C79 FE2F                B    28    cd_nual			cp 02fh			
001C7B 20 05               B    29    				jr nz,cd_nogor					001C7D CD C8 16 00         B    30    				call os_root_dir	
001C81 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001C82 FE25                B    34    cd_nogor		cp '%'							001C84 20 1F               B    35    				jr nz,cd_no_assign
001C86 CD 01 1B 00         B    36    				call os_get_envar
001C8A 28 04               B    37    				jr z,cd_evok
001C8C 3ED1                B    38    				ld a,0d1h						001C8E B7                  B    39    				or a
001C8F C9                  B    40    				ret
001C90 11000000            B    41    cd_evok			ld de,0
001C94 5E                  B    42    				ld e,(hl)
001C95 23                  B    43    				inc hl
001C96 56                  B    44    				ld d,(hl)
001C97 23                  B    45    				inc hl
001C98 7E                  B    46    				ld a,(hl)
001C99 D5                  B    47    				push de
001C9A CD 96 1A 00         B    48    				call os_change_volume
001C9E D1                  B    49    				pop de
001C9F C0                  B    50    				ret nz
001CA0 CD 46 1A 00         B    51    				call fs_update_dir_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CA4 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CA5                     B    55    cd_no_assign
                           B    56    			
001CA5 3A 38 5E 00         B    57    				ld a,(current_volume)
001CA9 32 83 67 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CAD E5                  B    60    				push hl
001CAE DDE1                B    61    				pop ix
001CB0 DD7E04              B    62    				ld a,(ix+4)
001CB3 FE3A                B    63    				cp ':'							001CB5 20 25               B    64    				jr nz,cd_nchvol
001CB7 11 3D 5E 00         B    65    				ld de,vol_txt+1
001CBB 0603                B    66    				ld b,3
001CBD CD DF 11 00         B    67    				call os_compare_strings
001CC1 20 19               B    68    				jr nz,cd_nchvol
001CC3 11050000            B    69    				ld de,5
001CC7 19                  B    70    				add hl,de
001CC8 22 D5 60 00         B    71    				ld (os_args_loc),hl				001CCC DD7E03              B    72    				ld a,(ix+3)						001CCF D630                B    73    				sub 030h
001CD1 CD 96 1A 00         B    74    				call os_change_volume
001CD5 C0                  B    75    				ret nz							001CD6 CD C8 16 00         B    76    				call os_root_dir				001CDA 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001CDC CD 3A 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001CE0 ED53 80 67 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001CE5 E5                  B    83    cd_mollp		push hl
001CE6 CD B8 16 00         B    84    				call os_change_dir				001CEA E1                  B    85    				pop hl
001CEB 20 0A               B    86    				jr nz,cd_dcherr
001CED 7E                  B    87    cd_mol			ld a,(hl)						001CEE 23                  B    88    				inc hl
001CEF B7                  B    89    				or a
001CF0 C8                  B    90    				ret z
001CF1 FE2F                B    91    				cp 02fh
001CF3 28 F0               B    92    				jr z,cd_mollp
001CF5 18 F6               B    93    				jr cd_mol
                           B    94    					
001CF7                     B    95    cd_dcherr	
                           B    96    			
001CF7 F5                  B    97    				push af							001CF8 ED5B 80 67 00       B    98    				ld de,(original_dir_cd_cmd)
001CFD CD 46 1A 00         B    99    				call fs_update_dir_cluster
001D01 3A 83 67 00         B   100    				ld a,(original_vol_cd_cmd)
001D05 CD 96 1A 00         B   101    				call os_change_volume	
001D09 F1                  B   102    				pop af
001D0A B7                  B   103    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D0B C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D0C                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D0C 0610                B   113    				ld b,max_dirs
001D0E 0E00                B   114    				ld c,0
001D10 C5                  B   115    lp1				push bc
001D11 CD 3A 1A 00         B   116    				call fs_get_dir_cluster
001D15 C1                  B   117    				pop bc
001D16 D5                  B   118    				push de
001D17 0C                  B   119    				inc c
001D18 C5                  B   120    				push bc
001D19 CD C2 16 00         B   121    				call os_parent_dir
001D1D C1                  B   122    				pop bc
001D1E 20 02               B   123    				jr nz,shdir_lp
001D20 10 EE               B   124    				djnz lp1
                           B   125    				
001D22 D1                  B   126    shdir_lp		pop de
001D23 C5                  B   127    				push bc
001D24 CD 46 1A 00         B   128    				call fs_update_dir_cluster
001D28 CD EE 16 00         B   129    				call os_get_current_dir_name
001D2C CD 25 0F 00         B   130    				call os_print_string
001D30 21 42 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D34 CD 25 0F 00         B   132    				call os_print_string
001D38 C1                  B   133    				pop bc
001D39 0D                  B   134    				dec c
001D3A 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D3C CD B8 13 00         B   137    				call os_new_line	
001D40 AF                  B   138    				xor a
001D41 C9                  B   139    				ret
                           B   140    			
001D42 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006780            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006783            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D44                     B     5    os_cmd_cls
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cls.asm
001D44 CD 2D 3C 00         B     7    				call hwsc_clear_screen
001D48 AF                  B     8    				xor a
001D49 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D4A                     B     5    os_cmd_colon
                           B     6    	
001D4A CD 50 1C 00         B     7    				call hexword_or_bust			001D4E CA DD 15 00         B     8    				jp z,os_no_start_addr			001D52 D5                  B     9    				push de
001D53 DDE1                B    10    				pop ix							                           B    11    			
001D55 CD 50 1C 00         B    12    wmblp			call hexword_or_bust			001D59 28 07               B    13    				jr z,os_ccmdn
001D5B DD7300              B    14    				ld (ix),e						001D5E DD23                B    15    				inc ix
001D60 18 F3               B    16    				jr wmblp
                           B    17    
001D62 AF                  B    18    os_ccmdn		xor a
001D63 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001D64 FD21 4B 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D69 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001D6D CD 50 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001D71 28 05               B    10    				jr z,d_no_hex					001D73 ED53 C2 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001D78 3A BE 5D 00         B    13    d_no_hex		ld a,(window_rows)				001D7C D602                B    14    				sub a,2
001D7E 47                  B    15    				ld b,a
001D7F C5                  B    16    dis_loop		push bc
                           B    17    				
001D80 DD2A C2 28 00       B    18    				ld ix,(dis_addr)				001D85 CD 2D 23 00         B    19    				call show_ix					001D89 3E20                B    20    				ld a,' '
001D8B CD 21 23 00         B    21    				call show_ascii_char
                           B    22    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001D8F FD21 4B 23 00       B    23    				ld iy,prefix_bits_loc
001D94 FD360000            B    24    				ld (iy),0						001D98 CD D4 1D 00         B    25    				call dis_instr					001D9C DD23                B    26    				inc ix							                           B    27    				
001D9E 3E1A                B    28    				ld a,26							001DA0 32 14 60 00         B    29    				ld (cursor_pos+1),a				001DA4 ED4B C2 28 00       B    30    				ld bc,(dis_addr)
001DA9 DD22 C2 28 00       B    31    				ld (dis_addr),ix				001DAE DDE5                B    32    				push ix
001DB0 E1                  B    33    				pop hl
001DB1 AF                  B    34    				xor a
001DB2 ED42                B    35    				sbc hl,bc						001DB4 7D                  B    36    				ld a,l
001DB5 E607                B    37    				and 7
001DB7 6F                  B    38    				ld l,a
001DB8 0A                  B    39    shexoplp		ld a,(bc)						001DB9 CD 10 23 00         B    40    				call show_hex_byte
001DBD 3E20                B    41    				ld a,' '
001DBF CD 21 23 00         B    42    				call show_ascii_char
001DC3 03                  B    43    				inc bc
001DC4 2D                  B    44    				dec l
001DC5 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DC7 CD B8 13 00         B    47    				call os_new_line
001DCB C1                  B    48    				pop bc
001DCC 10 B1               B    49    				djnz dis_loop
                           B    50    
001DCE CD B8 13 00         B    51    				call os_new_line
001DD2 AF                  B    52    				xor a
001DD3 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001DD4 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001DD7 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001DDB 28 04               B    73    			jr z,z80_list					; T
001DDD FDCB00F6            B    74    			set il_prefix,(iy)				; a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DE1                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001DE1 FE40                B    79    			cp 40h
001DE3 20 0A               B    80    			jr nz,not_sis
001DE5 FDCB00B6            B    81    			res il_prefix,(iy)
001DE9 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001DED 18 28               B    83    			jr set_adl_pf
                           B    84    			
001DEF FE49                B    85    not_sis		cp 49h
001DF1 20 0A               B    86    			jr nz,not_lis
001DF3 FDCB00B6            B    87    			res il_prefix,(iy)
001DF7 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001DFB 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001DFD FE52                B    91    not_lis		cp 52h
001DFF 20 0A               B    92    			jr nz,not_sil
001E01 FDCB00F6            B    93    			set il_prefix,(iy)
001E05 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E09 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E0B FE5B                B    97    not_sil		cp 5bh
001E0D 20 11               B    98    			jr nz,not_adl_prefix_byte
001E0F FDCB00F6            B    99    			set il_prefix,(iy)
001E13 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E17 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E1B DD23                B   103    			inc ix
001E1D DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E20                     B   108    not_adl_prefix_byte			
                           B   109    			
001E20 FECB                B   110    			cp 0cbh								001E22 20 08               B   111    			jr nz,not_cb
001E24 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E28 DD23                B   113    			inc ix
001E2A 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E2C FEED                B   116    not_cb		cp 0edh
001E2E 20 08               B   117    			jr nz,not_ed
001E30 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E34 DD23                B   119    			inc ix
001E36 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E38 FEDD                B   122    not_ed		cp 0ddh
001E3A 20 18               B   123    			jr nz,not_dd
001E3C CD 6F 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E40 28 92               B   125    			jr z,dis_instr						001E42 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E46 FECB                B   127    xdcb_query	cp 0cbh								001E48 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E4A FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E4E DD23                B   130    			inc ix								001E50 DD23                B   131    			inc ix								001E52 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E54 FEFD                B   134    not_dd		cp 0fdh
001E56 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E58 CD 6F 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E5C CA D4 1D 00         B   137    			jr z,dis_instr	
001E60 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E64 18 E0               B   139    			jr xdcb_query
                           B   140    
001E66                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E66 DD7E00              B   145    			ld a,(ix)	
001E69 E6C0                B   146    			and 11000000b			; seperate 
001E6B 07                  B   147    			rlca
001E6C 07                  B   148    			rlca
001E6D FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001E70 DD7E00              B   151    			ld a,(ix)
001E73 E638                B   152    			and 00111000b
001E75 CB3F                B   153    			srl a
001E77 CB3F                B   154    			srl a
001E79 CB3F                B   155    			srl a	
001E7B FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001E7E DD7E00              B   158    			ld a,(ix)
001E81 E607                B   159    			and 00000111b
001E83 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001E86 DD7E00              B   162    			ld a,(ix)
001E89 E630                B   163    			and 00110000b
001E8B CB3F                B   164    			srl a
001E8D CB3F                B   165    			srl a
001E8F CB3F                B   166    			srl a
001E91 CB3F                B   167    			srl a
001E93 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001E96 DD7E00              B   170    			ld a,(ix)
001E99 E608                B   171    			and 00001000b
001E9B CB3F                B   172    			srl a
001E9D CB3F                B   173    			srl a
001E9F CB3F                B   174    			srl a
001EA1 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001EA4 CD 7D 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   179    ;----------------------------------------------
                           B   180    
001EA8 78                  B   181    index_table	ld a,b							; a
001EA9 B7                  B   182    			or a
001EAA 28 07               B   183    			jr z,parse_instr				; m
001EAC CB7E                B   184    d_filp		bit 7,(hl)						; w
001EAE 23                  B   185    			inc hl							; o
001EAF 28 FB               B   186    			jr z,d_filp					
001EB1 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001EB3 FD21 4B 23 00       B   190    parse_instr	ld iy,opcode_vars
001EB8 01000000            B   191    			ld bc,0
001EBC 7E                  B   192    			ld a,(hl)						;ge
001EBD FE80                B   193    			cp 80h
001EBF C8                  B   194    			ret z
001EC0 E67F                B   195    			and 7fh
                           B   196    			
001EC2 FE26                B   197    			cp '&'							;sy
001EC4 20 28               B   198    			jr nz,not_adlsym
001EC6 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001ECA CA 58 20 00         B   200    			jr z,next_opcode_ascii_char
001ECE 0600                B   201    			ld b,0
001ED0 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001ED4 28 02               B   203    			jr z,naplsb
001ED6 CBC0                B   204    			set 0,b
001ED8 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001EDC 28 02               B   206    			jr z,napmsb
001EDE CBC8                B   207    			set 1,b
001EE0 E5                  B   208    napmsb		push hl
001EE1 21 AA 28 00         B   209    			ld hl,adl_prefix_list
001EE5 CD A8 1E 00         B   210    			call index_table				; r
001EE9 E1                  B   211    			pop hl
001EEA C3 58 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001EEE FE5E                B   214    not_adlsym	cp '^'							;sy
001EF0 20 0D               B   215    			jr nz,d_not_imm8
001EF2 DD23                B   216    			inc ix							;th
001EF4 DD7E00              B   217    			ld a,(ix)
001EF7 CD 10 23 00         B   218    			call show_hex_byte
001EFB C3 58 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001EFF FE21                B   221    d_not_imm8	cp '!'							;sy
001F01 20 26               B   222    			jr nz,d_not_imm16					001F03 11020000            B   223    			ld de,2
001F07 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F0B 28 08               B   225    			jr z,imm16
001F0D 13                  B   226    			inc de
001F0E DD7E03              B   227    			ld a,(ix+3)
001F11 CD 10 23 00         B   228    			call show_hex_byte
001F15 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F18 CD 10 23 00         B   230    			call show_hex_byte			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F1C DD7E01              B   231    			ld a,(ix+1)						;th
001F1F CD 10 23 00         B   232    			call show_hex_byte
001F23 DD19                B   233    			add ix,de						;ad
001F25 C3 58 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F29 FE2F                B   236    d_not_imm16	cp '/'							;sy
001F2B 20 36               B   237    			jr nz,d_not_sb
001F2D FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F31 28 05               B   239    			jr z,norm_dbyte
001F33 DD7EFF              B   240    			ld a,(ix-1)						;if
001F36 18 05               B   241    			jr xdcb_dbyte
001F38 DD23                B   242    norm_dbyte	inc ix
001F3A DD7E00              B   243    			ld a,(ix)						;th
001F3D CB7F                B   244    xdcb_dbyte	bit 7,a
001F3F 20 10               B   245    			jr nz,d_sbin					;sh
001F41 F5                  B   246    			push af
001F42 3E2B                B   247    			ld a,'+'
001F44 CD 21 23 00         B   248    			call show_ascii_char
001F48 F1                  B   249    			pop af
001F49 CD 10 23 00         B   250    			call show_hex_byte
001F4D C3 58 20 00         B   251    			jp next_opcode_ascii_char
001F51 F5                  B   252    d_sbin		push af
001F52 3E2D                B   253    			ld a,'-'
001F54 CD 21 23 00         B   254    			call show_ascii_char
001F58 F1                  B   255    			pop af
001F59 ED44                B   256    			neg
001F5B CD 10 23 00         B   257    			call show_hex_byte
001F5F C3 58 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F63 FE64                B   260    d_not_sb	cp 'd'							;sy
001F65 20 1E               B   261    			jr nz,d_not_pcdip
001F67 DD23                B   262    			inc ix
001F69 01000000            B   263    			ld bc,0
001F6D DD7E00              B   264    			ld a,(ix)
001F70 CB7F                B   265    			bit 7,a
001F72 28 01               B   266    			jr z,d_spcd_pos
001F74 0B                  B   267    			dec bc
001F75 4F                  B   268    d_spcd_pos	ld c,a
001F76 03                  B   269    			inc bc
001F77 DDE5                B   270    			push ix
001F79 DD09                B   271    			add ix,bc
001F7B CD 2D 23 00         B   272    			call show_ix
001F7F DDE1                B   273    			pop ix
001F81 C3 58 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001F85 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001F87 20 16               B   277    			jr nz,d_not_sdig
001F89 23                  B   278    			inc hl							;th
001F8A 01000000            B   279    			ld bc,0
001F8E 4E                  B   280    			ld c,(hl)
001F8F FD21 4B 23 00       B   281    			ld iy,opcode_vars
001F94 FD09                B   282    			add iy,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F96 FD7E00              B   283    			ld a,(iy)						;a 
001F99 C630                B   284    			add a,30h						;co
001F9B C3 54 20 00         B   285    			jp d_output_char
                           B   286    
001F9F FE5F                B   287    d_not_sdig	cp '_'
001FA1 20 12               B   288    			jr nz,d_nhlsubst				; s
001FA3 E5                  B   289    			push hl
001FA4 21 82 28 00         B   290    			ld hl,hl_subs
001FA8 CD 60 20 00         B   291    hl_subst	call prefix_to_offset
001FAC CD A8 1E 00         B   292    			call index_table				; r
001FB0 E1                  B   293    			pop hl
001FB1 C3 58 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FB5 FE7C                B   296    d_nhlsubst	cp '|'
001FB7 20 07               B   297    			jr nz,d_noinvhls
001FB9 E5                  B   298    			push hl
001FBA 21 88 28 00         B   299    			ld hl,inv_hl_subs
001FBE 18 E8               B   300    			jr hl_subst
                           B   301    			
001FC0 FE68                B   302    d_noinvhls	cp 'h'							;sy
001FC2 20 07               B   303    			jr nz,d_nhsubst
001FC4 E5                  B   304    			push hl
001FC5 21 8E 28 00         B   305    			ld hl,h_subs
001FC9 18 DD               B   306    			jr hl_subst
                           B   307    			
001FCB FE6C                B   308    d_nhsubst	cp 'l'							;sy
001FCD 20 07               B   309    			jr nz,d_nlsubst
001FCF E5                  B   310    			push hl
001FD0 21 95 28 00         B   311    			ld hl,l_subs
001FD4 18 D2               B   312    			jr hl_subst
                           B   313    			
001FD6 FE24                B   314    d_nlsubst	cp '$'
001FD8 20 07               B   315    			jr nz,d_nihlsubst				; s
001FDA E5                  B   316    			push hl
001FDB 21 9C 28 00         B   317    			ld hl,ind_hl_subs
001FDF 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
001FE1                     B   321    d_nihlsubst	
                           B   322    
001FE1 FE7E                B   323    			cp '~'							; s
001FE3 20 1F               B   324    			jr nz,ntable_r
001FE5 11 D7 27 00         B   325    			ld de,table_r
001FE9 23                  B   326    do_table 	inc hl
001FEA 01000000            B   327    			ld bc,0							; t
001FEE 4E                  B   328    			ld c,(hl)
001FEF FD21 4B 23 00       B   329    			ld iy,opcode_vars
001FF4 FD09                B   330    			add iy,bc
001FF6 FD4600              B   331    			ld b,(iy)						;in
001FF9 E5                  B   332    			push hl
001FFA EB                  B   333    			ex de,hl
001FFB CD A8 1E 00         B   334    			call index_table				; r
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FFF E1                  B   335    			pop hl
002000 C3 58 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002004 11 E2 27 00         B   338    ntable_r	ld de,table_r2					; s
002008 FE3D                B   339    			cp '='
00200A 28 DD               B   340    			jr z,do_table
                           B   341    			
00200C 11 ED 27 00         B   342    			ld de,table_rp					; s
002010 FE40                B   343    			cp '@'
002012 28 D5               B   344    			jr z,do_table 
                           B   345    			
002014 11 F4 27 00         B   346    			ld de,table_rp2					; s
002018 FE2A                B   347    			cp '*'
00201A 28 CD               B   348    			jr z,do_table
                           B   349    			
00201C 11 5A 28 00         B   350    			ld de,table_rp3					; s
002020 FE3C                B   351    			cp '<'
002022 28 C5               B   352    			jr z,do_table
                           B   353    			
002024 11 62 28 00         B   354    			ld de,table_rp4					; s
002028 FE7D                B   355    			cp '}'
00202A 28 BD               B   356    			jr z,do_table
                           B   357    			
00202C 11 FC 27 00         B   358    			ld de,table_cc					; s
002030 FE23                B   359    			cp '#'
002032 28 B5               B   360    			jr z,do_table 
                           B   361    			
002034 11 08 28 00         B   362    			ld de,table_alu					; s
002038 FE3A                B   363    			cp ':'
00203A 28 AD               B   364    			jr z,do_table 
                           B   365    			
00203C 11 34 28 00         B   366    			ld de,table_rot					; s
002040 FE25                B   367    			cp '%'
002042 28 A5               B   368    			jr z,do_table 
                           B   369    			
002044 11 72 28 00         B   370    			ld de,table_rst					; s
002048 FE3B                B   371    			cp ';'
00204A 28 9D               B   372    			jr z,do_table 
                           B   373    
00204C 11 6A 28 00         B   374    			ld de,table_rp5					; s
002050 FE7B                B   375    			cp '{'
002052 28 95               B   376    			jr z,do_table 
                           B   377    
002054                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
002054                     B   382    d_output_char
                           B   383    
002054 CD 21 23 00         B   384    			call show_ascii_char
                           B   385    
002058                     B   386    next_opcode_ascii_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   387    
002058 CB7E                B   388    			bit 7,(hl)						;if
00205A C0                  B   389    			ret nz
00205B 23                  B   390    			inc hl
00205C C3 B3 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
002060                     B   397    prefix_to_offset
                           B   398    
002060 0602                B   399    			ld b,2							;se
002062 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
002066 C0                  B   401    			ret nz
002067 05                  B   402    			dec b
002068 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
00206C C0                  B   404    			ret nz
00206D 05                  B   405    			dec b
00206E C9                  B   406    			ret
                           B   407    			
                           B   408    			
00206F                     B   409    check_nxt_byte_prefix			
                           B   410    
00206F DD23                B   411    			inc ix
002071 DD7E00              B   412    			ld a,(ix)
002074 FEDD                B   413    			cp 0ddh
002076 C8                  B   414    			ret z
002077 FEED                B   415    			cp 0edh
002079 C8                  B   416    			ret z
00207A FEFD                B   417    			cp 0fdh
00207C C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
00207D                     B   428    find_instruction_ascii
                           B   429    
00207D 0600                B   430    			ld b,0						; defau
                           B   431    
00207F FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
002083 28 12               B   433    			jr z,not_ddcb_fdcb_inst
002085 21 B1 27 00         B   434    			ld hl,ddcb_fdcb_z6		
002089 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
00208C FD7E 03             B   436    			ld a,(iy+var_z)
00208F FE06                B   437    			cp 6
002091 C8                  B   438    			ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002092 21 79 27 00         B   439    			ld hl,ddcb_fdcb_zn6					002096 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002097                     B   444    not_ddcb_fdcb_inst
                           B   445    
002097 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
00209B 28 08               B   447    			jr z,not_cb_inst
00209D 21 01 25 00         B   448    			ld hl,cb_group		
0020A1 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020A4 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
0020A5                     B   454    not_cb_inst
                           B   455    
0020A5 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020A9 CA CA 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020AD FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020B0 B7                  B   460    			or a
0020B1 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020B3 FD7E 03             B   464    			ld a,(iy+var_z)				
0020B6 B7                  B   465    			or a
0020B7 20 0D               B   466    			jr nz,notedx0z0
0020B9 21 28 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020BD FD7E 02             B   468    			ld a,(iy+var_y)
0020C0 FE06                B   469    			cp 6
0020C2 C0                  B   470    			ret nz
0020C3 0601                B   471    			ld b,1
0020C5 C9                  B   472    			ret
                           B   473    
0020C6 FE01                B   474    notedx0z0	cp 1
0020C8 20 0D               B   475    			jr nz,notedx0z1
0020CA 21 39 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
0020CE FD7E 02             B   477    			ld a,(iy+var_y)
0020D1 FE06                B   478    			cp 6
0020D3 C0                  B   479    			ret nz
0020D4 0601                B   480    			ld b,1
0020D6 C9                  B   481    			ret
                           B   482    
0020D7 FE02                B   483    notedx0z1	cp 2
0020D9 20 05               B   484    			jr nz,notedx0z2
0020DB 21 4F 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
0020DF C9                  B   486    			ret
                           B   487    
0020E0 FE03                B   488    notedx0z2	cp 3
0020E2 20 05               B   489    			jr nz,notedx0z3
0020E4 21 5B 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E8 C9                  B   491    			ret
                           B   492    			
0020E9 FE04                B   493    notedx0z3	cp 4
0020EB 20 05               B   494    			jr nz,notedx0z4
0020ED 21 67 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
0020F1 C9                  B   496    			ret
                           B   497    
0020F2 FE06                B   498    notedx0z4	cp 6
0020F4 20 05               B   499    			jr nz,notedx0z6				;x0 / z
0020F6 21 71 25 00         B   500    			ld hl,ed_x0_z6
0020FA C9                  B   501    			ret
                           B   502    
0020FB FE07                B   503    notedx0z6	cp 7
0020FD C2 D4 27 00         B   504    			jr nz,bad_opcode			;x0 / z
002101 21 7C 25 00         B   505    			ld hl,ed_x0_z7
002105 FD46 05             B   506    			ld b,(iy+var_q)
002108 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002109 FE01                B   511    notedx0		cp 1	
00210B 20 68               B   512    			jr nz,ed_xn1
                           B   513    
00210D FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002110 B7                  B   515    			or a
002111 20 0D               B   516    			jr nz,ed_x1_zn0
002113 21 91 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002117 FD7E 02             B   518    			ld a,(iy+var_y)
00211A FE06                B   519    			cp 6
00211C C0                  B   520    			ret nz
00211D 0601                B   521    			ld b,1
00211F C9                  B   522    			ret
                           B   523    			
002120 FE01                B   524    ed_x1_zn0	cp 1
002122 20 0D               B   525    			jr nz,ed_x1_zn1
002124 21 A1 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002128 FD7E 02             B   527    			ld a,(iy+var_y)
00212B FE06                B   528    			cp 6
00212D C0                  B   529    			ret nz
00212E 0601                B   530    			ld b,1
002130 C9                  B   531    			ret
                           B   532    		
002131 FE02                B   533    ed_x1_zn1	cp 2
002133 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002135 21 B6 25 00         B   535    			ld hl,ed_x1_z2	
002139 FD46 05             B   536    			ld b,(iy+var_q)
00213C C9                  B   537    			ret
                           B   538    
00213D FE03                B   539    ed_x1_zn2	cp 3
00213F 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002141 21 CC 25 00         B   541    			ld hl,ed_x1_z3	
002145 FD46 05             B   542    			ld b,(iy+var_q)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002148 C9                  B   543    			ret
                           B   544    			
002149 FE04                B   545    ed_x1_zn3	cp 4							;z 
00214B 20 08               B   546    			jr nz,ed_x1_zn4
00214D 21 E1 25 00         B   547    			ld hl,ed_x1_z4
002151 FD46 02             B   548    			ld b,(iy+var_y)
002154 C9                  B   549    			ret
                           B   550    			
002155 FE05                B   551    ed_x1_zn4	cp 5
002157 20 08               B   552    			jr nz,ed_x1_zn5
002159 21 19 26 00         B   553    			ld hl,ed_x1_z5					;z 
00215D FD46 02             B   554    			ld b,(iy+var_y)
002160 C9                  B   555    			ret
                           B   556    			
002161 FE06                B   557    ed_x1_zn5	cp 6
002163 20 08               B   558    			jr nz,ed_x1_zn6					;z=
002165 21 48 26 00         B   559    			ld hl,ed_x1_z6
002169 FD46 02             B   560    			ld b,(iy+var_y)
00216C C9                  B   561    			ret
                           B   562    			
00216D 21 6D 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
002171 FD46 02             B   564    			ld b,(iy+var_y)
002174 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
002175 FE02                B   569    ed_xn1		cp 2
002177 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
002179 FD46 02             B   572    			ld b,(iy+var_y)
00217C FD7E 03             B   573    			ld a,(iy+var_z)
00217F B7                  B   574    			or a
002180 20 05               B   575    			jr nz,edx2zn0
002182 21 91 26 00         B   576    			ld hl,ed_x2_z0					;x=
002186 C9                  B   577    			ret
                           B   578    
002187 FE01                B   579    edx2zn0		cp 1
002189 20 05               B   580    			jr nz,edx2zn1
00218B 21 AB 26 00         B   581    			ld hl,ed_x2_z1					;x=
00218F C9                  B   582    			ret
                           B   583    
002190 FE02                B   584    edx2zn1		cp 2
002192 20 05               B   585    			jr nz,edx2zn2
002194 21 C5 26 00         B   586    			ld hl,ed_x2_z2					;x=
002198 C9                  B   587    			ret
                           B   588    
002199 FE03                B   589    edx2zn2		cp 3
00219B 20 05               B   590    			jr nz,edx2zn3
00219D 21 F5 26 00         B   591    			ld hl,ed_x2_z3					;x=
0021A1 C9                  B   592    			ret
                           B   593    
0021A2 21 27 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021A6 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021A7 FE03                B   599    ed_xn2		cp 3
0021A9 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021AB FD46 02             B   602    			ld b,(iy+var_y)
0021AE FD7E 03             B   603    			ld a,(iy+var_z)
0021B1 FE02                B   604    			cp 2
0021B3 20 05               B   605    			jr nz,edx3zn2
0021B5 21 5D 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021B9 C9                  B   607    			ret
0021BA FE03                B   608    edx3zn2		cp 3
0021BC 20 05               B   609    			jr nz,edx3zn3
0021BE 21 6B 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021C2 C9                  B   611    			ret
                           B   612    
0021C3                     B   613    edx3zn3
                           B   614    
0021C3                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
0021C3                     B   619    invalid_op
0021C3 21 D4 27 00         B   620    			ld hl,bad_opcode				; x
0021C7 0600                B   621    			ld b,0
0021C9 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021CA FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
0021CD B7                  B   629    			or a
0021CE C2 66 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
0021D2 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
0021D5 B7                  B   636    			or a
0021D6 20 14               B   637    			jr nz,x0_z_not_zero
0021D8 21 53 23 00         B   638    			ld hl,x0_z0
0021DC FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
0021DF 47                  B   640    			ld b,a
0021E0 D604                B   641    			sub 4
0021E2 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
0021E5 78                  B   643    			ld a,b
0021E6 FE04                B   644    			cp 4
0021E8 D8                  B   645    			ret c
0021E9 0604                B   646    			ld b,4						;if y >
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021EB C9                  B   647    			ret
                           B   648    			
0021EC                     B   649    x0_z_not_zero		
                           B   650    			
0021EC FE01                B   651    			cp 1
0021EE 20 1A               B   652    			jr nz,x0_z_not_one
0021F0 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
0021F3 FE06                B   654    			cp 6
0021F5 20 0B               B   655    			jr nz,x0z1yn6
0021F7 CD 06 23 00         B   656    			call test_ixiy_prefix		;if y=6
0021FB 28 05               B   657    			jr z,x0z1yn6				;altern
0021FD 21 86 23 00         B   658    			ld hl,x0_z1_y6
002201 C9                  B   659    			ret
                           B   660    
002202 21 73 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002206 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002209 C9                  B   663    			ret 
                           B   664    			
00220A                     B   665    x0_z_not_one
                           B   666    
00220A FE02                B   667    			cp 2
00220C 20 08               B   668    			jr nz,x0_z_not_two
00220E 21 8E 23 00         B   669    			ld hl,x0_z2
002212 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002215 C9                  B   671    			ret
                           B   672    			
002216                     B   673    x0_z_not_two
                           B   674    
002216 FE03                B   675    			cp 3
002218 20 08               B   676    			jr nz,x0_z_not_three
00221A 21 DA 23 00         B   677    			ld hl,x0_z3
00221E FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002221 C9                  B   679    			ret
                           B   680    			
002222                     B   681    x0_z_not_three
                           B   682    
002222 FE04                B   683    			cp 4
002224 20 05               B   684    			jr nz,x0_z_not_four
002226 21 EA 23 00         B   685    			ld hl,x0_z4					;no ini
00222A C9                  B   686    			ret			
                           B   687    			
00222B                     B   688    x0_z_not_four
                           B   689    
00222B FE05                B   690    			cp 5
00222D 20 05               B   691    			jr nz,x0_z_not_five
00222F 21 F2 23 00         B   692    			ld hl,x0_z5					;no ini
002233 C9                  B   693    			ret				
                           B   694    			
002234                     B   695    x0_z_not_five
                           B   696    
002234 FE06                B   697    			cp 6
002236 20 1A               B   698    			jr nz,x0_z_not_six
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002238 21 FA 23 00         B   699    			ld hl,x0_z6					;normal
00223C FD7E 02             B   700    			ld a,(iy+var_y)
00223F FE07                B   701    			cp 7
002241 C0                  B   702    			ret nz
002242 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
002246 20 05               B   704    			jr nz,altx0z6
002248 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
00224C C8                  B   706    			ret z	
00224D 21 03 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002251 C9                  B   708    			ret
                           B   709    
                           B   710    
002252                     B   711    x0_z_not_six
                           B   712    			
002252 21 0B 24 00         B   713    			ld hl,x0_z7					;x=0, z
002256 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
002259 CD 06 23 00         B   715    			call test_ixiy_prefix
00225D C8                  B   716    			ret z
00225E 21 25 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
002262 FD46 05             B   718    			ld b,(iy+var_q)				;this i
002265 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
002266 FE01                B   723    x_not_zero	cp 1						; is x 
002268 20 32               B   724    			jr nz,x_not_one
                           B   725    			
00226A 21 37 24 00         B   726    			ld hl,x1_table				; x=1
00226E CD 06 23 00         B   727    			call test_ixiy_prefix
002272 20 11               B   728    			jr nz,pref_x1
002274 FD7E 02             B   729    			ld a,(iy+var_y)
002277 FE06                B   730    			cp 6
002279 C0                  B   731    			ret nz
00227A FD7E 03             B   732    			ld a,(iy+var_z)
00227D FE06                B   733    			cp 6
00227F C0                  B   734    			ret nz
002280 21 55 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
002284 C9                  B   736    			ret
                           B   737    
002285 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
002288 FE06                B   739    			cp 6
00228A 20 05               B   740    			jr nz,x1yn6
00228C 21 41 24 00         B   741    			ld hl,x1_y6
002290 C9                  B   742    			ret
                           B   743    			
002291 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
002294 FE06                B   745    			cp 6
002296 C0                  B   746    			ret nz
002297 21 4B 24 00         B   747    			ld hl,x1_z6
00229B C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   751    			
00229C FE02                B   752    x_not_one	cp 2						; is x 
00229E 20 05               B   753    			jr nz,x_not_two
0022A0 21 59 24 00         B   754    			ld hl,x2_table				; no in
0022A4 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022A5 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
0022A8 B7                  B   760    			or a
0022A9 20 05               B   761    			jr nz,x3_z_not_zero
0022AB 21 5E 24 00         B   762    			ld hl,x3_z0					; no in
0022AF C9                  B   763    			ret
                           B   764    						
0022B0                     B   765    x3_z_not_zero
                           B   766    
0022B0 FE01                B   767    			cp 1
0022B2 20 11               B   768    			jr nz,x3_z_not_one
0022B4 21 66 24 00         B   769    			ld hl,x3_z1_q0
0022B8 FD7E 05             B   770    			ld a,(iy+var_q)
0022BB B7                  B   771    			or a
0022BC C8                  B   772    			ret z						; no in
0022BD 21 6E 24 00         B   773    			ld hl,x3_z1_q1
0022C1 FD46 04             B   774    			ld b,(iy+var_p)				; index
0022C4 C9                  B   775    			ret
                           B   776    
0022C5                     B   777    x3_z_not_one
                           B   778    
0022C5 FE02                B   779    			cp 2
0022C7 20 05               B   780    			jr nz,x3_z_not_two
0022C9 21 85 24 00         B   781    			ld hl,x3_z2					;no ini
0022CD C9                  B   782    			ret
                           B   783    
0022CE                     B   784    x3_z_not_two
                           B   785    
0022CE FE03                B   786    			cp 3
0022D0 20 08               B   787    			jr nz,x3_z_not_three
0022D2 21 8E 24 00         B   788    			ld hl,x3_z3
0022D6 FD46 02             B   789    			ld b,(iy+var_y)				;index 
0022D9 C9                  B   790    			ret
                           B   791    
0022DA                     B   792    x3_z_not_three
                           B   793    
0022DA FE04                B   794    			cp 4
0022DC 20 05               B   795    			jr nz,x3_z_not_four
0022DE 21 C3 24 00         B   796    			ld hl,x3_z4				;no initial
0022E2 C9                  B   797    			ret						
                           B   798    
                           B   799    
0022E3                     B   800    x3_z_not_four
                           B   801    
0022E3 FE05                B   802    			cp 5
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022E5 20 11               B   803    			jr nz,x3_z_not_five
0022E7 21 CE 24 00         B   804    			ld hl,x3_z5_q0
0022EB FD7E 05             B   805    			ld a,(iy+var_q)
0022EE B7                  B   806    			or a
0022EF C8                  B   807    			ret z						;no ind
0022F0 21 D7 24 00         B   808    			ld hl,x3_z5_q1
0022F4 FD46 04             B   809    			ld b,(iy+var_p)				;else i
0022F7 C9                  B   810    			ret
                           B   811    
0022F8                     B   812    x3_z_not_five
                           B   813    
0022F8 FE06                B   814    			cp 6
0022FA 20 05               B   815    			jr nz,x3_z_not_six
0022FC 21 F5 24 00         B   816    			ld hl,x3_z6					;no ind
002300 C9                  B   817    			ret
                           B   818    
002301                     B   819    x3_z_not_six
                           B   820    
002301 21 F9 24 00         B   821    			ld hl,x3_z7					;x=3, z
002305 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002306                     B   827    test_ixiy_prefix
                           B   828    
002306 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00230A C0                  B   830    			ret nz
00230B FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00230F C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002310                     B   837    show_hex_byte
                           B   838    
002310 E5                  B   839    			push hl
002311 21 BD 28 00         B   840    			ld hl,output_byte_txt
002315 E5                  B   841    			push hl
002316 CD 68 10 00         B   842    			call hexbyte_to_ascii
00231A E1                  B   843    			pop hl
00231B CD 25 0F 00         B   844    			call os_print_string
00231F E1                  B   845    			pop hl
002320 C9                  B   846    			ret
                           B   847    			
                           B   848    
002321                     B   849    show_ascii_char
                           B   850    
002321 E5                  B   851    			push hl
002322 21 C0 28 00         B   852    			ld hl,output_char_txt
002326 77                  B   853    			ld (hl),a
002327 CD 25 0F 00         B   854    			call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232B E1                  B   855    			pop hl
00232C C9                  B   856    			ret
                           B   857    		
                           B   858    		
00232D DD22 BA 28 00       B   859    show_ix		ld (d_work_address),ix
002332 3A BC 28 00         B   860    			ld a,(d_work_address+2)
002336 CD 10 23 00         B   861    			call show_hex_byte
00233A 3A BB 28 00         B   862    			ld a,(d_work_address+1)
00233E CD 10 23 00         B   863    			call show_hex_byte
002342 3A BA 28 00         B   864    			ld a,(d_work_address)
002346 CD 10 23 00         B   865    			call show_hex_byte
00234A C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
00234B                     B   896    opcode_vars
                           B   897    
00234B 00                  B   898    prefix_bits_loc	db 0	
00234C 00                  B   899    var_x_loc		db 0	
00234D 00                  B   900    var_y_loc		db 0	
00234E 00                  B   901    var_z_loc		db 0	
00234F 00                  B   902    var_p_loc		db 0	
002350 00                  B   903    var_q_loc		db 0
002351 00                  B   904    var_calc_loc	db 0
002352 01                  B   905    var_adl_loc		db 1
                           B   906    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
002353 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
002356 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
00235E A7 
00235F 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
002366 4A522064 80         B   922    			db 'JR ','d',80h			; y3
00236B 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
002373 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
002379 2C2180 
00237C 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
002384 04 80 
002386 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
00238E 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002396 2CC1 
002398 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023A0 43A9 
0023A2 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023AA 2CC1 
0023AC 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023B4 45A9 
0023B6 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023BE DF 
0023BF 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023C7 A9 
0023C8 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
0023D0 C1 
0023D1 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
0023D9 A9 
                           B   937    
0023DA 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
0023E1 80 
0023E2 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
0023E9 80 
                           B   940    			
0023EA 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
0023F1 80 
                           B   942    
0023F2 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
0023F9 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   944    			
0023FA 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002400 2C5E80 
002403 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00240B 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00240F 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002413 524CC1              B   950    			db 'RL','A'+80h			;y=2
002416 5252C1              B   951    			db 'RR','A'+80h			;y=3
002419 4441C1              B   952    			db 'DA','A'+80h			;y=4
00241C 4350CC              B   953    			db 'CP','L'+80h			;y=5
00241F 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002422 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002425 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
00242B 2C2480 
00242E 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
002436 80 
                           B   959    		
                           B   960    
                           B   961    
002437 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
00243D 2C7E 03 80 
002441 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		002447 2C3D 03 80 
00244B 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002451 2C7E 03 80 
                           B   965    
002455 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
002459 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
00245E 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
002465 80 
                           B   975    
002466 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
00246D 80 
00246E 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
002473 4558D8              B   978    			db 'EX','X'+80h			;p=1
002476 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
00247C 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
002484 80 
                           B   981    
002485 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
00248B 2C2180 
                           B   983    
00248E 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
002494 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00249B 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024A3 C1 
0024A4 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024AC 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024B4 2C5F80 
0024B7 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024BF 44C9                B   990    			db 'D','I'+80h			;y = 6
0024C1 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
0024C3 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024CB 2C2180 
                           B   994    
0024CE 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
0024D6 80 
0024D7 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
0024DF 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
0024E6 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
0024ED 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
0024F5 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
0024F9 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002500 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002501 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002507 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
00250E 2C7E 03 80 
002512 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002519 2C7E 03 80 
00251D 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002524 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002528 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
00252E 2C285EA9 
002532 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
002539 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002541 2C7E 02 80 
002545 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			00254D 5FA9 
                           B  1022    
00254F 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	002556 2C49582F 80 
00255B 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
002562 2C49592F 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002567 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
00256F 02 80 
                           B  1026    
002571 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
002579 7D 04 80 
                           B  1028    
00257C 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	002582 2C285FA9 
002586 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		00258E 3C 04 80 
                           B  1031    
002591 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002596 2C284243 A9 
00259B 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
0025A1 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025A9 2C7E 02 80 
0025AD 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025B5 B0 
                           B  1037    
0025B6 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025BE 40 04 80 
0025C1 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025C9 40 04 80 
                           B  1040    
0025CC 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		0025D4 40 04 80 
0025D7 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	0025DD 2C2821A9 
                           B  1043    
0025E1 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
0025E4 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
0025EA 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			0025F2 49592F80 
0025F6 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
0025FC 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002604 80 
002605 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00260B 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002613 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002619 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00261F 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002625 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
00262D 49582F80 
002631 BF                  B  1056    				db '?'+80h					;y=
002632 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
00263A 80 
00263B 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002642 BF                  B  1059    				db '?'+80h					;y=
002643 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1062    	
002648 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
00264C BF                  B  1064    				db '?'+80h					;y=
00264D 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002651 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002655 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
00265D 80 
00265E 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
002665 534CD0              B  1069    				db 'SL','P'+80h				;y=
002668 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
00266D 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
002673 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
002679 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
00267F 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
002685 5252C4              B  1076    				db 'RR','D'+80h				;y=
002688 524CC4              B  1077    				db 'RL','D'+80h				;y=
00268B 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
00268E 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002691 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002695 4C444926 80         B  1083    				db 'LDI&',80h					00269A 4C444426 80         B  1084    				db 'LDD&',80h					00269F 4C444952 2680       B  1085    				db 'LDIR&',80h					0026A5 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026AB BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026AF 43504926 80         B  1089    				db 'CPI&',80h					0026B4 43504426 80         B  1090    				db 'CPD&',80h					0026B9 43504952 2680       B  1091    				db 'CPIR&',80h					0026BF 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026C5 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026CB 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
0026D1 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
0026D8 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
0026DF 494E4926 80         B  1098    				db 'INI&',80h		; y4
0026E4 494E4426 80         B  1099    				db 'IND&',80h		; y5
0026E9 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
0026EF 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
0026F5 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
0026FB 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002701 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002708 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00270F 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002715 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00271B 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002721 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002727 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
00272D 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002733 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
00273A 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002741 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
002748 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
00274F 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
002756 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
00275D 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
002764 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
00276B 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
002772 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
002779 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
00277F 2C25 02 202480 
002785 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		00278C 2C2480 
00278F 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002795 2C524553 26203E 02 
00279D 2C2480 
0027A0 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027A6 2C534554 26203E 02 
0027AE 2C2480 
                           B  1137    
0027B1 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027B6 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027BD 2C2480 
0027C0 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		0027C7 2C2480 
0027CA 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		0027D1 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
0027D4 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
0027D7 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027DF 2480C1 
                           B  1151    
0027E2 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027EA 2480C1 
                           B  1153    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027ED 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
0027F4 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
0027FC 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002804 50C5D0CD 
                           B  1159    	
002808 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002810 44432620 41AC5355 
002818 4226A053 42432041 
002820 26AC 
002822 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
00282A 26A04F52 26A04350 
002832 26A0 
                           B  1162    			
002834 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
00283C 2680524C 26805252 
002844 2680 
002846 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
00284E 2680534C 4C268053 
002856 524C2680 
                           B  1165    	
00285A 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
002862 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
00286A 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
002872 30B0                B  1172    table_rst	db '0','0'+80h
002874 30B8                B  1173    			db '0','8'+80h
002876 31B0                B  1174    			db '1','0'+80h
002878 31B8                B  1175    			db '1','8'+80h
00287A 32B0                B  1176    			db '2','0'+80h
00287C 32B8                B  1177    			db '2','8'+80h	
00287E 33B0                B  1178    			db '3','0'+80h
002880 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
002882 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
002888 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
00288E C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002895 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
00289C 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028A4 A9284959 2FA9 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028AA                     B  1198    adl_prefix_list
                           B  1199    
0028AA 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028B2 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028BA 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028BD 2D2D00              B  1206    output_byte_txt	db "--",0
0028C0 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028C2 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028C5                     B     6    os_cmd_del
                           B     7    	
0028C5 CD 6A 16 00         B     8    				call os_check_volume_format	
0028C9 C0                  B     9    				ret nz
                           B    10    			
0028CA CD D2 28 00         B    11    				call filename_or_bust
                           B    12    				
0028CE C3 D2 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
0028D2                     B    18    filename_or_bust
                           B    19    			
0028D2 7E                  B    20    				ld a,(hl)					;is
0028D3 B7                  B    21    				or a
0028D4 C0                  B    22    				ret nz
0028D5 E1                  B    23    				pop hl						;ot
0028D6 C3 D5 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
0028DA                     B     5    os_cmd_dir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B     6    
0028DA CD 6A 16 00         B     7    				call os_check_volume_format	
0028DE C0                  B     8    				ret nz
                           B     9    				
0028DF CD B9 29 00         B    10    				call div_line
0028E3 CD 36 52 00         B    11    				call fs_get_current_dir_name	0028E7 D8                  B    12    				ret c
0028E8 C0                  B    13    				ret nz
0028E9 CD 25 0F 00         B    14    				call os_print_string
0028ED CD 3A 1A 00         B    15    				call fs_get_dir_cluster			0028F1 7A                  B    16    				ld a,d
0028F2 B3                  B    17    				or e
0028F3 20 08               B    18    				jr nz,dcmdnr
0028F5 CD 29 4F 00         B    19    				call fs_get_volume_label
0028F9 CD 25 0F 00         B    20    				call os_print_string
0028FD CD B8 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002901 CD B9 29 00         B    23    nrootdir		call div_line
002905 CD 2E 4E 00         B    24    				call fs_goto_first_dir_entry
002909 D8                  B    25    				ret c
00290A 20 6F               B    26    				jr nz,os_dlr
00290C AF                  B    27    				xor a
00290D 32 18 60 00         B    28    				ld (os_linecount),a
                           B    29    				
002911 CD 45 4E 00         B    30    os_dfllp		call fs_get_dir_entry			002915 D8                  B    31    				ret c
002916 20 63               B    32    				jr nz,os_dlr					002918 C5                  B    33    				push bc
002919 CD 25 0F 00         B    34    				call os_print_string			00291D CD E3 13 00         B    35    				call os_get_cursor_position		002921 060E                B    36    				ld b,14
002923 CD C3 13 00         B    37    				call os_set_cursor_position	
002927 C1                  B    38    				pop bc
002928 CB40                B    39    				bit 0,b							00292A 28 06               B    40    				jr z,os_deif		
00292C 21 C6 29 00         B    41    				ld hl,dir_txt					002930 18 32               B    42    				jr os_dpl
                           B    43    				
002932 21 24 55 00         B    44    os_deif			ld hl,os_hex_prefix_txt			002936 CD 25 0F 00         B    45    				call os_print_string
00293A ED53 80 67 00       B    46    				ld (scratch_pad),de
00293F 79                  B    47    				ld a,c
002940 32 83 67 00         B    48    				ld (scratch_pad+3),a
002944 21 83 60 00         B    49    				ld hl,output_line
002948 E5                  B    50    				push hl
002949 ED5B 82 67 00       B    51    				ld de,(scratch_pad+2)
00294E CD 8D 10 00         B    52    				call hexword_to_ascii
002952 ED5B 80 67 00       B    53    				ld de,(scratch_pad)
002957 CD 8D 10 00         B    54    				call hexword_to_ascii
00295B 3600                B    55    				ld (hl),0
00295D E1                  B    56    				pop hl
00295E 0607                B    57    				ld b,7							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002960 CD 45 10 00         B    58    				call os_skip_leading_ascii_zero
002964 CD 25 0F 00         B    59    os_dpl			call os_print_string
002968 CD B8 13 00         B    60    				call os_new_line
                           B    61    				
00296C CD D2 4E 00         B    62    				call fs_goto_next_dir_entry
002970 20 09               B    63    				jr nz,os_dlr					002972 CD B6 11 00         B    64    				call os_count_lines
002976 3E79                B    65    				ld a,'y'
002978 B8                  B    66    				cp b
002979 28 96               B    67    				jr z,os_dfllp
                           B    68    				
00297B CD B9 29 00         B    69    os_dlr			call div_line					00297F CD 61 48 00         B    70    				call fs_calc_free_space
002983 D8                  B    71    				ret c	
002984 CD 92 29 00         B    72    				call show_hlde_decimal
002988 21 CC 29 00         B    73    				ld hl,kb_spare_txt
00298C CD 25 0F 00         B    74    				call os_print_string
002990 AF                  B    75    				xor a
002991 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
002992                     B    80    show_hlde_decimal
                           B    81    
002992 CD 4B 12 00         B    82    				call os_hex_to_decimal			002996 11070000            B    83    				ld de,7
00299A 19                  B    84    				add hl,de						00299B 43                  B    85    				ld b,e
00299C 11 83 60 00         B    86    				ld de,output_line
0029A0 D5                  B    87    				push de
0029A1 7E                  B    88    dec2strlp		ld a,(hl)						0029A2 B7                  B    89    				or a
0029A3 20 03               B    90    				jr nz,foundlnz
0029A5 2B                  B    91    				dec hl
0029A6 10 F9               B    92    				djnz dec2strlp
0029A8 04                  B    93    foundlnz		inc b
0029A9 7E                  B    94    ndecchar		ld a,(hl)						0029AA C630                B    95    				add a,030h
0029AC 12                  B    96    				ld (de),a
0029AD 13                  B    97    				inc de
0029AE 2B                  B    98    				dec hl
0029AF 10 F8               B    99    				djnz ndecchar
0029B1 AF                  B   100    				xor a
0029B2 12                  B   101    				ld (de),a
0029B3 E1                  B   102    				pop hl							0029B4 CD 25 0F 00         B   103    				call os_print_string
0029B8 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
0029B9 0E2D                B   108    div_line		ld c,'-'
0029BB 0613                B   109    				ld b,19
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0029BD CD 22 1A 00         B   110    				call os_print_multiple_chars
0029C1 CD B8 13 00         B   111    				call os_new_line
0029C5 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
0029C6 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
0029CC 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
0029D4 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0029D6                     B     5    os_cmd_f			
                           B     6    
0029D6 CD 27 1C 00         B     7    				call get_start_and_end			                           B     8    			
0029DA CD 50 1C 00         B     9    				call hexword_or_bust			0029DE CA F5 15 00         B    10    				jp z,os_no_args_error			0029E2 7B                  B    11    				ld a,e
0029E3 32 2F 60 00         B    12    				ld (fillbyte),a
                           B    13    					
0029E7 CD 15 1C 00         B    14    				call test_mem_range
0029EB DA F1 15 00         B    15    				jp c,os_range_error				                           B    16    					
0029EF 3A 2F 60 00         B    17    				ld a,(fillbyte)
0029F3 77                  B    18    f_floop			ld (hl),a
0029F4 EDA1                B    19    				cpi								0029F6 EA F3 29 00         B    20    				jp pe,f_floop
                           B    21    					
0029FA 3E20                B    22    				ld a,020h						0029FC B7                  B    23    				or a
0029FD C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
0029FE                     B     9    os_cmd_format
                           B    10    
0029FE 7E                  B    11    				ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
0029FF B7                  B    12    				or a
002A00 20 04               B    13    				jr nz,fgotargs					002A02 3E1F                B    14    				ld a,01fh						002A04 B7                  B    15    				or a
002A05 C9                  B    16    				ret
                           B    17    			
002A06                     B    18    fgotargs	
002A06 11 97 53 00         B    19    				ld de,fs_sought_filename
002A0A CD 7F 52 00         B    20    				call fs_clear_filename			002A0E E5                  B    21    				push hl							002A0F CD A6 0F 00         B    22    				call os_next_arg
002A13 20 04               B    23    				jr nz,fgotlab
002A15 21 46 2B 00         B    24    				ld hl,default_label
002A19 060B                B    25    fgotlab			ld b,11
002A1B CD FE 11 00         B    26    				call os_copy_ascii_run
002A1F E1                  B    27    				pop hl
                           B    28    				
002A20 3A 3A 5E 00         B    29    				ld a,(device_count)				002A24 B7                  B    30    				or a
002A25 28 25               B    31    				jr z,fno_dev
002A27 47                  B    32    				ld b,a
002A28 0E00                B    33    				ld c,0							002A2A DD21 EA 5E 00       B    34    				ld ix,host_device_hardware_info
002A2F DD7E00              B    35    fdev_lp			ld a,(ix)						002A32 CD 0C 1A 00         B    36    				call locate_driver_base			002A36 D5                  B    37    				push de
002A37 FDE1                B    38    				pop iy
002A39 ED130C              B    39    				lea de,iy+0ch					002A3C C5                  B    40    				push bc
002A3D 0607                B    41    				ld b,7
002A3F CD DF 11 00         B    42    				call os_compare_strings
002A43 C1                  B    43    				pop bc
002A44 28 0A               B    44    				jr z,format_dev
002A46 ED3220              B    45    				lea ix,ix+20h					002A49 0C                  B    46    				inc c
002A4A 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002A4C 3ED0                B    49    fno_dev			ld a,0d0h						002A4E B7                  B    50    				or a
002A4F C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
002A50 C5                  B    58    format_dev		push bc
002A51 CD B8 13 00         B    59    				call os_new_line
002A55 21 17 2B 00         B    60    				ld hl,form_dev_warn1
002A59 CD EF 13 00         B    61    				call os_show_packed_text
002A5D C1                  B    62    				pop bc
                           B    63    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A5E 79                  B    64    				ld a,c							002A5F C630                B    65    				add a,030h
002A61 32 46 5E 00         B    66    				ld (dev_txt+3),a
002A65 21 43 5E 00         B    67    				ld hl,dev_txt	
002A69 CD 25 0F 00         B    68    				call os_print_string			                           B    69    				
002A6D 79                  B    70    				ld a,c
002A6E CD 80 1A 00         B    71    				call dev_to_driver_lookup		002A72 E5                  B    72    				push hl
002A73 32 39 5E 00         B    73    				ld (current_driver),a
002A77 CD F3 19 00         B    74    				call show_dev_driver_name		002A7B DDE1                B    75    				pop ix
002A7D DD1701              B    76    				ld de,(ix+1)
002A80 FD21 2B 60 00       B    77    				ld iy,xrr_temp
002A85 FD1F00              B    78    				ld (iy),de						002A88 FDCB023E            B    79    				srl (iy+2)
002A8C FDCB011E            B    80    				rr (iy+1)
002A90 FDCB001E            B    81    				rr (iy+0)						002A94 FD1700              B    82    				ld de,(iy)						002A97 CD 92 29 00         B    83    				call show_hlde_decimal			002A9B 21 51 2B 00         B    84    				ld hl,kb_txt
002A9F CD 25 0F 00         B    85    				call os_print_string
002AA3 ED2205              B    86    				lea hl,ix+5		
002AA6 CD 25 0F 00         B    87    				call os_print_string			002AAA 3E29                B    88    				ld a,')'
002AAC CD 67 0F 00         B    89    				call os_print_char
                           B    90    				
002AB0 CD B8 13 00         B    91    				call os_new_line
002AB4 CD B8 13 00         B    92    				call os_new_line
002AB8 21 1E 2B 00         B    93    				ld hl,form_dev_warn2
002ABC CD 0E 2B 00         B    94    				call show_packed_text_and_cr
002AC0 CD F6 2A 00         B    95    				call confirm_yes
002AC4 20 28               B    96    				jr nz,ab_form
                           B    97    				
002AC6 21 28 2B 00         B    98    				ld hl,formatting_txt			002ACA CD 25 0F 00         B    99    				call os_print_string
                           B   100    				
002ACE CD E4 45 00         B   101    				call fs_format_device_command
002AD2 38 10               B   102    				jr c,form_err
002AD4 B7                  B   103    				or a
002AD5 20 0D               B   104    				jr nz,form_err
                           B   105    			
002AD7 21 38 2B 00         B   106    				ld hl,ok_txt					002ADB CD 25 0F 00         B   107    				call os_print_string
                           B   108    				
002ADF CD EB 31 00         B   109    f_end			call os_cmd_remount				002AE3 C9                  B   110    				ret
                           B   111    			
002AE4                     B   112    form_err
002AE4 21 3D 2B 00         B   113    				ld hl,ferr_txt
002AE8 CD 25 0F 00         B   114    				call os_print_string
002AEC 18 F1               B   115    				jr f_end
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
002AEE CD B8 13 00         B   121    ab_form			call os_new_line
002AF2 3E24                B   122    				ld a,024h						002AF4 B7                  B   123    				or a
002AF5 C9                  B   124    				ret
                           B   125    				
002AF6                     B   126    confirm_yes
                           B   127    			
002AF6 21 80 67 00         B   128    				ld hl,scratch_pad
002AFA 1E03                B   129    				ld e,3
002AFC E5                  B   130    				push hl
002AFD CD F1 10 00         B   131    				call os_user_input
002B01 E1                  B   132    				pop hl
002B02 C0                  B   133    				ret nz
002B03 0603                B   134    				ld b,3
002B05 11 EB 58 00         B   135    				ld de,yes_txt+1
002B09 CD DF 11 00         B   136    				call os_compare_strings
002B0D C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B0E                     B   140    show_packed_text_and_cr
                           B   141    			
002B0E CD EF 13 00         B   142    				call os_show_packed_text
002B12 CD B8 13 00         B   143    				call os_new_line
002B16 C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B17                     B   148    form_dev_warn1
                           B   149    
002B17 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
002B1E                     B   152    form_dev_warn2
                           B   153    
002B1E 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B26 9700 
                           B   155    
002B28                     B   156    formatting_txt
                           B   157    
002B28 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002B30 74696E67 2E2E2000 
                           B   159    
002B38 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002B3D 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002B45 00 
                           B   163    
002B46                     B   164    default_label	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   165    
002B46 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002B4E 534B00 
                           B   167    
002B51 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00006784            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B56 CD 27 1C 00         B     5    os_cmd_h		call get_start_and_end			002B5A 22 28 60 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002B5E CD 15 1C 00         B     8    				call test_mem_range
002B62 DA F1 15 00         B     9    				jp c,os_range_error				                           B    10    			
002B66 AF                  B    11    				xor a
002B67 32 03 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002B6B 2A 28 60 00         B    14    				ld hl,(find_hexstringascii)
002B6F 0600                B    15    				ld b,0
002B71 7E                  B    16    h_lfascii		ld a,(hl)						002B72 B7                  B    17    				or a
002B73 28 28               B    18    				jr z,h_no_text					002B75 FE22                B    19    				cp 022h
002B77 28 03               B    20    				jr z,h_found_quote
002B79 23                  B    21    				inc hl
002B7A 18 F5               B    22    				jr h_lfascii
002B7C 23                  B    23    h_found_quote	inc hl
002B7D 22 28 60 00         B    24    				ld (find_hexstringascii),hl
002B81 7E                  B    25    h_fasc_len		ld a,(hl)
002B82 B7                  B    26    				or a
002B83 CA F5 15 00         B    27    				jp z,os_no_args_error			002B87 FE22                B    28    				cp 022h
002B89 28 04               B    29    				jr z,h_startas
002B8B 23                  B    30    				inc hl
002B8C 04                  B    31    				inc b
002B8D 18 F2               B    32    				jr h_fasc_len
                           B    33    
002B8F 78                  B    34    h_startas		ld a,b
002B90 B7                  B    35    				or a
002B91 CA F5 15 00         B    36    				jp z,os_no_args_error			002B95 3E01                B    37    				ld a,1
002B97 32 03 2C 00         B    38    				ld (h_ascii_mode),a
002B9B 18 16               B    39    				jr h_start_search
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B    40    						
                           B    41    
002B9D 2A 28 60 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002BA1 0600                B    43    				ld b,0							002BA3 CD 50 1C 00         B    44    cntfbyts		call hexword_or_bust			002BA7 28 04               B    45    				jr z,gthexstr
002BA9 04                  B    46    				inc b
002BAA 23                  B    47    				inc hl
002BAB 18 F6               B    48    				jr cntfbyts
002BAD 78                  B    49    gthexstr		ld a,b
002BAE B7                  B    50    				or a
002BAF CA F5 15 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002BB3                     B    54    h_start_search
                           B    55    	
002BB3 DD2A 1C 60 00       B    56    				ld ix,(cmdop_start_address)		002BB8 DDE5                B    57    fndloop1		push ix
002BBA FDE1                B    58    				pop iy
002BBC 48                  B    59    				ld c,b							002BBD 2A 28 60 00         B    60    				ld hl,(find_hexstringascii)
002BC1 3A 03 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002BC5 B7                  B    62    				or a
002BC6 28 08               B    63    				jr z,h_hex
002BC8 FD7E00              B    64    				ld a,(iy)
002BCB BE                  B    65    				cp (hl)
002BCC 20 23               B    66    				jr nz,nofmatch
002BCE 18 0A               B    67    				jr h_matched
002BD0 CD 9C 10 00         B    68    h_hex			call ascii_to_hexword			002BD4 FD7E00              B    69    				ld a,(iy)
002BD7 BB                  B    70    				cp e
002BD8 20 17               B    71    				jr nz,nofmatch
002BDA FD23                B    72    h_matched		inc iy
002BDC 23                  B    73    				inc hl
002BDD 0D                  B    74    				dec c
002BDE 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002BE0 DDE5                B    77    				push ix							002BE2 D1                  B    78    				pop de							002BE3 DDE5                B    79    				push ix
002BE5 C5                  B    80    				push bc
002BE6 CD F0 12 00         B    81    				call os_show_hex_address
002BEA CD B8 13 00         B    82    				call os_new_line
002BEE C1                  B    83    				pop bc
002BEF DDE1                B    84    				pop ix
                           B    85    				
002BF1 DDE5                B    86    nofmatch		push ix
002BF3 DD23                B    87    				inc ix
002BF5 D1                  B    88    				pop de
002BF6 2A 1F 60 00         B    89    				ld hl,(cmdop_end_address)
002BFA AF                  B    90    				xor a
002BFB ED52                B    91    				sbc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BFD 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002BFF 3E20                B    94    				ld a,020h						002C01 B7                  B    95    				or a
002C02 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C03 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C04                     B     5    os_cmd_help		
002C04 AF                  B     6    				xor a
002C05 32 18 60 00         B     7    				ld (os_linecount),a
                           B     8    				
002C09 21 26 5A 00         B     9    				ld hl,packed_help1
002C0D CD EF 13 00         B    10    show_page		call os_show_packed_text
002C11 E5                  B    11    				push hl
002C12 CD B8 13 00         B    12    				call os_new_line
002C16 E1                  B    13    				pop hl
002C17 23                  B    14    				inc hl						;sk
002C18 7E                  B    15    				ld a,(hl)
002C19 FEFF                B    16    				cp 0ffh						;la
002C1B 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C1D CD B6 11 00         B    19    				call os_count_lines
002C21 78                  B    20    				ld a,b
002C22 FE79                B    21    				cp 'y'
002C24 28 E7               B    22    				jr z,show_page
                           B    23    
002C26                     B    24    last_help_page
002C26 AF                  B    25    				xor a
002C27 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C28                     B     5    os_cmd_gtr
                           B     6    
002C28 CD 50 1C 00         B     7    				call hexword_or_bust			002C2C CA DD 15 00         B     8    				jp z,os_no_start_addr
002C30 23                  B     9    fndquot1		inc hl
002C31 7E                  B    10    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002C32 B7                  B    11    				or a
002C33 CA F5 15 00         B    12    				jp z,os_no_args_error
002C37 FE22                B    13    				cp 022h							002C39 20 F5               B    14    				jr nz,fndquot1
002C3B 23                  B    15    				inc hl
002C3C E5                  B    16    				push hl
002C3D 7E                  B    17    fndquot2		ld a,(hl)
002C3E 23                  B    18    				inc hl
002C3F B7                  B    19    				or a
002C40 28 15               B    20    				jr z,noquot2
002C42 FE22                B    21    				cp 022h							002C44 20 F7               B    22    				jr nz,fndquot2
002C46 E1                  B    23    				pop hl
                           B    24    					
002C47 7E                  B    25    wmbalp			ld a,(hl)						002C48 FE22                B    26    				cp 022h
002C4A 28 09               B    27    				jr z,os_gtrdn					002C4C FE7D                B    28    				cp 07dh
002C4E 28 01               B    29    				jr z,skpnasc
002C50 12                  B    30    				ld (de),a
002C51 13                  B    31    skpnasc			inc de
002C52 23                  B    32    				inc hl
002C53 18 F2               B    33    				jr wmbalp
002C55 AF                  B    34    os_gtrdn		xor a
002C56 C9                  B    35    				ret	
                           B    36    				
002C57 E1                  B    37    noquot2			pop hl							002C58 3E12                B    38    				ld a,012h
002C5A B7                  B    39    				or a
002C5B C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002C5C                     B     5    os_cmd_lb
                           B     6    	
002C5C CD 6A 16 00         B     7    				call os_check_volume_format	
002C60 C0                  B     8    				ret nz
                           B     9    				
002C61 CD D2 28 00         B    10    				call filename_or_bust			002C65 CD FD 15 00         B    11    				call os_find_file				002C69 C0                  B    12    				ret nz
002C6A ED53 83 67 00       B    13    				ld (filesize_cache),de			002C6F 2A 71 5F 00         B    14    				ld hl,(default_load_addr)
002C73 22 80 67 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002C77 2A D5 60 00         B    17    				ld hl,(os_args_loc)
002C7B CD A6 0F 00         B    18    				call os_next_arg
                           B    19    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002C7F CD 50 1C 00         B    20    				call hexword_or_bust			002C83 28 05               B    21    				jr z,os_lbnao					002C85 ED53 80 67 00       B    22    				ld (data_load_addr),de
                           B    23    
002C8A ED5B 80 67 00       B    24    os_lbnao		ld de,(data_load_addr)			002C8F 2A 7E 5F 00         B    25    				ld hl,(sys_ram_high)			002C93 2B                  B    26    				dec hl
002C94 AF                  B    27    				xor a
002C95 ED52                B    28    				sbc hl,de
002C97 38 04               B    29    				jr c,os_lbprok
002C99 3E26                B    30    				ld a,026h						002C9B B7                  B    31    				or a
002C9C C9                  B    32    				ret
                           B    33    				
002C9D 2A 80 67 00         B    34    os_lbprok		ld hl,(data_load_addr)			002CA1 CD 2C 16 00         B    35    				call os_read_bytes_from_file
002CA5 C0                  B    36    				ret nz
                           B    37    			
002CA6                     B    38    report_bytes_loaded
                           B    39    
002CA6 21 24 55 00         B    40    				ld hl,os_hex_prefix_txt			002CAA CD 25 0F 00         B    41    				call os_print_string			                           B    42    				
002CAE 11 85 67 00         B    43    				ld de,filesize_cache+2			002CB2 21 83 60 00         B    44    				ld hl,output_line
002CB6 0603                B    45    				ld b,3
002CB8 CD 5A 10 00         B    46    				call n_hexbytes_to_ascii
002CBC 3600                B    47    				ld (hl),0	
002CBE 0605                B    48    				ld b,5							002CC0 CD 26 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002CC4 21 C6 5B 00         B    51    				ld hl,bytes_loaded_msg			002CC8 CD EF 13 00         B    52    				call os_show_packed_text
                           B    53    				
002CCC 21 83 55 00         B    54    				ld hl,to_txt					002CD0 CD 25 0F 00         B    55    				call os_print_string
                           B    56    
002CD4 21 24 55 00         B    57    				ld hl,os_hex_prefix_txt			002CD8 CD 25 0F 00         B    58    				call os_print_string	
                           B    59    
002CDC ED5B 80 67 00       B    60    				ld de,(data_load_addr)			002CE1 CD F0 12 00         B    61    				call os_show_hex_address
                           B    62    
002CE5 CD B8 13 00         B    63    				call os_new_line
002CE9 AF                  B    64    				xor a
002CEA C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006780            B    69    data_load_addr	equ scratch_pad
       00006783            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002CEB CD 50 1C 00         B     7    os_cmd_m		call hexword_or_bust			002CEF 28 05               B     8    				jr z,m_no_hex					002CF1 ED53 19 60 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002CF6 0610                B    11    m_no_hex		ld b,16							002CF8 C5                  B    12    smbllp			push bc							                           B    13    				
002CF9 21 32 2D 00         B    14    				ld hl,colon_cmd_prefix			002CFD CD 25 0F 00         B    15    				call os_print_string
002D01 ED5B 19 60 00       B    16    				ld de,(mem_mon_addr)
002D06 CD F0 12 00         B    17    				call os_show_hex_address
                           B    18    
002D0A 21 83 60 00         B    19    				ld hl,output_line
002D0E 0610                B    20    				ld b,bytes_per_line				002D10 3620                B    21    mmbllp			ld (hl),' '
002D12 23                  B    22    				inc hl
002D13 1A                  B    23    				ld a,(de)	
002D14 CD 68 10 00         B    24    				call hexbyte_to_ascii
002D18 13                  B    25    				inc de
002D19 10 F5               B    26    				djnz mmbllp
                           B    27    
002D1B ED53 19 60 00       B    28    				ld (mem_mon_addr),de
002D20 360B                B    29    				ld (hl),11
002D22 23                  B    30    				inc hl
002D23 3600                B    31    				ld (hl),0
002D25 21 83 60 00         B    32    				ld hl,output_line
002D29 CD 25 0F 00         B    33    				call os_print_string
002D2D C1                  B    34    				pop bc
002D2E 10 C8               B    35    				djnz smbllp
                           B    36    				
002D30 AF                  B    37    				xor a
002D31 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002D32 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D35                     B     5    os_cmd_md
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
                           B     6    	
002D35 CD 6A 16 00         B     7    				call os_check_volume_format	
002D39 C0                  B     8    				ret nz
                           B     9    			
002D3A CD D2 28 00         B    10    				call filename_or_bust
                           B    11    				
002D3E C3 AA 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002D42                     B     5    os_cmd_r	
002D42 DD21 87 5F 00       B     6    				ld ix,store_a1					002D47 21 EC 2D 00         B     7    				ld hl,register_txt
002D4B CD 25 0F 00         B     8    rcmdloop2		call os_print_string
002D4F 7E                  B     9    rcmdloop		ld a,(hl)
002D50 FE01                B    10    				cp 1
002D52 28 0B               B    11    				jr z,showbyte
002D54 FE02                B    12    				cp 2
002D56 28 15               B    13    				jr z,showword16
002D58 FE03                B    14    				cp 3
002D5A 28 2E               B    15    				jr z,showaddr
002D5C 23                  B    16    				inc hl
002D5D 18 F0               B    17    				jr rcmdloop
                           B    18    				
002D5F DD7E00              B    19    showbyte		ld a,(ix)
002D62 DD23                B    20    				inc ix
002D64 DDE5                B    21    				push ix
002D66 E5                  B    22    				push hl
002D67 CD 04 13 00         B    23    				call os_show_hex_byte
002D6B 18 2A               B    24    				jr showreg
                           B    25    
002D6D DD7E01              B    26    showword16		ld a,(ix+1)
002D70 DDE5                B    27    				push ix
002D72 E5                  B    28    				push hl
002D73 CD 04 13 00         B    29    				call os_show_hex_byte
002D77 E1                  B    30    				pop hl
002D78 DDE1                B    31    				pop ix
002D7A DD7E00              B    32    				ld a,(ix)
002D7D DD23                B    33    				inc ix
002D7F DD23                B    34    				inc ix
002D81 DDE5                B    35    				push ix
002D83 E5                  B    36    				push hl
002D84 CD 04 13 00         B    37    				call os_show_hex_byte
002D88 18 0D               B    38    				jr showreg
                           B    39    
002D8A DD1700              B    40    showaddr		ld de,(ix)
002D8D ED3203              B    41    				lea ix,ix+3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002D90 DDE5                B    42    				push ix
002D92 E5                  B    43    				push hl
002D93 CD F0 12 00         B    44    				call os_show_hex_address
002D97 E1                  B    45    showreg			pop hl
002D98 DDE1                B    46    				pop ix
002D9A 23                  B    47    				inc hl
002D9B 7E                  B    48    				ld a,(hl)
002D9C B7                  B    49    				or a
002D9D 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002D9F CD B8 13 00         B    52    				call os_new_line				002DA3 21 50 2E 00         B    53    				ld hl,flag_txt
002DA7 CD D8 12 00         B    54    				call os_copy_to_output_line
002DAB 21 87 60 00         B    55    				ld hl,output_line+4
002DAF 01050000            B    56    				ld bc,5
002DB3 3A AA 5F 00         B    57    				ld a,(store_f)
002DB7 CB77                B    58    				bit 6,a							002DB9 28 02               B    59    				jr z,zfzero
002DBB 3631                B    60    				ld (hl),'1'
002DBD 09                  B    61    zfzero			add hl,bc
002DBE CB47                B    62    				bit 0,a							002DC0 28 02               B    63    				jr z,cfzero
002DC2 3631                B    64    				ld (hl),'1'
002DC4 09                  B    65    cfzero			add hl,bc
002DC5 CB7F                B    66    				bit 7,a							002DC7 28 02               B    67    				jr z,sfzero
002DC9 364D                B    68    				ld (hl),'M'
002DCB 09                  B    69    sfzero			add hl,bc
002DCC CB57                B    70    				bit 2,a							002DCE 28 02               B    71    				jr z,pfzero
002DD0 364F                B    72    				ld (hl),'O'
002DD2 09                  B    73    pfzero			add hl,bc
002DD3 23                  B    74    				inc hl
002DD4 CB67                B    75    				bit 4,a							002DD6 28 02               B    76    				jr z,iffzero
002DD8 3631                B    77    				ld (hl),'1'
002DDA                     B    78    iffzero			
002DDA 01060000            B    79    				ld bc,6
002DDE 09                  B    80    				add hl,bc
002DDF 3A AB 5F 00         B    81    				ld a,(store_adl)
002DE3 C630                B    82    				add a,30h
002DE5 77                  B    83    				ld (hl),a
002DE6 CD 1B 13 00         B    84    				call os_print_output_line
002DEA AF                  B    85    				xor a
002DEB C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002DEC 20413D00 01         B    91    register_txt		db ' A=',0,1
002DF1 20204243 3D0003     B    92    					db '  BC=',0,3
002DF8 20204445 3D0003     B    93    					db '  DE=',0,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DFF 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E06 0B                  B    96    					db 11
                           B    97    
002E07 27413D00 01         B    98    					db 027h,'A=',0,1
002E0C 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E13 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E1A 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E21 0B                  B   103    					db 11
                           B   104    
002E22 2049583D 0003       B   105    					db ' IX=',0,3
002E28 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002E2E 0B                  B   108    					db 11
                           B   109    					
002E2F 2050433D 0003       B   110    					db ' PC=',0,3
002E35 204C5350 3D0003     B   111    					db ' LSP=',0,3
002E3C 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002E43 0B                  B   114    					db 11
                           B   115    					
002E44 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002E4C 010000 
                           B   117    					
002E4F 0B                  B   118    					db 11
                           B   119    
002E50 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002E58 3D302053 463D5020 
002E60 50563D45 20494646 
002E68 3D302041 444C3D30 
002E70 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002E73                     B     5    os_cmd_rd
                           B     6    
002E73 CD 6A 16 00         B     7    				call os_check_volume_format	
002E77 C0                  B     8    				ret nz
                           B     9    				
002E78 CD D2 28 00         B    10    				call filename_or_bust
                           B    11    			
002E7C C3 14 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002E80                     B     5    os_cmd_rn
                           B     6    	
002E80 CD 6A 16 00         B     7    				call os_check_volume_format	
002E84 C0                  B     8    				ret nz
                           B     9    			
002E85 CD D2 28 00         B    10    				call filename_or_bust
002E89 E5                  B    11    				push hl
002E8A D1                  B    12    				pop de
002E8B CD A6 0F 00         B    13    				call os_next_arg
002E8F 7E                  B    14    				ld a,(hl)						002E90 B7                  B    15    				or a
002E91 20 04               B    16    				jr nz,rn_grfn
002E93 3E1F                B    17    				ld a,01fh						002E95 B7                  B    18    				or a
002E96 C9                  B    19    				ret
                           B    20    
002E97 EB                  B    21    rn_grfn			ex de,hl
002E98 C3 FE 16 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002E9C                     B     5    os_cmd_sb
                           B     6    	
002E9C CD 6A 16 00         B     7    				call os_check_volume_format		002EA0 C0                  B     8    				ret nz
                           B     9    					
002EA1 CD D2 28 00         B    10    				call filename_or_bust			002EA5 22 86 67 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002EA9 2A D5 60 00         B    13    				ld hl,(os_args_loc)
002EAD CD A6 0F 00         B    14    				call os_next_arg
002EB1 CD 50 1C 00         B    15    				call hexword_or_bust			002EB5 CA DD 15 00         B    16    				jp z,os_no_start_addr			002EB9 ED53 80 67 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002EBE CD 50 1C 00         B    19    				call hexword_or_bust			002EC2 CA E1 15 00         B    20    				jp z,os_no_filesize
002EC6 ED53 83 67 00       B    21    				ld (sb_save_length),de
                           B    22    				
002ECB 2A 86 67 00         B    23    				ld hl,(sb_save_name_addr)		002ECF CD 3C 16 00         B    24    				call os_create_file
002ED3 28 18               B    25    				jr z,os_sfapp
002ED5 FEC9                B    26    				cp 0c9h							002ED7 C0                  B    27    				ret nz			
002ED8 21 ED 59 00         B    28    				ld hl,save_append_msg			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002EDC CD EF 13 00         B    29    				call os_show_packed_text
002EE0 CD 15 43 00         B    30    				call os_wait_key_press
002EE4 3E79                B    31    				ld a,'y'
002EE6 B8                  B    32    				cp b
002EE7 28 04               B    33    				jr z,os_sfapp
002EE9 3E2C                B    34    				ld a,2ch						002EEB B7                  B    35    				or a
002EEC C9                  B    36    				ret
                           B    37    			
002EED 2A 86 67 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002EF1 ED5B 80 67 00       B    39    				ld de,(sb_save_addr)			002EF6 ED4B 83 67 00       B    40    				ld bc,(sb_save_length)			002EFB CD 52 16 00         B    41    				call os_write_bytes_to_file
002EFF C0                  B    42    				ret nz	
                           B    43    				
002F00 3E20                B    44    				ld a,020h						002F02 B7                  B    45    				or a
002F03 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006780            B    51    sb_save_addr		equ scratch_pad
       00006783            B    52    sb_save_length		equ scratch_pad+3
       00006786            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006880            B     6    buffer_addr				 equ os_max_addr		       00006780            B     7    rx_buffer_ptr			 equ scratch_pad
       00006783            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F04 7E                  B    11    os_cmd_rx		ld a,(hl)						002F05 B7                  B    12    				or a
002F06 CA D5 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F0A 3E3E                B    15    				ld a,'>'						002F0C BE                  B    16    				cp (hl)
002F0D C2 D0 2F 00         B    17    				jp nz,rx_nrs
002F11 23                  B    18    				inc hl
002F12 3E20                B    19    				ld a,' '
002F14 BE                  B    20    				cp (hl)
002F15 2B                  B    21    				dec hl
002F16 C2 D0 2F 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F1A CD 6A 16 00         B    24    				call os_check_volume_format		Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002F1E C0                  B    25    				ret nz		
                           B    26    				
002F1F 112A0000            B    27    				ld de,02ah						002F23 ED53 F5 5D 00       B    28    				ld (serial_filename),de			002F28 CD D4 30 00         B    29    				call rx_get_header
002F2C C0                  B    30    				ret nz
002F2D CD D4 44 00         B    31    				call s_holdack					                           B    32    				
002F31 21 09 5E 00         B    33    				ld hl,serial_fileheader			002F35 CD 3C 16 00         B    34    				call os_create_file
002F39 C2 AF 2F 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002F3D 21 0D 5A 00         B    37    				ld hl,ser_recsave_msg
002F41 CD EF 13 00         B    38    				call os_show_packed_text
                           B    39    				
002F45 2A 19 5E 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002F49 22 83 67 00         B    41    				ld (serial_file_length_cache),h
002F4D 21 80 68 00         B    42    				ld hl,buffer_addr
002F51 22 80 67 00         B    43    				ld (rx_buffer_ptr),hl
002F55 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002F57 CD BC 44 00         B    46    rx_lnb			call s_goodack
002F5B CD 66 44 00         B    47    				call s_getblock
002F5F 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002F61 F5                  B    50    				push af							002F62 CD CD 44 00         B    51    				call s_badack					002F66 21 09 5E 00         B    52    				ld hl,serial_fileheader			002F6A CD D2 16 00         B    53    				call os_erase_file
002F6E F1                  B    54    				pop af
002F6F C9                  B    55    				ret
                           B    56    
002F70 CD D4 44 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002F74 21 80 65 00         B    59    				ld hl,sector_buffer
002F78 ED5B 80 67 00       B    60    				ld de,(rx_buffer_ptr)
002F7D 01000100            B    61    				ld bc,256
002F81 EDB0                B    62    				ldir
002F83 ED53 80 67 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002F88 2A 19 5E 00         B    65    				ld hl,(serial_fileheader+16)
002F8C 11000100            B    66    				ld de,256
002F90 AF                  B    67    				xor a
002F91 ED52                B    68    				sbc hl,de
002F93 22 19 5E 00         B    69    				ld (serial_fileheader+16),hl
002F97 28 1D               B    70    				jr z,rx_lbr
002F99 38 1B               B    71    				jr c,rx_lbr
002F9B 10 BA               B    72    				djnz rx_lnb
                           B    73    
002F9D 01008000            B    74    				ld bc,buffer_blocks*256
002FA1 11 80 68 00         B    75    				ld de,buffer_addr
002FA5 21 09 5E 00         B    76    				ld hl,serial_fileheader
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FA9 CD 52 16 00         B    77    				call os_write_bytes_to_file
002FAD 28 96               B    78    				jr z,rx_rnblk
002FAF F5                  B    79    rxwtd_fail		push af
002FB0 CD CD 44 00         B    80    				call s_badack
002FB4 F1                  B    81    				pop af
002FB5 C9                  B    82    				ret
                           B    83    				
002FB6 CD BC 44 00         B    84    rx_lbr			call s_goodack
002FBA ED4B 83 67 00       B    85    				ld bc,(serial_file_length_cache
002FBF 11 80 68 00         B    86    				ld de,buffer_addr
002FC3 21 09 5E 00         B    87    				ld hl,serial_fileheader
002FC7 CD 52 16 00         B    88    				call os_write_bytes_to_file
002FCB C0                  B    89    				ret nz	
                           B    90    				
002FCC 3E20                B    91    rxtd_done		ld a,020h						002FCE B7                  B    92    				or a
002FCF C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
002FD0 3E21                B    98    rx_nrs			ld a,'!'						002FD2 BE                  B    99    				cp (hl)							002FD3 C2 7E 30 00         B   100    				jr nz,notrxe
002FD7 23                  B   101    				inc hl
002FD8 3E20                B   102    				ld a,' '
002FDA BE                  B   103    				cp (hl)
002FDB 2B                  B   104    				dec hl
002FDC C2 7E 30 00         B   105    				jr nz,notrxe
002FE0 112A0000            B   106    				ld de,02ah						002FE4 ED53 F5 5D 00       B   107    				ld (serial_filename),de			002FE9 CD D4 30 00         B   108    				call rx_get_header
002FED C0                  B   109    				ret nz
002FEE 21 03 5A 00         B   110    				ld hl,ser_rec2_msg
002FF2 CD EF 13 00         B   111    				call os_show_packed_text
002FF6 CD BC 44 00         B   112    				call s_goodack
002FFA 3E01                B   113    				ld a,1							002FFC 32 08 5E 00         B   114    				ld (serial_timeout),a
003000 CD 66 44 00         B   115    				call s_getblock					003004 28 07               B   116    				jr z,rxe_fblok
003006 F5                  B   117    rxe_badblock	push af							003007 CD CD 44 00         B   118    				call s_badack					00300B F1                  B   119    				pop af
00300C C9                  B   120    				ret
                           B   121    	
00300D 2A 82 65 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003011 1150524F            B   123    				ld de,04f5250h					003015 AF                  B   124    				xor a
003016 28 04               B   125    				jr z,rxe_ok
003018 3E1A                B   126    				ld a,1ah						00301A B7                  B   127    				or a
00301B C9                  B   128    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00301C 2A 85 65 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003020 22 EC 5D 00         B   130    				ld (serial_ez80_address),hl
003024 01000100            B   131    				ld bc,256						003028 DD21 09 5E 00       B   132    				ld ix,serial_fileheader
00302D AF                  B   133    				xor a
00302E DDB612              B   134    				or (ix+18)						003031 20 0A               B   135    				jr nz,mtones
003033 DDB611              B   136    				or a,(ix+17)					003036 20 05               B   137    				jr nz,mtones
003038 0600                B   138    				ld b,0
00303A DD4E10              B   139    				ld c,(ix+16)					00303D 21 80 65 00         B   140    mtones			ld hl,sector_buffer				003041 ED5B EC 5D 00       B   141    				ld de,(serial_ez80_address)		003046 EDB0                B   142    				ldir
                           B   143    				
003048 D5                  B   144    				push de
003049 CD BC 44 00         B   145    				call s_goodack		
00304D DDE1                B   146    				pop ix							00304F 2A 19 5E 00         B   147    				ld hl,(serial_fileheader+16)	003053 11000100            B   148    				ld de,256
003057 AF                  B   149    				xor a
003058 ED52                B   150    				sbc hl,de						00305A 28 18               B   151    				jr z,rxe_done
00305C 38 16               B   152    				jr c,rxe_done
00305E EB                  B   153    				ex de,hl
00305F ED53 19 5E 00       B   154    				ld (serial_fileheader+16),de	003064 DD2A EC 5D 00       B   155    				ld ix,(serial_ez80_address)
003069 01000100            B   156    				ld bc,256
00306D DD09                B   157    				add ix,bc
00306F CD 24 44 00         B   158    				call s_gbloop					003073 C0                  B   159    				ret nz
003074 E1                  B   160    rxe_done		pop hl							003075 CD A0 3A 00         B   161    				call enable_nmi					003079 2A EC 5D 00         B   162    				ld hl,(serial_ez80_address)
00307D E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
00307E CD 1B 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
003082 0610                B   169    				ld b,16							003084 11 F5 5D 00         B   170    				ld de,serial_filename
003088 CD FE 11 00         B   171    				call os_copy_ascii_run			00308C 79                  B   172    				ld a,c
00308D 32 07 5E 00         B   173    				ld (serial_fn_length),a
003091 CD B2 0F 00         B   174    				call os_scan_for_space
                           B   175    				
003095 CD 50 1C 00         B   176    				call hexword_or_bust			003099 CA DD 15 00         B   177    				jp z,os_no_start_addr			00309D ED53 80 67 00       B   178    				ld (data_load_addr),de			0030A2 2A 7E 5F 00         B   179    				ld hl,(sys_ram_high)			0030A6 2B                  B   180    				dec hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030A7 AF                  B   181    				xor a
0030A8 ED52                B   182    				sbc hl,de
0030AA 38 04               B   183    				jr c,os_prok
0030AC 3E26                B   184    				ld a,026h						0030AE B7                  B   185    				or a
0030AF C9                  B   186    				ret
                           B   187    
0030B0 CD D4 30 00         B   188    os_prok			call rx_get_header
0030B4 C0                  B   189    				ret nz
                           B   190    
0030B5 21 03 5A 00         B   191    				ld hl,ser_rec2_msg
0030B9 CD EF 13 00         B   192    				call os_show_packed_text
                           B   193    	
0030BD 2A 80 67 00         B   194    				ld hl,(data_load_addr)			0030C1 CD 12 44 00         B   195    				call serial_receive_file
0030C5 C0                  B   196    				ret nz							                           B   197    
0030C6 ED5B 19 5E 00       B   198    				ld de,(serial_fileheader+16)	0030CB ED53 83 67 00       B   199    				ld (filesize_cache),de
0030D0 C3 A6 2C 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
0030D4                     B   204    rx_get_header
0030D4 21 FF 59 00         B   205    				ld hl,ser_rec_msg
0030D8 CD EF 13 00         B   206    				call os_show_packed_text
                           B   207    				
0030DC 3E00                B   208    				ld a,0
0030DE 32 2A 5E 00         B   209    				ld (anim_wait_count),a			0030E2 3A 2A 5E 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0030E6 3C                  B   211    				inc a
0030E7 47                  B   212    				ld b,a
0030E8 FE06                B   213    				cp 6
0030EA 20 07               B   214    				jr nz,notsix
0030EC 0E20                B   215    				ld c,' '
0030EE 0605                B   216    				ld b,5
0030F0 AF                  B   217    				xor a
0030F1 18 02               B   218    				jr mcharset
0030F3 0E2E                B   219    notsix			ld c,'.'
0030F5 32 2A 5E 00         B   220    mcharset		ld (anim_wait_count),a
0030F9 CD 22 1A 00         B   221    				call os_print_multiple_chars
0030FD CD 6E 0F 00         B   222    				call home_cursor
                           B   223    				
003101 21 F5 5D 00         B   224    				ld hl,serial_filename			003105 3E01                B   225    				ld a,1							003107 CD 77 43 00         B   226    				call serial_get_header
00310B C8                  B   227    				ret z
00310C FE83                B   228    				cp 083h							00310E C0                  B   229    				ret nz
00310F CD 5C 43 00         B   230    				call os_get_key_press
003113 FE76                B   231    				cp 076h
003115 20 CB               B   232    				jr nz,get_hdr_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003117 3E80                B   233    				ld a,080h						003119 B7                  B   234    notsto			or a
00311A C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00311B                     B   240    clear_serial_filename
                           B   241    
00311B E5                  B   242    				push hl							00311C 21 F5 5D 00         B   243    				ld hl,serial_filename
003120 01100000            B   244    				ld bc,16
003124 AF                  B   245    				xor a
003125 CD 4B 15 00         B   246    				call os_bchl_memfill
003129 E1                  B   247    				pop hl
00312A C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00312B 7E                  B     5    os_cmd_tx		ld a,(hl)						00312C B7                  B     6    				or a
00312D CA D5 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003131 E5                  B     9    				push hl							003132 21 F5 5D 00         B    10    				ld hl,serial_filename
003136 01100000            B    11    				ld bc,16
00313A AF                  B    12    				xor a
00313B CD 4B 15 00         B    13    				call os_bchl_memfill
00313F E1                  B    14    				pop hl
                           B    15    			
003140 0610                B    16    				ld b,16							003142 11 F5 5D 00         B    17    				ld de,serial_filename
003146 CD FE 11 00         B    18    				call os_copy_ascii_run			00314A 79                  B    19    				ld a,c
00314B 32 07 5E 00         B    20    				ld (serial_fn_length),a
00314F CD B2 0F 00         B    21    				call os_scan_for_space
                           B    22    							
003153 CD 50 1C 00         B    23    				call hexword_or_bust			003157 CA DD 15 00         B    24    				jp z,os_no_start_addr			00315B ED53 EC 5D 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003160 CD 50 1C 00         B    27    				call hexword_or_bust			003164 CA E1 15 00         B    28    				jp z,os_no_filesize
003168 ED53 EF 5D 00       B    29    				ld (serial_file_length),de
00316D 21000000            B    30    				ld hl,0
003171 3E07                B    31    				ld a,07h						003173 B7                  B    32    				or a
003174 ED5A                B    33    				adc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
003176 28 1D               B    34    				jr z,s_error
                           B    35    				
003178 21 08 5A 00         B    36    				ld hl,ser_send_msg
00317C CD EF 13 00         B    37    				call os_show_packed_text
                           B    38    			
003180 ED5B EF 5D 00       B    39    				ld de,(serial_file_length)
003185 21 F5 5D 00         B    40    				ld hl,serial_filename			003189 DD2A EC 5D 00       B    41    				ld ix,(serial_ez80_address)
00318E CD DB 44 00         B    42    				call serial_send_file
003192 C0                  B    43    				ret nz			
                           B    44    			
003193 3E20                B    45    				ld a,020h						003195 B7                  B    46    s_error			or a
003196 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
003197 CD 50 1C 00         B     5    os_cmd_t		call hexword_or_bust			00319B 28 05               B     6    				jr z,t_no_hex					00319D ED53 19 60 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0031A2 0610                B     9    t_no_hex		ld b,16
0031A4 C5                  B    10    smaalp			push bc
                           B    11    				
0031A5 21 E8 31 00         B    12    				ld hl,gtr_cmd_prefix			0031A9 CD 25 0F 00         B    13    				call os_print_string
0031AD ED5B 19 60 00       B    14    				ld de,(mem_mon_addr)
0031B2 CD F0 12 00         B    15    				call os_show_hex_address
                           B    16    
0031B6 21 83 60 00         B    17    				ld hl,output_line
0031BA 3620                B    18    				ld (hl),' '
0031BC 23                  B    19    				inc hl
0031BD 3622                B    20    				ld (hl),022h
0031BF 0610                B    21    				ld b,16
0031C1 23                  B    22    mabllp			inc hl
0031C2 1A                  B    23    				ld a,(de)	
0031C3 FE20                B    24    				cp 020h
0031C5 38 04               B    25    				jr c,chchar
0031C7 FE7F                B    26    				cp 07fh
0031C9 38 02               B    27    				jr c,nchchar
0031CB 3E7C                B    28    chchar			ld a,07ch
0031CD 77                  B    29    nchchar			ld (hl),a
0031CE 13                  B    30    				inc de
0031CF 10 F0               B    31    				djnz mabllp
                           B    32    
0031D1 ED53 19 60 00       B    33    				ld (mem_mon_addr),de
0031D6 23                  B    34    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
0031D7 3622                B    35    				ld (hl),022h
0031D9 23                  B    36    				inc hl
0031DA 360B                B    37    				ld (hl),11
0031DC 23                  B    38    				inc hl
0031DD 3600                B    39    				ld (hl),0
0031DF CD 1B 13 00         B    40    				call os_print_output_line
0031E3 C1                  B    41    				pop bc
0031E4 10 BE               B    42    				djnz smaalp
0031E6 AF                  B    43    				xor a
0031E7 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0031E8 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0031EB                     B     5    os_cmd_remount
                           B     6    
0031EB 3E00                B     7    				ld a,0							0031ED CD 07 18 00         B     8    				call os_mount_volumes
0031F1 CD B8 13 00         B     9    				call os_new_line
0031F5 AF                  B    10    				xor a
0031F6 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
0031F7                     B     5    os_cmd_vers
                           B     6    
0031F7 21 26 55 00         B     7    				ld hl,os_version_txt
0031FB CD 25 0F 00         B     8    				call os_print_string
                           B     9    			
0031FF CD 52 40 00         B    10    				call hwsc_get_version
003203 D5                  B    11    				push de
003204 EB                  B    12    				ex de,hl
003205 CD 0F 13 00         B    13    				call os_show_hex_word
                           B    14    				
003209 21 49 55 00         B    15    				ld hl,fwd_slash_txt
00320D CD 25 0F 00         B    16    				call os_print_string
                           B    17    				
003211 21 34 55 00         B    18    				ld hl,hw_version_txt
003215 CD 25 0F 00         B    19    				call os_print_string
003219 D1                  B    20    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
00321A CD 0F 13 00         B    21    				call os_show_hex_word
                           B    22    				
00321E CD B8 13 00         B    23    				call os_new_line
003222 CD B8 13 00         B    24    				call os_new_line	
003226 AF                  B    25    				xor a
003227 C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.03 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;----------------------------------------------
                           B     8    
003228                     B     9    os_cmd_exec
                           B    10    
003228 21 E1 60 00         B    11    				ld hl,in_script_flag			00322C CB46                B    12    				bit 0,(hl)
00322E 28 02               B    13    				jr z,oktlscr
003230 AF                  B    14    				xor a
003231 C9                  B    15    				ret
003232 CBC6                B    16    oktlscr			set 0,(hl)
                           B    17    			
003234 2A D5 60 00         B    18    				ld hl,(os_args_loc)				003238 11 02 60 00         B    19    				ld de,script_fn					00323C 060D                B    20    				ld b,13
00323E CD FE 11 00         B    21    				call os_copy_ascii_run
003242 CD 3A 1A 00         B    22    				call fs_get_dir_cluster			003246 ED53 E2 60 00       B    23    				ld (script_dir),de
                           B    24    				
00324B CD 6A 16 00         B    25    				call os_check_volume_format	
00324F C0                  B    26    				ret nz
                           B    27    				
003250 21000000            B    28    				ld hl,0
003254 22 37 61 00         B    29    				ld (script_file_offset),hl
                           B    30    				
                           B    31    			
003258 3A 66 61 00         B    32    scrp_loop		ld a,(key_mod_flags)			00325C E602                B    33    				and 2
00325E 28 27               B    34    				jr z,noskip_script	
003260 1600                B    35    				ld d,0
003262 CD 5C 43 00         B    36    chk_c			call os_get_key_press
003266 FE21                B    37    				cp 021h
003268 20 1A               B    38    				jr nz,no_cpr
00326A 1619                B    39    wkend			ld d,25							00326C CD FF 3F 00         B    40    wkend2			call hwsc_wait_vrt				003270 CD 5C 43 00         B    41    				call os_get_key_press		
003274 B7                  B    42    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003275 20 F3               B    43    				jr nz,wkend
003277 15                  B    44    				dec d
003278 20 F2               B    45    				jr nz,wkend2
00327A 21 1C 5A 00         B    46    				ld hl,script_aborted_msg
00327E CD EF 13 00         B    47    				call os_show_packed_text
003282 AF                  B    48    				xor a							003283 C9                  B    49    				ret
003284 15                  B    50    no_cpr			dec d
003285 20 DB               B    51    				jr nz,chk_c
                           B    52    			
                           B    53    			
003287                     B    54    noskip_script
                           B    55    		
003287 21 E5 60 00         B    56    				ld hl,script_buffer				00328B 11 31 60 00         B    57    				ld de,commandstring
00328F 0651                B    58    				ld b,max_buffer_chars+1
003291 3E20                B    59    				ld a,020h						003293 77                  B    60    scrp_flp		ld (hl),a
003294 12                  B    61    				ld (de),a
003295 23                  B    62    				inc hl
003296 13                  B    63    				inc de
003297 10 FA               B    64    				djnz scrp_flp
                           B    65    				
003299 CD 3A 1A 00         B    66    				call fs_get_dir_cluster			00329D D5                  B    67    				push de
00329E ED5B E2 60 00       B    68    				ld de,(script_dir)				0032A3 CD 46 1A 00         B    69    				call fs_update_dir_cluster
0032A7 21 02 60 00         B    70    				ld hl,script_fn					0032AB CD 70 51 00         B    71    				call fs_hl_to_filename			0032AF CD 11 49 00         B    72    				call fs_open_file_command		0032B3 38 71               B    73    				jr c,pop_ret
0032B5 B7                  B    74    				or a
0032B6 20 6E               B    75    				jr nz,pop_ret
0032B8 D1                  B    76    				pop de
0032B9 CD 46 1A 00         B    77    				call fs_update_dir_cluster		                           B    78    			
0032BD 11500000            B    79    				ld de,max_buffer_chars			0032C1 CD 0E 16 00         B    80    				call os_set_load_length
0032C5 AF                  B    81    				xor a
0032C6 ED5B 37 61 00       B    82    				ld de,(script_file_offset)		0032CB CD 16 16 00         B    83    				call os_set_file_pointer
                           B    84    					
0032CF 21 E5 60 00         B    85    				ld hl,script_buffer				0032D3 CD 2C 16 00         B    86    				call os_read_bytes_from_file
0032D7 B7                  B    87    				or a			
0032D8 28 03               B    88    				jr z,scrp_ok					0032DA FECC                B    89    				cp 0cch			
0032DC C0                  B    90    				ret nz							                           B    91    				
0032DD FD2A 37 61 00       B    92    scrp_ok			ld iy,(script_file_offset)
0032E2 21 E5 60 00         B    93    				ld hl,script_buffer				0032E6 11 31 60 00         B    94    				ld de,commandstring
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0032EA 3E50                B    95    				ld a,max_buffer_chars
0032EC 47                  B    96    				ld b,a
0032ED 7E                  B    97    scrp_cmd		ld a,(hl)
0032EE FE20                B    98    				cp 020h
0032F0 38 07               B    99    				jr c,scrp_eol
0032F2 12                  B   100    				ld (de),a
0032F3 23                  B   101    				inc hl
0032F4 13                  B   102    				inc de
0032F5 FD23                B   103    				inc iy
0032F7 10 F4               B   104    				djnz scrp_cmd
                           B   105    				
0032F9 AF                  B   106    scrp_eol		xor a
0032FA 12                  B   107    				ld (de),a						0032FB FD22 37 61 00       B   108    				ld (script_file_offset),iy
003300 22 3A 61 00         B   109    				ld (script_buffer_offset),hl
                           B   110    			
003304 CD 4A 0C 00         B   111    				call os_parse_cmd_chk_ps		                           B   112    				
003308 FD2A 37 61 00       B   113    				ld iy,(script_file_offset)		00330D 2A 3A 61 00         B   114    				ld hl,(script_buffer_offset)
003311 7E                  B   115    scrp_fnc		ld a,(hl)		
003312 B7                  B   116    				or a
003313 C8                  B   117    				ret z							003314 FE20                B   118    				cp 020h
003316 30 05               B   119    				jr nc,scrp_gnc					003318 23                  B   120    				inc hl		
003319 FD23                B   121    				inc iy							00331B 18 F4               B   122    				jr scrp_fnc
                           B   123    			
00331D FD22 37 61 00       B   124    scrp_gnc		ld (script_file_offset),iy		003322 C3 58 32 00         B   125    				jp scrp_loop	
                           B   126    			
                           B   127    			
                           B   128    			
003326 D1                  B   129    pop_ret			pop de
003327 C9                  B   130    				ret
                           B   131    				
                           B   132    			
                           B   133    ;----------------------------------------------
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003328                     B     7    os_cmd_ltn
                           B     8    
003328 AF                  B     9    				xor a
003329 C9                  B    10    				ret
                           B    11    
                           B    12    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00332A                     B     5    os_cmd_pen
                           B     6    	
00332A 0602                B     7    				ld b,2							00332C DD21 97 5D 00       B     8    				ld ix,current_pen
                           B     9    				
003331 CD 50 1C 00         B    10    chpenlp			call hexword_or_bust			003335 28 0D               B    11    				jr z,pendone					003337 23                  B    12    				inc hl
003338 DD7300              B    13    				ld (ix),e
00333B DD7201              B    14    				ld (ix+1),d
00333E DD23                B    15    				inc ix
003340 DD23                B    16    				inc ix
003342 10 ED               B    17    				djnz chpenlp	
                           B    18    				
003344 CD 97 0F 00         B    19    pendone			call os_refresh_screen
003348 AF                  B    20    				xor a
003349 C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00334A                     B     5    os_cmd_palette
                           B     6    
00334A 0610                B     7    				ld b,16							00334C DD21 9B 5D 00       B     8    				ld ix,pen_palette
                           B     9    				
003351 0E00                B    10    				ld c,0
003353 C5                  B    11    chcollp			push bc
003354 CD 50 1C 00         B    12    				call hexword_or_bust			003358 C1                  B    13    				pop bc
003359 28 0E               B    14    				jr z,colrdone					00335B 0C                  B    15    				inc c
00335C 23                  B    16    				inc hl
00335D DD7300              B    17    				ld (ix),e
003360 DD7201              B    18    				ld (ix+1),d
003363 DD23                B    19    				inc ix
003365 DD23                B    20    				inc ix
003367 10 EA               B    21    				djnz chcollp
                           B    22    			
003369 79                  B    23    colrdone		ld a,c
00336A B7                  B    24    				or a
00336B 20 04               B    25    				jr nz,pal_ok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
00336D 3E81                B    26    				ld a,81h						00336F B7                  B    27    				or a
003370 C9                  B    28    				ret
003371 21 9B 5D 00         B    29    pal_ok			ld hl,pen_palette
003375 CD 21 3C 00         B    30    				call hswc_set_ui_colours	
003379 AF                  B    31    				xor a
00337A C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
00337B                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
00337B CD 1B 39 00         B    15    				call disable_ms_irq
                           B    16    
00337F 21 7D 5F 00         B    17    				ld hl,devices_connected
003383 CB8E                B    18    				res 1,(hl)
                           B    19    		
003385 CD 97 41 00         B    20    				call init_mouse
003389 C0                  B    21    				ret nz
                           B    22    			
00338A AF                  B    23    				xor a
00338B 32 70 61 00         B    24    				ld (mouse_packet_index),a
00338F 32 71 61 00         B    25    				ld (mouse_buttons),a
003393 21000000            B    26    				ld hl,0
003397 22 72 61 00         B    27    				ld (mouse_disp_x),hl
00339B 22 75 61 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00339F 21800200            B    30    				ld hl,window_width_pixels
0033A3 11E00100            B    31    				ld de,window_height_pixels
0033A7 CD 39 14 00         B    32    				call os_set_mouse_window
                           B    33    
0033AB CD 15 39 00         B    34    				call enable_ms_irq
                           B    35    
0033AF 21 7D 5F 00         B    36    				ld hl,devices_connected
0033B3 CBCE                B    37    				set 1,(hl)
0033B5 AF                  B    38    				xor a
0033B6 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
0033B7                     B     5    os_cmd_vmode
                           B     6    	
0033B7 CD 50 1C 00         B     7    				call hexword_or_bust			0033BB 28 78               B     8    				jr z,vm_no_data					0033BD 7B                  B     9    				ld a,e
                           B    10    
0033BE FE04                B    11    set_vmode		cp 4
0033C0 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
0033C2 2A D0 5D 00         B    14    				ld hl,(font_addr)				0033C6 ED5B D6 5D 00       B    15    				ld de,(video_window_address)
0033CB ED4B D3 5D 00       B    16    				ld bc,(font_length)
0033D0 EDB0                B    17    				ldir
                           B    18    								
0033D2 32 96 5D 00         B    19    				ld (video_mode),a
0033D6 21070000            B    20    				ld hl,7
0033DA 67                  B    21    				ld h,a
0033DB ED6C                B    22    				mlt hl
0033DD E5                  B    23    				push hl
0033DE DDE1                B    24    				pop ix
0033E0 11 39 34 00         B    25    				ld de,mode_param_list
0033E4 DD19                B    26    				add ix,de
0033E6 21000000            B    27    				ld hl,0
0033EA 11000000            B    28    				ld de,0
0033EE DD6E00              B    29    				ld l,(ix)
0033F1 DD6601              B    30    				ld h,(ix+1)
0033F4 DD5E02              B    31    				ld e,(ix+2)
0033F7 DD5603              B    32    				ld d,(ix+3)
0033FA DD4604              B    33    				ld b,(ix+4)
0033FD DDE5                B    34    				push ix
0033FF CD 0E 3B 00         B    35    				call set_bitmap_parameters
003403 DDE1                B    36    				pop ix
003405 DD4605              B    37    				ld b,(ix+5)
003408 DD4E06              B    38    				ld c,(ix+6)
00340B CD 74 3B 00         B    39    				call set_charmap_parameters
                           B    40    				
00340F 2A D6 5D 00         B    41    				ld hl,(video_window_address)	003413 ED5B D0 5D 00       B    42    				ld de,(font_addr)				003418 ED4B D3 5D 00       B    43    				ld bc,(font_length)				00341D EDB0                B    44    				ldir
                           B    45    				
00341F CD 2D 3C 00         B    46    				call hwsc_clear_screen
                           B    47    				
003423 01080400            B    48    				ld bc,0408h
003427 CD 42 3B 00         B    49    				call set_font_parameters		                           B    50    				
00342B AF                  B    51    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
00342C 32 BD 5D 00         B    52    				ld (active_cursor_image),a		                           B    53    				
003430 C9                  B    54    				ret
                           B    55    
003431 3E88                B    56    vm_bad_range	ld a,88h
003433 B7                  B    57    				or a
003434 C9                  B    58    				ret
                           B    59    
003435 3E81                B    60    vm_no_data		ld a,81h
003437 B7                  B    61    				or a
003438 C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
003439                     B    66    mode_param_list
                           B    67    
003439 4001E001            B    68    				dw 640/2,480
00343D 00                  B    69    				db 00b
00343E 503C                B    70    				db 80,60
                           B    71    				
003440 4001F000            B    72    				dw 640/2,240
003444 01                  B    73    				db 01b
003445 501E                B    74    				db 80,30
                           B    75    				
003447 A000E001            B    76    				dw 320/2,480
00344B 02                  B    77    				db 10b
00344C 283C                B    78    				db 40,60
                           B    79    				
00344E A000F000            B    80    				dw 320/2,240
003452 03                  B    81    				db 11b
003453 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003455                     B     5    os_cmd_font
                           B     6    	
003455 CD 6A 16 00         B     7    				call os_check_volume_format	
003459 C0                  B     8    				ret nz
                           B     9    				
00345A CD D2 28 00         B    10    				call filename_or_bust			00345E 22 80 67 00         B    11    				ld (scratch_pad),hl
                           B    12    
003462 CD 3A 1A 00         B    13    				call fs_get_dir_cluster			003466 ED53 83 67 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00346B CD C8 16 00         B    16    				call os_root_dir				00346F C0                  B    17    				ret nz
003470 21 A0 34 00         B    18    				ld hl,fonts_fn
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
003474 CD B8 16 00         B    19    				call os_change_dir
003478 20 1A               B    20    				jr nz,no_font
                           B    21    				
00347A 2A 80 67 00         B    22    				ld hl,(scratch_pad)
00347E CD FD 15 00         B    23    				call os_find_file				003482 20 10               B    24    				jr nz,no_font
                           B    25    				
003484 11000700            B    26    				ld de,700h
003488 CD 0E 16 00         B    27    				call os_set_load_length			                           B    28    
00348C 2A D0 5D 00         B    29    				ld hl,(font_addr)				003490 CD 2C 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
003494 F5                  B    32    no_font			push af
003495 ED5B 83 67 00       B    33    				ld de,(scratch_pad+3)			00349A CD 46 1A 00         B    34    				call fs_update_dir_cluster
00349E F1                  B    35    				pop af
00349F C9                  B    36    				ret
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
0034A0 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
0034A6 7E                  B     8    os_cmd_set		ld a,(hl)					; i
0034A7 B7                  B     9    				or a
0034A8 28 3B               B    10    				jr z,show_envars
                           B    11    
0034AA 11 83 67 00         B    12    				ld de,scratch_pad+3			; p
0034AE 7E                  B    13    evsalp1			ld a,(hl)
0034AF 12                  B    14    				ld (de),a
0034B0 B7                  B    15    				or a
0034B1 28 2E               B    16    				jr z,set_bad_args
0034B3 FE3D                B    17    				cp '='
0034B5 28 04               B    18    				jr z,evsadone1
0034B7 23                  B    19    				inc hl
0034B8 13                  B    20    				inc de
0034B9 18 F3               B    21    				jr evsalp1
0034BB AF                  B    22    evsadone1		xor a
0034BC 12                  B    23    				ld (de),a
0034BD 13                  B    24    				inc de
0034BE 23                  B    25    				inc hl
0034BF ED53 80 67 00       B    26    				ld (scratch_pad),de
                           B    27    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0034C4 7E                  B    28    evsalp2			ld a,(hl)
0034C5 12                  B    29    				ld (de),a
0034C6 FE20                B    30    				cp ' '
0034C8 28 07               B    31    				jr z,evsadone2
0034CA B7                  B    32    				or a
0034CB 28 14               B    33    				jr z,set_bad_args
0034CD 23                  B    34    				inc hl
0034CE 13                  B    35    				inc de
0034CF 18 F3               B    36    				jr evsalp2
0034D1 AF                  B    37    evsadone2		xor a
0034D2 12                  B    38    				ld (de),a
                           B    39    				
0034D3 21 83 67 00         B    40    				ld hl,scratch_pad+3
0034D7 ED5B 80 67 00       B    41    				ld de,(scratch_pad)
0034DC CD 41 1B 00         B    42    				call os_set_envar
0034E0 C9                  B    43    				ret
                           B    44    
0034E1 3E82                B    45    set_bad_args	ld a,82h
0034E3 B7                  B    46    				or a
0034E4 C9                  B    47    				ret
                           B    48    				
                           B    49    
0034E5 21 94 61 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
0034E9 7E                  B    52    show_envlp		ld a,(hl)
0034EA FEFF                B    53    				cp 0ffh
0034EC 28 12               B    54    				jr z,set_done
0034EE E5                  B    55    				push hl
0034EF CD 25 0F 00         B    56    				call os_print_string
0034F3 CD B8 13 00         B    57    				call os_new_line
0034F7 E1                  B    58    				pop hl
                           B    59    				
0034F8 23                  B    60    set_fnl			inc hl
0034F9 7E                  B    61    				ld a,(hl)
0034FA B7                  B    62    				or a
0034FB 20 FB               B    63    				jr nz,set_fnl
0034FD 23                  B    64    				inc hl
0034FE 18 E9               B    65    				jr show_envlp
                           B    66    				
003500 AF                  B    67    set_done		xor a
003501 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003502 FD21 4B 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003507 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00350B C3 6D 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dz.asm
                           B     9    ;----------------------------------------------
                           A  3065    
00350F C9                  A  3066    os_cmd_unused	ret		; <- dummy command, sho
                           A  3067    
                           A  3068    ;----------------------------------------------
                           A  3069    
003510                     A  3070    os_get_mem_high
                           A  3071    
003510 2A 7E 5F 00         A  3072    		ld hl,(sys_ram_high)
003514 ED5B 81 5F 00       A  3073    		ld de,(vram_a_high)
003519 ED4B 84 5F 00       A  3074    		ld bc,(vram_b_high)
00351E AF                  A  3075    		xor a
00351F C9                  A  3076    		ret
                           A  3077    								
                           A  3078    ;----------------------------------------------
                           A  3079    ; Drivers
                           A  3080    ;----------------------------------------------
                           A  3081    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
003520                     B    49    sd_card_driver				; label of driver c
                           B    50    
003520 C3 34 35 00         B    51    	jp sdc_get_id			; $00 : init / get 
003524 C3 FE 36 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
003528 C3 4E 37 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
00352C 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
003534                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
003534 3E01                B    72    				ld a,1							003536 32 84 38 00         B    73    				ld (sdc_sdc),a			
                           B    74    
00353A CD CB 38 00         B    75    				call sdc_power_off				00353E CD D6 38 00         B    76    				call sdc_slow_clock				003542 CD A4 38 00         B    77    				call sdc_select_card			                           B    78    
003546 11004000            B    79    				ld de,16384						00354A CD 6D 40 00         B    80    				call hwsc_time_delay
                           B    81    				
00354E CD C0 38 00         B    82    				call sdc_power_on				                           B    83    
003552 11830000            B    84    				ld de,131						003556 CD 6D 40 00         B    85    				call hwsc_time_delay
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    86    
00355A CD AF 38 00         B    87    				call sdc_deselect_card			                           B    88    	
00355E 060A                B    89    				ld b,10							003560 CD 3C 38 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
003564 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
003566 CD A4 38 00         B    93    				call sdc_select_card			                           B    94    	
00356A 3E40                B    95    				ld a,040h						00356C 01009500            B    96    				ld bc,09500h					003570 11000000            B    97    				ld de,00000h
003574 CD EA 37 00         B    98    				call sdc_send_command		 
003578 CD 95 38 00         B    99    				call sdc_get_byte				00357C CD 0F 38 00         B   100    				call sdc_wait_ncr				003580 EE01                B   101    				xor 01h							003582 C2 43 38 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
003586 01401F00            B   105    				ld bc,8000						00358A C5                  B   106    sdc_iwl			push bc							00358B 3E77                B   107    				ld a,077h						00358D CD E2 37 00         B   108    				call sdc_send_command_null_args
003591 CD 95 38 00         B   109    				call sdc_get_byte				003595 CD 95 38 00         B   110    				call sdc_get_byte				003599 3E69                B   111    				ld a,069h						00359B CD E2 37 00         B   112    				call sdc_send_command_null_args
00359F CD 95 38 00         B   113    				call sdc_get_byte
0035A3 C1                  B   114    				pop bc
0035A4 CD 0F 38 00         B   115    				call sdc_wait_ncr				0035A8 CB57                B   116    				bit 2,a							0035AA 20 0C               B   117    				jr nz,mmc_init			
0035AC B7                  B   118    				or a
0035AD 28 2A               B   119    				jr z,sdc_init_done				0035AF 0B                  B   120    				dec bc
0035B0 78                  B   121    				ld a,b
0035B1 B1                  B   122    				or c
0035B2 20 D6               B   123    				jr nz,sdc_iwl
0035B4 C3 51 38 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
0035B8 AF                  B   127    mmc_init		xor a							0035B9 32 84 38 00         B   128    				ld (sdc_sdc),a
0035BD 01401F00            B   129    				ld bc,8000						0035C1 C5                  B   130    mmc_iwl			push bc
0035C2 3E41                B   131    				ld a,041h						0035C4 CD E2 37 00         B   132    				call sdc_send_command_null_args
0035C8 C1                  B   133    				pop bc
0035C9 CD 0F 38 00         B   134    				call sdc_wait_ncr				0035CD B7                  B   135    				or a							0035CE 28 09               B   136    				jr z,sdc_init_done
0035D0 0B                  B   137    				dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0035D1 78                  B   138    				ld a,b
0035D2 B1                  B   139    				or c
0035D3 20 EC               B   140    				jr nz,mmc_iwl
0035D5 C3 4D 38 00         B   141    				jp mmc_init_fail
                           B   142    
0035D9                     B   143    sdc_init_done
                           B   144    
0035D9 3E49                B   145    				ld a,049h						0035DB CD E2 37 00         B   146    				call sdc_send_command_null_args
0035DF CD 0F 38 00         B   147    				call sdc_wait_ncr				0035E3 B7                  B   148    				or a							0035E4 C2 55 38 00         B   149    				jp nz,sdc_id_fail
0035E8 CD 23 38 00         B   150    				call sdc_wait_data_token		0035EC B7                  B   151    				or a
0035ED C2 55 38 00         B   152    				jp nz,sdc_id_fail
0035F1 21 80 65 00         B   153    				ld hl,sector_buffer				0035F5 CD EB 36 00         B   154    				call sdc_read_id_bytes	
                           B   155    
0035F9 3E4A                B   156    				ld a,04ah						0035FB CD E2 37 00         B   157    				call sdc_send_command_null_args
0035FF CD 0F 38 00         B   158    				call sdc_wait_ncr				003603 B7                  B   159    				or a							003604 C2 55 38 00         B   160    				jp nz,sdc_id_fail
003608 CD 23 38 00         B   161    				call sdc_wait_data_token		00360C B7                  B   162    				or a
00360D C2 55 38 00         B   163    				jp nz,sdc_id_fail
003611 21 90 65 00         B   164    				ld hl,sector_buffer+16			003615 CD EB 36 00         B   165    				call sdc_read_id_bytes
003619 CD AF 38 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
00361D                     B   169    sdc_quit	
                           B   170    
00361D 21 93 65 00         B   171    				ld hl,sector_buffer+013h		003621 11 A0 65 00         B   172    				ld de,sector_buffer+020h
003625 01050000            B   173    				ld bc,5
003629 3A 84 38 00         B   174    				ld a,(sdc_sdc)
00362D B7                  B   175    				or a
00362E 20 01               B   176    				jr nz,sdc_cn5
003630 03                  B   177    				inc bc
003631 EDB0                B   178    sdc_cn5			ldir
003633 E5                  B   179    				push hl
003634 D5                  B   180    				push de
003635 21 69 38 00         B   181    				ld hl,sdc_vnchars
003639 011A0000            B   182    				ld bc,26
00363D EDB0                B   183    				ldir
00363F D1                  B   184    				pop de
003640 E1                  B   185    				pop hl
003641 13                  B   186    				inc de
003642 13                  B   187    				inc de
003643 7E                  B   188    				ld a,(hl)
003644 CB3F                B   189    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003646 CB3F                B   190    				srl a
003648 CB3F                B   191    				srl a
00364A CB3F                B   192    				srl a
00364C C630                B   193    				add a,030h						00364E 12                  B   194    				ld (de),a
00364F 13                  B   195    				inc de
003650 13                  B   196    				inc de
003651 7E                  B   197    				ld a,(hl)
003652 E60F                B   198    				and 0fh
003654 C630                B   199    				add a,030h
003656 12                  B   200    				ld (de),a						003657 13                  B   201    				inc de
003658 13                  B   202    				inc de
003659 13                  B   203    				inc de
00365A 13                  B   204    				inc de
00365B 13                  B   205    				inc de
00365C 23                  B   206    				inc hl
00365D 0604                B   207    				ld b,4
00365F 7E                  B   208    sdc_snulp		ld a,(hl)						003660 CB3F                B   209    				srl a
003662 CB3F                B   210    				srl a
003664 CB3F                B   211    				srl a
003666 CB3F                B   212    				srl a
003668 C630                B   213    				add a,030h
00366A FE3A                B   214    				cp 03ah
00366C 38 02               B   215    				jr c,sdc_hvl1
00366E C607                B   216    				add a,07h
003670 12                  B   217    sdc_hvl1		ld (de),a
003671 13                  B   218    				inc de
003672 7E                  B   219    				ld a,(hl)
003673 E60F                B   220    				and 0fh
003675 C630                B   221    				add a,030h
003677 FE3A                B   222    				cp 03ah
003679 38 02               B   223    				jr c,sdc_hvl2
00367B C607                B   224    				add a,07h
00367D 12                  B   225    sdc_hvl2		ld (de),a
00367E 13                  B   226    				inc de
00367F 23                  B   227    				inc hl
003680 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
003682 DD21 80 65 00       B   232    				ld ix,sector_buffer				003687 DD7E06              B   233    				ld a,(ix+6)
00368A E603                B   234    				and 00000011b
00368C 57                  B   235    				ld d,a
00368D DD5E07              B   236    				ld e,(ix+7)
003690 DD7E08              B   237    				ld a,(ix+8)
003693 E6C0                B   238    				and 11000000b
003695 CB27                B   239    				sla a
003697 CB13                B   240    				rl e
003699 CB12                B   241    				rl d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00369B CB27                B   242    				sla a
00369D CB13                B   243    				rl e
00369F CB12                B   244    				rl d							                           B   245    	
0036A1 DD7E09              B   246    				ld a,(ix+9)
0036A4 E603                B   247    				and 00000011b
0036A6 47                  B   248    				ld b,a
0036A7 DD7E0A              B   249    				ld a,(ix+10)
0036AA E680                B   250    				and 10000000b
0036AC CB27                B   251    				sla a
0036AE CB10                B   252    				rl b							                           B   253    	
0036B0 04                  B   254    				inc b
0036B1 04                  B   255    				inc b
0036B2 21000000            B   256    				ld hl,0
0036B6 CB23                B   257    sdc_cmsh		sla e
0036B8 CB12                B   258    				rl d
0036BA CB15                B   259    				rl l
0036BC CB14                B   260    				rl h
0036BE 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
0036C0 DD7E05              B   263    				ld a,(ix+5)
0036C3 E60F                B   264    				and 00001111b					0036C5 28 17               B   265    				jr z,sdc_nbls
0036C7 47                  B   266    				ld b,a
0036C8 CB23                B   267    sdc_blsh		sla e
0036CA CB12                B   268    				rl d
0036CC CB15                B   269    				rl l
0036CE CB14                B   270    				rl h
0036D0 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
0036D2 0609                B   273    				ld b,9							0036D4 CB3C                B   274    sdc_cbsec		srl h
0036D6 CB1D                B   275    				rr l
0036D8 CB1A                B   276    				rr d
0036DA CB1B                B   277    				rr e
0036DC 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
0036DE E5                  B   280    sdc_nbls		push hl
0036DF C1                  B   281    				pop bc							0036E0 21 A0 65 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
0036E4 CD E1 38 00         B   284    				call sdc_fast_clock				0036E8 AF                  B   285    				xor a
0036E9 37                  B   286    				scf
0036EA C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
0036EB                     B   292    sdc_read_id_bytes
                           B   293    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0036EB 0610                B   294    				ld b,16
0036ED CD 95 38 00         B   295    sdc_csdlp		call sdc_get_byte
0036F1 77                  B   296    				ld (hl),a
0036F2 23                  B   297    				inc hl
0036F3 10 F8               B   298    				djnz sdc_csdlp
0036F5 CD 95 38 00         B   299    				call sdc_get_byte				0036F9 CD 95 38 00         B   300    				call sdc_get_byte				0036FD C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
0036FE                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
0036FE CD A4 38 00         B   310    				call sdc_select_card
                           B   311    
003702 21 0F 60 00         B   312    				ld hl,sector_lba0
003706 5E                  B   313    				ld e,(hl)						003707 23                  B   314    				inc hl
003708 56                  B   315    				ld d,(hl)
003709 23                  B   316    				inc hl
00370A 4E                  B   317    				ld c,(hl)
00370B CB23                B   318    				sla e							00370D CB12                B   319    				rl d
00370F CB11                B   320    				rl c
003711 3E51                B   321    				ld a,051h						003713 0601                B   322    				ld b,001h						003715 CD EA 37 00         B   323    				call sdc_send_command		
003719 CD 0F 38 00         B   324    				call sdc_wait_ncr				00371D B7                  B   325    				or a							00371E C2 59 38 00         B   326    				jp nz,sdc_bcr_error			
003722 CD 23 38 00         B   327    				call sdc_wait_data_token		003726 B7                  B   328    				or a
003727 C2 5D 38 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
00372B 21 80 65 00         B   331    				ld hl,sector_buffer				00372F 0600                B   332    				ld b,0
003731 CD 95 38 00         B   333    sdc_rslp		call sdc_get_byte
003735 77                  B   334    				ld (hl),a
003736 23                  B   335    				inc hl
003737 CD 95 38 00         B   336    				call sdc_get_byte
00373B 77                  B   337    				ld (hl),a
00373C 23                  B   338    				inc hl
00373D 10 F2               B   339    				djnz sdc_rslp
00373F CD 95 38 00         B   340    				call sdc_get_byte				003743 CD 95 38 00         B   341    				call sdc_get_byte				                           B   342    
003747 CD AF 38 00         B   343    				call sdc_deselect_card
00374B AF                  B   344    				xor a
00374C 37                  B   345    				scf
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00374D C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
00374E                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
00374E CD A4 38 00         B   354    				call sdc_select_card
                           B   355    
003752 21 0F 60 00         B   356    				ld hl,sector_lba0
003756 5E                  B   357    				ld e,(hl)						003757 23                  B   358    				inc hl
003758 56                  B   359    				ld d,(hl)
003759 23                  B   360    				inc hl
00375A 4E                  B   361    				ld c,(hl)
00375B CB23                B   362    				sla e							00375D CB12                B   363    				rl d
00375F CB11                B   364    				rl c
003761 3E58                B   365    				ld a,058h						003763 0601                B   366    				ld b,001h						003765 CD EA 37 00         B   367    				call sdc_send_command		
003769 CD 0F 38 00         B   368    				call sdc_wait_ncr				00376D B7                  B   369    				or a							00376E C2 59 38 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
003772 CD 3C 38 00         B   372    				call sdc_send_eight_clocks		                           B   373    
003776 3EFE                B   374    				ld a,0feh
003778 CD 85 38 00         B   375    				call sdc_send_byte				                           B   376    
00377C 21 80 65 00         B   377    				ld hl,sector_buffer				003780 0600                B   378    				ld b,0
003782 7E                  B   379    sdc_wslp		ld a,(hl)
003783 CD 85 38 00         B   380    				call sdc_send_byte
003787 23                  B   381    				inc hl
003788 7E                  B   382    				ld a,(hl)
003789 CD 85 38 00         B   383    				call sdc_send_byte
00378D 23                  B   384    				inc hl
00378E 10 F2               B   385    				djnz sdc_wslp
                           B   386    
003790 CD 3C 38 00         B   387    				call sdc_send_eight_clocks		003794 CD 3C 38 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
003798 CD 95 38 00         B   390    				call sdc_get_byte				00379C E61F                B   391    				and 01fh
00379E CB3F                B   392    				srl a
0037A0 FE02                B   393    				cp 002h
0037A2 C2 61 38 00         B   394    				jp nz,sdc_write_fail
                           B   395    
0037A6 0150C300            B   396    				ld bc,50000						0037AA CD 95 38 00         B   397    sdc_wcbsy		call sdc_get_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0037AE FEFF                B   398    				cp 0ffh
0037B0 28 09               B   399    				jr z,sdc_nbusy
0037B2 0B                  B   400    				dec bc
0037B3 78                  B   401    				ld a,b
0037B4 B1                  B   402    				or c
0037B5 20 F3               B   403    				jr nz,sdc_wcbsy
0037B7 C3 65 38 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
0037BB 3E4D                B   406    sdc_nbusy		ld a,04dh						0037BD 01000100            B   407    				ld bc,0100h			
0037C1 11000000            B   408    				ld de,0000h
0037C5 CD EA 37 00         B   409    				call sdc_send_command
0037C9 CD 0F 38 00         B   410    				call sdc_wait_ncr				0037CD B7                  B   411    				or a							0037CE C2 61 38 00         B   412    				jp nz,sdc_write_fail
0037D2 CD 95 38 00         B   413    				call sdc_get_byte				0037D6 B7                  B   414    				or a							0037D7 C2 61 38 00         B   415    				jp nz,sdc_write_fail		
0037DB CD AF 38 00         B   416    				call sdc_deselect_card			0037DF AF                  B   417    				xor a
0037E0 37                  B   418    				scf
0037E1 C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
0037E2                     B   423    sdc_send_command_null_args
                           B   424    
0037E2 01000100            B   425    				ld bc,0100h				
0037E6 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
0037EA                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
0037EA F5                  B   433    				push af				
0037EB CD 3C 38 00         B   434    				call sdc_send_eight_clocks		0037EF F1                  B   435    				pop af
                           B   436    
0037F0 CD 85 38 00         B   437    				call sdc_send_byte				0037F4 79                  B   438    				ld a,c							0037F5 CD 85 38 00         B   439    				call sdc_send_byte
0037F9 7A                  B   440    				ld a,d
0037FA CD 85 38 00         B   441    				call sdc_send_byte
0037FE 7B                  B   442    				ld a,e
0037FF CD 85 38 00         B   443    				call sdc_send_byte
003803 3E00                B   444    				ld a,0
003805 CD 85 38 00         B   445    				call sdc_send_byte
003809 78                  B   446    				ld a,b							00380A CD 85 38 00         B   447    				call sdc_send_byte
00380E C9                  B   448    				ret
                           B   449    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   450    ;----------------------------------------------
                           B   451    
00380F                     B   452    sdc_wait_ncr
                           B   453    	
00380F C5                  B   454    				push bc
003810 01000000            B   455    				ld bc,0
003814 CD 95 38 00         B   456    sdc_wncrl		call sdc_get_byte				003818 CB7F                B   457    				bit 7,a							00381A 28 05               B   458    				jr z,sdc_gcr
00381C 0B                  B   459    				dec bc
00381D 78                  B   460    			 	ld a,b
00381E B1                  B   461    				or c
00381F 20 F3               B   462    				jr nz,sdc_wncrl
003821 C1                  B   463    sdc_gcr			pop bc
003822 C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
003823                     B   468    sdc_wait_data_token
                           B   469    
003823 C5                  B   470    				push bc
003824 01000000            B   471    				ld bc,0
003828 CD 95 38 00         B   472    sdc_wdt			call sdc_get_byte				00382C FEFE                B   473    				cp 0feh
00382E 28 09               B   474    				jr z,sdc_gdt
003830 0B                  B   475    				dec bc
003831 78                  B   476    			 	ld a,b
003832 B1                  B   477    				or c
003833 20 F3               B   478    				jr nz,sdc_wdt
003835 C1                  B   479    				pop bc
003836 3E01                B   480    				ld a,1							003838 C9                  B   481    				ret
                           B   482    
003839 C1                  B   483    sdc_gdt			pop bc
00383A AF                  B   484    				xor a							00383B C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
00383C                     B   489    sdc_send_eight_clocks
                           B   490    
00383C 3EFF                B   491    				ld a,0ffh
00383E CD 85 38 00         B   492    				call sdc_send_byte
003842 C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
003843                     B   497    init_spi_mode_fail	
                           B   498    
003843 3E00                B   499    				ld a,sdc_error_spi_mode_failed
003845 F5                  B   500    fail_ret		push af
003846 CD AF 38 00         B   501    				call sdc_deselect_card
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00384A F1                  B   502    				pop af
00384B B7                  B   503    				or a
00384C C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
00384D                     B   508    mmc_init_fail
                           B   509    
00384D 3E01                B   510    				ld a,sdc_error_bad_init_mmc
00384F 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
003851                     B   515    sdc_init_fail
                           B   516    
003851 3E02                B   517    				ld a,sdc_error_bad_init
003853 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
003855                     B   523    sdc_id_fail
                           B   524    
003855 3E03                B   525    				ld a,sdc_error_bad_id
003857 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
003859                     B   530    sdc_bcr_error
                           B   531    
003859 3E04                B   532    				ld a,sdc_error_bad_command_resp
00385B 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
00385D                     B   537    sdc_dt_timeout
                           B   538    
00385D 3E05                B   539    				ld a,sdc_error_data_token_timeo
00385F 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003861                     B   544    sdc_write_fail
                           B   545    	
003861 3E07                B   546    				ld a,sdc_error_write_failed
003863 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
003865                     B   551    sdc_card_busy_timeout
                           B   552    
003865 3E06                B   553    				ld a,sdc_error_write_timeout
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003867 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
003869 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
003871 3A303030 30303030 
003879 30202020 20202000 
003881 000000 
                           B   559    
003884 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
003885                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003885 C5                  C     9    					push bc
003886 01030000            C    10    					ld bc,port_sdc_data
00388A ED79                C    11    					out (bc),a					                           C    12    	
00388C 0E01                C    13    					ld c,port_hw_flags			00388E ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
003891 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
003893 C1                  C    17    					pop bc
003894 C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
003895                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
003895 3EFF                C    26    					ld a,0ffh
003897 CD 85 38 00         C    27    					call sdc_send_byte
00389B C5                  C    28    					push bc
00389C 01030000            C    29    					ld bc,port_sdc_data
0038A0 ED78                C    30    					in a,(bc)					0038A2 C1                  C    31    					pop bc
0038A3 C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
0038A4                     C    36    sdc_select_card
                           C    37    	
0038A4 C5                  C    38    					push bc
0038A5 01020000            C    39    					ld bc,port_sdc_ctrl
0038A9 3E02                C    40    					ld a,1<<sdc_cs				0038AB ED79                C    41    					out (bc),a
0038AD C1                  C    42    					pop bc
0038AE C9                  C    43    					ret
                           C    44    
                           C    45    
0038AF                     C    46    sdc_deselect_card
                           C    47    
0038AF C5                  C    48    					push bc
0038B0 01020000            C    49    					ld bc,port_sdc_ctrl
0038B4 3E82                C    50    					ld a,080h+(1<<sdc_cs)		0038B6 ED79                C    51    					out (bc),a
0038B8 C1                  C    52    					pop bc
                           C    53    				
0038B9 3EFF                C    54    					ld a,0ffh					0038BB CD 85 38 00         C    55    					call sdc_send_byte
0038BF C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
0038C0                     C    60    sdc_power_on
                           C    61    
0038C0 C5                  C    62    					push bc
0038C1 01020000            C    63    					ld bc,port_sdc_ctrl
0038C5 3E81                C    64    					ld a,80h+(1<<sdc_power)		0038C7 ED79                C    65    					out (bc),a
0038C9 C1                  C    66    					pop bc
0038CA C9                  C    67    					ret
                           C    68    	
                           C    69    
0038CB                     C    70    sdc_power_off
                           C    71    	
0038CB C5                  C    72    					push bc						0038CC 01020000            C    73    					ld bc,port_sdc_ctrl
0038D0 3E01                C    74    					ld a,1<<sdc_power			0038D2 ED79                C    75    					out (bc),a					0038D4 C1                  C    76    					pop bc						0038D5 C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
0038D6                     C    82    sdc_slow_clock
                           C    83    
0038D6 C5                  C    84    					push bc
0038D7 01020000            C    85    					ld bc,port_sdc_ctrl
0038DB 3E04                C    86    					ld a,1<<sdc_speed			0038DD ED79                C    87    					out (bc),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
0038DF C1                  C    88    					pop bc
0038E0 C9                  C    89    					ret
                           C    90    
                           C    91    
0038E1                     C    92    sdc_fast_clock
                           C    93    	
0038E1 C5                  C    94    					push bc
0038E2 01020000            C    95    					ld bc,port_sdc_ctrl
0038E6 3E84                C    96    					ld a,080h+(1<<sdc_speed)	0038E8 ED79                C    97    					out (bc),a
0038EA C1                  C    98    					pop bc
0038EB C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3083    
                           A  3084    
                           A  3085    ;----------------------------------------------
                           A  3086    ; IO routines
                           A  3087    ;----------------------------------------------
                           A  3088    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
0038EC                     B     5    set_irq_vector
                           B     6    
0038EC AF                  B     7    				xor a
0038ED ED47                B     8    				ld i,a
0038EF 3EC3                B     9    				ld a,c3h						0038F1 32320000            B    10    				ld (032h),a	
0038F5 21 27 39 00         B    11    				ld hl,int_routine				0038F9 22330000            B    12    				ld (033h),hl
0038FD C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
0038FE 21 7D 5F 00         B    17    enable_os_irqs	ld hl,devices_connected			003902 CB46                B    18    				bit 0,(hl)
003904 C4 0F 39 00         B    19    				call nz,enable_kb_irq
003908 CB4E                B    20    				bit 1,(hl)
00390A C4 15 39 00         B    21    				call nz,enable_ms_irq
00390E C9                  B    22    				ret
                           B    23    
                           B    24    
00390F 3E81                B    25    enable_kb_irq	ld a,10000001b
003911 ED3905              B    26    				out0 (port_irq_ctrl),a			003914 C9                  B    27    				ret
                           B    28    
003915 3E82                B    29    enable_ms_irq	ld a,10000010b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003917 ED3905              B    30    				out0 (port_irq_ctrl),a			00391A C9                  B    31    				ret
                           B    32    
00391B 3E02                B    33    disable_ms_irq	ld a,00000010b
00391D ED3905              B    34    				out0 (port_irq_ctrl),a			003920 C9                  B    35    				ret
                           B    36    
003921 3E3F                B    37    disable_irqs	ld a,00111111b
003923 ED3905              B    38    				out0 (port_irq_ctrl),a			003926 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003927                     B    44    int_routine
003927 F5                  B    45    				push af							003928 ED3807              B    46    				in0 a,(port_ps2_ctrl)			00392B CB67                B    47    				bit 4,a
00392D C4 3F 39 00         B    48    				call nz,kb_interrupt_handler
003931 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003934 CB6F                B    50    				bit 5,a
003936 C4 E1 39 00         B    51    				call nz,ms_interrupt_handler
00393A F1                  B    52    				pop af
                           B    53    
00393B FB                  B    54    				ei								00393C 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
00393F                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
00393F E5                  B    77    				push hl							003940 C5                  B    78    				push bc
                           B    79    				
003941 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003944 47                  B    81    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    82    
003945 3A 64 61 00         B    83    				ld a,(key_release_mode)
003949 B7                  B    84    				or a
00394A 28 20               B    85    				jr z,key_pressed
                           B    86    			
00394C 78                  B    87    				ld a,b							00394D FEE0                B    88    				cp 0e0h							00394F 28 61               B    89    				jr z,kirq_done	
003951 FEE1                B    90    				cp 0e1h
003953 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003955 CD BC 39 00         B    93    				call qualifiers					003959 7D                  B    94    				ld a,l
00395A 2F                  B    95    				cpl
00395B 6F                  B    96    				ld l,a
00395C 3A 66 61 00         B    97    				ld a,(key_mod_flags)
003960 A5                  B    98    				and l							003961 32 66 61 00         B    99    				ld (key_mod_flags),a
003965 AF                  B   100    				xor a
003966 32 64 61 00         B   101    				ld (key_release_mode),a
00396A 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
00396C 78                  B   105    key_pressed		ld a,b							00396D FEE0                B   106    				cp 0e0h							00396F 28 41               B   107    				jr z,kirq_done	
003971 FEE1                B   108    				cp 0e1h
003973 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003975 FEF0                B   111    				cp 0f0h							003977 20 08               B   112    				jr nz,not_krel
003979 3E01                B   113    				ld a,1							00397B 32 64 61 00         B   114    				ld (key_release_mode),a			00397F 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003981 CD BC 39 00         B   118    not_krel		call qualifiers					003985 3A 66 61 00         B   119    				ld a,(key_mod_flags)			003989 B5                  B   120    				or l
00398A 32 66 61 00         B   121    				ld (key_mod_flags),a			00398E 68                  B   122    				ld l,b
00398F 01000000            B   123    				ld bc,0
003993 3A 62 61 00         B   124    				ld a,(key_buf_wr_idx)
003997 4F                  B   125    				ld c,a
003998 7D                  B   126    				ld a,l
003999 21 42 61 00         B   127    				ld hl,scancode_buffer
00399D 09                  B   128    				add hl,bc
00399E 77                  B   129    				ld (hl),a						00399F 0E10                B   130    				ld c,16
0039A1 09                  B   131    				add hl,bc
0039A2 3A 66 61 00         B   132    				ld a,(key_mod_flags)			0039A6 77                  B   133    				ld (hl),a	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0039A7 3A 62 61 00         B   134    				ld a,(key_buf_wr_idx)
0039AB 3C                  B   135    				inc a
0039AC E60F                B   136    				and 15
0039AE 32 62 61 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
0039B2 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			0039B5 CB67                B   140    				bit 4,a	
0039B7 20 88               B   141    				jr nz,key_loop
                           B   142    
0039B9 C1                  B   143    				pop bc
0039BA E1                  B   144    				pop hl
0039BB C9                  B   145    				ret
                           B   146    
                           B   147    
0039BC 2E40                B   148    qualifiers		ld l,040h
0039BE FE2F                B   149    				cp 02fh
0039C0 C8                  B   150    				ret z
                           B   151    			
0039C1 2E20                B   152    				ld l,020h
0039C3 FE27                B   153    				cp 027h
0039C5 C8                  B   154    				ret z
                           B   155    			
0039C6 2E10                B   156    				ld l,010h
0039C8 FE59                B   157    				cp 059h
0039CA C8                  B   158    				ret z
                           B   159    			
0039CB 2E08                B   160    				ld l,08h
0039CD FE11                B   161    				cp 011h
0039CF C8                  B   162    				ret z
                           B   163    			
0039D0 2E04                B   164    				ld l,04h
0039D2 FE1F                B   165    				cp 01fh
                           B   166    			
0039D4 2E02                B   167    				ld l,02h
0039D6 FE14                B   168    				cp 14h
0039D8 C8                  B   169    				ret z
                           B   170    			
0039D9 2E01                B   171    				ld l,01h
0039DB FE12                B   172    				cp 12h
0039DD C8                  B   173    				ret z
                           B   174    				
0039DE 2E00                B   175    				ld l,0
0039E0 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
0039E1                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
0039E1 C5                  B   198    				push bc							0039E2 D5                  B   199    				push de							0039E3 E5                  B   200    				push hl							                           B   201    							
0039E4 11000000            B   202    ms_loop			ld de,0		
0039E8 3A 70 61 00         B   203    				ld a,(mouse_packet_index)		0039EC 5F                  B   204    				ld e,a
0039ED 21 6C 61 00         B   205    				ld hl,mouse_packet	
0039F1 19                  B   206    				add hl,de
0039F2 ED3806              B   207    				in0 a,(port_mouse_data)
0039F5 77                  B   208    				ld (hl),a
                           B   209    								
0039F6 21 6B 61 00         B   210    				ld hl,mouse_packet_size
0039FA 1C                  B   211    				inc e							0039FB 7B                  B   212    				ld a,e
0039FC BE                  B   213    				cp (hl)
0039FD 20 4F               B   214    				jr nz,msubpkt
                           B   215    
0039FF 3A 6C 61 00         B   216    				ld a,(mouse_packet)				003A03 4F                  B   217    				ld c,a	
003A04 E607                B   218    				and 0111b
003A06 32 71 61 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003A0A 11000000            B   221    				ld de,0							003A0E CB61                B   222    				bit 4,c
003A10 28 01               B   223    				jr z,mxsignpos
003A12 1B                  B   224    				dec de
003A13 3A 6D 61 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003A17 5F                  B   226    				ld e,a
003A18 2A 72 61 00         B   227    				ld hl,(mouse_disp_x)
003A1C 19                  B   228    				add hl,de
003A1D 22 72 61 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003A21 11000000            B   231    				ld de,0							003A25 CB69                B   232    				bit 5,c
003A27 28 01               B   233    				jr z,mysignpos
003A29 1B                  B   234    				dec de
003A2A 3A 6E 61 00         B   235    mysignpos		ld a,(mouse_packet+2)
003A2E 5F                  B   236    				ld e,a
003A2F 2A 75 61 00         B   237    				ld hl,(mouse_disp_y)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003A33 AF                  B   238    				xor a							003A34 ED52                B   239    				sbc hl,de
003A36 22 75 61 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003A3A 21 6F 61 00         B   242    				ld hl,mouse_packet+3			003A3E 3A 78 61 00         B   243    				ld a,(mouse_wheel)
003A42 86                  B   244    				add a,(hl)
003A43 32 78 61 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003A47 3E01                B   247    				ld a,1
003A49 32 79 61 00         B   248    				ld (mouse_updated),a			                           B   249    				
003A4D AF                  B   250    				xor a
003A4E 32 70 61 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003A52 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003A55 CB6F                B   254    				bit 5,a
003A57 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003A59 E1                  B   257    				pop hl
003A5A D1                  B   258    				pop de
003A5B C1                  B   259    				pop bc
003A5C C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
003A5D                     B   266    nmi_routine
003A5D CD 31 13 00         B   267    				call os_store_CPU_regs
                           B   268    				
003A61 21000000            B   269    				ld hl,0
003A65 39                  B   270    				add hl,sp
003A66 7E                  B   271    				ld a,(hl)						003A67 E601                B   272    				and 1
003A69 32 AB 5F 00         B   273    				ld (store_adl),a
003A6D 20 0A               B   274    				jr nz,adl_freeze
003A6F 23                  B   275    				inc hl
003A70 5E                  B   276    				ld e,(hl)						003A71 23                  B   277    				inc hl
003A72 56                  B   278    				ld d,(hl)
003A73 CD 83 15 00         B   279    				call mbase_de
003A77 18 02               B   280    				jr got_pc
                           B   281    				
003A79 33                  B   282    adl_freeze		inc sp
003A7A D1                  B   283    				pop de							003A7B ED53 A1 5F 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
003A80 CD A9 3A 00         B   286    				call disable_nmi
003A84 ED3906              B   287    				out0 (port_nmi_ack),a			003A87 3E01                B   288    				ld a,1
003A89 32 7B 5F 00         B   289    				ld (frozen),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003A8D C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
003A91                     B   311    set_nmi_vector
                           B   312    
003A91 3EC3                B   313    				ld a,0c3h						003A93 32660000            B   314    				ld (066h),a
003A97 21 5D 3A 00         B   315    				ld hl,nmi_routine				003A9B 22670000            B   316    				ld (067h),hl
003A9F C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
                           B   320    
003AA0 ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			003AA3 3EC0                B   322    				ld a,11000000b					003AA5 ED3905              B   323    				out0 (port_irq_ctrl),a
003AA8 C9                  B   324    				ret
                           B   325    
003AA9 3E40                B   326    disable_nmi		ld a,01000000b					003AAB ED3905              B   327    				out0 (port_irq_ctrl),a
003AAE C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003AAF                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003AAF C5                  B    10    				push bc
003AB0 3A 08 5E 00         B    11    				ld a,(serial_timeout)
003AB4 47                  B    12    				ld b,a
003AB5 3ECC                B    13    rx_set_timer	ld a,cch
003AB7 ED3981              B    14    				out0 (TMR0_RR_L),a				003ABA 3E0C                B    15    				ld a,0ch
003ABC ED3982              B    16    				out0 (TMR0_RR_H),a				003ABF 3E03                B    17    				ld a,00000011b					003AC1 ED3980              B    18    				out0 (TMR0_CTL),a				003AC4 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003AC7 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003AC9 ED7401              B    22    				tstio 1							003ACC 20 0E               B    23    				jr nz,rx_in_buffer
003ACE AF                  B    24    				xor a
003ACF B0                  B    25    				or b
003AD0 28 13               B    26    				jr z,rx_time_out
003AD2 0E80                B    27    				ld c,TMR0_CTL	
003AD4 ED7480              B    28    				tstio 128						003AD7 28 EE               B    29    				jr z,rx_byte_lp		
003AD9 05                  B    30    				dec b
003ADA 18 D9               B    31    				jr rx_set_timer
                           B    32    
003ADC 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003AE0 ED78                B    34    				in a,(bc)						003AE2 C1                  B    35    				pop bc
003AE3 BF                  B    36    				cp a							003AE4 C9                  B    37    				ret
                           B    38    
003AE5 C1                  B    39    rx_time_out		pop bc
003AE6 3E83                B    40    				ld a,083h						003AE8 B7                  B    41    				or a							003AE9 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003AEA                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003AEA C5                  B    52    				push bc
003AEB 0EC5                B    53    				ld c,UART0_LSR					003AED ED7420              B    54    rs232_swait		tstio 020h						003AF0 28 FB               B    55    				jr z,rs232_swait
003AF2 01C00000            B    56    				ld bc,UART0_THR
003AF6 ED79                B    57    				out (c),a						003AF8 C1                  B    58    				pop bc
003AF9 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    62    
003AFA                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003AFA 7A                  B    68    				ld a,d
003AFB CD EA 3A 00         B    69    				call send_serial_byte
003AFF 7B                  B    70    				ld a,e
003B00 CD EA 3A 00         B    71    				call send_serial_byte
003B04 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003B05                     B    76    hwsc_flush_serial_buffer
                           B    77    
003B05 C5                  B    78    				push bc
003B06 01C00000            B    79    				ld bc,UART0_RBR
003B0A ED78                B    80    				in a,(bc)						003B0C C1                  B    81    				pop bc
003B0D C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
003B0E                     B     6    set_bitmap_parameters
                           B     7    				
003B0E 78                  B     8    				ld a,b
003B0F 32 EB 5D 00         B     9    				ld (window_pixel_doubling),a
003B13 22 C4 5D 00         B    10    				ld (window_width_bytes),hl		003B17 ED53 C7 5D 00       B    11    				ld (window_height_lines),de
                           B    12    			
003B1C 21000080            B    13    				ld hl,vram_a_addr				003B20 22 D6 5D 00         B    14    				ld (video_window_address),hl
003B24 21000000            B    15    				ld hl,0
003B28 ED5B C4 5D 00       B    16    				ld de,(window_width_bytes)
003B2D ED4B C7 5D 00       B    17    				ld bc,(window_height_lines)
003B32 19                  B    18    cwsblp			add hl,de
003B33 0B                  B    19    				dec bc
003B34 78                  B    20    				ld a,b
003B35 B1                  B    21    				or c
003B36 20 FA               B    22    				jr nz,cwsblp
003B38 22 E2 5D 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
003B3C CD CD 3B 00         B    25    				call os_set_video_hw_regs
                           B    26    				
003B40 AF                  B    27    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003B41 C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
003B42                     B    32    set_font_parameters
                           B    33    
003B42 78                  B    34    				ld a,b							003B43 32 CA 5D 00         B    35    				ld (font_width_bytes),a
003B47 79                  B    36    				ld a,c
003B48 32 CD 5D 00         B    37    				ld (font_height_lines),a		003B4C 11000000            B    38    				ld de,0
003B50 59                  B    39    				ld e,c
003B51 50                  B    40    				ld d,b
003B52 ED5C                B    41    				mlt de
003B54 21000000            B    42    				ld hl,0
003B58 0638                B    43    				ld b,224/4						003B5A 19                  B    44    cfslp			add hl,de
003B5B 10 FD               B    45    				djnz cfslp
003B5D 22 D3 5D 00         B    46    				ld (font_length),hl
                           B    47    							
003B61 41                  B    48    				ld b,c
003B62 21000000            B    49    				ld hl,0
003B66 ED5B C4 5D 00       B    50    				ld de,(window_width_bytes)
003B6B 19                  B    51    csualp			add hl,de
003B6C 10 FD               B    52    				djnz csualp
003B6E 22 E8 5D 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
003B72 AF                  B    55    				xor a
003B73 C9                  B    56    				ret
                           B    57    				
                           B    58    				
                           B    59    
003B74                     B    60    set_charmap_parameters
                           B    61    
003B74 79                  B    62    				ld a,c
003B75 32 BE 5D 00         B    63    				ld (window_rows),a
003B79 78                  B    64    				ld a,b
003B7A 32 C1 5D 00         B    65    				ld (window_columns),a
                           B    66    				
003B7E 2A D6 5D 00         B    67    				ld hl,(video_window_address)
003B82 ED5B E2 5D 00       B    68    				ld de,(total_window_bytes)
003B87 19                  B    69    				add hl,de
003B88 22 D9 5D 00         B    70    				ld (charmap_address),hl
                           B    71    
003B8C 11000000            B    72    				ld de,0
003B90 3A BE 5D 00         B    73    				ld a,(window_rows)
003B94 5F                  B    74    				ld e,a
003B95 3A C1 5D 00         B    75    				ld a,(window_columns)
003B99 57                  B    76    				ld d,a
003B9A ED5C                B    77    				mlt de
003B9C ED53 E5 5D 00       B    78    				ld (total_charmap_bytes),de
003BA1 19                  B    79    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003BA2 22 DC 5D 00         B    80    				ld (attributes_address),hl
003BA6 19                  B    81    				add hl,de
003BA7 22 DF 5D 00         B    82    				ld (cursor_image_address),hl
003BAB 11000000            B    83    				ld de,0
003BAF 3A CD 5D 00         B    84    				ld a,(font_height_lines)
003BB3 5F                  B    85    				ld e,a
003BB4 3A CA 5D 00         B    86    				ld a,(font_width_bytes)
003BB8 57                  B    87    				ld d,a
003BB9 D5                  B    88    				push de
003BBA ED5C                B    89    				mlt de
003BBC 19                  B    90    				add hl,de
003BBD 22 D0 5D 00         B    91    				ld (font_addr),hl
003BC1 D1                  B    92    				pop de
003BC2 16E0                B    93    				ld d,224
003BC4 ED5C                B    94    				mlt de
003BC6 19                  B    95    				add hl,de				
003BC7 22 81 5F 00         B    96    				ld (vram_a_high),hl
003BCB AF                  B    97    				xor a
003BCC C9                  B    98    				ret
                           B    99    				
                           B   100    
003BCD                     B   101    os_set_video_hw_regs
                           B   102    
003BCD DD210018 FF         B   103    				ld ix,video_control				003BD2 3A EB 5D 00         B   104    				ld a,(window_pixel_doubling)
003BD6 CB27                B   105    				sla a
003BD8 F601                B   106    				or 1
003BDA DD7700              B   107    				ld (ix),a						003BDD DD360100            B   108    				ld (ix+1),0						003BE1 DD360200            B   109    				ld (ix+2),0						003BE5 DD360463            B   110    				ld (ix+4),99					                           B   111    
003BE9 DD212010 FF         B   112    				ld ix,bitmap_parameters			003BEE ED5B D6 5D 00       B   113    				ld de,(video_window_address)	003BF3 DD1F00              B   114    				ld (ix),de						003BF6 DD360401            B   115    				ld (ix+04h),1					003BFA DD360800            B   116    				ld (ix+08h),0					003BFE DD360C00            B   117    				ld (ix+0ch),0					003C02 ED4B C4 5D 00       B   118    				ld bc,(window_width_bytes)		003C07 CB38                B   119    				srl b							003C09 CB19                B   120    				rr c
003C0B CB38                B   121    				srl b
003C0D CB19                B   122    				rr c
003C0F CB38                B   123    				srl b
003C11 CB19                B   124    				rr c
003C13 0D                  B   125    				dec c
003C14 DD7110              B   126    				ld (ix+10h),c
                           B   127    				
003C17 21 9B 5D 00         B   128    				ld hl,pen_palette
003C1B CD 21 3C 00         B   129    				call hswc_set_ui_colours
                           B   130    				
003C1F AF                  B   131    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003C20 C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
                           B   136    				
003C21                     B   137    hswc_set_ui_colours
                           B   138    
003C21 110000FF            B   139    				ld de,hw_palette
003C25 01200000            B   140    				ld bc,16*2
003C29 EDB0                B   141    				ldir
003C2B AF                  B   142    				xor a							003C2C C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
003C2D                     B   148    hwsc_clear_screen
                           B   149    
003C2D 2A D6 5D 00         B   150    				ld hl,(video_window_address)	003C31 3A 99 5D 00         B   151    				ld a,(background_colour)
003C35 E60F                B   152    				and 0fh
003C37 47                  B   153    				ld b,a
003C38 07                  B   154    				rlca
003C39 07                  B   155    				rlca
003C3A 07                  B   156    				rlca
003C3B 07                  B   157    				rlca
003C3C B0                  B   158    				or b
003C3D 77                  B   159    				ld (hl),a
003C3E E5                  B   160    				push hl
003C3F D1                  B   161    				pop de
003C40 13                  B   162    				inc de
003C41 ED4B E2 5D 00       B   163    				ld bc,(total_window_bytes)
003C46 0B                  B   164    				dec bc
003C47 EDB0                B   165    				ldir
                           B   166    				
003C49 2A DC 5D 00         B   167    				ld hl,(attributes_address)		003C4D ED4B E5 5D 00       B   168    				ld bc,(total_charmap_bytes)
003C52 0B                  B   169    				dec bc
003C53 3600                B   170    				ld (hl),0
003C55 E5                  B   171    				push hl
003C56 D1                  B   172    				pop de
003C57 13                  B   173    				inc de
003C58 EDB0                B   174    				ldir				
                           B   175    
003C5A 2A D9 5D 00         B   176    				ld hl,(charmap_address)			003C5E ED4B E5 5D 00       B   177    				ld bc,(total_charmap_bytes)
003C63 0B                  B   178    				dec bc
003C64 3620                B   179    				ld (hl),' '
003C66 E5                  B   180    				push hl
003C67 D1                  B   181    				pop de
003C68 13                  B   182    				inc de
003C69 EDB0                B   183    				ldir				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   184    
003C6B 01000000            B   185    				ld bc,0
003C6F ED43 13 60 00       B   186    				ld (cursor_y),bc
003C74 AF                  B   187    				xor a							003C75 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003C76                     B   193    hwsc_scroll_up	
                           B   194    				
003C76 C5                  B   195    				push bc
003C77 D5                  B   196    				push de
003C78 E5                  B   197    				push hl
                           B   198    
003C79 2A E2 5D 00         B   199    				ld hl,(total_window_bytes)
003C7D ED5B E8 5D 00       B   200    				ld de,(total_row_bytes)
003C82 AF                  B   201    				xor a
003C83 ED52                B   202    				sbc hl,de
003C85 E5                  B   203    				push hl
003C86 C1                  B   204    				pop bc							003C87 2A D6 5D 00         B   205    				ld hl,(video_window_address)
003C8B ED5B E8 5D 00       B   206    				ld de,(total_row_bytes)
003C90 19                  B   207    				add hl,de						003C91 ED5B D6 5D 00       B   208    				ld de,(video_window_address)	003C96 EDB0                B   209    				ldir
                           B   210    				
003C98 EB                  B   211    				ex de,hl						003C99 3A 99 5D 00         B   212    				ld a,(background_colour)
003C9D E60F                B   213    				and 0fh
003C9F 4F                  B   214    				ld c,a
003CA0 07                  B   215    				rlca
003CA1 07                  B   216    				rlca
003CA2 07                  B   217    				rlca
003CA3 07                  B   218    				rlca
003CA4 B1                  B   219    				or c
003CA5 77                  B   220    				ld (hl),a
003CA6 ED4B E8 5D 00       B   221    				ld bc,(total_row_bytes)
003CAB 0B                  B   222    				dec bc
003CAC E5                  B   223    				push hl
003CAD D1                  B   224    				pop de
003CAE 13                  B   225    				inc de
003CAF EDB0                B   226    				ldir
                           B   227    
003CB1 2A D9 5D 00         B   228    				ld hl,(charmap_address)			003CB5 ED5B C1 5D 00       B   229    				ld de,(window_columns)
003CBA 19                  B   230    				add hl,de
003CBB ED5B D9 5D 00       B   231    				ld de,(charmap_address)
003CC0 ED4B BE 5D 00       B   232    				ld bc,(window_rows)
003CC5 0D                  B   233    				dec c
003CC6 3A C1 5D 00         B   234    				ld a,(window_columns)
003CCA 47                  B   235    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003CCB ED4C                B   236    				mlt bc
003CCD C5                  B   237    				push bc
003CCE EDB0                B   238    				ldir
003CD0 C1                  B   239    				pop bc							                           B   240    
003CD1 2A D9 5D 00         B   241    				ld hl,(charmap_address)			003CD5 09                  B   242    				add hl,bc
003CD6 3620                B   243    				ld (hl),' '
003CD8 ED4B C1 5D 00       B   244    				ld bc,(window_columns)
003CDD 0B                  B   245    				dec bc
003CDE E5                  B   246    				push hl
003CDF D1                  B   247    				pop de
003CE0 13                  B   248    				inc de
003CE1 EDB0                B   249    				ldir
                           B   250    					
003CE3 2A DC 5D 00         B   251    				ld hl,(attributes_address)		003CE7 ED5B C1 5D 00       B   252    				ld de,(window_columns)
003CEC 19                  B   253    				add hl,de
003CED ED5B DC 5D 00       B   254    				ld de,(attributes_address)
003CF2 ED4B BE 5D 00       B   255    				ld bc,(window_rows)
003CF7 0D                  B   256    				dec c
003CF8 3A C1 5D 00         B   257    				ld a,(window_columns)
003CFC 47                  B   258    				ld b,a
003CFD ED4C                B   259    				mlt bc
003CFF C5                  B   260    				push bc
003D00 EDB0                B   261    				ldir
003D02 C1                  B   262    				pop bc			
                           B   263    
003D03 2A DC 5D 00         B   264    				ld hl,(attributes_address)		003D07 09                  B   265    				add hl,bc
003D08 3600                B   266    				ld (hl),0
003D0A ED4B C1 5D 00       B   267    				ld bc,(window_columns)
003D0F 0B                  B   268    				dec bc
003D10 E5                  B   269    				push hl
003D11 D1                  B   270    				pop de
003D12 13                  B   271    				inc de
003D13 EDB0                B   272    				ldir
                           B   273    
003D15 E1                  B   274    				pop hl
003D16 D1                  B   275    				pop de
003D17 C1                  B   276    				pop bc
003D18 AF                  B   277    				xor a							003D19 C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
003D1A                     B   291    hwsc_plot_char
003D1A E5                  B   292    				push hl							003D1B F5                  B   293    				push af
003D1C 3A 97 5D 00         B   294    				ld a,(current_pen)
003D20 32 BB 5D 00         B   295    				ld (plotchar_colour),a
003D24 18 02               B   296    				jr plotc_go
                           B   297    				
003D26                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
003D26 E5                  B   300    				push hl
003D27 F5                  B   301    				push af							003D28 3A BE 5D 00         B   302    plotc_go		ld a,(window_rows)				003D2C 3D                  B   303    				dec a
003D2D B9                  B   304    				cp c							003D2E 38 08               B   305    				jr c,win_err
003D30 3A C1 5D 00         B   306    				ld a,(window_columns)
003D34 3D                  B   307    				dec a
003D35 B8                  B   308    				cp b
003D36 30 06               B   309    				jr nc,win_ok
003D38 F1                  B   310    win_err			pop af
003D39 E1                  B   311    				pop hl
003D3A 3E82                B   312    				ld a,82h						003D3C B7                  B   313    				or a
003D3D C9                  B   314    				ret
                           B   315    				
003D3E F1                  B   316    win_ok			pop af
003D3F D5                  B   317    				push de
003D40 C5                  B   318    				push bc
003D41 DDE5                B   319    				push ix
003D43 FDE5                B   320    				push iy
003D45 2A CD 5D 00         B   321    				ld hl,(font_height_lines)		003D49 D620                B   322    				sub a,32
003D4B 67                  B   323    				ld h,a
003D4C C620                B   324    				add a,32
003D4E ED6C                B   325    				mlt hl							003D50 ED5B D0 5D 00       B   326    				ld de,(font_addr)
003D55 19                  B   327    				add hl,de
003D56 E5                  B   328    				push hl
003D57 DDE1                B   329    				pop ix							                           B   330    				
003D59 11000000            B   331    				ld de,0
003D5D 2A E8 5D 00         B   332    				ld hl,(total_row_bytes)			003D61 5D                  B   333    				ld e,l
003D62 51                  B   334    				ld d,c
003D63 ED5C                B   335    				mlt de							003D65 69                  B   336    				ld l,c							003D66 ED6C                B   337    				mlt hl							003D68 29                  B   338    				add hl,hl						003D69 29                  B   339    				add hl,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D6A 29                  B   340    				add hl,hl
003D6B 29                  B   341    				add hl,hl
003D6C 29                  B   342    				add hl,hl
003D6D 29                  B   343    				add hl,hl
003D6E 29                  B   344    				add hl,hl
003D6F 29                  B   345    				add hl,hl
003D70 19                  B   346    				add hl,de						003D71 ED5B CA 5D 00       B   347    				ld de,(font_width_bytes)
003D76 50                  B   348    				ld d,b	
003D77 ED5C                B   349    				mlt de							003D79 19                  B   350    				add hl,de						003D7A ED5B D6 5D 00       B   351    				ld de,(video_window_address)
003D7F 19                  B   352    				add hl,de
003D80 E5                  B   353    				push hl
003D81 FDE1                B   354    				pop iy							                           B   355    				
003D83 2A C1 5D 00         B   356    				ld hl,(window_columns)			003D87 61                  B   357    				ld h,c							003D88 ED6C                B   358    				mlt hl
003D8A 11000000            B   359    				ld de,0
003D8E 58                  B   360    				ld e,b
003D8F 19                  B   361    				add hl,de
003D90 EB                  B   362    				ex de,hl
003D91 2A D9 5D 00         B   363    				ld hl,(charmap_address)
003D95 19                  B   364    				add hl,de
003D96 77                  B   365    				ld (hl),a
                           B   366    
003D97 3A BB 5D 00         B   367    				ld a,(plotchar_colour)			003D9B 2A DC 5D 00         B   368    				ld hl,(attributes_address)
003D9F 19                  B   369    				add hl,de
003DA0 77                  B   370    				ld (hl),a
                           B   371    
003DA1 57                  B   372    				ld d,a				
003DA2 E6F0                B   373    				and 0f0h
003DA4 20 0E               B   374    				jr nz,notransbg
003DA6 3A 99 5D 00         B   375    				ld a,(background_colour)
003DAA E60F                B   376    				and 0fh
003DAC 47                  B   377    				ld b,a
003DAD 07                  B   378    				rlca
003DAE 07                  B   379    				rlca
003DAF 07                  B   380    				rlca
003DB0 07                  B   381    				rlca
003DB1 4F                  B   382    				ld c,a
003DB2 18 06               B   383    				jr gotbg
003DB4 4F                  B   384    notransbg		ld c,a							003DB5 0F                  B   385    				rrca
003DB6 0F                  B   386    				rrca
003DB7 0F                  B   387    				rrca
003DB8 0F                  B   388    				rrca
003DB9 47                  B   389    				ld b,a							003DBA 7A                  B   390    gotbg			ld a,d
003DBB E60F                B   391    				and 0fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003DBD 20 0E               B   392    				jr nz,notransfg
003DBF 3A 99 5D 00         B   393    				ld a,(background_colour)
003DC3 E60F                B   394    				and 0fh
003DC5 57                  B   395    				ld d,a
003DC6 07                  B   396    				rlca
003DC7 07                  B   397    				rlca
003DC8 07                  B   398    				rlca
003DC9 07                  B   399    				rlca
003DCA 5F                  B   400    				ld e,a
003DCB 18 06               B   401    				jr gotfg
003DCD 57                  B   402    notransfg		ld d,a							003DCE 07                  B   403    				rlca
003DCF 07                  B   404    				rlca
003DD0 07                  B   405    				rlca
003DD1 07                  B   406    				rlca
003DD2 5F                  B   407    				ld e,a							                           B   408    				
003DD3 D9                  B   409    gotfg			exx
003DD4 3A CD 5D 00         B   410    				ld a,(font_height_lines)
003DD8 47                  B   411    				ld b,a
003DD9 2A C4 5D 00         B   412    				ld hl,(window_width_bytes)
003DDD ED5B CA 5D 00       B   413    				ld de,(font_width_bytes)
003DE2 AF                  B   414    				xor a
003DE3 ED52                B   415    				sbc hl,de
003DE5 EB                  B   416    				ex de,hl
                           B   417    						
003DE6 D9                  B   418    charloop		exx
003DE7 DD6E00              B   419    				ld l,(ix)						003DEA CB25                B   420    				sla l
003DEC 79                  B   421    				ld a,c
003DED 30 01               B   422    				jr nc,nbgmsb7
003DEF 7B                  B   423    				ld a,e
003DF0 CB25                B   424    nbgmsb7			sla l
003DF2 30 03               B   425    				jr nc,nfgmsb6
003DF4 B2                  B   426    				or d
003DF5 18 01               B   427    				jr gotpixcol76
003DF7 B0                  B   428    nfgmsb6			or b
003DF8 FD7700              B   429    gotpixcol76		ld (iy),a
003DFB FD23                B   430    				inc iy
                           B   431    
003DFD CB25                B   432    				sla l
003DFF 79                  B   433    				ld a,c
003E00 30 01               B   434    				jr nc,nbgmsb5
003E02 7B                  B   435    				ld a,e
003E03 CB25                B   436    nbgmsb5			sla l
003E05 30 03               B   437    				jr nc,nfgmsb4
003E07 B2                  B   438    				or d
003E08 18 01               B   439    				jr gotpixcol54
003E0A B0                  B   440    nfgmsb4			or b
003E0B FD7700              B   441    gotpixcol54		ld (iy),a
003E0E FD23                B   442    				inc iy
                           B   443    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E10 CB25                B   444    				sla l
003E12 79                  B   445    				ld a,c
003E13 30 01               B   446    				jr nc,nbgmsb3
003E15 7B                  B   447    				ld a,e
003E16 CB25                B   448    nbgmsb3			sla l
003E18 30 03               B   449    				jr nc,nfgmsb2
003E1A B2                  B   450    				or d
003E1B 18 01               B   451    				jr gotpixcol32
003E1D B0                  B   452    nfgmsb2			or b
003E1E FD7700              B   453    gotpixcol32		ld (iy),a
003E21 FD23                B   454    				inc iy
                           B   455    				
003E23 CB25                B   456    				sla l
003E25 79                  B   457    				ld a,c
003E26 30 01               B   458    				jr nc,nbgmsb1
003E28 7B                  B   459    				ld a,e
003E29 CB25                B   460    nbgmsb1			sla l
003E2B 30 03               B   461    				jr nc,nfgmsb0
003E2D B2                  B   462    				or d
003E2E 18 01               B   463    				jr gotpixcol10
003E30 B0                  B   464    nfgmsb0			or b
003E31 FD7700              B   465    gotpixcol10		ld (iy),a
003E34 FD23                B   466    				inc iy
                           B   467    				
003E36 DD23                B   468    				inc ix
003E38 D9                  B   469    				exx
003E39 FD19                B   470    				add iy,de
003E3B 10 A9               B   471    				djnz charloop
003E3D D9                  B   472    				exx 
                           B   473    				
003E3E FDE1                B   474    				pop iy
003E40 DDE1                B   475    				pop ix
003E42 C1                  B   476    				pop bc
003E43 D1                  B   477    				pop de
003E44 E1                  B   478    				pop hl
003E45 AF                  B   479    				xor a
003E46 C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
003E47                     B   484    hwsc_remove_cursor
                           B   485    
003E47 ED4B 13 60 00       B   486    				ld bc,(cursor_y)
003E4C CD EF 3E 00         B   487    				call hwsc_get_charmap_addr_xy
003E50 1A                  B   488    				ld a,(de)
003E51 32 BB 5D 00         B   489    				ld (plotchar_colour),a
003E55 7E                  B   490    				ld a,(hl)				
003E56 C3 26 3D 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
003E5A                     B   494    hwsc_draw_cursor
                           B   495    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E5A 21 BD 5D 00         B   496    				ld hl,active_cursor_image
003E5E 3A BC 5D 00         B   497    				ld a,(req_cursor_image)
003E62 BE                  B   498    				cp (hl)
003E63 C4 B7 3E 00         B   499    				call nz,hwsc_set_cursor_image
                           B   500    
003E67 ED4B 13 60 00       B   501    				ld bc,(cursor_y)
003E6C 2A E8 5D 00         B   502    				ld hl,(total_row_bytes)			003E70 5D                  B   503    				ld e,l
003E71 51                  B   504    				ld d,c
003E72 ED5C                B   505    				mlt de
003E74 69                  B   506    				ld l,c
003E75 ED6C                B   507    				mlt hl
003E77 29                  B   508    				add hl,hl
003E78 29                  B   509    				add hl,hl
003E79 29                  B   510    				add hl,hl
003E7A 29                  B   511    				add hl,hl
003E7B 29                  B   512    				add hl,hl
003E7C 29                  B   513    				add hl,hl
003E7D 29                  B   514    				add hl,hl
003E7E 29                  B   515    				add hl,hl
003E7F 19                  B   516    				add hl,de
003E80 ED5B CA 5D 00       B   517    				ld de,(font_width_bytes)
003E85 50                  B   518    				ld d,b
003E86 ED5C                B   519    				mlt de		
003E88 19                  B   520    				add hl,de						003E89 ED5B D6 5D 00       B   521    				ld de,(video_window_address)
003E8E 19                  B   522    				add hl,de						003E8F E5                  B   523    				push hl
003E90 FDE1                B   524    				pop iy
                           B   525    				
003E92 ED4B CD 5D 00       B   526    				ld bc,(font_height_lines)
003E97 DD2A DF 5D 00       B   527    				ld ix,(cursor_image_address)	003E9C ED5B C4 5D 00       B   528    				ld de,(window_width_bytes)
                           B   529    
003EA1 ED2300              B   530    curlp2			lea hl,iy+0
003EA4 0604                B   531    				ld b,4							003EA6 7E                  B   532    curlp1			ld a,(hl)
003EA7 DDAE00              B   533    				xor (ix)
003EAA 77                  B   534    				ld (hl),a
003EAB DD23                B   535    				inc ix
003EAD 23                  B   536    				inc hl
003EAE 10 F6               B   537    				djnz curlp1
                           B   538    											
003EB0 FD19                B   539    				add iy,de
003EB2 0D                  B   540    				dec c
003EB3 20 EC               B   541    				jr nz,curlp2
                           B   542    
003EB5 AF                  B   543    				xor a							003EB6 C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   548    
003EB7                     B   549    hwsc_set_cursor_image
                           B   550    
003EB7 32 BD 5D 00         B   551    				ld (active_cursor_image),a
003EBB D620                B   552    				sub a,32						003EBD 2A CD 5D 00         B   553    				ld hl,(font_height_lines)
003EC1 67                  B   554    				ld h,a
003EC2 ED6C                B   555    				mlt hl
003EC4 ED5B D0 5D 00       B   556    				ld de,(font_addr)
003EC9 19                  B   557    				add hl,de
003ECA ED5B DF 5D 00       B   558    				ld de,(cursor_image_address)	003ECF 3A CD 5D 00         B   559    				ld a,(font_height_lines)
003ED3 47                  B   560    				ld b,a
003ED4 C5                  B   561    fclp2			push bc
                           B   562    
003ED5 4E                  B   563    				ld c,(hl)
003ED6 0604                B   564    				ld b,4							003ED8 3E00                B   565    fclp1			ld a,0
003EDA CB21                B   566    				sla c
003EDC 30 02               B   567    				jr nc,nopixl
003EDE F6F0                B   568    				or a,0f0h						003EE0 CB21                B   569    nopixl			sla c
003EE2 30 02               B   570    				jr nc,nopixr
003EE4 F60F                B   571    				or a,0fh
003EE6 12                  B   572    nopixr			ld (de),a
003EE7 13                  B   573    				inc de
003EE8 10 EE               B   574    				djnz fclp1
                           B   575    			
003EEA 23                  B   576    				inc hl
003EEB C1                  B   577    				pop bc
003EEC 10 E6               B   578    				djnz fclp2
003EEE C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
003EEF                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
                           B   588    				
003EEF 11000000            B   589    				ld de,0
003EF3 3A C1 5D 00         B   590    				ld a,(window_columns)			003EF7 5F                  B   591    				ld e,a							003EF8 51                  B   592    				ld d,c							003EF9 ED5C                B   593    				mlt de
003EFB 7B                  B   594    				ld a,e
003EFC 80                  B   595    				add a,b
003EFD 5F                  B   596    				ld e,a
003EFE 30 01               B   597    				jr nc,choffh_ok
003F00 14                  B   598    				inc d
003F01 2A D9 5D 00         B   599    choffh_ok		ld hl,(charmap_address)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F05 19                  B   600    				add hl,de
003F06 E5                  B   601    				push hl
003F07 2A DC 5D 00         B   602    				ld hl,(attributes_address)
003F0B 19                  B   603    				add hl,de
003F0C EB                  B   604    				ex de,hl
003F0D E1                  B   605    				pop hl
003F0E AF                  B   606    				xor a							003F0F C9                  B   607    				ret
                           B   608    								
                           B   609    ;----------------------------------------------
                           B   610    
003F10                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
003F10 C5                  B   615    				push bc
003F11 D5                  B   616    				push de
003F12 E5                  B   617    				push hl
                           B   618    
003F13 3A 13 60 00         B   619    				ld a,(cursor_y)
003F17 2A C1 5D 00         B   620    				ld hl,(window_columns)
003F1B 67                  B   621    				ld h,a
003F1C ED6C                B   622    				mlt hl
003F1E 11000000            B   623    				ld de,0
003F22 58                  B   624    				ld e,b
003F23 19                  B   625    				add hl,de
003F24 EB                  B   626    				ex de,hl
003F25 D5                  B   627    				push de
003F26 2A D9 5D 00         B   628    				ld hl,(charmap_address)
003F2A 19                  B   629    				add hl,de						                           B   630    
003F2B E5                  B   631    				push hl
003F2C D1                  B   632    				pop de
003F2D 1B                  B   633    				dec de							003F2E 3A C1 5D 00         B   634    				ld a,(window_columns)
003F32 90                  B   635    				sub b
003F33 01000000            B   636    				ld bc,0
003F37 4F                  B   637    				ld c,a							003F38 C5                  B   638    				push bc
003F39 EDB0                B   639    				ldir
003F3B C1                  B   640    				pop bc
003F3C 3E20                B   641    				ld a,32
003F3E 12                  B   642    				ld (de),a						                           B   643    				
003F3F 2A DC 5D 00         B   644    				ld hl,(attributes_address)		003F43 D1                  B   645    				pop de
003F44 19                  B   646    				add hl,de
003F45 E5                  B   647    				push hl
003F46 D1                  B   648    				pop de
003F47 1B                  B   649    				dec de							003F48 EDB0                B   650    				ldir							003F4A 3A 99 5D 00         B   651    				ld a,(background_colour)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F4E 12                  B   652    				ld (de),a						                           B   653    
003F4F CD B5 3F 00         B   654    				call hwsc_redraw_line			                           B   655    
003F53 E1                  B   656    				pop hl
003F54 D1                  B   657    				pop de
003F55 C1                  B   658    				pop bc
003F56 C9                  B   659    				ret
                           B   660    
                           B   661    
                           B   662    
003F57                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
003F57 C5                  B   667    				push bc
003F58 D5                  B   668    				push de
003F59 E5                  B   669    				push hl
                           B   670    	
003F5A 21 14 60 00         B   671    				ld hl,cursor_x				
003F5E 3A C1 5D 00         B   672    				ld a,(window_columns)
003F62 3D                  B   673    				dec a
003F63 BE                  B   674    				cp (hl)			
003F64 28 4B               B   675    				jr z,chright_end
                           B   676    
003F66 46                  B   677    				ld b,(hl)
003F67 11000000            B   678    				ld de,0
003F6B 57                  B   679    				ld d,a
003F6C 14                  B   680    				inc d
003F6D 3A 13 60 00         B   681    				ld a,(cursor_y)
003F71 5F                  B   682    				ld e,a
003F72 ED5C                B   683    				mlt de
003F74 D5                  B   684    				push de 
                           B   685    				
003F75 C5                  B   686    				push bc
003F76 2A D9 5D 00         B   687    				ld hl,(charmap_address)
003F7A ED4B C1 5D 00       B   688    				ld bc,(window_columns)
003F7F 0B                  B   689    				dec bc
003F80 0B                  B   690    				dec bc
003F81 09                  B   691    				add hl,bc
003F82 C1                  B   692    				pop bc
                           B   693    				
003F83 19                  B   694    				add hl,de						003F84 E5                  B   695    				push hl
003F85 D1                  B   696    				pop de
003F86 13                  B   697    				inc de							003F87 3A C1 5D 00         B   698    				ld a,(window_columns)
003F8B 3D                  B   699    				dec a
003F8C 90                  B   700    				sub b
003F8D 47                  B   701    				ld b,a
003F8E C5                  B   702    				push bc							003F8F 7E                  B   703    mchrlp			ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F90 12                  B   704    				ld (de),a
003F91 2B                  B   705    				dec hl
003F92 1B                  B   706    				dec de
003F93 10 FA               B   707    				djnz mchrlp
                           B   708    
003F95 2A DC 5D 00         B   709    				ld hl,(attributes_address)		003F99 ED4B C1 5D 00       B   710    				ld bc,(window_columns)
003F9E 0B                  B   711    				dec bc
003F9F 0B                  B   712    				dec bc
003FA0 09                  B   713    				add hl,bc
                           B   714    
003FA1 C1                  B   715    				pop bc
003FA2 D1                  B   716    				pop de
003FA3 19                  B   717    				add hl,de						003FA4 E5                  B   718    				push hl
003FA5 D1                  B   719    				pop de
003FA6 13                  B   720    				inc de							003FA7 7E                  B   721    mattrlp			ld a,(hl)
003FA8 12                  B   722    				ld (de),a
003FA9 2B                  B   723    				dec hl
003FAA 1B                  B   724    				dec de
003FAB 10 FA               B   725    				djnz mattrlp
                           B   726    
003FAD CD B5 3F 00         B   727    				call hwsc_redraw_line			                           B   728    
003FB1 E1                  B   729    chright_end		pop hl	
003FB2 D1                  B   730    				pop de
003FB3 C1                  B   731    				pop bc
003FB4 C9                  B   732    				ret
                           B   733    
                           B   734    ;----------------------------------------------
                           B   735    
003FB5                     B   736    hwsc_redraw_line
                           B   737    				
003FB5 3A 13 60 00         B   738    				ld a,(cursor_y)
003FB9 4F                  B   739    				ld c,a
                           B   740    		
003FBA                     B   741    hwsc_redraw_ui_line
                           B   742    
003FBA ED5B C1 5D 00       B   743    				ld de,(window_columns)			003FBF 51                  B   744    				ld d,c
003FC0 ED5C                B   745    				mlt de
003FC2 0600                B   746    				ld b,0							003FC4 2A DC 5D 00         B   747    rs_xloop		ld hl,(attributes_address)		003FC8 19                  B   748    				add hl,de
003FC9 7E                  B   749    				ld a,(hl)						003FCA 32 BB 5D 00         B   750    				ld (plotchar_colour),a
003FCE 2A D9 5D 00         B   751    				ld hl,(charmap_address)
003FD2 19                  B   752    				add hl,de
003FD3 7E                  B   753    				ld a,(hl)				
003FD4 CD 26 3D 00         B   754    				call hwsc_plotchar_specific_att
003FD8 13                  B   755    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FD9 04                  B   756    				inc b
003FDA 3A C1 5D 00         B   757    				ld a,(window_columns)
003FDE B8                  B   758    				cp b
003FDF 20 E3               B   759    				jr nz,rs_xloop
003FE1 C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
003FE2                     B   764    hwsc_charline_to_command_string	
                           B   765    								
003FE2 ED5B C1 5D 00       B   766    				ld de,(window_columns)
003FE7 3A 13 60 00         B   767    				ld a,(cursor_y)					003FEB 57                  B   768    				ld d,a
003FEC ED5C                B   769    				mlt de
003FEE 2A D9 5D 00         B   770    				ld hl,(charmap_address)
003FF2 19                  B   771    				add hl,de
003FF3 11 31 60 00         B   772    				ld de,commandstring				003FF7 ED4B C1 5D 00       B   773    				ld bc,(window_columns)
003FFC EDB0                B   774    				ldir
003FFE C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
003FFF C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
004000 0E01                B   781    				ld c,1
004002 ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
004005 0E01                B   784    				ld c,port_hw_flags
004007 ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
00400A 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
00400C C1                  B   788    				pop bc
00400D BF                  B   789    				cp a							00400E C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
00400F                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
00400F 3E48                B     9    					ld a,01001000b				004011 ED39AA              B    10    					out0 (CS0_CTL),a
004014 3E00                B    11    					ld a,000h					004016 ED39A8              B    12    					out0 (CS0_LBR),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004019 3EFF                B    13    					ld a,0ffh	
00401B ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
00401E 3E58                B    16    					ld a,01011000b
004020 ED39AD              B    17    					out0 (CS1_CTL),a			004023 3E00                B    18    					ld a,0
004025 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004028 3EFF                B    23    					ld a,0ffh
00402A ED399F              B    24    					out0 (PC_DDR),a				00402D AF                  B    25    					xor a
00402E ED39A0              B    26    					out0 (PC_ALT1),a
004031 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004034 3EFF                B    29    					ld a,0ffh					004036 ED39A3              B    30    					out0 (PD_DDR),a				004039 AF                  B    31    					xor a	
00403A ED39A4              B    32    					out0 (PD_ALT1),a			00403D 3E0F                B    33    					ld a,00fh				
00403F ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004042 ED3892              B    38    					in0 a,(TMR_ISS)
004045 E6FC                B    39    					and 11111100b
004047 F601                B    40    					or  00000001b
004049 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
00404C AF                  B    46    					xor a
00404D 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
004051 C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
004052 11000000            B    53    hwsc_get_version	ld de,0
004056 0610                B    54    					ld b,16
004058 78                  B    55    gethwvlp			ld a,b
004059 3D                  B    56    					dec a
00405A ED3908              B    57    					out0 (port_selector),a		00405D DB01                B    58    					in a,(port_hw_flags)		00405F CB27                B    59    					sla a
004061 CB13                B    60    					rl e
004063 CB12                B    61    					rl d
004065 10 F1               B    62    					djnz gethwvlp				                           B    63    									
004067 212D0000            B    64    					ld hl,prose_version
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00406B BF                  B    65    					cp a						00406C C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
00406D                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
00406D CD 79 40 00         B    78    					call set_timeout
004071 CD 8A 40 00         B    79    twaitlp				call test_timeout
004075 28 FA               B    80    					jr z,twaitlp
004077 AF                  B    81    					xor a						004078 C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
004079 7B                  B    86    set_timeout			ld a,e						00407A ED3981              B    87    					out0 (TMR0_RR_L),a			00407D 7A                  B    88    					ld a,d
00407E ED3982              B    89    					out0 (TMR0_RR_H),a			004081 3E03                B    90    					ld a,00000011b				004083 ED3980              B    91    					out0 (TMR0_CTL),a			004086 ED3880              B    92    					in0 a,(TMR0_CTL)			004089 C9                  B    93    					ret
                           B    94    			
00408A ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			00408D CB7F                B    96    					bit 7,a
00408F C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
004090                     B   101    hwsc_read_rtc
004090 D5                  B   102    					push de
004091 C5                  B   103    					push bc
004092 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
004094 0608                B   105    					ld b,8
004096 21 74 5F 00         B   106    					ld hl,time_data
00409A ED92                B   107    					inimr						00409C 0EE0                B   108    					ld c,RTC_SEC
00409E 0600                B   109    					ld b,0
0040A0 1E08                B   110    					ld e,8
0040A2 21 74 5F 00         B   111    					ld hl,time_data
0040A6 ED78                B   112    timevloop			in a,(bc)					0040A8 BE                  B   113    					cp (hl)						0040A9 20 E7               B   114    					jr nz,hwsc_rtc_rlp			0040AB 23                  B   115    					inc hl
0040AC 0C                  B   116    					inc c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040AD 1D                  B   117    					dec e
0040AE 20 F6               B   118    					jr nz,timevloop
0040B0 21 74 5F 00         B   119    					ld hl,time_data
0040B4 C1                  B   120    					pop bc
0040B5 D1                  B   121    					pop de
0040B6 BF                  B   122    					cp a						0040B7 C9                  B   123    					ret
                           B   124    
                           B   125    
0040B8                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
0040B8 E5                  B   130    					push hl
0040B9 C5                  B   131    					push bc
0040BA 3E21                B   132    					ld a,00100001b				0040BC ED39ED              B   133    					out0 (RTC_CTRL),a
0040BF 0EE0                B   134    					ld c,RTC_SEC
0040C1 0608                B   135    					ld b,8
0040C3 ED93                B   136    					otimr
0040C5 3E20                B   137    					ld a,00100000b				0040C7 ED39ED              B   138    					out0 (RTC_CTRL),a
0040CA C1                  B   139    					pop bc
0040CB E1                  B   140    					pop hl
0040CC BF                  B   141    					cp a						0040CD C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
0040CE                     B   151    init_keyboard
                           B   152    
0040CE 11004000            B   153    			ld de,16384							0040D2 CD 6D 40 00         B   154    			call hwsc_time_delay
0040D6 F3                  B   155    			di
0040D7 CD 8C 41 00         B   156    			call purge_keyboard
0040DB CD E5 40 00         B   157    			call rs_keyboard
0040DF FB                  B   158    			ei
0040E0 D0                  B   159    			ret nc
0040E1 3E8B                B   160    			ld a,08bh							0040E3 B7                  B   161    			or a
0040E4 C9                  B   162    			ret
                           B   163    			
                           B   164    			
0040E5                     B   165    rs_keyboard
                           B   166    
0040E5 3EFF                B   167    			ld a,0ffh
0040E7 CD 04 41 00         B   168    			call write_to_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040EB 30 04               B   169    			jr nc,kb_connected
0040ED 3E8A                B   170    			ld a,08ah							0040EF B7                  B   171    			or a
0040F0 C9                  B   172    			ret
                           B   173    
0040F1                     B   174    kb_connected
                           B   175    			
0040F1 0605                B   176    			ld b,5
0040F3 C5                  B   177    kb_initlp	push bc
0040F4 CD 70 41 00         B   178    			call wait_kb_byte					0040F8 C1                  B   179    			pop bc
0040F9 D8                  B   180    			ret c
0040FA FEAA                B   181    			cp 0aah
0040FC 28 04               B   182    			jr z,kb_postok
0040FE 10 F3               B   183    			djnz kb_initlp						004100 37                  B   184    			scf									004101 C9                  B   185    			ret
                           B   186    			
                           B   187    			
004102 AF                  B   188    kb_postok	xor a
004103 C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
004104                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
004104 4F                  B   198    			ld c,a								004105 3E01                B   199    			ld a,01b							004107 ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
00410A 110A0000            B   202    			ld de,10
00410E CD 6D 40 00         B   203    			call hwsc_time_delay				                           B   204    
004112 3E03                B   205    			ld a,11b
004114 ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
004117 3E02                B   208    			ld a,10b
004119 ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
00411C CD EC 42 00         B   211    			call wait_kb_clk_high
                           B   212    			
004120 1601                B   213    			ld d,1								004122 0608                B   214    			ld b,8								004124 CD BF 42 00         B   215    kdoloop		call wait_kb_clk_low	
004128 D8                  B   216    			ret c
004129 AF                  B   217    			xor a
00412A CBCF                B   218    			set 1,a
00412C CB41                B   219    			bit 0,c
00412E 28 03               B   220    			jr z,kdbzero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004130 CB8F                B   221    			res 1,a
004132 14                  B   222    			inc d
004133 ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				004136 CD EC 42 00         B   224    			call wait_kb_clk_high
00413A D8                  B   225    			ret c
00413B CB19                B   226    			rr c
00413D 10 E5               B   227    			djnz kdoloop
                           B   228    
00413F CD BF 42 00         B   229    			call wait_kb_clk_low
004143 D8                  B   230    			ret c
004144 AF                  B   231    			xor a
004145 CB42                B   232    			bit 0,d
004147 20 02               B   233    			jr nz,kparone
004149 CBCF                B   234    			set 1,a
00414B ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				00414E CD EC 42 00         B   236    			call wait_kb_clk_high
004152 D8                  B   237    			ret c
                           B   238    			
004153 CD BF 42 00         B   239    			call wait_kb_clk_low
004157 D8                  B   240    			ret c
004158 AF                  B   241    			xor a
004159 ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
00415C CD BB 42 00         B   244    			call wait_kb_data_low				004160 D8                  B   245    			ret c
004161 CD BF 42 00         B   246    			call wait_kb_clk_low				004165 D8                  B   247    			ret c
                           B   248    				
004166 CD E8 42 00         B   249    			call wait_kb_data_high				00416A D8                  B   250    			ret c
00416B CD EC 42 00         B   251    			call wait_kb_clk_high				00416F C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
004170                     B   258    wait_kb_byte
                           B   259    
004170 11008000            B   260    			ld de,8000h
004174 CD 79 40 00         B   261    			call set_timeout					                           B   262    
004178 ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
00417B CB67                B   264    			bit 4,a
00417D 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
00417F CD 8A 40 00         B   267    			call test_timeout
004183 28 F3               B   268    			jr z,wait_kloop
004185 37                  B   269    			scf									004186 C9                  B   270    			ret
                           B   271    			
004187 ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00418A B7                  B   273    			or a
00418B C9                  B   274    			ret
                           B   275    
                           B   276    
                           B   277    ;----------------------------------------------
                           B   278    
00418C                     B   279    purge_keyboard
                           B   280    			
00418C ED3807              B   281    			in0 a,(port_ps2_ctrl)
00418F CB67                B   282    			bit 4,a
004191 C8                  B   283    			ret z
004192 ED3802              B   284    			in0 a,(port_keyboard_data)			004195 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
004197                     B   295    init_mouse		
004197 F3                  B   296    			di
004198 CD B0 42 00         B   297    			call purge_mouse
00419C CD A6 41 00         B   298    			call rs_mouse
0041A0 FB                  B   299    			ei
0041A1 D0                  B   300    			ret nc
0041A2 3E8B                B   301    			ld a,08bh							0041A4 B7                  B   302    			or a
0041A5 C9                  B   303    			ret
                           B   304    
                           B   305    
0041A6                     B   306    rs_mouse
0041A6 3EFF                B   307    			ld a,0ffh							0041A8 CD 28 42 00         B   308    			call write_to_mouse		
0041AC 30 04               B   309    			jr nc,mouse_connected
0041AE 3E8A                B   310    			ld a,08ah							0041B0 B7                  B   311    			or a
0041B1 C9                  B   312    			ret
                           B   313    
                           B   314    
0041B2                     B   315    mouse_connected
                           B   316    
0041B2 0605                B   317    			ld b,5
0041B4 C5                  B   318    ms_initlp	push bc
0041B5 CD 94 42 00         B   319    			call wait_mouse_byte				0041B9 C1                  B   320    			pop bc
0041BA D8                  B   321    			ret c
0041BB FEAA                B   322    			cp 0aah
0041BD 28 04               B   323    			jr z,ms_postok
0041BF 10 F3               B   324    			djnz ms_initlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041C1 18 43               B   325    			jr bad_mouse
                           B   326    			
0041C3 CD 94 42 00         B   327    ms_postok	call wait_mouse_byte				0041C7 D8                  B   328    			ret c
0041C8 B7                  B   329    			or a
0041C9 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
0041CB 3E03                B   332    			ld a,3
0041CD 32 6B 61 00         B   333    			ld (mouse_packet_size),a
                           B   334    
0041D1 21 2B 5E 00         B   335    			ld hl,intellimouse_seq
0041D5 0606                B   336    			ld b,6
0041D7 CD 0A 42 00         B   337    			call mouse_sequence
0041DB D8                  B   338    			ret c
                           B   339    			
0041DC 3EF2                B   340    			ld a,0f2h
0041DE CD 19 42 00         B   341    			call write_mouse_wait_ack			0041E2 D8                  B   342    			ret c
0041E3 CD 94 42 00         B   343    			call wait_mouse_byte				0041E7 D8                  B   344    			ret c
0041E8 32 6A 61 00         B   345    			ld (mouse_id),a
0041EC B7                  B   346    			or a								0041ED 28 0A               B   347    			jr z,standard_mouse
0041EF FE03                B   348    			cp 3
0041F1 20 13               B   349    			jr nz,bad_mouse						0041F3 3E04                B   350    			ld a,4
0041F5 32 6B 61 00         B   351    			ld (mouse_packet_size),a
                           B   352    
0041F9                     B   353    standard_mouse
                           B   354    		
0041F9 21 31 5E 00         B   355    			ld hl,mouse_settings_seq
0041FD 0606                B   356    			ld b,6
0041FF CD 0A 42 00         B   357    			call mouse_sequence
004203 D8                  B   358    			ret c
004204 AF                  B   359    			xor a								004205 C9                  B   360    			ret
                           B   361    
                           B   362    
004206 3E89                B   363    bad_mouse	ld a,089h							004208 B7                  B   364    			or a
004209 C9                  B   365    			ret
                           B   366    
                           B   367    
00420A                     B   368    mouse_sequence
                           B   369    
00420A 7E                  B   370    mseqlp		ld a,(hl)
00420B E5                  B   371    			push hl
00420C C5                  B   372    			push bc
00420D CD 19 42 00         B   373    			call write_mouse_wait_ack
004211 C1                  B   374    			pop bc
004212 E1                  B   375    			pop hl
004213 D8                  B   376    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004214 23                  B   377    			inc hl
004215 10 F3               B   378    			djnz mseqlp
004217 AF                  B   379    			xor a
004218 C9                  B   380    			ret
                           B   381    
                           B   382    
004219                     B   383    write_mouse_wait_ack
                           B   384    			
004219 CD 28 42 00         B   385    			call write_to_mouse
00421D D8                  B   386    			ret c
00421E CD 94 42 00         B   387    			call wait_mouse_byte				004222 D8                  B   388    			ret c
004223 FEFA                B   389    			cp 0fah								004225 C8                  B   390    			ret z
004226 37                  B   391    			scf
004227 C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
004228                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
004228 4F                  B   400    			ld c,a								004229 3E04                B   401    			ld a,0100b							00422B ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
00422E 110A0000            B   404    			ld de,10
004232 CD 6D 40 00         B   405    			call hwsc_time_delay				                           B   406    
004236 3E0C                B   407    			ld a,1100b
004238 ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
00423B 3E08                B   410    			ld a,1000b
00423D ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
004240 CD F4 42 00         B   413    			call wait_mouse_clk_high
                           B   414    			
004244 1601                B   415    			ld d,1								004246 0608                B   416    			ld b,8								004248 CD C7 42 00         B   417    mdoloop		call wait_mouse_clk_low	
00424C D8                  B   418    			ret c
00424D AF                  B   419    			xor a
00424E CBDF                B   420    			set 3,a
004250 CB41                B   421    			bit 0,c
004252 28 03               B   422    			jr z,mdbzero
004254 CB9F                B   423    			res 3,a
004256 14                  B   424    			inc d
004257 ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				00425A CD F4 42 00         B   426    			call wait_mouse_clk_high
00425E D8                  B   427    			ret c
00425F CB19                B   428    			rr c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004261 10 E5               B   429    			djnz mdoloop
                           B   430    
004263 CD C7 42 00         B   431    			call wait_mouse_clk_low
004267 D8                  B   432    			ret c
004268 AF                  B   433    			xor a
004269 CB42                B   434    			bit 0,d
00426B 20 02               B   435    			jr nz,parone
00426D CBDF                B   436    			set 3,a
00426F ED3907              B   437    parone		out0 (port_ps2_ctrl),a				004272 CD F4 42 00         B   438    			call wait_mouse_clk_high
004276 D8                  B   439    			ret c
                           B   440    			
004277 CD C7 42 00         B   441    			call wait_mouse_clk_low
00427B D8                  B   442    			ret c
00427C AF                  B   443    			xor a
00427D ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
004280 CD C3 42 00         B   446    			call wait_mouse_data_low			004284 D8                  B   447    			ret c
004285 CD C7 42 00         B   448    			call wait_mouse_clk_low				004289 D8                  B   449    			ret c
                           B   450    				
00428A CD F0 42 00         B   451    			call wait_mouse_data_high			00428E D8                  B   452    			ret c
00428F CD F4 42 00         B   453    			call wait_mouse_clk_high			004293 C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
004294                     B   459    wait_mouse_byte
                           B   460    
004294 11008000            B   461    			ld de,8000h
004298 CD 79 40 00         B   462    			call set_timeout					                           B   463    
00429C ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
00429F CB6F                B   465    			bit 5,a
0042A1 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
0042A3 CD 8A 40 00         B   468    			call test_timeout
0042A7 28 F3               B   469    			jr z,wait_mloop
0042A9 37                  B   470    			scf									0042AA C9                  B   471    			ret
                           B   472    			
0042AB ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				0042AE B7                  B   474    			or a
0042AF C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
0042B0                     B   479    purge_mouse
                           B   480    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042B0 ED3807              B   481    			in0 a,(port_ps2_ctrl)
0042B3 CB6F                B   482    			bit 5,a
0042B5 C8                  B   483    			ret z
0042B6 ED3806              B   484    			in0 a,(port_mouse_data)			; r
0042B9 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
0042BB                     B   491    wait_kb_data_low
                           B   492    
0042BB 3E02                B   493    			ld a,2
0042BD 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
0042BF                     B   496    wait_kb_clk_low
                           B   497    
0042BF 3E01                B   498    			ld a,1
0042C1 18 06               B   499    			jr test_lo_ps2			
                           B   500    
0042C3                     B   501    wait_mouse_data_low
                           B   502    
0042C3 3E08                B   503    			ld a,8
0042C5 18 02               B   504    			jr test_lo_ps2
                           B   505    
0042C7                     B   506    wait_mouse_clk_low
                           B   507    
0042C7 3E04                B   508    			ld a,4
                           B   509    
0042C9 C5                  B   510    test_lo_ps2	push bc
0042CA D5                  B   511    			push de
0042CB 4F                  B   512    			ld c,a
0042CC 11004000            B   513    			ld de,04000h					; a
0042D0 CD 79 40 00         B   514    			call set_timeout
                           B   515    
0042D4 CD 8A 40 00         B   516    nkb_lw		call test_timeout				; t
0042D8 28 04               B   517    			jr z,nkb_lnto
0042DA D1                  B   518    			pop de
0042DB C1                  B   519    			pop bc
0042DC 37                  B   520    			scf								; c
0042DD C9                  B   521    			ret
0042DE ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
0042E1 A1                  B   523    			and c
0042E2 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
0042E4 D1                  B   526    			pop de
0042E5 C1                  B   527    			pop bc
0042E6 AF                  B   528    			xor a
0042E7 C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   533    
0042E8                     B   534    wait_kb_data_high
                           B   535    
0042E8 3E02                B   536    			ld a,2
0042EA 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
0042EC                     B   539    wait_kb_clk_high
                           B   540    
0042EC 3E01                B   541    			ld a,1
0042EE 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
0042F0                     B   545    wait_mouse_data_high
                           B   546    			
0042F0 3E08                B   547    			ld a,8
0042F2 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
0042F4                     B   550    wait_mouse_clk_high
                           B   551    
0042F4 3E04                B   552    			ld a,4
                           B   553    
0042F6 C5                  B   554    test_hi_ps2	push bc
0042F7 D5                  B   555    			push de
0042F8 4F                  B   556    			ld c,a
0042F9 11004000            B   557    			ld de,04000h					; a
0042FD CD 79 40 00         B   558    			call set_timeout
                           B   559    
004301 CD 8A 40 00         B   560    nkb_hw		call test_timeout				; t
004305 28 04               B   561    			jr z,nkb_hnto
004307 D1                  B   562    			pop de
004308 C1                  B   563    			pop bc
004309 37                  B   564    			scf								; c
00430A C9                  B   565    			ret
00430B ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
00430E A1                  B   567    			and c
00430F 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
004311 D1                  B   570    			pop de
004312 C1                  B   571    			pop bc
004313 AF                  B   572    			xor a							; c
004314 C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           A  3093    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004315                     B     5    os_wait_key_press
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004315 D5                  B    13    				push de
004316 51                  B    14    				ld d,c
004317 E5                  B    15    				push hl
004318 CD 6E 43 00         B    16    wait_kbuf		call get_kb_buffer_indexes		00431C BE                  B    17    				cp (hl)							00431D 28 F9               B    18    				jr z,wait_kbuf		
                           B    19    			
00431F 01000000            B    20    new_key			ld bc,0							004323 4F                  B    21    				ld c,a
004324 21 42 61 00         B    22    				ld hl,scancode_buffer	
004328 09                  B    23    				add hl,bc
                           B    24    												004329 4E                  B    25    				ld c,(hl)						00432A 11100000            B    26    				ld de,16
00432E 19                  B    27    				add hl,de						00432F 7E                  B    28    				ld a,(hl)						                           B    29    				
004330 21 2F 5D 00         B    30    				ld hl,alted_keymap				004334 CB5F                B    31    				bit 3,a
004336 20 0C               B    32    				jr nz,got_kmap	
004338 21 6B 5C 00         B    33    				ld hl,unshifted_keymap			00433C E611                B    34    				and 011h			
00433E 28 04               B    35    				jr z,got_kmap
004340 21 CD 5C 00         B    36    				ld hl,shifted_keymap			                           B    37    			
004344 79                  B    38    got_kmap		ld a,c							004345 FE62                B    39    				cp 062h
004347 30 02               B    40    				jr nc,gotkdone
004349 09                  B    41    				add hl,bc						00434A 46                  B    42    				ld b,(hl)						                           B    43    			
00434B 3A 63 61 00         B    44    gotkdone		ld a,(key_buf_rd_idx)			00434F 3C                  B    45    				inc a							004350 E60F                B    46    				and 15
004352 32 63 61 00         B    47    				ld (key_buf_rd_idx),a			004356 79                  B    48    				ld a,c							004357 E1                  B    49    				pop hl
004358 4A                  B    50    				ld c,d
004359 D1                  B    51    				pop de
00435A BF                  B    52    				cp a							00435B C9                  B    53    				ret
                           B    54    			
                           B    55    		
                           B    56    ;----------------------------------------------
                           B    57    			
00435C                     B    58    os_get_key_press
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    59    				
                           B    60    ; Gets a keycode on-the-fly - If one is availab
                           B    61    ; On return, ZF is set if there is a new scanco
                           B    62    ; (ASCII code is modifed by shift key status), 
                           B    63    			
                           B    64    			
00435C D5                  B    65    				push de
00435D 51                  B    66    				ld d,c
00435E E5                  B    67    				push hl
00435F CD 6E 43 00         B    68    				call get_kb_buffer_indexes		004363 BE                  B    69    				cp (hl)							004364 20 B9               B    70    				jr nz,new_key					004366 3E81                B    71    				ld a,81h			
004368 47                  B    72    				ld b,a
004369 B7                  B    73    				or a
00436A E1                  B    74    				pop hl
00436B 4A                  B    75    				ld c,d
00436C D1                  B    76    				pop de
00436D C9                  B    77    				ret
                           B    78    			
                           B    79    ;----------------------------------------------
                           B    80    			
00436E                     B    81    get_kb_buffer_indexes
                           B    82    			
                           B    83    			
00436E 21 62 61 00         B    84    				ld hl,key_buf_wr_idx			004372 3A 63 61 00         B    85    				ld a,(key_buf_rd_idx)			004376 C9                  B    86    				ret
                           B    87    			
                           B    88    		
                           B    89    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004377                     B    21    serial_get_header
                           B    22    
004377 32 08 5E 00         B    23    				ld (serial_timeout),a			00437B 22 F2 5D 00         B    24    				ld (serial_fn_addr),hl
00437F CD 05 3B 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004383 CD 66 44 00         B    27    				call s_getblock					004387 28 0C               B    28    				jr z,s_gbfhok					004389 F5                  B    29    				push af							00438A 3A 29 5E 00         B    30    				ld a,(serial_transfer_started)
00438E B7                  B    31    				or a							00438F C4 CD 44 00         B    32    				call nz,s_badack				004393 F1                  B    33    				pop af
004394 C9                  B    34    				ret
                           B    35    	
004395 21 1D 5E 00         B    36    s_gbfhok		ld hl,serial_header_id			004399 11 94 65 00         B    37    				ld de,sector_buffer+20			00439D 060C                B    38    				ld b,12
00439F CD DF 11 00         B    39    				call os_compare_strings
0043A3 20 0F               B    40    				jr nz,s_nfhdr
0043A5 06E0                B    41    				ld b,256-32						0043A7 21 A0 65 00         B    42    				ld hl,sector_buffer+32
0043AB 7E                  B    43    s_chdr			ld a,(hl)
0043AC 23                  B    44    				inc hl
0043AD B7                  B    45    				or a
0043AE 20 04               B    46    				jr nz,s_nfhdr
0043B0 10 F9               B    47    				djnz s_chdr
0043B2 18 08               B    48    				jr s_fhcsok
                           B    49    				
0043B4 CD CD 44 00         B    50    s_nfhdr			call s_badack					0043B8 3E85                B    51    				ld a,085h						0043BA B7                  B    52    				or a
0043BB C9                  B    53    				ret
                           B    54    		
0043BC 21 90 65 00         B    55    s_fhcsok		ld hl,sector_buffer+16			0043C0 11 19 5E 00         B    56    				ld de,serial_fileheader+16
0043C4 01040000            B    57    				ld bc,4
0043C8 EDB0                B    58    				ldir
                           B    59    				
0043CA 21 80 65 00         B    60    				ld hl,sector_buffer
0043CE 11 09 5E 00         B    61    				ld de,serial_fileheader			0043D2 0610                B    62    				ld b,16							0043D4 7E                  B    63    s_tuclp			ld a,(hl)						0043D5 B7                  B    64    				or a
0043D6 28 0B               B    65    				jr z,s_ffhswz	
0043D8 CD 19 12 00         B    66    				call os_uppercasify
0043DC 12                  B    67    				ld (de),a
0043DD 23                  B    68    				inc hl
0043DE 13                  B    69    				inc de
0043DF 10 F3               B    70    				djnz s_tuclp
0043E1 18 04               B    71    				jr s_tucdone
0043E3 12                  B    72    s_ffhswz		ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0043E4 13                  B    73    				inc de
0043E5 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
0043E7 2A F2 5D 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			0043EB 7E                  B    77    				ld a,(hl)
0043EC FE2A                B    78    				cp '*'
0043EE 28 14               B    79    				jr z,s_rffns					0043F0 11 09 5E 00         B    80    				ld de,serial_fileheader
0043F4 0610                B    81    				ld b,16
0043F6 CD DF 11 00         B    82    				call os_compare_strings
0043FA 28 08               B    83    				jr z,s_rffns
0043FC CD CD 44 00         B    84    s_rfnbad		call s_badack
004400 3E87                B    85    				ld a,087h						004402 B7                  B    86    				or a
004403 C9                  B    87    				ret
                           B    88    				
004404 DD21 09 5E 00       B    89    s_rffns			ld ix,serial_fileheader			004409 AF                  B    90    				xor a
00440A C9                  B    91    				ret
                           B    92    
00440B F5                  B    93    s_fail			push af				
00440C CD CD 44 00         B    94    				call s_badack		 
004410 F1                  B    95    				pop af
004411 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004412                     B   114    serial_receive_file
                           B   115    
004412 3E0A                B   116    				ld a,10							004414 32 08 5E 00         B   117    				ld (serial_timeout),a
004418 E5                  B   118    				push hl
004419 CD BC 44 00         B   119    				call s_goodack					00441D DDE1                B   120    				pop ix							00441F ED5B 19 5E 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004424 CD 66 44 00         B   123    s_gbloop		call s_getblock
004428 20 E1               B   124    				jr nz,s_fail
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00442A 0E00                B   125    				ld c,0							00442C FD21 80 65 00       B   126    				ld iy,sector_buffer
004431 FD7E00              B   127    s_rfloop		ld a,(iy)
004434 DD7700              B   128    				ld (ix),a						004437 1B                  B   129    				dec de							004438 21000000            B   130    				ld hl,0
00443C AF                  B   131    				xor a
00443D ED5A                B   132    				adc hl,de						00443F 28 1A               B   133    				jr z,s_rfabr					004441 C5                  B   134    				push bc
004442 01010000            B   135    				ld bc,1
004446 DD09                B   136    				add ix,bc						004448 C1                  B   137    				pop bc
004449 30 05               B   138    				jr nc,s_nbt
00444B 3E84                B   139    				ld a,84h						00444D B7                  B   140    				or a
00444E 18 BB               B   141    				jr s_fail
004450 FD23                B   142    s_nbt			inc iy
004452 0D                  B   143    				dec c
004453 20 DC               B   144    				jr nz,s_rfloop
004455 CD BC 44 00         B   145    				call s_goodack					004459 18 C9               B   146    				jr s_gbloop
                           B   147    			
00445B CD BC 44 00         B   148    s_rfabr			call s_goodack					00445F DD21 09 5E 00       B   149    				ld ix,serial_fileheader			004464 AF                  B   150    				xor a							004465 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004466                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004466 AF                  B   159    				xor a
004467 32 29 5E 00         B   160    				ld (serial_transfer_started),a	00446B E5                  B   161    				push hl							00446C D5                  B   162    				push de
00446D C5                  B   163    				push bc
00446E 21 80 65 00         B   164    				ld hl,sector_buffer				004472 0600                B   165    				ld b,0
004474 D9                  B   166    				exx
004475 21FFFF00            B   167    				ld hl,0ffffh					004479 D9                  B   168    				exx
00447A CD AF 3A 00         B   169    s_lgb			call receive_serial_byte
00447E 20 38               B   170    				jr nz,s_gberr					004480 F5                  B   171    				push af
004481 3E01                B   172    				ld a,1
004483 32 29 5E 00         B   173    				ld (serial_transfer_started),a
004487 F1                  B   174    				pop af
004488 77                  B   175    				ld (hl),a
004489 D9                  B   176    				exx
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00448A AC                  B   177    				xor h							00448B 67                  B   178    				ld h,a			
00448C 0608                B   179    				ld b,8
00448E 4029                B   180    rxcrcbyte		add.sis hl,hl					004490 30 08               B   181    				jr nc,rxcrcnext
004492 7C                  B   182    				ld a,h
004493 EE10                B   183    				xor 10h
004495 67                  B   184    				ld h,a
004496 7D                  B   185    				ld a,l
004497 EE21                B   186    				xor 21h
004499 6F                  B   187    				ld l,a
00449A 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
00449C D9                  B   189    				exx
00449D 23                  B   190    				inc hl
00449E 10 DA               B   191    				djnz s_lgb
0044A0 D9                  B   192    				exx								                           B   193    			
0044A1 CD AF 3A 00         B   194    				call receive_serial_byte		0044A5 20 11               B   195    				jr nz,s_gberr
0044A7 4F                  B   196    				ld c,a
0044A8 CD AF 3A 00         B   197    				call receive_serial_byte
0044AC 20 0A               B   198    				jr nz,s_gberr		
0044AE 47                  B   199    				ld b,a
                           B   200    				
0044AF AF                  B   201    				xor a							0044B0 52ED42              B   202    				sbc.s hl,bc						0044B3 28 03               B   203    				jr z,s_gberr
                           B   204    			
0044B5 3E86                B   205    				ld a,86h						0044B7 B7                  B   206    				or a							0044B8 C1                  B   207    s_gberr			pop bc
0044B9 D1                  B   208    				pop de
0044BA E1                  B   209    				pop hl
0044BB C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0044BC C5                  B   214    s_goodack		push bc
0044BD 014F4B00            B   215    				ld bc,04b4fh					0044C1 79                  B   216    ackbytes		ld a,c
0044C2 CD EA 3A 00         B   217    				call send_serial_byte
0044C6 78                  B   218    				ld a,b
0044C7 CD EA 3A 00         B   219    				call send_serial_byte
0044CB C1                  B   220    				pop bc
0044CC C9                  B   221    				ret
                           B   222    
0044CD C5                  B   223    s_badack		push bc
0044CE 01585800            B   224    				ld bc,05858h					0044D2 18 ED               B   225    				jr ackbytes
                           B   226    
0044D4 C5                  B   227    s_holdack		push bc
0044D5 01575700            B   228    				ld bc,05757h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044D9 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
0044DB                     B   249    serial_send_file
                           B   250    			
0044DB 3E01                B   251    				ld a,1							0044DD 32 08 5E 00         B   252    				ld (serial_timeout),a
                           B   253    			
0044E1 DD22 EC 5D 00       B   254    				ld (serial_ez80_address),ix
0044E6 ED53 19 5E 00       B   255    				ld (serial_fileheader+10h),de	0044EB E5                  B   256    				push hl
0044EC 21000000            B   257    				ld hl,0
0044F0 AF                  B   258    				xor a
0044F1 ED5A                B   259    				adc hl,de
0044F3 20 05               B   260    				jr nz,s_flok
0044F5 E1                  B   261    				pop hl
0044F6 3E81                B   262    				ld a,081h						0044F8 B7                  B   263    				or a							0044F9 C9                  B   264    				ret
                           B   265    			
0044FA 21 09 5E 00         B   266    s_flok			ld hl,serial_fileheader			0044FE 01100000            B   267    				ld bc,16
004502 AF                  B   268    				xor a
004503 CD 4B 15 00         B   269    				call os_bchl_memfill
004507 E1                  B   270    				pop hl							004508 11 09 5E 00         B   271    				ld de,serial_fileheader
00450C 0610                B   272    				ld b,16
00450E CD FE 11 00         B   273    				call os_copy_ascii_run
                           B   274    				
004512 21 1D 5E 00         B   275    				ld hl,serial_header_id			004516 11 1D 5E 00         B   276    				ld de,serial_fileheader+014h
00451A 010C0000            B   277    				ld bc,12		
00451E EDB0                B   278    				ldir
                           B   279    			
004520 DD21 09 5E 00       B   280    				ld ix,serial_fileheader			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004525 11200000            B   281    				ld de,32
004529 CD 5F 45 00         B   282    				call s_makeblock			
00452D C0                  B   283    				ret nz
00452E CD 97 45 00         B   284    				call s_sendblock
004532 C0                  B   285    				ret nz
004533 CD C4 45 00         B   286    				call s_waitack					004537 C0                  B   287    				ret nz							                           B   288    				
004538 DD2A EC 5D 00       B   289    				ld ix,(serial_ez80_address)
00453D ED5B 19 5E 00       B   290    				ld de,(serial_fileheader+16)	004542 CD 5F 45 00         B   291    s_sbloop		call s_makeblock				004546 38 16               B   292    				jr c,s_rerr
004548 CD 97 45 00         B   293    				call s_sendblock				00454C 38 10               B   294    				jr c,s_rerr	
00454E CD C4 45 00         B   295    				call s_waitack					004552 38 0A               B   296    				jr c,s_rerr
004554 21000000            B   297    				ld hl,0
004558 AF                  B   298    				xor a
004559 ED5A                B   299    				adc hl,de
00455B 20 E5               B   300    				jr nz,s_sbloop					00455D AF                  B   301    				xor a							00455E C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
00455F                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
00455F 21 80 65 00         B   312    				ld hl,sector_buffer				004563 01000100            B   313    				ld bc,256						004567 AF                  B   314    				xor a							004568 CD 4B 15 00         B   315    				call os_bchl_memfill			                           B   316    				
00456C 0600                B   317    				ld b,0							00456E FD21 80 65 00       B   318    				ld iy,sector_buffer	
004573 DD7E00              B   319    s_sloop			ld a,(ix)
004576 FD7700              B   320    				ld (iy),a
004579 1B                  B   321    				dec de							00457A 21000000            B   322    				ld hl,0
00457E AF                  B   323    				xor a
00457F ED5A                B   324    				adc hl,de
004581 28 12               B   325    				jr z,s_mbend	
004583 FD23                B   326    				inc iy							004585 C5                  B   327    				push bc
004586 01010000            B   328    				ld bc,1
00458A DD09                B   329    				add ix,bc						00458C C1                  B   330    				pop bc							00458D 20 04               B   331    				jr nz,s_sbok
00458F 3E84                B   332    				ld a,84h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004591 B7                  B   333    				or a
004592 C9                  B   334    				ret
004593 10 DE               B   335    s_sbok			djnz s_sloop
004595 AF                  B   336    s_mbend			xor a
004596 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004597                     B   341    s_sendblock
                           B   342    
004597 E5                  B   343    				push hl
004598 D5                  B   344    				push de							004599 C5                  B   345    				push bc				
00459A 21 80 65 00         B   346    				ld hl,sector_buffer			
00459E 1E00                B   347    				ld e,0
0045A0 7E                  B   348    s_sblklp		ld a,(hl)
0045A1 CD EA 3A 00         B   349    				call send_serial_byte
0045A5 23                  B   350    				inc hl
0045A6 1D                  B   351    				dec e
0045A7 20 F7               B   352    				jr nz,s_sblklp
0045A9 11 80 65 00         B   353    				ld de,sector_buffer
0045AD 01000000            B   354    				ld bc,0
0045B1 CD 22 15 00         B   355    				call crc_checksum
0045B5 7D                  B   356    				ld a,l
0045B6 CD EA 3A 00         B   357    				call send_serial_byte
0045BA 7C                  B   358    				ld a,h
0045BB CD EA 3A 00         B   359    				call send_serial_byte
0045BF AF                  B   360    				xor a
0045C0 C1                  B   361    s_popall		pop bc
0045C1 D1                  B   362    				pop de
0045C2 E1                  B   363    				pop hl
0045C3 C9                  B   364    				ret
                           B   365    	
                           B   366    
0045C4                     B   367    s_waitack
0045C4 E5                  B   368    				push hl
0045C5 D5                  B   369    				push de
0045C6 C5                  B   370    				push bc
0045C7 CD AF 3A 00         B   371    				call receive_serial_byte		0045CB 20 F3               B   372    				jr nz,s_popall
0045CD 47                  B   373    				ld b,a
0045CE CD AF 3A 00         B   374    				call receive_serial_byte
0045D2 20 EC               B   375    				jr nz,s_popall
0045D4 4F                  B   376    				ld c,a
0045D5 264F                B   377    				ld h,'O'
0045D7 2E4B                B   378    				ld l,'K'
0045D9 AF                  B   379    				xor a
0045DA 52ED42              B   380    				sbc.s hl,bc						0045DD 28 E1               B   381    				jr z,s_popall					                           B   382    			
0045DF 3E85                B   383    				ld a,085h						0045E1 B7                  B   384    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045E2 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
0045E4                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
0045E4 3A 3A 5E 00         B    57    				ld a,(device_count)				0045E8 47                  B    58    				ld b,a							0045E9 DD21 EA 5E 00       B    59    				ld ix,host_device_hardware_info
0045EE 3A 39 5E 00         B    60    fdevinfo		ld a,(current_driver)
0045F2 DDBE00              B    61    				cp (ix)
0045F5 28 09               B    62    				jr z,got_dev_info
0045F7 ED3220              B    63    				lea ix,ix+32
0045FA 10 F2               B    64    				djnz fdevinfo
0045FC AF                  B    65    				xor a
0045FD 3ED0                B    66    				ld a,0d0h						0045FF C9                  B    67    				ret	
                           B    68    	
004600 CD 93 50 00         B    69    got_dev_info	call fs_clear_sector_buffer		004604 11000000            B    70    				ld de,0							004608 CD F8 46 00         B    71    form_ws			call set_lba_and_write_sector
00460C D8                  B    72    				ret c
00460D 13                  B    73    				inc de
00460E 7A                  B    74    				ld a,d
00460F FE03                B    75    				cp 3
004611 20 F5               B    76    				jr nz,form_ws
                           B    77    	
004613 21 41 53 00         B    78    				ld hl,bootsector_stub			004617 11 80 65 00         B    79    				ld de,sector_buffer				00461B 013F0000            B    80    				ld bc,03fh
00461F EDB0                B    81    				ldir
                           B    82    	
004621 DD7E04              B    83    				ld a,(ix+4)						004624 B7                  B    84    				or a
004625 20 0C               B    85    				jr nz,above_2gb
004627 2100FF3F            B    86    				ld hl,3fff00h					00462B DD1701              B    87    				ld de,(ix+1)					00462E AF                  B    88    				xor a			
00462F ED52                B    89    				sbc hl,de						004631 30 08               B    90    				jr nc,lessthan2gb				004633 3E40                B    91    above_2gb		ld a,40h						004635 1100FF3F            B    92    				ld de,3fff00h					004639 18 11               B    93    				jr spcvalok
                           B    94    
00463B DD4E03              B    95    lessthan2gb		ld c,(ix+3)						00463E 0C                  B    96    				inc c							00463F 3E01                B    97    spc_loop		ld a,1							004641 B9                  B    98    spc_comp		cp c							004642 28 08               B    99    				jr z,spcvalok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004644 07                  B   100    				rlca
004645 FE80                B   101    				cp 080h							004647 20 F8               B   102    				jr nz,spc_comp
004649 0C                  B   103    				inc c			
00464A 18 F3               B   104    				jr spc_loop						                           B   105    							
00464C DD21 80 65 00       B   106    spcvalok		ld ix,sector_buffer
004651 DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
004654 CD 68 15 00         B   109    				call os_get_xde_msb				004658 4F                  B   110    				ld c,a							004659 B7                  B   111    				or a							00465A 20 08               B   112    				jr nz,ts_dword					00465C DD7313              B   113    				ld (ix+13h),e					00465F DD7214              B   114    				ld (ix+14h),d
004662 18 07               B   115    				jr ts_done
004664 DD1F20              B   116    ts_dword		ld (ix+20h),de					004667 DD362300            B   117    				ld (ix+23h),0
                           B   118    
00466B EB                  B   119    ts_done			ex de,hl						00466C 11000000            B   120    				ld de,0						
004670 DD560D              B   121    				ld d,(ix+0dh)					004673 01000000            B   122    				ld bc,0							004677 AF                  B   123    div_tscls		xor a							004678 ED52                B   124    				sbc hl,de
00467A 28 05               B   125    				jr z,gotfats
00467C 38 03               B   126    				jr c,gotfats	
00467E 03                  B   127    				inc bc
00467F 18 F6               B   128    				jr div_tscls
004681 03                  B   129    gotfats			inc bc
004682 DD7116              B   130    				ld (ix+16h),c					004685 DD7017              B   131    				ld (ix+17h),b
004688 ED43 91 53 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
00468D 010055AA            B   134    				ld bc,0aa5500h
004691 ED43 7D 67 00       B   135    				ld (sector_buffer+1fdh),bc		004696 11000000            B   136    				ld de,0
00469A CD F8 46 00         B   137    				call set_lba_and_write_sector	00469E D8                  B   138    				ret c
                           B   139    				
00469F 21000000            B   140    				ld hl,0
0046A3 DD6E0E              B   141    				ld l,(ix+0eh)					0046A6 DD660F              B   142    				ld h,(ix+0fh)
0046A9 19                  B   143    				add hl,de
0046AA EB                  B   144    				ex de,hl						                           B   145    				
0046AB CD 93 50 00         B   146    				call fs_clear_sector_buffer		0046AF DD3600FF            B   147    				ld (ix+0),0ffh
0046B3 DD3601F8            B   148    				ld (ix+1),0f8h
0046B7 DD3602FF            B   149    				ld (ix+2),0ffh
0046BB DD3603FF            B   150    				ld (ix+3),0ffh
0046BF CD F8 46 00         B   151    				call set_lba_and_write_sector	Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0046C3 D8                  B   152    				ret c
                           B   153    
0046C4 2A 91 53 00         B   154    				ld hl,(fs_sectors_per_fat)	
0046C8 19                  B   155    				add hl,de
0046C9 EB                  B   156    				ex de,hl
0046CA CD F8 46 00         B   157    				call set_lba_and_write_sector 	0046CE D8                  B   158    				ret c	
                           B   159    				
0046CF D5                  B   160    				push de							0046D0 CD 93 50 00         B   161    				call fs_clear_sector_buffer
0046D4 21 97 53 00         B   162    				ld hl,fs_sought_filename
0046D8 11 80 65 00         B   163    				ld de,sector_buffer
0046DC 010B0000            B   164    				ld bc,11
0046E0 EDB0                B   165    				ldir							0046E2 D1                  B   166    				pop de							0046E3 DD360B08            B   167    				ld (ix+0bh),8					0046E7 DD361821            B   168    				ld (ix+018h),021h				0046EB 2A 91 53 00         B   169    				ld hl,(fs_sectors_per_fat)		0046EF 19                  B   170    				add hl,de
0046F0 EB                  B   171    				ex de,hl
0046F1 CD F8 46 00         B   172    				call set_lba_and_write_sector	0046F5 D8                  B   173    				ret c	
                           B   174    			
0046F6 AF                  B   175    				xor a							0046F7 C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
0046F8                     B   180    set_lba_and_write_sector
                           B   181    
0046F8 DDE5                B   182    				push ix
0046FA DD21 0F 60 00       B   183    				ld ix,sector_lba0				0046FF DD1F00              B   184    				ld (ix),de						004702 DD360300            B   185    				ld (ix+3),0
004706 DDE1                B   186    				pop ix
004708 CD 25 53 00         B   187    				call fs_write_sector
00470C C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
00470D                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
00470D 32 6D 5F 00         B   202    				ld (partition_temp),a
                           B   203    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004711 21000000            B   204    				ld hl,0							004715 22 0F 60 00         B   205    				ld (sector_lba0),hl
004719 7D                  B   206    				ld a,l
00471A 32 12 60 00         B   207    				ld (sector_lba3),a
00471E CD 0D 53 00         B   208    				call fs_read_sector
004722 D8                  B   209    				ret c
                           B   210    			
004723 CD 5E 47 00         B   211    				call fs_check_fat_sig			004727 20 42               B   212    				jr nz,formbad
                           B   213    			
004729 CD 4F 47 00         B   214    				call check_fat16_id				00472D 28 1C               B   215    				jr z,at_pbs						                           B   216    				
00472F 3A 42 67 00         B   217    				ld a,(sector_buffer+01c2h)		004733 E604                B   218    				and 4							004735 28 34               B   219    				jr z,formbad	
004737 11000000            B   220    				ld de,0
00473B 3A 6D 5F 00         B   221    				ld a,(partition_temp)
00473F 5F                  B   222    				ld e,a
004740 1610                B   223    				ld d,16
004742 ED5C                B   224    				mlt de
004744 21 3E 67 00         B   225    				ld hl,sector_buffer+01beh
004748 19                  B   226    				add hl,de						004749 AF                  B   227    				xor a
00474A C9                  B   228    				ret
                           B   229    					
00474B AF                  B   230    at_pbs			xor a
00474C 3ED3                B   231    				ld a,0d3h						00474E C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
00474F                     B   236    check_fat16_id
                           B   237    		
00474F 21 B6 65 00         B   238    				ld hl,sector_buffer+036h		004753 11 28 58 00         B   239    				ld de,fat16_txt			
004757 0605                B   240    				ld b,5
004759 CD DF 11 00         B   241    				call os_compare_strings
00475D C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
00475E                     B   247    fs_check_fat_sig
                           B   248    
00475E 2A 7E 67 00         B   249    				ld hl,(sector_buffer+01feh)		004762 1155AA00            B   250    				ld de,0aa55h
004766 AF                  B   251    				xor a
004767 52ED52              B   252    				sbc.s hl,de						00476A C9                  B   253    				ret
                           B   254    			
                           B   255    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   256    			
00476B AF                  B   257    formbad			xor a
00476C 3ECE                B   258    				ld a,0ceh						00476E C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
00476F                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
00476F C5                  B   268    				push bc
004770 D5                  B   269    				push de
004771 E5                  B   270    				push hl
004772 CD 7A 47 00         B   271    				call go_checkf
004776 E1                  B   272    				pop hl
004777 D1                  B   273    				pop de
004778 C1                  B   274    				pop bc
004779 C9                  B   275    				ret
                           B   276    				
00477A CD 74 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
00477E 21 6A 5E 00         B   278    				ld hl,volume_mount_list
004782 19                  B   279    				add hl,de
004783 7E                  B   280    				ld a,(hl)
004784 B7                  B   281    				or a							004785 20 04               B   282    				jr nz,fs_volpre
004787 AF                  B   283    				xor a
004788 3ECF                B   284    				ld a,cfh						00478A C9                  B   285    				ret
                           B   286    			
00478B 11080000            B   287    fs_volpre		ld de,8							00478F 19                  B   288    				add hl,de
004790 11 0F 60 00         B   289    				ld de,sector_lba0
004794 01040000            B   290    				ld bc,4
004798 EDB0                B   291    				ldir
00479A CD 0D 53 00         B   292    				call fs_read_sector
00479E D8                  B   293    				ret c	
                           B   294    				
00479F CD 5E 47 00         B   295    				call fs_check_fat_sig			0047A3 20 C6               B   296    				jr nz,formbad		
                           B   297    			
0047A5 CD 4F 47 00         B   298    				call check_fat16_id				0047A9 20 C0               B   299    				jr nz,formbad
                           B   300    			
0047AB DD21 80 65 00       B   301    				ld ix,sector_buffer
0047B0 DD270B              B   302    				ld hl,(ix+0bh)					0047B3 11000200            B   303    				ld de,512						0047B7 AF                  B   304    				xor a
0047B8 52ED52              B   305    				sbc.s hl,de						0047BB 20 AE               B   306    				jr nz,formbad
                           B   307    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047BD DD7E0D              B   308    				ld a,(ix+0dh)					0047C0 32 80 53 00         B   309    				ld (fs_cluster_size),a
0047C4 CB27                B   310    				sla a
0047C6 32 82 53 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
0047CA 21000000            B   313    				ld hl,0
0047CE DD6E0E              B   314    				ld l,(ix+0eh)					0047D1 DD660F              B   315    				ld h,(ix+0fh)
0047D4 22 84 53 00         B   316    				ld (fs_fat1_position),hl		0047D8 11000000            B   317    				ld de,0
0047DC DD5E16              B   318    				ld e,(ix+16h)					0047DF DD5617              B   319    				ld d,(ix+17h)
0047E2 ED53 91 53 00       B   320    				ld (fs_sectors_per_fat),de
0047E7 19                  B   321    				add hl,de
0047E8 22 87 53 00         B   322    				ld (fs_fat2_position),hl		0047EC 19                  B   323    				add hl,de
0047ED 22 8A 53 00         B   324    				ld (fs_root_dir_position),hl 	0047F1 EB                  B   325    				ex de,hl
0047F2 DD6E11              B   326    				ld l,(ix+11h)					0047F5 DD6612              B   327    				ld h,(ix+12h)					0047F8 7C                  B   328    				ld a,h
0047F9 B5                  B   329    				or l
0047FA CA 6B 47 00         B   330    				jr z,formbad					0047FE 29                  B   331    				add hl,hl						0047FF 29                  B   332    				add hl,hl						004800 29                  B   333    				add hl,hl
004801 29                  B   334    				add hl,hl
004802 EB                  B   335    				ex de,hl
004803 7A                  B   336    				ld a,d
004804 32 90 53 00         B   337    				ld (fs_root_dir_sectors),a		004808 01000000            B   338    				ld bc,0
00480C 4A                  B   339    				ld c,d
00480D 09                  B   340    				add hl,bc				
00480E 22 8D 53 00         B   341    				ld (fs_data_area),hl			                           B   342    												004812 21000000            B   343    				ld hl,0
004816 01000000            B   344    				ld bc,0
00481A DD4E22              B   345    				ld c,(ix+022h)					00481D DD4623              B   346    				ld b,(ix+023h)
004820 DD6E13              B   347    				ld l,(ix+013h)					004823 DD6614              B   348    				ld h,(ix+014h)
004826 7C                  B   349    				ld a,h							004827 B5                  B   350    				or l
004828 20 06               B   351    				jr nz,got_tsfbs
00482A DD6E20              B   352    				ld l,(ix+020h)					00482D DD6621              B   353    				ld h,(ix+021h)
004830 ED5B 8D 53 00       B   354    got_tsfbs 		ld de,(fs_data_area)
004835 AF                  B   355    				xor a							004836 52ED52              B   356    				sbc.s hl,de						004839 30 02               B   357    				jr nc,nomxcb
00483B 520B                B   358    				dec.s bc
00483D 3A 80 53 00         B   359    nomxcb			ld a,(fs_cluster_size)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004841 CB3F                B   360    fmaxcl			srl a
004843 28 08               B   361    				jr z,got_cmaxc					004845 CB39                B   362    				srl c				
004847 CB1C                B   363    				rr h
004849 CB1D                B   364    				rr l
00484B 18 F4               B   365    				jr fmaxcl
00484D E5                  B   366    got_cmaxc		push hl							00484E 11F0FF00            B   367    				ld de,0fff0h
004852 AF                  B   368    				xor a
004853 52ED52              B   369    				sbc.s hl,de						004856 38 02               B   370    				jr c,cmaxok
004858 E1                  B   371    				pop hl
004859 D5                  B   372    				push de
00485A E1                  B   373    cmaxok			pop hl
00485B 22 94 53 00         B   374    				ld (fs_max_data_clusters),hl
00485F AF                  B   375    				xor a
004860 C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
004861                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
004861 ED5B 94 53 00       B   384    				ld de,(fs_max_data_clusters)
004866 13                  B   385    				inc de
004867 13                  B   386    				inc de							004868 D5                  B   387    				push de
004869 DDE1                B   388    				pop ix
                           B   389    			
00486B AF                  B   390    				xor a
00486C 32 D9 53 00         B   391    cfs_lp2			ld (fs_working_sector),a
004870 2A 84 53 00         B   392    				ld hl,(fs_fat1_position)
004874 CD E3 52 00         B   393    				call set_abs_lba_and_read_secto
004878 D8                  B   394    				ret c
                           B   395    				
004879 21 80 65 00         B   396    				ld hl,sector_buffer
00487D 0600                B   397    				ld b,0
00487F AF                  B   398    cfs_lp1			xor a
004880 B6                  B   399    				or a,(hl)						004881 23                  B   400    				inc hl							004882 20 03               B   401    				jr nz,cfs_ciu					004884 B6                  B   402    				or a,(hl)
004885 28 02               B   403    				jr z,cfs_ddcc
004887 DD2B                B   404    cfs_ciu			dec ix							004889 23                  B   405    cfs_ddcc		inc hl
00488A 1B                  B   406    				dec de
00488B 7A                  B   407    				ld a,d
00488C B3                  B   408    				or e
00488D 28 09               B   409    				jr z,cfs_ok						00488F 10 EE               B   410    				djnz cfs_lp1
004891 3A D9 53 00         B   411    				ld a,(fs_working_sector)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004895 3C                  B   412    				inc a
004896 18 D4               B   413    				jr cfs_lp2
                           B   414    				
004898 3A 80 53 00         B   415    cfs_ok			ld a,(fs_cluster_size)			00489C CB3F                B   416    cltoslp			srl a
00489E 28 04               B   417    				jr z,powdone
0048A0 DD29                B   418    				add ix,ix
0048A2 18 F8               B   419    				jr cltoslp	
0048A4 FD21 2B 60 00       B   420    powdone			ld iy,xrr_temp
0048A9 FD3E00              B   421    				ld (iy),ix						0048AC FDCB023E            B   422    				srl (iy+2)
0048B0 FDCB011E            B   423    				rr (iy+1)
0048B4 FDCB001E            B   424    				rr (iy+0)						0048B8 FD1700              B   425    				ld de,(iy)						0048BB AF                  B   426    				xor a
0048BC C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
0048BD                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
0048BD CD A5 50 00         B   436    				call fs_find_filename			0048C1 D8                  B   437    				ret c							0048C2 FEC2                B   438    				cp 0c2h							0048C4 20 04               B   439    				jr nz,founddir
0048C6 AF                  B   440    				xor a							0048C7 3ED1                B   441    				ld a,0d1h						0048C9 C9                  B   442    				ret
0048CA AF                  B   443    founddir		xor a							0048CB 3E04                B   444    				ld a,04h						0048CD DDCB0B66            B   445    				bit 4,(ix+0bh)
0048D1 C8                  B   446    				ret z
0048D2 11000000            B   447    				ld de,0
0048D6 DD5E1A              B   448    				ld e,(ix+01ah)
0048D9 DD561B              B   449    				ld d,(ix+01bh)					0048DC CD 46 1A 00         B   450    				call fs_update_dir_cluster
0048E0 AF                  B   451    				xor a
0048E1 C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
0048E2                     B   458    fs_goto_root_dir_command
                           B   459    
0048E2 D5                  B   460    				push de
0048E3 11000000            B   461    				ld de,0
0048E7 CD 46 1A 00         B   462    				call fs_update_dir_cluster
0048EB D1                  B   463    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048EC AF                  B   464    				xor a
0048ED C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
0048EE                     B   470    fs_parent_dir_command
                           B   471    
0048EE CD 3A 1A 00         B   472    				call fs_get_dir_cluster
0048F2 7A                  B   473    				ld a,d
0048F3 B3                  B   474    				or e
0048F4 20 03               B   475    				jr nz,pdnaroot
0048F6 3ECA                B   476    				ld a,0cah						0048F8 C9                  B   477    				ret
0048F9 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					0048FD 22 97 53 00         B   479    				ld (fs_sought_filename),hl		004901 21 9A 53 00         B   480    				ld hl,fs_sought_filename+3		004905 3E20                B   481    				ld a,32
004907 01080000            B   482    				ld bc,8
00490B CD 4B 15 00         B   483    				call os_bchl_memfill
00490F 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
004911                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
004911 CD A5 50 00         B   497    				call fs_find_filename			004915 D8                  B   498    				ret c							004916 C0                  B   499    				ret nz							                           B   500    								
004917 3EC6                B   501    				ld a,0c6h						004919 DDCB0B66            B   502    				bit 4,(ix+0bh)
00491D C0                  B   503    				ret nz
                           B   504    
00491E AF                  B   505    				xor a
00491F 32 ED 53 00         B   506    				ld (fs_filepointer_valid),a		004923 21000000            B   507    				ld hl,0
004927 22 BB 53 00         B   508    				ld (fs_file_pointer),hl			00492B 32 BE 53 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
00492F DD171C              B   511    				ld de,(ix+01ch)
004932 D5                  B   512    				push de
004933 E1                  B   513    				pop hl
004934 DD4E1F              B   514    				ld c,(ix+01fh)					004937 ED53 BF 53 00       B   515    				ld (fs_file_length),de			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00493C 79                  B   516    				ld a,c
00493D 32 C2 53 00         B   517    				ld (fs_file_length+3),a			004941 B7                  B   518    				or a							004942 28 04               B   519    				jr z,fs_dflsm					004944 21FFFFFF            B   520    				ld hl,0ffffffh
004948 22 C7 53 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
00494C 21000000            B   523    				ld hl,0
004950 DD6E1A              B   524    				ld l,(ix+01ah)		
004953 DD661B              B   525    				ld h,(ix+01bh)
004956 22 CA 53 00         B   526    				ld (fs_file_start_cluster),hl	00495A AF                  B   527    				xor a
00495B C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
00495C                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
00495C 2A C7 53 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
004960 11000000            B   540    				ld de,0
004964 AF                  B   541    				xor a
004965 ED5A                B   542    				adc hl,de
004967 20 04               B   543    				jr nz,fs_btrok
004969 AF                  B   544    fs_fliz			xor a							00496A 3EC7                B   545    				ld a,0c7h						00496C C9                  B   546    				ret
                           B   547    			 
00496D 2A D0 53 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			004971 22 D3 53 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
004975 2A BF 53 00         B   551    				ld hl,(fs_file_length)			004979 ED4B BB 53 00       B   552    				ld bc,(fs_file_pointer)			00497E 3A BE 53 00         B   553    				ld a,(fs_file_pointer+3)		004982 5F                  B   554    				ld e,a
004983 3A C2 53 00         B   555    				ld a,(fs_file_length+3)
004987 B7                  B   556    				or a							004988 ED42                B   557    				sbc hl,bc
00498A 9B                  B   558    				sbc a,e
00498B 38 09               B   559    				jr c,fs_fpbad
00498D 01000000            B   560    				ld bc,0
004991 AF                  B   561    				xor a
004992 ED4A                B   562    				adc hl,bc
004994 20 04               B   563    				jr nz,fs_fpok
004996 AF                  B   564    fs_fpbad		xor a
004997 3ECC                B   565    				ld a,0cch						004999 C9                  B   566    				ret
                           B   567    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   568    	
00499A 3A ED 53 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		00499E B7                  B   570    				or a							00499F 28 1B               B   571    				jr z,seek_strt
                           B   572    			
0049A1 ED5B D3 53 00       B   573    				ld de,(fs_ez80_working_address)
0049A6 ED4B EE 53 00       B   574    				ld bc,(fs_sector_pos_cnt)		0049AB C5                  B   575    				push bc
0049AC ED4B D6 53 00       B   576    				ld bc,(fs_in_sector_offset)
0049B1 21 80 67 00         B   577    				ld hl,sector_buffer+0200h		0049B5 AF                  B   578    				xor a
0049B6 ED42                B   579    				sbc hl,bc		
0049B8 C3 48 4A 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
0049BC 3E01                B   583    seek_strt		ld a,1
0049BE 32 ED 53 00         B   584    				ld (fs_filepointer_valid),a
0049C2 2A CA 53 00         B   585    				ld hl,(fs_file_start_cluster)	0049C6 22 CD 53 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
0049CA 3A BE 53 00         B   588    				ld a,(fs_file_pointer+3)		0049CE 2A BB 53 00         B   589    				ld hl,(fs_file_pointer)			0049D2 ED4B 81 53 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
0049D7 AF                  B   591    				xor a
0049D8 ED42                B   592    				sbc hl,bc						0049DA DE00                B   593    				sbc a,0
0049DC 38 14               B   594    				jr c,fs_fpgbo
0049DE E5                  B   595    fs_fpgnb		push hl				
0049DF 2A CD 53 00         B   596    				ld hl,(fs_file_working_cluster)
0049E3 CD B5 51 00         B   597    				call get_fat_entry_for_cluster
0049E7 30 02               B   598    				jr nc,fs_ghok					0049E9 E1                  B   599    				pop hl
0049EA C9                  B   600    				ret
0049EB 22 CD 53 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
0049EF E1                  B   602    				pop hl
0049F0 18 E0               B   603    				jr fs_fpblp
                           B   604    			
0049F2 09                  B   605    fs_fpgbo		add hl,bc						0049F3 4C                  B   606    				ld c,h
0049F4 CB39                B   607    				srl c							0049F6 3A 80 53 00         B   608    				ld a,(fs_cluster_size)
0049FA 91                  B   609    				sub c
0049FB 47                  B   610    				ld b,a							0049FC 7C                  B   611    				ld a,h
0049FD E601                B   612    				and 01h
0049FF 67                  B   613    				ld h,a
004A00 22 D6 53 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
004A04 79                  B   616    fs_flns			ld a,c				
004A05 2A CD 53 00         B   617    				ld hl,(fs_file_working_cluster)
004A09 CD 8C 52 00         B   618    				call cluster_and_offset_to_lba
004A0D CD 0D 53 00         B   619    				call fs_read_sector				Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A11 D8                  B   620    				ret c							                           B   621    			
004A12 C5                  B   622    				push bc							004A13 11000000            B   623    				ld de,0
004A17 2A D6 53 00         B   624    				ld hl,(fs_in_sector_offset)		004A1B 5D                  B   625    				ld e,l
004A1C 54                  B   626    				ld d,h
004A1D 21000200            B   627    				ld hl,512
004A21 AF                  B   628    				xor a
004A22 ED52                B   629    				sbc hl,de						004A24 44                  B   630    				ld b,h
004A25 4D                  B   631    				ld c,l							004A26 21 80 65 00         B   632    				ld hl,sector_buffer				004A2A 19                  B   633    				add hl,de						004A2B ED5B D3 53 00       B   634    				ld de,(fs_ez80_working_address)
004A30 EDA0                B   635    fs_cblp			ldi 							                           B   636    
004A32 7A                  B   637    				ld a,d							004A33 B3                  B   638    				or e
004A34 20 0C               B   639    				jr nz,fs_edaok
004A36 ED53 D3 53 00       B   640    				ld (fs_ez80_working_address),de
004A3B 3A D5 53 00         B   641    				ld a,(fs_ez80_working_address+2
004A3F B7                  B   642    				or a
004A40 28 43               B   643    				jr z,fs_mem_error
                           B   644    
004A42 CD 15 52 00         B   645    fs_edaok		call transfer_length_countdown	004A46 28 30               B   646    				jr z,fs_bdld
004A48 78                  B   647    fs_dadok		ld a,b							004A49 B1                  B   648    				or c
004A4A 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
004A4C ED43 D6 53 00       B   651    				ld (fs_in_sector_offset),bc		004A51 ED53 D3 53 00       B   652    				ld (fs_ez80_working_address),de
004A56 C1                  B   653    				pop bc							004A57 0C                  B   654    				inc c							004A58 10 AA               B   655    				djnz fs_flns					                           B   656    			
004A5A 2A CD 53 00         B   657    				ld hl,(fs_file_working_cluster)
004A5E CD B5 51 00         B   658    				call get_fat_entry_for_cluster	004A62 D8                  B   659    				ret c							004A63 22 CD 53 00         B   660    				ld (fs_file_working_cluster),hl
004A67 CD 5E 4F 00         B   661    				call fs_compare_hl_fff8			004A6B D2 96 49 00         B   662    				jp nc,fs_fpbad			
004A6F 0E00                B   663    fs_nfbok		ld c,0							004A71 3A 80 53 00         B   664    				ld a,(fs_cluster_size)	
004A75 47                  B   665    				ld b,a							004A76 18 8C               B   666    				jr fs_flns		
                           B   667    			
004A78 ED43 D6 53 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		004A7D C1                  B   669    				pop bc							004A7E ED43 EE 53 00       B   670    				ld (fs_sector_pos_cnt),bc
004A83 AF                  B   671    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A84 C9                  B   672    				ret
                           B   673    				
004A85 3EC8                B   674    fs_mem_error	ld a,0c8h						004A87 C1                  B   675    fs_flerr		pop bc
004A88 B7                  B   676    				or a							004A89 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
004A8A                     B   681    fs_make_dir_command		
                           B   682    				
004A8A CD A5 50 00         B   683    				call fs_find_filename			004A8E D8                  B   684    				ret c
004A8F FEC2                B   685    				cp 0c2h							004A91 28 04               B   686    				jr z,mdirfnde
004A93 AF                  B   687    				xor a							004A94 3EC9                B   688    				ld a,0c9h						004A96 C9                  B   689    				ret
                           B   690    			
004A97 CD 6B 4F 00         B   691    mdirfnde		call fs_find_free_cluster		004A9B D8                  B   692    				ret c							004A9C C0                  B   693    				ret nz							                           B   694    							
004A9D 2A DD 53 00         B   695    				ld hl,(fs_free_cluster)
004AA1 22 E0 53 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
004AA5 CD BC 4F 00         B   698    				call fs_find_free_dir_entry		004AA9 D8                  B   699    				ret c							004AAA C0                  B   700    				ret nz							                           B   701    			
004AAB DDE5                B   702    				push ix							004AAD D1                  B   703    				pop de
004AAE 21 97 53 00         B   704    				ld hl,fs_sought_filename
004AB2 010B0000            B   705    				ld bc,11
004AB6 EDB0                B   706    				ldir
004AB8 AF                  B   707    				xor a							004AB9 0615                B   708    				ld b,21
004ABB 12                  B   709    clrdiren		ld (de),a
004ABC 13                  B   710    				inc de
004ABD 10 FC               B   711    				djnz clrdiren
004ABF DD360B10            B   712    				ld (ix+0bh),010h				004AC3 DD361821            B   713    				ld (ix+018h),021h				004AC7 ED5B E0 53 00       B   714    				ld de,(fs_new_file_cluster)
004ACC DD731A              B   715    				ld (ix+01ah),e					004ACF DD721B              B   716    				ld (ix+01bh),d
004AD2 CD 25 53 00         B   717    				call fs_write_sector			004AD6 D8                  B   718    				ret c							                           B   719    				
004AD7 CD 93 50 00         B   720    				call fs_clear_sector_buffer
004ADB DD21 80 65 00       B   721    				ld ix,sector_buffer				004AE0 DD36002E            B   722    				ld (ix+00h),02eh				004AE4 DD360120            B   723    				ld (ix+01h),020h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004AE8 DD36202E            B   724    				ld (ix+020h),02eh
004AEC DD36212E            B   725    				ld (ix+021h),02eh
004AF0 DD360B10            B   726    				ld (ix+0bh),010h
004AF4 DD362B10            B   727    				ld (ix+02bh),010h
004AF8 ED5B E0 53 00       B   728    				ld de,(fs_new_file_cluster)		004AFD DD731A              B   729    				ld (ix+01ah),e
004B00 DD721B              B   730    				ld (ix+01bh),d
004B03 CD 3A 1A 00         B   731    				call fs_get_dir_cluster			004B07 DD733A              B   732    				ld (ix+03ah),e
004B0A DD723B              B   733    				ld (ix+03bh),d
004B0D DD361821            B   734    				ld (ix+018h),021h				004B11 DD363821            B   735    				ld (ix+038h),021h				004B15 0609                B   736    				ld b,9
004B17 DD360220            B   737    mndelp			ld (ix+002h),32
004B1B DD362220            B   738    				ld (ix+022h),32
004B1F DD23                B   739    				inc ix
004B21 10 F4               B   740    				djnz mndelp
004B23 2A E0 53 00         B   741    				ld hl,(fs_new_file_cluster)		004B27 AF                  B   742    				xor a
004B28 CD 8C 52 00         B   743    				call cluster_and_offset_to_lba
004B2C CD 25 53 00         B   744    				call fs_write_sector
004B30 D8                  B   745    				ret c							                           B   746    			
004B31 CD 93 50 00         B   747    				call fs_clear_sector_buffer		004B35 AF                  B   748    				xor a
004B36 3C                  B   749    wroslp			inc a
004B37 32 D9 53 00         B   750    				ld (fs_working_sector),a
004B3B 21 80 53 00         B   751    				ld hl,fs_cluster_size
004B3F BE                  B   752    				cp (hl)
004B40 28 13               B   753    				jr z,allsclr
004B42 2A E0 53 00         B   754    				ld hl,(fs_new_file_cluster)
004B46 CD 8C 52 00         B   755    				call cluster_and_offset_to_lba
004B4A CD 25 53 00         B   756    				call fs_write_sector
004B4E D8                  B   757    				ret c
004B4F 3A D9 53 00         B   758    				ld a,(fs_working_sector)
004B53 18 E1               B   759    				jr wroslp
                           B   760    			
004B55 2A E0 53 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004B59 11FFFF00            B   762    				ld de,0ffffh
004B5D CD E1 51 00         B   763    				call update_fat_entry_for_clust
004B61 AF                  B   764    				xor a
004B62 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
004B63                     B   771    fs_delete_dir_command
                           B   772    
004B63 CD A5 50 00         B   773    				call fs_find_filename			004B67 D8                  B   774    				ret c
004B68 28 04               B   775    				jr z,ddc_gotd
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B6A 3ED1                B   776    				ld a,0d1h						004B6C B7                  B   777    				or a
004B6D C9                  B   778    				ret
                           B   779    				
004B6E DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					004B72 20 04               B   781    				jr nz,okdeldir
004B74 AF                  B   782    				xor a
004B75 3EC4                B   783    				ld a,0c4h						004B77 C9                  B   784    				ret
                           B   785    				
004B78 DD22 E3 53 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004B7D CD EB 52 00         B   787    				call backup_sector_lba
004B81 DD6E1A              B   788    				ld l,(ix+01ah)					004B84 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004B87 3A 80 53 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004B8B 47                  B   792    				ld b,a							004B8C 0E00                B   793    				ld c,0			
004B8E 79                  B   794    fs_cne2 		ld a,c
004B8F CD 8C 52 00         B   795    				call cluster_and_offset_to_lba
004B93 CD 0D 53 00         B   796    				call fs_read_sector
004B97 D8                  B   797    				ret c							                           B   798    				
004B98 C5                  B   799    				push bc
004B99 0610                B   800    				ld b,16							004B9B DD21 80 65 00       B   801    				ld ix,sector_buffer
004BA0 11200000            B   802    				ld de,020h
004BA4 DD7E00              B   803    fs_cne1			ld a,(ix)
004BA7 B7                  B   804    				or a
004BA8 28 0D               B   805    				jr z,fs_chnde
004BAA FEE5                B   806    				cp 0e5h
004BAC 28 09               B   807    				jr z,fs_chnde
004BAE FE2E                B   808    				cp '.'
004BB0 28 05               B   809    				jr z,fs_chnde
004BB2 C1                  B   810    				pop bc
004BB3 AF                  B   811    				xor a							004BB4 3EC5                B   812    				ld a,0c5h						004BB6 C9                  B   813    				ret
                           B   814    			
004BB7 DD19                B   815    fs_chnde		add ix,de
004BB9 10 E9               B   816    				djnz fs_cne1
004BBB C1                  B   817    				pop bc
004BBC 0C                  B   818    				inc c
004BBD 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004BBF CD B5 51 00         B   821    				call get_fat_entry_for_cluster	004BC3 D8                  B   822    				ret c
004BC4 CD 5E 4F 00         B   823    				call fs_compare_hl_fff8
004BC8 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004BCA CD 00 53 00         B   826    dir_empty		call restore_sector_lba			004BCE CD 0D 53 00         B   827    				call fs_read_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BD2 D8                  B   828    				ret c							004BD3 2A E3 53 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004BD7 36E5                B   830    fs_delco		ld (hl),0e5h					004BD9 CD 25 53 00         B   831    				call fs_write_sector
004BDD D8                  B   832    				ret c
                           B   833    			
004BDE E5                  B   834    				push hl
004BDF DDE1                B   835    				pop ix
004BE1 DD6E1A              B   836    				ld l,(ix+01ah)
004BE4 DD661B              B   837    				ld h,(ix+01bh)
004BE7 22 DA 53 00         B   838    				ld (fs_working_cluster),hl
004BEB 7C                  B   839    				ld a,h							004BEC B5                  B   840    				or l							004BED C8                  B   841    				ret z							                           B   842    				
004BEE 2A DA 53 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
004BF2 CD B5 51 00         B   844    				call get_fat_entry_for_cluster
004BF6 D8                  B   845    				ret c
004BF7 EB                  B   846    				ex de,hl
                           B   847    				
004BF8 2A DA 53 00         B   848    				ld hl,(fs_working_cluster)
004BFC ED53 DA 53 00       B   849    				ld (fs_working_cluster),de
004C01 11000000            B   850    				ld de,0
004C05 CD E1 51 00         B   851    				call update_fat_entry_for_clust
004C09 D8                  B   852    				ret c
                           B   853    				
004C0A CD 5E 4F 00         B   854    				call fs_compare_hl_fff8			004C0E 38 DE               B   855    				jr c,clrfatlp
004C10 AF                  B   856    				xor a
004C11 C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
004C12                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
004C12 CD A5 50 00         B   867    				call fs_find_filename			004C16 D8                  B   868    				ret c
004C17 FEC2                B   869    				cp 0c2h							004C19 28 04               B   870    				jr z,mfilefnde
004C1B AF                  B   871    				xor a							004C1C 3EC9                B   872    				ld a,0c9h						004C1E C9                  B   873    				ret
                           B   874    			
004C1F CD BC 4F 00         B   875    mfilefnde		call fs_find_free_dir_entry		004C23 D8                  B   876    				ret c							004C24 C0                  B   877    				ret nz							                           B   878    			
004C25 DDE5                B   879    				push ix							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C27 D1                  B   880    				pop de
004C28 21 97 53 00         B   881    				ld hl,fs_sought_filename
004C2C 010B0000            B   882    				ld bc,11
004C30 EDB0                B   883    				ldir
004C32 AF                  B   884    				xor a							004C33 0615                B   885    				ld b,21
004C35 12                  B   886    clrfnen			ld (de),a
004C36 13                  B   887    				inc de
004C37 10 FC               B   888    				djnz clrfnen
004C39 DD361821            B   889    				ld (ix+018h),021h				004C3D CD 25 53 00         B   890    				call fs_write_sector			004C41 D8                  B   891    				ret c							004C42 AF                  B   892    				xor a
004C43 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
004C44                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
004C44 ED5B C7 53 00       B   906    				ld de,(fs_file_transfer_length)
004C49 21000000            B   907    				ld hl,0
004C4D AF                  B   908    				xor a
004C4E ED5A                B   909    				adc hl,de
004C50 CA 69 49 00         B   910    				jp z,fs_fliz					                           B   911    				 
004C54 CD A5 50 00         B   912    				call fs_find_filename			004C58 D8                  B   913    				ret c							004C59 FEC2                B   914    				cp 0c2h				
004C5B C8                  B   915    				ret z							004C5C DDCB0B66            B   916    				bit 4,(ix+0bh)					004C60 28 04               B   917    				jr z,fs_oknad					004C62 AF                  B   918    				xor a							004C63 3EC6                B   919    				ld a,0c6h						004C65 C9                  B   920    				ret
                           B   921    
004C66 CD EB 52 00         B   922    fs_oknad		call backup_sector_lba
004C6A DD22 E3 53 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004C6F DD311C              B   925    				ld iy,(ix+01ch)					004C72 DD7E1F              B   926    				ld a,(ix+01fh)
004C75 FD22 C3 53 00       B   927    				ld (fs_existing_file_length),iy
004C7A 32 C3 53 00         B   928    				ld (fs_existing_file_length),a
004C7E ED5B C7 53 00       B   929    				ld de,(fs_file_transfer_length)
004C83 FD19                B   930    				add iy,de						004C85 CE00                B   931    				adc a,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C87 DD3E1C              B   932    				ld (ix+01ch),iy					004C8A DD771F              B   933    				ld (ix+01fh),a					004C8D 30 04               B   934    				jr nc,nfsizeok
004C8F AF                  B   935    				xor a
004C90 3EC7                B   936    				ld a,0c7h						004C92 C9                  B   937    				ret
                           B   938    
004C93 11000000            B   939    nfsizeok		ld de,0
004C97 DD5E1A              B   940    				ld e,(ix+01ah)					004C9A DD561B              B   941    				ld d,(ix+01bh)					004C9D ED53 CD 53 00       B   942    				ld (fs_file_working_cluster),de
004CA2 CD 25 53 00         B   943    				call fs_write_sector			004CA6 D8                  B   944    				ret c
004CA7 7A                  B   945    				ld a,d
004CA8 B3                  B   946    				or e
004CA9 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004CAB CD 6B 4F 00         B   949    				call fs_find_free_cluster		004CAF D8                  B   950    				ret c
004CB0 C0                  B   951    				ret nz
004CB1 2A DD 53 00         B   952    				ld hl,(fs_free_cluster)
004CB5 22 CD 53 00         B   953    				ld (fs_file_working_cluster),hl
004CB9 11FFFF00            B   954    				ld de,0ffffh
004CBD CD E1 51 00         B   955    				call update_fat_entry_for_clust
004CC1 D8                  B   956    				ret c
                           B   957    			
004CC2 CD 00 53 00         B   958    				call restore_sector_lba			004CC6 CD 0D 53 00         B   959    				call fs_read_sector
004CCA D8                  B   960    				ret c
004CCB DD2A E3 53 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004CD0 ED5B CD 53 00       B   962    				ld de,(fs_file_working_cluster)
004CD5 DD731A              B   963    				ld (ix+01ah),e
004CD8 DD721B              B   964    				ld (ix+01bh),d
004CDB CD 25 53 00         B   965    				call fs_write_sector			004CDF D8                  B   966    				ret c
                           B   967    				
                           B   968    					
004CE0 2A CD 53 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004CE4 CD B5 51 00         B   970    				call get_fat_entry_for_cluster
004CE8 D8                  B   971    				ret c
004CE9 CD 5E 4F 00         B   972    				call fs_compare_hl_fff8
004CED 30 1C               B   973    				jr nc,atlclif
004CEF 22 CD 53 00         B   974    				ld (fs_file_working_cluster),hl
004CF3 01000000            B   975    				ld bc,0
004CF7 3A 80 53 00         B   976    				ld a,(fs_cluster_size)
004CFB CB27                B   977    				sla a
004CFD 47                  B   978    				ld b,a
004CFE 2A C3 53 00         B   979    				ld hl,(fs_existing_file_length)
004D02 AF                  B   980    				xor a							004D03 ED42                B   981    				sbc hl,bc						004D05 22 C3 53 00         B   982    				ld (fs_existing_file_length),hl
004D09 18 D5               B   983    				jr apenclch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   984    				
004D0B ED4B C3 53 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004D10 CB38                B   986    				srl b				
004D12 48                  B   987    				ld c,b							004D13 3A 80 53 00         B   988    				ld a,(fs_cluster_size)
004D17 91                  B   989    				sub c
004D18 47                  B   990    				ld b,a							004D19 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004D1B 2A CD 53 00         B   993    				ld hl,(fs_file_working_cluster)
004D1F 79                  B   994    				ld a,c
004D20 CD 8C 52 00         B   995    				call cluster_and_offset_to_lba
004D24 CD 0D 53 00         B   996    				call fs_read_sector
004D28 D8                  B   997    				ret c
004D29 C5                  B   998    				push bc							                           B   999    				
004D2A 11000000            B  1000    				ld de,0
004D2E 3A C3 53 00         B  1001    				ld a,(fs_existing_file_length)
004D32 5F                  B  1002    				ld e,a
004D33 3A C4 53 00         B  1003    				ld a,(fs_existing_file_length+1
004D37 E601                B  1004    				and 1
004D39 57                  B  1005    				ld d,a							004D3A 21000200            B  1006    				ld hl,512	
004D3E AF                  B  1007    				xor a
004D3F ED52                B  1008    				sbc hl,de						004D41 E5                  B  1009    				push hl
004D42 C1                  B  1010    				pop bc							004D43 21 80 65 00         B  1011    				ld hl,sector_buffer
004D47 19                  B  1012    				add hl,de
004D48 EB                  B  1013    				ex de,hl						004D49 7C                  B  1014    				ld a,h			
004D4A B5                  B  1015    				or l
004D4B 20 04               B  1016    				jr nz,fs_dcsb					004D4D CD 93 50 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
004D51 2A D0 53 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			004D55 EDA0                B  1019    fs_cbsb			ldi								004D57 7C                  B  1020    				ld a,h							004D58 B5                  B  1021    				or l
004D59 20 0D               B  1022    				jr nz,fs_srcadok
004D5B 22 D0 53 00         B  1023    				ld (fs_ez80_address),hl
004D5F 3A D2 53 00         B  1024    				ld a,(fs_ez80_address+2)
004D63 B7                  B  1025    				or a
004D64 CA 85 4A 00         B  1026    				jp z,fs_mem_error
004D68 CD 15 52 00         B  1027    fs_srcadok		call transfer_length_countdown
004D6C 28 54               B  1028    				jr z,fs_lbof					004D6E 78                  B  1029    fs_sadok		ld a,b							004D6F B1                  B  1030    				or c
004D70 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
004D72 22 D0 53 00         B  1033    				ld (fs_ez80_address),hl			004D76 C1                  B  1034    				pop bc							004D77 79                  B  1035    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D78 2A CD 53 00         B  1036    				ld hl,(fs_file_working_cluster)
004D7C CD 8C 52 00         B  1037    				call cluster_and_offset_to_lba
004D80 CD 25 53 00         B  1038    				call fs_write_sector			004D84 D8                  B  1039    				ret c							004D85 0C                  B  1040    				inc c							004D86 05                  B  1041    				dec b
004D87 28 0B               B  1042    				jr z,fs_sfncl					004D89 C5                  B  1043    fs_sfns			push bc				
004D8A 01000200            B  1044    				ld bc,512						004D8E 11 80 65 00         B  1045    				ld de,sector_buffer				004D92 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
004D94 CD 6B 4F 00         B  1048    fs_sfncl		call fs_find_free_cluster		004D98 D8                  B  1049    				ret c							004D99 C0                  B  1050    				ret nz							004D9A 2A CD 53 00         B  1051    				ld hl,(fs_file_working_cluster)
004D9E ED5B DD 53 00       B  1052    				ld de,(fs_free_cluster)
004DA3 CD E1 51 00         B  1053    				call update_fat_entry_for_clust
004DA7 D8                  B  1054    				ret c
004DA8 2A DD 53 00         B  1055    				ld hl,(fs_free_cluster)
004DAC 22 CD 53 00         B  1056    				ld (fs_file_working_cluster),hl
004DB0 11FFFF00            B  1057    				ld de,0ffffh
004DB4 CD E1 51 00         B  1058    				call update_fat_entry_for_clust
004DB8 D8                  B  1059    				ret c
004DB9 3A 80 53 00         B  1060    				ld a,(fs_cluster_size)
004DBD 47                  B  1061    				ld b,a							004DBE 0E00                B  1062    				ld c,0							004DC0 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
004DC2 C1                  B  1065    fs_lbof			pop bc
004DC3 79                  B  1066    				ld a,c							004DC4 2A CD 53 00         B  1067    				ld hl,(fs_file_working_cluster)
004DC8 CD 8C 52 00         B  1068    				call cluster_and_offset_to_lba
004DCC CD 25 53 00         B  1069    				call fs_write_sector	
004DD0 D8                  B  1070    				ret c
004DD1 AF                  B  1071    				xor a							004DD2 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004DD3                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004DD3 CD A5 50 00         B  1079    				call fs_find_filename			004DD7 D8                  B  1080    				ret c
004DD8 C0                  B  1081    				ret nz
                           B  1082    				
004DD9 DDCB0B66            B  1083    				bit 4,(ix+0bh)					004DDD 28 04               B  1084    				jr z,okdelf
004DDF AF                  B  1085    				xor a
004DE0 3EC6                B  1086    				ld a,0c6h						004DE2 C9                  B  1087    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1088    				
004DE3 DDE5                B  1089    okdelf			push ix
004DE5 E1                  B  1090    				pop hl
004DE6 C3 D7 4B 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
004DEA                     B  1097    fs_rename_command
                           B  1098    
004DEA CD A5 50 00         B  1099    				call fs_find_filename			004DEE D8                  B  1100    				ret c							004DEF FEC2                B  1101    				cp 0c2h							004DF1 28 04               B  1102    				jr z,fs_nfnok					004DF3 AF                  B  1103    				xor a							004DF4 3EC9                B  1104    				ld a,0c9h						004DF6 C9                  B  1105    				ret
                           B  1106    			
004DF7 21 97 53 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		004DFB 11 AF 53 00         B  1108    				ld de,fs_filename_buffer
004DFF 010B0000            B  1109    				ld bc,11
004E03 EDB0                B  1110    				ldir
004E05 21 A3 53 00         B  1111    				ld hl,fs_alt_filename			004E09 11 97 53 00         B  1112    				ld de,fs_sought_filename
004E0D 010B0000            B  1113    				ld bc,11
004E11 EDB0                B  1114    				ldir
004E13 CD A5 50 00         B  1115    				call fs_find_filename			004E17 D8                  B  1116    				ret c
004E18 FEC2                B  1117    				cp 0c2h
004E1A C8                  B  1118    				ret z							                           B  1119    				
004E1B DDE5                B  1120    				push ix
004E1D D1                  B  1121    				pop de
004E1E 21 AF 53 00         B  1122    				ld hl,fs_filename_buffer	 	004E22 010B0000            B  1123    				ld bc,11
004E26 EDB0                B  1124    				ldir							004E28 CD 25 53 00         B  1125    				call fs_write_sector			                           B  1126    				
004E2C AF                  B  1127    fs_rndone		xor a
004E2D C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
004E2E                     B  1134    fs_goto_first_dir_entry
                           B  1135    
004E2E CD 3A 1A 00         B  1136    				call fs_get_dir_cluster
004E32 ED53 E6 53 00       B  1137    				ld (fs_dir_entry_cluster),de
004E37 AF                  B  1138    				xor a
004E38 32 EC 53 00         B  1139    				ld (fs_dir_entry_sector),a		Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E3C 11000000            B  1140    				ld de,0
004E40 ED53 E9 53 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
004E45                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
004E45 3A EC 53 00         B  1156    				ld a,(fs_dir_entry_sector)		004E49 4F                  B  1157    				ld c,a
004E4A 2A E6 53 00         B  1158    				ld hl,(fs_dir_entry_cluster)	004E4E CD 8C 52 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
004E52 7C                  B  1161    				ld a,h							004E53 B5                  B  1162    				or l							004E54 20 09               B  1163    				jr nz,nr_read					004E56 2A 8A 53 00         B  1164    				ld hl,(fs_root_dir_position)	004E5A 79                  B  1165    				ld a,c
004E5B CD D2 52 00         B  1166    				call set_absolute_lba
                           B  1167    				
004E5F CD 0D 53 00         B  1168    nr_read			call fs_read_sector				004E63 D8                  B  1169    				ret c							                           B  1170    				
004E64 ED5B E9 53 00       B  1171    				ld de,(fs_dir_entry_line_offset
004E69 DD21 80 65 00       B  1172    dscan_int_loop	ld ix,sector_buffer
004E6E DD19                B  1173    				add ix,de
004E70 DD7E00              B  1174    ds_int_loop		ld a,(ix)
004E73 B7                  B  1175    				or a							004E74 28 0E               B  1176    				jr z,fs_dir_entry_free		
004E76 FEE5                B  1177    				cp 0e5h							004E78 28 0A               B  1178    				jr z,fs_dir_entry_free	
004E7A FE05                B  1179    				cp 05h							004E7C 28 06               B  1180    				jr z,fs_dir_entry_free	
004E7E DDCB0B5E            B  1181    				bit 3,(ix+0bh)					004E82 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
004E84                     B  1184    fs_dir_entry_free
                           B  1185    
004E84 EB                  B  1186    				ex de,hl
004E85 11200000            B  1187    				ld de,32
004E89 19                  B  1188    				add hl,de
004E8A EB                  B  1189    				ex de,hl
004E8B CB4A                B  1190    				bit 1,d
004E8D 28 DA               B  1191    				jr z,dscan_int_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E8F 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
004E91                     B  1194    fs_dir_entry_in_use
                           B  1195    				
004E91 ED53 E9 53 00       B  1196    				ld (fs_dir_entry_line_offset),d
004E96 DDE5                B  1197    				push ix
004E98 E1                  B  1198    				pop hl
004E99 CD 32 10 00         B  1199    				call os_clear_output_line
004E9D 0608                B  1200    				ld b,8							004E9F 11 83 60 00         B  1201    				ld de,output_line
004EA3 7E                  B  1202    dcopyn			ld a,(hl)
004EA4 FE20                B  1203    				cp ' '							004EA6 28 02               B  1204    				jr z,digchar
004EA8 12                  B  1205    				ld (de),a
004EA9 13                  B  1206    				inc de
004EAA 23                  B  1207    digchar			inc hl
004EAB 10 F6               B  1208    				djnz dcopyn
004EAD 7E                  B  1209    				ld a,(hl)						004EAE FE20                B  1210    				cp ' '							004EB0 28 0A               B  1211    				jr z,dirnoex
004EB2 3E2E                B  1212    				ld a,'.'						004EB4 12                  B  1213    				ld (de),a
004EB5 13                  B  1214    				inc de	
004EB6 01030000            B  1215    				ld bc,3							004EBA EDB0                B  1216    				ldir
004EBC AF                  B  1217    dirnoex			xor a 
004EBD 12                  B  1218    				ld (de),a						                           B  1219    				
004EBE 47                  B  1220    				ld b,a
004EBF DDCB0B66            B  1221    				bit 4,(ix+0bh)					004EC3 28 01               B  1222    				jr z,fs_fniaf		
004EC5 04                  B  1223    				inc b							004EC6 DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					004EC9 DD4E1F              B  1225    				ld c,(ix+01fh)
004ECC 21 83 60 00         B  1226    				ld hl,output_line				004ED0 AF                  B  1227    				xor a
004ED1 C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
004ED2                     B  1233    fs_goto_next_dir_entry
                           B  1234    
004ED2 11200000            B  1235    				ld de,32
004ED6 2A E9 53 00         B  1236    				ld hl,(fs_dir_entry_line_offset
004EDA 19                  B  1237    				add hl,de
004EDB 22 E9 53 00         B  1238    				ld (fs_dir_entry_line_offset),h
004EDF CB4C                B  1239    				bit 1,h
004EE1 CA 45 4E 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
004EE5 21000000            B  1242    dscan_new_sect	ld hl,0				
004EE9 22 E9 53 00         B  1243    				ld (fs_dir_entry_line_offset),h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1244    			
004EED 21 EC 53 00         B  1245    				ld hl,fs_dir_entry_sector
004EF1 34                  B  1246    				inc (hl)						                           B  1247    			
004EF2 ED5B E6 53 00       B  1248    				ld de,(fs_dir_entry_cluster)
004EF7 7A                  B  1249    				ld a,d
004EF8 B3                  B  1250    				or e							004EF9 20 0B               B  1251    				jr nz,nonroot2
004EFB 3A 90 53 00         B  1252    				ld a,(fs_root_dir_sectors)
004EFF BE                  B  1253    				cp (hl)
004F00 28 23               B  1254    				jr z,endofdir			
004F02 C3 45 4E 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												004F06 3A 80 53 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
004F0A BE                  B  1258    				cp (hl)							004F0B C2 45 4E 00         B  1259    				jp nz,fs_get_dir_entry
004F0F 3600                B  1260    				ld (hl),0						004F11 2A E6 53 00         B  1261    				ld hl,(fs_dir_entry_cluster)
004F15 CD B5 51 00         B  1262    				call get_fat_entry_for_cluster
004F19 22 E6 53 00         B  1263    				ld (fs_dir_entry_cluster),hl
004F1D CD 5E 4F 00         B  1264    				call fs_compare_hl_fff8			004F21 DA 45 4E 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
004F25 3ED2                B  1267    endofdir		ld a,0d2h
004F27 B7                  B  1268    				or a							004F28 C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
004F29                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
004F29 2A 8A 53 00         B  1279    				ld hl,(fs_root_dir_position)
004F2D AF                  B  1280    				xor a
004F2E CD E3 52 00         B  1281    				call set_abs_lba_and_read_secto
004F32 D8                  B  1282    				ret c
004F33 0E10                B  1283    				ld c,16							004F35 DD21 80 65 00       B  1284    				ld ix,sector_buffer
004F3A DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
004F3D FE08                B  1286    				cp 08h
004F3F 20 11               B  1287    				jr nz,not_label
004F41 DD360B00            B  1288    				ld (ix+0bh),0					004F45 DDE5                B  1289    				push ix
004F47 E1                  B  1290    				pop hl
004F48 E5                  B  1291    				push hl
004F49 060B                B  1292    				ld b,11
004F4B CD 0D 12 00         B  1293    				call uppercasify_string
004F4F E1                  B  1294    				pop hl
004F50 AF                  B  1295    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F51 C9                  B  1296    				ret
                           B  1297    				
004F52 11200000            B  1298    not_label		ld de,32						004F56 DD19                B  1299    				add ix,de						004F58 10 E0               B  1300    				djnz find_vl
004F5A AF                  B  1301    				xor a
004F5B 3ED4                B  1302    				ld a,0d4h						004F5D C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
004F5E                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
004F5E E5                  B  1315    				push hl
004F5F D5                  B  1316    				push de
004F60 11F8FF00            B  1317    				ld de,0fff8h			
004F64 B7                  B  1318    				or a							004F65 52ED52              B  1319    				sbc.s hl,de						004F68 D1                  B  1320    				pop de
004F69 E1                  B  1321    				pop hl
004F6A C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
004F6B                     B  1327    fs_find_free_cluster
                           B  1328    	
004F6B DD210000 00         B  1329    				ld ix,0							004F70 ED5B 84 53 00       B  1330    				ld de,(fs_fat1_position)		004F75 AF                  B  1331    				xor a				
004F76 32 D9 53 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
004F7A D5                  B  1333    				push de
004F7B E1                  B  1334    				pop hl
004F7C 3A D9 53 00         B  1335    				ld a,(fs_working_sector)
004F80 CD E3 52 00         B  1336    				call set_abs_lba_and_read_secto
004F84 D8                  B  1337    				ret c
004F85 21 80 65 00         B  1338    				ld hl,sector_buffer
004F89 0600                B  1339    				ld b,0
004F8B 7E                  B  1340    fs_ffcl1		ld a,(hl)						004F8C 23                  B  1341    				inc hl
004F8D B6                  B  1342    				or (hl)
004F8E 23                  B  1343    				inc hl
004F8F 28 14               B  1344    				jr z,fs_gotfc
004F91 DD23                B  1345    				inc ix
004F93 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F95 2A 91 53 00         B  1348    				ld hl,(fs_sectors_per_fat)
004F99 3A D9 53 00         B  1349    				ld a,(fs_working_sector)		004F9D 3C                  B  1350    				inc a				
004F9E BD                  B  1351    				cp l		
004F9F 20 D5               B  1352    				jr nz,fs_ffcl2					004FA1 3EC1                B  1353    fs_dfull		ld a,c1h						004FA3 B7                  B  1354    				or a							004FA4 C9                  B  1355    				ret
                           B  1356    			
004FA5 DDE5                B  1357    fs_gotfc		push ix							004FA7 E1                  B  1358    				pop hl							004FA8 2B                  B  1359    				dec hl							004FA9 2B                  B  1360    				dec hl							004FAA ED5B 94 53 00       B  1361    				ld de,(fs_max_data_clusters)
004FAF AF                  B  1362    				xor a
004FB0 52ED52              B  1363    				sbc.s hl,de						004FB3 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
004FB5 DD22 DD 53 00       B  1366    				ld (fs_free_cluster),ix
004FBA AF                  B  1367    				xor a
004FBB C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
004FBC                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
004FBC CD 3A 1A 00         B  1380    				call fs_get_dir_cluster			004FC0 EB                  B  1381    				ex de,hl
004FC1 22 CD 53 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
004FC5 AF                  B  1383    				xor a
004FC6 32 D9 53 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
004FCA 2A 8A 53 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	004FCE 3A D9 53 00         B  1387    				ld a,(fs_working_sector)
004FD2 CD D2 52 00         B  1388    				call set_absolute_lba
                           B  1389    				
004FD6 CD 3A 1A 00         B  1390    				call fs_get_dir_cluster			004FDA 7A                  B  1391    				ld a,d
004FDB B3                  B  1392    				or e
004FDC 28 0C               B  1393    				jr z,at_rootd
004FDE 2A CD 53 00         B  1394    				ld hl,(fs_file_working_cluster)
004FE2 3A D9 53 00         B  1395    				ld a,(fs_working_sector)
004FE6 CD 8C 52 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
004FEA CD 0D 53 00         B  1398    at_rootd		call fs_read_sector
004FEE D8                  B  1399    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FEF 0610                B  1400    				ld b,16							004FF1 11200000            B  1401    				ld de,32
004FF5 DD21 80 65 00       B  1402    				ld ix,sector_buffer
004FFA DD7E00              B  1403    scdirfe			ld a,(ix)						004FFD B7                  B  1404    				or a
004FFE 28 65               B  1405    				jr z,got_fde
005000 FEE5                B  1406    				cp 0e5h
005002 28 61               B  1407    				jr z,got_fde
005004 DD19                B  1408    				add ix,de						005006 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
005008 21 D9 53 00         B  1411    				ld hl,fs_working_sector			00500C 34                  B  1412    				inc (hl)
                           B  1413    				
00500D CD 3A 1A 00         B  1414    				call fs_get_dir_cluster			005011 7A                  B  1415    				ld a,d
005012 B3                  B  1416    				or e
005013 20 0B               B  1417    				jr nz,ffenotroo
005015 3A 90 53 00         B  1418    				ld a,(fs_root_dir_sectors)		005019 BE                  B  1419    				cp (hl)							00501A 20 AE               B  1420    				jr nz,ffenxtsec
00501C AF                  B  1421    fenotfnd		xor a							00501D 3EC3                B  1422    				ld a,0c3h						00501F C9                  B  1423    				ret
                           B  1424    			
005020 3A 80 53 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			005024 BE                  B  1426    				cp (hl)
005025 20 A3               B  1427    				jr nz,ffenxtsec
005027 2A CD 53 00         B  1428    				ld hl,(fs_file_working_cluster)
00502B CD B5 51 00         B  1429    				call get_fat_entry_for_cluster	00502F D8                  B  1430    				ret c
005030 CD 5E 4F 00         B  1431    				call fs_compare_hl_fff8			005034 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
005036 CD 6B 4F 00         B  1434    				call fs_find_free_cluster		00503A D8                  B  1435    				ret c							00503B C0                  B  1436    				ret nz							00503C ED5B DD 53 00       B  1437    				ld de,(fs_free_cluster)
005041 2A CD 53 00         B  1438    				ld hl,(fs_file_working_cluster)
005045 CD E1 51 00         B  1439    				call update_fat_entry_for_clust
005049 D8                  B  1440    				ret c
00504A EB                  B  1441    				ex de,hl						00504B 11FFFF00            B  1442    				ld de,0ffffh
00504F CD E1 51 00         B  1443    				call update_fat_entry_for_clust
005053 D8                  B  1444    				ret c
                           B  1445    			
005054 2A DD 53 00         B  1446    				ld hl,(fs_free_cluster)			005058 CD 67 50 00         B  1447    				call fs_clear_cluster			00505C D8                  B  1448    				ret c
00505D 2A DD 53 00         B  1449    				ld hl,(fs_free_cluster)			005061 C3 C1 4F 00         B  1450    				jp ffenxtclu					                           B  1451    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005065 AF                  B  1452    got_fde			xor a
005066 C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
005067                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
005067 22 DA 53 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
00506B CD 93 50 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
00506F AF                  B  1466    				xor a				
005070 32 D9 53 00         B  1467    				ld (fs_working_sector),a		005074 3A D9 53 00         B  1468    wipeclulp		ld a,(fs_working_sector)		005078 2A DA 53 00         B  1469    				ld hl,(fs_working_cluster)		00507C CD 8C 52 00         B  1470    				call cluster_and_offset_to_lba	005080 CD 25 53 00         B  1471    				call fs_write_sector
005084 D8                  B  1472    				ret c
005085 21 D9 53 00         B  1473    				ld hl,fs_working_sector
005089 34                  B  1474    				inc (hl)
00508A 3A 80 53 00         B  1475    				ld a,(fs_cluster_size)
00508E BE                  B  1476    				cp (hl)
00508F 20 E3               B  1477    				jr nz,wipeclulp
005091 AF                  B  1478    				xor a
005092 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
005093                     B  1482    fs_clear_sector_buffer
                           B  1483    			
005093 E5                  B  1484    				push hl
005094 C5                  B  1485    				push bc
005095 21 80 65 00         B  1486    				ld hl,sector_buffer			
005099 01000200            B  1487    				ld bc,512				
00509D AF                  B  1488    				xor a				
00509E CD 4B 15 00         B  1489    				call os_bchl_memfill	
0050A2 C1                  B  1490    				pop bc
0050A3 E1                  B  1491    				pop hl
0050A4 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
0050A5                     B  1498    fs_find_filename
                           B  1499    
0050A5 AF                  B  1500    				xor a
                           B  1501    
0050A6                     B  1502    fs_search	
                           B  1503    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050A6 32 F4 53 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
0050AA CD 3A 1A 00         B  1508    				call fs_get_dir_cluster
0050AE ED53 CD 53 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
0050B3 AF                  B  1510    				xor a
0050B4 32 D9 53 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
0050B8 2A 8A 53 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	0050BC 3A D9 53 00         B  1514    				ld a,(fs_working_sector)
0050C0 CD D2 52 00         B  1515    				call set_absolute_lba
                           B  1516    				
0050C4 CD 3A 1A 00         B  1517    				call fs_get_dir_cluster			0050C8 7A                  B  1518    				ld a,d
0050C9 B3                  B  1519    				or e
0050CA 28 0C               B  1520    				jr z,at_rootd2
0050CC 2A CD 53 00         B  1521    				ld hl,(fs_file_working_cluster)
0050D0 3A D9 53 00         B  1522    				ld a,(fs_working_sector)
0050D4 CD 8C 52 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
0050D8 CD 0D 53 00         B  1525    at_rootd2		call fs_read_sector
0050DC D8                  B  1526    				ret c
0050DD 0E10                B  1527    				ld c,16							0050DF DD21 80 65 00       B  1528    				ld ix,sector_buffer
0050E4 DDE5                B  1529    ndirentr		push ix
0050E6 D1                  B  1530    				pop de
0050E7 3A F4 53 00         B  1531    				ld a,(fs_search_type)
0050EB B7                  B  1532    				or a
0050EC 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
0050EE DD7E00              B  1535    				ld a,(ix)						0050F1 FE80                B  1536    				cp 080h							0050F3 30 35               B  1537    				jr nc,fnnotsame
0050F5 FE20                B  1538    				cp 020h
0050F7 38 31               B  1539    				jr c,fnnotsame
0050F9 ED5B F1 53 00       B  1540    				ld de,(fs_stash_dir_block)		0050FE DD7E1A              B  1541    				ld a,(ix+01ah)
005101 BB                  B  1542    				cp e
005102 20 26               B  1543    				jr nz,fnnotsame
005104 DD7E1B              B  1544    				ld a,(ix+01bh)
005107 BA                  B  1545    				cp d
005108 28 1E               B  1546    				jr z,fs_found
00510A 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
00510C FD21 97 53 00       B  1549    fs_ststr		ld iy,fs_sought_filename		005111 060B                B  1550    				ld b,11							005113 1A                  B  1551    cmpfnlp			ld a,(de)						005114 CD 19 12 00         B  1552    				call os_uppercasify				005118 6F                  B  1553    				ld l,a
005119 FD7E00              B  1554    				ld a,(iy)
00511C CD 19 12 00         B  1555    				call os_uppercasify
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005120 BD                  B  1556    				cp l				
005121 20 07               B  1557    				jr nz,fnnotsame
005123 FD23                B  1558    				inc iy
005125 13                  B  1559    				inc de
005126 10 EB               B  1560    				djnz cmpfnlp
005128 AF                  B  1561    fs_found		xor a							005129 C9                  B  1562    				ret
                           B  1563    			
00512A 11200000            B  1564    fnnotsame		ld de,32						00512E DD19                B  1565    				add ix,de
005130 0D                  B  1566    				dec c
005131 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
005133 21 D9 53 00         B  1569    				ld hl,fs_working_sector			005137 34                  B  1570    				inc (hl)
                           B  1571    				
005138 CD 3A 1A 00         B  1572    				call fs_get_dir_cluster			00513C 7A                  B  1573    				ld a,d
00513D B3                  B  1574    				or e
00513E 20 0D               B  1575    				jr nz,notrootdir
005140 3A 90 53 00         B  1576    				ld a,(fs_root_dir_sectors)		005144 BE                  B  1577    				cp (hl)							005145 C2 B8 50 00         B  1578    				jp nz,ffnnxtsec
005149 3EC2                B  1579    fnnotfnd		ld a,0c2h						00514B B7                  B  1580    				or a
00514C C9                  B  1581    				ret
                           B  1582    			
00514D                     B  1583    notrootdir
                           B  1584    				
00514D 3A 80 53 00         B  1585    				ld a,(fs_cluster_size)			005151 BE                  B  1586    				cp (hl)
005152 C2 B8 50 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
005156 2A CD 53 00         B  1589    				ld hl,(fs_file_working_cluster)
00515A CD B5 51 00         B  1590    				call get_fat_entry_for_cluster
00515E D8                  B  1591    				ret c
00515F CD 5E 4F 00         B  1592    				call fs_compare_hl_fff8			005163 30 E4               B  1593    				jr nc,fnnotfnd					005165 EB                  B  1594    				ex de,hl						005166 C3 AE 50 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
00516A                     B  1600    fs_hl_to_alt_filename
                           B  1601    
00516A 11 A3 53 00         B  1602    				ld de,fs_alt_filename
00516E 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
005170                     B  1606    fs_hl_to_filename
                           B  1607    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
005170 11 97 53 00         B  1612    				ld de,fs_sought_filename
005174 CD 7F 52 00         B  1613    hltofngo		call fs_clear_filename			005178 D5                  B  1614    				push de			
005179 DDE1                B  1615    				pop ix							                           B  1616    				
00517B 0E00                B  1617    				ld c,0
00517D 0608                B  1618    				ld b,8
00517F 7E                  B  1619    csfnlp2			ld a,(hl)						005180 B7                  B  1620    				or a
005181 C8                  B  1621    				ret z							005182 FE20                B  1622    				cp 32
005184 C8                  B  1623    				ret z							005185 FE2F                B  1624    				cp 02fh
005187 C8                  B  1625    				ret z							005188 FE2E                B  1626    				cp '.'
00518A 28 16               B  1627    				jr z,dofn_ext					00518C 12                  B  1628    				ld (de),a
00518D 13                  B  1629    				inc de
00518E 23                  B  1630    				inc hl
00518F 0C                  B  1631    				inc c							005190 10 ED               B  1632    				djnz csfnlp2					005192 7E                  B  1633    find_ext		ld a,(hl)
005193 FE2E                B  1634    				cp '.'							005195 28 0B               B  1635    				jr z,dofn_ext	
005197 FE20                B  1636    				cp ' '							005199 C8                  B  1637    				ret z
00519A FE2F                B  1638    				cp 02fh
00519C C8                  B  1639    				ret z
00519D B7                  B  1640    				or a
00519E C8                  B  1641    				ret z
00519F 23                  B  1642    				inc hl
0051A0 18 F0               B  1643    				jr find_ext
                           B  1644    				
0051A2 23                  B  1645    dofn_ext		inc hl							0051A3 0603                B  1646    				ld b,3				
0051A5 7E                  B  1647    fnextlp			ld a,(hl)						0051A6 B7                  B  1648    				or a
0051A7 C8                  B  1649    				ret z							0051A8 FE20                B  1650    				cp 32
0051AA C8                  B  1651    				ret z
0051AB DD7708              B  1652    				ld (ix+8),a
0051AE DD23                B  1653    				inc ix
0051B0 23                  B  1654    				inc hl
0051B1 0C                  B  1655    				inc c
0051B2 10 F1               B  1656    				djnz fnextlp
0051B4 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1660    
                           B  1661    
0051B5                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
0051B5 C5                  B  1666    				push bc
0051B6 D5                  B  1667    				push de
0051B7 01000000            B  1668    				ld bc,0
0051BB 4D                  B  1669    				ld c,l
0051BC 7C                  B  1670    				ld a,h
0051BD 2A 84 53 00         B  1671    				ld hl,(fs_fat1_position)
0051C1 CD E3 52 00         B  1672    				call set_abs_lba_and_read_secto
0051C5 38 17               B  1673    				jr c,hwerr
0051C7 DDE5                B  1674    				push ix
0051C9 DD21 80 65 00       B  1675    				ld ix,sector_buffer
0051CE DD09                B  1676    				add ix,bc
0051D0 DD09                B  1677    				add ix,bc
0051D2 21000000            B  1678    				ld hl,0
0051D6 DD6E00              B  1679    				ld l,(ix)
0051D9 DD6601              B  1680    				ld h,(ix+1)
0051DC DDE1                B  1681    				pop ix
0051DE D1                  B  1682    hwerr			pop de
0051DF C1                  B  1683    				pop bc
0051E0 C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
0051E1                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
0051E1 C5                  B  1695    				push bc
0051E2 E5                  B  1696    				push hl
0051E3 01000000            B  1697    				ld bc,0
0051E7 4D                  B  1698    				ld c,l
0051E8 7C                  B  1699    				ld a,h
0051E9 2A 84 53 00         B  1700    				ld hl,(fs_fat1_position)		0051ED CD 01 52 00         B  1701    				call fat_upd
0051F1 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
0051F3 E1                  B  1704    				pop hl
0051F4 E5                  B  1705    				push hl
0051F5 7C                  B  1706    				ld a,h
0051F6 2A 87 53 00         B  1707    				ld hl,(fs_fat2_position)		0051FA CD 01 52 00         B  1708    				call fat_upd
0051FE E1                  B  1709    fup_end			pop hl
0051FF C1                  B  1710    				pop bc
005200 C9                  B  1711    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1712    			
                           B  1713    			
005201 CD E3 52 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
005205 38 0D               B  1715    				jr c,ufehwerr
005207 21 80 65 00         B  1716    				ld hl,sector_buffer
00520B 09                  B  1717    				add hl,bc
00520C 09                  B  1718    				add hl,bc
00520D 73                  B  1719    				ld (hl),e
00520E 23                  B  1720    				inc hl
00520F 72                  B  1721    				ld (hl),d
005210 CD 25 53 00         B  1722    				call fs_write_sector
005214 C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
005215                     B  1728    transfer_length_countdown
                           B  1729    
005215 E5                  B  1730    				push hl							005216 C5                  B  1731    				push bc
                           B  1732    			
005217 0604                B  1733    				ld b,4
005219 21 BB 53 00         B  1734    				ld hl,fs_file_pointer			00521D 34                  B  1735    fpinclp			inc (hl)
00521E 20 03               B  1736    				jr nz,fs_fpino
005220 23                  B  1737    				inc hl
005221 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
005223 2A C7 53 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
005227 2B                  B  1741    				dec hl
005228 22 C7 53 00         B  1742    				ld (fs_file_transfer_length),hl
00522C 01000000            B  1743    				ld bc,0
005230 B7                  B  1744    				or a
005231 ED4A                B  1745    				adc hl,bc						                           B  1746    				
005233 C1                  B  1747    				pop bc
005234 E1                  B  1748    				pop hl
005235 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
005236                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
005236 CD 3A 1A 00         B  1757    				call fs_get_dir_cluster			00523A 7A                  B  1758    				ld a,d
00523B B3                  B  1759    				or e
00523C 20 10               B  1760    				jr nz,fs_dnnr
00523E 21 3D 5E 00         B  1761    				ld hl,vol_txt+1					005242 3A 38 5E 00         B  1762    				ld a,(current_volume)
005246 C630                B  1763    				add a,030h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005248 32 40 5E 00         B  1764    				ld (vol_txt+4),a
00524C AF                  B  1765    				xor a
00524D C9                  B  1766    				ret
                           B  1767    					
00524E ED53 F1 53 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
005253 CD EE 48 00         B  1769    				call fs_parent_dir_command		005257 D8                  B  1770    				ret c
005258 B7                  B  1771    				or a
005259 C0                  B  1772    				ret nz
00525A 3E01                B  1773    				ld a,1
00525C CD A6 50 00         B  1774    				call fs_search					005260 D8                  B  1775    				ret c
005261 C0                  B  1776    				ret nz
                           B  1777    					
005262 DDE5                B  1778    fs_gdbn			push ix
005264 E1                  B  1779    				pop hl
005265 060B                B  1780    				ld b,11							005267 7E                  B  1781    ntdirn			ld a,(hl)
005268 FE20                B  1782    				cp ' '
00526A 28 03               B  1783    				jr z,rdirfsp
00526C 23                  B  1784    				inc hl
00526D 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
00526F 3600                B  1787    rdirfsp			ld (hl),0
005271 DDE5                B  1788    				push ix
005273 ED5B F1 53 00       B  1789    				ld de,(fs_stash_dir_block)
005278 CD 46 1A 00         B  1790    				call fs_update_dir_cluster		00527C E1                  B  1791    				pop hl	
00527D AF                  B  1792    				xor a							00527E C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
00527F                     B  1797    fs_clear_filename
                           B  1798    
00527F D5                  B  1799    				push de							005280 C5                  B  1800    				push bc
005281 060C                B  1801    				ld b,12
005283 3E20                B  1802    				ld a,' '
005285 12                  B  1803    clrfnlp			ld (de),a
005286 13                  B  1804    				inc de
005287 10 FC               B  1805    				djnz clrfnlp
005289 C1                  B  1806    				pop bc
00528A D1                  B  1807    				pop de
00528B C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
00528C                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1816    
00528C C5                  B  1817    				push bc
00528D D5                  B  1818    				push de
00528E E5                  B  1819    				push hl
00528F DDE5                B  1820    				push ix
                           B  1821    
005291 2B                  B  1822    				dec hl							005292 2B                  B  1823    				dec hl							005293 11000000            B  1824    				ld de,0							005297 01000000            B  1825    				ld bc,0
00529B 5F                  B  1826    				ld e,a
00529C 3A 80 53 00         B  1827    				ld a,(fs_cluster_size)			0052A0 CB3F                B  1828    caotllp			srl a
0052A2 28 03               B  1829    				jr z,clusdone
0052A4 29                  B  1830    				add hl,hl						0052A5 18 F9               B  1831    				jr caotllp
                           B  1832    			
0052A7 ED4B 8D 53 00       B  1833    clusdone		ld bc,(fs_data_area)			0052AC 09                  B  1834    				add hl,bc						0052AD 19                  B  1835    				add hl,de						                           B  1836    				
0052AE E5                  B  1837    add_ptn_offset	push hl							0052AF CD 74 1A 00         B  1838    				call fs_calc_volume_offset
0052B3 DD21 6A 5E 00       B  1839    				ld ix,volume_mount_list
0052B8 DD19                B  1840    				add ix,de
0052BA E1                  B  1841    				pop hl
0052BB DD0708              B  1842    				ld bc,(ix+08h)					0052BE DD7E0B              B  1843    				ld a,(ix+0bh)
0052C1 09                  B  1844    				add hl,bc
0052C2 CE00                B  1845    				adc a,0
0052C4 22 0F 60 00         B  1846    				ld (sector_lba0),hl				0052C8 32 12 60 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
0052CC DDE1                B  1849    				pop ix
0052CE E1                  B  1850    				pop hl
0052CF D1                  B  1851    				pop de
0052D0 C1                  B  1852    				pop bc
0052D1 C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
0052D2                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
0052D2 C5                  B  1862    				push bc							0052D3 D5                  B  1863    				push de							0052D4 E5                  B  1864    				push hl							0052D5 DDE5                B  1865    				push ix							0052D7 01000000            B  1866    				ld bc,0
0052DB 11000000            B  1867    				ld de,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052DF 5F                  B  1868    				ld e,a
0052E0 19                  B  1869    				add hl,de
0052E1 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
0052E3                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
0052E3 CD D2 52 00         B  1875    				call set_absolute_lba
0052E7 C3 0D 53 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
0052EB                     B  1881    backup_sector_lba
                           B  1882    
0052EB C5                  B  1883    				push bc
0052EC D5                  B  1884    				push de
0052ED E5                  B  1885    				push hl
0052EE 21 0F 60 00         B  1886    				ld hl,sector_lba0
0052F2 11 F5 53 00         B  1887    				ld de,fs_backed_up_sector_lba0
0052F6 01040000            B  1888    lbabur			ld bc,4
0052FA EDB0                B  1889    				ldir
0052FC E1                  B  1890    				pop hl
0052FD D1                  B  1891    				pop de
0052FE C1                  B  1892    				pop bc
0052FF C9                  B  1893    				ret
                           B  1894    
                           B  1895    
005300                     B  1896    restore_sector_lba
                           B  1897    
005300 C5                  B  1898    				push bc
005301 D5                  B  1899    				push de
005302 E5                  B  1900    				push hl
005303 21 F5 53 00         B  1901    				ld hl,fs_backed_up_sector_lba0
005307 11 0F 60 00         B  1902    				ld de,sector_lba0
00530B 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
00530D                     B  1907    fs_read_sector
                           B  1908    			
00530D C5                  B  1909    				push bc
00530E D5                  B  1910    				push de
00530F E5                  B  1911    				push hl
005310 DDE5                B  1912    				push ix
005312 FDE5                B  1913    				push iy
005314 01040000            B  1914    				ld bc,04h						005318 CD 36 53 00         B  1915    				call sector_access_redirect
00531C FDE1                B  1916    secaccend		pop iy
00531E DDE1                B  1917    				pop ix
005320 E1                  B  1918    				pop hl
005321 D1                  B  1919    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005322 C1                  B  1920    				pop bc
005323 3F                  B  1921    				ccf								005324 C9                  B  1922    				ret								                           B  1923    
                           B  1924    
005325                     B  1925    fs_write_sector	
                           B  1926    				
005325 C5                  B  1927    				push bc
005326 D5                  B  1928    				push de
005327 E5                  B  1929    				push hl
005328 DDE5                B  1930    				push ix
00532A FDE5                B  1931    				push iy
00532C 01080000            B  1932    				ld bc,08h						005330 CD 36 53 00         B  1933    				call sector_access_redirect
005334 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
005336                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
005336 3A 39 5E 00         B  1941    				ld a,(current_driver)			00533A CD 0C 1A 00         B  1942    				call locate_driver_base			00533E EB                  B  1943    				ex de,hl
00533F 09                  B  1944    				add hl,bc						005340 E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
005341                     B  1949    bootsector_stub
                           B  1950    
005341 EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
005349 352E3000 02004000 
005351 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
005359 3F00FF00 00000000 
005361 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
005369 E636984E 4F204E41 
005371 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
005379 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
005380 00                  B  1958    fs_cluster_size				db 0
005381 000000              B  1959    fs_bytes_per_cluster		dw24 0
005384 000000              B  1960    fs_fat1_position			dw24 0		; offse
005387 000000              B  1961    fs_fat2_position			dw24 0		; offse
00538A 000000              B  1962    fs_root_dir_position		dw24 0		; offse
00538D 000000              B  1963    fs_data_area				dw24 0		; offse
005390 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
005391 000000              B  1966    fs_sectors_per_fat			dw24 0
005394 000000              B  1967    fs_max_data_clusters		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1968    
005397 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
00539D 00 00 00 00 00 00 
0053A3 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
0053A9 00 00 00 00 00 00 
0053AF 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
0053B5 00 00 00 00 00 00 
                           B  1972    
0053BB 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
0053BF 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
0053C3 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
0053C7 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
0053CA 000000              B  1979    fs_file_start_cluster		dw24 0
0053CD 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
0053D0 000000              B  1982    fs_ez80_address				dw24 0
0053D3 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
0053D6 000000              B  1985    fs_in_sector_offset			dw24 0
0053D9 00                  B  1986    fs_working_sector			db 0
                           B  1987    
0053DA 000000              B  1988    fs_working_cluster			dw24 0
0053DD 000000              B  1989    fs_free_cluster				dw24 0
0053E0 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
0053E3 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
0053E6 000000              B  1994    fs_dir_entry_cluster		dw24 0
0053E9 000000              B  1995    fs_dir_entry_line_offset	dw24 0
0053EC 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
0053ED 00                  B  1998    fs_filepointer_valid		db 0
0053EE 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
0053F1 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
0053F4 00                  B  2003    fs_search_type				db 0
                           B  2004    
0053F5 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3097    
                           A  3098    ;----------------------------------------------
                           A  3099    ; OS Data 
                           A  3100    ;----------------------------------------------
                           A  3101    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
0053F9                     B     9    kernal_table
                           B    10    
0053F9 061800              B    11    	dw24 ext_mount_volumes			;00		
0053FC B41700              B    12    	dw24 os_get_device_info			;01		
0053FF 6A1600              B    13    	dw24 os_check_volume_format		;02		
005402 951A00              B    14    	dw24 ext_change_volume			;03		
005405 C71700              B    15    	dw24 os_get_volume_info			;04		
005408 741600              B    16    	dw24 ext_format					;05		
00540B A61600              B    17    	dw24 ext_make_dir				;06		
00540E B41600              B    18    	dw24 ext_change_dir				;07		
005411 C21600              B    19    	dw24 os_parent_dir				;08		
005414 C81600              B    20    	dw24 os_root_dir				;09		
005417 101700              B    21    	dw24 ext_delete_dir				;0a		
00541A F91500              B    22    	dw24 ext_find_file				;0b		
00541D 151600              B    23    	dw24 ext_set_file_pointer		;0c		
005420 0E1600              B    24    	dw24 os_set_load_length			;0d		
005423 281600              B    25    	dw24 ext_read_bytes_from_file	;0e		
005426 CE1600              B    26    	dw24 ext_erase_file				;0f		
005429 F61600              B    27    	dw24 ext_rename_file			;10		
00542C 381600              B    28    	dw24 ext_create_file			;11		
00542F 4A1600              B    29    	dw24 ext_write_bytes_to_file	;12		
005432 631A00              B    30    	dw24 fs_get_total_sectors		;13		
005435 DC1600              B    31    	dw24 os_goto_first_dir_entry	;14		 
005438 E21600              B    32    	dw24 os_get_dir_entry			;15		
00543B E81600              B    33    	dw24 os_goto_next_dir_entry		;16		
00543E 201700              B    34    	dw24 ext_read_sector			;17		
005441 4E1700              B    35    	dw24 ext_write_sector			;18		
005444 D11A00              B    36    	dw24 ext_file_sector_list		;19		
005447 3A1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
00544A 461A00              B    38    	dw24 fs_update_dir_cluster		;1b		
00544D EE1600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005450 154300              B    41    	dw24 os_wait_key_press			;1d		
005453 5C4300              B    42    	dw24 os_get_key_press			;1e		
005456 3E1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005459 D51700              B    45    	dw24 ext_serial_get_header		;20		
00545C DF1700              B    46    	dw24 ext_serial_receive_file	;21		 
00545F E81700              B    47    	dw24 ext_serial_send_file		;22		 
005462 F51700              B    48    	dw24 ext_serial_tx				;23		
005465 FC1700              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005468 1A0F00              B    51    	dw24 ext_print_string			;25		
00546B 2D3C00              B    52    	dw24 hwsc_clear_screen			;26		
00546E FF3F00              B    53    	dw24 hwsc_wait_vrt				;27		
005471 C31300              B    54    	dw24 os_set_cursor_position		;28		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005474 351A00              B    55    	dw24 ext_plot_char				;29		
005477 531500              B    56    	dw24 ext_set_pen				;2a		
00547A 601500              B    57    	dw24 ext_background_colours		;2b		
00547D 5A3E00              B    58    	dw24 hwsc_draw_cursor			;2c		
005480 5A1500              B    59    	dw24 os_get_pen					;2d		
005483 763C00              B    60    	dw24 hwsc_scroll_up				;2e		
005486 CD3B00              B    61    	dw24 os_set_video_hw_regs		;2f		
005489 441500              B    62    	dw24 os_get_display_size		;30		
00548C EF3E00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
00548F E31300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005492 391B00              B    66    	dw24 ext_set_envar				;33		
005495 FD1A00              B    67    	dw24 ext_get_envar				;34		
005498 931B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
00549B 391400              B    70    	dw24 os_set_mouse_window		;36		
00549E 7F1400              B    71    	dw24 os_get_mouse_position		;37		
0054A1 561400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
0054A4 6D4000              B    74    	dw24 hwsc_time_delay			;39		
0054A7 D71100              B    75    	dw24 ext_compare_strings		;3a		
0054AA 631000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
0054AD 981000              B    77    	dw24 ext_ascii_to_hexword		;3c		
0054B0 ED1000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
0054B3 524000              B    80    	dw24 hwsc_get_version			;3e		
0054B6 AD1300              B    81    	dw24 os_dont_store_registers	;3f		
0054B9 EA1B00              B    82    	dw24 os_get_font_info			;40 	
0054BC 904000              B    83    	dw24 hwsc_read_rtc				;41     
0054BF B84000              B    84    	dw24 hwsc_write_rtc				;42		 
0054C2 E41B00              B    85    	dw24 os_get_keymap_location		;43		 
0054C5 103500              B    86    	dw24 os_get_mem_high			;44
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    ; Non-packed Text Strings
                           B    90    ;----------------------------------------------
                           B    91    
0054C8 50524F53 4520666F   B    92    welcome_message			db "PROSE for EZ80P by 
0054D0 7220455A 38305020 
0054D8 62792050 68696C20 
0054E0 52757374 6F6E2032 
0054E8 3031310B 0B 
0054ED 53595354 454D2052   B    93    						db "SYSTEM RAM free abo
0054F5 414D2066 72656520 
0054FD 61626F76 653A2024 
005505 00 
005506 44726976 65733A0B   B    94    storage_txt				db "Drives:",11,0
00550E 00 
00550F 434F4D4D 414E4453   B    95    os_dos_cmds_txt			db "COMMANDS",0
005517 00 
005518 53544152 5455502E   B    96    startup_script_fn		db "STARTUP.SCR",0
005520 53435200 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005524 2400                B    97    os_hex_prefix_txt		db "$",0
005526 4F532056 65727369   B    98    os_version_txt			db "OS Version: $",0	00552E 6F6E3A20 2400 
005534 414D4F45 42412048   B    99    hw_version_txt			db "AMOEBA HW Version: 
00553C 57205665 7273696F 
005544 6E3A2024 00 
005549 202F2000            B   100    fwd_slash_txt			db " / ",0
00554D 4C6F6164 696E672E   B   101    loading_txt				db "Loading..",11,0
005555 2E0B00 
005558 53617669 6E672E2E   B   102    saving_txt				db "Saving..",11,0
005560 0B00 
005562 2E657A70 20         B   103    ezp_extension_txt		db ".ezp",32
005567 0B4D6F72 653F0B0B   B   104    os_more_txt				db 11,"More?",11,11,0
00556F 00 
005570 52656769 73746572   B   105    nmi_freeze_txt			db "Register Dump:"
005578 2044756D 703A 
00557E 0B0B00              B   106    crlfx2_txt				db 11,11,0
005581 7800                B   107    rep_char_txt			db "x",0
005583 20746F20 00         B   108    to_txt					db " to ",0
005588 4552524F 5200       B   109    error_txt				db "ERROR",0
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Packed text section
                           B   113    ;----------------------------------------------
                           B   114    
00558E 00444542 5547       B   115    dictionary				db 0,"DEBUG"			005594 002D2D2D 2D2D       B   116    						db 0,"-----"			00559A 00494F              B   117    						db 0,"IO"				00559D 002D2D              B   118    						db 0,"--"				0055A0 004D4953 43         B   119    						db 0,"MISC"				0055A5 002D2D2D 2D         B   120    						db 0,"----"				0055AA 00616464 72         B   121    						db 0,"addr"				0055AF 0050524F 5345       B   122    						db 0,"PROSE"			0055B5 00612062 2063       B   123    						db 0,"a b c"			0055BB 00416464 72657373   B   124    						db 0,"Address"			0055C3 00427974 6573       B   125    						db 0,"Bytes"			0055C9 00457865 63757461   B   126    						db 0,"Executable"		0055D1 626C65 
0055D4 0048756E 74         B   127    						db 0,"Hunt"				0055D9 0046696C 6C         B   128    						db 0,"Fill"				0055DE 00476F74 6F         B   129    						db 0,"Goto"				                           B   130    						
0055E3 0053686F 77         B   131    						db 0,"Show"				0055E8 00435055            B   132    						db 0,"CPU"				0055EC 00526567 69737465   B   133    						db 0,"Registers"		0055F4 7273 
0055F6 004173              B   134    						db 0,"As"				0055F9 00415343 4949       B   135    						db 0,"ASCII"			0055FF 00436C65 6172       B   136    						db 0,"Clear"			005605 00536372 65656E     B   137    						db 0,"Screen"			00560C 00446973 61737365   B   138    						db 0,"Disassemble"		005614 6D626C65 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005618 00537769 746368     B   139    						db 0,"Switch"			00561F 00436F70 79         B   140    						db 0,"Copy"				005624 00446576 696365     B   141    						db 0,"Device"			00562B 00436861 6E6765     B   142    						db 0,"Change"			005632 00447269 7665       B   143    						db 0,"Drive"			005638 00446972            B   144    						db 0,"Dir"				00563C 002F                B   145    						db 0,"/"				00563E 00666E              B   146    						db 0,"fn"				                           B   147    						
005641 0044656C 657465     B   148    						db 0,"Delete"			005648 0046696C 65         B   149    						db 0,"File"				00564D 00496E66 6F         B   150    						db 0,"Info"				005652 00564F4C 783A       B   151    						db 0,"VOLx:"			005658 004D616B 65         B   152    						db 0,"Make"				00565D 0052656D 6F756E74   B   153    						db 0,"Remount"			005665 00537461 7274       B   154    						db 0,"Start"			00566B 00576172 6E696E67   B   155    						db 0,"Warning!"			005673 21 
005674 00416C6C            B   156    						db 0,"All"				005678 0052656D 6F7665     B   157    						db 0,"Remove"			00567F 0052656E 616D65     B   158    						db 0,"Rename"			005686 004F72              B   159    						db 0,"Or"				005689 00526563 65697665   B   160    						db 0,"Receive"			005691 00536176 65         B   161    						db 0,"Save"				005696 00547261 6E736D69   B   162    						db 0,"Transmit"			00569E 74 
00569F 004C6F61 64         B   163    						db 0,"Load"				                           B   164    						
0056A4 004F532F 4857       B   165    						db 0,"OS/HW"			0056AA 00566572 73696F6E   B   166    						db 0,"Version"			0056B2 005B7065 6E207061   B   167    						db 0,"[pen paper]"		0056BA 7065725D 
0056BE 803A                B   168    						db 80h,":"				0056C0 813E                B   169    						db 81h,">"				0056C2 002A                B   170    						db 0,"*"				0056C4 00566F6C 756D6573   B   171    						db 0,"Volumes"			0056CC 8343                B   172    						db 83h,"C"				0056CE 844344              B   173    						db 84h,"CD"				0056D1 85434C53            B   174    						db 85h,"CLS"			0056D5 8650454E            B   175    						db 86h,"PEN"			0056D9 8744                B   176    						db 87h,"D"				0056DB 8844454C            B   177    						db 88h,"DEL"			0056DF 89444952            B   178    						db 89h,"DIR"			0056E3 8A48                B   179    						db 8ah,"H"				0056E5 8B46                B   180    						db 8bh,"F"				                           B   181    						
0056E7 004F6E              B   182    						db 0,"On"				0056EA 8C464F52 4D4154     B   183    						db 8ch,"FORMAT"			0056F1 0047                B   184    						db 0,"G"				0056F3 8D4C42              B   185    						db 8dh,"LB"				0056F6 8E4D                B   186    						db 8eh,"M"				0056F8 8F4D4F55 4E54       B   187    						db 8fh,"MOUNT"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0056FE 004265              B   188    						db 0,"Be"				005701 9052                B   189    						db 90h,"R"				005703 915244              B   190    						db 91h,"RD"				005706 92524E              B   191    						db 92h,"RN"				005709 935258              B   192    						db 93h,"RX"				00570C 945342              B   193    						db 94h,"SB"				00570F 9554                B   194    						db 95h,"T"				005711 965458              B   195    						db 96h,"TX"				005714 97564552 53         B   196    						db 97h,"VERS"			005719 00577269 7465       B   197    						db 0,"Write"			                           B   198    						
00571F 004D656D            B   199    						db 0,"Mem"				005723 00227478 7422       B   200    						db 0,22h,"txt",22h		005729 0057696C 6C         B   201    						db 0,"Will"				00572E 00526174 65         B   202    						db 0,"Rate"				005733 0061                B   203    						db 0,"a"				005735 00507265 70         B   204    						db 0,"Prep"				00573A 984D44              B   205    						db 98h,"MD"				00573D 00447269 766573     B   206    						db 0,"Drives"			005744 006F6C64 666E       B   207    						db 0,"oldfn"			00574A 006E6577 666E       B   208    						db 0,"newfn"			005750 006C656E            B   209    						db 0,"len"				005754 00436F6C 6F757273   B   210    						db 0,"Colours"			00575C 993F                B   211    						db 99h,"?"				00575E 00436F6D 6D616E64   B   212    						db 0,"Commands"			005766 73 
005767 0020                B   213    						db 0," "				005769 002D                B   214    						db 0,"-"				                           B   215    						
00576B 00566F6C 756D65     B   216    						db 0,"Volume"			005772 0046756C 6C         B   217    						db 0,"Full"				005777 004E6F74            B   218    						db 0,"Not"				00577B 00466F75 6E64       B   219    						db 0,"Found"			005781 004C656E 677468     B   220    						db 0,"Length"			005788 005A6572 6F         B   221    						db 0,"Zero"				00578D 004F7574            B   222    						db 0,"Out"				005791 004F66              B   223    						db 0,"Of"				005794 0052616E 6765       B   224    						db 0,"Range"			00579A 00416C72 65616479   B   225    						db 0,"Already"			0057A2 00457869 737473     B   226    						db 0,"Exists"			0057A9 004174              B   227    						db 0,"At"				0057AC 00526F6F 74         B   228    						db 0,"Root"				0057B1 004D6973 6D617463   B   229    						db 0,"Mismatch"			0057B9 68 
0057BA 00526571 75657374   B   230    						db 0,"Request"			0057C2 00446174 61         B   231    						db 0,"Data"				                           B   232    				
0057C7 00454F46            B   233    						db 0,"EOF"				0057CB 00416674 6572       B   234    						db 0,"After"			0057D1 00556E6B 6E6F776E   B   235    						db 0,"Unknown"			0057D9 00436F6D 6D616E64   B   236    						db 0,"Command"			0057E1 00426164            B   237    						db 0,"Bad"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057E5 00486578            B   238    						db 0,"Hex"				0057E9 004E6F              B   239    						db 0,"No"				0057EC 0041626F 72746564   B   240    						db 0,"Aborted"			0057F4 00507265 73656E74   B   241    						db 0,"Present"			0057FC 00436865 636B7375   B   242    						db 0,"Checksum"			005804 6D 
005805 004C6F61 646564     B   243    						db 0,"Loaded"			00580C 00436F6D 6D73       B   244    						db 0,"Comms"			005812 00457272 6F72       B   245    						db 0,"Error"			005818 00417267 756D656E   B   246    						db 0,"Arguments"		005820 7473 
005822 004C6F73 74         B   247    						db 0,"Lost"				                           B   248    						
005827 00                  B   249    						db 0
005828 46415431 36         B   250    fat16_txt				db "FAT16"				                           B   251    
00582D 00536572 69616C     B   252    						db 0,"Serial"			005834 0054696D 65         B   253    						db 0,"Time"				005839 00466F6E 74         B   254    						db 0,"Font"				00583E 00546F6F            B   255    						db 0,"Too"				005842 004C6F6E 67         B   256    						db 0,"Long"				005847 00446573 74696E61   B   257    						db 0,"Destination"		00584F 74696F6E 
005853 0053656C 65637465   B   258    						db 0,"Selected"			00585B 64 
00585C 00496E76 616C6964   B   259    						db 0,"Invalid"			005864 004D6973 73696E67   B   260    						db 0,"Missing"			00586C 004F4B              B   261    						db 0,"OK"				00586F 004F53              B   262    						db 0,"OS"				005872 0050726F 74656374   B   263    						db 0,"Protected"		00587A 6564 
00587C 0041                B   264    						db 0,"A"				00587E 004973              B   265    						db 0,"Is"				005881 00456D70 7479       B   266    						db 0,"Empty"			005887 00456E64            B   267    						db 0,"End"				                           B   268    						
00588B 0024                B   269    						db 0,"$"
00588D 7878                B   270    hex_byte_txt			db "xx"					                           B   271    						
00588F 00417070 656E64     B   272    						db 0,"Append"			005896 003F                B   273    						db 0,"?"				005898 0024                B   274    						db 0,"$"				00589A 00417761 6974696E   B   275    						db 0,"Awaiting"			0058A2 67 
0058A3 00526563 65697669   B   276    						db 0,"Receiving"		0058AB 6E67 
0058AD 0053656E 64696E67   B   277    						db 0,"Sending"			0058B5 000B                B   278    						db 0,11					0058B7 002E2E              B   279    						db 0,".."				0058BA 004E616D 65         B   280    						db 0,"Name"				0058BF 00204279 746573     B   281    						db 0," Bytes"			0058C6 00507265 7373       B   282    						db 0,"Press"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058CC 00416E79            B   283    						db 0,"Any"				0058D0 004B6579            B   284    						db 0,"Key"				0058D4 00456E74 6572       B   285    						db 0,"Enter"			0058DA 9A455845 43         B   286    						db 9ah,"EXEC"			                           B   287    				
0058DF 0052756E            B   288    						db 0,"Run"				0058E3 00536372 697074     B   289    						db 0,"Script"			0058EA 00594553            B   290    yes_txt					db 0,"YES" 				0058EE 00546F              B   291    						db 0,"To"				0058F1 00536574            B   292    						db 0,"Set"				0058F5 00436F6E 74696E75   B   293    						db 0,"Continue"			0058FD 65 
0058FE 004E6F6E 65         B   294    						db 0,"None"				005903 00447269 766572     B   295    						db 0,"Driver"			00590A 9B3C                B   296    						db 9bh,"<"				00590C 004E6577 6572       B   297    						db 0,"Newer"			005912 00526571 75697265   B   298    						db 0,"Required"			00591A 64 
00591B 00465047 4120636F   B   299    						db 0,"FPGA config"		005923 6E666967 
005927 00556E63 68616E67   B   300    						db 0,"Unchanged"		00592F 6564 
005931 00202849 6620666E   B   301    						db 0," (If fn = ! recei
005939 203D2021 20726563 
005941 65697665 20616E64 
005949 2072756E 2070726F 
005951 6772616D 29 
005956 9C50414C 45545445   B   302    						db 9ch,"PALETTE"		00595E 0070616C 65747465   B   303    						db 0,"palette"			                           B   304    						
005966 9D4D4F55 5345       B   305    						db 9dh,"MOUSE"			00596C 00456E61 626C65     B   306    						db 0,"Enable"			005973 004B6579 626F6172   B   307    						db 0,"Keyboard"			00597B 64 
00597C 00446574 65637465   B   308    						db 0,"Detected"			005984 64 
005985 004D6F75 7365       B   309    						db 0,"Mouse"			00598B 00536563 746F72     B   310    						db 0,"Sector"			005992 00496E63 6F727265   B   311    						db 0,"Incorrect"		00599A 6374 
00599C 9E564D4F 4445       B   312    						db 9eh,"VMODE"			0059A2 00566964 656F       B   313    						db 0,"Video"			0059A8 004D6F64 65         B   314    						db 0,"Mode"				0059AD 9F464F4E 54         B   315    						db 9fh,"FONT"			0059B2 00416E64            B   316    						db 0,"And"				0059B6 00536176 696E67     B   317    						db 0,"Saving"			0059BD 00556E73 7570706F   B   318    						db 0,"Unsupported"		0059C5 72746564 
0059C9 A0534554            B   319    						db 0a0h,"SET"			0059CD 005B7661 723D7374   B   320    						db 0,"[var=string]"		0059D5 72696E67 5D 
                           B   321    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0059DA 00456E76 6172       B   322    						db 0,"Envar"			0059E0 A1445A              B   323    						db 0a1h,"DZ"			0059E3 0041444C            B   324    						db 0,"ADL"				0059E7 005A3830            B   325    						db 0,"Z80"				                           B   326    						
0059EB 0001                B   327    						db 0,1					                           B   328    
                           B   329    
                           B   330    
                           B   331    
                           B   332    
0059ED 2199696A 5F916F92   B   333    save_append_msg			db 021h,099h,069h,06ah,
0059F5 9700 
0059F7 2F0A9300            B   334    os_loadaddress_msg 		db 02fh,00ah,093h,0		0059FB 21649300            B   335    os_filesize_msg			db 021h,064h,093h,0		0059FF 94219700            B   336    ser_rec_msg				db 094h,021h,097h,0		005A03 956F9897 00         B   337    ser_rec2_msg			db 095h,06fh,098h,097h,
005A08 966F9897 00         B   338    ser_send_msg			db 096h,06fh,098h,097h,
005A0D 9521BBBC 989700     B   339    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005A14 A77C9097 00         B   340    hw_err_msg				db 0a7h,07ch,090h,097h,
005A19 607C00              B   341    disk_err_msg			db 060h,07ch,0			005A1C A1779797 00         B   342    script_aborted_msg		db 0a1h,077h,097h,097h,
005A21 76B2B397 00         B   343    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   344    
005A26 9700                B   345    packed_help1				db 097h,0
005A28 0100                B   346    							db 001h,0			005A2A 0200                B   347    							db 002h,0			005A2C 3307095F 4F500B00   B   348    							db 033h,007h,009h,0
005A34 3407515F 4F1400     B   349    							db 034h,007h,051h,0
005A3B A807095F 4F0B1E17   B   350    							db 0a8h,007h,009h,0
005A43 00 
                           B   351    
005A44 37070707 5F195000   B   352    							db 037h,007h,007h,0
005A4C 3B075FC2 1700       B   353    							db 03bh,007h,05fh,0
005A52 C1075FC3 1700       B   354    							db 0c1h,007h,05fh,0
005A58 3F070754 5F0E5000   B   355    							db 03fh,007h,007h,0
005A60 42075F0F 0A00       B   356    							db 042h,007h,05fh,0
005A66 3E070709 5F0D5000   B   357    							db 03eh,007h,007h,0
005A6E 44075F10 500B00     B   358    							db 044h,007h,05fh,0
005A75 475F1011 1200       B   359    							db 047h,05fh,010h,0
005A7B 4C075F10 50131400   B   360    							db 04ch,007h,05fh,0
                           B   361    	
005A83 9700                B   362    							db 097h,0
005A85 0300                B   363    							db 003h,0			005A87 0400                B   364    							db 004h,0			005A89 38231E1D 5F1B601E   B   365    							db 038h,023h,01eh,0
005A91 1D00 
005A93 3C1F5F20 2100       B   366    							db 03ch,01fh,05fh,0
005A99 3D5F101D 00         B   367    							db 03dh,05fh,010h,0
005A9E 411A995F 551C00     B   368    							db 041h,01ah,099h,0
005AA5 431F075F 2F2100     B   369    							db 043h,01fh,007h,0
005AAC 561D5F24 1D00       B   370    							db 056h,01dh,05fh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005AB2 455F2557 00         B   371    							db 045h,05fh,025h,0
005AB7 481D5F29 1D00       B   372    							db 048h,01dh,05fh,0
005ABD 4958595F 2A2100     B   373    							db 049h,058h,059h,0
005AC4 4A1F075F 2C21AD00   B   374    							db 04ah,01fh,007h,0
005ACC 4B1F075A 5F2D2100   B   375    							db 04bh,01fh,007h,0
005AD4 4D1F075A 5F2E2100   B   376    							db 04dh,01fh,007h,0
005ADC 235F1860 00         B   377    							db 023h,05fh,018h,0
                           B   378    
005AE1 9700                B   379    							db 097h,0
005AE3 0500                B   380    							db 005h,0			005AE5 0600                B   381    							db 006h,0			005AE7 395F1516 00         B   382    							db 039h,05fh,015h,0
005AEC 9F1F5FA0 A100       B   383    							db 09fh,01fh,05fh,0
005AF2 BA1F5F1B 8200       B   384    							db 0bah,01fh,05fh,0
005AF8 B05FB1B0 A700       B   385    							db 0b0h,05fh,0b1h,0
005AFE AE095F1B AF00       B   386    							db 0aeh,09h,05fh,01
005B04 3A325F1B 5B00       B   387    							db 03ah,032h,05fh,0
005B0A BEBF5FA4 C000       B   388    							db 0beh,0bfh,05fh,0
005B10 4E5F1030 3100       B   389    							db 04eh,05fh,010h,0
005B16 B7095F1B B8B900     B   390    							db 0b7h,09h,5fh,01b
005B1D 5C5F105D 00         B   391    							db 05ch,05fh,010h,0
005B22 9700                B   392    							db 097h,0
005B24 FF                  B   393    							db 0ffh
                           B   394    
                           B   395    
                           B   396    
                           B   397    
005B25 4A1D00              B   398    os_cmd_locs					dw24 os_cmd_colon	005B28 282C00              B   399    							dw24 os_cmd_gtr		005B2B 0F3500              B   400    							dw24 os_cmd_unused	005B2E F11B00              B   401    							dw24 os_cmd_c		005B31 5E1C00              B   402    							dw24 os_cmd_cd		005B34 441D00              B   403    							dw24 os_cmd_cls		005B37 2A3300              B   404    							dw24 os_cmd_pen		005B3A 641D00              B   405    							dw24 os_cmd_d		                           B   406    					
005B3D C52800              B   407    							dw24 os_cmd_del		005B40 DA2800              B   408    							dw24 os_cmd_dir		005B43 562B00              B   409    							dw24 os_cmd_h		005B46 D62900              B   410    							dw24 os_cmd_f		005B49 FE2900              B   411    							dw24 os_cmd_format	005B4C 5C2C00              B   412    							dw24 os_cmd_lb		005B4F EB2C00              B   413    							dw24 os_cmd_m		005B52 EB3100              B   414    							dw24 os_cmd_remount
                           B   415    
005B55 422D00              B   416    							dw24 os_cmd_r		005B58 732E00              B   417    							dw24 os_cmd_rd		005B5B 802E00              B   418    							dw24 os_cmd_rn		005B5E 042F00              B   419    							dw24 os_cmd_rx		005B61 9C2E00              B   420    							dw24 os_cmd_sb		005B64 973100              B   421    							dw24 os_cmd_t		005B67 2B3100              B   422    							dw24 os_cmd_tx		Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B6A F73100              B   423    							dw24 os_cmd_vers	                           B   424    							
005B6D 352D00              B   425    							dw24 os_cmd_md		005B70 042C00              B   426    							dw24 os_cmd_help	005B73 283200              B   427    							dw24 os_cmd_exec	005B76 283300              B   428    							dw24 os_cmd_ltn		005B79 4A3300              B   429    							dw24 os_cmd_palette
005B7C 7B3300              B   430    							dw24 os_cmd_mouse	005B7F B73300              B   431    							dw24 os_cmd_vmode	005B82 553400              B   432    							dw24 os_cmd_font	                           B   433    							
005B85 A63400              B   434    							dw24 os_cmd_set		005B88 023500              B   435    							dw24 os_cmd_dz		                           B   436    							
                           B   437    								
005B8B 00                  B   438    packed_msg_list				db 0				                           B   439    		
005B8C 606100              B   440    							db 060h,061h,0		005B8F 21626300            B   441    							db 021h,062h,063h,0
005B93 1D6100              B   442    							db 01dh,061h,0		005B96 628C1D00            B   443    							db 062h,08ch,01dh,0
005B9A 1D8D628E 00         B   444    							db 01dh,08dh,062h,0
005B9F 628C2100            B   445    							db 062h,08ch,021h,0
005BA3 21648D65 00         B   446    							db 021h,064h,08dh,0
005BA8 0A666768 00         B   447    							db 00ah,066h,067h,0
005BAD 2199696A 00         B   448    							db 021h,099h,069h,0
005BB2 696B6C00            B   449    							db 069h,06bh,06ch,0
                           B   450    					
005BB6 727300              B   451    							db 072h,073h,0		005BB9 877500              B   452    							db 087h,075h,0		005BBC 76219900            B   453    							db 076h,021h,099h,0
                           B   454    					
005BC0 87B500              B   455    							db 087h,0b5h,0		005BC3 797400              B   456    							db 079h,074h,0		005BC6 9A7A00              B   457    bytes_loaded_msg			db 09ah,07ah,0		005BC9 7B7C00              B   458    							db 07bh,07ch,0		005BCC 747D00              B   459    							db 074h,07dh,0		                           B   460    
005BCF 627F00              B   461    format_err_msg				db 062h,07fh,0		                           B   462    
005BD2 816600              B   463    							db 081h,066h,0		005BD5 21998384 00         B   464    							db 021h,099h,083h,0
005BDA 76260A00            B   465    							db 076h,026h,00ah,0
005BDE 76216400            B   466    							db 076h,021h,064h,0
005BE2 2D7700              B   467    							db 02dh,077h,0		005BE5 2D7C6B85 00         B   468    							db 02dh,07ch,06bh,0
005BEA 628C080C 00         B   469    							db 062h,08ch,08h,0c
005BEF A9316708 AA00       B   470    							db 0a9h,031h,067h,0
005BF5 768F0A00            B   471    							db 076h,08fh,00ah,0
005BF9 76850A00            B   472    							db 076h,085h,00ah,0
                           B   473    					
005BFD 746800              B   474    							db 074h,068h,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C00 887D00              B   475    							db 088h,07dh,0		005C03 8900                B   476    ok_msg						db 089h,0			                           B   477    					
005C05 876000              B   478    							db 087h,060h,0		005C08 1A627800            B   479    							db 01ah,062h,078h,0
                           B   480    					
005C0C 1D626300            B   481    							db 01dh,062h,063h,0
005C10 7700                B   482    							db 077h,0			                           B   483    					
005C12 21996D00            B   484    							db 021h,099h,06dh,0
005C16 8A508B00            B   485    							db 08ah,050h,08bh,0
005C1A 6F71706E 00         B   486    							db 06fh,071h,070h,0
005C1F 763600              B   487    no_vols_msg					db 076h,036h,0		005C22 97A66300            B   488    none_found_msg				db 097h,0a6h,063h,0
                           B   489    							
005C26 B62100              B   490    							db 0b6h,021h,0		005C29 A9316708 AA00       B   491    							db 0a9h,031h,067h,0
005C2F 21AC00              B   492    							db 021h,0ach,0		                           B   493    							
005C32 766F00              B   494    							db 076h,06fh,0		005C35 746F00              B   495    							db 074h,06fh,0		005C38 66676800            B   496    							db 066h,067h,068h,0
005C3C BD1A00              B   497    							db 0bdh,01ah,0		005C3F 1A62B300            B   498    							db 01ah,062h,0b3h,0
005C43 1A7C00              B   499    							db 01ah,07ch,0		                           B   500    							
005C46 FF                  B   501    							db 0ffh				                           B   502    
                           B   503    ;----------------------------------------------
                           B   504    
005C47                     B   505    kernal_error_code_translation
                           B   506    
005C47 242D2E14 08110F2A   B   507    					db 24h,2dh,2eh,14h, 08h,11h
005C4F 2F303132 
                           B   508    					
005C53                     B   509    fs_error_code_translation
                           B   510    
005C53 00010203 04050607   B   511    					db 00h,01h,02h,03h,04h,05h,
005C5B 08090A0B 0C0D1321 
005C63 22232425 260E0000   B   512    					db 22h,23h,24h,25h,26h,0eh,
                           B   513    
                           B   514    
                           B   515    ;----------------------------------------------
                           B   516    ; Scancode to ASCII keymaps
                           B   517    ;----------------------------------------------
                           B   518    
                           C     0    include	'UK_keymap.asm'
005C6B                     C     1    keymap:
005C6B 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005C73 00000000 00006000 
005C7B 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005C83 00007A73 61773200 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005C8B 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005C93 00207666 74723500 
005C9B 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005CA3 00006D6A 75373800 
005CAB 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005CB3 002E2F6C 3B702D00 
005CBB 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005CC3 0000005D 00230000 
005CCB 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005CD3 00000000 00000000 
005CDB AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005CE3 21000000 5A534157 
005CEB 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005CF3 A3000020 56465452 
005CFB 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005D03 5E000000 4D4A5526 
005D0B 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005D13 2800003E 3F4C3A50 
005D1B 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005D23 00000000 007D007E 
005D2B 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005D33 00000000 00000000 
005D3B 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005D43 00000000 00000000 
005D4B 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005D53 00000000 00000000 
005D5B 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005D63 00000000 00000000 
005D6B 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005D73 00000000 00000000 
005D7B 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005D83 00000000 00000000 
005D8B 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   520    
       00005C6B            B   521    unshifted_keymap equ keymap+00h
       00005CCD            B   522    shifted_keymap   equ keymap+62h
       00005D2F            B   523    alted_keymap	 equ keymap+c4h
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
005D91 00                  B   527    ui_index				db 0				; u
005D92 00                  B   528    ui_maxchars				db 0				; "
005D93 000000              B   529    ui_string_addr			dw24 0				; "
                           B   530    
                           B   531    ;----------------------------------------------
                           B   532    ; OS Display parameters
                           B   533    ;----------------------------------------------
                           B   534    
005D96 00                  B   535    video_mode				db 0
005D97 0700                B   536    current_pen				dw 07h				; c
005D99 0000                B   537    background_colour		dw 00h				; f
                           B   538    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D9B 00000F00 000F0F0F   B   539    pen_palette				dw 0000h,000fh,0f00h,0f
005DA3 F000FF00 F00FFF0F 
005DAB 55059909 CC0C710F   B   540    						dw 0555h,0999h,0ccch,0f
005DB3 7F00F80D 40088C03 
                           B   541    
005DBB 00                  B   542    plotchar_colour			db 0				; c
                           B   543    
005DBC 00                  B   544    req_cursor_image		db 0
005DBD 00                  B   545    active_cursor_image		db 0
                           B   546    
005DBE                     B   547    display_parameters							; D
                           B   548    ;-----------------
                           B   549    
005DBE 000000              B   550    window_rows				dw24 0				; i
005DC1 000000              B   551    window_columns			dw24 0				; i
005DC4 000000              B   552    window_width_bytes		dw24 0				; i
005DC7 000000              B   553    window_height_lines		dw24 0				; i
                           B   554    
005DCA 040000 080000       B   555    font_parameters			dw24 4,8,0,0
005DD0 000000 000000 
       00005DCA            B   556    font_width_bytes		equ font_parameters+0	       00005DCD            B   557    font_height_lines		equ font_parameters+3
       00005DD0            B   558    font_addr				equ font_parameters+6
       00005DD3            B   559    font_length				equ font_parameters+9
                           B   560    
005DD6 000000              B   561    video_window_address	dw24 0
005DD9 000000              B   562    charmap_address			dw24 0
005DDC 000000              B   563    attributes_address		dw24 0
005DDF 000000              B   564    cursor_image_address	dw24 0
005DE2 000000              B   565    total_window_bytes		dw24 0
005DE5 000000              B   566    total_charmap_bytes		dw24 0
005DE8 000000              B   567    total_row_bytes			dw24 0				; i
005DEB 00                  B   568    window_pixel_doubling	db 0
                           B   569    
                           B   570    ;==============================================
                           B   571    ;  Serial Routine Data
                           B   572    ;==============================================
                           B   573    
005DEC 000000              B   574    serial_ez80_address		dw24 0
005DEF 000000              B   575    serial_file_length		dw24 0
005DF2 000000              B   576    serial_fn_addr			dw24 0
005DF5 00 00 00 00 00 00   B   577    serial_filename			blkb 18,0		
005DFB 00 00 00 00 00 00 
005E01 00 00 00 00 00 00 
005E07 00                  B   578    serial_fn_length		db 0
005E08 00                  B   579    serial_timeout			db 0
                           B   580    
005E09 00 00 00 00 00 00   B   581    serial_fileheader		blkb 20,0
005E0F 00 00 00 00 00 00 
005E15 00 00 00 00 00 00 
005E1B 00 00 
005E1D 5A383050 2E464845   B   582    serial_header_id		db "Z80P.FHEADER"		Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005E25 41444552 
005E29 00                  B   583    serial_transfer_started	db 0
                           B   584    
005E2A 00                  B   585    anim_wait_count			db 0
                           B   586    
                           B   587    ;==============================================
                           B   588    
005E2B F3C8                B   589    intellimouse_seq	db 0f3h,200
005E2D F364                B   590    					db 0f3h,100
005E2F F350                B   591    					db 0f3h,80
                           B   592    
005E31 E803                B   593    mouse_settings_seq	db 0e8h,default_resolution
005E33 E6                  B   594    					db default_scaling
005E34 F364                B   595    					db 0f3h,default_sample_rate
005E36 F4                  B   596    					db 0f4h
                           B   597    					
                           B   598    ;----------------------------------------------
                           B   599    ; FILE SYSTEM RELATED VARIABLES
                           B   600    ;----------------------------------------------
                           B   601    
005E37 00                  B   602    boot_drive			db 0
                           B   603    
005E38 00                  B   604    current_volume		db 0
                           B   605    	
005E39 00                  B   606    current_driver		db 0			;normally u
                           B   607    
005E3A 00                  B   608    device_count		db 0			;IE: the nu
                           B   609    
005E3B 00                  B   610    volume_count		db 0
                           B   611    				
005E3C 20564F4C 303A00     B   612    vol_txt				db " VOL0:",0	;space pref
005E43 44455630 3A00       B   613    dev_txt				db "DEV0:",0
                           B   614    
005E49 000000              B   615    sector_rd_wr_addr	dw24 0
                           B   616    
                           B   617    ;==============================================
                           B   618    
                           B   619    ; Add storage device drivers here, end with 0
                           B   620    
005E4C 203500              B   621    driver_table		dw24 sd_card_driver	;Device
005E4F 000000              B   622    					dw24 0				;last d
                           B   623    
                           B   624    ; Each driver's code should have a header in th
                           B   625    ; ---------------------------------------------
                           B   626    ; $0    = JP to get ID routin
                           B   627    ; $4    = JP to read sector routine
                           B   628    ; $8    = JP to write sector routinee
                           B   629    ; $c    = ASCII name of device type (null termi
                           B   630    ;==============================================
                           B   631    
005E52                     B   632    volume_dir_clusters
                           B   633    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005E52 00 00 00 00 00 00   B   634    					blkb max_volumes*3,0
005E58 00 00 00 00 00 00 
005E5E 00 00 00 00 00 00 
005E64 00 00 00 00 00 00 
                           B   635    	
005E6A                     B   636    volume_mount_list
                           B   637    
005E6A 00 00 00 00 00 00   B   638    					blkb max_volumes*16,0
005E70 00 00 00 00 00 00 
005E76 00 00 00 00 00 00 
005E7C 00 00 00 00 00 00 
005E82 00 00 00 00 00 00 
005E88 00 00 00 00 00 00 
005E8E 00 00 00 00 00 00 
005E94 00 00 00 00 00 00 
005E9A 00 00 00 00 00 00 
005EA0 00 00 00 00 00 00 
005EA6 00 00 00 00 00 00 
005EAC 00 00 00 00 00 00 
005EB2 00 00 00 00 00 00 
005EB8 00 00 00 00 00 00 
005EBE 00 00 00 00 00 00 
005EC4 00 00 00 00 00 00 
005ECA 00 00 00 00 00 00 
005ED0 00 00 00 00 00 00 
005ED6 00 00 00 00 00 00 
005EDC 00 00 00 00 00 00 
005EE2 00 00 00 00 00 00 
005EE8 00 00 
                           B   639    
                           B   640    ; Each entry is 16 bytes in the form:
                           B   641    
                           B   642    ; OFFSETS
                           B   643    ; -------
                           B   644    ; $00 - Volume is present (0/1)
                           B   645    ; $01 - Volume's host driver number (1 byte)	                           B   646    ; $02 - [reserved]
                           B   647    ; $03 - [reserved]
                           B   648    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   649    ; $07 - Partition number on host drive (0/1/2/3
                           B   650    ; $08 - Offset in sectors from MBR to partition
                           B   651    ; $0c - [reserved]
                           B   652    ; $0d - [reserved]	
                           B   653    ; $0e - [reserved]
                           B   654    ; $0f - [reserved]
                           B   655    
                           B   656    ;==============================================
                           B   657    
005EEA                     B   658    host_device_hardware_info
                           B   659    
005EEA 00 00 00 00 00 00   B   660    					blkb 32*4,0
005EF0 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005EF6 00 00 00 00 00 00 
005EFC 00 00 00 00 00 00 
005F02 00 00 00 00 00 00 
005F08 00 00 00 00 00 00 
005F0E 00 00 00 00 00 00 
005F14 00 00 00 00 00 00 
005F1A 00 00 00 00 00 00 
005F20 00 00 00 00 00 00 
005F26 00 00 00 00 00 00 
005F2C 00 00 00 00 00 00 
005F32 00 00 00 00 00 00 
005F38 00 00 00 00 00 00 
005F3E 00 00 00 00 00 00 
005F44 00 00 00 00 00 00 
005F4A 00 00 00 00 00 00 
005F50 00 00 00 00 00 00 
005F56 00 00 00 00 00 00 
005F5C 00 00 00 00 00 00 
005F62 00 00 00 00 00 00 
005F68 00 00 
                           B   661    
                           B   662    ; Each entry is 32 bytes..
                           B   663    ;
                           B   664    ; OFFSETS
                           B   665    ; -------
                           B   666    ; $00 - Device driver number
                           B   667    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   668    ; $05 - Zero terminated hardware name (22 ASCII
                           B   669    ; (remaining bytes to $1F currently unused)
                           B   670    
                           B   671    ;----------------------------------------------
                           B   672    
005F6A 000000              B   673    dhwn_temp_pointer		dw24 0
                           B   674    
005F6D 00                  B   675    partition_temp			db 0
005F6E 00                  B   676    vols_on_device_temp		db 0
005F6F 00                  B   677    sys_driver_backup		db 0
005F70 00                  B   678    os_quiet_mode			db 0
                           B   679    
005F71 806800              B   680    default_load_addr		dw24 os_max_addr
                           B   681    
                           B   682    ;----------------------------------------------
                           B   683    
005F74 00 00 00 00 00 00   B   684    time_data				blkb	7,0
005F7A 00 
                           B   685    
005F7B 00                  B   686    frozen					db 0
005F7C 01                  B   687    first_run				db 1
005F7D 01                  B   688    devices_connected		db 1					                           B   689    
                           B   690    ;----------------------------------------------
                           B   691    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F7E 806800              B   692    sys_ram_high			dw24 os_max_addr
005F81 000080              B   693    vram_a_high				dw24 vram_a_addr
005F84 0000C0              B   694    vram_b_high				dw24 vram_b_addr
                           B   695    
                           B   696    ;----------------------------------------------
                           B   697    
005F87 00                  B   698    store_a1				db 0		
005F88 000000              B   699    store_bc1				dw24 0
005F8B 000000              B   700    store_de1				dw24 0
005F8E 000000              B   701    store_hl1				dw24 0
005F91 00                  B   702    store_a2				db 0
005F92 000000              B   703    store_bc2				dw24 0
005F95 000000              B   704    store_de2				dw24 0
005F98 000000              B   705    store_hl2				dw24 0
005F9B 000000              B   706    store_ix				dw24 0
005F9E 000000              B   707    store_iy				dw24 0
005FA1 000000              B   708    store_pc				dw24 0		;only relev
005FA4 000000              B   709    store_spl				dw24 0
005FA7 0000                B   710    store_sps				dw 0
005FA9 00                  B   711    store_mbase				db 0
005FAA 00                  B   712    store_f	 				db 0
005FAB 00                  B   713    store_adl				db 0
                           B   714    
                           B   715    ;----------------------------------------------
005FAC                     B   716    os_variables
                           B   717    ;----------------------------------------------
                           B   718    
005FAC 00                  B   719    store_registers			db 0
005FAD 000000              B   720    com_start_addr			dw24 0
                           B   721    
005FB0 00 00 00 00 00 00   B   722    temp_string				blkb max_buffer_chars+2
005FB6 00 00 00 00 00 00 
005FBC 00 00 00 00 00 00 
005FC2 00 00 00 00 00 00 
005FC8 00 00 00 00 00 00 
005FCE 00 00 00 00 00 00 
005FD4 00 00 00 00 00 00 
005FDA 00 00 00 00 00 00 
005FE0 00 00 00 00 00 00 
005FE6 00 00 00 00 00 00 
005FEC 00 00 00 00 00 00 
005FF2 00 00 00 00 00 00 
005FF8 00 00 00 00 00 00 
005FFE 00 00 00 00 
006002 00 00 00 00 00 00   B   723    script_fn				blkb 13,0
006008 00 00 00 00 00 00 
00600E 00 
                           B   724    
00600F 00                  B   725    sector_lba0				db 0			; keep 
006010 00                  B   726    sector_lba1				db 0
006011 00                  B   727    sector_lba2				db 0
006012 00                  B   728    sector_lba3				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   729    
                           B   730    ;----------------------------------------------
                           B   731    
006013 000000              B   732    cursor_pos				dw24 0			; 3rd b
                           B   733    
       00006013            B   734    cursor_y 				equ cursor_pos
       00006014            B   735    cursor_x 				equ cursor_pos+1
                           B   736    						
006016 00                  B   737    cursorflashtimer		db 0
006017 00                  B   738    cursor_status			db 0
006018 00                  B   739    os_linecount			db 0
                           B   740    		
006019 000000              B   741    mem_mon_addr			dw24 0
00601C 000000              B   742    cmdop_start_address		dw24 0
00601F 000000              B   743    cmdop_end_address		dw24 0
006022 000000              B   744    copy_dest_address		dw24 0
006025 000000              B   745    hex_address				dw24 0
                           B   746    
006028 000000              B   747    find_hexstringascii 	dw24 0
00602B 000000              B   748    xrr_temp				dw24 0
00602E 00                  B   749    temphex					db 0
00602F 00                  B   750    fillbyte				db 0 
006030 00                  B   751    ui_im_cache				db 0
                           B   752    
006031 00 00 00 00 00 00   B   753    commandstring			blkb max_buffer_chars+2
006037 00 00 00 00 00 00 
00603D 00 00 00 00 00 00 
006043 00 00 00 00 00 00 
006049 00 00 00 00 00 00 
00604F 00 00 00 00 00 00 
006055 00 00 00 00 00 00 
00605B 00 00 00 00 00 00 
006061 00 00 00 00 00 00 
006067 00 00 00 00 00 00 
00606D 00 00 00 00 00 00 
006073 00 00 00 00 00 00 
006079 00 00 00 00 00 00 
00607F 00 00 00 00 
006083 00 00 00 00 00 00   B   754    output_line				blkb max_buffer_chars+2
006089 00 00 00 00 00 00 
00608F 00 00 00 00 00 00 
006095 00 00 00 00 00 00 
00609B 00 00 00 00 00 00 
0060A1 00 00 00 00 00 00 
0060A7 00 00 00 00 00 00 
0060AD 00 00 00 00 00 00 
0060B3 00 00 00 00 00 00 
0060B9 00 00 00 00 00 00 
0060BF 00 00 00 00 00 00 
0060C5 00 00 00 00 00 00 
0060CB 00 00 00 00 00 00 
0060D1 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   755    				
0060D5 000000              B   756    os_args_loc				dw24 0
0060D8 000000              B   757    os_args_pos_cache		dw24 0
                           B   758    
0060DB 000000              B   759    os_dir_block_cache  	dw24 0
0060DE 000000              B   760    os_extcmd_jmp_addr		dw24 0
                           B   761    
0060E1 00                  B   762    in_script_flag			db 0
0060E2 000000              B   763    script_dir				dw24 0
0060E5 00 00 00 00 00 00   B   764    script_buffer			blkb max_buffer_chars+2
0060EB 00 00 00 00 00 00 
0060F1 00 00 00 00 00 00 
0060F7 00 00 00 00 00 00 
0060FD 00 00 00 00 00 00 
006103 00 00 00 00 00 00 
006109 00 00 00 00 00 00 
00610F 00 00 00 00 00 00 
006115 00 00 00 00 00 00 
00611B 00 00 00 00 00 00 
006121 00 00 00 00 00 00 
006127 00 00 00 00 00 00 
00612D 00 00 00 00 00 00 
006133 00 00 00 00 
006137 000000              B   765    script_file_offset		dw24 0
00613A 000000              B   766    script_buffer_offset	dw24 0
00613D 000000              B   767    script_orig_dir			dw24 0
                           B   768    
006140 0000                B   769    char_to_print			db 0,0	; zero terminat
                           B   770    
                           B   771    ;----------------------------------------------
                           B   772    ; Keyboard buffer and registers
                           B   773    ;----------------------------------------------
                           B   774    
006142 00 00 00 00 00 00   B   775    scancode_buffer			blkb 32,0
006148 00 00 00 00 00 00 
00614E 00 00 00 00 00 00 
006154 00 00 00 00 00 00 
00615A 00 00 00 00 00 00 
006160 00 00 
                           B   776    
006162 00                  B   777    key_buf_wr_idx			db 0
006163 00                  B   778    key_buf_rd_idx			db 0
006164 00                  B   779    key_release_mode		db 0		
006165 00                  B   780    not_currently_used		db 0
006166 00                  B   781    key_mod_flags			db 0
006167 00                  B   782    insert_mode				db 0
006168 00                  B   783    current_scancode		db 0
006169 00                  B   784    current_asciicode		db 0
                           B   785    
                           B   786    ;----------------------------------------------
                           B   787    ; Mouse related registers
                           B   788    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   789    
00616A 00                  B   790    mouse_id				db 0
00616B 00                  B   791    mouse_packet_size		db 0
                           B   792    
00616C 00 00 00 00         B   793    mouse_packet			blkb 4,0			; t
006170 00                  B   794    mouse_packet_index		db 0				;
006171 00                  B   795    mouse_buttons			db 0				;
006172 000000              B   796    mouse_disp_x			dw24 0				; c
006175 000000              B   797    mouse_disp_y			dw24 0				; c
006178 00                  B   798    mouse_wheel				db 0				; m
006179 00                  B   799    mouse_updated			db 0
                           B   800    
00617A 000000              B   801    mouse_window_size_x		dw24 0				; t
00617D 000000              B   802    mouse_window_size_y		dw24 0
006180 000000              B   803    mouse_abs_x				dw24 0
006183 000000              B   804    mouse_abs_y				dw24 0
006186 000000              B   805    mouse_disp_x_old		dw24 0
006189 000000              B   806    mouse_disp_y_old		dw24 0
00618C 000000              B   807    mouse_disp_x_buffer		dw24 0
00618F 000000              B   808    mouse_disp_y_buffer		dw24 0
006192 00                  B   809    mouse_new_window		db 0
                           B   810    
                           B   811    ;----------------------------------------------
       00006013            B   812    first_os_var			equ cursor_y
006193 00                  B   813    last_os_var				db 0
                           B   814    ;----------------------------------------------
                           B   815    
                           B   816    ;==============================================
                           B   817    ; Environment variables
                           B   818    ;==============================================
                           B   819    
006194 4552524F 523D3030   B   820    envar_list				db "ERROR=00",0
00619C 00 
00619D FF                  B   821    first_ext_ev_entry		db 0ffh
00619E 00 00 00 00 00 00   B   822    						blkb envar_buffer_size,
0061A4 00 00 00 00 00 00 
0061AA 00 00 00 00 00 00 
0061B0 00 00 00 00 00 00 
0061B6 00 00 00 00 00 00 
0061BC 00 00 00 00 00 00 
0061C2 00 00 00 00 00 00 
0061C8 00 00 00 00 00 00 
0061CE 00 00 00 00 00 00 
0061D4 00 00 00 00 00 00 
0061DA 00 00 00 00 00 00 
0061E0 00 00 00 00 00 00 
0061E6 00 00 00 00 00 00 
0061EC 00 00 00 00 00 00 
0061F2 00 00 00 00 00 00 
0061F8 00 00 00 00 00 00 
0061FE 00 00 00 00 00 00 
006204 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00620A 00 00 00 00 00 00 
006210 00 00 00 00 00 00 
006216 00 00 00 00 00 00 
00621C 00 00 00 00 00 00 
006222 00 00 00 00 00 00 
006228 00 00 00 00 00 00 
00622E 00 00 00 00 00 00 
006234 00 00 00 00 00 00 
00623A 00 00 00 00 00 00 
006240 00 00 00 00 00 00 
006246 00 00 00 00 00 00 
00624C 00 00 00 00 00 00 
006252 00 00 00 00 00 00 
006258 00 00 00 00 00 00 
00625E 00 00 00 00 00 00 
006264 00 00 00 00 00 00 
00626A 00 00 00 00 00 00 
006270 00 00 00 00 00 00 
006276 00 00 00 00 00 00 
00627C 00 00 00 00 00 00 
006282 00 00 00 00 00 00 
006288 00 00 00 00 00 00 
00628E 00 00 00 00 00 00 
006294 00 00 00 00 00 00 
00629A 00 00 00 00 
                           B   823    
00629E 9D6100              B   824    envar_top_loc			dw24 first_ext_ev_entry
                           B   825    
                           B   826    ;==============================================
                           B   827    
                           B     0    	include		'prose_font_packed.asm'
0062A1                     B     1    packed_font_start:
0062A1 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
0062A9 00181800 EEEE6601 
0062B1 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
0062B9 6C00187E E07C0EFC 
0062C1 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
0062C9 C60078EC EC78EDEE 
0062D1 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
0062D9 18300160 03301800 
0062E1 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
0062E9 105438FE 38541000 
0062F1 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
0062F9 07383870 0100037E 
006301 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
006309 0E1C3870 E0007CE6 
006311 EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
006319 0138047C 007CEE0E 
006321 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
006329 0C0ECE7C 001E3E76 
006331 E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
006339 010E03FC 007EE0FC 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
006341 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
006349 18013803 007CE6E6 
006351 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
006359 037E0E7C 01000318 
006361 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
006369 30003030 600E1C38 
006371 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
006379 007E0100 0370381C 
006381 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
006389 3C380038 007CE601 
006391 EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
006399 FE01E603 00FCE6E6 
0063A1 FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
0063A9 E003E67C 00FC01E6 
0063B1 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
0063B9 E0FE00FE E0E0F801 
0063C1 E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
0063C9 E67C0001 E603FE01 
0063D1 E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
0063D9 007E011C 04DC7800 
0063E1 E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
0063E9 01E006FE 00C6EEFE 
0063F1 D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
0063F9 FEEEE6E6 007C01E6 
006401 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
006409 E0E0007C 01E603EA 
006411 EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
006419 E6E6007C EEE07C0E 
006421 EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
006429 01E6067C 0001E605 
006431 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
006439 6C00E6E6 6C3874E6 
006441 E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
006449 00FE0E1C 3870E0FE 
006451 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
006459 E070381C 0E060078 
006461 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
006469 C601000B FE381C01 
006471 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
006479 00E0E0FC E6E6FC01 
006481 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
006489 0006067E E6E67E01 
006491 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
006499 003E70FC 01700301 
0064A1 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
0064A9 00E0E0FC 01E60300 
0064B1 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
0064B9 001C0001 1C047800 
0064C1 E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
0064C9 78013804 7C010003 
0064D1 ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
0064D9 FC01E604 0100037C 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
0064E1 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
0064E9 E6E6FCE0 E000007E 
0064F1 E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
0064F9 E601E003 0100037E 
006501 F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
006509 0138031E 01000301 
006511 E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
006519 036C3801 0003E2EA 
006521 FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
006529 387CE601 000301E6 
006531 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
006539 3870FE00 3C303060 
006541 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
006549 7818180C 18187800 
006551 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
006559 070100FF 01001A1C 
006561 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
006569 297CC6BA A2BAC67C 
006571 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
006579 FF0100FF 01009C 
006580                     B    48    packed_font_end:
                           A  3104    
006580 00 00 00 00 00 00   A  3105    sector_buffer	blkb 512,0
006586 00 00 00 00 00 00 
00658C 00 00 00 00 00 00 
006592 00 00 00 00 00 00 
006598 00 00 00 00 00 00 
00659E 00 00 00 00 00 00 
0065A4 00 00 00 00 00 00 
0065AA 00 00 00 00 00 00 
0065B0 00 00 00 00 00 00 
0065B6 00 00 00 00 00 00 
0065BC 00 00 00 00 00 00 
0065C2 00 00 00 00 00 00 
0065C8 00 00 00 00 00 00 
0065CE 00 00 00 00 00 00 
0065D4 00 00 00 00 00 00 
0065DA 00 00 00 00 00 00 
0065E0 00 00 00 00 00 00 
0065E6 00 00 00 00 00 00 
0065EC 00 00 00 00 00 00 
0065F2 00 00 00 00 00 00 
0065F8 00 00 00 00 00 00 
0065FE 00 00 00 00 00 00 
006604 00 00 00 00 00 00 
00660A 00 00 00 00 00 00 
006610 00 00 00 00 00 00 
006616 00 00 00 00 00 00 
00661C 00 00 00 00 00 00 
006622 00 00 00 00 00 00 
006628 00 00 00 00 00 00 
00662E 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006634 00 00 00 00 00 00 
00663A 00 00 00 00 00 00 
006640 00 00 00 00 00 00 
006646 00 00 00 00 00 00 
00664C 00 00 00 00 00 00 
006652 00 00 00 00 00 00 
006658 00 00 00 00 00 00 
00665E 00 00 00 00 00 00 
006664 00 00 00 00 00 00 
00666A 00 00 00 00 00 00 
006670 00 00 00 00 00 00 
006676 00 00 00 00 00 00 
00667C 00 00 00 00 00 00 
006682 00 00 00 00 00 00 
006688 00 00 00 00 00 00 
00668E 00 00 00 00 00 00 
006694 00 00 00 00 00 00 
00669A 00 00 00 00 00 00 
0066A0 00 00 00 00 00 00 
0066A6 00 00 00 00 00 00 
0066AC 00 00 00 00 00 00 
0066B2 00 00 00 00 00 00 
0066B8 00 00 00 00 00 00 
0066BE 00 00 00 00 00 00 
0066C4 00 00 00 00 00 00 
0066CA 00 00 00 00 00 00 
0066D0 00 00 00 00 00 00 
0066D6 00 00 00 00 00 00 
0066DC 00 00 00 00 00 00 
0066E2 00 00 00 00 00 00 
0066E8 00 00 00 00 00 00 
0066EE 00 00 00 00 00 00 
0066F4 00 00 00 00 00 00 
0066FA 00 00 00 00 00 00 
006700 00 00 00 00 00 00 
006706 00 00 00 00 00 00 
00670C 00 00 00 00 00 00 
006712 00 00 00 00 00 00 
006718 00 00 00 00 00 00 
00671E 00 00 00 00 00 00 
006724 00 00 00 00 00 00 
00672A 00 00 00 00 00 00 
006730 00 00 00 00 00 00 
006736 00 00 00 00 00 00 
00673C 00 00 00 00 00 00 
006742 00 00 00 00 00 00 
006748 00 00 00 00 00 00 
00674E 00 00 00 00 00 00 
006754 00 00 00 00 00 00 
00675A 00 00 00 00 00 00 
006760 00 00 00 00 00 00 
006766 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00676C 00 00 00 00 00 00 
006772 00 00 00 00 00 00 
006778 00 00 00 00 00 00 
00677E 00 00 
                           A  3106    
006780 00 00 00 00 00 00   A  3107    scratch_pad		blkb 256,0
006786 00 00 00 00 00 00 
00678C 00 00 00 00 00 00 
006792 00 00 00 00 00 00 
006798 00 00 00 00 00 00 
00679E 00 00 00 00 00 00 
0067A4 00 00 00 00 00 00 
0067AA 00 00 00 00 00 00 
0067B0 00 00 00 00 00 00 
0067B6 00 00 00 00 00 00 
0067BC 00 00 00 00 00 00 
0067C2 00 00 00 00 00 00 
0067C8 00 00 00 00 00 00 
0067CE 00 00 00 00 00 00 
0067D4 00 00 00 00 00 00 
0067DA 00 00 00 00 00 00 
0067E0 00 00 00 00 00 00 
0067E6 00 00 00 00 00 00 
0067EC 00 00 00 00 00 00 
0067F2 00 00 00 00 00 00 
0067F8 00 00 00 00 00 00 
0067FE 00 00 00 00 00 00 
006804 00 00 00 00 00 00 
00680A 00 00 00 00 00 00 
006810 00 00 00 00 00 00 
006816 00 00 00 00 00 00 
00681C 00 00 00 00 00 00 
006822 00 00 00 00 00 00 
006828 00 00 00 00 00 00 
00682E 00 00 00 00 00 00 
006834 00 00 00 00 00 00 
00683A 00 00 00 00 00 00 
006840 00 00 00 00 00 00 
006846 00 00 00 00 00 00 
00684C 00 00 00 00 00 00 
006852 00 00 00 00 00 00 
006858 00 00 00 00 00 00 
00685E 00 00 00 00 00 00 
006864 00 00 00 00 00 00 
00686A 00 00 00 00 00 00 
006870 00 00 00 00 00 00 
006876 00 00 00 00 00 00 
00687C 00 00 00 00 
                           A  3108    
                           A  3109    ;==============================================
                           A  3110    	
006880 00                  A  3111    os_max_addr		db 0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)11-Jul-11     15:57:38     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3112    	
                           A  3113    				end		
                           A  3114    ;==============================================
                           A  3115    
                           A  3116    		


Errors: 0
Warnings: 0
Lines Assembled: 12246
