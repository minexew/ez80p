Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       0000002A            A    17    prose_version	equ 2Ah
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 AE 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 56 47 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 5A 51 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD 7E 2C 00         A    88    				call disable_irqs
000A5C CD 06 2E 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A 9F 52 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD 2B 34 00         A    94    				call init_keyboard
000A6B 28 06               A    95    				jr z,kb_ok
000A6D 21 A0 52 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 9F 52 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 CF 52 00         A   102    				ld hl,os_variables				000A7C 01 E7 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 2A 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 F6 50 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD 6C 33 00         A   110    				call hwsc_default_hw_settings
                           A   111    				
000A91 3A B9 50 00         A   112    				ld a,(video_mode)
000A95 CD 84 27 00         A   113    				call set_vmode					                           A   114    
000A99 21 B7 54 00         A   115    				ld hl,packed_font_start
000A9D ED5B F3 50 00       A   116    				ld de,(font_addr)
000AA2 01 DF 02 00         A   117    				ld bc,packed_font_end-packed_fo
000AA6 CD 88 15 00         A   118    				call unpack_rle
                           A   119    
000AAA 3E5F                A   120    				ld a,5fh
000AAC 32 DF 50 00         A   121    				ld (req_cursor_image),a
                           A   122    
000AB0 21 25 48 00         A   123    				ld hl,welcome_message			000AB4 CD 0C 0F 00         A   124    				call os_print_string
000AB8 CD 6D 28 00         A   125    				call os_get_mem_high			000ABC EB                  A   126    				ex de,hl
000ABD CD D7 12 00         A   127    				call os_show_hex_address
                           A   128    
000AC1 CD 97 13 00         A   129    				call os_new_line
000AC5 CD 97 13 00         A   130    				call os_new_line
000AC9 CD BD 25 00         A   131    				call os_cmd_vers				000ACD CD B1 25 00         A   132    				call os_cmd_remount				                           A   133    
000AD1 CD 97 13 00         A   134    				call os_new_line				                           A   135    
000AD5 CD E9 34 00         A   136    				call purge_keyboard
                           A   137    				
000AD9 CD 49 2C 00         A   138    				call set_irq_vector
000ADD CD 5B 2C 00         A   139    				call enable_os_irqs
000AE1 FB                  A   140    				ei
000AE2 CD EE 2D 00         A   141    				call set_nmi_vector
                           A   142    				
000AE6 21 A0 52 00         A   143    				ld hl,devices_connected			000AEA CB46                A   144    				bit 0,(hl)
000AEC 20 08               A   145    				jr nz,kb_present
000AEE 21 56 4D 00         A   146    				ld hl,no_keyboard_msg
000AF2 CD CE 13 00         A   147    				call os_show_packed_text
000AF6                     A   148    kb_present				
000AF6 21 75 48 00         A   149    				ld hl,startup_script_fn
000AFA 22 F8 53 00         A   150    				ld (os_args_loc),hl
000AFE CD EE 25 00         A   151    				call os_cmd_exec				000B02 AF                  A   152    				xor a
000B03 32 04 54 00         A   153    				ld (in_script_flag),a
                           A   154    									
000B07 3A 9E 52 00         A   155    				ld a,(frozen)					000B0B B7                  A   156    				or a
000B0C 28 11               A   157    				jr z,os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0E AF                  A   158    				xor a
000B0F 32 9E 52 00         A   159    				ld (frozen),a
000B13 21 CD 48 00         A   160    				ld hl,nmi_freeze_txt
000B17 CD 0C 0F 00         A   161    				call os_print_string
000B1B CD 08 21 00         A   162    				call os_cmd_r
                           A   163    				
                           A   164    	
                           A   165    ;==============================================
                           A   166    
000B1F                     A   167    os_main_loop
                           A   168    								
000B1F CD 5C 33 00         A   169    				call hwsc_wait_vrt				                           A   170    
000B23 CD 5D 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B27 CD B9 36 00         A   173    				call os_get_key_press
000B2B 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B2D 32 8B 54 00         A   176    				ld (current_scancode),a
000B31 78                  A   177    				ld a,b
000B32 32 8C 54 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B36 CD A4 31 00         A   180    				call hwsc_remove_cursor
000B3A 3E18                A   181    				ld a,24							000B3C 32 39 53 00         A   182    				ld (cursorflashtimer),a			000B40 AF                  A   183    				xor a
000B41 32 3A 53 00         A   184    				ld (cursor_status),a
                           A   185    				
000B45 3A 8B 54 00         A   186    				ld a,(current_scancode)			000B49 FE70                A   187    				cp 70h
000B4B 20 16               A   188    				jr nz,os_notins
000B4D 3A 8A 54 00         A   189     				ld a,(insert_mode)
000B51 EE01                A   190    				xor 1
000B53 32 8A 54 00         A   191    				ld (insert_mode),a
000B57 3E5F                A   192    				ld a,5fh
000B59 28 02               A   193    				jr z,linecurs
000B5B 3E7F                A   194    				ld a,7fh
000B5D 32 DF 50 00         A   195    linecurs		ld (req_cursor_image),a
000B61 18 BC               A   196    				jr os_main_loop
                           A   197    
000B63 21 37 53 00         A   198    os_notins		ld hl,cursor_x					000B67 FE6B                A   199    				cp 06bh			
000B69 20 0E               A   200    				jr nz,os_ntlft
000B6B 35                  A   201    				dec (hl)
000B6C 7E                  A   202    				ld a,(hl)
000B6D FEFF                A   203    				cp 0ffh	
000B6F 20 AE               A   204    				jr nz,os_main_loop
000B71 3A E4 50 00         A   205    				ld a,(window_columns)
000B75 3D                  A   206    				dec a
000B76 77                  A   207    				ld (hl),a						000B77 18 A6               A   208    				jr os_main_loop
                           A   209    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B79 FE74                A   210    os_ntlft		cp 074h							000B7B 20 0C               A   211    				jr nz,os_ntrig
000B7D 34                  A   212    				inc (hl)
000B7E 3A E4 50 00         A   213    				ld a,(window_columns)
000B82 BE                  A   214    				cp (hl)
000B83 20 9A               A   215    				jr nz,os_main_loop
000B85 3600                A   216    				ld (hl),0						000B87 18 96               A   217    				jr os_main_loop
                           A   218    
000B89 21 36 53 00         A   219    os_ntrig		ld hl,cursor_y
000B8D FE75                A   220    				cp 075h							000B8F 20 09               A   221    				jr nz,os_ntup
000B91 35                  A   222    				dec (hl)
000B92 CB7E                A   223    				bit 7,(hl)
000B94 28 89               A   224    				jr z,os_main_loop
000B96 3600                A   225    				ld (hl),0						000B98 18 85               A   226    				jr os_main_loop
                           A   227    
000B9A FE72                A   228    os_ntup			cp 072h
000B9C 20 14               A   229    				jr nz,os_ntdwn					000B9E 34                  A   230    				inc (hl)
000B9F 3A E1 50 00         A   231    				ld a,(window_rows)
000BA3 BE                  A   232    				cp (hl)
000BA4 C2 1F 0B 00         A   233    				jr nz,os_main_loop
000BA8 3D                  A   234    				dec a
000BA9 77                  A   235    				ld (hl),a						000BAA CD D3 2F 00         A   236    				call hwsc_scroll_up
000BAE C3 1F 0B 00         A   237    				jr os_main_loop
                           A   238    
000BB2 FE71                A   239    os_ntdwn		cp 071h							000BB4 20 08               A   240    				jr nz,os_nodel		
000BB6 3A 37 53 00         A   241    				ld a,(cursor_x)					000BBA 47                  A   242    				ld b,a
000BBB 04                  A   243    				inc b
000BBC 18 13               A   244    				jr os_chrbk
                           A   245    
000BBE FE66                A   246    os_nodel		cp 066h							000BC0 20 17               A   247    				jr nz,os_nbksp
000BC2 3A 37 53 00         A   248    				ld a,(cursor_x)					000BC6 B7                  A   249    				or a							000BC7 CA 1F 0B 00         A   250    				jp z,os_main_loop
000BCB 47                  A   251    				ld b,a
000BCC 3D                  A   252    				dec a
000BCD 32 37 53 00         A   253    				ld (cursor_x),a					000BD1 CD 6D 32 00         A   254    os_chrbk		call hwsc_chars_left			000BD5 C3 1F 0B 00         A   255    				jp os_main_loop
                           A   256    
000BD9 FE5A                A   257    os_nbksp		cp 05ah							000BDB CA 22 0C 00         A   258    				jp z,os_enter_pressed
                           A   259    	
000BDF 3A 8C 54 00         A   260    				ld a,(current_asciicode)		000BE3 B7                  A   261    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BE4 28 38               A   262    				jr z,os_nvdun					                           A   263    
000BE6 FE7B                A   264    				cp 07bh							000BE8 30 12               A   265    				jr nc,os_gtcha					000BEA FE61                A   266    				cp 061h
000BEC 38 04               A   267    				jr c,os_ntupc
000BEE D620                A   268    				sub 020h
000BF0 18 0A               A   269    				jr os_gtcha
000BF2 FE5B                A   270    os_ntupc		cp 05bh
000BF4 30 06               A   271    				jr nc,os_gtcha
000BF6 FE41                A   272    				cp 041h
000BF8 38 02               A   273    				jr c,os_gtcha
000BFA C620                A   274    				add a,020h
000BFC 57                  A   275    os_gtcha		ld d,a							000BFD 3A 8A 54 00         A   276    				ld a,(insert_mode)				000C01 B7                  A   277    				or a
000C02 CC B4 32 00         A   278    				call z,hwsc_chars_right
                           A   279    				
000C06 ED4B 36 53 00       A   280    os_schi			ld bc,(cursor_pos)				000C0B 7A                  A   281    				ld a,d							000C0C CD 77 30 00         A   282    				call hwsc_plot_char		
000C10 21 37 53 00         A   283    				ld hl,cursor_x					000C14 34                  A   284    				inc (hl)
000C15 3A E4 50 00         A   285    				ld a,(window_columns)
000C19 BE                  A   286    				cp (hl)							000C1A 20 02               A   287    				jr nz,os_nvdun
000C1C 3600                A   288    				ld (hl),0
                           A   289    
000C1E C3 1F 0B 00         A   290    os_nvdun		jp os_main_loop
                           A   291    	
                           A   292    
                           A   293    ;----------------------------------------------
                           A   294    
000C22                     A   295    os_enter_pressed
                           A   296    	
000C22 CD 3F 33 00         A   297    				call hwsc_charline_to_command_s
                           A   298    
000C26 AF                  A   299    				xor a
000C27 32 37 53 00         A   300    				ld (cursor_x),a					000C2B 21 36 53 00         A   301    				ld hl,cursor_y					000C2F 34                  A   302    				inc (hl)
000C30 3A E1 50 00         A   303    				ld a,(window_rows)
000C34 BE                  A   304    				cp (hl)
000C35 20 06               A   305    				jr nz,os_esdok
000C37 3D                  A   306    				dec a
000C38 77                  A   307    				ld (hl),a
000C39 CD D3 2F 00         A   308    				call hwsc_scroll_up
                           A   309    
000C3D CD 4A 0C 00         A   310    os_esdok		call os_parse_cmd_chk_ps		                           A   311    
000C41 AF                  A   312    post_csb		xor a
000C42 32 04 54 00         A   313    				ld (in_script_flag),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C46 C3 1F 0B 00         A   314    				jp os_main_loop
                           A   315    
                           A   316    	
                           A   317    ;----------------------------------------------
                           A   318    
                           A   319    
000C4A                     A   320    os_parse_cmd_chk_ps
                           A   321    
000C4A CD 5D 0C 00         A   322    				call os_parse_command_line
000C4E FEFE                A   323    				cp 0feh							000C50 C0                  A   324    				ret nz
000C51 01500000            A   325    				ld bc,max_buffer_chars			000C55 11 54 53 00         A   326    				ld de,commandstring				000C59 EDB0                A   327    				ldir
000C5B 18 ED               A   328    				jr os_parse_cmd_chk_ps
                           A   329    
                           A   330    	
                           A   331    ;----------------------------------------------
                           A   332    	
000C5D                     A   333    os_parse_command_line
                           A   334    
000C5D 3E01                A   335    				ld a,1
000C5F 32 CF 52 00         A   336    				ld (store_registers),a			                           A   337    
000C63 21 54 53 00         A   338    				ld hl,commandstring				000C67 0650                A   339    				ld b,max_buffer_chars			000C69 CD A2 0F 00         A   340    				call os_scan_for_non_space		000C6D B7                  A   341    				or a							000C6E C8                  A   342    				ret z
000C6F 11 E4 48 00         A   343    				ld de,dictionary-1				000C73 D5                  A   344    				push de
000C74 D1                  A   345    compcstr		pop de
000C75 E5                  A   346    				push hl
000C76 FDE1                A   347    				pop iy
000C78 13                  A   348    notacmd			inc de
000C79 1A                  A   349    				ld a,(de)
000C7A FE01                A   350    				cp 1							000C7C CA 16 0D 00         A   351    				jp z,os_no_kernal_command_found
000C80 CB7F                A   352    				bit 7,a
000C82 28 F4               A   353    				jr z,notacmd					000C84 E67F                A   354    				and 07fh
000C86 4F                  A   355    				ld c,a							000C87 D5                  A   356    				push de
000C88 13                  A   357    cmdnscan		inc de
000C89 FD7E00              A   358    				ld a,(iy)						000C8C CD 00 12 00         A   359    				call os_uppercasify
000C90 47                  A   360    				ld b,a
000C91 1A                  A   361    				ld a,(de)						000C92 B8                  A   362    				cp b
000C93 FD23                A   363    				inc iy
000C95 28 F1               A   364    				jr z,cmdnscan					000C97 1A                  A   365    nomatch			ld a,(de)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C98 B7                  A   366    				or a
000C99 28 04               A   367    				jr z,posmatch					000C9B CB7F                A   368    				bit 7,a			
000C9D 28 D5               A   369    				jr z,compcstr					000C9F FD7EFF              A   370    posmatch		ld a,(iy-1)						000CA2 FE20                A   371    				cp 32
000CA4 20 CE               A   372    				jr nz,compcstr					                           A   373    	
000CA6 D1                  A   374    				pop de				
000CA7 FDE5                A   375    				push iy							000CA9 E1                  A   376    				pop hl
000CAA CD A2 0F 00         A   377    				call os_scan_for_non_space
000CAE 22 F8 53 00         A   378    				ld (os_args_loc),hl				                           A   379    	
000CB2 21 4E 4E 00         A   380    				ld hl,os_cmd_locs
000CB6 11030000            A   381    				ld de,3
000CBA 51                  A   382    				ld d,c
000CBB ED5C                A   383    				mlt de							000CBD 19                  A   384    				add hl,de
000CBE ED37                A   385    				ld ix,(hl)						                           A   386    
000CC0 2A F8 53 00         A   387    				ld hl,(os_args_loc)				000CC4 CD E2 0E 00         A   388    				call os_run_command				                           A   389    
000CC8 C8                  A   390    				ret z							000CC9 B7                  A   391    				or a
000CCA 20 13               A   392    				jr nz,show_erm
000CCC 78                  A   393    os_hwe1			ld a,b							000CCD 21 E4 4B 00         A   394    os_hwerr		ld hl,hex_byte_txt		
000CD1 CD 4F 10 00         A   395    				call hexbyte_to_ascii	
000CD5 21 49 4D 00         A   396    				ld hl,hw_err_msg
000CD9 CD CE 13 00         A   397    				call os_show_packed_text
000CDD AF                  A   398    				xor a
000CDE C9                  A   399    				ret
                           A   400    
000CDF 01000000            A   401    show_erm		ld bc,0							000CE3 4F                  A   402    				ld c,a
000CE4 D680                A   403    				sub 080h						000CE6 38 11               A   404    				jr c,no_trans					000CE8 21 6A 4F 00         A   405    				ld hl,kernal_error_code_transla
000CEC CB77                A   406    				bit 6,a							000CEE 28 06               A   407    				jr z,not_fs_err					000CF0 21 76 4F 00         A   408    				ld hl,fs_error_code_translation
000CF4 D640                A   409    				sub 040h
000CF6 4F                  A   410    not_fs_err		ld c,a
000CF7 09                  A   411    				add hl,bc
000CF8 4E                  A   412    				ld c,(hl)
000CF9 0600                A   413    no_trans		ld b,0
000CFB 21 AE 4E 00         A   414    				ld hl,packed_msg_list
000CFF 7E                  A   415    findmsg			ld a,(hl)
000D00 FEFF                A   416    				cp 0ffh
000D02 C8                  A   417    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D03 23                  A   418    				inc hl
000D04 B7                  A   419    				or a
000D05 20 F8               A   420    				jr nz,findmsg					000D07 04                  A   421    				inc b
000D08 79                  A   422    				ld a,c							000D09 B8                  A   423    				cp b
000D0A 20 F3               A   424    				jr nz,findmsg
000D0C CD CE 13 00         A   425    				call os_show_packed_text
000D10 CD 97 13 00         A   426    				call os_new_line
000D14 AF                  A   427    				xor a
000D15 C9                  A   428    				ret
                           A   429    	
                           A   430    
000D16                     A   431    os_no_kernal_command_found
                           A   432    
000D16 3E30                A   433    				ld a,030h						000D18 32 63 51 00         A   434    fvolcmd			ld (vol_txt+4),a				000D1C F5                  A   435    				push af			
000D1D 11 60 51 00         A   436    				ld de,vol_txt+1		
000D21 0605                A   437    				ld b,5			
000D23 CD C6 11 00         A   438    				call os_compare_strings	
000D27 28 08               A   439    				jr z,gotvolcmd		
000D29 F1                  A   440    				pop af				
000D2A 3C                  A   441    				inc a			
000D2B FE38                A   442    				cp 030h+max_volumes		
000D2D 20 E9               A   443    				jr nz,fvolcmd		
000D2F 18 0B               A   444    				jr novolcmd		
000D31 F1                  A   445    gotvolcmd		pop af
000D32 D630                A   446    				sub 030h
000D34 CD 75 1A 00         A   447    				call os_change_volume
000D38 C3 C7 0E 00         A   448    				jp extcmderf					                           A   449    		
                           A   450    
                           A   451    
000D3C 7E                  A   452    novolcmd		ld a,(hl)						000D3D FE47                A   453    				cp 'G'							000D3F 20 29               A   454    				jr nz,not_g_cmd					000D41 23                  A   455    				inc hl
000D42 7E                  A   456    				ld a,(hl)
000D43 2B                  A   457    				dec hl
000D44 FE20                A   458    				cp ' '
000D46 20 22               A   459    				jr nz,not_g_cmd
000D48 23                  A   460    				inc hl
000D49 CD A2 0F 00         A   461    				call os_scan_for_non_space
000D4D 22 F8 53 00         A   462    				ld (os_args_loc),hl				000D51 B7                  A   463    				or a
000D52 20 04               A   464    				jr nz,gotgargs
000D54 3E1F                A   465    				ld a,01fh						000D56 18 87               A   466    				jr show_erm
000D58 CD 8E 10 00         A   467    gotgargs		call ascii_to_hex_no_scan		000D5C B7                  A   468    				or a
000D5D 20 80               A   469    				jr nz,show_erm
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D5F CD FD 2D 00         A   470    				call enable_nmi					000D63 D5                  A   471    				push de
000D64 DDE1                A   472    				pop ix			
000D66 C3 E2 0E 00         A   473    				jp os_run_command				                           A   474    				
                           A   475    				
                           A   476    
000D6A 22 F8 53 00         A   477    not_g_cmd		ld (os_args_loc),hl				000D6E 22 FB 53 00         A   478    				ld (os_args_pos_cache),hl
000D72 CD D6 0F 00         A   479    				call os_args_to_fn_append_ezp	                           A   480    	
000D76 CD E9 0E 00         A   481    				call cache_dir_block			                           A   482    
000D7A CD CC 3A 00         A   483    				call fs_check_disk_format		000D7E 38 3C               A   484    				jr c,os_ndfxc
000D80 B7                  A   485    				or a							000D81 20 39               A   486    				jr nz,os_ndfxc
                           A   487    	
000D83 CD 6E 3C 00         A   488    				call fs_open_file_command		000D87 DA CD 0C 00         A   489    				jp c,os_hwerr			 		000D8B B7                  A   490    				or a
000D8C 28 38               A   491    				jr z,os_gecmd					                           A   492    
000D8E CD 3F 3C 00         A   493    				call fs_goto_root_dir_command	000D92 21 6C 48 00         A   494    				ld hl,os_dos_cmds_txt
000D96 CD CD 44 00         A   495    				call fs_hl_to_filename
000D9A CD 1A 3C 00         A   496    				call fs_change_dir_command		000D9E DA CD 0C 00         A   497    				jp c,os_hwerr
000DA2 B7                  A   498    				or a
000DA3 20 17               A   499    				jr nz,os_ndfxc					                           A   500    	
000DA5 2A FB 53 00         A   501    				ld hl,(os_args_pos_cache)		000DA9 22 F8 53 00         A   502    				ld (os_args_loc),hl
000DAD CD D6 0F 00         A   503    				call os_args_to_fn_append_ezp	000DB1 CD 6E 3C 00         A   504    				call fs_open_file_command		000DB5 DA CD 0C 00         A   505    				jp c,os_hwerr
000DB9 B7                  A   506    				or a
000DBA 28 0A               A   507    				jr z,os_gecmd
000DBC CD F5 0E 00         A   508    os_ndfxc		call restore_dir_block			000DC0 3E0B                A   509    				ld a,0bh						000DC2 C3 DF 0C 00         A   510    				jp show_erm
                           A   511    
000DC6 2A F8 53 00         A   512    os_gecmd		ld hl,(os_args_loc)				000DCA CD A2 0F 00         A   513    				call os_scan_for_non_space		000DCE 22 F8 53 00         A   514    				ld (os_args_loc),hl
                           A   515    
000DD2 11100000            A   516    				ld de,16
000DD6 CD ED 15 00         A   517    				call os_set_load_length			000DDA 21 96 59 00         A   518    				ld hl,scratch_pad
000DDE 22 2D 47 00         A   519    				ld (fs_ez80_address),hl
000DE2 CD B9 3C 00         A   520    				call fs_read_data_command
000DE6 DA CD 0C 00         A   521    				jp c,os_hwerr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DEA B7                  A   522    				or a
000DEB C2 DF 0C 00         A   523    				jp nz,show_erm					000DEF 2A 98 59 00         A   524    				ld hl,(scratch_pad+2)
000DF3 1150524F            A   525    				ld de,04f5250h					000DF7 AF                  A   526    				xor a	
000DF8 ED52                A   527    				sbc hl,de
000DFA 28 0A               A   528    				jr z,loc_header
000DFC CD F5 0E 00         A   529    				call restore_dir_block			000E00 3E1A                A   530    				ld a,01ah						000E02 C3 DF 0C 00         A   531    				jp show_erm						                           A   532    				
000E06 3A A5 59 00         A   533    loc_header		ld a,(scratch_pad+15)			000E0A 32 CE 52 00         A   534    				ld (store_adl),a			
000E0E CD 6E 3C 00         A   535    				call fs_open_file_command		000E12 DA CD 0C 00         A   536    				jp c,os_hwerr
000E16 B7                  A   537    				or a	
000E17 20 A3               A   538    				jr nz,os_ndfxc
000E19 2A 9B 59 00         A   539    				ld hl,(scratch_pad+5)			000E1D 22 2D 47 00         A   540    				ld (fs_ez80_address),hl
000E21 ED5B A1 52 00       A   541    				ld de,(sys_ram_high)
000E26 AF                  A   542    				xor a
000E27 E5                  A   543    				push hl
000E28 ED52                A   544    				sbc hl,de
000E2A E1                  A   545    				pop hl
000E2B 30 0A               A   546    				jr nc,osmemok
000E2D CD F5 0E 00         A   547    				call restore_dir_block			000E31 3E26                A   548    				ld a,026h
000E33 C3 DF 0C 00         A   549    				jp show_erm
                           A   550    
000E37 ED5B A1 59 00       A   551    osmemok			ld de,(scratch_pad+11)			000E3C 7B                  A   552    				ld a,e
000E3D B2                  A   553    				or d
000E3E 28 14               A   554    				jr z,noprov_spec				000E40 212A0000            A   555    				ld hl,prose_version
000E44 AF                  A   556    				xor a
000E45 40ED52              A   557    				sbc.sis hl,de					000E48 30 0A               A   558    				jr nc,noprov_spec
000E4A CD F5 0E 00         A   559    				call restore_dir_block
000E4E 3E1B                A   560    				ld a,01bh						000E50 C3 DF 0C 00         A   561    				jp show_erm
                           A   562    				
000E54 CD AF 33 00         A   563    noprov_spec		call hwsc_get_version			000E58 2A A3 59 00         A   564    				ld hl,(scratch_pad+13)			000E5C EB                  A   565    				ex de,hl						000E5D 7B                  A   566    				ld a,e
000E5E B2                  A   567    				or d
000E5F 28 10               A   568    				jr z,nohwv_spec					000E61 AF                  A   569    				xor a
000E62 40ED52              A   570    				sbc.sis hl,de					000E65 30 0A               A   571    				jr nc,nohwv_spec
000E67 CD F5 0E 00         A   572    				call restore_dir_block
000E6B 3E2B                A   573    				ld a,02bh						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E6D C3 DF 0C 00         A   574    				jp show_erm
                           A   575    
000E71 ED5B 9E 59 00       A   576    nohwv_spec		ld de,(scratch_pad+8)			000E76 3A A0 59 00         A   577    				ld a,(scratch_pad+10)			000E7A B2                  A   578    				or d
000E7B B3                  A   579    				or e
000E7C 28 04               A   580    				jr z,readcode					000E7E CD ED 15 00         A   581    				call os_set_load_length			                           A   582    		
000E82 2A 9B 59 00         A   583    readcode		ld hl,(scratch_pad+5)
000E86 22 01 54 00         A   584    				ld (os_extcmd_jmp_addr),hl		000E8A CD B9 3C 00         A   585    				call fs_read_data_command
000E8E F5                  A   586    				push af
000E8F CD F5 0E 00         A   587    				call restore_dir_block			000E93 F1                  A   588    				pop af
000E94 DA CD 0C 00         A   589    				jp c,os_hwerr					000E98 B7                  A   590    				or a
000E99 C2 DF 0C 00         A   591    				jp nz,show_erm					                           A   592    	
000E9D CD FD 2D 00         A   593    				call enable_nmi					000EA1 DD2A 01 54 00       A   594    				ld ix,(os_extcmd_jmp_addr)		000EA6 2A F8 53 00         A   595    				ld hl,(os_args_loc)				000EAA C3 E2 0E 00         A   596    				jp os_run_command				                           A   597    
000EAE F5                  A   598    extcmd_return	push af							000EAF CD 6C 33 00         A   599    				call hwsc_default_hw_settings	000EB3 3A CF 52 00         A   600    				ld a,(store_registers)
000EB7 B7                  A   601    				or a
000EB8 28 06               A   602    				jr z,skp_strg
000EBA F1                  A   603    				pop af
000EBB CD 18 13 00         A   604    				call os_store_CPU_regs			000EBF F5                  A   605    				push af
000EC0 F1                  A   606    skp_strg		pop af
                           A   607    
000EC1 F5                  A   608    cntuasr			push af
000EC2 CD 06 2E 00         A   609    				call disable_nmi				000EC6 F1                  A   610    				pop af
000EC7 28 12               A   611    extcmderf		jr z,not_errc					000EC9 B7                  A   612    				or a
000ECA CA CC 0C 00         A   613    				jp z,os_hwe1					000ECE FEFF                A   614    				cp 0ffh							000ED0 CA 48 0A 00         A   615    				jp z,os_cold_start
000ED4 FEFE                A   616    				cp 0feh							000ED6 C8                  A   617    				ret z
000ED7 C3 DF 0C 00         A   618    				jp show_erm						000EDB FEFF                A   619    not_errc		cp 0ffh							000EDD CA 48 0A 00         A   620    				jp z,os_cold_start
000EE1 C9                  A   621    				ret
                           A   622    				
                           A   623    ;----------------------------------------------
                           A   624    
000EE2                     A   625    os_run_command									Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   626    	
000EE2 DD22 D0 52 00       A   627    				ld (com_start_addr),ix			000EE7 DDE9                A   628    				jp (ix)							                           A   629    
                           A   630    ;----------------------------------------------
                           A   631    
000EE9                     A   632    cache_dir_block
                           A   633    
                           A   634    	
000EE9 D5                  A   635    				push de
000EEA CD 19 1A 00         A   636    				call fs_get_dir_cluster	
000EEE ED53 FE 53 00       A   637    				ld (os_dir_block_cache),de
000EF3 D1                  A   638    				pop de	
000EF4 C9                  A   639    				ret
                           A   640    		
                           A   641    
000EF5                     A   642    restore_dir_block
                           A   643    
000EF5 D5                  A   644    				push de
000EF6 ED5B FE 53 00       A   645    				ld de,(os_dir_block_cache)
000EFB CD 25 1A 00         A   646    				call fs_update_dir_cluster
000EFF D1                  A   647    				pop de
000F00 C9                  A   648    				ret
                           A   649    		
                           A   650    ;==============================================
                           A   651    ; Routines called by command line
                           A   652    ;==============================================
                           A   653    
                           A   654    ; Set:-
                           A   655    ; HL to address of string
                           A   656    ; c = y
                           A   657    ; b = x
                           A   658    
000F01                     A   659    ext_print_string
                           A   660    
000F01 CC 51 15 00         A   661    				call z,mbase_hl
000F05 18 05               A   662    				jr os_print_string
                           A   663    
000F07                     A   664    os_print_string_cond
                           A   665    
000F07 CD CC 19 00         A   666    				call test_quiet_mode
000F0B C0                  A   667    				ret nz
                           A   668    
000F0C                     A   669    os_print_string
                           A   670    
000F0C D5                  A   671    				push de
000F0D C5                  A   672    				push bc
000F0E ED4B 36 53 00       A   673    				ld bc,(cursor_pos)				000F13 7E                  A   674    prstr_lp		ld a,(hl)
000F14 23                  A   675    				inc hl
000F15 B7                  A   676    				or a
000F16 20 09               A   677    				jr nz,prstr_ne
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F18 ED43 36 53 00       A   678    				ld (cursor_pos),bc
000F1D C1                  A   679    				pop bc
000F1E D1                  A   680    				pop de
000F1F AF                  A   681    				xor a							000F20 C9                  A   682    				ret
                           A   683    
000F21 FE0D                A   684    prstr_ne		cp 13
000F23 20 04               A   685    				jr nz,not_cr
000F25 0600                A   686    				ld b,0
000F27 18 EA               A   687    				jr prstr_lp
000F29 FE0A                A   688    not_cr			cp 10
000F2B 28 12               A   689    				jr z,line_feed				
000F2D FE0B                A   690    				cp 11
000F2F 28 0C               A   691    				jr z,next_line
000F31 CD 77 30 00         A   692    				call hwsc_plot_char
000F35 04                  A   693    				inc b
000F36 3A E4 50 00         A   694    				ld a,(window_columns)
000F3A B8                  A   695    				cp b
000F3B 20 D6               A   696    				jr nz,prstr_lp
000F3D 0600                A   697    next_line		ld b,0
000F3F 0C                  A   698    line_feed		inc c
000F40 3A E1 50 00         A   699    				ld a,(window_rows)
000F44 B9                  A   700    				cp c
000F45 20 CC               A   701    				jr nz,prstr_lp
000F47 0D                  A   702    				dec c
000F48 CD D3 2F 00         A   703    				call hwsc_scroll_up
000F4C 18 C5               A   704    				jr prstr_lp
                           A   705    
                           A   706    ;----------------------------------------------
                           A   707    
000F4E 21 63 54 00         A   708    os_print_char	ld hl,char_to_print
000F52 77                  A   709    				ld (hl),a
000F53 18 B7               A   710    				jr os_print_string
                           A   711    
                           A   712    ;----------------------------------------------
                           A   713    
000F55 F5                  A   714    home_cursor		push af
000F56 AF                  A   715    				xor a
000F57 32 37 53 00         A   716    				ld (cursor_x),a
000F5B F1                  A   717    				pop af
000F5C C9                  A   718    				ret
                           A   719    				
                           A   720    ;----------------------------------------------
                           A   721    
000F5D                     A   722    os_cursor_flash
                           A   723    
000F5D 21 39 53 00         A   724    				ld hl,cursorflashtimer
000F61 34                  A   725    				inc (hl)
000F62 7E                  A   726    				ld a,(hl)
000F63 FE19                A   727    				cp 25
000F65 C0                  A   728    				ret nz
000F66 3600                A   729    				ld (hl),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F68 3A 3A 53 00         A   730    				ld a,(cursor_status)
000F6C EE01                A   731    				xor 1
000F6E 32 3A 53 00         A   732    				ld (cursor_status),a
000F72 28 05               A   733    				jr z,no_cursor
000F74 CD B7 31 00         A   734    				call hwsc_draw_cursor			000F78 C9                  A   735    				ret
000F79 CD A4 31 00         A   736    no_cursor		call hwsc_remove_cursor
000F7D C9                  A   737    				ret
                           A   738    
                           A   739    ;----------------------------------------------
                           A   740    
000F7E                     A   741    os_refresh_screen
                           A   742    
000F7E 0E00                A   743    				ld c,0							000F80 CD 17 33 00         A   744    rs_yloop		call hwsc_redraw_ui_line
000F84 0C                  A   745    				inc c
000F85 3A E1 50 00         A   746    				ld a,(window_rows)		
000F89 B9                  A   747    				cp c
000F8A 20 F4               A   748    				jr nz,rs_yloop
000F8C C9                  A   749    				ret
                           A   750    
                           A   751    ;----------------------------------------------
                           A   752    
000F8D                     A   753    os_next_arg
                           A   754    
000F8D CD 99 0F 00         A   755    				call os_scan_for_space
000F91 B7                  A   756    				or a
000F92 C8                  A   757    				ret z
000F93 CD A2 0F 00         A   758    				call os_scan_for_non_space
000F97 B7                  A   759    				or a
000F98 C9                  A   760    				ret
                           A   761    
                           A   762    
                           A   763    ;----------------------------------------------
                           A   764    	
                           A   765    
000F99                     A   766    os_scan_for_space
                           A   767    
000F99 7E                  A   768    os_sfspl 		ld a,(hl)						000F9A B7                  A   769    				or a							000F9B C8                  A   770    				ret z
000F9C FE20                A   771    				cp ' '
000F9E C8                  A   772    				ret z
000F9F 23                  A   773    				inc hl
000FA0 18 F7               A   774    				jr os_sfspl
                           A   775    	
                           A   776    
                           A   777    ;----------------------------------------------
                           A   778    	
                           A   779    
000FA2                     A   780    os_scan_for_non_space
                           A   781    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FA2 2B                  A   782    				dec hl							000FA3 23                  A   783    os_nsplp		inc hl			
000FA4 7E                  A   784    				ld a,(hl)			
000FA5 B7                  A   785    				or a			
000FA6 C8                  A   786    				ret z							000FA7 FE20                A   787    				cp ' '
000FA9 28 F8               A   788    				jr z,os_nsplp
000FAB C9                  A   789    				ret
                           A   790    	
                           A   791    	
                           A   792    ;----------------------------------------------
                           A   793    
000FAC                     A   794    os_args_to_alt_filename
                           A   795    
000FAC CD 06 10 00         A   796    				call os_atfn_pre				000FB0 C8                  A   797    				ret z
000FB1 CD C7 44 00         A   798    				call fs_hl_to_alt_filename
000FB5 18 09               A   799    				jr os_atfrl
                           A   800    	
                           A   801    	
                           A   802    	
                           A   803    		
000FB7                     A   804    os_args_to_filename
                           A   805    
000FB7 CD 06 10 00         A   806    				call os_atfn_pre				000FBB C8                  A   807    				ret z
000FBC CD CD 44 00         A   808    				call fs_hl_to_filename	
                           A   809    
000FC0 7E                  A   810    os_atfrl		ld a,(hl)						000FC1 B7                  A   811    				or a							000FC2 28 0B               A   812    				jr z,os_cfne
000FC4 FE20                A   813    				cp 32
000FC6 28 07               A   814    				jr z,os_cfne
000FC8 FE2F                A   815    				cp 02fh
000FCA 28 03               A   816    				jr z,os_cfne
000FCC 23                  A   817    				inc hl
000FCD 18 F1               A   818    				jr os_atfrl	
000FCF 22 F8 53 00         A   819    os_cfne			ld (os_args_loc),hl				000FD3 79                  A   820    				ld a,c			
000FD4 B7                  A   821    				or a							000FD5 C9                  A   822    				ret
                           A   823    
                           A   824    
                           A   825    
                           A   826    
000FD6                     A   827    os_args_to_fn_append_ezp
                           A   828    
                           A   829    	
000FD6 CD 06 10 00         A   830    				call os_atfn_pre				000FDA C8                  A   831    				ret z
000FDB 11 D3 52 00         A   832    				ld de,temp_string
000FDF 7E                  A   833    ccmdtlp			ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FE0 B7                  A   834    				or a
000FE1 28 0D               A   835    				jr z,goteocmd
000FE3 FE20                A   836    				cp ' '
000FE5 28 09               A   837    				jr z,goteocmd
000FE7 FE2E                A   838    				cp '.'
000FE9 28 05               A   839    				jr z,goteocmd
000FEB 12                  A   840    				ld (de),a
000FEC 13                  A   841    				inc de
000FED 23                  A   842    				inc hl
000FEE 18 EF               A   843    				jr ccmdtlp
                           A   844    	
000FF0 E5                  A   845    goteocmd		push hl
000FF1 21 BF 48 00         A   846    				ld hl,ezp_extension_txt
000FF5 01050000            A   847    				ld bc,5
000FF9 EDB0                A   848    				ldir 
000FFB 21 D3 52 00         A   849    				ld hl,temp_string
000FFF CD CD 44 00         A   850    				call fs_hl_to_filename
001003 E1                  A   851    				pop hl
001004 18 BA               A   852    				jr os_atfrl
                           A   853    	
                           A   854    
                           A   855    
                           A   856    
001006                     A   857    os_atfn_pre
                           A   858    
001006 2A F8 53 00         A   859    				ld hl,(os_args_loc)				00100A CD A2 0F 00         A   860    				call os_scan_for_non_space
00100E B7                  A   861    				or a
00100F C8                  A   862    				ret z
001010 7E                  A   863    				ld a,(hl)
001011 FE2F                A   864    				cp 02fh							001013 20 01               A   865    				jr nz,notfsl1
001015 23                  A   866    				inc hl
001016 AF                  A   867    notfsl1			xor a
001017 3C                  A   868    				inc a
001018 C9                  A   869    				ret
                           A   870    
                           A   871    
                           A   872    ;--------- Number <-> String functions --------
                           A   873    
                           A   874    
001019                     A   875    os_clear_output_line
                           A   876    
001019 C5                  A   877    				push bc
00101A E5                  A   878    				push hl			
00101B 21 A6 53 00         A   879    				ld hl,output_line
00101F 01500000            A   880    				ld bc,max_buffer_chars
001023 3E20                A   881    				ld a,32
001025 CD 2A 15 00         A   882    				call os_bchl_memfill
001029 E1                  A   883    				pop hl
00102A C1                  A   884    				pop bc
00102B C9                  A   885    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   886    	
                           A   887    	
                           A   888    	
00102C                     A   889    os_skip_leading_ascii_zeros
                           A   890    
00102C 7E                  A   891    slazlp			ld a,(hl)						00102D FE30                A   892    				cp '0'							00102F C0                  A   893    				ret nz
001030 23                  A   894    				inc hl
001031 10 F9               A   895    				djnz slazlp
001033 C9                  A   896    				ret
                           A   897    	
                           A   898    
                           A   899    
001034                     A   900    os_leading_ascii_zeros_to_spaces
                           A   901    
001034 E5                  A   902    				push hl
001035 7E                  A   903    clazlp			ld a,(hl)						001036 FE30                A   904    				cp '0'							001038 20 05               A   905    				jr nz,claze	
00103A 3620                A   906    				ld (hl),' '
00103C 23                  A   907    				inc hl
00103D 10 F6               A   908    				djnz clazlp
00103F E1                  A   909    claze			pop hl
001040 C9                  A   910    				ret
                           A   911    	
                           A   912    
                           A   913    
                           A   914    		
001041                     A   915    n_hexbytes_to_ascii
                           A   916    
001041 1A                  A   917    				ld a,(de)						001042 CD 4F 10 00         A   918    				call hexbyte_to_ascii			001046 1B                  A   919    				dec de
001047 10 F8               A   920    				djnz n_hexbytes_to_ascii
001049 C9                  A   921    				ret
                           A   922    			
                           A   923    			
                           A   924    
00104A                     A   925    ext_hexbyte_to_ascii
                           A   926    
00104A CC 51 15 00         A   927    				call z,mbase_hl
00104E 7B                  A   928    				ld a,e
                           A   929    
00104F                     A   930    hexbyte_to_ascii
                           A   931    
00104F C5                  A   932    				push bc
001050 47                  A   933    				ld b,a							001051 CB3F                A   934    				srl a							001053 CB3F                A   935    				srl a
001055 CB3F                A   936    				srl a
001057 CB3F                A   937    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001059 CD 6B 10 00         A   938    				call hxdigconv
00105D 77                  A   939    				ld (hl),a
00105E 23                  A   940    				inc hl
00105F 78                  A   941    				ld a,b
001060 E60F                A   942    				and 0fh
001062 CD 6B 10 00         A   943    				call hxdigconv
001066 77                  A   944    				ld (hl),a
001067 23                  A   945    				inc hl
001068 C1                  A   946    				pop bc
001069 AF                  A   947    				xor a							00106A C9                  A   948    				ret
                           A   949    				
00106B C630                A   950    hxdigconv		add a,030h
00106D FE3A                A   951    				cp 03ah
00106F 38 02               A   952    				jr c,hxdone
001071 C607                A   953    				add a,7
001073 C9                  A   954    hxdone			ret
                           A   955    
                           A   956    
                           A   957    
                           A   958    
001074                     A   959    hexword_to_ascii	
                           A   960    
001074 7A                  A   961    				ld a,d							001075 CD 4F 10 00         A   962    				call hexbyte_to_ascii
001079 7B                  A   963    				ld a,e
00107A CD 4F 10 00         A   964    				call hexbyte_to_ascii
00107E C9                  A   965    				ret
                           A   966    	
                           A   967    
                           A   968    
                           A   969    
00107F                     A   970    ext_ascii_to_hexword
                           A   971    		
00107F CC 51 15 00         A   972    				call z,mbase_hl
                           A   973    
001083                     A   974    ascii_to_hexword
                           A   975    	
001083 CD A2 0F 00         A   976    				call os_scan_for_non_space		001087 B7                  A   977    				or a
001088 20 04               A   978    				jr nz,ascii_to_hex_no_scan
00108A 3E81                A   979    				ld a,081h						00108C B7                  A   980    				or a
00108D C9                  A   981    				ret	
                           A   982    
                           A   983    	
00108E                     A   984    ascii_to_hex_no_scan
                           A   985    
00108E DDE5                A   986    				push ix
001090 C5                  A   987    				push bc
001091 DD210000 00         A   988    				ld ix,0
001096 0606                A   989    				ld b,6							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001098 CD C4 10 00         A   990    athlp			call ascii_to_hex_digit
00109C FEF0                A   991    				cp 0f0h							00109E 28 17               A   992    				jr z,athend
0010A0 FED0                A   993    				cp 0d0h
0010A2 28 13               A   994    				jr z,athend						0010A4 FE10                A   995    				cp 16
0010A6 30 17               A   996    				jr nc,badhex					0010A8 DD29                A   997    				add ix,ix						0010AA DD29                A   998    				add ix,ix
0010AC DD29                A   999    				add ix,ix
0010AE DD29                A  1000    				add ix,ix
0010B0 DDB5                A  1001    				or a,ixl
0010B2 DD6F                A  1002    				ld ixl,a
0010B4 23                  A  1003    				inc hl
0010B5 10 E1               A  1004    				djnz athlp
0010B7 DDE5                A  1005    athend			push ix
0010B9 D1                  A  1006    				pop de
0010BA AF                  A  1007    				xor a
0010BB C1                  A  1008    ath_quit		pop bc
0010BC DDE1                A  1009    				pop ix							0010BE C9                  A  1010    				ret
                           A  1011    		
0010BF 3E82                A  1012    badhex			ld a,82h						0010C1 B7                  A  1013    				or a
0010C2 18 F7               A  1014    				jr ath_quit
                           A  1015    				
                           A  1016    	
                           A  1017    		
0010C4                     A  1018    ascii_to_hex_digit
                           A  1019    
0010C4 7E                  A  1020    				ld a,(hl)						0010C5 FE61                A  1021    				cp 061h
0010C7 38 02               A  1022    				jr c,hc_uppercase
0010C9 D620                A  1023    				sub 020h						0010CB D63A                A  1024    hc_uppercase	sub 03ah						0010CD 38 02               A  1025    				jr c,zeronine
0010CF C6F9                A  1026    				add a,0f9h
0010D1 C60A                A  1027    zeronine		add a,0ah
0010D3 C9                  A  1028    				ret
                           A  1029    
                           A  1030    
                           A  1031    ;--------- Text Input / Non-numeric string func
                           A  1032    
                           A  1033    ; Waits for user to enter a string of character
                           A  1034    ; Before calling, set:  HL = destination of str
                           A  1035    ;                        E = max number of char
                           A  1036    ; Returns:   A  = number of characters in enter
                           A  1037    
                           A  1038    
0010D4                     A  1039    ext_user_input
0010D4 CC 51 15 00         A  1040    				call z,mbase_hl
                           A  1041    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010D8                     A  1042    os_user_input
0010D8 AF                  A  1043    				xor a
0010D9 32 B4 50 00         A  1044    				ld (ui_index),a
0010DD 22 B6 50 00         A  1045    				ld (ui_string_addr),hl
0010E1 7B                  A  1046    				ld a,e
0010E2 32 B5 50 00         A  1047    				ld (ui_maxchars),a
                           A  1048    				
0010E6 3A 8A 54 00         A  1049    				ld a,(insert_mode)
0010EA 32 53 53 00         A  1050    				ld (ui_im_cache),a
0010EE AF                  A  1051    				xor a
0010EF 32 8A 54 00         A  1052    				ld (insert_mode),a				                           A  1053    				
0010F3 CD B7 31 00         A  1054    ui_loop			call hwsc_draw_cursor			0010F7 CD 72 36 00         A  1055    				call os_wait_key_press			0010FB 32 8B 54 00         A  1056    				ld (current_scancode),a
0010FF 78                  A  1057    				ld a,b
001100 32 8C 54 00         A  1058    				ld (current_asciicode),a		001104 CD A4 31 00         A  1059    				call hwsc_remove_cursor
                           A  1060    	
001108 3A 8B 54 00         A  1061    				ld a,(current_scancode)
00110C FE66                A  1062    				cp 066h							00110E 20 1F               A  1063    				jr nz,os_nuibs
001110 3A B4 50 00         A  1064    				ld a,(ui_index)
001114 B7                  A  1065    				or a
001115 28 DC               A  1066    				jr z,ui_loop					001117 21 37 53 00         A  1067    				ld hl,cursor_x					00111B 35                  A  1068    				dec (hl)						00111C 46                  A  1069    os_uixok		ld b,(hl)		
00111D 3A 36 53 00         A  1070    				ld a,(cursor_y)
001121 4F                  A  1071    				ld c,a
001122 3E20                A  1072    				ld a,32
001124 CD 77 30 00         A  1073    				call hwsc_plot_char
001128 21 B4 50 00         A  1074    				ld hl,ui_index
00112C 35                  A  1075    				dec (hl)						00112D 18 C4               A  1076    				jr ui_loop
                           A  1077    
00112F FE76                A  1078    os_nuibs		cp 076h							001131 28 5E               A  1079    				jr z,ui_aborted
001133 FE5A                A  1080    				cp 05ah							001135 28 45               A  1081    				jr z,ui_enter_pressed
                           A  1082    	
001137 3A B4 50 00         A  1083    				ld a,(ui_index)					00113B 21 B5 50 00         A  1084    				ld hl,ui_maxchars
00113F BE                  A  1085    				cp (hl)
001140 28 B1               A  1086    				jr z,ui_loop	
                           A  1087    
001142 3A 8C 54 00         A  1088    				ld a,(current_asciicode)		001146 B7                  A  1089    				or a							001147 28 AA               A  1090    				jr z,ui_loop					                           A  1091    
001149 57                  A  1092    ui_gtcha		ld d,a
00114A 2A B6 50 00         A  1093    				ld hl,(ui_string_addr)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00114E 3A B4 50 00         A  1094    				ld a,(ui_index)
001152 01000000            A  1095    				ld bc,0
001156 4F                  A  1096    				ld c,a
001157 09                  A  1097    				add hl,bc
001158 72                  A  1098    				ld (hl),d						001159 3C                  A  1099    				inc a
00115A 32 B4 50 00         A  1100    				ld (ui_index),a					                           A  1101    				
00115E ED4B 36 53 00       A  1102    				ld bc,(cursor_y)				001163 7A                  A  1103    				ld a,d
001164 CD 77 30 00         A  1104    				call hwsc_plot_char		
001168 21 37 53 00         A  1105    				ld hl,cursor_x					00116C 34                  A  1106    				inc (hl)
00116D 3A E4 50 00         A  1107    				ld a,(window_columns)			001171 BE                  A  1108    				cp (hl)
001172 C2 F3 10 00         A  1109    				jp nz,ui_loop
001176 3600                A  1110    				ld (hl),0
001178 C3 F3 10 00         A  1111    				jp ui_loop
                           A  1112    
00117C                     A  1113    ui_enter_pressed
                           A  1114    				
00117C 3A 53 53 00         A  1115    				ld a,(ui_im_cache)				001180 32 8A 54 00         A  1116    				ld (insert_mode),a
001184 3A B4 50 00         A  1117    				ld a,(ui_index)					001188 B7                  A  1118    				or a
001189 20 04               A  1119    				jr nz,ui_data
00118B 3E81                A  1120    				ld a,081h						00118D B7                  A  1121    				or a
00118E C9                  A  1122    				ret
00118F BF                  A  1123    ui_data			cp a							001190 C9                  A  1124    				ret
                           A  1125    
001191 3A 53 53 00         A  1126    ui_aborted		ld a,(ui_im_cache)				001195 32 8A 54 00         A  1127    				ld (insert_mode),a
001199 3E80                A  1128    				ld a,080h						00119B B7                  A  1129    				or a							00119C C9                  A  1130    				ret
                           A  1131    		
                           A  1132    ;----------------------------------------------
                           A  1133    	
00119D                     A  1134    os_count_lines
                           A  1135    
00119D E5                  A  1136    				push hl							00119E 0679                A  1137    				ld b,'y'						0011A0 21 3B 53 00         A  1138    				ld hl,os_linecount			
0011A4 34                  A  1139    				inc (hl)						0011A5 3A E1 50 00         A  1140    				ld a,(window_rows)
0011A9 D604                A  1141    				sub 4
0011AB BE                  A  1142    				cp (hl)
0011AC 20 0E               A  1143    				jr nz,os_nntpo
0011AE 3600                A  1144    				ld (hl),0
0011B0 21 C4 48 00         A  1145    				ld hl,os_more_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011B4 CD 0C 0F 00         A  1146    				call os_print_string
0011B8 CD 72 36 00         A  1147    				call os_wait_key_press	
0011BC E1                  A  1148    os_nntpo		pop hl
0011BD C9                  A  1149    				ret
                           A  1150    
                           A  1151    ;----------------------------------------------
                           A  1152    
0011BE                     A  1153    ext_compare_strings
                           A  1154    	
0011BE CC 51 15 00         A  1155    				call z,mbase_hl
0011C2 CC 62 15 00         A  1156    				call z,mbase_de
                           A  1157    				
0011C6                     A  1158    os_compare_strings
                           A  1159    
                           A  1160    ; both strings at HL/DE should be zero terminat
                           A  1161    ; compare will fail if string lengths are diffe
                           A  1162    ; unless count (B) is reached first
                           A  1163    ; Case is ignored
                           A  1164    ; Zero flag set on return if same
                           A  1165    
0011C6 E5                  A  1166    				push hl							0011C7 D5                  A  1167    				push de							0011C8 1A                  A  1168    ocslp			ld a,(de)						0011C9 B7                  A  1169    				or a
0011CA 28 0C               A  1170    				jr z,ocsbt
0011CC CD 09 12 00         A  1171    				call case_insensitive_compare	0011D0 20 0E               A  1172    				jr nz,ocs_diff
0011D2 13                  A  1173    				inc de
0011D3 23                  A  1174    				inc hl
0011D4 10 F2               A  1175    				djnz ocslp
0011D6 18 04               A  1176    				jr ocs_same
0011D8 1A                  A  1177    ocsbt			ld a,(de)						0011D9 B6                  A  1178    				or (hl)
0011DA 20 04               A  1179    				jr nz,ocs_diff
0011DC D1                  A  1180    ocs_same		pop de
0011DD E1                  A  1181    				pop hl
0011DE AF                  A  1182    				xor a							0011DF C9                  A  1183    				ret
0011E0 D1                  A  1184    ocs_diff		pop de
0011E1 E1                  A  1185    				pop hl
0011E2 AF                  A  1186    				xor a							0011E3 3C                  A  1187    				inc a
0011E4 C9                  A  1188    				ret
                           A  1189    
                           A  1190    
                           A  1191    ;----------------------------------------------
                           A  1192    
0011E5                     A  1193    os_copy_ascii_run
                           A  1194    
                           A  1195    ;INPUT HL = source ($00 or $20 terminates)
                           A  1196    ;      DE = dest
                           A  1197    ;       b = max chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1198    
                           A  1199    ;OUTPUT HL/DE = end of runs
                           A  1200    ;           c = char count
                           A  1201    	
0011E5 0E00                A  1202    				ld c,0
0011E7 7E                  A  1203    cpyar_lp		ld a,(hl)
0011E8 B7                  A  1204    				or a
0011E9 C8                  A  1205    				ret z
0011EA FE20                A  1206    				cp 32
0011EC C8                  A  1207    				ret z
0011ED 12                  A  1208    				ld (de),a
0011EE 23                  A  1209    				inc hl
0011EF 13                  A  1210    				inc de
0011F0 0C                  A  1211    				inc c
0011F1 10 F4               A  1212    				djnz cpyar_lp
0011F3 C9                  A  1213    				ret
                           A  1214    
                           A  1215    ;----------------------------------------------
                           A  1216    
0011F4                     A  1217    uppercasify_string
                           A  1218    
                           A  1219    ; Set HL to string location ($00 quits)
                           A  1220    ; Set B to max number of chars
                           A  1221    
0011F4 7E                  A  1222    				ld a,(hl)
0011F5 B7                  A  1223    				or a
0011F6 C8                  A  1224    				ret z
0011F7 CD 00 12 00         A  1225    				call os_uppercasify
0011FB 77                  A  1226    				ld (hl),a
0011FC 23                  A  1227    				inc hl
0011FD 10 F5               A  1228    				djnz uppercasify_string	
0011FF C9                  A  1229    				ret
                           A  1230    	
                           A  1231    
001200                     A  1232    os_uppercasify
                           A  1233    
                           A  1234    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1235    
001200 FE61                A  1236    				cp 061h			
001202 D8                  A  1237    				ret c
001203 FE7B                A  1238    				cp 07bh
001205 D0                  A  1239    				ret nc
001206 D620                A  1240    				sub 020h				
001208 C9                  A  1241    				ret
                           A  1242    
                           A  1243    ;----------------------------------------------
                           A  1244    
001209                     A  1245    case_insensitive_compare
                           A  1246    
                           A  1247    ; compares A with (HL) disregarding the case of
                           A  1248    ; Zero flag set if the characters are the same
                           A  1249    ; all registers are preserved.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1250    
001209 C5                  A  1251    				push bc					
00120A 4F                  A  1252    				ld c,a
                           A  1253    
00120B CD 00 12 00         A  1254    				call os_uppercasify				00120F 47                  A  1255    				ld b,a
001210 7E                  A  1256    				ld a,(hl)
001211 CD 00 12 00         A  1257    				call os_uppercasify
001215 B8                  A  1258    				cp b
                           A  1259    
001216 79                  A  1260    				ld a,c
001217 C1                  A  1261    				pop bc
001218 C9                  A  1262    				ret
                           A  1263    
                           A  1264    ;----------------------------------------------
                           A  1265    
001219                     A  1266    os_decimal_add
                           A  1267    
                           A  1268    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1269    
001219 C5                  A  1270    				push bc
00121A 0E00                A  1271    				ld c,0
00121C 1A                  A  1272    decdlp			ld a,(de)
00121D 86                  A  1273    				add a,(hl)
00121E 81                  A  1274    				add a,c
00121F FE0A                A  1275    				cp 10
001221 38 0B               A  1276    				jr c,daddnc
001223 D60A                A  1277    				sub 10
001225 0E01                A  1278    				ld c,1
001227 12                  A  1279    decnclp			ld (de),a
001228 23                  A  1280    				inc hl
001229 13                  A  1281    				inc de
00122A 10 F0               A  1282    				djnz decdlp
00122C C1                  A  1283    				pop bc
00122D C9                  A  1284    				ret
00122E 0E00                A  1285    daddnc			ld c,0
001230 18 F5               A  1286    				jr decnclp
                           A  1287    	
                           A  1288    ;----------------------------------------------
                           A  1289    
001232                     A  1290    os_hex_to_decimal
                           A  1291    
                           A  1292    ; INPUT xDE hex longword
                           A  1293    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1294    
       00005996            A  1295    hex_to_convert		equ scratch_pad
       00005999            A  1296    decimal_digits		equ scratch_pad+3
       000059A1            A  1297    decimal_add_digits	equ scratch_pad+3+8
                           A  1298    
001232 ED53 96 59 00       A  1299    				ld (hex_to_convert),de
                           A  1300    		
001237 21 A1 59 00         A  1301    				ld hl,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00123B E5                  A  1302    				push hl
00123C 11 99 59 00         A  1303    				ld de,decimal_digits
001240 AF                  A  1304    				xor a
001241 0608                A  1305    				ld b,8
001243 12                  A  1306    setupdec		ld (de),a
001244 77                  A  1307    				ld (hl),a
001245 23                  A  1308    				inc hl
001246 13                  A  1309    				inc de
001247 10 FA               A  1310    				djnz setupdec
001249 E1                  A  1311    				pop hl
00124A 3601                A  1312    				ld (hl),1
                           A  1313    	
00124C 21 96 59 00         A  1314    				ld hl,hex_to_convert
001250 0603                A  1315    				ld b,3
001252 C5                  A  1316    decconvlp		push bc
001253 7E                  A  1317    				ld a,(hl)
001254 CD 72 12 00         A  1318    				call decadder
001258 CD 8B 12 00         A  1319    				call decaddx16
00125C 7E                  A  1320    				ld a,(hl)
00125D 0F                  A  1321    				rrca
00125E 0F                  A  1322    				rrca
00125F 0F                  A  1323    				rrca
001260 0F                  A  1324    				rrca
001261 CD 72 12 00         A  1325    				call decadder
001265 CD 8B 12 00         A  1326    				call decaddx16
001269 C1                  A  1327    				pop bc
00126A 23                  A  1328    				inc hl
00126B 10 E5               A  1329    				djnz decconvlp
00126D 21 99 59 00         A  1330    				ld hl,decimal_digits
001271 C9                  A  1331    				ret
                           A  1332    
                           A  1333    
                           A  1334    
001272 E60F                A  1335    decadder		and 15
001274 C8                  A  1336    				ret z
001275 47                  A  1337    				ld b,a
001276 E5                  A  1338    				push hl
001277 C5                  A  1339    daddlp			push bc
001278 11 99 59 00         A  1340    				ld de,decimal_digits
00127C 21 A1 59 00         A  1341    				ld hl,decimal_add_digits
001280 0608                A  1342    				ld b,8
001282 CD 19 12 00         A  1343    				call os_decimal_add
001286 C1                  A  1344    				pop bc
001287 10 EE               A  1345    				djnz daddlp	
001289 E1                  A  1346    				pop hl
00128A C9                  A  1347    				ret
                           A  1348    			
                           A  1349    				
00128B E5                  A  1350    decaddx16		push hl
00128C 0604                A  1351    				ld b,4							00128E C5                  A  1352    x16loop			push bc
00128F 11 A1 59 00         A  1353    				ld de,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001293 21 A1 59 00         A  1354    				ld hl,decimal_add_digits
001297 0608                A  1355    				ld b,8
001299 CD 19 12 00         A  1356    				call os_decimal_add
00129D C1                  A  1357    				pop bc
00129E 10 EE               A  1358    				djnz x16loop	
0012A0 E1                  A  1359    				pop hl
0012A1 C9                  A  1360    				ret
                           A  1361    	
                           A  1362    	
                           A  1363    ;----------------------------------------------
                           A  1364    
0012A2                     A  1365    os_show_decimal
                           A  1366    
0012A2 11 A6 53 00         A  1367    				ld de,output_line				0012A6 01090000            A  1368    				ld bc,9
0012AA 09                  A  1369    				add hl,bc
0012AB 060A                A  1370    				ld b,10
0012AD 7E                  A  1371    shdeclp			ld a,(hl)
0012AE B7                  A  1372    				or a
0012AF 28 04               A  1373    				jr z,dnodigit
0012B1 C630                A  1374    				add a,030h
0012B3 12                  A  1375    				ld (de),a
0012B4 13                  A  1376    				inc de
0012B5 2B                  A  1377    dnodigit		dec hl
0012B6 10 F5               A  1378    				djnz shdeclp
0012B8 AF                  A  1379    				xor a
0012B9 12                  A  1380    				ld (de),a
0012BA CD 02 13 00         A  1381    				call os_print_output_line
0012BE C9                  A  1382    				ret
                           A  1383    				
                           A  1384    ;----------------------------------------------
                           A  1385    		
0012BF                     A  1386    os_copy_to_output_line
                           A  1387    	
0012BF D5                  A  1388    				push de
0012C0 C5                  A  1389    				push bc
0012C1 11 A6 53 00         A  1390    				ld de,output_line				0012C5 01510000            A  1391    				ld bc,max_buffer_chars+1		0012C9 EDA0                A  1392    os_cloll		ldi
0012CB 7E                  A  1393    				ld a,(hl)
0012CC B7                  A  1394    				or a
0012CD 28 04               A  1395    				jr z,os_clold
0012CF 78                  A  1396    				ld a,b
0012D0 B1                  A  1397    				or c
0012D1 20 F6               A  1398    				jr nz,os_cloll
0012D3 12                  A  1399    os_clold		ld (de),a
0012D4 C1                  A  1400    				pop bc
0012D5 D1                  A  1401    				pop de
0012D6 C9                  A  1402    				ret
                           A  1403    
                           A  1404    
                           A  1405    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1406    
0012D7                     A  1407    os_show_hex_address
                           A  1408    
0012D7 E5                  A  1409    				push hl							0012D8 21 A6 53 00         A  1410    				ld hl,output_line
0012DC ED53 48 53 00       A  1411    				ld (hex_address),de
0012E1 3A 4A 53 00         A  1412    				ld a,(hex_address+2)
0012E5 CD 4F 10 00         A  1413    				call hexbyte_to_ascii
0012E9 18 10               A  1414    				jr shw_nt
                           A  1415    				
                           A  1416    
0012EB                     A  1417    os_show_hex_byte
                           A  1418    
0012EB E5                  A  1419    				push hl							0012EC 21 A6 53 00         A  1420    				ld hl,output_line
0012F0 CD 4F 10 00         A  1421    				call hexbyte_to_ascii
0012F4 18 09               A  1422    				jr shb_nt
                           A  1423    
                           A  1424    
                           A  1425    
0012F6                     A  1426    os_show_hex_word
                           A  1427    
0012F6 E5                  A  1428    				push hl							0012F7 21 A6 53 00         A  1429    				ld hl,output_line
0012FB CD 74 10 00         A  1430    shw_nt			call hexword_to_ascii
0012FF 3600                A  1431    shb_nt			ld (hl),0
001301 E1                  A  1432    				pop hl
                           A  1433    
                           A  1434    	
                           A  1435    
001302                     A  1436    os_print_output_line
                           A  1437    
001302 E5                  A  1438    				push hl
001303 21 A6 53 00         A  1439    				ld hl,output_line
001307 CD 0C 0F 00         A  1440    cproline		call os_print_string
00130B E1                  A  1441    				pop hl
00130C C9                  A  1442    				ret
                           A  1443    
                           A  1444    
                           A  1445    
00130D                     A  1446    os_print_output_line_skip_zeroes
                           A  1447    
00130D E5                  A  1448    				push hl
00130E 21 A6 53 00         A  1449    				ld hl,output_line
001312 CD 2C 10 00         A  1450    				call os_skip_leading_ascii_zero
001316 18 EF               A  1451    				jr cproline
                           A  1452    				
                           A  1453    		
                           A  1454    ;----------------------------------------------
                           A  1455    
001318                     A  1456    os_store_CPU_regs
                           A  1457    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001318 F5                  A  1458    				push af
001319 32 AA 52 00         A  1459    				ld (store_a1),a					00131D 08                  A  1460    				ex af,af'
00131E 32 B4 52 00         A  1461    				ld (store_a2),a
001322 08                  A  1462    				ex af,af'
001323 ED43 AB 52 00       A  1463    				ld (store_bc1),bc		
001328 ED53 AE 52 00       A  1464    				ld (store_de1),de
00132D 22 B1 52 00         A  1465    				ld (store_hl1),hl
001331 D9                  A  1466    				exx
001332 ED43 B5 52 00       A  1467    				ld (store_bc2),bc
001337 ED53 B8 52 00       A  1468    				ld (store_de2),de
00133C 22 BB 52 00         A  1469    				ld (store_hl2),hl
001340 D9                  A  1470    				exx
001341 DD22 BE 52 00       A  1471    				ld (store_ix),ix
001346 FD22 C1 52 00       A  1472    				ld (store_iy),iy
00134B ED73 C7 52 00       A  1473    				ld (store_spl),sp
001350 ED6E                A  1474    			    ld a,MB
001352 32 CC 52 00         A  1475    				ld (store_mbase),a
                           A  1476    								
001356 C5                  A  1477    				push bc
001357 0600                A  1478    				ld b,0
001359 20 02               A  1479    				jr nz,zfstzero					00135B CBF0                A  1480    				set 6,b
                           A  1481    
00135D 30 02               A  1482    zfstzero		jr nc,cfstzero					00135F CBC0                A  1483    				set 0,b
                           A  1484    
001361 F2 67 13 00         A  1485    cfstzero		jp p,sfstzero					001365 CBF8                A  1486    				set 7,b
                           A  1487    
001367 EA 6D 13 00         A  1488    sfstzero		jp pe,pfstzero					00136B CBD0                A  1489    				set 2,b
                           A  1490    
00136D ED57                A  1491    pfstzero		ld a,i			
00136F EA 75 13 00         A  1492    				jp pe,ifstzero					001373 CBE0                A  1493    				set 4,b
                           A  1494    
001375 78                  A  1495    ifstzero		ld a,b
001376 32 CD 52 00         A  1496    				ld (store_f),a
                           A  1497    				
00137A 3E00                A  1498    				ld a,os_location/65536			00137C ED6D                A  1499    				ld MB,a							00137E 40ED73 CA 52        A  1500    				ld.sis (store_sps),sp
001383 3A CC 52 00         A  1501    				ld a,(store_mbase)				001387 ED6D                A  1502    				ld MB,a
                           A  1503    				
001389 C1                  A  1504    				pop bc
00138A F1                  A  1505    				pop af
00138B C9                  A  1506    				ret
                           A  1507    
                           A  1508    
                           A  1509    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00138C                     A  1510    os_dont_store_registers
                           A  1511    
00138C AF                  A  1512    				xor a
00138D 32 CF 52 00         A  1513    				ld (store_registers),a			001391 C9                  A  1514    				ret
                           A  1515    	
                           A  1516    	
                           A  1517    ;----------------------------------------------
                           A  1518    
001392                     A  1519    os_new_line_cond
                           A  1520    
001392 CD CC 19 00         A  1521    				call test_quiet_mode
001396 C0                  A  1522    				ret nz
                           A  1523    
                           A  1524    	
001397                     A  1525    os_new_line
                           A  1526    
001397 E5                  A  1527    				push hl
001398 21 DC 48 00         A  1528    				ld hl,crlfx2_txt+1
00139C CD 0C 0F 00         A  1529    				call os_print_string
0013A0 E1                  A  1530    				pop hl
0013A1 C9                  A  1531    				ret
                           A  1532    				
                           A  1533    ;----------------------------------------------
                           A  1534    
0013A2                     A  1535    os_set_cursor_position
                           A  1536    				
                           A  1537    												0013A2 3A E1 50 00         A  1538    				ld a,(window_rows)				0013A6 3D                  A  1539    				dec a							0013A7 B9                  A  1540    				cp c
0013A8 38 14               A  1541    				jr c,badpos
0013AA 79                  A  1542    				ld a,c
0013AB 32 36 53 00         A  1543    				ld (cursor_y),a
                           A  1544    				
0013AF 3A E4 50 00         A  1545    				ld a,(window_columns)
0013B3 3D                  A  1546    				dec a
0013B4 B8                  A  1547    				cp b
0013B5 38 07               A  1548    				jr c,badpos
0013B7 78                  A  1549    				ld a,b
0013B8 32 37 53 00         A  1550    				ld (cursor_x),a
0013BC AF                  A  1551    				xor a
0013BD C9                  A  1552    				ret				
                           A  1553    
0013BE 3E82                A  1554    badpos			ld a,82h
0013C0 B7                  A  1555    				or a
0013C1 C9                  A  1556    				ret
                           A  1557    
                           A  1558    
                           A  1559    					
                           A  1560    	
                           A  1561    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013C2                     A  1562    os_get_cursor_position
                           A  1563    
0013C2 ED4B 36 53 00       A  1564    				ld bc,(cursor_pos)				0013C7 BF                  A  1565    				cp a							0013C8 C9                  A  1566    				ret
                           A  1567    
                           A  1568    
                           A  1569    ;----------------------------------------------
                           A  1570    
0013C9                     A  1571    os_show_packed_text_cond
                           A  1572    
0013C9 CD CC 19 00         A  1573    				call test_quiet_mode
0013CD C0                  A  1574    				ret nz
                           A  1575    
                           A  1576    	
0013CE                     A  1577    os_show_packed_text
                           A  1578    
                           A  1579    ; Construct sentence from internal dictionary u
                           A  1580    	
0013CE C5                  A  1581    				push bc
0013CF D5                  A  1582    				push de
0013D0 DDE5                A  1583    				push ix
0013D2 DD21 A6 53 00       A  1584    				ld ix,output_line
0013D7 7E                  A  1585    readpind		ld a,(hl)
0013D8 B7                  A  1586    				or a
0013D9 20 10               A  1587    				jr nz,getword					0013DB DD2B                A  1588    				dec ix							0013DD DD7700              A  1589    				ld (ix),a						                           A  1590    			
0013E0 E5                  A  1591    				push hl
0013E1 CD 02 13 00         A  1592    				call os_print_output_line
0013E5 E1                  A  1593    				pop hl
                           A  1594    			
0013E6 DDE1                A  1595    				pop ix
0013E8 D1                  A  1596    				pop de
0013E9 C1                  A  1597    				pop bc
0013EA C9                  A  1598    				ret
                           A  1599    				
0013EB 11 E4 48 00         A  1600    getword			ld de,dictionary-1
0013EF 0E00                A  1601    				ld c,0
0013F1 13                  A  1602    dictloop		inc de
0013F2 1A                  A  1603    				ld a,(de)
0013F3 B7                  A  1604    				or a							0013F4 28 04               A  1605    				jr z,faword
0013F6 CB7F                A  1606    				bit 7,a							0013F8 28 F7               A  1607    				jr z,dictloop	
                           A  1608    			
0013FA 0C                  A  1609    faword			inc c							0013FB 79                  A  1610    				ld a,c
0013FC BE                  A  1611    				cp (hl)
0013FD 20 F2               A  1612    				jr nz,dictloop
0013FF 13                  A  1613    copytol			inc de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001400 1A                  A  1614    				ld a,(de)
001401 B7                  A  1615    				or a
001402 28 0B               A  1616    				jr z,eoword						001404 CB7F                A  1617    				bit 7,a
001406 20 07               A  1618    				jr nz,eoword
001408 DD7700              A  1619    				ld (ix),a						00140B DD23                A  1620    				inc ix
00140D 18 F0               A  1621    				jr copytol
00140F DD360020            A  1622    eoword			ld (ix),32						001413 DD23                A  1623    				inc ix
001415 23                  A  1624    				inc hl
001416 18 BF               A  1625    				jr readpind
                           A  1626    
                           A  1627    
                           A  1628    		
                           A  1629    ;--------- Mouse functions --------------------
                           A  1630    
001418                     A  1631    os_set_mouse_window
                           A  1632    
                           A  1633    ; Set: HL/DE = window size mouse pointer is to 
                           A  1634    	
001418 22 9D 54 00         A  1635    				ld (mouse_window_size_x),hl	 
00141C ED53 A0 54 00       A  1636    				ld (mouse_window_size_y),de
001421 21000000            A  1637    				ld hl,0
001425 22 A3 54 00         A  1638    				ld (mouse_abs_x),hl
001429 22 A6 54 00         A  1639    				ld (mouse_abs_y),hl
00142D 3E01                A  1640    				ld a,1
00142F 32 B5 54 00         A  1641    				ld (mouse_new_window),a
001433 AF                  A  1642    				xor a
001434 C9                  A  1643    				ret
                           A  1644    				
                           A  1645    			
001435                     A  1646    os_get_mouse_motion
                           A  1647    			
                           A  1648    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1649    ;          ZF = Not set: Mouse driver not initi
                           A  1650    			
001435 3A A0 52 00         A  1651    				ld a,(devices_connected)
001439 E602                A  1652    				and 2
00143B EE02                A  1653    				xor 2
00143D C0                  A  1654    				ret nz
00143E AF                  A  1655    ms_reread		xor a
00143F 32 9C 54 00         A  1656    				ld (mouse_updated),a
001443 2A 95 54 00         A  1657    				ld hl,(mouse_disp_x)			001447 ED5B 98 54 00       A  1658    				ld de,(mouse_disp_y)
00144C 3A 9C 54 00         A  1659    				ld a,(mouse_updated)			001450 B7                  A  1660    				or a
001451 20 EB               A  1661    				jr nz,ms_reread
001453 AF                  A  1662    mouse_end		xor a
001454 3A 9B 54 00         A  1663    				ld a,(mouse_wheel)
001458 47                  A  1664    				ld b,a
001459 3A 94 54 00         A  1665    				ld a,(mouse_buttons)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00145D C9                  A  1666    				ret
                           A  1667    			
                           A  1668    			
00145E                     A  1669    os_get_mouse_position
                           A  1670    
                           A  1671    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1672    ;          ZF = Not set: Mouse driver not initi
                           A  1673    				
00145E CD 35 14 00         A  1674    				call os_get_mouse_motion
001462 C0                  A  1675    				ret nz
001463 22 AF 54 00         A  1676    				ld (mouse_disp_x_buffer),hl
001467 ED53 B2 54 00       A  1677    				ld (mouse_disp_y_buffer),de
00146C 3A B5 54 00         A  1678    				ld a,(mouse_new_window)
001470 B7                  A  1679    				or a
001471 20 6C               A  1680    				jr nz,ms_nmw
                           A  1681    
001473 ED5B A9 54 00       A  1682    				ld de,(mouse_disp_x_old)
001478 AF                  A  1683    				xor a
001479 ED52                A  1684    				sbc hl,de
00147B EB                  A  1685    				ex de,hl
00147C 2A A3 54 00         A  1686    				ld hl,(mouse_abs_x)
001480 19                  A  1687    				add hl,de
001481 E5                  A  1688    				push hl
001482 C1                  A  1689    				pop bc
001483 DD210000 80         A  1690    				ld ix,800000h					001488 DD09                A  1691    				add ix,bc
00148A 30 06               A  1692    				jr nc,ms_x_ok1
00148C 01000000            A  1693    				ld bc,0
001490 18 10               A  1694    				jr ms_x_ok2
001492 ED5B 9D 54 00       A  1695    ms_x_ok1		ld de,(mouse_window_size_x)
001497 AF                  A  1696    				xor a
001498 ED52                A  1697    				sbc hl,de
00149A 38 06               A  1698    				jr c,ms_x_ok2
00149C ED4B 9D 54 00       A  1699    				ld bc,(mouse_window_size_x)		0014A1 0B                  A  1700    				dec bc
0014A2 ED43 A3 54 00       A  1701    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1702    					
0014A7 2A B2 54 00         A  1703    				ld hl,(mouse_disp_y_buffer)
0014AB ED5B AC 54 00       A  1704    				ld de,(mouse_disp_y_old)
0014B0 AF                  A  1705    				xor a
0014B1 ED52                A  1706    				sbc hl,de
0014B3 EB                  A  1707    				ex de,hl
0014B4 2A A6 54 00         A  1708    				ld hl,(mouse_abs_y)
0014B8 19                  A  1709    				add hl,de
0014B9 E5                  A  1710    				push hl
0014BA C1                  A  1711    				pop bc
0014BB DD210000 80         A  1712    				ld ix,800000h					0014C0 DD09                A  1713    				add ix,bc
0014C2 30 06               A  1714    				jr nc,ms_y_ok1
0014C4 01000000            A  1715    				ld bc,0
0014C8 18 10               A  1716    				jr ms_y_ok2
0014CA ED5B A0 54 00       A  1717    ms_y_ok1		ld de,(mouse_window_size_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014CF AF                  A  1718    				xor a
0014D0 ED52                A  1719    				sbc hl,de
0014D2 38 06               A  1720    				jr c,ms_y_ok2
0014D4 ED4B A0 54 00       A  1721    				ld bc,(mouse_window_size_y)		0014D9 0B                  A  1722    				dec bc
0014DA ED43 A6 54 00       A  1723    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1724    
                           A  1725    				
0014DF 2A AF 54 00         A  1726    ms_nmw			ld hl,(mouse_disp_x_buffer)
0014E3 22 A9 54 00         A  1727    				ld (mouse_disp_x_old),hl
0014E7 2A B2 54 00         A  1728    				ld hl,(mouse_disp_y_buffer)
0014EB 22 AC 54 00         A  1729    				ld (mouse_disp_y_old),hl
                           A  1730    				
0014EF 2A A3 54 00         A  1731    				ld hl,(mouse_abs_x)
0014F3 ED5B A6 54 00       A  1732    				ld de,(mouse_abs_y)
                           A  1733    				
0014F8 AF                  A  1734    				xor a
0014F9 32 B5 54 00         A  1735    				ld (mouse_new_window),a
0014FD C3 53 14 00         A  1736    				jp mouse_end
                           A  1737    				
                           A  1738    	
                           A  1739    ;==============================================
                           A  1740    ;----- General Subroutines --------------------
                           A  1741    ;==============================================
                           A  1742    
                           A  1743    ; .--------------.
                           A  1744    ; ! CRC Checksum !
                           A  1745    ; '--------------'
                           A  1746    
                           A  1747    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1748    
001501                     A  1749    crc_checksum
                           A  1750    
001501 21FFFF00            A  1751    				ld hl,0ffffh		
001505 1A                  A  1752    crcloop			ld a,(de)			
001506 AC                  A  1753    				xor h			
001507 67                  A  1754    				ld h,a			
001508 0608                A  1755    				ld b,8
00150A 4029                A  1756    crcbyte			add.sis hl,hl					00150C 30 08               A  1757    				jr nc,crcnext
00150E 7C                  A  1758    				ld a,h
00150F EE10                A  1759    				xor 10h
001511 67                  A  1760    				ld h,a
001512 7D                  A  1761    				ld a,l
001513 EE21                A  1762    				xor 21h
001515 6F                  A  1763    				ld l,a
001516 10 F2               A  1764    crcnext			djnz crcbyte
001518 13                  A  1765    				inc de
001519 0D                  A  1766    				dec c
00151A 20 E9               A  1767    				jr nz,crcloop
00151C C9                  A  1768    				ret
                           A  1769    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1770    
                           A  1771    ;----------------------------------------------
                           A  1772    
00151D                     A  1773    os_get_key_mod_flags
                           A  1774    
00151D 3A 89 54 00         A  1775    				ld a,(key_mod_flags)
001521 BF                  A  1776    				cp a							001522 C9                  A  1777    				ret
                           A  1778    
                           A  1779    ;----------------------------------------------
                           A  1780    
001523                     A  1781    os_get_display_size
                           A  1782    			
001523 ED4B E1 50 00       A  1783    				ld bc,(display_parameters)
001528 BF                  A  1784    				cp a
001529 C9                  A  1785    				ret
                           A  1786    
                           A  1787    ;----------------------------------------------
                           A  1788    
00152A                     A  1789    os_bchl_memfill
                           A  1790    
                           A  1791    ; fill memory from xHL with A. Count in xBC.
                           A  1792    		
00152A 77                  A  1793    mf_loop			ld (hl),a
00152B EDA1                A  1794    				cpi								00152D EA 2A 15 00         A  1795    				jp pe,mf_loop
001531 C9                  A  1796    				ret
                           A  1797    	
                           A  1798    ;----------------------------------------------
                           A  1799    
001532 7B                  A  1800    ext_set_pen		ld a,e
                           A  1801    
001533 32 BA 50 00         A  1802    os_set_pen		ld (current_pen),a
001537 BF                  A  1803    				cp a							001538 C9                  A  1804    				ret
                           A  1805    
                           A  1806    ;----------------------------------------------
                           A  1807    	
001539 3A BA 50 00         A  1808    os_get_pen		ld a,(current_pen)
00153D BF                  A  1809    				cp a							00153E C9                  A  1810    				ret	
                           A  1811    
                           A  1812    ;----------------------------------------------
                           A  1813    
00153F                     A  1814    ext_background_colours
                           A  1815    				
00153F CC 51 15 00         A  1816    				call z,mbase_hl
001543 C3 7E 2F 00         A  1817    				jp hswc_set_ui_colours
                           A  1818    				
                           A  1819    				
                           A  1820    ;----------------------------------------------
                           A  1821    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001547                     A  1822    os_get_xde_msb	
                           A  1823    			
001547 ED53 4E 53 00       A  1824    				ld (xrr_temp),de				00154C 3A 50 53 00         A  1825    				ld a,(xrr_temp+2)
001550 C9                  A  1826    				ret
                           A  1827    
                           A  1828    ;----------------------------------------------
                           A  1829    
001551 F5                  A  1830    mbase_hl		push af
001552 22 4E 53 00         A  1831    				ld (xrr_temp),hl				001556 ED6E                A  1832    				ld a,MB
001558 32 50 53 00         A  1833    				ld (xrr_temp+2),a
00155C 2A 4E 53 00         A  1834    				ld hl,(xrr_temp)
001560 F1                  A  1835    				pop af
001561 C9                  A  1836    				ret
                           A  1837    				
001562 F5                  A  1838    mbase_de		push af
001563 ED53 4E 53 00       A  1839    				ld (xrr_temp),de				001568 ED6E                A  1840    				ld a,MB
00156A 32 50 53 00         A  1841    				ld (xrr_temp+2),a
00156E ED5B 4E 53 00       A  1842    				ld de,(xrr_temp)
001573 F1                  A  1843    				pop af
001574 C9                  A  1844    				ret
                           A  1845    
001575 F5                  A  1846    mbase_ix		push af
001576 DD22 4E 53 00       A  1847    				ld (xrr_temp),ix				00157B ED6E                A  1848    				ld a,MB
00157D 32 50 53 00         A  1849    				ld (xrr_temp+2),a
001581 DD2A 4E 53 00       A  1850    				ld ix,(xrr_temp)
001586 F1                  A  1851    				pop af
001587 C9                  A  1852    				ret
                           A  1853    							
                           A  1854    ;----------------------------------------------
                           A  1855    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1856    ;----------------------------------------------
                           A  1857    
001588                     A  1858    unpack_rle
                           A  1859    
                           A  1860    ;set xHL = source address of packed file
                           A  1861    ;set xDE = destination address for unpacked dat
                           A  1862    ;set xBC = length of packed file
                           A  1863    
001588 E5                  A  1864    			push hl	
001589 DDE1                A  1865    			pop ix
00158B 0B                  A  1866    			dec bc								00158C 23                  A  1867    			inc hl
00158D DD7E00              A  1868    unp_gtok	ld a,(ix)							001590 BE                  A  1869    unp_next	cp (hl)								001591 28 07               A  1870    			jr z,unp_brun						001593 EDA0                A  1871    			ldi									001595 EA 90 15 00         A  1872    			jp pe,unp_next						001599 C9                  A  1873    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1874    	
00159A C5                  A  1875    unp_brun	push bc								00159B 23                  A  1876    			inc hl		
00159C 7E                  A  1877    			ld a,(hl)							00159D 23                  A  1878    			inc hl		
00159E 46                  A  1879    			ld b,(hl)							00159F 23                  A  1880    			inc hl
                           A  1881    	
0015A0 12                  A  1882    unp_rllp	ld (de),a							0015A1 13                  A  1883    			inc de			
0015A2 10 FC               A  1884    			djnz unp_rllp
                           A  1885    	
0015A4 C1                  A  1886    			pop bc	
0015A5 0B                  A  1887    			dec bc								0015A6 0B                  A  1888    			dec bc
0015A7 0B                  A  1889    			dec bc
0015A8 E5                  A  1890    			push hl								0015A9 21000000            A  1891    			ld hl,0
0015AD B7                  A  1892    			or a
0015AE ED4A                A  1893    			adc hl,bc
0015B0 E1                  A  1894    			pop hl
0015B1 20 DA               A  1895    			jr nz,unp_gtok
0015B3 C9                  A  1896    			ret	
                           A  1897    	
                           A  1898    ;----------------------------------------------
                           A  1899    ; Commonly called error messages - gets message
                           A  1900    ;----------------------------------------------
                           A  1901    
                           A  1902    
0015B4 3E0D                A  1903    os_no_fn_error		ld a,0dh
0015B6 B7                  A  1904    					or a
0015B7 C9                  A  1905    					ret
                           A  1906    			
0015B8 3E15                A  1907    os_fn_too_long		ld a,15h
0015BA B7                  A  1908    					or a
0015BB C9                  A  1909    					ret
                           A  1910    				
0015BC 3E16                A  1911    os_no_start_addr	ld a,16h
0015BE B7                  A  1912    					or a
0015BF C9                  A  1913    					ret
                           A  1914    			
0015C0 3E17                A  1915    os_no_filesize		ld a,17h
0015C2 B7                  A  1916    					or a
0015C3 C9                  A  1917    					ret
                           A  1918    			
0015C4 3E18                A  1919    os_abort_save		ld a,18h
0015C6 B7                  A  1920    					or a
0015C7 C9                  A  1921    					ret
                           A  1922    			
0015C8 3E1C                A  1923    os_no_e_addr_error	ld a,1ch
0015CA B7                  A  1924    					or a
0015CB C9                  A  1925    					ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1926    			
0015CC 3E1D                A  1927    os_no_d_addr_error	ld a,1dh
0015CE B7                  A  1928    					or a
0015CF C9                  A  1929    					ret
                           A  1930    				
0015D0 3E1E                A  1931    os_range_error		ld a,1eh
0015D2 B7                  A  1932    					or a
0015D3 C9                  A  1933    					ret
                           A  1934    			
0015D4 3E1F                A  1935    os_no_args_error	ld a,1fh
0015D6 B7                  A  1936    					or a
0015D7 C9                  A  1937    					ret	
                           A  1938    
                           A  1939    ;----------------------------------------------
                           A  1940    
                           A  1941    ; Set xHL to address of zero terminated filenam
                           A  1942    ; RETURNS:	C:xDE  = File length
                           A  1943    ;    		HL     = Start cluster of file
                           A  1944    
0015D8 CC 51 15 00         A  1945    ext_find_file	call z,mbase_hl
                           A  1946    
0015DC CD CD 44 00         A  1947    os_find_file	call fs_hl_to_filename
0015E0 CD 6E 3C 00         A  1948    				call fs_open_file_command		0015E4 38 02               A  1949    				jr c,os_fferr					0015E6 B7                  A  1950    				or a							0015E7 C9                  A  1951    				ret 		
                           A  1952    								
0015E8 47                  A  1953    os_fferr		ld b,a							0015E9 AF                  A  1954    				xor a			
0015EA 4F                  A  1955    				ld c,a
0015EB 0C                  A  1956    				inc c							0015EC C9                  A  1957    				ret	
                           A  1958    
                           A  1959    ;----------------------------------------------
                           A  1960    
0015ED                     A  1961    os_set_load_length
                           A  1962    
0015ED ED53 24 47 00       A  1963    				ld (fs_file_transfer_length),de
0015F2 BF                  A  1964    				cp a							0015F3 C9                  A  1965    				ret
                           A  1966    				
                           A  1967    ;----------------------------------------------
                           A  1968    
0015F4                     A  1969    ext_set_file_pointer
                           A  1970    
0015F4 79                  A  1971    				ld a,c
                           A  1972    				
0015F5                     A  1973    os_set_file_pointer
                           A  1974    
                           A  1975    ; Moves the 'start of file' pointer allowing ra
                           A  1976    ; Note: File pointer is reset by opening a file
                           A  1977    ; by normal read function.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1978    
0015F5 ED53 18 47 00       A  1979    				ld (fs_file_pointer),de			0015FA 32 1B 47 00         A  1980    				ld (fs_file_pointer+3),a
0015FE F5                  A  1981    				push af
0015FF AF                  A  1982    				xor a
001600 32 4A 47 00         A  1983    				ld (fs_filepointer_valid),a		001604 F1                  A  1984    				pop af
001605 BF                  A  1985    				cp a							001606 C9                  A  1986    				ret
                           A  1987    				
                           A  1988    ;----------------------------------------------
                           A  1989    
                           A  1990    ; set xHL = load address 
                           A  1991    ; (Before calling this routine, call os_find_fi
                           A  1992    
001607                     A  1993    ext_read_bytes_from_file
                           A  1994    
001607 CC 51 15 00         A  1995    				call z,mbase_hl					                           A  1996    				
00160B                     A  1997    os_read_bytes_from_file
                           A  1998    
00160B 22 2D 47 00         A  1999    				ld (fs_ez80_address),hl			00160F CD B9 3C 00         A  2000    				call fs_read_data_command
001613 38 D3               A  2001    				jr c,os_fferr
001615 B7                  A  2002    				or a
001616 C9                  A  2003    				ret
                           A  2004    
                           A  2005    ;----------------------------------------------
                           A  2006    
                           A  2007    ; Before calling, set xHL = address of zero ter
                           A  2008    
001617 CC 51 15 00         A  2009    ext_create_file	call z,mbase_hl
                           A  2010    
00161B CD CD 44 00         A  2011    os_create_file	call fs_hl_to_filename
00161F CD 6F 3F 00         A  2012    				call fs_create_file_command		001623 DA E8 15 00         A  2013    				jp c,os_fferr					001627 B7                  A  2014    				or a
001628 C9                  A  2015    				ret
                           A  2016    
                           A  2017    ;----------------------------------------------
                           A  2018    
001629                     A  2019    ext_write_bytes_to_file
                           A  2020    
001629 CC 51 15 00         A  2021    				call z,mbase_hl
00162D CC 62 15 00         A  2022    				call z,mbase_de
                           A  2023    
001631                     A  2024    os_write_bytes_to_file
                           A  2025    
                           A  2026    ; Before calling, set..
                           A  2027    
                           A  2028    ; xDE   = address to save data from
                           A  2029    ; xBC   = number of bytes to save
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2030    ; xHL   = address of null-terminated ascii name
                           A  2031    
                           A  2032    ; On return:
                           A  2033    
                           A  2034    ; If zero flag NOT set, there was an error.
                           A  2035    ; If   A = $00, b = hardware error code
                           A  2036    ; Else A = File system error code
                           A  2037    
                           A  2038    ; NOTE:
                           A  2039    ; Will return 'file not found' if the file has 
                           A  2040    				
001631 ED43 24 47 00       A  2041    				ld (fs_file_transfer_length),bc
001636 ED53 2D 47 00       A  2042    				ld (fs_ez80_address),de	 	
00163B CD CD 44 00         A  2043    				call fs_hl_to_filename
00163F CD A1 3F 00         A  2044    				call fs_write_bytes_to_file_com
001643 DA E8 15 00         A  2045    				jp c,os_fferr
001647 B7                  A  2046    				or a
001648 C9                  A  2047    				ret
                           A  2048    		
                           A  2049    		
                           A  2050    ;----------------------------------------------
                           A  2051    	
                           A  2052    
001649                     A  2053    os_check_volume_format
                           A  2054    
001649 CD CC 3A 00         A  2055    				call fs_check_disk_format
00164D DA E8 15 00         A  2056    os_rffsc		jp c,os_fferr
001651 B7                  A  2057    				or a
001652 C9                  A  2058    				ret
                           A  2059    
                           A  2060    ;----------------------------------------------
                           A  2061    
                           A  2062    
001653 7B                  A  2063    ext_format		ld a,e
001654 CC 51 15 00         A  2064    				call z,mbase_hl					                           A  2065    
001658 E5                  A  2066    os_format		push hl							001659 CD 5F 1A 00         A  2067    				call dev_to_driver_lookup
00165D E1                  A  2068    				pop hl
00165E 38 04               A  2069    				jr c,sdevok
001660 3ED0                A  2070    				ld a,0d0h						001662 B7                  A  2071    				or a
001663 C9                  A  2072    				ret
                           A  2073    
001664 F5                  A  2074    sdevok			push af				
001665 11 F4 46 00         A  2075    				ld de,fs_sought_filename
001669 CD DC 45 00         A  2076    				call fs_clear_filename
00166D 060B                A  2077    				ld b,11
00166F CD E5 11 00         A  2078    				call os_copy_ascii_run
001673 F1                  A  2079    				pop af
                           A  2080    				
001674 21 5C 51 00         A  2081    				ld hl,current_driver
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001678 46                  A  2082    				ld b,(hl)
001679 77                  A  2083    				ld (hl),a
00167A C5                  A  2084    				push bc
00167B E5                  A  2085    				push hl
00167C CD 41 39 00         A  2086    				call fs_format_device_command
001680 E1                  A  2087    				pop hl
001681 C1                  A  2088    				pop bc
001682 70                  A  2089    				ld (hl),b
001683 18 C8               A  2090    				jr os_rffsc
                           A  2091    
                           A  2092    
                           A  2093    ;----------------------------------------------
                           A  2094    
                           A  2095    
001685 CC 51 15 00         A  2096    ext_make_dir	call z,mbase_hl					                           A  2097    
001689 CD CD 44 00         A  2098    os_make_dir		call fs_hl_to_filename
00168D CD E7 3D 00         A  2099    				call fs_make_dir_command
001691 18 BA               A  2100    				jr os_rffsc
                           A  2101    
                           A  2102    
                           A  2103    ;----------------------------------------------
                           A  2104    
                           A  2105    
001693 CC 51 15 00         A  2106    ext_change_dir	call z,mbase_hl					                           A  2107    
001697 CD CD 44 00         A  2108    os_change_dir	call fs_hl_to_filename
00169B CD 1A 3C 00         A  2109    				call fs_change_dir_command
00169F 18 AC               A  2110    				jr os_rffsc
                           A  2111    				
                           A  2112    	
                           A  2113    ;----------------------------------------------
                           A  2114    	
                           A  2115    	
0016A1 CD 4B 3C 00         A  2116    os_parent_dir	call fs_parent_dir_command
0016A5 18 A6               A  2117    				jr os_rffsc
                           A  2118    				
                           A  2119    
                           A  2120    ;----------------------------------------------
                           A  2121    
                           A  2122    	
0016A7 CD 3F 3C 00         A  2123    os_root_dir		call fs_goto_root_dir_command
0016AB 18 A0               A  2124    				jr os_rffsc
                           A  2125    
                           A  2126    
                           A  2127    ;----------------------------------------------
                           A  2128    
                           A  2129    
0016AD CC 51 15 00         A  2130    ext_erase_file	call z,mbase_hl					                           A  2131    
0016B1 CD CD 44 00         A  2132    os_erase_file	call fs_hl_to_filename
0016B5 CD 30 41 00         A  2133    				call fs_erase_file_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016B9 18 92               A  2134    				jr os_rffsc
                           A  2135    	
                           A  2136    
                           A  2137    ;----------------------------------------------
                           A  2138    
                           A  2139    
0016BB                     A  2140    os_goto_first_dir_entry	
                           A  2141    
0016BB CD 8B 41 00         A  2142    				call fs_goto_first_dir_entry
0016BF 18 8C               A  2143    				jr os_rffsc
                           A  2144    
                           A  2145    
                           A  2146    ;----------------------------------------------
                           A  2147    
                           A  2148    
0016C1                     A  2149    os_get_dir_entry		
                           A  2150    
0016C1 CD A2 41 00         A  2151    				call fs_get_dir_entry	
0016C5 18 86               A  2152    				jr os_rffsc
                           A  2153    
                           A  2154    
                           A  2155    ;----------------------------------------------
                           A  2156    
                           A  2157    
0016C7                     A  2158    os_goto_next_dir_entry	
                           A  2159    	
0016C7 CD 2F 42 00         A  2160    				call fs_goto_next_dir_entry	
0016CB 18 80               A  2161    				jr os_rffsc
                           A  2162    
                           A  2163    
                           A  2164    ;----------------------------------------------
                           A  2165    
                           A  2166    
0016CD                     A  2167    os_get_current_dir_name
                           A  2168    
0016CD CD 93 45 00         A  2169    				call fs_get_current_dir_name
0016D1 C3 4D 16 00         A  2170    				jr os_rffsc
                           A  2171    				
                           A  2172    
                           A  2173    ;----------------------------------------------
                           A  2174    
                           A  2175    
0016D5 CC 51 15 00         A  2176    ext_rename_file	call z,mbase_hl
0016D9 CC 62 15 00         A  2177    				call z,mbase_de
                           A  2178    
0016DD D5                  A  2179    os_rename_file	push de
0016DE CD C7 44 00         A  2180    				call fs_hl_to_alt_filename		0016E2 E1                  A  2181    				pop hl				
0016E3 CD CD 44 00         A  2182    				call fs_hl_to_filename	
0016E7 CD 47 41 00         A  2183    				call fs_rename_command
0016EB C3 4D 16 00         A  2184    				jr os_rffsc
                           A  2185    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2186    
                           A  2187    ;----------------------------------------------
                           A  2188    
                           A  2189    
0016EF CC 51 15 00         A  2190    ext_delete_dir	call z,mbase_hl					                           A  2191    
0016F3 CD CD 44 00         A  2192    os_delete_dir	call fs_hl_to_filename
0016F7 CD C0 3E 00         A  2193    				call fs_delete_dir_command
0016FB C3 4D 16 00         A  2194    				jp os_rffsc
                           A  2195    	
                           A  2196    	
                           A  2197    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2198    
                           A  2199    
0016FF                     A  2200    ext_read_sector
0016FF CD 4A 17 00         A  2201    				call ext_sector_access_preamble
001703 C0                  A  2202    				ret nz
001704 32 5C 51 00         A  2203    				ld (current_driver),a
001708 CD 6A 46 00         A  2204    				call fs_read_sector
00170C 20 11               A  2205    				jr nz,sect_done
00170E 38 0F               A  2206    				jr c,sect_done
001710 21 96 57 00         A  2207    				ld hl,sector_buffer
001714 ED5B 6C 51 00       A  2208    				ld de,(sector_rd_wr_addr)
001719 01000200            A  2209    				ld bc,512
00171D EDB0                A  2210    				ldir			
00171F F5                  A  2211    sect_done		push af
001720 3A 92 52 00         A  2212    				ld a,(sys_driver_backup)		001724 32 5C 51 00         A  2213    				ld (current_driver),a
001728 F1                  A  2214    				pop af
001729 C3 4D 16 00         A  2215    				jp os_rffsc
                           A  2216    				
                           A  2217    
00172D                     A  2218    ext_write_sector
                           A  2219    			
00172D CD 4A 17 00         A  2220    				call ext_sector_access_preamble
001731 C0                  A  2221    				ret nz
001732 32 5C 51 00         A  2222    				ld (current_driver),a
001736 2A 6C 51 00         A  2223    				ld hl,(sector_rd_wr_addr)
00173A 11 96 57 00         A  2224    				ld de,sector_buffer
00173E 01000200            A  2225    				ld bc,512
001742 EDB0                A  2226    				ldir			
001744 CD 82 46 00         A  2227    				call fs_write_sector
001748 18 D5               A  2228    				jr sect_done
                           A  2229    
                           A  2230    
00174A                     A  2231    ext_sector_access_preamble
                           A  2232    
00174A CC 51 15 00         A  2233    				call z,mbase_hl
00174E 22 6C 51 00         A  2234    				ld (sector_rd_wr_addr),hl
                           A  2235    				
001752 78                  A  2236    				ld a,b
001753 F5                  A  2237    				push af							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001754 DD21 32 53 00       A  2238    				ld ix,sector_lba0
001759 DD1F00              A  2239    				ld (ix),de						00175C DD7103              A  2240    				ld (ix+3),c
00175F CD 5F 1A 00         A  2241    				call dev_to_driver_lookup		001763 E5                  A  2242    				push hl
001764 DDE1                A  2243    				pop ix
001766 2A 32 53 00         A  2244    				ld hl,(sector_lba0)				00176A 3A 35 53 00         A  2245    				ld a,(sector_lba3)				00176E DD0701              A  2246    				ld bc,(ix+1)					001771 B7                  A  2247    				or a							001772 ED42                A  2248    				sbc hl,bc
001774 DD9E04              A  2249    				sbc a,(ix+4)
001777 38 05               A  2250    				jr c,range_ok
001779 F1                  A  2251    				pop af
00177A 3ED5                A  2252    				ld a,0d5h						00177C B7                  A  2253    				or a							00177D C9                  A  2254    				ret
                           A  2255    	
00177E 3A 5C 51 00         A  2256    range_ok		ld a,(current_driver)
001782 32 92 52 00         A  2257    				ld (sys_driver_backup),a
001786 F1                  A  2258    				pop af							001787 CD 5F 1A 00         A  2259    				call dev_to_driver_lookup
00178B 30 02               A  2260    				jr nc,bad_dev
00178D BF                  A  2261    os_null			cp a							00178E C9                  A  2262    				ret
                           A  2263    					
00178F 3ED0                A  2264    bad_dev			ld a,0d0h						001791 B7                  A  2265    				or a							001792 C9                  A  2266    				ret	
                           A  2267    			
                           A  2268    
                           A  2269    ;----------------------------------------------
                           A  2270    
                           A  2271    
001793                     A  2272    os_get_device_info
                           A  2273    
001793 21 0D 52 00         A  2274    				ld hl,host_device_hardware_info
001797 11 6F 51 00         A  2275    				ld de,driver_table
00179B 3A 5D 51 00         A  2276    				ld a,(device_count)
00179F 47                  A  2277    				ld b,a
0017A0 3A 5C 51 00         A  2278    				ld a,(current_driver)
0017A4 BF                  A  2279    				cp a
0017A5 C9                  A  2280    				ret
                           A  2281    
                           A  2282    
                           A  2283    
                           A  2284    
0017A6                     A  2285    os_get_volume_info
                           A  2286    
0017A6 21 8D 51 00         A  2287    				ld hl,volume_mount_list	
0017AA 3A 5E 51 00         A  2288    				ld a,(volume_count)
0017AE 47                  A  2289    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017AF 3A 5B 51 00         A  2290    				ld a,(current_volume)
0017B3 C9                  A  2291    				ret
                           A  2292    				
                           A  2293    		
                           A  2294    ;----------------------------------------------
                           A  2295    
                           A  2296    
0017B4                     A  2297    ext_serial_get_header
                           A  2298    
0017B4 CC 51 15 00         A  2299    				call z,mbase_hl
0017B8 7B                  A  2300    				ld a,e
0017B9 CD D4 36 00         A  2301    				call serial_get_header
0017BD C9                  A  2302    				ret
                           A  2303    				
                           A  2304    				
0017BE                     A  2305    ext_serial_receive_file
                           A  2306    				
0017BE CC 51 15 00         A  2307    				call z,mbase_hl
0017C2 CD 6F 37 00         A  2308    				call serial_receive_file
0017C6 C9                  A  2309    				ret
                           A  2310    				
                           A  2311    	
0017C7                     A  2312    ext_serial_send_file
                           A  2313    
0017C7 CC 51 15 00         A  2314    				call z,mbase_hl
0017CB CC 75 15 00         A  2315    				call z,mbase_ix				
0017CF CD 38 38 00         A  2316    				call serial_send_file
0017D3 C9                  A  2317    				ret
                           A  2318    
                           A  2319    
0017D4                     A  2320    ext_serial_tx
0017D4 7B                  A  2321    				ld a,e
0017D5 CD 47 2E 00         A  2322    				call send_serial_byte
0017D9 AF                  A  2323    				xor a							0017DA C9                  A  2324    				ret
                           A  2325    
                           A  2326    
0017DB                     A  2327    ext_serial_rx
0017DB 7B                  A  2328    				ld a,e
0017DC 32 2B 51 00         A  2329    				ld (serial_timeout),a
0017E0 CD 0C 2E 00         A  2330    				call receive_serial_byte
0017E4 C9                  A  2331    				ret
                           A  2332    				
                           A  2333    
                           A  2334    ;----------------------------------------------
                           A  2335    
0017E5                     A  2336    ext_mount_volumes
                           A  2337    
0017E5 7B                  A  2338    				ld a,e
                           A  2339    
0017E6                     A  2340    os_mount_volumes
                           A  2341    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017E6 32 93 52 00         A  2342    				ld (os_quiet_mode),a			                           A  2343    				
0017EA 21 63 48 00         A  2344    				ld hl,storage_txt
0017EE CD 07 0F 00         A  2345    				call os_print_string_cond
0017F2 CD 1A 18 00         A  2346    				call mount_go
0017F6 AF                  A  2347    				xor a
0017F7 32 5B 51 00         A  2348    tvloop			ld (current_volume),a
0017FB CD 75 1A 00         A  2349    				call os_change_volume			0017FF C8                  A  2350    				ret z							001800 3A 5B 51 00         A  2351    				ld a,(current_volume)			001804 3C                  A  2352    				inc a
001805 FE08                A  2353    				cp max_volumes
001807 20 EE               A  2354    				jr nz,tvloop
001809 3A 5D 51 00         A  2355    				ld a,(device_count)
00180D B7                  A  2356    				or a
00180E 20 08               A  2357    				jr nz,mfsdevs
001810 21 45 4F 00         A  2358    				ld hl,none_found_msg
001814 CD C9 13 00         A  2359    				call os_show_packed_text_cond
001818 AF                  A  2360    mfsdevs			xor a
001819 C9                  A  2361    				ret
                           A  2362    
                           A  2363    
                           A  2364    
00181A 21 8D 51 00         A  2365    mount_go		ld hl,volume_mount_list			00181E 01800000            A  2366    				ld bc,max_volumes*16
001822 AF                  A  2367    clrdl_lp		xor a
001823 CD 2A 15 00         A  2368    				call os_bchl_memfill
                           A  2369    								
001827 21 75 51 00         A  2370    				ld hl,volume_dir_clusters		00182B 01180000            A  2371    				ld bc,max_volumes*3		
00182F AF                  A  2372    				xor a	
001830 CD 2A 15 00         A  2373    				call os_bchl_memfill	
                           A  2374    			
001834 11 0D 52 00         A  2375    				ld de,host_device_hardware_info
001838 ED53 8D 52 00       A  2376    				ld (dhwn_temp_pointer),de
                           A  2377    				
00183D FD21 8D 51 00       A  2378    				ld iy,volume_mount_list
001842 AF                  A  2379    				xor a
001843 32 5E 51 00         A  2380    				ld (volume_count),a
001847 32 5D 51 00         A  2381    				ld (device_count),a
00184B 32 5C 51 00         A  2382    mnt_loop		ld (current_driver),a			00184F CD EB 19 00         A  2383    				call locate_driver_base			001853 21000000            A  2384    				ld hl,0
001857 AF                  A  2385    				xor a
001858 ED5A                A  2386    				adc hl,de
00185A C8                  A  2387    				ret z							00185B EB                  A  2388    				ex de,hl						00185C FDE5                A  2389    				push iy
00185E CD 6F 18 00         A  2390    				call find_dev					001862 FDE1                A  2391    				pop iy							001864 DC 70 18 00         A  2392    				call c,got_dev		
001868 3A 5C 51 00         A  2393    nxt_drv			ld a,(current_driver)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00186C 3C                  A  2394    				inc a
00186D 18 DC               A  2395    				jr mnt_loop
                           A  2396    
                           A  2397    				
00186F E9                  A  2398    find_dev		jp (hl)
                           A  2399    			
                           A  2400    			
001870 E5                  A  2401    got_dev			push hl							001871 D5                  A  2402    				push de							001872 C5                  A  2403    				push bc
001873 CD 92 13 00         A  2404    				call os_new_line_cond			001877 015B0100            A  2405    				ld bc,015bh
00187B CD FC 19 00         A  2406    				call os_print_multiple_chars_co
00187F 3A 5C 51 00         A  2407    				ld a,(current_driver)
001883 CD EB 19 00         A  2408    				call locate_driver_base
001887 210C0000            A  2409    				ld hl,0ch
00188B 19                  A  2410    				add hl,de
00188C CD 07 0F 00         A  2411    				call os_print_string_cond		001890 015D0100            A  2412    				ld bc,015dh
001894 CD FC 19 00         A  2413    				call os_print_multiple_chars_co
001898 C1                  A  2414    				pop bc
001899 D1                  A  2415    				pop de
00189A AF                  A  2416    				xor a
00189B 32 91 52 00         A  2417    				ld (vols_on_device_temp),a
                           A  2418    				
00189F 21 5D 51 00         A  2419    				ld hl,device_count
0018A3 34                  A  2420    				inc (hl)						0018A4 3A 5C 51 00         A  2421    				ld a,(current_driver)
0018A8 2A 8D 52 00         A  2422    				ld hl,(dhwn_temp_pointer)	
0018AC 77                  A  2423    				ld (hl),a
0018AD 23                  A  2424    				inc hl
0018AE 73                  A  2425    				ld (hl),e						0018AF FD7304              A  2426    				ld (iy+4),e						0018B2 23                  A  2427    				inc hl							0018B3 72                  A  2428    				ld (hl),d
0018B4 FD7205              A  2429    				ld (iy+5),d
0018B7 23                  A  2430    				inc hl
0018B8 71                  A  2431    				ld (hl),c			
0018B9 FD7106              A  2432    				ld (iy+6),c
0018BC 23                  A  2433    				inc hl
0018BD 70                  A  2434    				ld (hl),b						0018BE 23                  A  2435    				inc hl
0018BF D1                  A  2436    				pop de
0018C0 EB                  A  2437    				ex de,hl
0018C1 01160000            A  2438    				ld bc,22
0018C5 EDB0                A  2439    				ldir							0018C7 AF                  A  2440    				xor a
0018C8 0605                A  2441    				ld b,5		
0018CA 12                  A  2442    clrrode			ld (de),a						0018CB 13                  A  2443    				inc de
0018CC 10 FC               A  2444    				djnz clrrode
0018CE ED53 8D 52 00       A  2445    				ld (dhwn_temp_pointer),de		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2446    					
0018D3 AF                  A  2447    				xor a							0018D4 FDE5                A  2448    fnxtpart		push iy
0018D6 CD 6A 3A 00         A  2449    				call fs_get_partition_info
0018DA FDE1                A  2450    				pop iy
0018DC 38 31               A  2451    				jr c,nxt_dev					0018DE FECE                A  2452    				cp 0ceh							0018E0 28 2D               A  2453    				jr z,nxt_dev
0018E2 F5                  A  2454    				push af
0018E3 FD360001            A  2455    				ld (iy),1						0018E7 3A 5C 51 00         A  2456    				ld a,(current_driver)
0018EB FD7701              A  2457    				ld (iy+1),a						0018EE 3A 90 52 00         A  2458    				ld a,(partition_temp)	
0018F2 FD7707              A  2459    				ld (iy+7),a						0018F5 F1                  A  2460    				pop af
0018F6 B7                  A  2461    				or a
0018F7 28 35               A  2462    				jr z,dev_mbr
0018F9 AF                  A  2463    				xor a
0018FA FD7708              A  2464    				ld (iy+8),a						0018FD FD7709              A  2465    				ld (iy+9),a						001900 FD770A              A  2466    				ld (iy+10),a					001903 FD770B              A  2467    				ld (iy+11),a
001906 CD 7A 19 00         A  2468    				call show_vol_info
00190A CD 6B 19 00         A  2469    				call test_max_vol
00190E C8                  A  2470    				ret z							                           A  2471    			
00190F 3A 91 52 00         A  2472    nxt_dev			ld a,(vols_on_device_temp)		001913 B7                  A  2473    				or a
001914 C0                  A  2474    				ret nz		
001915 CD CC 19 00         A  2475    				call test_quiet_mode
001919 20 06               A  2476    				jr nz,skp_cu
00191B 3E0A                A  2477    				ld a,10
00191D 32 37 53 00         A  2478    				ld (cursor_x),a
001921 21 42 4F 00         A  2479    skp_cu			ld hl,no_vols_msg				001925 CD C9 13 00         A  2480    				call os_show_packed_text_cond
001929 CD 92 13 00         A  2481    				call os_new_line_cond
00192D C9                  A  2482    				ret
                           A  2483    				
                           A  2484    			
00192E 11040000            A  2485    dev_mbr			ld de,4
001932 19                  A  2486    				add hl,de
001933 7E                  A  2487    				ld a,(hl)						001934 B7                  A  2488    				or a
001935 C8                  A  2489    				ret z							001936 19                  A  2490    				add hl,de
                           A  2491    				
001937 FDE5                A  2492    				push iy
001939 0604                A  2493    				ld b,4
00193B 7E                  A  2494    sfmbrlp			ld a,(hl)						00193C FD7708              A  2495    				ld (iy+8),a
00193F 23                  A  2496    				inc hl
001940 FD23                A  2497    				inc iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001942 10 F7               A  2498    				djnz sfmbrlp
001944 FDE1                A  2499    				pop iy
001946 FDE5                A  2500    				push iy
001948 0603                A  2501    				ld b,3	
00194A 7E                  A  2502    nsivlp			ld a,(hl)
00194B FD7704              A  2503    				ld (iy+4),a						00194E 23                  A  2504    				inc hl
00194F FD23                A  2505    				inc iy
001951 10 F7               A  2506    				djnz nsivlp
001953 FDE1                A  2507    				pop iy
                           A  2508    				
001955 CD 7A 19 00         A  2509    				call show_vol_info
001959 CD 6B 19 00         A  2510    				call test_max_vol	
00195D C8                  A  2511    				ret z							00195E 3A 90 52 00         A  2512    				ld a,(partition_temp)
001962 3C                  A  2513    				inc a
001963 FE04                A  2514    				cp 4							001965 C2 D4 18 00         A  2515    				jp nz,fnxtpart
001969 18 A4               A  2516    				jr nxt_dev
                           A  2517    				
                           A  2518    
00196B                     A  2519    test_max_vol
                           A  2520    			
00196B 11100000            A  2521    				ld de,16
00196F FD19                A  2522    				add iy,de			
001971 21 5E 51 00         A  2523    				ld hl,volume_count
001975 34                  A  2524    				inc (hl)
001976 7E                  A  2525    				ld a,(hl)
001977 FE08                A  2526    				cp max_volumes
001979 C9                  A  2527    				ret
                           A  2528    			
                           A  2529    			
00197A                     A  2530    show_vol_info
                           A  2531    				
00197A CD CC 19 00         A  2532    				call test_quiet_mode
00197E 20 06               A  2533    				jr nz,skp_cm2
001980 3E09                A  2534    				ld a,9			
001982 32 37 53 00         A  2535    				ld (cursor_x),a
001986 3A 5E 51 00         A  2536    skp_cm2			ld a,(volume_count)
00198A F5                  A  2537    				push af
00198B C630                A  2538    				add a,30h		
00198D 32 63 51 00         A  2539    				ld (vol_txt+4),a	
001991 21 5F 51 00         A  2540    				ld hl,vol_txt
001995 CD 07 0F 00         A  2541    				call os_print_string_cond		001999 21 91 52 00         A  2542    				ld hl,vols_on_device_temp
00199D CBC6                A  2543    				set 0,(hl)						                           A  2544    			
00199F F1                  A  2545    				pop af
0019A0 FDE5                A  2546    				push iy
0019A2 CD 75 1A 00         A  2547    				call os_change_volume			0019A6 28 0A               A  2548    				jr z,vform_ok					0019A8 21 F2 4E 00         A  2549    svi_fe			ld hl,format_err_msg		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019AC CD C9 13 00         A  2550    svi_pem			call os_show_packed_text_cond	0019B0 18 0D               A  2551    				jr skpsvl
                           A  2552    			
0019B2 CD 86 42 00         A  2553    vform_ok		call fs_get_volume_label
0019B6 38 0E               A  2554    				jr c,svi_hwe
0019B8 B7                  A  2555    				or a
0019B9 20 ED               A  2556    				jr nz,svi_fe
0019BB CD 07 0F 00         A  2557    				call os_print_string_cond		                           A  2558    			
0019BF CD 92 13 00         A  2559    skpsvl			call os_new_line_cond
0019C3 FDE1                A  2560    				pop iy
0019C5 C9                  A  2561    				ret
                           A  2562    				
0019C6 21 4E 4D 00         A  2563    svi_hwe			ld hl,disk_err_msg
0019CA 18 E0               A  2564    				jr svi_pem
                           A  2565    			
                           A  2566    			
0019CC                     A  2567    test_quiet_mode
                           A  2568    			
0019CC 3A 93 52 00         A  2569    				ld a,(os_quiet_mode)
0019D0 B7                  A  2570    				or a
0019D1 C9                  A  2571    				ret
                           A  2572    
                           A  2573    ;----------------------------------------------
                           A  2574    
                           A  2575    
0019D2                     A  2576    show_dev_driver_name
                           A  2577    	
                           A  2578    	
0019D2 CD EB 19 00         A  2579    				call locate_driver_base			0019D6 EB                  A  2580    				ex de,hl
0019D7 110C0000            A  2581    				ld de,0ch
0019DB 19                  A  2582    				add hl,de
0019DC CD 0C 0F 00         A  2583    				call os_print_string			0019E0 C5                  A  2584    				push bc
0019E1 01200100            A  2585    				ld bc,0120h
0019E5 CD 01 1A 00         A  2586    				call os_print_multiple_chars	0019E9 C1                  A  2587    				pop bc
0019EA C9                  A  2588    				ret
                           A  2589    
                           A  2590    
0019EB                     A  2591    locate_driver_base
                           A  2592    
0019EB E5                  A  2593    				push hl							0019EC 11030000            A  2594    				ld de,3							0019F0 57                  A  2595    				ld d,a
0019F1 ED5C                A  2596    				mlt de
0019F3 21 6F 51 00         A  2597    				ld hl,driver_table
0019F7 19                  A  2598    				add hl,de
0019F8 ED17                A  2599    				ld de,(hl)
0019FA E1                  A  2600    				pop hl
0019FB C9                  A  2601    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2602    				
                           A  2603    		
                           A  2604    ;----------------------------------------------
                           A  2605    
0019FC                     A  2606    os_print_multiple_chars_cond
                           A  2607    
0019FC CD CC 19 00         A  2608    				call test_quiet_mode
001A00 C0                  A  2609    				ret nz
                           A  2610    			
001A01                     A  2611    os_print_multiple_chars
                           A  2612    
                           A  2613    ;c = char
                           A  2614    ;b = count
001A01 C5                  A  2615    				push bc
001A02 E5                  A  2616    				push hl
001A03 79                  A  2617    				ld a,c
001A04 21 DE 48 00         A  2618    				ld hl,rep_char_txt
001A08 77                  A  2619    				ld (hl),a
001A09 E5                  A  2620    pmch_lp			push hl
001A0A CD 0C 0F 00         A  2621    				call os_print_string
001A0E E1                  A  2622    				pop hl
001A0F 10 F8               A  2623    				djnz pmch_lp
001A11 E1                  A  2624    				pop hl
001A12 C1                  A  2625    				pop bc
001A13 C9                  A  2626    				ret
                           A  2627    
                           A  2628    ;----------------------------------------------
                           A  2629    
                           A  2630    
001A14 7B                  A  2631    ext_plot_char	ld a,e
001A15 C3 77 30 00         A  2632    				jp hwsc_plot_char
                           A  2633    				
                           A  2634    
                           A  2635    ;----------------------------------------------
                           A  2636    ; Some file system related routines 
                           A  2637    ;----------------------------------------------
                           A  2638    
                           A  2639    
001A19                     A  2640    fs_get_dir_cluster
                           A  2641    
                           A  2642    
001A19 F5                  A  2643    				push af							001A1A E5                  A  2644    				push hl			
001A1B CD 31 1A 00         A  2645    				call fs_get_dir_cluster_address
001A1F ED17                A  2646    				ld de,(hl)
001A21 E1                  A  2647    dclopdone		pop hl
001A22 F1                  A  2648    				pop af
001A23 BF                  A  2649    				cp a							001A24 C9                  A  2650    				ret
                           A  2651    				
                           A  2652    
                           A  2653    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2654    
                           A  2655    
001A25                     A  2656    fs_update_dir_cluster
                           A  2657    
001A25 F5                  A  2658    				push af							001A26 E5                  A  2659    				push hl			
001A27 D5                  A  2660    				push de			
001A28 CD 31 1A 00         A  2661    				call fs_get_dir_cluster_address
001A2C D1                  A  2662    				pop de
001A2D ED1F                A  2663    				ld (hl),de
001A2F 18 F0               A  2664    				jr dclopdone
                           A  2665    			
                           A  2666    
                           A  2667    
                           A  2668    
                           A  2669    
001A31                     A  2670    fs_get_dir_cluster_address
                           A  2671    
001A31 21 75 51 00         A  2672    				ld hl,volume_dir_clusters		001A35 3A 5B 51 00         A  2673    				ld a,(current_volume)	
001A39 11030000            A  2674    				ld de,3
001A3D 57                  A  2675    				ld d,a
001A3E ED5C                A  2676    				mlt de
001A40 19                  A  2677    				add hl,de
001A41 C9                  A  2678    				ret
                           A  2679    				
                           A  2680    	
                           A  2681    
                           A  2682    	
                           A  2683    	
001A42                     A  2684    fs_get_total_sectors
                           A  2685    
                           A  2686    
001A42 F5                  A  2687    				push af
001A43 E5                  A  2688    				push hl							001A44 CD 53 1A 00         A  2689    				call fs_calc_volume_offset	
001A48 21 91 51 00         A  2690    				ld hl,volume_mount_list+4
001A4C 19                  A  2691    				add hl,de
001A4D ED17                A  2692    				ld de,(hl)
001A4F E1                  A  2693    				pop hl
001A50 F1                  A  2694    				pop af
001A51 BF                  A  2695    				cp a							001A52 C9                  A  2696    				ret
                           A  2697    
                           A  2698    
                           A  2699    
                           A  2700    
                           A  2701    
001A53                     A  2702    fs_calc_volume_offset
                           A  2703    
001A53 3A 5B 51 00         A  2704    				ld a,(current_volume)			001A57 11100000            A  2705    calc_vol		ld de,16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A5B 57                  A  2706    				ld d,a
001A5C ED5C                A  2707    				mlt de
001A5E C9                  A  2708    				ret
                           A  2709    
                           A  2710    
                           A  2711    
                           A  2712    
                           A  2713    
001A5F                     A  2714    dev_to_driver_lookup
                           A  2715    
001A5F 21 5D 51 00         A  2716    				ld hl,device_count				001A63 BE                  A  2717    				cp (hl)							001A64 D0                  A  2718    				ret nc
001A65 11200000            A  2719    				ld de,32						001A69 57                  A  2720    				ld d,a
001A6A ED5C                A  2721    				mlt de
001A6C 21 0D 52 00         A  2722    				ld hl,host_device_hardware_info
001A70 19                  A  2723    				add hl,de
001A71 7E                  A  2724    				ld a,(hl)
001A72 37                  A  2725    				scf
001A73 C9                  A  2726    				ret
                           A  2727    				
                           A  2728    
                           A  2729    
001A74                     A  2730    ext_change_volume
                           A  2731    
001A74 7B                  A  2732    				ld a,e
                           A  2733    
001A75                     A  2734    os_change_volume
                           A  2735    
001A75 47                  A  2736    				ld b,a							001A76 FE08                A  2737    				cp max_volumes		
001A78 30 23               A  2738    				jr nc,fs_ccv2					                           A  2739    			
001A7A 3A 5B 51 00         A  2740    				ld a,(current_volume)			001A7E F5                  A  2741    				push af
001A7F 78                  A  2742    				ld a,b
001A80 32 5B 51 00         A  2743    				ld (current_volume),a			001A84 CD A1 1A 00         A  2744    				call fs_set_driver_for_volume	                           A  2745    				
001A88 CD CC 3A 00         A  2746    				call fs_check_disk_format		001A8C 38 06               A  2747    				jr c,fs_cant_chg_vols	
001A8E B7                  A  2748    				or a
001A8F 20 03               A  2749    				jr nz,fs_cant_chg_vols
001A91 F1                  A  2750    				pop af							001A92 AF                  A  2751    				xor a							001A93 C9                  A  2752    				ret
                           A  2753    
                           A  2754    
001A94                     A  2755    fs_cant_chg_vols
                           A  2756    			
001A94 F1                  A  2757    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A95 32 5B 51 00         A  2758    				ld (current_volume),a			001A99 CD A1 1A 00         A  2759    				call fs_set_driver_for_volume	                           A  2760    				
001A9D 3ECF                A  2761    fs_ccv2			ld a,0cfh						001A9F B7                  A  2762    				or a
001AA0 C9                  A  2763    				ret
                           A  2764    					
                           A  2765    	
001AA1                     A  2766    fs_set_driver_for_volume
                           A  2767    
001AA1 CD 53 1A 00         A  2768    				call fs_calc_volume_offset		001AA5 21 8E 51 00         A  2769    				ld hl,volume_mount_list+1
001AA9 19                  A  2770    				add hl,de
001AAA 7E                  A  2771    				ld a,(hl)
001AAB 32 5C 51 00         A  2772    				ld (current_driver),a
001AAF C9                  A  2773    				ret
                           A  2774    
                           A  2775    
                           A  2776    ;----------------------------------------------
                           A  2777    
001AB0                     A  2778    ext_file_sector_list
                           A  2779    
                           A  2780    ;Input HL = cluster, E = sector offset
                           A  2781    
                           A  2782    ;Output HL = new cluster, E = new sector number
                           A  2783    ;       IX = address of LBA0 LSB of sector (int
                           A  2784    
                           A  2785    				
001AB0 3A DD 46 00         A  2786    				ld a,(fs_cluster_size)
001AB4 BB                  A  2787    				cp e
001AB5 20 0A               A  2788    				jr nz,fsl_sc
001AB7 CD 12 45 00         A  2789    				call get_fat_entry_for_cluster
001ABB DA E8 15 00         A  2790    				jp c,os_fferr
001ABF 1E00                A  2791    				ld e,0
001AC1 CD E9 45 00         A  2792    fsl_sc			call cluster_and_offset_to_lba
001AC5 1C                  A  2793    				inc e
001AC6 DD21 32 53 00       A  2794    fsl_done		ld ix,sector_lba0
001ACB BF                  A  2795    				cp a							001ACC C9                  A  2796    				ret
                           A  2797    				
                           A  2798    	
                           A  2799    			
                           A  2800    ;----------------------------------------------
                           A  2801    ; Environment variable code - NOT IMPLEMENTED Y
                           A  2802    ;----------------------------------------------
                           A  2803    
001ACD                     A  2804    ext_get_envar
001ACD CC 51 15 00         A  2805    				call z,mbase_hl
                           A  2806    
001AD1                     A  2807    os_get_envar
                           A  2808    
                           A  2809    ;Set: 		HL = name of required variable
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2810    
                           A  2811    ;Returns:	HL = address of variable data
                           A  2812    ;        	ZF = Not Set: Couldn't find variabl
                           A  2813    						
001AD1 AF                  A  2814    				xor a
001AD2 C9                  A  2815    				ret
                           A  2816    			
                           A  2817    ;----------------------------------------------
                           A  2818    
001AD3                     A  2819    ext_set_envar
                           A  2820    
                           A  2821    ;HL = addr of variable name (4 bytes max ASCII,
                           A  2822    ;DE = addr of data for variable (4 bytes max)
                           A  2823    
                           A  2824    ;Returns:
                           A  2825    
                           A  2826    ;ZF = Not Set: No enough space for new variable
                           A  2827    		
001AD3 CC 51 15 00         A  2828    				call z,mbase_hl
001AD7 CC 62 15 00         A  2829    				call z,mbase_de
                           A  2830    
001ADB AF                  A  2831    				xor a
001ADC C9                  A  2832    				ret
                           A  2833    		
                           A  2834    ;----------------------------------------------
                           A  2835    
001ADD                     A  2836    ext_delete_envar
                           A  2837    
001ADD CC 51 15 00         A  2838    				call z,mbase_hl
                           A  2839    
001AE1                     A  2840    os_delete_envar
                           A  2841    
                           A  2842    ;HL = name of required variable (null terminate
                           A  2843    
001AE1 AF                  A  2844    				xor a
001AE2 C9                  A  2845    				ret
                           A  2846    				
                           A  2847    
                           A  2848    ;----------------------------------------------
                           A  2849    
001AE3                     A  2850    os_get_keymap_location
                           A  2851    
001AE3 21 8E 4F 00         A  2852    				ld hl,unshifted_keymap
001AE7 BF                  A  2853    				cp a							001AE8 C9                  A  2854    				ret
                           A  2855    
                           A  2856    ;----------------------------------------------
                           A  2857    
001AE9                     A  2858    os_get_font_info
                           A  2859    
001AE9 DD21 ED 50 00       A  2860    				ld ix,font_parameters
001AEE BF                  A  2861    				cp a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AEF C9                  A  2862    				ret
                           A  2863    
                           A  2864    ;==============================================
                           A  2865    ; Internal OS command routines
                           A  2866    ;==============================================
                           A  2867    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001AF0                     B     5    os_cmd_c
                           B     6    
001AF0 CD 26 1B 00         B     7    				call get_start_and_end			                           B     8    				
001AF4 CD 4F 1B 00         B     9    				call hexword_or_bust			001AF8 CA CC 15 00         B    10    				jp z,os_no_d_addr_error
001AFC ED53 45 53 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001B01 CD 14 1B 00         B    13    				call test_mem_range				001B05 DA D0 15 00         B    14    				jp c,os_range_error				001B09 ED5B 45 53 00       B    15    				ld de,(copy_dest_address)
001B0E EDB0                B    16    				ldir
                           B    17    
001B10 3E20                B    18    copy_done		ld a,020h						001B12 B7                  B    19    				or a
001B13 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001B14                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001B14 2A 42 53 00         B    33    				ld hl,(cmdop_end_address)	
001B18 ED4B 3F 53 00       B    34    				ld bc,(cmdop_start_address)
001B1D C5                  B    35    				push bc
001B1E AF                  B    36    				xor a
001B1F ED42                B    37    				sbc hl,bc
001B21 E5                  B    38    				push hl
001B22 C1                  B    39    				pop bc
001B23 03                  B    40    				inc bc
001B24 E1                  B    41    				pop hl
001B25 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001B26                     B    46    get_start_and_end
                           B    47    			
001B26 CD 83 10 00         B    48    				call ascii_to_hexword			001B2A ED53 3F 53 00       B    49    				ld (cmdop_start_address),de
001B2F 23                  B    50    				inc hl
001B30 28 09               B    51    				jr z,st_addrok
001B32 E1                  B    52    				pop hl							001B33 FE82                B    53    				cp 82h							001B35 28 02               B    54    				jr z,c_badhex
001B37 3E16                B    55    				ld a,016h						001B39 B7                  B    56    c_badhex		or a
001B3A C9                  B    57    				ret
                           B    58    				
001B3B CD 83 10 00         B    59    st_addrok		call ascii_to_hexword			001B3F ED53 42 53 00       B    60    				ld (cmdop_end_address),de
001B44 23                  B    61    				inc hl
001B45 B7                  B    62    				or a
001B46 C8                  B    63    				ret z
001B47 E1                  B    64    				pop hl							001B48 FE82                B    65    				cp 82h							001B4A 28 ED               B    66    				jr z,c_badhex
001B4C 3E1C                B    67    				ld a,01ch						001B4E C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001B4F                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001B4F CD 83 10 00         B    79    				call ascii_to_hexword		
001B53 FE82                B    80    				cp 82h
001B55 20 03               B    81    				jr nz,hex_good
001B57 E1                  B    82    				pop hl						; r
001B58 B7                  B    83    				or a	
001B59 C9                  B    84    				ret			 
001B5A FE81                B    85    hex_good		cp 081h						; n
001B5C C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001B5D                     B     5    os_cmd_cd	
                           B     6    
001B5D CD 49 16 00         B     7    				call os_check_volume_format	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001B61 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001B62 7E                  B    11    				ld a,(hl)						001B63 B7                  B    12    				or a				
001B64 CA 0B 1C 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001B68 7E                  B    16    				ld a,(hl)						001B69 23                  B    17    				inc hl
001B6A 46                  B    18    				ld b,(hl)
001B6B 2B                  B    19    				dec hl
001B6C FE2E                B    20    				cp '.'			
001B6E 20 08               B    21    				jr nz,cd_nual
001B70 B8                  B    22    				cp b
001B71 20 05               B    23    				jr nz,cd_nual
001B73 CD A1 16 00         B    24    				call os_parent_dir	
001B77 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001B78 FE2F                B    28    cd_nual			cp 02fh			
001B7A 20 05               B    29    				jr nz,cd_nogor					001B7C CD A7 16 00         B    30    				call os_root_dir	
001B80 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001B81 FE25                B    34    cd_nogor		cp '%'							001B83 20 1F               B    35    				jr nz,cd_no_assign
001B85 CD D1 1A 00         B    36    				call os_get_envar
001B89 28 04               B    37    				jr z,cd_evok
001B8B 3ED1                B    38    				ld a,0d1h						001B8D B7                  B    39    				or a
001B8E C9                  B    40    				ret
001B8F 11000000            B    41    cd_evok			ld de,0
001B93 5E                  B    42    				ld e,(hl)
001B94 23                  B    43    				inc hl
001B95 56                  B    44    				ld d,(hl)
001B96 23                  B    45    				inc hl
001B97 7E                  B    46    				ld a,(hl)
001B98 D5                  B    47    				push de
001B99 CD 75 1A 00         B    48    				call os_change_volume
001B9D D1                  B    49    				pop de
001B9E C0                  B    50    				ret nz
001B9F CD 25 1A 00         B    51    				call fs_update_dir_cluster
001BA3 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001BA4                     B    55    cd_no_assign
                           B    56    			
001BA4 3A 5B 51 00         B    57    				ld a,(current_volume)
001BA8 32 99 59 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001BAC E5                  B    60    				push hl
001BAD DDE1                B    61    				pop ix
001BAF DD7E04              B    62    				ld a,(ix+4)
001BB2 FE3A                B    63    				cp ':'							001BB4 20 25               B    64    				jr nz,cd_nchvol
001BB6 11 60 51 00         B    65    				ld de,vol_txt+1
001BBA 0603                B    66    				ld b,3
001BBC CD C6 11 00         B    67    				call os_compare_strings
001BC0 20 19               B    68    				jr nz,cd_nchvol
001BC2 11050000            B    69    				ld de,5
001BC6 19                  B    70    				add hl,de
001BC7 22 F8 53 00         B    71    				ld (os_args_loc),hl				001BCB DD7E03              B    72    				ld a,(ix+3)						001BCE D630                B    73    				sub 030h
001BD0 CD 75 1A 00         B    74    				call os_change_volume
001BD4 C0                  B    75    				ret nz							001BD5 CD A7 16 00         B    76    				call os_root_dir				001BD9 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001BDB CD 19 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001BDF ED53 96 59 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001BE4 E5                  B    83    cd_mollp		push hl
001BE5 CD 97 16 00         B    84    				call os_change_dir				001BE9 E1                  B    85    				pop hl
001BEA 20 0A               B    86    				jr nz,cd_dcherr
001BEC 7E                  B    87    cd_mol			ld a,(hl)						001BED 23                  B    88    				inc hl
001BEE B7                  B    89    				or a
001BEF C8                  B    90    				ret z
001BF0 FE2F                B    91    				cp 02fh
001BF2 28 F0               B    92    				jr z,cd_mollp
001BF4 18 F6               B    93    				jr cd_mol
                           B    94    					
001BF6                     B    95    cd_dcherr	
                           B    96    			
001BF6 F5                  B    97    				push af							001BF7 ED5B 96 59 00       B    98    				ld de,(original_dir_cd_cmd)
001BFC CD 25 1A 00         B    99    				call fs_update_dir_cluster
001C00 3A 99 59 00         B   100    				ld a,(original_vol_cd_cmd)
001C04 CD 75 1A 00         B   101    				call os_change_volume	
001C08 F1                  B   102    				pop af
001C09 B7                  B   103    				or a
001C0A C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001C0B                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B   112    			
001C0B 0610                B   113    				ld b,max_dirs
001C0D 0E00                B   114    				ld c,0
001C0F C5                  B   115    lp1				push bc
001C10 CD 19 1A 00         B   116    				call fs_get_dir_cluster
001C14 C1                  B   117    				pop bc
001C15 D5                  B   118    				push de
001C16 0C                  B   119    				inc c
001C17 C5                  B   120    				push bc
001C18 CD A1 16 00         B   121    				call os_parent_dir
001C1C C1                  B   122    				pop bc
001C1D 20 02               B   123    				jr nz,shdir_lp
001C1F 10 EE               B   124    				djnz lp1
                           B   125    				
001C21 D1                  B   126    shdir_lp		pop de
001C22 C5                  B   127    				push bc
001C23 CD 25 1A 00         B   128    				call fs_update_dir_cluster
001C27 CD CD 16 00         B   129    				call os_get_current_dir_name
001C2B CD 0C 0F 00         B   130    				call os_print_string
001C2F 21 41 1C 00         B   131    				ld hl,cd_fwdslash_txt
001C33 CD 0C 0F 00         B   132    				call os_print_string
001C37 C1                  B   133    				pop bc
001C38 0D                  B   134    				dec c
001C39 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001C3B CD 97 13 00         B   137    				call os_new_line	
001C3F AF                  B   138    				xor a
001C40 C9                  B   139    				ret
                           B   140    			
001C41 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00005996            B   145    original_dir_cd_cmd		equ scratch_pad 
       00005999            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C43                     B     5    os_cmd_cls
                           B     6    
001C43 CD 8A 2F 00         B     7    				call hwsc_clear_screen
001C47 AF                  B     8    				xor a
001C48 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001C49                     B     5    os_cmd_colon
                           B     6    	
001C49 CD 4F 1B 00         B     7    				call hexword_or_bust			001C4D CA BC 15 00         B     8    				jp z,os_no_start_addr			001C51 D5                  B     9    				push de
001C52 DDE1                B    10    				pop ix							                           B    11    			
001C54 CD 4F 1B 00         B    12    wmblp			call hexword_or_bust			001C58 28 07               B    13    				jr z,os_ccmdn
001C5A DD7300              B    14    				ld (ix),e						001C5D DD23                B    15    				inc ix
001C5F 18 F3               B    16    				jr wmblp
                           B    17    
001C61 AF                  B    18    os_ccmdn		xor a
001C62 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: Z80 Disassembler
                           B     3    ;
                           B     4    ; Not currently enabled
                           B     5    ;----------------------------------------------
                           B     6    
001C63                     B     7    os_cmd_d
                           B     8    
001C63 21 6D 1C 00         B     9    			ld hl,not_yet_txt
001C67 CD 0C 0F 00         B    10    			call os_print_string
001C6B AF                  B    11    			xor a
001C6C C9                  B    12    			ret
                           B    13    
001C6D                     B    14    not_yet_txt
                           B    15    
001C6D 436F6D6D 616E6420   B    16    			db 'Command not yet implemented.',1
001C75 6E6F7420 79657420 
001C7D 696D706C 656D656E 
001C85 7465642E 0B00 
                           B    17    			
                           B    18    ;----------------------------------------------
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
001C8B                     B     6    os_cmd_del
                           B     7    	
001C8B CD 49 16 00         B     8    				call os_check_volume_format	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
001C8F C0                  B     9    				ret nz
                           B    10    			
001C90 CD 98 1C 00         B    11    				call filename_or_bust
                           B    12    				
001C94 C3 B1 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
001C98                     B    18    filename_or_bust
                           B    19    			
001C98 7E                  B    20    				ld a,(hl)					;is
001C99 B7                  B    21    				or a
001C9A C0                  B    22    				ret nz
001C9B E1                  B    23    				pop hl						;ot
001C9C C3 B4 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
001CA0                     B     5    os_cmd_dir
                           B     6    
001CA0 CD 49 16 00         B     7    				call os_check_volume_format	
001CA4 C0                  B     8    				ret nz
                           B     9    				
001CA5 CD 7F 1D 00         B    10    				call div_line
001CA9 CD 93 45 00         B    11    				call fs_get_current_dir_name	001CAD D8                  B    12    				ret c
001CAE C0                  B    13    				ret nz
001CAF CD 0C 0F 00         B    14    				call os_print_string
001CB3 CD 19 1A 00         B    15    				call fs_get_dir_cluster			001CB7 7A                  B    16    				ld a,d
001CB8 B3                  B    17    				or e
001CB9 20 08               B    18    				jr nz,dcmdnr
001CBB CD 86 42 00         B    19    				call fs_get_volume_label
001CBF CD 0C 0F 00         B    20    				call os_print_string
001CC3 CD 97 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
001CC7 CD 7F 1D 00         B    23    nrootdir		call div_line
001CCB CD 8B 41 00         B    24    				call fs_goto_first_dir_entry
001CCF D8                  B    25    				ret c
001CD0 20 6F               B    26    				jr nz,os_dlr
001CD2 AF                  B    27    				xor a
001CD3 32 3B 53 00         B    28    				ld (os_linecount),a
                           B    29    				
001CD7 CD A2 41 00         B    30    os_dfllp		call fs_get_dir_entry			001CDB D8                  B    31    				ret c
001CDC 20 63               B    32    				jr nz,os_dlr					001CDE C5                  B    33    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
001CDF CD 0C 0F 00         B    34    				call os_print_string			001CE3 CD C2 13 00         B    35    				call os_get_cursor_position		001CE7 060E                B    36    				ld b,14
001CE9 CD A2 13 00         B    37    				call os_set_cursor_position	
001CED C1                  B    38    				pop bc
001CEE CB40                B    39    				bit 0,b							001CF0 28 06               B    40    				jr z,os_deif		
001CF2 21 8C 1D 00         B    41    				ld hl,dir_txt					001CF6 18 32               B    42    				jr os_dpl
                           B    43    				
001CF8 21 81 48 00         B    44    os_deif			ld hl,os_hex_prefix_txt			001CFC CD 0C 0F 00         B    45    				call os_print_string
001D00 ED53 96 59 00       B    46    				ld (scratch_pad),de
001D05 79                  B    47    				ld a,c
001D06 32 99 59 00         B    48    				ld (scratch_pad+3),a
001D0A 21 A6 53 00         B    49    				ld hl,output_line
001D0E E5                  B    50    				push hl
001D0F ED5B 98 59 00       B    51    				ld de,(scratch_pad+2)
001D14 CD 74 10 00         B    52    				call hexword_to_ascii
001D18 ED5B 96 59 00       B    53    				ld de,(scratch_pad)
001D1D CD 74 10 00         B    54    				call hexword_to_ascii
001D21 3600                B    55    				ld (hl),0
001D23 E1                  B    56    				pop hl
001D24 0607                B    57    				ld b,7							001D26 CD 2C 10 00         B    58    				call os_skip_leading_ascii_zero
001D2A CD 0C 0F 00         B    59    os_dpl			call os_print_string
001D2E CD 97 13 00         B    60    				call os_new_line
                           B    61    				
001D32 CD 2F 42 00         B    62    				call fs_goto_next_dir_entry
001D36 20 09               B    63    				jr nz,os_dlr					001D38 CD 9D 11 00         B    64    				call os_count_lines
001D3C 3E79                B    65    				ld a,'y'
001D3E B8                  B    66    				cp b
001D3F 28 96               B    67    				jr z,os_dfllp
                           B    68    				
001D41 CD 7F 1D 00         B    69    os_dlr			call div_line					001D45 CD BE 3B 00         B    70    				call fs_calc_free_space
001D49 D8                  B    71    				ret c	
001D4A CD 58 1D 00         B    72    				call show_hlde_decimal
001D4E 21 92 1D 00         B    73    				ld hl,kb_spare_txt
001D52 CD 0C 0F 00         B    74    				call os_print_string
001D56 AF                  B    75    				xor a
001D57 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
001D58                     B    80    show_hlde_decimal
                           B    81    
001D58 CD 32 12 00         B    82    				call os_hex_to_decimal			001D5C 11070000            B    83    				ld de,7
001D60 19                  B    84    				add hl,de						001D61 43                  B    85    				ld b,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
001D62 11 A6 53 00         B    86    				ld de,output_line
001D66 D5                  B    87    				push de
001D67 7E                  B    88    dec2strlp		ld a,(hl)						001D68 B7                  B    89    				or a
001D69 20 03               B    90    				jr nz,foundlnz
001D6B 2B                  B    91    				dec hl
001D6C 10 F9               B    92    				djnz dec2strlp
001D6E 04                  B    93    foundlnz		inc b
001D6F 7E                  B    94    ndecchar		ld a,(hl)						001D70 C630                B    95    				add a,030h
001D72 12                  B    96    				ld (de),a
001D73 13                  B    97    				inc de
001D74 2B                  B    98    				dec hl
001D75 10 F8               B    99    				djnz ndecchar
001D77 AF                  B   100    				xor a
001D78 12                  B   101    				ld (de),a
001D79 E1                  B   102    				pop hl							001D7A CD 0C 0F 00         B   103    				call os_print_string
001D7E C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
001D7F 0E2D                B   108    div_line		ld c,'-'
001D81 0613                B   109    				ld b,19
001D83 CD 01 1A 00         B   110    				call os_print_multiple_chars
001D87 CD 97 13 00         B   111    				call os_new_line
001D8B C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
001D8C 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
001D92 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
001D9A 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D9C                     B     5    os_cmd_f			
                           B     6    
001D9C CD 26 1B 00         B     7    				call get_start_and_end			                           B     8    			
001DA0 CD 4F 1B 00         B     9    				call hexword_or_bust			001DA4 CA D4 15 00         B    10    				jp z,os_no_args_error			001DA8 7B                  B    11    				ld a,e
001DA9 32 52 53 00         B    12    				ld (fillbyte),a
                           B    13    					
001DAD CD 14 1B 00         B    14    				call test_mem_range
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
001DB1 DA D0 15 00         B    15    				jp c,os_range_error				                           B    16    					
001DB5 3A 52 53 00         B    17    				ld a,(fillbyte)
001DB9 77                  B    18    f_floop			ld (hl),a
001DBA EDA1                B    19    				cpi								001DBC EA B9 1D 00         B    20    				jp pe,f_floop
                           B    21    					
001DC0 3E20                B    22    				ld a,020h						001DC2 B7                  B    23    				or a
001DC3 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
001DC4                     B     9    os_cmd_format
                           B    10    
001DC4 7E                  B    11    				ld a,(hl)						001DC5 B7                  B    12    				or a
001DC6 20 04               B    13    				jr nz,fgotargs					001DC8 3E1F                B    14    				ld a,01fh						001DCA B7                  B    15    				or a
001DCB C9                  B    16    				ret
                           B    17    			
001DCC                     B    18    fgotargs	
001DCC 11 F4 46 00         B    19    				ld de,fs_sought_filename
001DD0 CD DC 45 00         B    20    				call fs_clear_filename			001DD4 E5                  B    21    				push hl							001DD5 CD 8D 0F 00         B    22    				call os_next_arg
001DD9 20 04               B    23    				jr nz,fgotlab
001DDB 21 0C 1F 00         B    24    				ld hl,default_label
001DDF 060B                B    25    fgotlab			ld b,11
001DE1 CD E5 11 00         B    26    				call os_copy_ascii_run
001DE5 E1                  B    27    				pop hl
                           B    28    				
001DE6 3A 5D 51 00         B    29    				ld a,(device_count)				001DEA B7                  B    30    				or a
001DEB 28 25               B    31    				jr z,fno_dev
001DED 47                  B    32    				ld b,a
001DEE 0E00                B    33    				ld c,0							001DF0 DD21 0D 52 00       B    34    				ld ix,host_device_hardware_info
001DF5 DD7E00              B    35    fdev_lp			ld a,(ix)						001DF8 CD EB 19 00         B    36    				call locate_driver_base			001DFC D5                  B    37    				push de
001DFD FDE1                B    38    				pop iy
001DFF ED130C              B    39    				lea de,iy+0ch					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
001E02 C5                  B    40    				push bc
001E03 0607                B    41    				ld b,7
001E05 CD C6 11 00         B    42    				call os_compare_strings
001E09 C1                  B    43    				pop bc
001E0A 28 0A               B    44    				jr z,format_dev
001E0C ED3220              B    45    				lea ix,ix+20h					001E0F 0C                  B    46    				inc c
001E10 10 E3               B    47    				djnz fdev_lp
                           B    48    			
001E12 3ED0                B    49    fno_dev			ld a,0d0h						001E14 B7                  B    50    				or a
001E15 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
001E16 C5                  B    58    format_dev		push bc
001E17 CD 97 13 00         B    59    				call os_new_line
001E1B 21 DD 1E 00         B    60    				ld hl,form_dev_warn1
001E1F CD CE 13 00         B    61    				call os_show_packed_text
001E23 C1                  B    62    				pop bc
                           B    63    				
001E24 79                  B    64    				ld a,c							001E25 C630                B    65    				add a,030h
001E27 32 69 51 00         B    66    				ld (dev_txt+3),a
001E2B 21 66 51 00         B    67    				ld hl,dev_txt	
001E2F CD 0C 0F 00         B    68    				call os_print_string			                           B    69    				
001E33 79                  B    70    				ld a,c
001E34 CD 5F 1A 00         B    71    				call dev_to_driver_lookup		001E38 E5                  B    72    				push hl
001E39 32 5C 51 00         B    73    				ld (current_driver),a
001E3D CD D2 19 00         B    74    				call show_dev_driver_name		001E41 DDE1                B    75    				pop ix
001E43 DD1701              B    76    				ld de,(ix+1)
001E46 FD21 4E 53 00       B    77    				ld iy,xrr_temp
001E4B FD1F00              B    78    				ld (iy),de						001E4E FDCB023E            B    79    				srl (iy+2)
001E52 FDCB011E            B    80    				rr (iy+1)
001E56 FDCB001E            B    81    				rr (iy+0)						001E5A FD1700              B    82    				ld de,(iy)						001E5D CD 58 1D 00         B    83    				call show_hlde_decimal			001E61 21 17 1F 00         B    84    				ld hl,kb_txt
001E65 CD 0C 0F 00         B    85    				call os_print_string
001E69 ED2205              B    86    				lea hl,ix+5		
001E6C CD 0C 0F 00         B    87    				call os_print_string			001E70 3E29                B    88    				ld a,')'
001E72 CD 4E 0F 00         B    89    				call os_print_char
                           B    90    				
001E76 CD 97 13 00         B    91    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
001E7A CD 97 13 00         B    92    				call os_new_line
001E7E 21 E4 1E 00         B    93    				ld hl,form_dev_warn2
001E82 CD D4 1E 00         B    94    				call show_packed_text_and_cr
001E86 CD BC 1E 00         B    95    				call confirm_yes
001E8A 20 28               B    96    				jr nz,ab_form
                           B    97    				
001E8C 21 EE 1E 00         B    98    				ld hl,formatting_txt			001E90 CD 0C 0F 00         B    99    				call os_print_string
                           B   100    				
001E94 CD 41 39 00         B   101    				call fs_format_device_command
001E98 38 10               B   102    				jr c,form_err
001E9A B7                  B   103    				or a
001E9B 20 0D               B   104    				jr nz,form_err
                           B   105    			
001E9D 21 FE 1E 00         B   106    				ld hl,ok_txt					001EA1 CD 0C 0F 00         B   107    				call os_print_string
                           B   108    				
001EA5 CD B1 25 00         B   109    f_end			call os_cmd_remount				001EA9 C9                  B   110    				ret
                           B   111    			
001EAA                     B   112    form_err
001EAA 21 03 1F 00         B   113    				ld hl,ferr_txt
001EAE CD 0C 0F 00         B   114    				call os_print_string
001EB2 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
001EB4 CD 97 13 00         B   121    ab_form			call os_new_line
001EB8 3E24                B   122    				ld a,024h						001EBA B7                  B   123    				or a
001EBB C9                  B   124    				ret
                           B   125    				
001EBC                     B   126    confirm_yes
                           B   127    			
001EBC 21 96 59 00         B   128    				ld hl,scratch_pad
001EC0 1E03                B   129    				ld e,3
001EC2 E5                  B   130    				push hl
001EC3 CD D8 10 00         B   131    				call os_user_input
001EC7 E1                  B   132    				pop hl
001EC8 C0                  B   133    				ret nz
001EC9 0603                B   134    				ld b,3
001ECB 11 42 4C 00         B   135    				ld de,yes_txt+1
001ECF CD C6 11 00         B   136    				call os_compare_strings
001ED3 C9                  B   137    				ret
                           B   138    			
                           B   139    			
001ED4                     B   140    show_packed_text_and_cr
                           B   141    			
001ED4 CD CE 13 00         B   142    				call os_show_packed_text
001ED8 CD 97 13 00         B   143    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
001EDC C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
001EDD                     B   148    form_dev_warn1
                           B   149    
001EDD 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
001EE4                     B   152    form_dev_warn2
                           B   153    
001EE4 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
001EEC 9700 
                           B   155    
001EEE                     B   156    formatting_txt
                           B   157    
001EEE 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
001EF6 74696E67 2E2E2000 
                           B   159    
001EFE 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
001F03 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
001F0B 00 
                           B   163    
001F0C                     B   164    default_label	
                           B   165    
001F0C 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
001F14 534B00 
                           B   167    
001F17 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       0000599A            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001F1C CD 26 1B 00         B     5    os_cmd_h		call get_start_and_end			001F20 22 4B 53 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
001F24 CD 14 1B 00         B     8    				call test_mem_range
001F28 DA D0 15 00         B     9    				jp c,os_range_error				                           B    10    			
001F2C AF                  B    11    				xor a
001F2D 32 C9 1F 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
001F31 2A 4B 53 00         B    14    				ld hl,(find_hexstringascii)
001F35 0600                B    15    				ld b,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
001F37 7E                  B    16    h_lfascii		ld a,(hl)						001F38 B7                  B    17    				or a
001F39 28 28               B    18    				jr z,h_no_text					001F3B FE22                B    19    				cp 022h
001F3D 28 03               B    20    				jr z,h_found_quote
001F3F 23                  B    21    				inc hl
001F40 18 F5               B    22    				jr h_lfascii
001F42 23                  B    23    h_found_quote	inc hl
001F43 22 4B 53 00         B    24    				ld (find_hexstringascii),hl
001F47 7E                  B    25    h_fasc_len		ld a,(hl)
001F48 B7                  B    26    				or a
001F49 CA D4 15 00         B    27    				jp z,os_no_args_error			001F4D FE22                B    28    				cp 022h
001F4F 28 04               B    29    				jr z,h_startas
001F51 23                  B    30    				inc hl
001F52 04                  B    31    				inc b
001F53 18 F2               B    32    				jr h_fasc_len
                           B    33    
001F55 78                  B    34    h_startas		ld a,b
001F56 B7                  B    35    				or a
001F57 CA D4 15 00         B    36    				jp z,os_no_args_error			001F5B 3E01                B    37    				ld a,1
001F5D 32 C9 1F 00         B    38    				ld (h_ascii_mode),a
001F61 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
001F63 2A 4B 53 00         B    42    h_no_text		ld hl,(find_hexstringascii)
001F67 0600                B    43    				ld b,0							001F69 CD 4F 1B 00         B    44    cntfbyts		call hexword_or_bust			001F6D 28 04               B    45    				jr z,gthexstr
001F6F 04                  B    46    				inc b
001F70 23                  B    47    				inc hl
001F71 18 F6               B    48    				jr cntfbyts
001F73 78                  B    49    gthexstr		ld a,b
001F74 B7                  B    50    				or a
001F75 CA D4 15 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
001F79                     B    54    h_start_search
                           B    55    	
001F79 DD2A 3F 53 00       B    56    				ld ix,(cmdop_start_address)		001F7E DDE5                B    57    fndloop1		push ix
001F80 FDE1                B    58    				pop iy
001F82 48                  B    59    				ld c,b							001F83 2A 4B 53 00         B    60    				ld hl,(find_hexstringascii)
001F87 3A C9 1F 00         B    61    fcmloop			ld a,(h_ascii_mode)
001F8B B7                  B    62    				or a
001F8C 28 08               B    63    				jr z,h_hex
001F8E FD7E00              B    64    				ld a,(iy)
001F91 BE                  B    65    				cp (hl)
001F92 20 23               B    66    				jr nz,nofmatch
001F94 18 0A               B    67    				jr h_matched
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
001F96 CD 83 10 00         B    68    h_hex			call ascii_to_hexword			001F9A FD7E00              B    69    				ld a,(iy)
001F9D BB                  B    70    				cp e
001F9E 20 17               B    71    				jr nz,nofmatch
001FA0 FD23                B    72    h_matched		inc iy
001FA2 23                  B    73    				inc hl
001FA3 0D                  B    74    				dec c
001FA4 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
001FA6 DDE5                B    77    				push ix							001FA8 D1                  B    78    				pop de							001FA9 DDE5                B    79    				push ix
001FAB C5                  B    80    				push bc
001FAC CD D7 12 00         B    81    				call os_show_hex_address
001FB0 CD 97 13 00         B    82    				call os_new_line
001FB4 C1                  B    83    				pop bc
001FB5 DDE1                B    84    				pop ix
                           B    85    				
001FB7 DDE5                B    86    nofmatch		push ix
001FB9 DD23                B    87    				inc ix
001FBB D1                  B    88    				pop de
001FBC 2A 42 53 00         B    89    				ld hl,(cmdop_end_address)
001FC0 AF                  B    90    				xor a
001FC1 ED52                B    91    				sbc hl,de
001FC3 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
001FC5 3E20                B    94    				ld a,020h						001FC7 B7                  B    95    				or a
001FC8 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
001FC9 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001FCA                     B     5    os_cmd_help		
001FCA AF                  B     6    				xor a
001FCB 32 3B 53 00         B     7    				ld (os_linecount),a
                           B     8    				
001FCF 21 5B 4D 00         B     9    				ld hl,packed_help1
001FD3 CD CE 13 00         B    10    show_page		call os_show_packed_text
001FD7 E5                  B    11    				push hl
001FD8 CD 97 13 00         B    12    				call os_new_line
001FDC E1                  B    13    				pop hl
001FDD 23                  B    14    				inc hl						;sk
001FDE 7E                  B    15    				ld a,(hl)
001FDF FEFF                B    16    				cp 0ffh						;la
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
001FE1 28 09               B    17    				jr z,last_help_page
                           B    18    				
001FE3 CD 9D 11 00         B    19    				call os_count_lines
001FE7 78                  B    20    				ld a,b
001FE8 FE79                B    21    				cp 'y'
001FEA 28 E7               B    22    				jr z,show_page
                           B    23    
001FEC                     B    24    last_help_page
001FEC AF                  B    25    				xor a
001FED C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
001FEE                     B     5    os_cmd_gtr
                           B     6    
001FEE CD 4F 1B 00         B     7    				call hexword_or_bust			001FF2 CA BC 15 00         B     8    				jp z,os_no_start_addr
001FF6 23                  B     9    fndquot1		inc hl
001FF7 7E                  B    10    				ld a,(hl)
001FF8 B7                  B    11    				or a
001FF9 CA D4 15 00         B    12    				jp z,os_no_args_error
001FFD FE22                B    13    				cp 022h							001FFF 20 F5               B    14    				jr nz,fndquot1
002001 23                  B    15    				inc hl
002002 E5                  B    16    				push hl
002003 7E                  B    17    fndquot2		ld a,(hl)
002004 23                  B    18    				inc hl
002005 B7                  B    19    				or a
002006 28 15               B    20    				jr z,noquot2
002008 FE22                B    21    				cp 022h							00200A 20 F7               B    22    				jr nz,fndquot2
00200C E1                  B    23    				pop hl
                           B    24    					
00200D 7E                  B    25    wmbalp			ld a,(hl)						00200E FE22                B    26    				cp 022h
002010 28 09               B    27    				jr z,os_gtrdn					002012 FE7D                B    28    				cp 07dh
002014 28 01               B    29    				jr z,skpnasc
002016 12                  B    30    				ld (de),a
002017 13                  B    31    skpnasc			inc de
002018 23                  B    32    				inc hl
002019 18 F2               B    33    				jr wmbalp
00201B AF                  B    34    os_gtrdn		xor a
00201C C9                  B    35    				ret	
                           B    36    				
00201D E1                  B    37    noquot2			pop hl							00201E 3E12                B    38    				ld a,012h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002020 B7                  B    39    				or a
002021 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002022                     B     5    os_cmd_lb
                           B     6    	
002022 CD 49 16 00         B     7    				call os_check_volume_format	
002026 C0                  B     8    				ret nz
                           B     9    				
002027 CD 98 1C 00         B    10    				call filename_or_bust			00202B CD DC 15 00         B    11    				call os_find_file				00202F C0                  B    12    				ret nz
002030 ED53 99 59 00       B    13    				ld (filesize_cache),de			002035 2A 94 52 00         B    14    				ld hl,(default_load_addr)
002039 22 96 59 00         B    15    				ld (data_load_addr),hl			                           B    16    				
00203D 2A F8 53 00         B    17    				ld hl,(os_args_loc)
002041 CD 8D 0F 00         B    18    				call os_next_arg
                           B    19    
002045 CD 4F 1B 00         B    20    				call hexword_or_bust			002049 28 05               B    21    				jr z,os_lbnao					00204B ED53 96 59 00       B    22    				ld (data_load_addr),de
                           B    23    
002050 ED5B 96 59 00       B    24    os_lbnao		ld de,(data_load_addr)			002055 2A A1 52 00         B    25    				ld hl,(sys_ram_high)			002059 2B                  B    26    				dec hl
00205A AF                  B    27    				xor a
00205B ED52                B    28    				sbc hl,de
00205D 38 04               B    29    				jr c,os_lbprok
00205F 3E26                B    30    				ld a,026h						002061 B7                  B    31    				or a
002062 C9                  B    32    				ret
                           B    33    				
002063 2A 96 59 00         B    34    os_lbprok		ld hl,(data_load_addr)			002067 CD 0B 16 00         B    35    				call os_read_bytes_from_file
00206B C0                  B    36    				ret nz
                           B    37    			
00206C                     B    38    report_bytes_loaded
                           B    39    
00206C 21 81 48 00         B    40    				ld hl,os_hex_prefix_txt			002070 CD 0C 0F 00         B    41    				call os_print_string			                           B    42    				
002074 11 9B 59 00         B    43    				ld de,filesize_cache+2			002078 21 A6 53 00         B    44    				ld hl,output_line
00207C 0603                B    45    				ld b,3
00207E CD 41 10 00         B    46    				call n_hexbytes_to_ascii
002082 3600                B    47    				ld (hl),0	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002084 0605                B    48    				ld b,5							002086 CD 0D 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
00208A 21 E9 4E 00         B    51    				ld hl,bytes_loaded_msg			00208E CD CE 13 00         B    52    				call os_show_packed_text
                           B    53    				
002092 21 E0 48 00         B    54    				ld hl,to_txt					002096 CD 0C 0F 00         B    55    				call os_print_string
                           B    56    
00209A 21 81 48 00         B    57    				ld hl,os_hex_prefix_txt			00209E CD 0C 0F 00         B    58    				call os_print_string	
                           B    59    
0020A2 ED5B 96 59 00       B    60    				ld de,(data_load_addr)			0020A7 CD D7 12 00         B    61    				call os_show_hex_address
                           B    62    
0020AB CD 97 13 00         B    63    				call os_new_line
0020AF AF                  B    64    				xor a
0020B0 C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00005996            B    69    data_load_addr	equ scratch_pad
       00005999            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
0020B1 CD 4F 1B 00         B     7    os_cmd_m		call hexword_or_bust			0020B5 28 05               B     8    				jr z,m_no_hex					0020B7 ED53 3C 53 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
0020BC 0610                B    11    m_no_hex		ld b,16							0020BE C5                  B    12    smbllp			push bc							                           B    13    				
0020BF 21 F8 20 00         B    14    				ld hl,colon_cmd_prefix			0020C3 CD 0C 0F 00         B    15    				call os_print_string
0020C7 ED5B 3C 53 00       B    16    				ld de,(mem_mon_addr)
0020CC CD D7 12 00         B    17    				call os_show_hex_address
                           B    18    
0020D0 21 A6 53 00         B    19    				ld hl,output_line
0020D4 0610                B    20    				ld b,bytes_per_line				0020D6 3620                B    21    mmbllp			ld (hl),' '
0020D8 23                  B    22    				inc hl
0020D9 1A                  B    23    				ld a,(de)	
0020DA CD 4F 10 00         B    24    				call hexbyte_to_ascii
0020DE 13                  B    25    				inc de
0020DF 10 F5               B    26    				djnz mmbllp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
                           B    27    
0020E1 ED53 3C 53 00       B    28    				ld (mem_mon_addr),de
0020E6 360B                B    29    				ld (hl),11
0020E8 23                  B    30    				inc hl
0020E9 3600                B    31    				ld (hl),0
0020EB 21 A6 53 00         B    32    				ld hl,output_line
0020EF CD 0C 0F 00         B    33    				call os_print_string
0020F3 C1                  B    34    				pop bc
0020F4 10 C8               B    35    				djnz smbllp
                           B    36    				
0020F6 AF                  B    37    				xor a
0020F7 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
0020F8 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0020FB                     B     5    os_cmd_md
                           B     6    	
0020FB CD 49 16 00         B     7    				call os_check_volume_format	
0020FF C0                  B     8    				ret nz
                           B     9    			
002100 CD 98 1C 00         B    10    				call filename_or_bust
                           B    11    				
002104 C3 89 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002108                     B     5    os_cmd_r	
002108 DD21 AA 52 00       B     6    				ld ix,store_a1					00210D 21 B2 21 00         B     7    				ld hl,register_txt
002111 CD 0C 0F 00         B     8    rcmdloop2		call os_print_string
002115 7E                  B     9    rcmdloop		ld a,(hl)
002116 FE01                B    10    				cp 1
002118 28 0B               B    11    				jr z,showbyte
00211A FE02                B    12    				cp 2
00211C 28 15               B    13    				jr z,showword16
00211E FE03                B    14    				cp 3
002120 28 2E               B    15    				jr z,showaddr
002122 23                  B    16    				inc hl
002123 18 F0               B    17    				jr rcmdloop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B    18    				
002125 DD7E00              B    19    showbyte		ld a,(ix)
002128 DD23                B    20    				inc ix
00212A DDE5                B    21    				push ix
00212C E5                  B    22    				push hl
00212D CD EB 12 00         B    23    				call os_show_hex_byte
002131 18 2A               B    24    				jr showreg
                           B    25    
002133 DD7E01              B    26    showword16		ld a,(ix+1)
002136 DDE5                B    27    				push ix
002138 E5                  B    28    				push hl
002139 CD EB 12 00         B    29    				call os_show_hex_byte
00213D E1                  B    30    				pop hl
00213E DDE1                B    31    				pop ix
002140 DD7E00              B    32    				ld a,(ix)
002143 DD23                B    33    				inc ix
002145 DD23                B    34    				inc ix
002147 DDE5                B    35    				push ix
002149 E5                  B    36    				push hl
00214A CD EB 12 00         B    37    				call os_show_hex_byte
00214E 18 0D               B    38    				jr showreg
                           B    39    
002150 DD1700              B    40    showaddr		ld de,(ix)
002153 ED3203              B    41    				lea ix,ix+3
002156 DDE5                B    42    				push ix
002158 E5                  B    43    				push hl
002159 CD D7 12 00         B    44    				call os_show_hex_address
00215D E1                  B    45    showreg			pop hl
00215E DDE1                B    46    				pop ix
002160 23                  B    47    				inc hl
002161 7E                  B    48    				ld a,(hl)
002162 B7                  B    49    				or a
002163 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002165 CD 97 13 00         B    52    				call os_new_line				002169 21 16 22 00         B    53    				ld hl,flag_txt
00216D CD BF 12 00         B    54    				call os_copy_to_output_line
002171 21 AA 53 00         B    55    				ld hl,output_line+4
002175 01050000            B    56    				ld bc,5
002179 3A CD 52 00         B    57    				ld a,(store_f)
00217D CB77                B    58    				bit 6,a							00217F 28 02               B    59    				jr z,zfzero
002181 3631                B    60    				ld (hl),'1'
002183 09                  B    61    zfzero			add hl,bc
002184 CB47                B    62    				bit 0,a							002186 28 02               B    63    				jr z,cfzero
002188 3631                B    64    				ld (hl),'1'
00218A 09                  B    65    cfzero			add hl,bc
00218B CB7F                B    66    				bit 7,a							00218D 28 02               B    67    				jr z,sfzero
00218F 364D                B    68    				ld (hl),'M'
002191 09                  B    69    sfzero			add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002192 CB57                B    70    				bit 2,a							002194 28 02               B    71    				jr z,pfzero
002196 364F                B    72    				ld (hl),'O'
002198 09                  B    73    pfzero			add hl,bc
002199 23                  B    74    				inc hl
00219A CB67                B    75    				bit 4,a							00219C 28 02               B    76    				jr z,iffzero
00219E 3631                B    77    				ld (hl),'1'
0021A0                     B    78    iffzero			
0021A0 01060000            B    79    				ld bc,6
0021A4 09                  B    80    				add hl,bc
0021A5 3A CE 52 00         B    81    				ld a,(store_adl)
0021A9 C630                B    82    				add a,30h
0021AB 77                  B    83    				ld (hl),a
0021AC CD 02 13 00         B    84    				call os_print_output_line
0021B0 AF                  B    85    				xor a
0021B1 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
0021B2 20413D00 01         B    91    register_txt		db ' A=',0,1
0021B7 20204243 3D0003     B    92    					db '  BC=',0,3
0021BE 20204445 3D0003     B    93    					db '  DE=',0,3
0021C5 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
0021CC 0B                  B    96    					db 11
                           B    97    
0021CD 27413D00 01         B    98    					db 027h,'A=',0,1
0021D2 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
0021D9 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
0021E0 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
0021E7 0B                  B   103    					db 11
                           B   104    
0021E8 2049583D 0003       B   105    					db ' IX=',0,3
0021EE 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
0021F4 0B                  B   108    					db 11
                           B   109    					
0021F5 2050433D 0003       B   110    					db ' PC=',0,3
0021FB 204C5350 3D0003     B   111    					db ' LSP=',0,3
002202 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002209 0B                  B   114    					db 11
                           B   115    					
00220A 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002212 010000 
                           B   117    					
002215 0B                  B   118    					db 11
                           B   119    
002216 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
00221E 3D302053 463D5020 
002226 50563D45 20494646 
00222E 3D302041 444C3D30 
002236 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002239                     B     5    os_cmd_rd
                           B     6    
002239 CD 49 16 00         B     7    				call os_check_volume_format	
00223D C0                  B     8    				ret nz
                           B     9    				
00223E CD 98 1C 00         B    10    				call filename_or_bust
                           B    11    			
002242 C3 F3 16 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002246                     B     5    os_cmd_rn
                           B     6    	
002246 CD 49 16 00         B     7    				call os_check_volume_format	
00224A C0                  B     8    				ret nz
                           B     9    			
00224B CD 98 1C 00         B    10    				call filename_or_bust
00224F E5                  B    11    				push hl
002250 D1                  B    12    				pop de
002251 CD 8D 0F 00         B    13    				call os_next_arg
002255 7E                  B    14    				ld a,(hl)						002256 B7                  B    15    				or a
002257 20 04               B    16    				jr nz,rn_grfn
002259 3E1F                B    17    				ld a,01fh						00225B B7                  B    18    				or a
00225C C9                  B    19    				ret
                           B    20    
00225D EB                  B    21    rn_grfn			ex de,hl
00225E C3 DD 16 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002262                     B     5    os_cmd_sb
                           B     6    	
002262 CD 49 16 00         B     7    				call os_check_volume_format		002266 C0                  B     8    				ret nz
                           B     9    					
002267 CD 98 1C 00         B    10    				call filename_or_bust			00226B 22 9C 59 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
00226F 2A F8 53 00         B    13    				ld hl,(os_args_loc)
002273 CD 8D 0F 00         B    14    				call os_next_arg
002277 CD 4F 1B 00         B    15    				call hexword_or_bust			00227B CA BC 15 00         B    16    				jp z,os_no_start_addr			00227F ED53 96 59 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002284 CD 4F 1B 00         B    19    				call hexword_or_bust			002288 CA C0 15 00         B    20    				jp z,os_no_filesize
00228C ED53 99 59 00       B    21    				ld (sb_save_length),de
                           B    22    				
002291 2A 9C 59 00         B    23    				ld hl,(sb_save_name_addr)		002295 CD 1B 16 00         B    24    				call os_create_file
002299 28 18               B    25    				jr z,os_sfapp
00229B FEC9                B    26    				cp 0c9h							00229D C0                  B    27    				ret nz			
00229E 21 22 4D 00         B    28    				ld hl,save_append_msg			0022A2 CD CE 13 00         B    29    				call os_show_packed_text
0022A6 CD 72 36 00         B    30    				call os_wait_key_press
0022AA 3E79                B    31    				ld a,'y'
0022AC B8                  B    32    				cp b
0022AD 28 04               B    33    				jr z,os_sfapp
0022AF 3E2C                B    34    				ld a,2ch						0022B1 B7                  B    35    				or a
0022B2 C9                  B    36    				ret
                           B    37    			
0022B3 2A 9C 59 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		0022B7 ED5B 96 59 00       B    39    				ld de,(sb_save_addr)			0022BC ED4B 99 59 00       B    40    				ld bc,(sb_save_length)			0022C1 CD 31 16 00         B    41    				call os_write_bytes_to_file
0022C5 C0                  B    42    				ret nz	
                           B    43    				
0022C6 3E20                B    44    				ld a,020h						0022C8 B7                  B    45    				or a
0022C9 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00005996            B    51    sb_save_addr		equ scratch_pad
       00005999            B    52    sb_save_length		equ scratch_pad+3
       0000599C            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00005A96            B     6    buffer_addr				 equ os_max_addr		       00005996            B     7    rx_buffer_ptr			 equ scratch_pad
       00005999            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
0022CA 7E                  B    11    os_cmd_rx		ld a,(hl)						0022CB B7                  B    12    				or a
0022CC CA B4 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
0022D0 3E3E                B    15    				ld a,'>'						0022D2 BE                  B    16    				cp (hl)
0022D3 C2 96 23 00         B    17    				jp nz,rx_nrs
0022D7 23                  B    18    				inc hl
0022D8 3E20                B    19    				ld a,' '
0022DA BE                  B    20    				cp (hl)
0022DB 2B                  B    21    				dec hl
0022DC C2 96 23 00         B    22    				jp nz,rx_nrs
                           B    23    				
0022E0 CD 49 16 00         B    24    				call os_check_volume_format		0022E4 C0                  B    25    				ret nz		
                           B    26    				
0022E5 112A0000            B    27    				ld de,02ah						0022E9 ED53 18 51 00       B    28    				ld (serial_filename),de			0022EE CD 9A 24 00         B    29    				call rx_get_header
0022F2 C0                  B    30    				ret nz
0022F3 CD 31 38 00         B    31    				call s_holdack					                           B    32    				
0022F7 21 2C 51 00         B    33    				ld hl,serial_fileheader			0022FB CD 1B 16 00         B    34    				call os_create_file
0022FF C2 75 23 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002303 21 42 4D 00         B    37    				ld hl,ser_recsave_msg
002307 CD CE 13 00         B    38    				call os_show_packed_text
                           B    39    				
00230B 2A 3C 51 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	00230F 22 99 59 00         B    41    				ld (serial_file_length_cache),h
002313 21 96 5A 00         B    42    				ld hl,buffer_addr
002317 22 96 59 00         B    43    				ld (rx_buffer_ptr),hl
00231B 0680                B    44    				ld b,buffer_blocks				                           B    45    				
00231D CD 19 38 00         B    46    rx_lnb			call s_goodack
002321 CD C3 37 00         B    47    				call s_getblock
002325 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002327 F5                  B    50    				push af							002328 CD 2A 38 00         B    51    				call s_badack					00232C 21 2C 51 00         B    52    				ld hl,serial_fileheader			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002330 CD B1 16 00         B    53    				call os_erase_file
002334 F1                  B    54    				pop af
002335 C9                  B    55    				ret
                           B    56    
002336 CD 31 38 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
00233A 21 96 57 00         B    59    				ld hl,sector_buffer
00233E ED5B 96 59 00       B    60    				ld de,(rx_buffer_ptr)
002343 01000100            B    61    				ld bc,256
002347 EDB0                B    62    				ldir
002349 ED53 96 59 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
00234E 2A 3C 51 00         B    65    				ld hl,(serial_fileheader+16)
002352 11000100            B    66    				ld de,256
002356 AF                  B    67    				xor a
002357 ED52                B    68    				sbc hl,de
002359 22 3C 51 00         B    69    				ld (serial_fileheader+16),hl
00235D 28 1D               B    70    				jr z,rx_lbr
00235F 38 1B               B    71    				jr c,rx_lbr
002361 10 BA               B    72    				djnz rx_lnb
                           B    73    
002363 01008000            B    74    				ld bc,buffer_blocks*256
002367 11 96 5A 00         B    75    				ld de,buffer_addr
00236B 21 2C 51 00         B    76    				ld hl,serial_fileheader
00236F CD 31 16 00         B    77    				call os_write_bytes_to_file
002373 28 96               B    78    				jr z,rx_rnblk
002375 F5                  B    79    rxwtd_fail		push af
002376 CD 2A 38 00         B    80    				call s_badack
00237A F1                  B    81    				pop af
00237B C9                  B    82    				ret
                           B    83    				
00237C CD 19 38 00         B    84    rx_lbr			call s_goodack
002380 ED4B 99 59 00       B    85    				ld bc,(serial_file_length_cache
002385 11 96 5A 00         B    86    				ld de,buffer_addr
002389 21 2C 51 00         B    87    				ld hl,serial_fileheader
00238D CD 31 16 00         B    88    				call os_write_bytes_to_file
002391 C0                  B    89    				ret nz	
                           B    90    				
002392 3E20                B    91    rxtd_done		ld a,020h						002394 B7                  B    92    				or a
002395 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
002396 3E21                B    98    rx_nrs			ld a,'!'						002398 BE                  B    99    				cp (hl)							002399 C2 44 24 00         B   100    				jr nz,notrxe
00239D 23                  B   101    				inc hl
00239E 3E20                B   102    				ld a,' '
0023A0 BE                  B   103    				cp (hl)
0023A1 2B                  B   104    				dec hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0023A2 C2 44 24 00         B   105    				jr nz,notrxe
0023A6 112A0000            B   106    				ld de,02ah						0023AA ED53 18 51 00       B   107    				ld (serial_filename),de			0023AF CD 9A 24 00         B   108    				call rx_get_header
0023B3 C0                  B   109    				ret nz
0023B4 21 38 4D 00         B   110    				ld hl,ser_rec2_msg
0023B8 CD CE 13 00         B   111    				call os_show_packed_text
0023BC CD 19 38 00         B   112    				call s_goodack
0023C0 3E01                B   113    				ld a,1							0023C2 32 2B 51 00         B   114    				ld (serial_timeout),a
0023C6 CD C3 37 00         B   115    				call s_getblock					0023CA 28 07               B   116    				jr z,rxe_fblok
0023CC F5                  B   117    rxe_badblock	push af							0023CD CD 2A 38 00         B   118    				call s_badack					0023D1 F1                  B   119    				pop af
0023D2 C9                  B   120    				ret
                           B   121    	
0023D3 2A 98 57 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
0023D7 1150524F            B   123    				ld de,04f5250h					0023DB AF                  B   124    				xor a
0023DC 28 04               B   125    				jr z,rxe_ok
0023DE 3E1A                B   126    				ld a,1ah						0023E0 B7                  B   127    				or a
0023E1 C9                  B   128    				ret
0023E2 2A 9B 57 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			0023E6 22 0F 51 00         B   130    				ld (serial_ez80_address),hl
0023EA 01000100            B   131    				ld bc,256						0023EE DD21 2C 51 00       B   132    				ld ix,serial_fileheader
0023F3 AF                  B   133    				xor a
0023F4 DDB612              B   134    				or (ix+18)						0023F7 20 0A               B   135    				jr nz,mtones
0023F9 DDB611              B   136    				or a,(ix+17)					0023FC 20 05               B   137    				jr nz,mtones
0023FE 0600                B   138    				ld b,0
002400 DD4E10              B   139    				ld c,(ix+16)					002403 21 96 57 00         B   140    mtones			ld hl,sector_buffer				002407 ED5B 0F 51 00       B   141    				ld de,(serial_ez80_address)		00240C EDB0                B   142    				ldir
                           B   143    				
00240E D5                  B   144    				push de
00240F CD 19 38 00         B   145    				call s_goodack		
002413 DDE1                B   146    				pop ix							002415 2A 3C 51 00         B   147    				ld hl,(serial_fileheader+16)	002419 11000100            B   148    				ld de,256
00241D AF                  B   149    				xor a
00241E ED52                B   150    				sbc hl,de						002420 28 18               B   151    				jr z,rxe_done
002422 38 16               B   152    				jr c,rxe_done
002424 EB                  B   153    				ex de,hl
002425 ED53 3C 51 00       B   154    				ld (serial_fileheader+16),de	00242A DD2A 0F 51 00       B   155    				ld ix,(serial_ez80_address)
00242F 01000100            B   156    				ld bc,256
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002433 DD09                B   157    				add ix,bc
002435 CD 81 37 00         B   158    				call s_gbloop					002439 C0                  B   159    				ret nz
00243A E1                  B   160    rxe_done		pop hl							00243B CD FD 2D 00         B   161    				call enable_nmi					00243F 2A 0F 51 00         B   162    				ld hl,(serial_ez80_address)
002443 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
002444 CD E1 24 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
002448 0610                B   169    				ld b,16							00244A 11 18 51 00         B   170    				ld de,serial_filename
00244E CD E5 11 00         B   171    				call os_copy_ascii_run			002452 79                  B   172    				ld a,c
002453 32 2A 51 00         B   173    				ld (serial_fn_length),a
002457 CD 99 0F 00         B   174    				call os_scan_for_space
                           B   175    				
00245B CD 4F 1B 00         B   176    				call hexword_or_bust			00245F CA BC 15 00         B   177    				jp z,os_no_start_addr			002463 ED53 96 59 00       B   178    				ld (data_load_addr),de			002468 2A A1 52 00         B   179    				ld hl,(sys_ram_high)			00246C 2B                  B   180    				dec hl
00246D AF                  B   181    				xor a
00246E ED52                B   182    				sbc hl,de
002470 38 04               B   183    				jr c,os_prok
002472 3E26                B   184    				ld a,026h						002474 B7                  B   185    				or a
002475 C9                  B   186    				ret
                           B   187    
002476 CD 9A 24 00         B   188    os_prok			call rx_get_header
00247A C0                  B   189    				ret nz
                           B   190    
00247B 21 38 4D 00         B   191    				ld hl,ser_rec2_msg
00247F CD CE 13 00         B   192    				call os_show_packed_text
                           B   193    	
002483 2A 96 59 00         B   194    				ld hl,(data_load_addr)			002487 CD 6F 37 00         B   195    				call serial_receive_file
00248B C0                  B   196    				ret nz							                           B   197    
00248C ED5B 3C 51 00       B   198    				ld de,(serial_fileheader+16)	002491 ED53 99 59 00       B   199    				ld (filesize_cache),de
002496 C3 6C 20 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
00249A                     B   204    rx_get_header
00249A 21 34 4D 00         B   205    				ld hl,ser_rec_msg
00249E CD CE 13 00         B   206    				call os_show_packed_text
                           B   207    				
0024A2 3E00                B   208    				ld a,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0024A4 32 4D 51 00         B   209    				ld (anim_wait_count),a			0024A8 3A 4D 51 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0024AC 3C                  B   211    				inc a
0024AD 47                  B   212    				ld b,a
0024AE FE06                B   213    				cp 6
0024B0 20 07               B   214    				jr nz,notsix
0024B2 0E20                B   215    				ld c,' '
0024B4 0605                B   216    				ld b,5
0024B6 AF                  B   217    				xor a
0024B7 18 02               B   218    				jr mcharset
0024B9 0E2E                B   219    notsix			ld c,'.'
0024BB 32 4D 51 00         B   220    mcharset		ld (anim_wait_count),a
0024BF CD 01 1A 00         B   221    				call os_print_multiple_chars
0024C3 CD 55 0F 00         B   222    				call home_cursor
                           B   223    				
0024C7 21 18 51 00         B   224    				ld hl,serial_filename			0024CB 3E01                B   225    				ld a,1							0024CD CD D4 36 00         B   226    				call serial_get_header
0024D1 C8                  B   227    				ret z
0024D2 FE83                B   228    				cp 083h							0024D4 C0                  B   229    				ret nz
0024D5 CD B9 36 00         B   230    				call os_get_key_press
0024D9 FE76                B   231    				cp 076h
0024DB 20 CB               B   232    				jr nz,get_hdr_loop
0024DD 3E80                B   233    				ld a,080h						0024DF B7                  B   234    notsto			or a
0024E0 C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
0024E1                     B   240    clear_serial_filename
                           B   241    
0024E1 E5                  B   242    				push hl							0024E2 21 18 51 00         B   243    				ld hl,serial_filename
0024E6 01100000            B   244    				ld bc,16
0024EA AF                  B   245    				xor a
0024EB CD 2A 15 00         B   246    				call os_bchl_memfill
0024EF E1                  B   247    				pop hl
0024F0 C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
0024F1 7E                  B     5    os_cmd_tx		ld a,(hl)						0024F2 B7                  B     6    				or a
0024F3 CA B4 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0024F7 E5                  B     9    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
0024F8 21 18 51 00         B    10    				ld hl,serial_filename
0024FC 01100000            B    11    				ld bc,16
002500 AF                  B    12    				xor a
002501 CD 2A 15 00         B    13    				call os_bchl_memfill
002505 E1                  B    14    				pop hl
                           B    15    			
002506 0610                B    16    				ld b,16							002508 11 18 51 00         B    17    				ld de,serial_filename
00250C CD E5 11 00         B    18    				call os_copy_ascii_run			002510 79                  B    19    				ld a,c
002511 32 2A 51 00         B    20    				ld (serial_fn_length),a
002515 CD 99 0F 00         B    21    				call os_scan_for_space
                           B    22    							
002519 CD 4F 1B 00         B    23    				call hexword_or_bust			00251D CA BC 15 00         B    24    				jp z,os_no_start_addr			002521 ED53 0F 51 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
002526 CD 4F 1B 00         B    27    				call hexword_or_bust			00252A CA C0 15 00         B    28    				jp z,os_no_filesize
00252E ED53 12 51 00       B    29    				ld (serial_file_length),de
002533 21000000            B    30    				ld hl,0
002537 3E07                B    31    				ld a,07h						002539 B7                  B    32    				or a
00253A ED5A                B    33    				adc hl,de
00253C 28 1D               B    34    				jr z,s_error
                           B    35    				
00253E 21 3D 4D 00         B    36    				ld hl,ser_send_msg
002542 CD CE 13 00         B    37    				call os_show_packed_text
                           B    38    			
002546 ED5B 12 51 00       B    39    				ld de,(serial_file_length)
00254B 21 18 51 00         B    40    				ld hl,serial_filename			00254F DD2A 0F 51 00       B    41    				ld ix,(serial_ez80_address)
002554 CD 38 38 00         B    42    				call serial_send_file
002558 C0                  B    43    				ret nz			
                           B    44    			
002559 3E20                B    45    				ld a,020h						00255B B7                  B    46    s_error			or a
00255C C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
00255D CD 4F 1B 00         B     5    os_cmd_t		call hexword_or_bust			002561 28 05               B     6    				jr z,t_no_hex					002563 ED53 3C 53 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
002568 0610                B     9    t_no_hex		ld b,16
00256A C5                  B    10    smaalp			push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
                           B    11    				
00256B 21 AE 25 00         B    12    				ld hl,gtr_cmd_prefix			00256F CD 0C 0F 00         B    13    				call os_print_string
002573 ED5B 3C 53 00       B    14    				ld de,(mem_mon_addr)
002578 CD D7 12 00         B    15    				call os_show_hex_address
                           B    16    
00257C 21 A6 53 00         B    17    				ld hl,output_line
002580 3620                B    18    				ld (hl),' '
002582 23                  B    19    				inc hl
002583 3622                B    20    				ld (hl),022h
002585 0610                B    21    				ld b,16
002587 23                  B    22    mabllp			inc hl
002588 1A                  B    23    				ld a,(de)	
002589 FE20                B    24    				cp 020h
00258B 38 04               B    25    				jr c,chchar
00258D FE7F                B    26    				cp 07fh
00258F 38 02               B    27    				jr c,nchchar
002591 3E7C                B    28    chchar			ld a,07ch
002593 77                  B    29    nchchar			ld (hl),a
002594 13                  B    30    				inc de
002595 10 F0               B    31    				djnz mabllp
                           B    32    
002597 ED53 3C 53 00       B    33    				ld (mem_mon_addr),de
00259C 23                  B    34    				inc hl
00259D 3622                B    35    				ld (hl),022h
00259F 23                  B    36    				inc hl
0025A0 360B                B    37    				ld (hl),11
0025A2 23                  B    38    				inc hl
0025A3 3600                B    39    				ld (hl),0
0025A5 CD 02 13 00         B    40    				call os_print_output_line
0025A9 C1                  B    41    				pop bc
0025AA 10 BE               B    42    				djnz smaalp
0025AC AF                  B    43    				xor a
0025AD C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0025AE 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0025B1                     B     5    os_cmd_remount
                           B     6    
0025B1 3E00                B     7    				ld a,0							0025B3 CD E6 17 00         B     8    				call os_mount_volumes
0025B7 CD 97 13 00         B     9    				call os_new_line
0025BB AF                  B    10    				xor a
0025BC C9                  B    11    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mount.asm
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
0025BD                     B     5    os_cmd_vers
                           B     6    
0025BD 21 83 48 00         B     7    				ld hl,os_version_txt
0025C1 CD 0C 0F 00         B     8    				call os_print_string
                           B     9    			
0025C5 CD AF 33 00         B    10    				call hwsc_get_version
0025C9 D5                  B    11    				push de
0025CA EB                  B    12    				ex de,hl
0025CB CD F6 12 00         B    13    				call os_show_hex_word
                           B    14    				
0025CF 21 A6 48 00         B    15    				ld hl,fwd_slash_txt
0025D3 CD 0C 0F 00         B    16    				call os_print_string
                           B    17    				
0025D7 21 91 48 00         B    18    				ld hl,hw_version_txt
0025DB CD 0C 0F 00         B    19    				call os_print_string
0025DF D1                  B    20    				pop de
0025E0 CD F6 12 00         B    21    				call os_show_hex_word
                           B    22    				
0025E4 CD 97 13 00         B    23    				call os_new_line
0025E8 CD 97 13 00         B    24    				call os_new_line	
0025EC AF                  B    25    				xor a
0025ED C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.03 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;----------------------------------------------
                           B     8    
0025EE                     B     9    os_cmd_exec
                           B    10    
0025EE 21 04 54 00         B    11    				ld hl,in_script_flag			0025F2 CB46                B    12    				bit 0,(hl)
0025F4 28 02               B    13    				jr z,oktlscr
0025F6 AF                  B    14    				xor a
0025F7 C9                  B    15    				ret
0025F8 CBC6                B    16    oktlscr			set 0,(hl)
                           B    17    			
0025FA 2A F8 53 00         B    18    				ld hl,(os_args_loc)				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0025FE 11 25 53 00         B    19    				ld de,script_fn					002602 060D                B    20    				ld b,13
002604 CD E5 11 00         B    21    				call os_copy_ascii_run
002608 CD 19 1A 00         B    22    				call fs_get_dir_cluster			00260C ED53 05 54 00       B    23    				ld (script_dir),de
                           B    24    				
002611 CD 49 16 00         B    25    				call os_check_volume_format	
002615 C0                  B    26    				ret nz
                           B    27    				
002616 21000000            B    28    				ld hl,0
00261A 22 5A 54 00         B    29    				ld (script_file_offset),hl
                           B    30    				
                           B    31    			
00261E 3A 89 54 00         B    32    scrp_loop		ld a,(key_mod_flags)			002622 E602                B    33    				and 2
002624 28 27               B    34    				jr z,noskip_script	
002626 1600                B    35    				ld d,0
002628 CD B9 36 00         B    36    chk_c			call os_get_key_press
00262C FE21                B    37    				cp 021h
00262E 20 1A               B    38    				jr nz,no_cpr
002630 1619                B    39    wkend			ld d,25							002632 CD 5C 33 00         B    40    wkend2			call hwsc_wait_vrt				002636 CD B9 36 00         B    41    				call os_get_key_press		
00263A B7                  B    42    				or a
00263B 20 F3               B    43    				jr nz,wkend
00263D 15                  B    44    				dec d
00263E 20 F2               B    45    				jr nz,wkend2
002640 21 51 4D 00         B    46    				ld hl,script_aborted_msg
002644 CD CE 13 00         B    47    				call os_show_packed_text
002648 AF                  B    48    				xor a							002649 C9                  B    49    				ret
00264A 15                  B    50    no_cpr			dec d
00264B 20 DB               B    51    				jr nz,chk_c
                           B    52    			
                           B    53    			
00264D                     B    54    noskip_script
                           B    55    		
00264D 21 08 54 00         B    56    				ld hl,script_buffer				002651 11 54 53 00         B    57    				ld de,commandstring
002655 0651                B    58    				ld b,max_buffer_chars+1
002657 3E20                B    59    				ld a,020h						002659 77                  B    60    scrp_flp		ld (hl),a
00265A 12                  B    61    				ld (de),a
00265B 23                  B    62    				inc hl
00265C 13                  B    63    				inc de
00265D 10 FA               B    64    				djnz scrp_flp
                           B    65    				
00265F CD 19 1A 00         B    66    				call fs_get_dir_cluster			002663 D5                  B    67    				push de
002664 ED5B 05 54 00       B    68    				ld de,(script_dir)				002669 CD 25 1A 00         B    69    				call fs_update_dir_cluster
00266D 21 25 53 00         B    70    				ld hl,script_fn					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
002671 CD CD 44 00         B    71    				call fs_hl_to_filename			002675 CD 6E 3C 00         B    72    				call fs_open_file_command		002679 38 71               B    73    				jr c,pop_ret
00267B B7                  B    74    				or a
00267C 20 6E               B    75    				jr nz,pop_ret
00267E D1                  B    76    				pop de
00267F CD 25 1A 00         B    77    				call fs_update_dir_cluster		                           B    78    			
002683 11500000            B    79    				ld de,max_buffer_chars			002687 CD ED 15 00         B    80    				call os_set_load_length
00268B AF                  B    81    				xor a
00268C ED5B 5A 54 00       B    82    				ld de,(script_file_offset)		002691 CD F5 15 00         B    83    				call os_set_file_pointer
                           B    84    					
002695 21 08 54 00         B    85    				ld hl,script_buffer				002699 CD 0B 16 00         B    86    				call os_read_bytes_from_file
00269D B7                  B    87    				or a			
00269E 28 03               B    88    				jr z,scrp_ok					0026A0 FECC                B    89    				cp 0cch			
0026A2 C0                  B    90    				ret nz							                           B    91    				
0026A3 FD2A 5A 54 00       B    92    scrp_ok			ld iy,(script_file_offset)
0026A8 21 08 54 00         B    93    				ld hl,script_buffer				0026AC 11 54 53 00         B    94    				ld de,commandstring
0026B0 3E50                B    95    				ld a,max_buffer_chars
0026B2 47                  B    96    				ld b,a
0026B3 7E                  B    97    scrp_cmd		ld a,(hl)
0026B4 FE20                B    98    				cp 020h
0026B6 38 07               B    99    				jr c,scrp_eol
0026B8 12                  B   100    				ld (de),a
0026B9 23                  B   101    				inc hl
0026BA 13                  B   102    				inc de
0026BB FD23                B   103    				inc iy
0026BD 10 F4               B   104    				djnz scrp_cmd
                           B   105    				
0026BF AF                  B   106    scrp_eol		xor a
0026C0 12                  B   107    				ld (de),a						0026C1 FD22 5A 54 00       B   108    				ld (script_file_offset),iy
0026C6 22 5D 54 00         B   109    				ld (script_buffer_offset),hl
                           B   110    			
0026CA CD 4A 0C 00         B   111    				call os_parse_cmd_chk_ps		                           B   112    				
0026CE FD2A 5A 54 00       B   113    				ld iy,(script_file_offset)		0026D3 2A 5D 54 00         B   114    				ld hl,(script_buffer_offset)
0026D7 7E                  B   115    scrp_fnc		ld a,(hl)		
0026D8 B7                  B   116    				or a
0026D9 C8                  B   117    				ret z							0026DA FE20                B   118    				cp 020h
0026DC 30 05               B   119    				jr nc,scrp_gnc					0026DE 23                  B   120    				inc hl		
0026DF FD23                B   121    				inc iy							0026E1 18 F4               B   122    				jr scrp_fnc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   123    			
0026E3 FD22 5A 54 00       B   124    scrp_gnc		ld (script_file_offset),iy		0026E8 C3 1E 26 00         B   125    				jp scrp_loop	
                           B   126    			
                           B   127    			
                           B   128    			
0026EC D1                  B   129    pop_ret			pop de
0026ED C9                  B   130    				ret
                           B   131    				
                           B   132    			
                           B   133    ;----------------------------------------------
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0026EE                     B     7    os_cmd_ltn
                           B     8    
0026EE AF                  B     9    				xor a
0026EF C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0026F0                     B     5    os_cmd_pen
                           B     6    	
0026F0 0602                B     7    				ld b,2							0026F2 DD21 BA 50 00       B     8    				ld ix,current_pen
                           B     9    				
0026F7 CD 4F 1B 00         B    10    chpenlp			call hexword_or_bust			0026FB 28 0D               B    11    				jr z,pendone					0026FD 23                  B    12    				inc hl
0026FE DD7300              B    13    				ld (ix),e
002701 DD7201              B    14    				ld (ix+1),d
002704 DD23                B    15    				inc ix
002706 DD23                B    16    				inc ix
002708 10 ED               B    17    				djnz chpenlp	
                           B    18    				
00270A CD 7E 0F 00         B    19    pendone			call os_refresh_screen
00270E AF                  B    20    				xor a
00270F C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002710                     B     5    os_cmd_palette
                           B     6    
002710 0610                B     7    				ld b,16							002712 DD21 BE 50 00       B     8    				ld ix,pen_palette
                           B     9    				
002717 0E00                B    10    				ld c,0
002719 C5                  B    11    chcollp			push bc
00271A CD 4F 1B 00         B    12    				call hexword_or_bust			00271E C1                  B    13    				pop bc
00271F 28 0E               B    14    				jr z,colrdone					002721 0C                  B    15    				inc c
002722 23                  B    16    				inc hl
002723 DD7300              B    17    				ld (ix),e
002726 DD7201              B    18    				ld (ix+1),d
002729 DD23                B    19    				inc ix
00272B DD23                B    20    				inc ix
00272D 10 EA               B    21    				djnz chcollp
                           B    22    			
00272F 79                  B    23    colrdone		ld a,c
002730 B7                  B    24    				or a
002731 20 04               B    25    				jr nz,pal_ok
002733 3E81                B    26    				ld a,81h						002735 B7                  B    27    				or a
002736 C9                  B    28    				ret
002737 21 BE 50 00         B    29    pal_ok			ld hl,pen_palette
00273B CD 7E 2F 00         B    30    				call hswc_set_ui_colours	
00273F AF                  B    31    				xor a
002740 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
002741                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
002741 CD 78 2C 00         B    15    				call disable_ms_irq
                           B    16    
002745 21 A0 52 00         B    17    				ld hl,devices_connected
002749 CB8E                B    18    				res 1,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
                           B    19    		
00274B CD F4 34 00         B    20    				call init_mouse
00274F C0                  B    21    				ret nz
                           B    22    			
002750 AF                  B    23    				xor a
002751 32 93 54 00         B    24    				ld (mouse_packet_index),a
002755 32 94 54 00         B    25    				ld (mouse_buttons),a
002759 21000000            B    26    				ld hl,0
00275D 22 95 54 00         B    27    				ld (mouse_disp_x),hl
002761 22 98 54 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
002765 21800200            B    30    				ld hl,window_width_pixels
002769 11E00100            B    31    				ld de,window_height_pixels
00276D CD 18 14 00         B    32    				call os_set_mouse_window
                           B    33    
002771 CD 72 2C 00         B    34    				call enable_ms_irq
                           B    35    
002775 21 A0 52 00         B    36    				ld hl,devices_connected
002779 CBCE                B    37    				set 1,(hl)
00277B AF                  B    38    				xor a
00277C C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
00277D                     B     5    os_cmd_vmode
                           B     6    	
00277D CD 4F 1B 00         B     7    				call hexword_or_bust			002781 28 78               B     8    				jr z,vm_no_data					002783 7B                  B     9    				ld a,e
                           B    10    
002784 FE04                B    11    set_vmode		cp 4
002786 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
002788 2A F3 50 00         B    14    				ld hl,(font_addr)				00278C ED5B F9 50 00       B    15    				ld de,(video_window_address)
002791 ED4B F6 50 00       B    16    				ld bc,(font_length)
002796 EDB0                B    17    				ldir
                           B    18    								
002798 32 B9 50 00         B    19    				ld (video_mode),a
00279C 21070000            B    20    				ld hl,7
0027A0 67                  B    21    				ld h,a
0027A1 ED6C                B    22    				mlt hl
0027A3 E5                  B    23    				push hl
0027A4 DDE1                B    24    				pop ix
0027A6 11 FF 27 00         B    25    				ld de,mode_param_list
0027AA DD19                B    26    				add ix,de
0027AC 21000000            B    27    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
0027B0 11000000            B    28    				ld de,0
0027B4 DD6E00              B    29    				ld l,(ix)
0027B7 DD6601              B    30    				ld h,(ix+1)
0027BA DD5E02              B    31    				ld e,(ix+2)
0027BD DD5603              B    32    				ld d,(ix+3)
0027C0 DD4604              B    33    				ld b,(ix+4)
0027C3 DDE5                B    34    				push ix
0027C5 CD 6B 2E 00         B    35    				call set_bitmap_parameters
0027C9 DDE1                B    36    				pop ix
0027CB DD4605              B    37    				ld b,(ix+5)
0027CE DD4E06              B    38    				ld c,(ix+6)
0027D1 CD D1 2E 00         B    39    				call set_charmap_parameters
                           B    40    				
0027D5 2A F9 50 00         B    41    				ld hl,(video_window_address)	0027D9 ED5B F3 50 00       B    42    				ld de,(font_addr)				0027DE ED4B F6 50 00       B    43    				ld bc,(font_length)				0027E3 EDB0                B    44    				ldir
                           B    45    				
0027E5 CD 8A 2F 00         B    46    				call hwsc_clear_screen
                           B    47    				
0027E9 01080400            B    48    				ld bc,0408h
0027ED CD 9F 2E 00         B    49    				call set_font_parameters		                           B    50    				
0027F1 AF                  B    51    				xor a
0027F2 32 E0 50 00         B    52    				ld (active_cursor_image),a		                           B    53    				
0027F6 C9                  B    54    				ret
                           B    55    
0027F7 3E88                B    56    vm_bad_range	ld a,88h
0027F9 B7                  B    57    				or a
0027FA C9                  B    58    				ret
                           B    59    
0027FB 3E81                B    60    vm_no_data		ld a,81h
0027FD B7                  B    61    				or a
0027FE C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
0027FF                     B    66    mode_param_list
                           B    67    
0027FF 4001E001            B    68    				dw 640/2,480
002803 00                  B    69    				db 00b
002804 503C                B    70    				db 80,60
                           B    71    				
002806 4001F000            B    72    				dw 640/2,240
00280A 01                  B    73    				db 01b
00280B 501E                B    74    				db 80,30
                           B    75    				
00280D A000E001            B    76    				dw 320/2,480
002811 02                  B    77    				db 10b
002812 283C                B    78    				db 40,60
                           B    79    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
002814 A000F000            B    80    				dw 320/2,240
002818 03                  B    81    				db 11b
002819 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00281B                     B     5    os_cmd_font
                           B     6    	
00281B CD 49 16 00         B     7    				call os_check_volume_format	
00281F C0                  B     8    				ret nz
                           B     9    				
002820 CD 98 1C 00         B    10    				call filename_or_bust			002824 22 96 59 00         B    11    				ld (scratch_pad),hl
                           B    12    
002828 CD 19 1A 00         B    13    				call fs_get_dir_cluster			00282C ED53 99 59 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
002831 CD A7 16 00         B    16    				call os_root_dir				002835 C0                  B    17    				ret nz
002836 21 66 28 00         B    18    				ld hl,fonts_fn
00283A CD 97 16 00         B    19    				call os_change_dir
00283E 20 1A               B    20    				jr nz,no_font
                           B    21    				
002840 2A 96 59 00         B    22    				ld hl,(scratch_pad)
002844 CD DC 15 00         B    23    				call os_find_file				002848 20 10               B    24    				jr nz,no_font
                           B    25    				
00284A 11000700            B    26    				ld de,700h
00284E CD ED 15 00         B    27    				call os_set_load_length			                           B    28    
002852 2A F3 50 00         B    29    				ld hl,(font_addr)				002856 CD 0B 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
00285A F5                  B    32    no_font			push af
00285B ED5B 99 59 00       B    33    				ld de,(scratch_pad+3)			002860 CD 25 1A 00         B    34    				call fs_update_dir_cluster
002864 F1                  B    35    				pop af
002865 C9                  B    36    				ret
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
002866 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           A  2899    
00286C C9                  A  2900    os_cmd_unused	ret		; <- dummy command, sho
                           A  2901    
                           A  2902    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2903    ;----------------------------------------------
                           A  2904    
00286D                     A  2905    os_get_mem_high
                           A  2906    
00286D 2A A1 52 00         A  2907    		ld hl,(sys_ram_high)
002871 ED5B A4 52 00       A  2908    		ld de,(vram_a_high)
002876 ED4B A7 52 00       A  2909    		ld bc,(vram_b_high)
00287B AF                  A  2910    		xor a
00287C C9                  A  2911    		ret
                           A  2912    								
                           A  2913    ;----------------------------------------------
                           A  2914    ; Drivers
                           A  2915    ;----------------------------------------------
                           A  2916    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
00287D                     B    49    sd_card_driver				; label of driver c
                           B    50    
00287D C3 91 28 00         B    51    	jp sdc_get_id			; $00 : init / get 
002881 C3 5B 2A 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
002885 C3 AB 2A 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
002889 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
002891                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
002891 3E01                B    72    				ld a,1							002893 32 E1 2B 00         B    73    				ld (sdc_sdc),a			
                           B    74    
002897 CD 28 2C 00         B    75    				call sdc_power_off				00289B CD 33 2C 00         B    76    				call sdc_slow_clock				00289F CD 01 2C 00         B    77    				call sdc_select_card			                           B    78    
0028A3 11004000            B    79    				ld de,16384						0028A7 CD CA 33 00         B    80    				call hwsc_time_delay
                           B    81    				
0028AB CD 1D 2C 00         B    82    				call sdc_power_on				                           B    83    
0028AF 11830000            B    84    				ld de,131						0028B3 CD CA 33 00         B    85    				call hwsc_time_delay
                           B    86    
0028B7 CD 0C 2C 00         B    87    				call sdc_deselect_card			                           B    88    	
0028BB 060A                B    89    				ld b,10							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0028BD CD 99 2B 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
0028C1 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
0028C3 CD 01 2C 00         B    93    				call sdc_select_card			                           B    94    	
0028C7 3E40                B    95    				ld a,040h						0028C9 01009500            B    96    				ld bc,09500h					0028CD 11000000            B    97    				ld de,00000h
0028D1 CD 47 2B 00         B    98    				call sdc_send_command		 
0028D5 CD F2 2B 00         B    99    				call sdc_get_byte				0028D9 CD 6C 2B 00         B   100    				call sdc_wait_ncr				0028DD EE01                B   101    				xor 01h							0028DF C2 A0 2B 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
0028E3 01401F00            B   105    				ld bc,8000						0028E7 C5                  B   106    sdc_iwl			push bc							0028E8 3E77                B   107    				ld a,077h						0028EA CD 3F 2B 00         B   108    				call sdc_send_command_null_args
0028EE CD F2 2B 00         B   109    				call sdc_get_byte				0028F2 CD F2 2B 00         B   110    				call sdc_get_byte				0028F6 3E69                B   111    				ld a,069h						0028F8 CD 3F 2B 00         B   112    				call sdc_send_command_null_args
0028FC CD F2 2B 00         B   113    				call sdc_get_byte
002900 C1                  B   114    				pop bc
002901 CD 6C 2B 00         B   115    				call sdc_wait_ncr				002905 CB57                B   116    				bit 2,a							002907 20 0C               B   117    				jr nz,mmc_init			
002909 B7                  B   118    				or a
00290A 28 2A               B   119    				jr z,sdc_init_done				00290C 0B                  B   120    				dec bc
00290D 78                  B   121    				ld a,b
00290E B1                  B   122    				or c
00290F 20 D6               B   123    				jr nz,sdc_iwl
002911 C3 AE 2B 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
002915 AF                  B   127    mmc_init		xor a							002916 32 E1 2B 00         B   128    				ld (sdc_sdc),a
00291A 01401F00            B   129    				ld bc,8000						00291E C5                  B   130    mmc_iwl			push bc
00291F 3E41                B   131    				ld a,041h						002921 CD 3F 2B 00         B   132    				call sdc_send_command_null_args
002925 C1                  B   133    				pop bc
002926 CD 6C 2B 00         B   134    				call sdc_wait_ncr				00292A B7                  B   135    				or a							00292B 28 09               B   136    				jr z,sdc_init_done
00292D 0B                  B   137    				dec bc
00292E 78                  B   138    				ld a,b
00292F B1                  B   139    				or c
002930 20 EC               B   140    				jr nz,mmc_iwl
002932 C3 AA 2B 00         B   141    				jp mmc_init_fail
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   142    
002936                     B   143    sdc_init_done
                           B   144    
002936 3E49                B   145    				ld a,049h						002938 CD 3F 2B 00         B   146    				call sdc_send_command_null_args
00293C CD 6C 2B 00         B   147    				call sdc_wait_ncr				002940 B7                  B   148    				or a							002941 C2 B2 2B 00         B   149    				jp nz,sdc_id_fail
002945 CD 80 2B 00         B   150    				call sdc_wait_data_token		002949 B7                  B   151    				or a
00294A C2 B2 2B 00         B   152    				jp nz,sdc_id_fail
00294E 21 96 57 00         B   153    				ld hl,sector_buffer				002952 CD 48 2A 00         B   154    				call sdc_read_id_bytes	
                           B   155    
002956 3E4A                B   156    				ld a,04ah						002958 CD 3F 2B 00         B   157    				call sdc_send_command_null_args
00295C CD 6C 2B 00         B   158    				call sdc_wait_ncr				002960 B7                  B   159    				or a							002961 C2 B2 2B 00         B   160    				jp nz,sdc_id_fail
002965 CD 80 2B 00         B   161    				call sdc_wait_data_token		002969 B7                  B   162    				or a
00296A C2 B2 2B 00         B   163    				jp nz,sdc_id_fail
00296E 21 A6 57 00         B   164    				ld hl,sector_buffer+16			002972 CD 48 2A 00         B   165    				call sdc_read_id_bytes
002976 CD 0C 2C 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
00297A                     B   169    sdc_quit	
                           B   170    
00297A 21 A9 57 00         B   171    				ld hl,sector_buffer+013h		00297E 11 B6 57 00         B   172    				ld de,sector_buffer+020h
002982 01050000            B   173    				ld bc,5
002986 3A E1 2B 00         B   174    				ld a,(sdc_sdc)
00298A B7                  B   175    				or a
00298B 20 01               B   176    				jr nz,sdc_cn5
00298D 03                  B   177    				inc bc
00298E EDB0                B   178    sdc_cn5			ldir
002990 E5                  B   179    				push hl
002991 D5                  B   180    				push de
002992 21 C6 2B 00         B   181    				ld hl,sdc_vnchars
002996 011A0000            B   182    				ld bc,26
00299A EDB0                B   183    				ldir
00299C D1                  B   184    				pop de
00299D E1                  B   185    				pop hl
00299E 13                  B   186    				inc de
00299F 13                  B   187    				inc de
0029A0 7E                  B   188    				ld a,(hl)
0029A1 CB3F                B   189    				srl a
0029A3 CB3F                B   190    				srl a
0029A5 CB3F                B   191    				srl a
0029A7 CB3F                B   192    				srl a
0029A9 C630                B   193    				add a,030h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0029AB 12                  B   194    				ld (de),a
0029AC 13                  B   195    				inc de
0029AD 13                  B   196    				inc de
0029AE 7E                  B   197    				ld a,(hl)
0029AF E60F                B   198    				and 0fh
0029B1 C630                B   199    				add a,030h
0029B3 12                  B   200    				ld (de),a						0029B4 13                  B   201    				inc de
0029B5 13                  B   202    				inc de
0029B6 13                  B   203    				inc de
0029B7 13                  B   204    				inc de
0029B8 13                  B   205    				inc de
0029B9 23                  B   206    				inc hl
0029BA 0604                B   207    				ld b,4
0029BC 7E                  B   208    sdc_snulp		ld a,(hl)						0029BD CB3F                B   209    				srl a
0029BF CB3F                B   210    				srl a
0029C1 CB3F                B   211    				srl a
0029C3 CB3F                B   212    				srl a
0029C5 C630                B   213    				add a,030h
0029C7 FE3A                B   214    				cp 03ah
0029C9 38 02               B   215    				jr c,sdc_hvl1
0029CB C607                B   216    				add a,07h
0029CD 12                  B   217    sdc_hvl1		ld (de),a
0029CE 13                  B   218    				inc de
0029CF 7E                  B   219    				ld a,(hl)
0029D0 E60F                B   220    				and 0fh
0029D2 C630                B   221    				add a,030h
0029D4 FE3A                B   222    				cp 03ah
0029D6 38 02               B   223    				jr c,sdc_hvl2
0029D8 C607                B   224    				add a,07h
0029DA 12                  B   225    sdc_hvl2		ld (de),a
0029DB 13                  B   226    				inc de
0029DC 23                  B   227    				inc hl
0029DD 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
0029DF DD21 96 57 00       B   232    				ld ix,sector_buffer				0029E4 DD7E06              B   233    				ld a,(ix+6)
0029E7 E603                B   234    				and 00000011b
0029E9 57                  B   235    				ld d,a
0029EA DD5E07              B   236    				ld e,(ix+7)
0029ED DD7E08              B   237    				ld a,(ix+8)
0029F0 E6C0                B   238    				and 11000000b
0029F2 CB27                B   239    				sla a
0029F4 CB13                B   240    				rl e
0029F6 CB12                B   241    				rl d
0029F8 CB27                B   242    				sla a
0029FA CB13                B   243    				rl e
0029FC CB12                B   244    				rl d							                           B   245    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0029FE DD7E09              B   246    				ld a,(ix+9)
002A01 E603                B   247    				and 00000011b
002A03 47                  B   248    				ld b,a
002A04 DD7E0A              B   249    				ld a,(ix+10)
002A07 E680                B   250    				and 10000000b
002A09 CB27                B   251    				sla a
002A0B CB10                B   252    				rl b							                           B   253    	
002A0D 04                  B   254    				inc b
002A0E 04                  B   255    				inc b
002A0F 21000000            B   256    				ld hl,0
002A13 CB23                B   257    sdc_cmsh		sla e
002A15 CB12                B   258    				rl d
002A17 CB15                B   259    				rl l
002A19 CB14                B   260    				rl h
002A1B 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
002A1D DD7E05              B   263    				ld a,(ix+5)
002A20 E60F                B   264    				and 00001111b					002A22 28 17               B   265    				jr z,sdc_nbls
002A24 47                  B   266    				ld b,a
002A25 CB23                B   267    sdc_blsh		sla e
002A27 CB12                B   268    				rl d
002A29 CB15                B   269    				rl l
002A2B CB14                B   270    				rl h
002A2D 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
002A2F 0609                B   273    				ld b,9							002A31 CB3C                B   274    sdc_cbsec		srl h
002A33 CB1D                B   275    				rr l
002A35 CB1A                B   276    				rr d
002A37 CB1B                B   277    				rr e
002A39 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
002A3B E5                  B   280    sdc_nbls		push hl
002A3C C1                  B   281    				pop bc							002A3D 21 B6 57 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
002A41 CD 3E 2C 00         B   284    				call sdc_fast_clock				002A45 AF                  B   285    				xor a
002A46 37                  B   286    				scf
002A47 C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
002A48                     B   292    sdc_read_id_bytes
                           B   293    
002A48 0610                B   294    				ld b,16
002A4A CD F2 2B 00         B   295    sdc_csdlp		call sdc_get_byte
002A4E 77                  B   296    				ld (hl),a
002A4F 23                  B   297    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002A50 10 F8               B   298    				djnz sdc_csdlp
002A52 CD F2 2B 00         B   299    				call sdc_get_byte				002A56 CD F2 2B 00         B   300    				call sdc_get_byte				002A5A C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
002A5B                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
002A5B CD 01 2C 00         B   310    				call sdc_select_card
                           B   311    
002A5F 21 32 53 00         B   312    				ld hl,sector_lba0
002A63 5E                  B   313    				ld e,(hl)						002A64 23                  B   314    				inc hl
002A65 56                  B   315    				ld d,(hl)
002A66 23                  B   316    				inc hl
002A67 4E                  B   317    				ld c,(hl)
002A68 CB23                B   318    				sla e							002A6A CB12                B   319    				rl d
002A6C CB11                B   320    				rl c
002A6E 3E51                B   321    				ld a,051h						002A70 0601                B   322    				ld b,001h						002A72 CD 47 2B 00         B   323    				call sdc_send_command		
002A76 CD 6C 2B 00         B   324    				call sdc_wait_ncr				002A7A B7                  B   325    				or a							002A7B C2 B6 2B 00         B   326    				jp nz,sdc_bcr_error			
002A7F CD 80 2B 00         B   327    				call sdc_wait_data_token		002A83 B7                  B   328    				or a
002A84 C2 BA 2B 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
002A88 21 96 57 00         B   331    				ld hl,sector_buffer				002A8C 0600                B   332    				ld b,0
002A8E CD F2 2B 00         B   333    sdc_rslp		call sdc_get_byte
002A92 77                  B   334    				ld (hl),a
002A93 23                  B   335    				inc hl
002A94 CD F2 2B 00         B   336    				call sdc_get_byte
002A98 77                  B   337    				ld (hl),a
002A99 23                  B   338    				inc hl
002A9A 10 F2               B   339    				djnz sdc_rslp
002A9C CD F2 2B 00         B   340    				call sdc_get_byte				002AA0 CD F2 2B 00         B   341    				call sdc_get_byte				                           B   342    
002AA4 CD 0C 2C 00         B   343    				call sdc_deselect_card
002AA8 AF                  B   344    				xor a
002AA9 37                  B   345    				scf
002AAA C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002AAB                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
002AAB CD 01 2C 00         B   354    				call sdc_select_card
                           B   355    
002AAF 21 32 53 00         B   356    				ld hl,sector_lba0
002AB3 5E                  B   357    				ld e,(hl)						002AB4 23                  B   358    				inc hl
002AB5 56                  B   359    				ld d,(hl)
002AB6 23                  B   360    				inc hl
002AB7 4E                  B   361    				ld c,(hl)
002AB8 CB23                B   362    				sla e							002ABA CB12                B   363    				rl d
002ABC CB11                B   364    				rl c
002ABE 3E58                B   365    				ld a,058h						002AC0 0601                B   366    				ld b,001h						002AC2 CD 47 2B 00         B   367    				call sdc_send_command		
002AC6 CD 6C 2B 00         B   368    				call sdc_wait_ncr				002ACA B7                  B   369    				or a							002ACB C2 B6 2B 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
002ACF CD 99 2B 00         B   372    				call sdc_send_eight_clocks		                           B   373    
002AD3 3EFE                B   374    				ld a,0feh
002AD5 CD E2 2B 00         B   375    				call sdc_send_byte				                           B   376    
002AD9 21 96 57 00         B   377    				ld hl,sector_buffer				002ADD 0600                B   378    				ld b,0
002ADF 7E                  B   379    sdc_wslp		ld a,(hl)
002AE0 CD E2 2B 00         B   380    				call sdc_send_byte
002AE4 23                  B   381    				inc hl
002AE5 7E                  B   382    				ld a,(hl)
002AE6 CD E2 2B 00         B   383    				call sdc_send_byte
002AEA 23                  B   384    				inc hl
002AEB 10 F2               B   385    				djnz sdc_wslp
                           B   386    
002AED CD 99 2B 00         B   387    				call sdc_send_eight_clocks		002AF1 CD 99 2B 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
002AF5 CD F2 2B 00         B   390    				call sdc_get_byte				002AF9 E61F                B   391    				and 01fh
002AFB CB3F                B   392    				srl a
002AFD FE02                B   393    				cp 002h
002AFF C2 BE 2B 00         B   394    				jp nz,sdc_write_fail
                           B   395    
002B03 0150C300            B   396    				ld bc,50000						002B07 CD F2 2B 00         B   397    sdc_wcbsy		call sdc_get_byte				002B0B FEFF                B   398    				cp 0ffh
002B0D 28 09               B   399    				jr z,sdc_nbusy
002B0F 0B                  B   400    				dec bc
002B10 78                  B   401    				ld a,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002B11 B1                  B   402    				or c
002B12 20 F3               B   403    				jr nz,sdc_wcbsy
002B14 C3 C2 2B 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
002B18 3E4D                B   406    sdc_nbusy		ld a,04dh						002B1A 01000100            B   407    				ld bc,0100h			
002B1E 11000000            B   408    				ld de,0000h
002B22 CD 47 2B 00         B   409    				call sdc_send_command
002B26 CD 6C 2B 00         B   410    				call sdc_wait_ncr				002B2A B7                  B   411    				or a							002B2B C2 BE 2B 00         B   412    				jp nz,sdc_write_fail
002B2F CD F2 2B 00         B   413    				call sdc_get_byte				002B33 B7                  B   414    				or a							002B34 C2 BE 2B 00         B   415    				jp nz,sdc_write_fail		
002B38 CD 0C 2C 00         B   416    				call sdc_deselect_card			002B3C AF                  B   417    				xor a
002B3D 37                  B   418    				scf
002B3E C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
002B3F                     B   423    sdc_send_command_null_args
                           B   424    
002B3F 01000100            B   425    				ld bc,0100h				
002B43 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
002B47                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
002B47 F5                  B   433    				push af				
002B48 CD 99 2B 00         B   434    				call sdc_send_eight_clocks		002B4C F1                  B   435    				pop af
                           B   436    
002B4D CD E2 2B 00         B   437    				call sdc_send_byte				002B51 79                  B   438    				ld a,c							002B52 CD E2 2B 00         B   439    				call sdc_send_byte
002B56 7A                  B   440    				ld a,d
002B57 CD E2 2B 00         B   441    				call sdc_send_byte
002B5B 7B                  B   442    				ld a,e
002B5C CD E2 2B 00         B   443    				call sdc_send_byte
002B60 3E00                B   444    				ld a,0
002B62 CD E2 2B 00         B   445    				call sdc_send_byte
002B66 78                  B   446    				ld a,b							002B67 CD E2 2B 00         B   447    				call sdc_send_byte
002B6B C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
002B6C                     B   452    sdc_wait_ncr
                           B   453    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002B6C C5                  B   454    				push bc
002B6D 01000000            B   455    				ld bc,0
002B71 CD F2 2B 00         B   456    sdc_wncrl		call sdc_get_byte				002B75 CB7F                B   457    				bit 7,a							002B77 28 05               B   458    				jr z,sdc_gcr
002B79 0B                  B   459    				dec bc
002B7A 78                  B   460    			 	ld a,b
002B7B B1                  B   461    				or c
002B7C 20 F3               B   462    				jr nz,sdc_wncrl
002B7E C1                  B   463    sdc_gcr			pop bc
002B7F C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
002B80                     B   468    sdc_wait_data_token
                           B   469    
002B80 C5                  B   470    				push bc
002B81 01000000            B   471    				ld bc,0
002B85 CD F2 2B 00         B   472    sdc_wdt			call sdc_get_byte				002B89 FEFE                B   473    				cp 0feh
002B8B 28 09               B   474    				jr z,sdc_gdt
002B8D 0B                  B   475    				dec bc
002B8E 78                  B   476    			 	ld a,b
002B8F B1                  B   477    				or c
002B90 20 F3               B   478    				jr nz,sdc_wdt
002B92 C1                  B   479    				pop bc
002B93 3E01                B   480    				ld a,1							002B95 C9                  B   481    				ret
                           B   482    
002B96 C1                  B   483    sdc_gdt			pop bc
002B97 AF                  B   484    				xor a							002B98 C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
002B99                     B   489    sdc_send_eight_clocks
                           B   490    
002B99 3EFF                B   491    				ld a,0ffh
002B9B CD E2 2B 00         B   492    				call sdc_send_byte
002B9F C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
002BA0                     B   497    init_spi_mode_fail	
                           B   498    
002BA0 3E00                B   499    				ld a,sdc_error_spi_mode_failed
002BA2 F5                  B   500    fail_ret		push af
002BA3 CD 0C 2C 00         B   501    				call sdc_deselect_card
002BA7 F1                  B   502    				pop af
002BA8 B7                  B   503    				or a
002BA9 C9                  B   504    				ret
                           B   505    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   506    ;----------------------------------------------
                           B   507    
002BAA                     B   508    mmc_init_fail
                           B   509    
002BAA 3E01                B   510    				ld a,sdc_error_bad_init_mmc
002BAC 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
002BAE                     B   515    sdc_init_fail
                           B   516    
002BAE 3E02                B   517    				ld a,sdc_error_bad_init
002BB0 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
002BB2                     B   523    sdc_id_fail
                           B   524    
002BB2 3E03                B   525    				ld a,sdc_error_bad_id
002BB4 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
002BB6                     B   530    sdc_bcr_error
                           B   531    
002BB6 3E04                B   532    				ld a,sdc_error_bad_command_resp
002BB8 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
002BBA                     B   537    sdc_dt_timeout
                           B   538    
002BBA 3E05                B   539    				ld a,sdc_error_data_token_timeo
002BBC 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
002BBE                     B   544    sdc_write_fail
                           B   545    	
002BBE 3E07                B   546    				ld a,sdc_error_write_failed
002BC0 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
002BC2                     B   551    sdc_card_busy_timeout
                           B   552    
002BC2 3E06                B   553    				ld a,sdc_error_write_timeout
002BC4 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002BC6 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
002BCE 3A303030 30303030 
002BD6 30202020 20202000 
002BDE 000000 
                           B   559    
002BE1 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
002BE2                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
002BE2 C5                  C     9    					push bc
002BE3 01030000            C    10    					ld bc,port_sdc_data
002BE7 ED79                C    11    					out (bc),a					                           C    12    	
002BE9 0E01                C    13    					ld c,port_hw_flags			002BEB ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
002BEE 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
002BF0 C1                  C    17    					pop bc
002BF1 C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
002BF2                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
002BF2 3EFF                C    26    					ld a,0ffh
002BF4 CD E2 2B 00         C    27    					call sdc_send_byte
002BF8 C5                  C    28    					push bc
002BF9 01030000            C    29    					ld bc,port_sdc_data
002BFD ED78                C    30    					in a,(bc)					002BFF C1                  C    31    					pop bc
002C00 C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
002C01                     C    36    sdc_select_card
                           C    37    	
002C01 C5                  C    38    					push bc
002C02 01020000            C    39    					ld bc,port_sdc_ctrl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
002C06 3E02                C    40    					ld a,1<<sdc_cs				002C08 ED79                C    41    					out (bc),a
002C0A C1                  C    42    					pop bc
002C0B C9                  C    43    					ret
                           C    44    
                           C    45    
002C0C                     C    46    sdc_deselect_card
                           C    47    
002C0C C5                  C    48    					push bc
002C0D 01020000            C    49    					ld bc,port_sdc_ctrl
002C11 3E82                C    50    					ld a,080h+(1<<sdc_cs)		002C13 ED79                C    51    					out (bc),a
002C15 C1                  C    52    					pop bc
                           C    53    				
002C16 3EFF                C    54    					ld a,0ffh					002C18 CD E2 2B 00         C    55    					call sdc_send_byte
002C1C C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
002C1D                     C    60    sdc_power_on
                           C    61    
002C1D C5                  C    62    					push bc
002C1E 01020000            C    63    					ld bc,port_sdc_ctrl
002C22 3E81                C    64    					ld a,80h+(1<<sdc_power)		002C24 ED79                C    65    					out (bc),a
002C26 C1                  C    66    					pop bc
002C27 C9                  C    67    					ret
                           C    68    	
                           C    69    
002C28                     C    70    sdc_power_off
                           C    71    	
002C28 C5                  C    72    					push bc						002C29 01020000            C    73    					ld bc,port_sdc_ctrl
002C2D 3E01                C    74    					ld a,1<<sdc_power			002C2F ED79                C    75    					out (bc),a					002C31 C1                  C    76    					pop bc						002C32 C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
002C33                     C    82    sdc_slow_clock
                           C    83    
002C33 C5                  C    84    					push bc
002C34 01020000            C    85    					ld bc,port_sdc_ctrl
002C38 3E04                C    86    					ld a,1<<sdc_speed			002C3A ED79                C    87    					out (bc),a
002C3C C1                  C    88    					pop bc
002C3D C9                  C    89    					ret
                           C    90    
                           C    91    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
002C3E                     C    92    sdc_fast_clock
                           C    93    	
002C3E C5                  C    94    					push bc
002C3F 01020000            C    95    					ld bc,port_sdc_ctrl
002C43 3E84                C    96    					ld a,080h+(1<<sdc_speed)	002C45 ED79                C    97    					out (bc),a
002C47 C1                  C    98    					pop bc
002C48 C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  2918    
                           A  2919    
                           A  2920    ;----------------------------------------------
                           A  2921    ; IO routines
                           A  2922    ;----------------------------------------------
                           A  2923    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
002C49                     B     5    set_irq_vector
                           B     6    
002C49 AF                  B     7    				xor a
002C4A ED47                B     8    				ld i,a
002C4C 3EC3                B     9    				ld a,c3h						002C4E 32320000            B    10    				ld (032h),a	
002C52 21 84 2C 00         B    11    				ld hl,int_routine				002C56 22330000            B    12    				ld (033h),hl
002C5A C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
002C5B 21 A0 52 00         B    17    enable_os_irqs	ld hl,devices_connected			002C5F CB46                B    18    				bit 0,(hl)
002C61 C4 6C 2C 00         B    19    				call nz,enable_kb_irq
002C65 CB4E                B    20    				bit 1,(hl)
002C67 C4 72 2C 00         B    21    				call nz,enable_ms_irq
002C6B C9                  B    22    				ret
                           B    23    
                           B    24    
002C6C 3E81                B    25    enable_kb_irq	ld a,10000001b
002C6E ED3905              B    26    				out0 (port_irq_ctrl),a			002C71 C9                  B    27    				ret
                           B    28    
002C72 3E82                B    29    enable_ms_irq	ld a,10000010b
002C74 ED3905              B    30    				out0 (port_irq_ctrl),a			002C77 C9                  B    31    				ret
                           B    32    
002C78 3E02                B    33    disable_ms_irq	ld a,00000010b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
002C7A ED3905              B    34    				out0 (port_irq_ctrl),a			002C7D C9                  B    35    				ret
                           B    36    
002C7E 3E3F                B    37    disable_irqs	ld a,00111111b
002C80 ED3905              B    38    				out0 (port_irq_ctrl),a			002C83 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
002C84                     B    44    int_routine
002C84 F5                  B    45    				push af							002C85 ED3807              B    46    				in0 a,(port_ps2_ctrl)			002C88 CB67                B    47    				bit 4,a
002C8A C4 9C 2C 00         B    48    				call nz,kb_interrupt_handler
002C8E ED3807              B    49    				in0 a,(port_ps2_ctrl)			002C91 CB6F                B    50    				bit 5,a
002C93 C4 3E 2D 00         B    51    				call nz,ms_interrupt_handler
002C97 F1                  B    52    				pop af
                           B    53    
002C98 FB                  B    54    				ei								002C99 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
002C9C                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
002C9C E5                  B    77    				push hl							002C9D C5                  B    78    				push bc
                           B    79    				
002C9E ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		002CA1 47                  B    81    				ld b,a
                           B    82    
002CA2 3A 87 54 00         B    83    				ld a,(key_release_mode)
002CA6 B7                  B    84    				or a
002CA7 28 20               B    85    				jr z,key_pressed
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    86    			
002CA9 78                  B    87    				ld a,b							002CAA FEE0                B    88    				cp 0e0h							002CAC 28 61               B    89    				jr z,kirq_done	
002CAE FEE1                B    90    				cp 0e1h
002CB0 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
002CB2 CD 19 2D 00         B    93    				call qualifiers					002CB6 7D                  B    94    				ld a,l
002CB7 2F                  B    95    				cpl
002CB8 6F                  B    96    				ld l,a
002CB9 3A 89 54 00         B    97    				ld a,(key_mod_flags)
002CBD A5                  B    98    				and l							002CBE 32 89 54 00         B    99    				ld (key_mod_flags),a
002CC2 AF                  B   100    				xor a
002CC3 32 87 54 00         B   101    				ld (key_release_mode),a
002CC7 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
002CC9 78                  B   105    key_pressed		ld a,b							002CCA FEE0                B   106    				cp 0e0h							002CCC 28 41               B   107    				jr z,kirq_done	
002CCE FEE1                B   108    				cp 0e1h
002CD0 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
002CD2 FEF0                B   111    				cp 0f0h							002CD4 20 08               B   112    				jr nz,not_krel
002CD6 3E01                B   113    				ld a,1							002CD8 32 87 54 00         B   114    				ld (key_release_mode),a			002CDC 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
002CDE CD 19 2D 00         B   118    not_krel		call qualifiers					002CE2 3A 89 54 00         B   119    				ld a,(key_mod_flags)			002CE6 B5                  B   120    				or l
002CE7 32 89 54 00         B   121    				ld (key_mod_flags),a			002CEB 68                  B   122    				ld l,b
002CEC 01000000            B   123    				ld bc,0
002CF0 3A 85 54 00         B   124    				ld a,(key_buf_wr_idx)
002CF4 4F                  B   125    				ld c,a
002CF5 7D                  B   126    				ld a,l
002CF6 21 65 54 00         B   127    				ld hl,scancode_buffer
002CFA 09                  B   128    				add hl,bc
002CFB 77                  B   129    				ld (hl),a						002CFC 0E10                B   130    				ld c,16
002CFE 09                  B   131    				add hl,bc
002CFF 3A 89 54 00         B   132    				ld a,(key_mod_flags)			002D03 77                  B   133    				ld (hl),a	
002D04 3A 85 54 00         B   134    				ld a,(key_buf_wr_idx)
002D08 3C                  B   135    				inc a
002D09 E60F                B   136    				and 15
002D0B 32 85 54 00         B   137    				ld (key_buf_wr_idx),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   138    				
002D0F ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			002D12 CB67                B   140    				bit 4,a	
002D14 20 88               B   141    				jr nz,key_loop
                           B   142    
002D16 C1                  B   143    				pop bc
002D17 E1                  B   144    				pop hl
002D18 C9                  B   145    				ret
                           B   146    
                           B   147    
002D19 2E40                B   148    qualifiers		ld l,040h
002D1B FE2F                B   149    				cp 02fh
002D1D C8                  B   150    				ret z
                           B   151    			
002D1E 2E20                B   152    				ld l,020h
002D20 FE27                B   153    				cp 027h
002D22 C8                  B   154    				ret z
                           B   155    			
002D23 2E10                B   156    				ld l,010h
002D25 FE59                B   157    				cp 059h
002D27 C8                  B   158    				ret z
                           B   159    			
002D28 2E08                B   160    				ld l,08h
002D2A FE11                B   161    				cp 011h
002D2C C8                  B   162    				ret z
                           B   163    			
002D2D 2E04                B   164    				ld l,04h
002D2F FE1F                B   165    				cp 01fh
                           B   166    			
002D31 2E02                B   167    				ld l,02h
002D33 FE14                B   168    				cp 14h
002D35 C8                  B   169    				ret z
                           B   170    			
002D36 2E01                B   171    				ld l,01h
002D38 FE12                B   172    				cp 12h
002D3A C8                  B   173    				ret z
                           B   174    				
002D3B 2E00                B   175    				ld l,0
002D3D C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
002D3E                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
002D3E C5                  B   198    				push bc							002D3F D5                  B   199    				push de							002D40 E5                  B   200    				push hl							                           B   201    							
002D41 11000000            B   202    ms_loop			ld de,0		
002D45 3A 93 54 00         B   203    				ld a,(mouse_packet_index)		002D49 5F                  B   204    				ld e,a
002D4A 21 8F 54 00         B   205    				ld hl,mouse_packet	
002D4E 19                  B   206    				add hl,de
002D4F ED3806              B   207    				in0 a,(port_mouse_data)
002D52 77                  B   208    				ld (hl),a
                           B   209    								
002D53 21 8E 54 00         B   210    				ld hl,mouse_packet_size
002D57 1C                  B   211    				inc e							002D58 7B                  B   212    				ld a,e
002D59 BE                  B   213    				cp (hl)
002D5A 20 4F               B   214    				jr nz,msubpkt
                           B   215    
002D5C 3A 8F 54 00         B   216    				ld a,(mouse_packet)				002D60 4F                  B   217    				ld c,a	
002D61 E607                B   218    				and 0111b
002D63 32 94 54 00         B   219    				ld (mouse_buttons),a
                           B   220    				
002D67 11000000            B   221    				ld de,0							002D6B CB61                B   222    				bit 4,c
002D6D 28 01               B   223    				jr z,mxsignpos
002D6F 1B                  B   224    				dec de
002D70 3A 90 54 00         B   225    mxsignpos		ld a,(mouse_packet+1)
002D74 5F                  B   226    				ld e,a
002D75 2A 95 54 00         B   227    				ld hl,(mouse_disp_x)
002D79 19                  B   228    				add hl,de
002D7A 22 95 54 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
002D7E 11000000            B   231    				ld de,0							002D82 CB69                B   232    				bit 5,c
002D84 28 01               B   233    				jr z,mysignpos
002D86 1B                  B   234    				dec de
002D87 3A 91 54 00         B   235    mysignpos		ld a,(mouse_packet+2)
002D8B 5F                  B   236    				ld e,a
002D8C 2A 98 54 00         B   237    				ld hl,(mouse_disp_y)			002D90 AF                  B   238    				xor a							002D91 ED52                B   239    				sbc hl,de
002D93 22 98 54 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
002D97 21 92 54 00         B   242    				ld hl,mouse_packet+3			002D9B 3A 9B 54 00         B   243    				ld a,(mouse_wheel)
002D9F 86                  B   244    				add a,(hl)
002DA0 32 9B 54 00         B   245    				ld (mouse_wheel),a
                           B   246    				
002DA4 3E01                B   247    				ld a,1
002DA6 32 9C 54 00         B   248    				ld (mouse_updated),a			                           B   249    				
002DAA AF                  B   250    				xor a
002DAB 32 93 54 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
002DAF ED3807              B   253    				in0 a,(port_ps2_ctrl)			002DB2 CB6F                B   254    				bit 5,a
002DB4 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
002DB6 E1                  B   257    				pop hl
002DB7 D1                  B   258    				pop de
002DB8 C1                  B   259    				pop bc
002DB9 C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
002DBA                     B   266    nmi_routine
002DBA CD 18 13 00         B   267    				call os_store_CPU_regs
                           B   268    				
002DBE 21000000            B   269    				ld hl,0
002DC2 39                  B   270    				add hl,sp
002DC3 7E                  B   271    				ld a,(hl)						002DC4 E601                B   272    				and 1
002DC6 32 CE 52 00         B   273    				ld (store_adl),a
002DCA 20 0A               B   274    				jr nz,adl_freeze
002DCC 23                  B   275    				inc hl
002DCD 5E                  B   276    				ld e,(hl)						002DCE 23                  B   277    				inc hl
002DCF 56                  B   278    				ld d,(hl)
002DD0 CD 62 15 00         B   279    				call mbase_de
002DD4 18 02               B   280    				jr got_pc
                           B   281    				
002DD6 33                  B   282    adl_freeze		inc sp
002DD7 D1                  B   283    				pop de							002DD8 ED53 C4 52 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
002DDD CD 06 2E 00         B   286    				call disable_nmi
002DE1 ED3906              B   287    				out0 (port_nmi_ack),a			002DE4 3E01                B   288    				ld a,1
002DE6 32 9E 52 00         B   289    				ld (frozen),a
002DEA C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
002DEE                     B   311    set_nmi_vector
                           B   312    
002DEE 3EC3                B   313    				ld a,0c3h						002DF0 32660000            B   314    				ld (066h),a
002DF4 21 BA 2D 00         B   315    				ld hl,nmi_routine				002DF8 22670000            B   316    				ld (067h),hl
002DFC C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
                           B   320    
002DFD ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			002E00 3EC0                B   322    				ld a,11000000b					002E02 ED3905              B   323    				out0 (port_irq_ctrl),a
002E05 C9                  B   324    				ret
                           B   325    
002E06 3E40                B   326    disable_nmi		ld a,01000000b					002E08 ED3905              B   327    				out0 (port_irq_ctrl),a
002E0B C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
002E0C                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
002E0C C5                  B    10    				push bc
002E0D 3A 2B 51 00         B    11    				ld a,(serial_timeout)
002E11 47                  B    12    				ld b,a
002E12 3ECC                B    13    rx_set_timer	ld a,cch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
002E14 ED3981              B    14    				out0 (TMR0_RR_L),a				002E17 3E0C                B    15    				ld a,0ch
002E19 ED3982              B    16    				out0 (TMR0_RR_H),a				002E1C 3E03                B    17    				ld a,00000011b					002E1E ED3980              B    18    				out0 (TMR0_CTL),a				002E21 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
002E24 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					002E26 ED7401              B    22    				tstio 1							002E29 20 0E               B    23    				jr nz,rx_in_buffer
002E2B AF                  B    24    				xor a
002E2C B0                  B    25    				or b
002E2D 28 13               B    26    				jr z,rx_time_out
002E2F 0E80                B    27    				ld c,TMR0_CTL	
002E31 ED7480              B    28    				tstio 128						002E34 28 EE               B    29    				jr z,rx_byte_lp		
002E36 05                  B    30    				dec b
002E37 18 D9               B    31    				jr rx_set_timer
                           B    32    
002E39 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
002E3D ED78                B    34    				in a,(bc)						002E3F C1                  B    35    				pop bc
002E40 BF                  B    36    				cp a							002E41 C9                  B    37    				ret
                           B    38    
002E42 C1                  B    39    rx_time_out		pop bc
002E43 3E83                B    40    				ld a,083h						002E45 B7                  B    41    				or a							002E46 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
002E47                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
002E47 C5                  B    52    				push bc
002E48 0EC5                B    53    				ld c,UART0_LSR					002E4A ED7420              B    54    rs232_swait		tstio 020h						002E4D 28 FB               B    55    				jr z,rs232_swait
002E4F 01C00000            B    56    				ld bc,UART0_THR
002E53 ED79                B    57    				out (c),a						002E55 C1                  B    58    				pop bc
002E56 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
002E57                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    66    ; and E to the second byte to send
                           B    67    
002E57 7A                  B    68    				ld a,d
002E58 CD 47 2E 00         B    69    				call send_serial_byte
002E5C 7B                  B    70    				ld a,e
002E5D CD 47 2E 00         B    71    				call send_serial_byte
002E61 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
002E62                     B    76    hwsc_flush_serial_buffer
                           B    77    
002E62 C5                  B    78    				push bc
002E63 01C00000            B    79    				ld bc,UART0_RBR
002E67 ED78                B    80    				in a,(bc)						002E69 C1                  B    81    				pop bc
002E6A C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
002E6B                     B     6    set_bitmap_parameters
                           B     7    				
002E6B 78                  B     8    				ld a,b
002E6C 32 0E 51 00         B     9    				ld (window_pixel_doubling),a
002E70 22 E7 50 00         B    10    				ld (window_width_bytes),hl		002E74 ED53 EA 50 00       B    11    				ld (window_height_lines),de
                           B    12    			
002E79 21000080            B    13    				ld hl,vram_a_addr				002E7D 22 F9 50 00         B    14    				ld (video_window_address),hl
002E81 21000000            B    15    				ld hl,0
002E85 ED5B E7 50 00       B    16    				ld de,(window_width_bytes)
002E8A ED4B EA 50 00       B    17    				ld bc,(window_height_lines)
002E8F 19                  B    18    cwsblp			add hl,de
002E90 0B                  B    19    				dec bc
002E91 78                  B    20    				ld a,b
002E92 B1                  B    21    				or c
002E93 20 FA               B    22    				jr nz,cwsblp
002E95 22 05 51 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
002E99 CD 2A 2F 00         B    25    				call os_set_video_hw_regs
                           B    26    				
002E9D AF                  B    27    				xor a
002E9E C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
002E9F                     B    32    set_font_parameters
                           B    33    
002E9F 78                  B    34    				ld a,b							002EA0 32 ED 50 00         B    35    				ld (font_width_bytes),a
002EA4 79                  B    36    				ld a,c
002EA5 32 F0 50 00         B    37    				ld (font_height_lines),a		002EA9 11000000            B    38    				ld de,0
002EAD 59                  B    39    				ld e,c
002EAE 50                  B    40    				ld d,b
002EAF ED5C                B    41    				mlt de
002EB1 21000000            B    42    				ld hl,0
002EB5 0638                B    43    				ld b,224/4						002EB7 19                  B    44    cfslp			add hl,de
002EB8 10 FD               B    45    				djnz cfslp
002EBA 22 F6 50 00         B    46    				ld (font_length),hl
                           B    47    							
002EBE 41                  B    48    				ld b,c
002EBF 21000000            B    49    				ld hl,0
002EC3 ED5B E7 50 00       B    50    				ld de,(window_width_bytes)
002EC8 19                  B    51    csualp			add hl,de
002EC9 10 FD               B    52    				djnz csualp
002ECB 22 0B 51 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
002ECF AF                  B    55    				xor a
002ED0 C9                  B    56    				ret
                           B    57    				
                           B    58    				
                           B    59    
002ED1                     B    60    set_charmap_parameters
                           B    61    
002ED1 79                  B    62    				ld a,c
002ED2 32 E1 50 00         B    63    				ld (window_rows),a
002ED6 78                  B    64    				ld a,b
002ED7 32 E4 50 00         B    65    				ld (window_columns),a
                           B    66    				
002EDB 2A F9 50 00         B    67    				ld hl,(video_window_address)
002EDF ED5B 05 51 00       B    68    				ld de,(total_window_bytes)
002EE4 19                  B    69    				add hl,de
002EE5 22 FC 50 00         B    70    				ld (charmap_address),hl
                           B    71    
002EE9 11000000            B    72    				ld de,0
002EED 3A E1 50 00         B    73    				ld a,(window_rows)
002EF1 5F                  B    74    				ld e,a
002EF2 3A E4 50 00         B    75    				ld a,(window_columns)
002EF6 57                  B    76    				ld d,a
002EF7 ED5C                B    77    				mlt de
002EF9 ED53 08 51 00       B    78    				ld (total_charmap_bytes),de
002EFE 19                  B    79    				add hl,de
002EFF 22 FF 50 00         B    80    				ld (attributes_address),hl
002F03 19                  B    81    				add hl,de
002F04 22 02 51 00         B    82    				ld (cursor_image_address),hl
002F08 11000000            B    83    				ld de,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
002F0C 3A F0 50 00         B    84    				ld a,(font_height_lines)
002F10 5F                  B    85    				ld e,a
002F11 3A ED 50 00         B    86    				ld a,(font_width_bytes)
002F15 57                  B    87    				ld d,a
002F16 D5                  B    88    				push de
002F17 ED5C                B    89    				mlt de
002F19 19                  B    90    				add hl,de
002F1A 22 F3 50 00         B    91    				ld (font_addr),hl
002F1E D1                  B    92    				pop de
002F1F 16E0                B    93    				ld d,224
002F21 ED5C                B    94    				mlt de
002F23 19                  B    95    				add hl,de				
002F24 22 A4 52 00         B    96    				ld (vram_a_high),hl
002F28 AF                  B    97    				xor a
002F29 C9                  B    98    				ret
                           B    99    				
                           B   100    
002F2A                     B   101    os_set_video_hw_regs
                           B   102    
002F2A DD210018 FF         B   103    				ld ix,video_control				002F2F 3A 0E 51 00         B   104    				ld a,(window_pixel_doubling)
002F33 CB27                B   105    				sla a
002F35 F601                B   106    				or 1
002F37 DD7700              B   107    				ld (ix),a						002F3A DD360100            B   108    				ld (ix+1),0						002F3E DD360200            B   109    				ld (ix+2),0						002F42 DD360463            B   110    				ld (ix+4),99					                           B   111    
002F46 DD212010 FF         B   112    				ld ix,bitmap_parameters			002F4B ED5B F9 50 00       B   113    				ld de,(video_window_address)	002F50 DD1F00              B   114    				ld (ix),de						002F53 DD360401            B   115    				ld (ix+04h),1					002F57 DD360800            B   116    				ld (ix+08h),0					002F5B DD360C00            B   117    				ld (ix+0ch),0					002F5F ED4B E7 50 00       B   118    				ld bc,(window_width_bytes)		002F64 CB38                B   119    				srl b							002F66 CB19                B   120    				rr c
002F68 CB38                B   121    				srl b
002F6A CB19                B   122    				rr c
002F6C CB38                B   123    				srl b
002F6E CB19                B   124    				rr c
002F70 0D                  B   125    				dec c
002F71 DD7110              B   126    				ld (ix+10h),c
                           B   127    				
002F74 21 BE 50 00         B   128    				ld hl,pen_palette
002F78 CD 7E 2F 00         B   129    				call hswc_set_ui_colours
                           B   130    				
002F7C AF                  B   131    				xor a							002F7D C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   136    				
002F7E                     B   137    hswc_set_ui_colours
                           B   138    
002F7E 110000FF            B   139    				ld de,hw_palette
002F82 01200000            B   140    				ld bc,16*2
002F86 EDB0                B   141    				ldir
002F88 AF                  B   142    				xor a							002F89 C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
002F8A                     B   148    hwsc_clear_screen
                           B   149    
002F8A 2A F9 50 00         B   150    				ld hl,(video_window_address)	002F8E 3A BC 50 00         B   151    				ld a,(background_colour)
002F92 E60F                B   152    				and 0fh
002F94 47                  B   153    				ld b,a
002F95 07                  B   154    				rlca
002F96 07                  B   155    				rlca
002F97 07                  B   156    				rlca
002F98 07                  B   157    				rlca
002F99 B0                  B   158    				or b
002F9A 77                  B   159    				ld (hl),a
002F9B E5                  B   160    				push hl
002F9C D1                  B   161    				pop de
002F9D 13                  B   162    				inc de
002F9E ED4B 05 51 00       B   163    				ld bc,(total_window_bytes)
002FA3 0B                  B   164    				dec bc
002FA4 EDB0                B   165    				ldir
                           B   166    				
002FA6 2A FF 50 00         B   167    				ld hl,(attributes_address)		002FAA ED4B 08 51 00       B   168    				ld bc,(total_charmap_bytes)
002FAF 0B                  B   169    				dec bc
002FB0 3600                B   170    				ld (hl),0
002FB2 E5                  B   171    				push hl
002FB3 D1                  B   172    				pop de
002FB4 13                  B   173    				inc de
002FB5 EDB0                B   174    				ldir				
                           B   175    
002FB7 2A FC 50 00         B   176    				ld hl,(charmap_address)			002FBB ED4B 08 51 00       B   177    				ld bc,(total_charmap_bytes)
002FC0 0B                  B   178    				dec bc
002FC1 3620                B   179    				ld (hl),' '
002FC3 E5                  B   180    				push hl
002FC4 D1                  B   181    				pop de
002FC5 13                  B   182    				inc de
002FC6 EDB0                B   183    				ldir				
                           B   184    
002FC8 01000000            B   185    				ld bc,0
002FCC ED43 36 53 00       B   186    				ld (cursor_y),bc
002FD1 AF                  B   187    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
002FD2 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
002FD3                     B   193    hwsc_scroll_up	
                           B   194    				
002FD3 C5                  B   195    				push bc
002FD4 D5                  B   196    				push de
002FD5 E5                  B   197    				push hl
                           B   198    
002FD6 2A 05 51 00         B   199    				ld hl,(total_window_bytes)
002FDA ED5B 0B 51 00       B   200    				ld de,(total_row_bytes)
002FDF AF                  B   201    				xor a
002FE0 ED52                B   202    				sbc hl,de
002FE2 E5                  B   203    				push hl
002FE3 C1                  B   204    				pop bc							002FE4 2A F9 50 00         B   205    				ld hl,(video_window_address)
002FE8 ED5B 0B 51 00       B   206    				ld de,(total_row_bytes)
002FED 19                  B   207    				add hl,de						002FEE ED5B F9 50 00       B   208    				ld de,(video_window_address)	002FF3 EDB0                B   209    				ldir
                           B   210    				
002FF5 EB                  B   211    				ex de,hl						002FF6 3A BC 50 00         B   212    				ld a,(background_colour)
002FFA E60F                B   213    				and 0fh
002FFC 4F                  B   214    				ld c,a
002FFD 07                  B   215    				rlca
002FFE 07                  B   216    				rlca
002FFF 07                  B   217    				rlca
003000 07                  B   218    				rlca
003001 B1                  B   219    				or c
003002 77                  B   220    				ld (hl),a
003003 ED4B 0B 51 00       B   221    				ld bc,(total_row_bytes)
003008 0B                  B   222    				dec bc
003009 E5                  B   223    				push hl
00300A D1                  B   224    				pop de
00300B 13                  B   225    				inc de
00300C EDB0                B   226    				ldir
                           B   227    
00300E 2A FC 50 00         B   228    				ld hl,(charmap_address)			003012 ED5B E4 50 00       B   229    				ld de,(window_columns)
003017 19                  B   230    				add hl,de
003018 ED5B FC 50 00       B   231    				ld de,(charmap_address)
00301D ED4B E1 50 00       B   232    				ld bc,(window_rows)
003022 0D                  B   233    				dec c
003023 3A E4 50 00         B   234    				ld a,(window_columns)
003027 47                  B   235    				ld b,a
003028 ED4C                B   236    				mlt bc
00302A C5                  B   237    				push bc
00302B EDB0                B   238    				ldir
00302D C1                  B   239    				pop bc							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   240    
00302E 2A FC 50 00         B   241    				ld hl,(charmap_address)			003032 09                  B   242    				add hl,bc
003033 3620                B   243    				ld (hl),' '
003035 ED4B E4 50 00       B   244    				ld bc,(window_columns)
00303A 0B                  B   245    				dec bc
00303B E5                  B   246    				push hl
00303C D1                  B   247    				pop de
00303D 13                  B   248    				inc de
00303E EDB0                B   249    				ldir
                           B   250    					
003040 2A FF 50 00         B   251    				ld hl,(attributes_address)		003044 ED5B E4 50 00       B   252    				ld de,(window_columns)
003049 19                  B   253    				add hl,de
00304A ED5B FF 50 00       B   254    				ld de,(attributes_address)
00304F ED4B E1 50 00       B   255    				ld bc,(window_rows)
003054 0D                  B   256    				dec c
003055 3A E4 50 00         B   257    				ld a,(window_columns)
003059 47                  B   258    				ld b,a
00305A ED4C                B   259    				mlt bc
00305C C5                  B   260    				push bc
00305D EDB0                B   261    				ldir
00305F C1                  B   262    				pop bc			
                           B   263    
003060 2A FF 50 00         B   264    				ld hl,(attributes_address)		003064 09                  B   265    				add hl,bc
003065 3600                B   266    				ld (hl),0
003067 ED4B E4 50 00       B   267    				ld bc,(window_columns)
00306C 0B                  B   268    				dec bc
00306D E5                  B   269    				push hl
00306E D1                  B   270    				pop de
00306F 13                  B   271    				inc de
003070 EDB0                B   272    				ldir
                           B   273    
003072 E1                  B   274    				pop hl
003073 D1                  B   275    				pop de
003074 C1                  B   276    				pop bc
003075 AF                  B   277    				xor a							003076 C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
003077                     B   291    hwsc_plot_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003077 E5                  B   292    				push hl							003078 F5                  B   293    				push af
003079 3A BA 50 00         B   294    				ld a,(current_pen)
00307D 32 DE 50 00         B   295    				ld (plotchar_colour),a
003081 18 02               B   296    				jr plotc_go
                           B   297    				
003083                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
003083 E5                  B   300    				push hl
003084 F5                  B   301    				push af							003085 3A E1 50 00         B   302    plotc_go		ld a,(window_rows)				003089 3D                  B   303    				dec a
00308A B9                  B   304    				cp c							00308B 38 08               B   305    				jr c,win_err
00308D 3A E4 50 00         B   306    				ld a,(window_columns)
003091 3D                  B   307    				dec a
003092 B8                  B   308    				cp b
003093 30 06               B   309    				jr nc,win_ok
003095 F1                  B   310    win_err			pop af
003096 E1                  B   311    				pop hl
003097 3E82                B   312    				ld a,82h						003099 B7                  B   313    				or a
00309A C9                  B   314    				ret
                           B   315    				
00309B F1                  B   316    win_ok			pop af
00309C D5                  B   317    				push de
00309D C5                  B   318    				push bc
00309E DDE5                B   319    				push ix
0030A0 FDE5                B   320    				push iy
0030A2 2A F0 50 00         B   321    				ld hl,(font_height_lines)		0030A6 D620                B   322    				sub a,32
0030A8 67                  B   323    				ld h,a
0030A9 C620                B   324    				add a,32
0030AB ED6C                B   325    				mlt hl							0030AD ED5B F3 50 00       B   326    				ld de,(font_addr)
0030B2 19                  B   327    				add hl,de
0030B3 E5                  B   328    				push hl
0030B4 DDE1                B   329    				pop ix							                           B   330    				
0030B6 11000000            B   331    				ld de,0
0030BA 2A 0B 51 00         B   332    				ld hl,(total_row_bytes)			0030BE 5D                  B   333    				ld e,l
0030BF 51                  B   334    				ld d,c
0030C0 ED5C                B   335    				mlt de							0030C2 69                  B   336    				ld l,c							0030C3 ED6C                B   337    				mlt hl							0030C5 29                  B   338    				add hl,hl						0030C6 29                  B   339    				add hl,hl
0030C7 29                  B   340    				add hl,hl
0030C8 29                  B   341    				add hl,hl
0030C9 29                  B   342    				add hl,hl
0030CA 29                  B   343    				add hl,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0030CB 29                  B   344    				add hl,hl
0030CC 29                  B   345    				add hl,hl
0030CD 19                  B   346    				add hl,de						0030CE ED5B ED 50 00       B   347    				ld de,(font_width_bytes)
0030D3 50                  B   348    				ld d,b	
0030D4 ED5C                B   349    				mlt de							0030D6 19                  B   350    				add hl,de						0030D7 ED5B F9 50 00       B   351    				ld de,(video_window_address)
0030DC 19                  B   352    				add hl,de
0030DD E5                  B   353    				push hl
0030DE FDE1                B   354    				pop iy							                           B   355    				
0030E0 2A E4 50 00         B   356    				ld hl,(window_columns)			0030E4 61                  B   357    				ld h,c							0030E5 ED6C                B   358    				mlt hl
0030E7 11000000            B   359    				ld de,0
0030EB 58                  B   360    				ld e,b
0030EC 19                  B   361    				add hl,de
0030ED EB                  B   362    				ex de,hl
0030EE 2A FC 50 00         B   363    				ld hl,(charmap_address)
0030F2 19                  B   364    				add hl,de
0030F3 77                  B   365    				ld (hl),a
                           B   366    
0030F4 3A DE 50 00         B   367    				ld a,(plotchar_colour)			0030F8 2A FF 50 00         B   368    				ld hl,(attributes_address)
0030FC 19                  B   369    				add hl,de
0030FD 77                  B   370    				ld (hl),a
                           B   371    
0030FE 57                  B   372    				ld d,a				
0030FF E6F0                B   373    				and 0f0h
003101 20 0E               B   374    				jr nz,notransbg
003103 3A BC 50 00         B   375    				ld a,(background_colour)
003107 E60F                B   376    				and 0fh
003109 47                  B   377    				ld b,a
00310A 07                  B   378    				rlca
00310B 07                  B   379    				rlca
00310C 07                  B   380    				rlca
00310D 07                  B   381    				rlca
00310E 4F                  B   382    				ld c,a
00310F 18 06               B   383    				jr gotbg
003111 4F                  B   384    notransbg		ld c,a							003112 0F                  B   385    				rrca
003113 0F                  B   386    				rrca
003114 0F                  B   387    				rrca
003115 0F                  B   388    				rrca
003116 47                  B   389    				ld b,a							003117 7A                  B   390    gotbg			ld a,d
003118 E60F                B   391    				and 0fh
00311A 20 0E               B   392    				jr nz,notransfg
00311C 3A BC 50 00         B   393    				ld a,(background_colour)
003120 E60F                B   394    				and 0fh
003122 57                  B   395    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003123 07                  B   396    				rlca
003124 07                  B   397    				rlca
003125 07                  B   398    				rlca
003126 07                  B   399    				rlca
003127 5F                  B   400    				ld e,a
003128 18 06               B   401    				jr gotfg
00312A 57                  B   402    notransfg		ld d,a							00312B 07                  B   403    				rlca
00312C 07                  B   404    				rlca
00312D 07                  B   405    				rlca
00312E 07                  B   406    				rlca
00312F 5F                  B   407    				ld e,a							                           B   408    				
003130 D9                  B   409    gotfg			exx
003131 3A F0 50 00         B   410    				ld a,(font_height_lines)
003135 47                  B   411    				ld b,a
003136 2A E7 50 00         B   412    				ld hl,(window_width_bytes)
00313A ED5B ED 50 00       B   413    				ld de,(font_width_bytes)
00313F AF                  B   414    				xor a
003140 ED52                B   415    				sbc hl,de
003142 EB                  B   416    				ex de,hl
                           B   417    						
003143 D9                  B   418    charloop		exx
003144 DD6E00              B   419    				ld l,(ix)						003147 CB25                B   420    				sla l
003149 79                  B   421    				ld a,c
00314A 30 01               B   422    				jr nc,nbgmsb7
00314C 7B                  B   423    				ld a,e
00314D CB25                B   424    nbgmsb7			sla l
00314F 30 03               B   425    				jr nc,nfgmsb6
003151 B2                  B   426    				or d
003152 18 01               B   427    				jr gotpixcol76
003154 B0                  B   428    nfgmsb6			or b
003155 FD7700              B   429    gotpixcol76		ld (iy),a
003158 FD23                B   430    				inc iy
                           B   431    
00315A CB25                B   432    				sla l
00315C 79                  B   433    				ld a,c
00315D 30 01               B   434    				jr nc,nbgmsb5
00315F 7B                  B   435    				ld a,e
003160 CB25                B   436    nbgmsb5			sla l
003162 30 03               B   437    				jr nc,nfgmsb4
003164 B2                  B   438    				or d
003165 18 01               B   439    				jr gotpixcol54
003167 B0                  B   440    nfgmsb4			or b
003168 FD7700              B   441    gotpixcol54		ld (iy),a
00316B FD23                B   442    				inc iy
                           B   443    				
00316D CB25                B   444    				sla l
00316F 79                  B   445    				ld a,c
003170 30 01               B   446    				jr nc,nbgmsb3
003172 7B                  B   447    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003173 CB25                B   448    nbgmsb3			sla l
003175 30 03               B   449    				jr nc,nfgmsb2
003177 B2                  B   450    				or d
003178 18 01               B   451    				jr gotpixcol32
00317A B0                  B   452    nfgmsb2			or b
00317B FD7700              B   453    gotpixcol32		ld (iy),a
00317E FD23                B   454    				inc iy
                           B   455    				
003180 CB25                B   456    				sla l
003182 79                  B   457    				ld a,c
003183 30 01               B   458    				jr nc,nbgmsb1
003185 7B                  B   459    				ld a,e
003186 CB25                B   460    nbgmsb1			sla l
003188 30 03               B   461    				jr nc,nfgmsb0
00318A B2                  B   462    				or d
00318B 18 01               B   463    				jr gotpixcol10
00318D B0                  B   464    nfgmsb0			or b
00318E FD7700              B   465    gotpixcol10		ld (iy),a
003191 FD23                B   466    				inc iy
                           B   467    				
003193 DD23                B   468    				inc ix
003195 D9                  B   469    				exx
003196 FD19                B   470    				add iy,de
003198 10 A9               B   471    				djnz charloop
00319A D9                  B   472    				exx 
                           B   473    				
00319B FDE1                B   474    				pop iy
00319D DDE1                B   475    				pop ix
00319F C1                  B   476    				pop bc
0031A0 D1                  B   477    				pop de
0031A1 E1                  B   478    				pop hl
0031A2 AF                  B   479    				xor a
0031A3 C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
0031A4                     B   484    hwsc_remove_cursor
                           B   485    
0031A4 ED4B 36 53 00       B   486    				ld bc,(cursor_y)
0031A9 CD 4C 32 00         B   487    				call hwsc_get_charmap_addr_xy
0031AD 1A                  B   488    				ld a,(de)
0031AE 32 DE 50 00         B   489    				ld (plotchar_colour),a
0031B2 7E                  B   490    				ld a,(hl)				
0031B3 C3 83 30 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
0031B7                     B   494    hwsc_draw_cursor
                           B   495    
0031B7 21 E0 50 00         B   496    				ld hl,active_cursor_image
0031BB 3A DF 50 00         B   497    				ld a,(req_cursor_image)
0031BF BE                  B   498    				cp (hl)
0031C0 C4 14 32 00         B   499    				call nz,hwsc_set_cursor_image
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   500    
0031C4 ED4B 36 53 00       B   501    				ld bc,(cursor_y)
0031C9 2A 0B 51 00         B   502    				ld hl,(total_row_bytes)			0031CD 5D                  B   503    				ld e,l
0031CE 51                  B   504    				ld d,c
0031CF ED5C                B   505    				mlt de
0031D1 69                  B   506    				ld l,c
0031D2 ED6C                B   507    				mlt hl
0031D4 29                  B   508    				add hl,hl
0031D5 29                  B   509    				add hl,hl
0031D6 29                  B   510    				add hl,hl
0031D7 29                  B   511    				add hl,hl
0031D8 29                  B   512    				add hl,hl
0031D9 29                  B   513    				add hl,hl
0031DA 29                  B   514    				add hl,hl
0031DB 29                  B   515    				add hl,hl
0031DC 19                  B   516    				add hl,de
0031DD ED5B ED 50 00       B   517    				ld de,(font_width_bytes)
0031E2 50                  B   518    				ld d,b
0031E3 ED5C                B   519    				mlt de		
0031E5 19                  B   520    				add hl,de						0031E6 ED5B F9 50 00       B   521    				ld de,(video_window_address)
0031EB 19                  B   522    				add hl,de						0031EC E5                  B   523    				push hl
0031ED FDE1                B   524    				pop iy
                           B   525    				
0031EF ED4B F0 50 00       B   526    				ld bc,(font_height_lines)
0031F4 DD2A 02 51 00       B   527    				ld ix,(cursor_image_address)	0031F9 ED5B E7 50 00       B   528    				ld de,(window_width_bytes)
                           B   529    
0031FE ED2300              B   530    curlp2			lea hl,iy+0
003201 0604                B   531    				ld b,4							003203 7E                  B   532    curlp1			ld a,(hl)
003204 DDAE00              B   533    				xor (ix)
003207 77                  B   534    				ld (hl),a
003208 DD23                B   535    				inc ix
00320A 23                  B   536    				inc hl
00320B 10 F6               B   537    				djnz curlp1
                           B   538    											
00320D FD19                B   539    				add iy,de
00320F 0D                  B   540    				dec c
003210 20 EC               B   541    				jr nz,curlp2
                           B   542    
003212 AF                  B   543    				xor a							003213 C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
                           B   548    
003214                     B   549    hwsc_set_cursor_image
                           B   550    
003214 32 E0 50 00         B   551    				ld (active_cursor_image),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003218 D620                B   552    				sub a,32						00321A 2A F0 50 00         B   553    				ld hl,(font_height_lines)
00321E 67                  B   554    				ld h,a
00321F ED6C                B   555    				mlt hl
003221 ED5B F3 50 00       B   556    				ld de,(font_addr)
003226 19                  B   557    				add hl,de
003227 ED5B 02 51 00       B   558    				ld de,(cursor_image_address)	00322C 3A F0 50 00         B   559    				ld a,(font_height_lines)
003230 47                  B   560    				ld b,a
003231 C5                  B   561    fclp2			push bc
                           B   562    
003232 4E                  B   563    				ld c,(hl)
003233 0604                B   564    				ld b,4							003235 3E00                B   565    fclp1			ld a,0
003237 CB21                B   566    				sla c
003239 30 02               B   567    				jr nc,nopixl
00323B F6F0                B   568    				or a,0f0h						00323D CB21                B   569    nopixl			sla c
00323F 30 02               B   570    				jr nc,nopixr
003241 F60F                B   571    				or a,0fh
003243 12                  B   572    nopixr			ld (de),a
003244 13                  B   573    				inc de
003245 10 EE               B   574    				djnz fclp1
                           B   575    			
003247 23                  B   576    				inc hl
003248 C1                  B   577    				pop bc
003249 10 E6               B   578    				djnz fclp2
00324B C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
00324C                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
                           B   588    				
00324C 11000000            B   589    				ld de,0
003250 3A E4 50 00         B   590    				ld a,(window_columns)			003254 5F                  B   591    				ld e,a							003255 51                  B   592    				ld d,c							003256 ED5C                B   593    				mlt de
003258 7B                  B   594    				ld a,e
003259 80                  B   595    				add a,b
00325A 5F                  B   596    				ld e,a
00325B 30 01               B   597    				jr nc,choffh_ok
00325D 14                  B   598    				inc d
00325E 2A FC 50 00         B   599    choffh_ok		ld hl,(charmap_address)
003262 19                  B   600    				add hl,de
003263 E5                  B   601    				push hl
003264 2A FF 50 00         B   602    				ld hl,(attributes_address)
003268 19                  B   603    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003269 EB                  B   604    				ex de,hl
00326A E1                  B   605    				pop hl
00326B AF                  B   606    				xor a							00326C C9                  B   607    				ret
                           B   608    								
                           B   609    ;----------------------------------------------
                           B   610    
00326D                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
00326D C5                  B   615    				push bc
00326E D5                  B   616    				push de
00326F E5                  B   617    				push hl
                           B   618    
003270 3A 36 53 00         B   619    				ld a,(cursor_y)
003274 2A E4 50 00         B   620    				ld hl,(window_columns)
003278 67                  B   621    				ld h,a
003279 ED6C                B   622    				mlt hl
00327B 11000000            B   623    				ld de,0
00327F 58                  B   624    				ld e,b
003280 19                  B   625    				add hl,de
003281 EB                  B   626    				ex de,hl
003282 D5                  B   627    				push de
003283 2A FC 50 00         B   628    				ld hl,(charmap_address)
003287 19                  B   629    				add hl,de						                           B   630    
003288 E5                  B   631    				push hl
003289 D1                  B   632    				pop de
00328A 1B                  B   633    				dec de							00328B 3A E4 50 00         B   634    				ld a,(window_columns)
00328F 90                  B   635    				sub b
003290 01000000            B   636    				ld bc,0
003294 4F                  B   637    				ld c,a							003295 C5                  B   638    				push bc
003296 EDB0                B   639    				ldir
003298 C1                  B   640    				pop bc
003299 3E20                B   641    				ld a,32
00329B 12                  B   642    				ld (de),a						                           B   643    				
00329C 2A FF 50 00         B   644    				ld hl,(attributes_address)		0032A0 D1                  B   645    				pop de
0032A1 19                  B   646    				add hl,de
0032A2 E5                  B   647    				push hl
0032A3 D1                  B   648    				pop de
0032A4 1B                  B   649    				dec de							0032A5 EDB0                B   650    				ldir							0032A7 3A BC 50 00         B   651    				ld a,(background_colour)
0032AB 12                  B   652    				ld (de),a						                           B   653    
0032AC CD 12 33 00         B   654    				call hwsc_redraw_line			                           B   655    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0032B0 E1                  B   656    				pop hl
0032B1 D1                  B   657    				pop de
0032B2 C1                  B   658    				pop bc
0032B3 C9                  B   659    				ret
                           B   660    
                           B   661    
                           B   662    
0032B4                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
0032B4 C5                  B   667    				push bc
0032B5 D5                  B   668    				push de
0032B6 E5                  B   669    				push hl
                           B   670    	
0032B7 21 37 53 00         B   671    				ld hl,cursor_x				
0032BB 3A E4 50 00         B   672    				ld a,(window_columns)
0032BF 3D                  B   673    				dec a
0032C0 BE                  B   674    				cp (hl)			
0032C1 28 4B               B   675    				jr z,chright_end
                           B   676    
0032C3 46                  B   677    				ld b,(hl)
0032C4 11000000            B   678    				ld de,0
0032C8 57                  B   679    				ld d,a
0032C9 14                  B   680    				inc d
0032CA 3A 36 53 00         B   681    				ld a,(cursor_y)
0032CE 5F                  B   682    				ld e,a
0032CF ED5C                B   683    				mlt de
0032D1 D5                  B   684    				push de 
                           B   685    				
0032D2 C5                  B   686    				push bc
0032D3 2A FC 50 00         B   687    				ld hl,(charmap_address)
0032D7 ED4B E4 50 00       B   688    				ld bc,(window_columns)
0032DC 0B                  B   689    				dec bc
0032DD 0B                  B   690    				dec bc
0032DE 09                  B   691    				add hl,bc
0032DF C1                  B   692    				pop bc
                           B   693    				
0032E0 19                  B   694    				add hl,de						0032E1 E5                  B   695    				push hl
0032E2 D1                  B   696    				pop de
0032E3 13                  B   697    				inc de							0032E4 3A E4 50 00         B   698    				ld a,(window_columns)
0032E8 3D                  B   699    				dec a
0032E9 90                  B   700    				sub b
0032EA 47                  B   701    				ld b,a
0032EB C5                  B   702    				push bc							0032EC 7E                  B   703    mchrlp			ld a,(hl)
0032ED 12                  B   704    				ld (de),a
0032EE 2B                  B   705    				dec hl
0032EF 1B                  B   706    				dec de
0032F0 10 FA               B   707    				djnz mchrlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   708    
0032F2 2A FF 50 00         B   709    				ld hl,(attributes_address)		0032F6 ED4B E4 50 00       B   710    				ld bc,(window_columns)
0032FB 0B                  B   711    				dec bc
0032FC 0B                  B   712    				dec bc
0032FD 09                  B   713    				add hl,bc
                           B   714    
0032FE C1                  B   715    				pop bc
0032FF D1                  B   716    				pop de
003300 19                  B   717    				add hl,de						003301 E5                  B   718    				push hl
003302 D1                  B   719    				pop de
003303 13                  B   720    				inc de							003304 7E                  B   721    mattrlp			ld a,(hl)
003305 12                  B   722    				ld (de),a
003306 2B                  B   723    				dec hl
003307 1B                  B   724    				dec de
003308 10 FA               B   725    				djnz mattrlp
                           B   726    
00330A CD 12 33 00         B   727    				call hwsc_redraw_line			                           B   728    
00330E E1                  B   729    chright_end		pop hl	
00330F D1                  B   730    				pop de
003310 C1                  B   731    				pop bc
003311 C9                  B   732    				ret
                           B   733    
                           B   734    ;----------------------------------------------
                           B   735    
003312                     B   736    hwsc_redraw_line
                           B   737    				
003312 3A 36 53 00         B   738    				ld a,(cursor_y)
003316 4F                  B   739    				ld c,a
                           B   740    		
003317                     B   741    hwsc_redraw_ui_line
                           B   742    
003317 ED5B E4 50 00       B   743    				ld de,(window_columns)			00331C 51                  B   744    				ld d,c
00331D ED5C                B   745    				mlt de
00331F 0600                B   746    				ld b,0							003321 2A FF 50 00         B   747    rs_xloop		ld hl,(attributes_address)		003325 19                  B   748    				add hl,de
003326 7E                  B   749    				ld a,(hl)						003327 32 DE 50 00         B   750    				ld (plotchar_colour),a
00332B 2A FC 50 00         B   751    				ld hl,(charmap_address)
00332F 19                  B   752    				add hl,de
003330 7E                  B   753    				ld a,(hl)				
003331 CD 83 30 00         B   754    				call hwsc_plotchar_specific_att
003335 13                  B   755    				inc de
003336 04                  B   756    				inc b
003337 3A E4 50 00         B   757    				ld a,(window_columns)
00333B B8                  B   758    				cp b
00333C 20 E3               B   759    				jr nz,rs_xloop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00333E C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
00333F                     B   764    hwsc_charline_to_command_string	
                           B   765    								
00333F ED5B E4 50 00       B   766    				ld de,(window_columns)
003344 3A 36 53 00         B   767    				ld a,(cursor_y)					003348 57                  B   768    				ld d,a
003349 ED5C                B   769    				mlt de
00334B 2A FC 50 00         B   770    				ld hl,(charmap_address)
00334F 19                  B   771    				add hl,de
003350 11 54 53 00         B   772    				ld de,commandstring				003354 ED4B E4 50 00       B   773    				ld bc,(window_columns)
003359 EDB0                B   774    				ldir
00335B C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
00335C C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
00335D 0E01                B   781    				ld c,1
00335F ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
003362 0E01                B   784    				ld c,port_hw_flags
003364 ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
003367 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
003369 C1                  B   788    				pop bc
00336A BF                  B   789    				cp a							00336B C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
00336C                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
00336C 3E48                B     9    					ld a,01001000b				00336E ED39AA              B    10    					out0 (CS0_CTL),a
003371 3E00                B    11    					ld a,000h					003373 ED39A8              B    12    					out0 (CS0_LBR),a
003376 3EFF                B    13    					ld a,0ffh	
003378 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
00337B 3E58                B    16    					ld a,01011000b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00337D ED39AD              B    17    					out0 (CS1_CTL),a			003380 3E00                B    18    					ld a,0
003382 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
003385 3EFF                B    23    					ld a,0ffh
003387 ED399F              B    24    					out0 (PC_DDR),a				00338A AF                  B    25    					xor a
00338B ED39A0              B    26    					out0 (PC_ALT1),a
00338E ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
003391 3EFF                B    29    					ld a,0ffh					003393 ED39A3              B    30    					out0 (PD_DDR),a				003396 AF                  B    31    					xor a	
003397 ED39A4              B    32    					out0 (PD_ALT1),a			00339A 3E0F                B    33    					ld a,00fh				
00339C ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
00339F ED3892              B    38    					in0 a,(TMR_ISS)
0033A2 E6FC                B    39    					and 11111100b
0033A4 F601                B    40    					or  00000001b
0033A6 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
0033A9 AF                  B    46    					xor a
0033AA 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
0033AE C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
0033AF 11000000            B    53    hwsc_get_version	ld de,0
0033B3 0610                B    54    					ld b,16
0033B5 78                  B    55    gethwvlp			ld a,b
0033B6 3D                  B    56    					dec a
0033B7 ED3908              B    57    					out0 (port_selector),a		0033BA DB01                B    58    					in a,(port_hw_flags)		0033BC CB27                B    59    					sla a
0033BE CB13                B    60    					rl e
0033C0 CB12                B    61    					rl d
0033C2 10 F1               B    62    					djnz gethwvlp				                           B    63    									
0033C4 212A0000            B    64    					ld hl,prose_version
0033C8 BF                  B    65    					cp a						0033C9 C9                  B    66    					ret
                           B    67    
                           B    68    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
0033CA                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
0033CA CD D6 33 00         B    78    					call set_timeout
0033CE CD E7 33 00         B    79    twaitlp				call test_timeout
0033D2 28 FA               B    80    					jr z,twaitlp
0033D4 AF                  B    81    					xor a						0033D5 C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
0033D6 7B                  B    86    set_timeout			ld a,e						0033D7 ED3981              B    87    					out0 (TMR0_RR_L),a			0033DA 7A                  B    88    					ld a,d
0033DB ED3982              B    89    					out0 (TMR0_RR_H),a			0033DE 3E03                B    90    					ld a,00000011b				0033E0 ED3980              B    91    					out0 (TMR0_CTL),a			0033E3 ED3880              B    92    					in0 a,(TMR0_CTL)			0033E6 C9                  B    93    					ret
                           B    94    			
0033E7 ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			0033EA CB7F                B    96    					bit 7,a
0033EC C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
0033ED                     B   101    hwsc_read_rtc
0033ED D5                  B   102    					push de
0033EE C5                  B   103    					push bc
0033EF 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
0033F1 0608                B   105    					ld b,8
0033F3 21 97 52 00         B   106    					ld hl,time_data
0033F7 ED92                B   107    					inimr						0033F9 0EE0                B   108    					ld c,RTC_SEC
0033FB 0600                B   109    					ld b,0
0033FD 1E08                B   110    					ld e,8
0033FF 21 97 52 00         B   111    					ld hl,time_data
003403 ED78                B   112    timevloop			in a,(bc)					003405 BE                  B   113    					cp (hl)						003406 20 E7               B   114    					jr nz,hwsc_rtc_rlp			003408 23                  B   115    					inc hl
003409 0C                  B   116    					inc c
00340A 1D                  B   117    					dec e
00340B 20 F6               B   118    					jr nz,timevloop
00340D 21 97 52 00         B   119    					ld hl,time_data
003411 C1                  B   120    					pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003412 D1                  B   121    					pop de
003413 BF                  B   122    					cp a						003414 C9                  B   123    					ret
                           B   124    
                           B   125    
003415                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
003415 E5                  B   130    					push hl
003416 C5                  B   131    					push bc
003417 3E21                B   132    					ld a,00100001b				003419 ED39ED              B   133    					out0 (RTC_CTRL),a
00341C 0EE0                B   134    					ld c,RTC_SEC
00341E 0608                B   135    					ld b,8
003420 ED93                B   136    					otimr
003422 3E20                B   137    					ld a,00100000b				003424 ED39ED              B   138    					out0 (RTC_CTRL),a
003427 C1                  B   139    					pop bc
003428 E1                  B   140    					pop hl
003429 BF                  B   141    					cp a						00342A C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
00342B                     B   151    init_keyboard
                           B   152    
00342B 11004000            B   153    			ld de,16384							00342F CD CA 33 00         B   154    			call hwsc_time_delay
003433 F3                  B   155    			di
003434 CD E9 34 00         B   156    			call purge_keyboard
003438 CD 42 34 00         B   157    			call rs_keyboard
00343C FB                  B   158    			ei
00343D D0                  B   159    			ret nc
00343E 3E8B                B   160    			ld a,08bh							003440 B7                  B   161    			or a
003441 C9                  B   162    			ret
                           B   163    			
                           B   164    			
003442                     B   165    rs_keyboard
                           B   166    
003442 3EFF                B   167    			ld a,0ffh
003444 CD 61 34 00         B   168    			call write_to_keyboard
003448 30 04               B   169    			jr nc,kb_connected
00344A 3E8A                B   170    			ld a,08ah							00344C B7                  B   171    			or a
00344D C9                  B   172    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   173    
00344E                     B   174    kb_connected
                           B   175    			
00344E 0605                B   176    			ld b,5
003450 C5                  B   177    kb_initlp	push bc
003451 CD CD 34 00         B   178    			call wait_kb_byte					003455 C1                  B   179    			pop bc
003456 D8                  B   180    			ret c
003457 FEAA                B   181    			cp 0aah
003459 28 04               B   182    			jr z,kb_postok
00345B 10 F3               B   183    			djnz kb_initlp						00345D 37                  B   184    			scf									00345E C9                  B   185    			ret
                           B   186    			
                           B   187    			
00345F AF                  B   188    kb_postok	xor a
003460 C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
003461                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
003461 4F                  B   198    			ld c,a								003462 3E01                B   199    			ld a,01b							003464 ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
003467 110A0000            B   202    			ld de,10
00346B CD CA 33 00         B   203    			call hwsc_time_delay				                           B   204    
00346F 3E03                B   205    			ld a,11b
003471 ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
003474 3E02                B   208    			ld a,10b
003476 ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
003479 CD 49 36 00         B   211    			call wait_kb_clk_high
                           B   212    			
00347D 1601                B   213    			ld d,1								00347F 0608                B   214    			ld b,8								003481 CD 1C 36 00         B   215    kdoloop		call wait_kb_clk_low	
003485 D8                  B   216    			ret c
003486 AF                  B   217    			xor a
003487 CBCF                B   218    			set 1,a
003489 CB41                B   219    			bit 0,c
00348B 28 03               B   220    			jr z,kdbzero
00348D CB8F                B   221    			res 1,a
00348F 14                  B   222    			inc d
003490 ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				003493 CD 49 36 00         B   224    			call wait_kb_clk_high
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003497 D8                  B   225    			ret c
003498 CB19                B   226    			rr c
00349A 10 E5               B   227    			djnz kdoloop
                           B   228    
00349C CD 1C 36 00         B   229    			call wait_kb_clk_low
0034A0 D8                  B   230    			ret c
0034A1 AF                  B   231    			xor a
0034A2 CB42                B   232    			bit 0,d
0034A4 20 02               B   233    			jr nz,kparone
0034A6 CBCF                B   234    			set 1,a
0034A8 ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				0034AB CD 49 36 00         B   236    			call wait_kb_clk_high
0034AF D8                  B   237    			ret c
                           B   238    			
0034B0 CD 1C 36 00         B   239    			call wait_kb_clk_low
0034B4 D8                  B   240    			ret c
0034B5 AF                  B   241    			xor a
0034B6 ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
0034B9 CD 18 36 00         B   244    			call wait_kb_data_low				0034BD D8                  B   245    			ret c
0034BE CD 1C 36 00         B   246    			call wait_kb_clk_low				0034C2 D8                  B   247    			ret c
                           B   248    				
0034C3 CD 45 36 00         B   249    			call wait_kb_data_high				0034C7 D8                  B   250    			ret c
0034C8 CD 49 36 00         B   251    			call wait_kb_clk_high				0034CC C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
0034CD                     B   258    wait_kb_byte
                           B   259    
0034CD 11008000            B   260    			ld de,8000h
0034D1 CD D6 33 00         B   261    			call set_timeout					                           B   262    
0034D5 ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
0034D8 CB67                B   264    			bit 4,a
0034DA 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
0034DC CD E7 33 00         B   267    			call test_timeout
0034E0 28 F3               B   268    			jr z,wait_kloop
0034E2 37                  B   269    			scf									0034E3 C9                  B   270    			ret
                           B   271    			
0034E4 ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			0034E7 B7                  B   273    			or a
0034E8 C9                  B   274    			ret
                           B   275    
                           B   276    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   277    ;----------------------------------------------
                           B   278    
0034E9                     B   279    purge_keyboard
                           B   280    			
0034E9 ED3807              B   281    			in0 a,(port_ps2_ctrl)
0034EC CB67                B   282    			bit 4,a
0034EE C8                  B   283    			ret z
0034EF ED3802              B   284    			in0 a,(port_keyboard_data)			0034F2 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
0034F4                     B   295    init_mouse		
0034F4 F3                  B   296    			di
0034F5 CD 0D 36 00         B   297    			call purge_mouse
0034F9 CD 03 35 00         B   298    			call rs_mouse
0034FD FB                  B   299    			ei
0034FE D0                  B   300    			ret nc
0034FF 3E8B                B   301    			ld a,08bh							003501 B7                  B   302    			or a
003502 C9                  B   303    			ret
                           B   304    
                           B   305    
003503                     B   306    rs_mouse
003503 3EFF                B   307    			ld a,0ffh							003505 CD 85 35 00         B   308    			call write_to_mouse		
003509 30 04               B   309    			jr nc,mouse_connected
00350B 3E8A                B   310    			ld a,08ah							00350D B7                  B   311    			or a
00350E C9                  B   312    			ret
                           B   313    
                           B   314    
00350F                     B   315    mouse_connected
                           B   316    
00350F 0605                B   317    			ld b,5
003511 C5                  B   318    ms_initlp	push bc
003512 CD F1 35 00         B   319    			call wait_mouse_byte				003516 C1                  B   320    			pop bc
003517 D8                  B   321    			ret c
003518 FEAA                B   322    			cp 0aah
00351A 28 04               B   323    			jr z,ms_postok
00351C 10 F3               B   324    			djnz ms_initlp
00351E 18 43               B   325    			jr bad_mouse
                           B   326    			
003520 CD F1 35 00         B   327    ms_postok	call wait_mouse_byte				003524 D8                  B   328    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003525 B7                  B   329    			or a
003526 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
003528 3E03                B   332    			ld a,3
00352A 32 8E 54 00         B   333    			ld (mouse_packet_size),a
                           B   334    
00352E 21 4E 51 00         B   335    			ld hl,intellimouse_seq
003532 0606                B   336    			ld b,6
003534 CD 67 35 00         B   337    			call mouse_sequence
003538 D8                  B   338    			ret c
                           B   339    			
003539 3EF2                B   340    			ld a,0f2h
00353B CD 76 35 00         B   341    			call write_mouse_wait_ack			00353F D8                  B   342    			ret c
003540 CD F1 35 00         B   343    			call wait_mouse_byte				003544 D8                  B   344    			ret c
003545 32 8D 54 00         B   345    			ld (mouse_id),a
003549 B7                  B   346    			or a								00354A 28 0A               B   347    			jr z,standard_mouse
00354C FE03                B   348    			cp 3
00354E 20 13               B   349    			jr nz,bad_mouse						003550 3E04                B   350    			ld a,4
003552 32 8E 54 00         B   351    			ld (mouse_packet_size),a
                           B   352    
003556                     B   353    standard_mouse
                           B   354    		
003556 21 54 51 00         B   355    			ld hl,mouse_settings_seq
00355A 0606                B   356    			ld b,6
00355C CD 67 35 00         B   357    			call mouse_sequence
003560 D8                  B   358    			ret c
003561 AF                  B   359    			xor a								003562 C9                  B   360    			ret
                           B   361    
                           B   362    
003563 3E89                B   363    bad_mouse	ld a,089h							003565 B7                  B   364    			or a
003566 C9                  B   365    			ret
                           B   366    
                           B   367    
003567                     B   368    mouse_sequence
                           B   369    
003567 7E                  B   370    mseqlp		ld a,(hl)
003568 E5                  B   371    			push hl
003569 C5                  B   372    			push bc
00356A CD 76 35 00         B   373    			call write_mouse_wait_ack
00356E C1                  B   374    			pop bc
00356F E1                  B   375    			pop hl
003570 D8                  B   376    			ret c
003571 23                  B   377    			inc hl
003572 10 F3               B   378    			djnz mseqlp
003574 AF                  B   379    			xor a
003575 C9                  B   380    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   381    
                           B   382    
003576                     B   383    write_mouse_wait_ack
                           B   384    			
003576 CD 85 35 00         B   385    			call write_to_mouse
00357A D8                  B   386    			ret c
00357B CD F1 35 00         B   387    			call wait_mouse_byte				00357F D8                  B   388    			ret c
003580 FEFA                B   389    			cp 0fah								003582 C8                  B   390    			ret z
003583 37                  B   391    			scf
003584 C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
003585                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
003585 4F                  B   400    			ld c,a								003586 3E04                B   401    			ld a,0100b							003588 ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
00358B 110A0000            B   404    			ld de,10
00358F CD CA 33 00         B   405    			call hwsc_time_delay				                           B   406    
003593 3E0C                B   407    			ld a,1100b
003595 ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
003598 3E08                B   410    			ld a,1000b
00359A ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
00359D CD 51 36 00         B   413    			call wait_mouse_clk_high
                           B   414    			
0035A1 1601                B   415    			ld d,1								0035A3 0608                B   416    			ld b,8								0035A5 CD 24 36 00         B   417    mdoloop		call wait_mouse_clk_low	
0035A9 D8                  B   418    			ret c
0035AA AF                  B   419    			xor a
0035AB CBDF                B   420    			set 3,a
0035AD CB41                B   421    			bit 0,c
0035AF 28 03               B   422    			jr z,mdbzero
0035B1 CB9F                B   423    			res 3,a
0035B3 14                  B   424    			inc d
0035B4 ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				0035B7 CD 51 36 00         B   426    			call wait_mouse_clk_high
0035BB D8                  B   427    			ret c
0035BC CB19                B   428    			rr c
0035BE 10 E5               B   429    			djnz mdoloop
                           B   430    
0035C0 CD 24 36 00         B   431    			call wait_mouse_clk_low
0035C4 D8                  B   432    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0035C5 AF                  B   433    			xor a
0035C6 CB42                B   434    			bit 0,d
0035C8 20 02               B   435    			jr nz,parone
0035CA CBDF                B   436    			set 3,a
0035CC ED3907              B   437    parone		out0 (port_ps2_ctrl),a				0035CF CD 51 36 00         B   438    			call wait_mouse_clk_high
0035D3 D8                  B   439    			ret c
                           B   440    			
0035D4 CD 24 36 00         B   441    			call wait_mouse_clk_low
0035D8 D8                  B   442    			ret c
0035D9 AF                  B   443    			xor a
0035DA ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
0035DD CD 20 36 00         B   446    			call wait_mouse_data_low			0035E1 D8                  B   447    			ret c
0035E2 CD 24 36 00         B   448    			call wait_mouse_clk_low				0035E6 D8                  B   449    			ret c
                           B   450    				
0035E7 CD 4D 36 00         B   451    			call wait_mouse_data_high			0035EB D8                  B   452    			ret c
0035EC CD 51 36 00         B   453    			call wait_mouse_clk_high			0035F0 C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
0035F1                     B   459    wait_mouse_byte
                           B   460    
0035F1 11008000            B   461    			ld de,8000h
0035F5 CD D6 33 00         B   462    			call set_timeout					                           B   463    
0035F9 ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
0035FC CB6F                B   465    			bit 5,a
0035FE 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
003600 CD E7 33 00         B   468    			call test_timeout
003604 28 F3               B   469    			jr z,wait_mloop
003606 37                  B   470    			scf									003607 C9                  B   471    			ret
                           B   472    			
003608 ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				00360B B7                  B   474    			or a
00360C C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
00360D                     B   479    purge_mouse
                           B   480    			
00360D ED3807              B   481    			in0 a,(port_ps2_ctrl)
003610 CB6F                B   482    			bit 5,a
003612 C8                  B   483    			ret z
003613 ED3806              B   484    			in0 a,(port_mouse_data)			; r
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003616 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
003618                     B   491    wait_kb_data_low
                           B   492    
003618 3E02                B   493    			ld a,2
00361A 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
00361C                     B   496    wait_kb_clk_low
                           B   497    
00361C 3E01                B   498    			ld a,1
00361E 18 06               B   499    			jr test_lo_ps2			
                           B   500    
003620                     B   501    wait_mouse_data_low
                           B   502    
003620 3E08                B   503    			ld a,8
003622 18 02               B   504    			jr test_lo_ps2
                           B   505    
003624                     B   506    wait_mouse_clk_low
                           B   507    
003624 3E04                B   508    			ld a,4
                           B   509    
003626 C5                  B   510    test_lo_ps2	push bc
003627 D5                  B   511    			push de
003628 4F                  B   512    			ld c,a
003629 11004000            B   513    			ld de,04000h					; a
00362D CD D6 33 00         B   514    			call set_timeout
                           B   515    
003631 CD E7 33 00         B   516    nkb_lw		call test_timeout				; t
003635 28 04               B   517    			jr z,nkb_lnto
003637 D1                  B   518    			pop de
003638 C1                  B   519    			pop bc
003639 37                  B   520    			scf								; c
00363A C9                  B   521    			ret
00363B ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
00363E A1                  B   523    			and c
00363F 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
003641 D1                  B   526    			pop de
003642 C1                  B   527    			pop bc
003643 AF                  B   528    			xor a
003644 C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
                           B   533    
003645                     B   534    wait_kb_data_high
                           B   535    
003645 3E02                B   536    			ld a,2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003647 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
003649                     B   539    wait_kb_clk_high
                           B   540    
003649 3E01                B   541    			ld a,1
00364B 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
00364D                     B   545    wait_mouse_data_high
                           B   546    			
00364D 3E08                B   547    			ld a,8
00364F 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
003651                     B   550    wait_mouse_clk_high
                           B   551    
003651 3E04                B   552    			ld a,4
                           B   553    
003653 C5                  B   554    test_hi_ps2	push bc
003654 D5                  B   555    			push de
003655 4F                  B   556    			ld c,a
003656 11004000            B   557    			ld de,04000h					; a
00365A CD D6 33 00         B   558    			call set_timeout
                           B   559    
00365E CD E7 33 00         B   560    nkb_hw		call test_timeout				; t
003662 28 04               B   561    			jr z,nkb_hnto
003664 D1                  B   562    			pop de
003665 C1                  B   563    			pop bc
003666 37                  B   564    			scf								; c
003667 C9                  B   565    			ret
003668 ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
00366B A1                  B   567    			and c
00366C 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
00366E D1                  B   570    			pop de
00366F C1                  B   571    			pop bc
003670 AF                  B   572    			xor a							; c
003671 C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           A  2928    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003672                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    11    
                           B    12    
003672 D5                  B    13    				push de
003673 51                  B    14    				ld d,c
003674 E5                  B    15    				push hl
003675 CD CB 36 00         B    16    wait_kbuf		call get_kb_buffer_indexes		003679 BE                  B    17    				cp (hl)							00367A 28 F9               B    18    				jr z,wait_kbuf		
                           B    19    			
00367C 01000000            B    20    new_key			ld bc,0							003680 4F                  B    21    				ld c,a
003681 21 65 54 00         B    22    				ld hl,scancode_buffer	
003685 09                  B    23    				add hl,bc
                           B    24    												003686 4E                  B    25    				ld c,(hl)						003687 11100000            B    26    				ld de,16
00368B 19                  B    27    				add hl,de						00368C 7E                  B    28    				ld a,(hl)						                           B    29    				
00368D 21 52 50 00         B    30    				ld hl,alted_keymap				003691 CB5F                B    31    				bit 3,a
003693 20 0C               B    32    				jr nz,got_kmap	
003695 21 8E 4F 00         B    33    				ld hl,unshifted_keymap			003699 E611                B    34    				and 011h			
00369B 28 04               B    35    				jr z,got_kmap
00369D 21 F0 4F 00         B    36    				ld hl,shifted_keymap			                           B    37    			
0036A1 79                  B    38    got_kmap		ld a,c							0036A2 FE62                B    39    				cp 062h
0036A4 30 02               B    40    				jr nc,gotkdone
0036A6 09                  B    41    				add hl,bc						0036A7 46                  B    42    				ld b,(hl)						                           B    43    			
0036A8 3A 86 54 00         B    44    gotkdone		ld a,(key_buf_rd_idx)			0036AC 3C                  B    45    				inc a							0036AD E60F                B    46    				and 15
0036AF 32 86 54 00         B    47    				ld (key_buf_rd_idx),a			0036B3 79                  B    48    				ld a,c							0036B4 E1                  B    49    				pop hl
0036B5 4A                  B    50    				ld c,d
0036B6 D1                  B    51    				pop de
0036B7 BF                  B    52    				cp a							0036B8 C9                  B    53    				ret
                           B    54    			
                           B    55    		
                           B    56    ;----------------------------------------------
                           B    57    			
0036B9                     B    58    os_get_key_press
                           B    59    				
                           B    60    ; Gets a keycode on-the-fly - If one is availab
                           B    61    ; On return, ZF is set if there is a new scanco
                           B    62    ; (ASCII code is modifed by shift key status), 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    63    			
                           B    64    			
0036B9 D5                  B    65    				push de
0036BA 51                  B    66    				ld d,c
0036BB E5                  B    67    				push hl
0036BC CD CB 36 00         B    68    				call get_kb_buffer_indexes		0036C0 BE                  B    69    				cp (hl)							0036C1 20 B9               B    70    				jr nz,new_key					0036C3 3E81                B    71    				ld a,81h			
0036C5 47                  B    72    				ld b,a
0036C6 B7                  B    73    				or a
0036C7 E1                  B    74    				pop hl
0036C8 4A                  B    75    				ld c,d
0036C9 D1                  B    76    				pop de
0036CA C9                  B    77    				ret
                           B    78    			
                           B    79    ;----------------------------------------------
                           B    80    			
0036CB                     B    81    get_kb_buffer_indexes
                           B    82    			
                           B    83    			
0036CB 21 85 54 00         B    84    				ld hl,key_buf_wr_idx			0036CF 3A 86 54 00         B    85    				ld a,(key_buf_rd_idx)			0036D3 C9                  B    86    				ret
                           B    87    			
                           B    88    		
                           B    89    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
0036D4                     B    21    serial_get_header
                           B    22    
0036D4 32 2B 51 00         B    23    				ld (serial_timeout),a			0036D8 22 15 51 00         B    24    				ld (serial_fn_addr),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0036DC CD 62 2E 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
0036E0 CD C3 37 00         B    27    				call s_getblock					0036E4 28 0C               B    28    				jr z,s_gbfhok					0036E6 F5                  B    29    				push af							0036E7 3A 4C 51 00         B    30    				ld a,(serial_transfer_started)
0036EB B7                  B    31    				or a							0036EC C4 2A 38 00         B    32    				call nz,s_badack				0036F0 F1                  B    33    				pop af
0036F1 C9                  B    34    				ret
                           B    35    	
0036F2 21 40 51 00         B    36    s_gbfhok		ld hl,serial_header_id			0036F6 11 AA 57 00         B    37    				ld de,sector_buffer+20			0036FA 060C                B    38    				ld b,12
0036FC CD C6 11 00         B    39    				call os_compare_strings
003700 20 0F               B    40    				jr nz,s_nfhdr
003702 06E0                B    41    				ld b,256-32						003704 21 B6 57 00         B    42    				ld hl,sector_buffer+32
003708 7E                  B    43    s_chdr			ld a,(hl)
003709 23                  B    44    				inc hl
00370A B7                  B    45    				or a
00370B 20 04               B    46    				jr nz,s_nfhdr
00370D 10 F9               B    47    				djnz s_chdr
00370F 18 08               B    48    				jr s_fhcsok
                           B    49    				
003711 CD 2A 38 00         B    50    s_nfhdr			call s_badack					003715 3E85                B    51    				ld a,085h						003717 B7                  B    52    				or a
003718 C9                  B    53    				ret
                           B    54    		
003719 21 A6 57 00         B    55    s_fhcsok		ld hl,sector_buffer+16			00371D 11 3C 51 00         B    56    				ld de,serial_fileheader+16
003721 01040000            B    57    				ld bc,4
003725 EDB0                B    58    				ldir
                           B    59    				
003727 21 96 57 00         B    60    				ld hl,sector_buffer
00372B 11 2C 51 00         B    61    				ld de,serial_fileheader			00372F 0610                B    62    				ld b,16							003731 7E                  B    63    s_tuclp			ld a,(hl)						003732 B7                  B    64    				or a
003733 28 0B               B    65    				jr z,s_ffhswz	
003735 CD 00 12 00         B    66    				call os_uppercasify
003739 12                  B    67    				ld (de),a
00373A 23                  B    68    				inc hl
00373B 13                  B    69    				inc de
00373C 10 F3               B    70    				djnz s_tuclp
00373E 18 04               B    71    				jr s_tucdone
003740 12                  B    72    s_ffhswz		ld (de),a
003741 13                  B    73    				inc de
003742 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
003744 2A 15 51 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
003748 7E                  B    77    				ld a,(hl)
003749 FE2A                B    78    				cp '*'
00374B 28 14               B    79    				jr z,s_rffns					00374D 11 2C 51 00         B    80    				ld de,serial_fileheader
003751 0610                B    81    				ld b,16
003753 CD C6 11 00         B    82    				call os_compare_strings
003757 28 08               B    83    				jr z,s_rffns
003759 CD 2A 38 00         B    84    s_rfnbad		call s_badack
00375D 3E87                B    85    				ld a,087h						00375F B7                  B    86    				or a
003760 C9                  B    87    				ret
                           B    88    				
003761 DD21 2C 51 00       B    89    s_rffns			ld ix,serial_fileheader			003766 AF                  B    90    				xor a
003767 C9                  B    91    				ret
                           B    92    
003768 F5                  B    93    s_fail			push af				
003769 CD 2A 38 00         B    94    				call s_badack		 
00376D F1                  B    95    				pop af
00376E C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
00376F                     B   114    serial_receive_file
                           B   115    
00376F 3E0A                B   116    				ld a,10							003771 32 2B 51 00         B   117    				ld (serial_timeout),a
003775 E5                  B   118    				push hl
003776 CD 19 38 00         B   119    				call s_goodack					00377A DDE1                B   120    				pop ix							00377C ED5B 3C 51 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
003781 CD C3 37 00         B   123    s_gbloop		call s_getblock
003785 20 E1               B   124    				jr nz,s_fail
003787 0E00                B   125    				ld c,0							003789 FD21 96 57 00       B   126    				ld iy,sector_buffer
00378E FD7E00              B   127    s_rfloop		ld a,(iy)
003791 DD7700              B   128    				ld (ix),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
003794 1B                  B   129    				dec de							003795 21000000            B   130    				ld hl,0
003799 AF                  B   131    				xor a
00379A ED5A                B   132    				adc hl,de						00379C 28 1A               B   133    				jr z,s_rfabr					00379E C5                  B   134    				push bc
00379F 01010000            B   135    				ld bc,1
0037A3 DD09                B   136    				add ix,bc						0037A5 C1                  B   137    				pop bc
0037A6 30 05               B   138    				jr nc,s_nbt
0037A8 3E84                B   139    				ld a,84h						0037AA B7                  B   140    				or a
0037AB 18 BB               B   141    				jr s_fail
0037AD FD23                B   142    s_nbt			inc iy
0037AF 0D                  B   143    				dec c
0037B0 20 DC               B   144    				jr nz,s_rfloop
0037B2 CD 19 38 00         B   145    				call s_goodack					0037B6 18 C9               B   146    				jr s_gbloop
                           B   147    			
0037B8 CD 19 38 00         B   148    s_rfabr			call s_goodack					0037BC DD21 2C 51 00       B   149    				ld ix,serial_fileheader			0037C1 AF                  B   150    				xor a							0037C2 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
0037C3                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
0037C3 AF                  B   159    				xor a
0037C4 32 4C 51 00         B   160    				ld (serial_transfer_started),a	0037C8 E5                  B   161    				push hl							0037C9 D5                  B   162    				push de
0037CA C5                  B   163    				push bc
0037CB 21 96 57 00         B   164    				ld hl,sector_buffer				0037CF 0600                B   165    				ld b,0
0037D1 D9                  B   166    				exx
0037D2 21FFFF00            B   167    				ld hl,0ffffh					0037D6 D9                  B   168    				exx
0037D7 CD 0C 2E 00         B   169    s_lgb			call receive_serial_byte
0037DB 20 38               B   170    				jr nz,s_gberr					0037DD F5                  B   171    				push af
0037DE 3E01                B   172    				ld a,1
0037E0 32 4C 51 00         B   173    				ld (serial_transfer_started),a
0037E4 F1                  B   174    				pop af
0037E5 77                  B   175    				ld (hl),a
0037E6 D9                  B   176    				exx
0037E7 AC                  B   177    				xor h							0037E8 67                  B   178    				ld h,a			
0037E9 0608                B   179    				ld b,8
0037EB 4029                B   180    rxcrcbyte		add.sis hl,hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0037ED 30 08               B   181    				jr nc,rxcrcnext
0037EF 7C                  B   182    				ld a,h
0037F0 EE10                B   183    				xor 10h
0037F2 67                  B   184    				ld h,a
0037F3 7D                  B   185    				ld a,l
0037F4 EE21                B   186    				xor 21h
0037F6 6F                  B   187    				ld l,a
0037F7 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0037F9 D9                  B   189    				exx
0037FA 23                  B   190    				inc hl
0037FB 10 DA               B   191    				djnz s_lgb
0037FD D9                  B   192    				exx								                           B   193    			
0037FE CD 0C 2E 00         B   194    				call receive_serial_byte		003802 20 11               B   195    				jr nz,s_gberr
003804 4F                  B   196    				ld c,a
003805 CD 0C 2E 00         B   197    				call receive_serial_byte
003809 20 0A               B   198    				jr nz,s_gberr		
00380B 47                  B   199    				ld b,a
                           B   200    				
00380C AF                  B   201    				xor a							00380D 52ED42              B   202    				sbc.s hl,bc						003810 28 03               B   203    				jr z,s_gberr
                           B   204    			
003812 3E86                B   205    				ld a,86h						003814 B7                  B   206    				or a							003815 C1                  B   207    s_gberr			pop bc
003816 D1                  B   208    				pop de
003817 E1                  B   209    				pop hl
003818 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
003819 C5                  B   214    s_goodack		push bc
00381A 014F4B00            B   215    				ld bc,04b4fh					00381E 79                  B   216    ackbytes		ld a,c
00381F CD 47 2E 00         B   217    				call send_serial_byte
003823 78                  B   218    				ld a,b
003824 CD 47 2E 00         B   219    				call send_serial_byte
003828 C1                  B   220    				pop bc
003829 C9                  B   221    				ret
                           B   222    
00382A C5                  B   223    s_badack		push bc
00382B 01585800            B   224    				ld bc,05858h					00382F 18 ED               B   225    				jr ackbytes
                           B   226    
003831 C5                  B   227    s_holdack		push bc
003832 01575700            B   228    				ld bc,05757h					003836 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
003838                     B   249    serial_send_file
                           B   250    			
003838 3E01                B   251    				ld a,1							00383A 32 2B 51 00         B   252    				ld (serial_timeout),a
                           B   253    			
00383E DD22 0F 51 00       B   254    				ld (serial_ez80_address),ix
003843 ED53 3C 51 00       B   255    				ld (serial_fileheader+10h),de	003848 E5                  B   256    				push hl
003849 21000000            B   257    				ld hl,0
00384D AF                  B   258    				xor a
00384E ED5A                B   259    				adc hl,de
003850 20 05               B   260    				jr nz,s_flok
003852 E1                  B   261    				pop hl
003853 3E81                B   262    				ld a,081h						003855 B7                  B   263    				or a							003856 C9                  B   264    				ret
                           B   265    			
003857 21 2C 51 00         B   266    s_flok			ld hl,serial_fileheader			00385B 01100000            B   267    				ld bc,16
00385F AF                  B   268    				xor a
003860 CD 2A 15 00         B   269    				call os_bchl_memfill
003864 E1                  B   270    				pop hl							003865 11 2C 51 00         B   271    				ld de,serial_fileheader
003869 0610                B   272    				ld b,16
00386B CD E5 11 00         B   273    				call os_copy_ascii_run
                           B   274    				
00386F 21 40 51 00         B   275    				ld hl,serial_header_id			003873 11 40 51 00         B   276    				ld de,serial_fileheader+014h
003877 010C0000            B   277    				ld bc,12		
00387B EDB0                B   278    				ldir
                           B   279    			
00387D DD21 2C 51 00       B   280    				ld ix,serial_fileheader			003882 11200000            B   281    				ld de,32
003886 CD BC 38 00         B   282    				call s_makeblock			
00388A C0                  B   283    				ret nz
00388B CD F4 38 00         B   284    				call s_sendblock
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00388F C0                  B   285    				ret nz
003890 CD 21 39 00         B   286    				call s_waitack					003894 C0                  B   287    				ret nz							                           B   288    				
003895 DD2A 0F 51 00       B   289    				ld ix,(serial_ez80_address)
00389A ED5B 3C 51 00       B   290    				ld de,(serial_fileheader+16)	00389F CD BC 38 00         B   291    s_sbloop		call s_makeblock				0038A3 38 16               B   292    				jr c,s_rerr
0038A5 CD F4 38 00         B   293    				call s_sendblock				0038A9 38 10               B   294    				jr c,s_rerr	
0038AB CD 21 39 00         B   295    				call s_waitack					0038AF 38 0A               B   296    				jr c,s_rerr
0038B1 21000000            B   297    				ld hl,0
0038B5 AF                  B   298    				xor a
0038B6 ED5A                B   299    				adc hl,de
0038B8 20 E5               B   300    				jr nz,s_sbloop					0038BA AF                  B   301    				xor a							0038BB C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0038BC                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0038BC 21 96 57 00         B   312    				ld hl,sector_buffer				0038C0 01000100            B   313    				ld bc,256						0038C4 AF                  B   314    				xor a							0038C5 CD 2A 15 00         B   315    				call os_bchl_memfill			                           B   316    				
0038C9 0600                B   317    				ld b,0							0038CB FD21 96 57 00       B   318    				ld iy,sector_buffer	
0038D0 DD7E00              B   319    s_sloop			ld a,(ix)
0038D3 FD7700              B   320    				ld (iy),a
0038D6 1B                  B   321    				dec de							0038D7 21000000            B   322    				ld hl,0
0038DB AF                  B   323    				xor a
0038DC ED5A                B   324    				adc hl,de
0038DE 28 12               B   325    				jr z,s_mbend	
0038E0 FD23                B   326    				inc iy							0038E2 C5                  B   327    				push bc
0038E3 01010000            B   328    				ld bc,1
0038E7 DD09                B   329    				add ix,bc						0038E9 C1                  B   330    				pop bc							0038EA 20 04               B   331    				jr nz,s_sbok
0038EC 3E84                B   332    				ld a,84h						0038EE B7                  B   333    				or a
0038EF C9                  B   334    				ret
0038F0 10 DE               B   335    s_sbok			djnz s_sloop
0038F2 AF                  B   336    s_mbend			xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0038F3 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0038F4                     B   341    s_sendblock
                           B   342    
0038F4 E5                  B   343    				push hl
0038F5 D5                  B   344    				push de							0038F6 C5                  B   345    				push bc				
0038F7 21 96 57 00         B   346    				ld hl,sector_buffer			
0038FB 1E00                B   347    				ld e,0
0038FD 7E                  B   348    s_sblklp		ld a,(hl)
0038FE CD 47 2E 00         B   349    				call send_serial_byte
003902 23                  B   350    				inc hl
003903 1D                  B   351    				dec e
003904 20 F7               B   352    				jr nz,s_sblklp
003906 11 96 57 00         B   353    				ld de,sector_buffer
00390A 01000000            B   354    				ld bc,0
00390E CD 01 15 00         B   355    				call crc_checksum
003912 7D                  B   356    				ld a,l
003913 CD 47 2E 00         B   357    				call send_serial_byte
003917 7C                  B   358    				ld a,h
003918 CD 47 2E 00         B   359    				call send_serial_byte
00391C AF                  B   360    				xor a
00391D C1                  B   361    s_popall		pop bc
00391E D1                  B   362    				pop de
00391F E1                  B   363    				pop hl
003920 C9                  B   364    				ret
                           B   365    	
                           B   366    
003921                     B   367    s_waitack
003921 E5                  B   368    				push hl
003922 D5                  B   369    				push de
003923 C5                  B   370    				push bc
003924 CD 0C 2E 00         B   371    				call receive_serial_byte		003928 20 F3               B   372    				jr nz,s_popall
00392A 47                  B   373    				ld b,a
00392B CD 0C 2E 00         B   374    				call receive_serial_byte
00392F 20 EC               B   375    				jr nz,s_popall
003931 4F                  B   376    				ld c,a
003932 264F                B   377    				ld h,'O'
003934 2E4B                B   378    				ld l,'K'
003936 AF                  B   379    				xor a
003937 52ED42              B   380    				sbc.s hl,bc						00393A 28 E1               B   381    				jr z,s_popall					                           B   382    			
00393C 3E85                B   383    				ld a,085h						00393E B7                  B   384    				or a
00393F 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003941                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
003941 3A 5D 51 00         B    57    				ld a,(device_count)				003945 47                  B    58    				ld b,a							003946 DD21 0D 52 00       B    59    				ld ix,host_device_hardware_info
00394B 3A 5C 51 00         B    60    fdevinfo		ld a,(current_driver)
00394F DDBE00              B    61    				cp (ix)
003952 28 09               B    62    				jr z,got_dev_info
003954 ED3220              B    63    				lea ix,ix+32
003957 10 F2               B    64    				djnz fdevinfo
003959 AF                  B    65    				xor a
00395A 3ED0                B    66    				ld a,0d0h						00395C C9                  B    67    				ret	
                           B    68    	
00395D CD F0 43 00         B    69    got_dev_info	call fs_clear_sector_buffer		003961 11000000            B    70    				ld de,0							003965 CD 55 3A 00         B    71    form_ws			call set_lba_and_write_sector
003969 D8                  B    72    				ret c
00396A 13                  B    73    				inc de
00396B 7A                  B    74    				ld a,d
00396C FE03                B    75    				cp 3
00396E 20 F5               B    76    				jr nz,form_ws
                           B    77    	
003970 21 9E 46 00         B    78    				ld hl,bootsector_stub			003974 11 96 57 00         B    79    				ld de,sector_buffer				003978 013F0000            B    80    				ld bc,03fh
00397C EDB0                B    81    				ldir
                           B    82    	
00397E DD7E04              B    83    				ld a,(ix+4)						003981 B7                  B    84    				or a
003982 20 0C               B    85    				jr nz,above_2gb
003984 2100FF3F            B    86    				ld hl,3fff00h					003988 DD1701              B    87    				ld de,(ix+1)					00398B AF                  B    88    				xor a			
00398C ED52                B    89    				sbc hl,de						00398E 30 08               B    90    				jr nc,lessthan2gb				003990 3E40                B    91    above_2gb		ld a,40h						003992 1100FF3F            B    92    				ld de,3fff00h					003996 18 11               B    93    				jr spcvalok
                           B    94    
003998 DD4E03              B    95    lessthan2gb		ld c,(ix+3)						00399B 0C                  B    96    				inc c							00399C 3E01                B    97    spc_loop		ld a,1							00399E B9                  B    98    spc_comp		cp c							00399F 28 08               B    99    				jr z,spcvalok
0039A1 07                  B   100    				rlca
0039A2 FE80                B   101    				cp 080h							0039A4 20 F8               B   102    				jr nz,spc_comp
0039A6 0C                  B   103    				inc c			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0039A7 18 F3               B   104    				jr spc_loop						                           B   105    							
0039A9 DD21 96 57 00       B   106    spcvalok		ld ix,sector_buffer
0039AE DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
0039B1 CD 47 15 00         B   109    				call os_get_xde_msb				0039B5 4F                  B   110    				ld c,a							0039B6 B7                  B   111    				or a							0039B7 20 08               B   112    				jr nz,ts_dword					0039B9 DD7313              B   113    				ld (ix+13h),e					0039BC DD7214              B   114    				ld (ix+14h),d
0039BF 18 07               B   115    				jr ts_done
0039C1 DD1F20              B   116    ts_dword		ld (ix+20h),de					0039C4 DD362300            B   117    				ld (ix+23h),0
                           B   118    
0039C8 EB                  B   119    ts_done			ex de,hl						0039C9 11000000            B   120    				ld de,0						
0039CD DD560D              B   121    				ld d,(ix+0dh)					0039D0 01000000            B   122    				ld bc,0							0039D4 AF                  B   123    div_tscls		xor a							0039D5 ED52                B   124    				sbc hl,de
0039D7 28 05               B   125    				jr z,gotfats
0039D9 38 03               B   126    				jr c,gotfats	
0039DB 03                  B   127    				inc bc
0039DC 18 F6               B   128    				jr div_tscls
0039DE 03                  B   129    gotfats			inc bc
0039DF DD7116              B   130    				ld (ix+16h),c					0039E2 DD7017              B   131    				ld (ix+17h),b
0039E5 ED43 EE 46 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
0039EA 010055AA            B   134    				ld bc,0aa5500h
0039EE ED43 93 59 00       B   135    				ld (sector_buffer+1fdh),bc		0039F3 11000000            B   136    				ld de,0
0039F7 CD 55 3A 00         B   137    				call set_lba_and_write_sector	0039FB D8                  B   138    				ret c
                           B   139    				
0039FC 21000000            B   140    				ld hl,0
003A00 DD6E0E              B   141    				ld l,(ix+0eh)					003A03 DD660F              B   142    				ld h,(ix+0fh)
003A06 19                  B   143    				add hl,de
003A07 EB                  B   144    				ex de,hl						                           B   145    				
003A08 CD F0 43 00         B   146    				call fs_clear_sector_buffer		003A0C DD3600FF            B   147    				ld (ix+0),0ffh
003A10 DD3601F8            B   148    				ld (ix+1),0f8h
003A14 DD3602FF            B   149    				ld (ix+2),0ffh
003A18 DD3603FF            B   150    				ld (ix+3),0ffh
003A1C CD 55 3A 00         B   151    				call set_lba_and_write_sector	003A20 D8                  B   152    				ret c
                           B   153    
003A21 2A EE 46 00         B   154    				ld hl,(fs_sectors_per_fat)	
003A25 19                  B   155    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003A26 EB                  B   156    				ex de,hl
003A27 CD 55 3A 00         B   157    				call set_lba_and_write_sector 	003A2B D8                  B   158    				ret c	
                           B   159    				
003A2C D5                  B   160    				push de							003A2D CD F0 43 00         B   161    				call fs_clear_sector_buffer
003A31 21 F4 46 00         B   162    				ld hl,fs_sought_filename
003A35 11 96 57 00         B   163    				ld de,sector_buffer
003A39 010B0000            B   164    				ld bc,11
003A3D EDB0                B   165    				ldir							003A3F D1                  B   166    				pop de							003A40 DD360B08            B   167    				ld (ix+0bh),8					003A44 DD361821            B   168    				ld (ix+018h),021h				003A48 2A EE 46 00         B   169    				ld hl,(fs_sectors_per_fat)		003A4C 19                  B   170    				add hl,de
003A4D EB                  B   171    				ex de,hl
003A4E CD 55 3A 00         B   172    				call set_lba_and_write_sector	003A52 D8                  B   173    				ret c	
                           B   174    			
003A53 AF                  B   175    				xor a							003A54 C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
003A55                     B   180    set_lba_and_write_sector
                           B   181    
003A55 DDE5                B   182    				push ix
003A57 DD21 32 53 00       B   183    				ld ix,sector_lba0				003A5C DD1F00              B   184    				ld (ix),de						003A5F DD360300            B   185    				ld (ix+3),0
003A63 DDE1                B   186    				pop ix
003A65 CD 82 46 00         B   187    				call fs_write_sector
003A69 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003A6A                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
003A6A 32 90 52 00         B   202    				ld (partition_temp),a
                           B   203    				
003A6E 21000000            B   204    				ld hl,0							003A72 22 32 53 00         B   205    				ld (sector_lba0),hl
003A76 7D                  B   206    				ld a,l
003A77 32 35 53 00         B   207    				ld (sector_lba3),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003A7B CD 6A 46 00         B   208    				call fs_read_sector
003A7F D8                  B   209    				ret c
                           B   210    			
003A80 CD BB 3A 00         B   211    				call fs_check_fat_sig			003A84 20 42               B   212    				jr nz,formbad
                           B   213    			
003A86 CD AC 3A 00         B   214    				call check_fat16_id				003A8A 28 1C               B   215    				jr z,at_pbs						                           B   216    				
003A8C 3A 58 59 00         B   217    				ld a,(sector_buffer+01c2h)		003A90 E604                B   218    				and 4							003A92 28 34               B   219    				jr z,formbad	
003A94 11000000            B   220    				ld de,0
003A98 3A 90 52 00         B   221    				ld a,(partition_temp)
003A9C 5F                  B   222    				ld e,a
003A9D 1610                B   223    				ld d,16
003A9F ED5C                B   224    				mlt de
003AA1 21 54 59 00         B   225    				ld hl,sector_buffer+01beh
003AA5 19                  B   226    				add hl,de						003AA6 AF                  B   227    				xor a
003AA7 C9                  B   228    				ret
                           B   229    					
003AA8 AF                  B   230    at_pbs			xor a
003AA9 3ED3                B   231    				ld a,0d3h						003AAB C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
003AAC                     B   236    check_fat16_id
                           B   237    		
003AAC 21 CC 57 00         B   238    				ld hl,sector_buffer+036h		003AB0 11 7F 4B 00         B   239    				ld de,fat16_txt			
003AB4 0605                B   240    				ld b,5
003AB6 CD C6 11 00         B   241    				call os_compare_strings
003ABA C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
003ABB                     B   247    fs_check_fat_sig
                           B   248    
003ABB 2A 94 59 00         B   249    				ld hl,(sector_buffer+01feh)		003ABF 1155AA00            B   250    				ld de,0aa55h
003AC3 AF                  B   251    				xor a
003AC4 52ED52              B   252    				sbc.s hl,de						003AC7 C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
003AC8 AF                  B   257    formbad			xor a
003AC9 3ECE                B   258    				ld a,0ceh						003ACB C9                  B   259    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
003ACC                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
003ACC C5                  B   268    				push bc
003ACD D5                  B   269    				push de
003ACE E5                  B   270    				push hl
003ACF CD D7 3A 00         B   271    				call go_checkf
003AD3 E1                  B   272    				pop hl
003AD4 D1                  B   273    				pop de
003AD5 C1                  B   274    				pop bc
003AD6 C9                  B   275    				ret
                           B   276    				
003AD7 CD 53 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
003ADB 21 8D 51 00         B   278    				ld hl,volume_mount_list
003ADF 19                  B   279    				add hl,de
003AE0 7E                  B   280    				ld a,(hl)
003AE1 B7                  B   281    				or a							003AE2 20 04               B   282    				jr nz,fs_volpre
003AE4 AF                  B   283    				xor a
003AE5 3ECF                B   284    				ld a,cfh						003AE7 C9                  B   285    				ret
                           B   286    			
003AE8 11080000            B   287    fs_volpre		ld de,8							003AEC 19                  B   288    				add hl,de
003AED 11 32 53 00         B   289    				ld de,sector_lba0
003AF1 01040000            B   290    				ld bc,4
003AF5 EDB0                B   291    				ldir
003AF7 CD 6A 46 00         B   292    				call fs_read_sector
003AFB D8                  B   293    				ret c	
                           B   294    				
003AFC CD BB 3A 00         B   295    				call fs_check_fat_sig			003B00 20 C6               B   296    				jr nz,formbad		
                           B   297    			
003B02 CD AC 3A 00         B   298    				call check_fat16_id				003B06 20 C0               B   299    				jr nz,formbad
                           B   300    			
003B08 DD21 96 57 00       B   301    				ld ix,sector_buffer
003B0D DD270B              B   302    				ld hl,(ix+0bh)					003B10 11000200            B   303    				ld de,512						003B14 AF                  B   304    				xor a
003B15 52ED52              B   305    				sbc.s hl,de						003B18 20 AE               B   306    				jr nz,formbad
                           B   307    			
003B1A DD7E0D              B   308    				ld a,(ix+0dh)					003B1D 32 DD 46 00         B   309    				ld (fs_cluster_size),a
003B21 CB27                B   310    				sla a
003B23 32 DF 46 00         B   311    				ld (fs_bytes_per_cluster+1),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   312    							
003B27 21000000            B   313    				ld hl,0
003B2B DD6E0E              B   314    				ld l,(ix+0eh)					003B2E DD660F              B   315    				ld h,(ix+0fh)
003B31 22 E1 46 00         B   316    				ld (fs_fat1_position),hl		003B35 11000000            B   317    				ld de,0
003B39 DD5E16              B   318    				ld e,(ix+16h)					003B3C DD5617              B   319    				ld d,(ix+17h)
003B3F ED53 EE 46 00       B   320    				ld (fs_sectors_per_fat),de
003B44 19                  B   321    				add hl,de
003B45 22 E4 46 00         B   322    				ld (fs_fat2_position),hl		003B49 19                  B   323    				add hl,de
003B4A 22 E7 46 00         B   324    				ld (fs_root_dir_position),hl 	003B4E EB                  B   325    				ex de,hl
003B4F DD6E11              B   326    				ld l,(ix+11h)					003B52 DD6612              B   327    				ld h,(ix+12h)					003B55 7C                  B   328    				ld a,h
003B56 B5                  B   329    				or l
003B57 CA C8 3A 00         B   330    				jr z,formbad					003B5B 29                  B   331    				add hl,hl						003B5C 29                  B   332    				add hl,hl						003B5D 29                  B   333    				add hl,hl
003B5E 29                  B   334    				add hl,hl
003B5F EB                  B   335    				ex de,hl
003B60 7A                  B   336    				ld a,d
003B61 32 ED 46 00         B   337    				ld (fs_root_dir_sectors),a		003B65 01000000            B   338    				ld bc,0
003B69 4A                  B   339    				ld c,d
003B6A 09                  B   340    				add hl,bc				
003B6B 22 EA 46 00         B   341    				ld (fs_data_area),hl			                           B   342    												003B6F 21000000            B   343    				ld hl,0
003B73 01000000            B   344    				ld bc,0
003B77 DD4E22              B   345    				ld c,(ix+022h)					003B7A DD4623              B   346    				ld b,(ix+023h)
003B7D DD6E13              B   347    				ld l,(ix+013h)					003B80 DD6614              B   348    				ld h,(ix+014h)
003B83 7C                  B   349    				ld a,h							003B84 B5                  B   350    				or l
003B85 20 06               B   351    				jr nz,got_tsfbs
003B87 DD6E20              B   352    				ld l,(ix+020h)					003B8A DD6621              B   353    				ld h,(ix+021h)
003B8D ED5B EA 46 00       B   354    got_tsfbs 		ld de,(fs_data_area)
003B92 AF                  B   355    				xor a							003B93 52ED52              B   356    				sbc.s hl,de						003B96 30 02               B   357    				jr nc,nomxcb
003B98 520B                B   358    				dec.s bc
003B9A 3A DD 46 00         B   359    nomxcb			ld a,(fs_cluster_size)
003B9E CB3F                B   360    fmaxcl			srl a
003BA0 28 08               B   361    				jr z,got_cmaxc					003BA2 CB39                B   362    				srl c				
003BA4 CB1C                B   363    				rr h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003BA6 CB1D                B   364    				rr l
003BA8 18 F4               B   365    				jr fmaxcl
003BAA E5                  B   366    got_cmaxc		push hl							003BAB 11F0FF00            B   367    				ld de,0fff0h
003BAF AF                  B   368    				xor a
003BB0 52ED52              B   369    				sbc.s hl,de						003BB3 38 02               B   370    				jr c,cmaxok
003BB5 E1                  B   371    				pop hl
003BB6 D5                  B   372    				push de
003BB7 E1                  B   373    cmaxok			pop hl
003BB8 22 F1 46 00         B   374    				ld (fs_max_data_clusters),hl
003BBC AF                  B   375    				xor a
003BBD C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
003BBE                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
003BBE ED5B F1 46 00       B   384    				ld de,(fs_max_data_clusters)
003BC3 13                  B   385    				inc de
003BC4 13                  B   386    				inc de							003BC5 D5                  B   387    				push de
003BC6 DDE1                B   388    				pop ix
                           B   389    			
003BC8 AF                  B   390    				xor a
003BC9 32 36 47 00         B   391    cfs_lp2			ld (fs_working_sector),a
003BCD 2A E1 46 00         B   392    				ld hl,(fs_fat1_position)
003BD1 CD 40 46 00         B   393    				call set_abs_lba_and_read_secto
003BD5 D8                  B   394    				ret c
                           B   395    				
003BD6 21 96 57 00         B   396    				ld hl,sector_buffer
003BDA 0600                B   397    				ld b,0
003BDC AF                  B   398    cfs_lp1			xor a
003BDD B6                  B   399    				or a,(hl)						003BDE 23                  B   400    				inc hl							003BDF 20 03               B   401    				jr nz,cfs_ciu					003BE1 B6                  B   402    				or a,(hl)
003BE2 28 02               B   403    				jr z,cfs_ddcc
003BE4 DD2B                B   404    cfs_ciu			dec ix							003BE6 23                  B   405    cfs_ddcc		inc hl
003BE7 1B                  B   406    				dec de
003BE8 7A                  B   407    				ld a,d
003BE9 B3                  B   408    				or e
003BEA 28 09               B   409    				jr z,cfs_ok						003BEC 10 EE               B   410    				djnz cfs_lp1
003BEE 3A 36 47 00         B   411    				ld a,(fs_working_sector)
003BF2 3C                  B   412    				inc a
003BF3 18 D4               B   413    				jr cfs_lp2
                           B   414    				
003BF5 3A DD 46 00         B   415    cfs_ok			ld a,(fs_cluster_size)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003BF9 CB3F                B   416    cltoslp			srl a
003BFB 28 04               B   417    				jr z,powdone
003BFD DD29                B   418    				add ix,ix
003BFF 18 F8               B   419    				jr cltoslp	
003C01 FD21 4E 53 00       B   420    powdone			ld iy,xrr_temp
003C06 FD3E00              B   421    				ld (iy),ix						003C09 FDCB023E            B   422    				srl (iy+2)
003C0D FDCB011E            B   423    				rr (iy+1)
003C11 FDCB001E            B   424    				rr (iy+0)						003C15 FD1700              B   425    				ld de,(iy)						003C18 AF                  B   426    				xor a
003C19 C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
003C1A                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
003C1A CD 02 44 00         B   436    				call fs_find_filename			003C1E D8                  B   437    				ret c							003C1F FEC2                B   438    				cp 0c2h							003C21 20 04               B   439    				jr nz,founddir
003C23 AF                  B   440    				xor a							003C24 3ED1                B   441    				ld a,0d1h						003C26 C9                  B   442    				ret
003C27 AF                  B   443    founddir		xor a							003C28 3E04                B   444    				ld a,04h						003C2A DDCB0B66            B   445    				bit 4,(ix+0bh)
003C2E C8                  B   446    				ret z
003C2F 11000000            B   447    				ld de,0
003C33 DD5E1A              B   448    				ld e,(ix+01ah)
003C36 DD561B              B   449    				ld d,(ix+01bh)					003C39 CD 25 1A 00         B   450    				call fs_update_dir_cluster
003C3D AF                  B   451    				xor a
003C3E C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
003C3F                     B   458    fs_goto_root_dir_command
                           B   459    
003C3F D5                  B   460    				push de
003C40 11000000            B   461    				ld de,0
003C44 CD 25 1A 00         B   462    				call fs_update_dir_cluster
003C48 D1                  B   463    				pop de
003C49 AF                  B   464    				xor a
003C4A C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   468    	
                           B   469    	
003C4B                     B   470    fs_parent_dir_command
                           B   471    
003C4B CD 19 1A 00         B   472    				call fs_get_dir_cluster
003C4F 7A                  B   473    				ld a,d
003C50 B3                  B   474    				or e
003C51 20 03               B   475    				jr nz,pdnaroot
003C53 3ECA                B   476    				ld a,0cah						003C55 C9                  B   477    				ret
003C56 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					003C5A 22 F4 46 00         B   479    				ld (fs_sought_filename),hl		003C5E 21 F7 46 00         B   480    				ld hl,fs_sought_filename+3		003C62 3E20                B   481    				ld a,32
003C64 01080000            B   482    				ld bc,8
003C68 CD 2A 15 00         B   483    				call os_bchl_memfill
003C6C 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
003C6E                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
003C6E CD 02 44 00         B   497    				call fs_find_filename			003C72 D8                  B   498    				ret c							003C73 C0                  B   499    				ret nz							                           B   500    								
003C74 3EC6                B   501    				ld a,0c6h						003C76 DDCB0B66            B   502    				bit 4,(ix+0bh)
003C7A C0                  B   503    				ret nz
                           B   504    
003C7B AF                  B   505    				xor a
003C7C 32 4A 47 00         B   506    				ld (fs_filepointer_valid),a		003C80 21000000            B   507    				ld hl,0
003C84 22 18 47 00         B   508    				ld (fs_file_pointer),hl			003C88 32 1B 47 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
003C8C DD171C              B   511    				ld de,(ix+01ch)
003C8F D5                  B   512    				push de
003C90 E1                  B   513    				pop hl
003C91 DD4E1F              B   514    				ld c,(ix+01fh)					003C94 ED53 1C 47 00       B   515    				ld (fs_file_length),de			003C99 79                  B   516    				ld a,c
003C9A 32 1F 47 00         B   517    				ld (fs_file_length+3),a			003C9E B7                  B   518    				or a							003C9F 28 04               B   519    				jr z,fs_dflsm					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003CA1 21FFFFFF            B   520    				ld hl,0ffffffh
003CA5 22 24 47 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
003CA9 21000000            B   523    				ld hl,0
003CAD DD6E1A              B   524    				ld l,(ix+01ah)		
003CB0 DD661B              B   525    				ld h,(ix+01bh)
003CB3 22 27 47 00         B   526    				ld (fs_file_start_cluster),hl	003CB7 AF                  B   527    				xor a
003CB8 C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
003CB9                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
003CB9 2A 24 47 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
003CBD 11000000            B   540    				ld de,0
003CC1 AF                  B   541    				xor a
003CC2 ED5A                B   542    				adc hl,de
003CC4 20 04               B   543    				jr nz,fs_btrok
003CC6 AF                  B   544    fs_fliz			xor a							003CC7 3EC7                B   545    				ld a,0c7h						003CC9 C9                  B   546    				ret
                           B   547    			 
003CCA 2A 2D 47 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			003CCE 22 30 47 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
003CD2 2A 1C 47 00         B   551    				ld hl,(fs_file_length)			003CD6 ED4B 18 47 00       B   552    				ld bc,(fs_file_pointer)			003CDB 3A 1B 47 00         B   553    				ld a,(fs_file_pointer+3)		003CDF 5F                  B   554    				ld e,a
003CE0 3A 1F 47 00         B   555    				ld a,(fs_file_length+3)
003CE4 B7                  B   556    				or a							003CE5 ED42                B   557    				sbc hl,bc
003CE7 9B                  B   558    				sbc a,e
003CE8 38 09               B   559    				jr c,fs_fpbad
003CEA 01000000            B   560    				ld bc,0
003CEE AF                  B   561    				xor a
003CEF ED4A                B   562    				adc hl,bc
003CF1 20 04               B   563    				jr nz,fs_fpok
003CF3 AF                  B   564    fs_fpbad		xor a
003CF4 3ECC                B   565    				ld a,0cch						003CF6 C9                  B   566    				ret
                           B   567    			
                           B   568    	
003CF7 3A 4A 47 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		003CFB B7                  B   570    				or a							003CFC 28 1B               B   571    				jr z,seek_strt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   572    			
003CFE ED5B 30 47 00       B   573    				ld de,(fs_ez80_working_address)
003D03 ED4B 4B 47 00       B   574    				ld bc,(fs_sector_pos_cnt)		003D08 C5                  B   575    				push bc
003D09 ED4B 33 47 00       B   576    				ld bc,(fs_in_sector_offset)
003D0E 21 96 59 00         B   577    				ld hl,sector_buffer+0200h		003D12 AF                  B   578    				xor a
003D13 ED42                B   579    				sbc hl,bc		
003D15 C3 A5 3D 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
003D19 3E01                B   583    seek_strt		ld a,1
003D1B 32 4A 47 00         B   584    				ld (fs_filepointer_valid),a
003D1F 2A 27 47 00         B   585    				ld hl,(fs_file_start_cluster)	003D23 22 2A 47 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
003D27 3A 1B 47 00         B   588    				ld a,(fs_file_pointer+3)		003D2B 2A 18 47 00         B   589    				ld hl,(fs_file_pointer)			003D2F ED4B DE 46 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
003D34 AF                  B   591    				xor a
003D35 ED42                B   592    				sbc hl,bc						003D37 DE00                B   593    				sbc a,0
003D39 38 14               B   594    				jr c,fs_fpgbo
003D3B E5                  B   595    fs_fpgnb		push hl				
003D3C 2A 2A 47 00         B   596    				ld hl,(fs_file_working_cluster)
003D40 CD 12 45 00         B   597    				call get_fat_entry_for_cluster
003D44 30 02               B   598    				jr nc,fs_ghok					003D46 E1                  B   599    				pop hl
003D47 C9                  B   600    				ret
003D48 22 2A 47 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
003D4C E1                  B   602    				pop hl
003D4D 18 E0               B   603    				jr fs_fpblp
                           B   604    			
003D4F 09                  B   605    fs_fpgbo		add hl,bc						003D50 4C                  B   606    				ld c,h
003D51 CB39                B   607    				srl c							003D53 3A DD 46 00         B   608    				ld a,(fs_cluster_size)
003D57 91                  B   609    				sub c
003D58 47                  B   610    				ld b,a							003D59 7C                  B   611    				ld a,h
003D5A E601                B   612    				and 01h
003D5C 67                  B   613    				ld h,a
003D5D 22 33 47 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
003D61 79                  B   616    fs_flns			ld a,c				
003D62 2A 2A 47 00         B   617    				ld hl,(fs_file_working_cluster)
003D66 CD E9 45 00         B   618    				call cluster_and_offset_to_lba
003D6A CD 6A 46 00         B   619    				call fs_read_sector				003D6E D8                  B   620    				ret c							                           B   621    			
003D6F C5                  B   622    				push bc							003D70 11000000            B   623    				ld de,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003D74 2A 33 47 00         B   624    				ld hl,(fs_in_sector_offset)		003D78 5D                  B   625    				ld e,l
003D79 54                  B   626    				ld d,h
003D7A 21000200            B   627    				ld hl,512
003D7E AF                  B   628    				xor a
003D7F ED52                B   629    				sbc hl,de						003D81 44                  B   630    				ld b,h
003D82 4D                  B   631    				ld c,l							003D83 21 96 57 00         B   632    				ld hl,sector_buffer				003D87 19                  B   633    				add hl,de						003D88 ED5B 30 47 00       B   634    				ld de,(fs_ez80_working_address)
003D8D EDA0                B   635    fs_cblp			ldi 							                           B   636    
003D8F 7A                  B   637    				ld a,d							003D90 B3                  B   638    				or e
003D91 20 0C               B   639    				jr nz,fs_edaok
003D93 ED53 30 47 00       B   640    				ld (fs_ez80_working_address),de
003D98 3A 32 47 00         B   641    				ld a,(fs_ez80_working_address+2
003D9C B7                  B   642    				or a
003D9D 28 43               B   643    				jr z,fs_mem_error
                           B   644    
003D9F CD 72 45 00         B   645    fs_edaok		call transfer_length_countdown	003DA3 28 30               B   646    				jr z,fs_bdld
003DA5 78                  B   647    fs_dadok		ld a,b							003DA6 B1                  B   648    				or c
003DA7 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
003DA9 ED43 33 47 00       B   651    				ld (fs_in_sector_offset),bc		003DAE ED53 30 47 00       B   652    				ld (fs_ez80_working_address),de
003DB3 C1                  B   653    				pop bc							003DB4 0C                  B   654    				inc c							003DB5 10 AA               B   655    				djnz fs_flns					                           B   656    			
003DB7 2A 2A 47 00         B   657    				ld hl,(fs_file_working_cluster)
003DBB CD 12 45 00         B   658    				call get_fat_entry_for_cluster	003DBF D8                  B   659    				ret c							003DC0 22 2A 47 00         B   660    				ld (fs_file_working_cluster),hl
003DC4 CD BB 42 00         B   661    				call fs_compare_hl_fff8			003DC8 D2 F3 3C 00         B   662    				jp nc,fs_fpbad			
003DCC 0E00                B   663    fs_nfbok		ld c,0							003DCE 3A DD 46 00         B   664    				ld a,(fs_cluster_size)	
003DD2 47                  B   665    				ld b,a							003DD3 18 8C               B   666    				jr fs_flns		
                           B   667    			
003DD5 ED43 33 47 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		003DDA C1                  B   669    				pop bc							003DDB ED43 4B 47 00       B   670    				ld (fs_sector_pos_cnt),bc
003DE0 AF                  B   671    				xor a							003DE1 C9                  B   672    				ret
                           B   673    				
003DE2 3EC8                B   674    fs_mem_error	ld a,0c8h						003DE4 C1                  B   675    fs_flerr		pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003DE5 B7                  B   676    				or a							003DE6 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
003DE7                     B   681    fs_make_dir_command		
                           B   682    				
003DE7 CD 02 44 00         B   683    				call fs_find_filename			003DEB D8                  B   684    				ret c
003DEC FEC2                B   685    				cp 0c2h							003DEE 28 04               B   686    				jr z,mdirfnde
003DF0 AF                  B   687    				xor a							003DF1 3EC9                B   688    				ld a,0c9h						003DF3 C9                  B   689    				ret
                           B   690    			
003DF4 CD C8 42 00         B   691    mdirfnde		call fs_find_free_cluster		003DF8 D8                  B   692    				ret c							003DF9 C0                  B   693    				ret nz							                           B   694    							
003DFA 2A 3A 47 00         B   695    				ld hl,(fs_free_cluster)
003DFE 22 3D 47 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
003E02 CD 19 43 00         B   698    				call fs_find_free_dir_entry		003E06 D8                  B   699    				ret c							003E07 C0                  B   700    				ret nz							                           B   701    			
003E08 DDE5                B   702    				push ix							003E0A D1                  B   703    				pop de
003E0B 21 F4 46 00         B   704    				ld hl,fs_sought_filename
003E0F 010B0000            B   705    				ld bc,11
003E13 EDB0                B   706    				ldir
003E15 AF                  B   707    				xor a							003E16 0615                B   708    				ld b,21
003E18 12                  B   709    clrdiren		ld (de),a
003E19 13                  B   710    				inc de
003E1A 10 FC               B   711    				djnz clrdiren
003E1C DD360B10            B   712    				ld (ix+0bh),010h				003E20 DD361821            B   713    				ld (ix+018h),021h				003E24 ED5B 3D 47 00       B   714    				ld de,(fs_new_file_cluster)
003E29 DD731A              B   715    				ld (ix+01ah),e					003E2C DD721B              B   716    				ld (ix+01bh),d
003E2F CD 82 46 00         B   717    				call fs_write_sector			003E33 D8                  B   718    				ret c							                           B   719    				
003E34 CD F0 43 00         B   720    				call fs_clear_sector_buffer
003E38 DD21 96 57 00       B   721    				ld ix,sector_buffer				003E3D DD36002E            B   722    				ld (ix+00h),02eh				003E41 DD360120            B   723    				ld (ix+01h),020h
003E45 DD36202E            B   724    				ld (ix+020h),02eh
003E49 DD36212E            B   725    				ld (ix+021h),02eh
003E4D DD360B10            B   726    				ld (ix+0bh),010h
003E51 DD362B10            B   727    				ld (ix+02bh),010h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003E55 ED5B 3D 47 00       B   728    				ld de,(fs_new_file_cluster)		003E5A DD731A              B   729    				ld (ix+01ah),e
003E5D DD721B              B   730    				ld (ix+01bh),d
003E60 CD 19 1A 00         B   731    				call fs_get_dir_cluster			003E64 DD733A              B   732    				ld (ix+03ah),e
003E67 DD723B              B   733    				ld (ix+03bh),d
003E6A DD361821            B   734    				ld (ix+018h),021h				003E6E DD363821            B   735    				ld (ix+038h),021h				003E72 0609                B   736    				ld b,9
003E74 DD360220            B   737    mndelp			ld (ix+002h),32
003E78 DD362220            B   738    				ld (ix+022h),32
003E7C DD23                B   739    				inc ix
003E7E 10 F4               B   740    				djnz mndelp
003E80 2A 3D 47 00         B   741    				ld hl,(fs_new_file_cluster)		003E84 AF                  B   742    				xor a
003E85 CD E9 45 00         B   743    				call cluster_and_offset_to_lba
003E89 CD 82 46 00         B   744    				call fs_write_sector
003E8D D8                  B   745    				ret c							                           B   746    			
003E8E CD F0 43 00         B   747    				call fs_clear_sector_buffer		003E92 AF                  B   748    				xor a
003E93 3C                  B   749    wroslp			inc a
003E94 32 36 47 00         B   750    				ld (fs_working_sector),a
003E98 21 DD 46 00         B   751    				ld hl,fs_cluster_size
003E9C BE                  B   752    				cp (hl)
003E9D 28 13               B   753    				jr z,allsclr
003E9F 2A 3D 47 00         B   754    				ld hl,(fs_new_file_cluster)
003EA3 CD E9 45 00         B   755    				call cluster_and_offset_to_lba
003EA7 CD 82 46 00         B   756    				call fs_write_sector
003EAB D8                  B   757    				ret c
003EAC 3A 36 47 00         B   758    				ld a,(fs_working_sector)
003EB0 18 E1               B   759    				jr wroslp
                           B   760    			
003EB2 2A 3D 47 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		003EB6 11FFFF00            B   762    				ld de,0ffffh
003EBA CD 3E 45 00         B   763    				call update_fat_entry_for_clust
003EBE AF                  B   764    				xor a
003EBF C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
003EC0                     B   771    fs_delete_dir_command
                           B   772    
003EC0 CD 02 44 00         B   773    				call fs_find_filename			003EC4 D8                  B   774    				ret c
003EC5 28 04               B   775    				jr z,ddc_gotd
003EC7 3ED1                B   776    				ld a,0d1h						003EC9 B7                  B   777    				or a
003ECA C9                  B   778    				ret
                           B   779    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003ECB DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					003ECF 20 04               B   781    				jr nz,okdeldir
003ED1 AF                  B   782    				xor a
003ED2 3EC4                B   783    				ld a,0c4h						003ED4 C9                  B   784    				ret
                           B   785    				
003ED5 DD22 40 47 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
003EDA CD 48 46 00         B   787    				call backup_sector_lba
003EDE DD6E1A              B   788    				ld l,(ix+01ah)					003EE1 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
003EE4 3A DD 46 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
003EE8 47                  B   792    				ld b,a							003EE9 0E00                B   793    				ld c,0			
003EEB 79                  B   794    fs_cne2 		ld a,c
003EEC CD E9 45 00         B   795    				call cluster_and_offset_to_lba
003EF0 CD 6A 46 00         B   796    				call fs_read_sector
003EF4 D8                  B   797    				ret c							                           B   798    				
003EF5 C5                  B   799    				push bc
003EF6 0610                B   800    				ld b,16							003EF8 DD21 96 57 00       B   801    				ld ix,sector_buffer
003EFD 11200000            B   802    				ld de,020h
003F01 DD7E00              B   803    fs_cne1			ld a,(ix)
003F04 B7                  B   804    				or a
003F05 28 0D               B   805    				jr z,fs_chnde
003F07 FEE5                B   806    				cp 0e5h
003F09 28 09               B   807    				jr z,fs_chnde
003F0B FE2E                B   808    				cp '.'
003F0D 28 05               B   809    				jr z,fs_chnde
003F0F C1                  B   810    				pop bc
003F10 AF                  B   811    				xor a							003F11 3EC5                B   812    				ld a,0c5h						003F13 C9                  B   813    				ret
                           B   814    			
003F14 DD19                B   815    fs_chnde		add ix,de
003F16 10 E9               B   816    				djnz fs_cne1
003F18 C1                  B   817    				pop bc
003F19 0C                  B   818    				inc c
003F1A 10 CF               B   819    				djnz fs_cne2
                           B   820    			
003F1C CD 12 45 00         B   821    				call get_fat_entry_for_cluster	003F20 D8                  B   822    				ret c
003F21 CD BB 42 00         B   823    				call fs_compare_hl_fff8
003F25 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
003F27 CD 5D 46 00         B   826    dir_empty		call restore_sector_lba			003F2B CD 6A 46 00         B   827    				call fs_read_sector
003F2F D8                  B   828    				ret c							003F30 2A 40 47 00         B   829    				ld hl,(fs_fname_in_sector_addr)
003F34 36E5                B   830    fs_delco		ld (hl),0e5h					003F36 CD 82 46 00         B   831    				call fs_write_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003F3A D8                  B   832    				ret c
                           B   833    			
003F3B E5                  B   834    				push hl
003F3C DDE1                B   835    				pop ix
003F3E DD6E1A              B   836    				ld l,(ix+01ah)
003F41 DD661B              B   837    				ld h,(ix+01bh)
003F44 22 37 47 00         B   838    				ld (fs_working_cluster),hl
003F48 7C                  B   839    				ld a,h							003F49 B5                  B   840    				or l							003F4A C8                  B   841    				ret z							                           B   842    				
003F4B 2A 37 47 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
003F4F CD 12 45 00         B   844    				call get_fat_entry_for_cluster
003F53 D8                  B   845    				ret c
003F54 EB                  B   846    				ex de,hl
                           B   847    				
003F55 2A 37 47 00         B   848    				ld hl,(fs_working_cluster)
003F59 ED53 37 47 00       B   849    				ld (fs_working_cluster),de
003F5E 11000000            B   850    				ld de,0
003F62 CD 3E 45 00         B   851    				call update_fat_entry_for_clust
003F66 D8                  B   852    				ret c
                           B   853    				
003F67 CD BB 42 00         B   854    				call fs_compare_hl_fff8			003F6B 38 DE               B   855    				jr c,clrfatlp
003F6D AF                  B   856    				xor a
003F6E C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
003F6F                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
003F6F CD 02 44 00         B   867    				call fs_find_filename			003F73 D8                  B   868    				ret c
003F74 FEC2                B   869    				cp 0c2h							003F76 28 04               B   870    				jr z,mfilefnde
003F78 AF                  B   871    				xor a							003F79 3EC9                B   872    				ld a,0c9h						003F7B C9                  B   873    				ret
                           B   874    			
003F7C CD 19 43 00         B   875    mfilefnde		call fs_find_free_dir_entry		003F80 D8                  B   876    				ret c							003F81 C0                  B   877    				ret nz							                           B   878    			
003F82 DDE5                B   879    				push ix							003F84 D1                  B   880    				pop de
003F85 21 F4 46 00         B   881    				ld hl,fs_sought_filename
003F89 010B0000            B   882    				ld bc,11
003F8D EDB0                B   883    				ldir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003F8F AF                  B   884    				xor a							003F90 0615                B   885    				ld b,21
003F92 12                  B   886    clrfnen			ld (de),a
003F93 13                  B   887    				inc de
003F94 10 FC               B   888    				djnz clrfnen
003F96 DD361821            B   889    				ld (ix+018h),021h				003F9A CD 82 46 00         B   890    				call fs_write_sector			003F9E D8                  B   891    				ret c							003F9F AF                  B   892    				xor a
003FA0 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
003FA1                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
003FA1 ED5B 24 47 00       B   906    				ld de,(fs_file_transfer_length)
003FA6 21000000            B   907    				ld hl,0
003FAA AF                  B   908    				xor a
003FAB ED5A                B   909    				adc hl,de
003FAD CA C6 3C 00         B   910    				jp z,fs_fliz					                           B   911    				 
003FB1 CD 02 44 00         B   912    				call fs_find_filename			003FB5 D8                  B   913    				ret c							003FB6 FEC2                B   914    				cp 0c2h				
003FB8 C8                  B   915    				ret z							003FB9 DDCB0B66            B   916    				bit 4,(ix+0bh)					003FBD 28 04               B   917    				jr z,fs_oknad					003FBF AF                  B   918    				xor a							003FC0 3EC6                B   919    				ld a,0c6h						003FC2 C9                  B   920    				ret
                           B   921    
003FC3 CD 48 46 00         B   922    fs_oknad		call backup_sector_lba
003FC7 DD22 40 47 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
003FCC DD311C              B   925    				ld iy,(ix+01ch)					003FCF DD7E1F              B   926    				ld a,(ix+01fh)
003FD2 FD22 20 47 00       B   927    				ld (fs_existing_file_length),iy
003FD7 32 20 47 00         B   928    				ld (fs_existing_file_length),a
003FDB ED5B 24 47 00       B   929    				ld de,(fs_file_transfer_length)
003FE0 FD19                B   930    				add iy,de						003FE2 CE00                B   931    				adc a,0
003FE4 DD3E1C              B   932    				ld (ix+01ch),iy					003FE7 DD771F              B   933    				ld (ix+01fh),a					003FEA 30 04               B   934    				jr nc,nfsizeok
003FEC AF                  B   935    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003FED 3EC7                B   936    				ld a,0c7h						003FEF C9                  B   937    				ret
                           B   938    
003FF0 11000000            B   939    nfsizeok		ld de,0
003FF4 DD5E1A              B   940    				ld e,(ix+01ah)					003FF7 DD561B              B   941    				ld d,(ix+01bh)					003FFA ED53 2A 47 00       B   942    				ld (fs_file_working_cluster),de
003FFF CD 82 46 00         B   943    				call fs_write_sector			004003 D8                  B   944    				ret c
004004 7A                  B   945    				ld a,d
004005 B3                  B   946    				or e
004006 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004008 CD C8 42 00         B   949    				call fs_find_free_cluster		00400C D8                  B   950    				ret c
00400D C0                  B   951    				ret nz
00400E 2A 3A 47 00         B   952    				ld hl,(fs_free_cluster)
004012 22 2A 47 00         B   953    				ld (fs_file_working_cluster),hl
004016 11FFFF00            B   954    				ld de,0ffffh
00401A CD 3E 45 00         B   955    				call update_fat_entry_for_clust
00401E D8                  B   956    				ret c
                           B   957    			
00401F CD 5D 46 00         B   958    				call restore_sector_lba			004023 CD 6A 46 00         B   959    				call fs_read_sector
004027 D8                  B   960    				ret c
004028 DD2A 40 47 00       B   961    				ld ix,(fs_fname_in_sector_addr)
00402D ED5B 2A 47 00       B   962    				ld de,(fs_file_working_cluster)
004032 DD731A              B   963    				ld (ix+01ah),e
004035 DD721B              B   964    				ld (ix+01bh),d
004038 CD 82 46 00         B   965    				call fs_write_sector			00403C D8                  B   966    				ret c
                           B   967    				
                           B   968    					
00403D 2A 2A 47 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004041 CD 12 45 00         B   970    				call get_fat_entry_for_cluster
004045 D8                  B   971    				ret c
004046 CD BB 42 00         B   972    				call fs_compare_hl_fff8
00404A 30 1C               B   973    				jr nc,atlclif
00404C 22 2A 47 00         B   974    				ld (fs_file_working_cluster),hl
004050 01000000            B   975    				ld bc,0
004054 3A DD 46 00         B   976    				ld a,(fs_cluster_size)
004058 CB27                B   977    				sla a
00405A 47                  B   978    				ld b,a
00405B 2A 20 47 00         B   979    				ld hl,(fs_existing_file_length)
00405F AF                  B   980    				xor a							004060 ED42                B   981    				sbc hl,bc						004062 22 20 47 00         B   982    				ld (fs_existing_file_length),hl
004066 18 D5               B   983    				jr apenclch
                           B   984    				
004068 ED4B 20 47 00       B   985    atlclif			ld bc,(fs_existing_file_length)
00406D CB38                B   986    				srl b				
00406F 48                  B   987    				ld c,b							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004070 3A DD 46 00         B   988    				ld a,(fs_cluster_size)
004074 91                  B   989    				sub c
004075 47                  B   990    				ld b,a							004076 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004078 2A 2A 47 00         B   993    				ld hl,(fs_file_working_cluster)
00407C 79                  B   994    				ld a,c
00407D CD E9 45 00         B   995    				call cluster_and_offset_to_lba
004081 CD 6A 46 00         B   996    				call fs_read_sector
004085 D8                  B   997    				ret c
004086 C5                  B   998    				push bc							                           B   999    				
004087 11000000            B  1000    				ld de,0
00408B 3A 20 47 00         B  1001    				ld a,(fs_existing_file_length)
00408F 5F                  B  1002    				ld e,a
004090 3A 21 47 00         B  1003    				ld a,(fs_existing_file_length+1
004094 E601                B  1004    				and 1
004096 57                  B  1005    				ld d,a							004097 21000200            B  1006    				ld hl,512	
00409B AF                  B  1007    				xor a
00409C ED52                B  1008    				sbc hl,de						00409E E5                  B  1009    				push hl
00409F C1                  B  1010    				pop bc							0040A0 21 96 57 00         B  1011    				ld hl,sector_buffer
0040A4 19                  B  1012    				add hl,de
0040A5 EB                  B  1013    				ex de,hl						0040A6 7C                  B  1014    				ld a,h			
0040A7 B5                  B  1015    				or l
0040A8 20 04               B  1016    				jr nz,fs_dcsb					0040AA CD F0 43 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
0040AE 2A 2D 47 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			0040B2 EDA0                B  1019    fs_cbsb			ldi								0040B4 7C                  B  1020    				ld a,h							0040B5 B5                  B  1021    				or l
0040B6 20 0D               B  1022    				jr nz,fs_srcadok
0040B8 22 2D 47 00         B  1023    				ld (fs_ez80_address),hl
0040BC 3A 2F 47 00         B  1024    				ld a,(fs_ez80_address+2)
0040C0 B7                  B  1025    				or a
0040C1 CA E2 3D 00         B  1026    				jp z,fs_mem_error
0040C5 CD 72 45 00         B  1027    fs_srcadok		call transfer_length_countdown
0040C9 28 54               B  1028    				jr z,fs_lbof					0040CB 78                  B  1029    fs_sadok		ld a,b							0040CC B1                  B  1030    				or c
0040CD 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
0040CF 22 2D 47 00         B  1033    				ld (fs_ez80_address),hl			0040D3 C1                  B  1034    				pop bc							0040D4 79                  B  1035    				ld a,c
0040D5 2A 2A 47 00         B  1036    				ld hl,(fs_file_working_cluster)
0040D9 CD E9 45 00         B  1037    				call cluster_and_offset_to_lba
0040DD CD 82 46 00         B  1038    				call fs_write_sector			0040E1 D8                  B  1039    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0040E2 0C                  B  1040    				inc c							0040E3 05                  B  1041    				dec b
0040E4 28 0B               B  1042    				jr z,fs_sfncl					0040E6 C5                  B  1043    fs_sfns			push bc				
0040E7 01000200            B  1044    				ld bc,512						0040EB 11 96 57 00         B  1045    				ld de,sector_buffer				0040EF 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
0040F1 CD C8 42 00         B  1048    fs_sfncl		call fs_find_free_cluster		0040F5 D8                  B  1049    				ret c							0040F6 C0                  B  1050    				ret nz							0040F7 2A 2A 47 00         B  1051    				ld hl,(fs_file_working_cluster)
0040FB ED5B 3A 47 00       B  1052    				ld de,(fs_free_cluster)
004100 CD 3E 45 00         B  1053    				call update_fat_entry_for_clust
004104 D8                  B  1054    				ret c
004105 2A 3A 47 00         B  1055    				ld hl,(fs_free_cluster)
004109 22 2A 47 00         B  1056    				ld (fs_file_working_cluster),hl
00410D 11FFFF00            B  1057    				ld de,0ffffh
004111 CD 3E 45 00         B  1058    				call update_fat_entry_for_clust
004115 D8                  B  1059    				ret c
004116 3A DD 46 00         B  1060    				ld a,(fs_cluster_size)
00411A 47                  B  1061    				ld b,a							00411B 0E00                B  1062    				ld c,0							00411D 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
00411F C1                  B  1065    fs_lbof			pop bc
004120 79                  B  1066    				ld a,c							004121 2A 2A 47 00         B  1067    				ld hl,(fs_file_working_cluster)
004125 CD E9 45 00         B  1068    				call cluster_and_offset_to_lba
004129 CD 82 46 00         B  1069    				call fs_write_sector	
00412D D8                  B  1070    				ret c
00412E AF                  B  1071    				xor a							00412F C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004130                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004130 CD 02 44 00         B  1079    				call fs_find_filename			004134 D8                  B  1080    				ret c
004135 C0                  B  1081    				ret nz
                           B  1082    				
004136 DDCB0B66            B  1083    				bit 4,(ix+0bh)					00413A 28 04               B  1084    				jr z,okdelf
00413C AF                  B  1085    				xor a
00413D 3EC6                B  1086    				ld a,0c6h						00413F C9                  B  1087    				ret
                           B  1088    				
004140 DDE5                B  1089    okdelf			push ix
004142 E1                  B  1090    				pop hl
004143 C3 34 3F 00         B  1091    				jp fs_delco						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
004147                     B  1097    fs_rename_command
                           B  1098    
004147 CD 02 44 00         B  1099    				call fs_find_filename			00414B D8                  B  1100    				ret c							00414C FEC2                B  1101    				cp 0c2h							00414E 28 04               B  1102    				jr z,fs_nfnok					004150 AF                  B  1103    				xor a							004151 3EC9                B  1104    				ld a,0c9h						004153 C9                  B  1105    				ret
                           B  1106    			
004154 21 F4 46 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		004158 11 0C 47 00         B  1108    				ld de,fs_filename_buffer
00415C 010B0000            B  1109    				ld bc,11
004160 EDB0                B  1110    				ldir
004162 21 00 47 00         B  1111    				ld hl,fs_alt_filename			004166 11 F4 46 00         B  1112    				ld de,fs_sought_filename
00416A 010B0000            B  1113    				ld bc,11
00416E EDB0                B  1114    				ldir
004170 CD 02 44 00         B  1115    				call fs_find_filename			004174 D8                  B  1116    				ret c
004175 FEC2                B  1117    				cp 0c2h
004177 C8                  B  1118    				ret z							                           B  1119    				
004178 DDE5                B  1120    				push ix
00417A D1                  B  1121    				pop de
00417B 21 0C 47 00         B  1122    				ld hl,fs_filename_buffer	 	00417F 010B0000            B  1123    				ld bc,11
004183 EDB0                B  1124    				ldir							004185 CD 82 46 00         B  1125    				call fs_write_sector			                           B  1126    				
004189 AF                  B  1127    fs_rndone		xor a
00418A C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
00418B                     B  1134    fs_goto_first_dir_entry
                           B  1135    
00418B CD 19 1A 00         B  1136    				call fs_get_dir_cluster
00418F ED53 43 47 00       B  1137    				ld (fs_dir_entry_cluster),de
004194 AF                  B  1138    				xor a
004195 32 49 47 00         B  1139    				ld (fs_dir_entry_sector),a		004199 11000000            B  1140    				ld de,0
00419D ED53 46 47 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1144    
0041A2                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
0041A2 3A 49 47 00         B  1156    				ld a,(fs_dir_entry_sector)		0041A6 4F                  B  1157    				ld c,a
0041A7 2A 43 47 00         B  1158    				ld hl,(fs_dir_entry_cluster)	0041AB CD E9 45 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
0041AF 7C                  B  1161    				ld a,h							0041B0 B5                  B  1162    				or l							0041B1 20 09               B  1163    				jr nz,nr_read					0041B3 2A E7 46 00         B  1164    				ld hl,(fs_root_dir_position)	0041B7 79                  B  1165    				ld a,c
0041B8 CD 2F 46 00         B  1166    				call set_absolute_lba
                           B  1167    				
0041BC CD 6A 46 00         B  1168    nr_read			call fs_read_sector				0041C0 D8                  B  1169    				ret c							                           B  1170    				
0041C1 ED5B 46 47 00       B  1171    				ld de,(fs_dir_entry_line_offset
0041C6 DD21 96 57 00       B  1172    dscan_int_loop	ld ix,sector_buffer
0041CB DD19                B  1173    				add ix,de
0041CD DD7E00              B  1174    ds_int_loop		ld a,(ix)
0041D0 B7                  B  1175    				or a							0041D1 28 0E               B  1176    				jr z,fs_dir_entry_free		
0041D3 FEE5                B  1177    				cp 0e5h							0041D5 28 0A               B  1178    				jr z,fs_dir_entry_free	
0041D7 FE05                B  1179    				cp 05h							0041D9 28 06               B  1180    				jr z,fs_dir_entry_free	
0041DB DDCB0B5E            B  1181    				bit 3,(ix+0bh)					0041DF 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
0041E1                     B  1184    fs_dir_entry_free
                           B  1185    
0041E1 EB                  B  1186    				ex de,hl
0041E2 11200000            B  1187    				ld de,32
0041E6 19                  B  1188    				add hl,de
0041E7 EB                  B  1189    				ex de,hl
0041E8 CB4A                B  1190    				bit 1,d
0041EA 28 DA               B  1191    				jr z,dscan_int_loop
0041EC 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
0041EE                     B  1194    fs_dir_entry_in_use
                           B  1195    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0041EE ED53 46 47 00       B  1196    				ld (fs_dir_entry_line_offset),d
0041F3 DDE5                B  1197    				push ix
0041F5 E1                  B  1198    				pop hl
0041F6 CD 19 10 00         B  1199    				call os_clear_output_line
0041FA 0608                B  1200    				ld b,8							0041FC 11 A6 53 00         B  1201    				ld de,output_line
004200 7E                  B  1202    dcopyn			ld a,(hl)
004201 FE20                B  1203    				cp ' '							004203 28 02               B  1204    				jr z,digchar
004205 12                  B  1205    				ld (de),a
004206 13                  B  1206    				inc de
004207 23                  B  1207    digchar			inc hl
004208 10 F6               B  1208    				djnz dcopyn
00420A 7E                  B  1209    				ld a,(hl)						00420B FE20                B  1210    				cp ' '							00420D 28 0A               B  1211    				jr z,dirnoex
00420F 3E2E                B  1212    				ld a,'.'						004211 12                  B  1213    				ld (de),a
004212 13                  B  1214    				inc de	
004213 01030000            B  1215    				ld bc,3							004217 EDB0                B  1216    				ldir
004219 AF                  B  1217    dirnoex			xor a 
00421A 12                  B  1218    				ld (de),a						                           B  1219    				
00421B 47                  B  1220    				ld b,a
00421C DDCB0B66            B  1221    				bit 4,(ix+0bh)					004220 28 01               B  1222    				jr z,fs_fniaf		
004222 04                  B  1223    				inc b							004223 DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					004226 DD4E1F              B  1225    				ld c,(ix+01fh)
004229 21 A6 53 00         B  1226    				ld hl,output_line				00422D AF                  B  1227    				xor a
00422E C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
00422F                     B  1233    fs_goto_next_dir_entry
                           B  1234    
00422F 11200000            B  1235    				ld de,32
004233 2A 46 47 00         B  1236    				ld hl,(fs_dir_entry_line_offset
004237 19                  B  1237    				add hl,de
004238 22 46 47 00         B  1238    				ld (fs_dir_entry_line_offset),h
00423C CB4C                B  1239    				bit 1,h
00423E CA A2 41 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
004242 21000000            B  1242    dscan_new_sect	ld hl,0				
004246 22 46 47 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
00424A 21 49 47 00         B  1245    				ld hl,fs_dir_entry_sector
00424E 34                  B  1246    				inc (hl)						                           B  1247    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00424F ED5B 43 47 00       B  1248    				ld de,(fs_dir_entry_cluster)
004254 7A                  B  1249    				ld a,d
004255 B3                  B  1250    				or e							004256 20 0B               B  1251    				jr nz,nonroot2
004258 3A ED 46 00         B  1252    				ld a,(fs_root_dir_sectors)
00425C BE                  B  1253    				cp (hl)
00425D 28 23               B  1254    				jr z,endofdir			
00425F C3 A2 41 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												004263 3A DD 46 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
004267 BE                  B  1258    				cp (hl)							004268 C2 A2 41 00         B  1259    				jp nz,fs_get_dir_entry
00426C 3600                B  1260    				ld (hl),0						00426E 2A 43 47 00         B  1261    				ld hl,(fs_dir_entry_cluster)
004272 CD 12 45 00         B  1262    				call get_fat_entry_for_cluster
004276 22 43 47 00         B  1263    				ld (fs_dir_entry_cluster),hl
00427A CD BB 42 00         B  1264    				call fs_compare_hl_fff8			00427E DA A2 41 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
004282 3ED2                B  1267    endofdir		ld a,0d2h
004284 B7                  B  1268    				or a							004285 C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
004286                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
004286 2A E7 46 00         B  1279    				ld hl,(fs_root_dir_position)
00428A AF                  B  1280    				xor a
00428B CD 40 46 00         B  1281    				call set_abs_lba_and_read_secto
00428F D8                  B  1282    				ret c
004290 0E10                B  1283    				ld c,16							004292 DD21 96 57 00       B  1284    				ld ix,sector_buffer
004297 DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
00429A FE08                B  1286    				cp 08h
00429C 20 11               B  1287    				jr nz,not_label
00429E DD360B00            B  1288    				ld (ix+0bh),0					0042A2 DDE5                B  1289    				push ix
0042A4 E1                  B  1290    				pop hl
0042A5 E5                  B  1291    				push hl
0042A6 060B                B  1292    				ld b,11
0042A8 CD F4 11 00         B  1293    				call uppercasify_string
0042AC E1                  B  1294    				pop hl
0042AD AF                  B  1295    				xor a
0042AE C9                  B  1296    				ret
                           B  1297    				
0042AF 11200000            B  1298    not_label		ld de,32						0042B3 DD19                B  1299    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0042B5 10 E0               B  1300    				djnz find_vl
0042B7 AF                  B  1301    				xor a
0042B8 3ED4                B  1302    				ld a,0d4h						0042BA C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
0042BB                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
0042BB E5                  B  1315    				push hl
0042BC D5                  B  1316    				push de
0042BD 11F8FF00            B  1317    				ld de,0fff8h			
0042C1 B7                  B  1318    				or a							0042C2 52ED52              B  1319    				sbc.s hl,de						0042C5 D1                  B  1320    				pop de
0042C6 E1                  B  1321    				pop hl
0042C7 C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
0042C8                     B  1327    fs_find_free_cluster
                           B  1328    	
0042C8 DD210000 00         B  1329    				ld ix,0							0042CD ED5B E1 46 00       B  1330    				ld de,(fs_fat1_position)		0042D2 AF                  B  1331    				xor a				
0042D3 32 36 47 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
0042D7 D5                  B  1333    				push de
0042D8 E1                  B  1334    				pop hl
0042D9 3A 36 47 00         B  1335    				ld a,(fs_working_sector)
0042DD CD 40 46 00         B  1336    				call set_abs_lba_and_read_secto
0042E1 D8                  B  1337    				ret c
0042E2 21 96 57 00         B  1338    				ld hl,sector_buffer
0042E6 0600                B  1339    				ld b,0
0042E8 7E                  B  1340    fs_ffcl1		ld a,(hl)						0042E9 23                  B  1341    				inc hl
0042EA B6                  B  1342    				or (hl)
0042EB 23                  B  1343    				inc hl
0042EC 28 14               B  1344    				jr z,fs_gotfc
0042EE DD23                B  1345    				inc ix
0042F0 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
0042F2 2A EE 46 00         B  1348    				ld hl,(fs_sectors_per_fat)
0042F6 3A 36 47 00         B  1349    				ld a,(fs_working_sector)		0042FA 3C                  B  1350    				inc a				
0042FB BD                  B  1351    				cp l		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0042FC 20 D5               B  1352    				jr nz,fs_ffcl2					0042FE 3EC1                B  1353    fs_dfull		ld a,c1h						004300 B7                  B  1354    				or a							004301 C9                  B  1355    				ret
                           B  1356    			
004302 DDE5                B  1357    fs_gotfc		push ix							004304 E1                  B  1358    				pop hl							004305 2B                  B  1359    				dec hl							004306 2B                  B  1360    				dec hl							004307 ED5B F1 46 00       B  1361    				ld de,(fs_max_data_clusters)
00430C AF                  B  1362    				xor a
00430D 52ED52              B  1363    				sbc.s hl,de						004310 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
004312 DD22 3A 47 00       B  1366    				ld (fs_free_cluster),ix
004317 AF                  B  1367    				xor a
004318 C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
004319                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
004319 CD 19 1A 00         B  1380    				call fs_get_dir_cluster			00431D EB                  B  1381    				ex de,hl
00431E 22 2A 47 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
004322 AF                  B  1383    				xor a
004323 32 36 47 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
004327 2A E7 46 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	00432B 3A 36 47 00         B  1387    				ld a,(fs_working_sector)
00432F CD 2F 46 00         B  1388    				call set_absolute_lba
                           B  1389    				
004333 CD 19 1A 00         B  1390    				call fs_get_dir_cluster			004337 7A                  B  1391    				ld a,d
004338 B3                  B  1392    				or e
004339 28 0C               B  1393    				jr z,at_rootd
00433B 2A 2A 47 00         B  1394    				ld hl,(fs_file_working_cluster)
00433F 3A 36 47 00         B  1395    				ld a,(fs_working_sector)
004343 CD E9 45 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
004347 CD 6A 46 00         B  1398    at_rootd		call fs_read_sector
00434B D8                  B  1399    				ret c
00434C 0610                B  1400    				ld b,16							00434E 11200000            B  1401    				ld de,32
004352 DD21 96 57 00       B  1402    				ld ix,sector_buffer
004357 DD7E00              B  1403    scdirfe			ld a,(ix)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00435A B7                  B  1404    				or a
00435B 28 65               B  1405    				jr z,got_fde
00435D FEE5                B  1406    				cp 0e5h
00435F 28 61               B  1407    				jr z,got_fde
004361 DD19                B  1408    				add ix,de						004363 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
004365 21 36 47 00         B  1411    				ld hl,fs_working_sector			004369 34                  B  1412    				inc (hl)
                           B  1413    				
00436A CD 19 1A 00         B  1414    				call fs_get_dir_cluster			00436E 7A                  B  1415    				ld a,d
00436F B3                  B  1416    				or e
004370 20 0B               B  1417    				jr nz,ffenotroo
004372 3A ED 46 00         B  1418    				ld a,(fs_root_dir_sectors)		004376 BE                  B  1419    				cp (hl)							004377 20 AE               B  1420    				jr nz,ffenxtsec
004379 AF                  B  1421    fenotfnd		xor a							00437A 3EC3                B  1422    				ld a,0c3h						00437C C9                  B  1423    				ret
                           B  1424    			
00437D 3A DD 46 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			004381 BE                  B  1426    				cp (hl)
004382 20 A3               B  1427    				jr nz,ffenxtsec
004384 2A 2A 47 00         B  1428    				ld hl,(fs_file_working_cluster)
004388 CD 12 45 00         B  1429    				call get_fat_entry_for_cluster	00438C D8                  B  1430    				ret c
00438D CD BB 42 00         B  1431    				call fs_compare_hl_fff8			004391 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
004393 CD C8 42 00         B  1434    				call fs_find_free_cluster		004397 D8                  B  1435    				ret c							004398 C0                  B  1436    				ret nz							004399 ED5B 3A 47 00       B  1437    				ld de,(fs_free_cluster)
00439E 2A 2A 47 00         B  1438    				ld hl,(fs_file_working_cluster)
0043A2 CD 3E 45 00         B  1439    				call update_fat_entry_for_clust
0043A6 D8                  B  1440    				ret c
0043A7 EB                  B  1441    				ex de,hl						0043A8 11FFFF00            B  1442    				ld de,0ffffh
0043AC CD 3E 45 00         B  1443    				call update_fat_entry_for_clust
0043B0 D8                  B  1444    				ret c
                           B  1445    			
0043B1 2A 3A 47 00         B  1446    				ld hl,(fs_free_cluster)			0043B5 CD C4 43 00         B  1447    				call fs_clear_cluster			0043B9 D8                  B  1448    				ret c
0043BA 2A 3A 47 00         B  1449    				ld hl,(fs_free_cluster)			0043BE C3 1E 43 00         B  1450    				jp ffenxtclu					                           B  1451    			
0043C2 AF                  B  1452    got_fde			xor a
0043C3 C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1456    ;----------------------------------------------
                           B  1457    
0043C4                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
0043C4 22 37 47 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
0043C8 CD F0 43 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
0043CC AF                  B  1466    				xor a				
0043CD 32 36 47 00         B  1467    				ld (fs_working_sector),a		0043D1 3A 36 47 00         B  1468    wipeclulp		ld a,(fs_working_sector)		0043D5 2A 37 47 00         B  1469    				ld hl,(fs_working_cluster)		0043D9 CD E9 45 00         B  1470    				call cluster_and_offset_to_lba	0043DD CD 82 46 00         B  1471    				call fs_write_sector
0043E1 D8                  B  1472    				ret c
0043E2 21 36 47 00         B  1473    				ld hl,fs_working_sector
0043E6 34                  B  1474    				inc (hl)
0043E7 3A DD 46 00         B  1475    				ld a,(fs_cluster_size)
0043EB BE                  B  1476    				cp (hl)
0043EC 20 E3               B  1477    				jr nz,wipeclulp
0043EE AF                  B  1478    				xor a
0043EF C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
0043F0                     B  1482    fs_clear_sector_buffer
                           B  1483    			
0043F0 E5                  B  1484    				push hl
0043F1 C5                  B  1485    				push bc
0043F2 21 96 57 00         B  1486    				ld hl,sector_buffer			
0043F6 01000200            B  1487    				ld bc,512				
0043FA AF                  B  1488    				xor a				
0043FB CD 2A 15 00         B  1489    				call os_bchl_memfill	
0043FF C1                  B  1490    				pop bc
004400 E1                  B  1491    				pop hl
004401 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
004402                     B  1498    fs_find_filename
                           B  1499    
004402 AF                  B  1500    				xor a
                           B  1501    
004403                     B  1502    fs_search	
                           B  1503    				
004403 32 51 47 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004407 CD 19 1A 00         B  1508    				call fs_get_dir_cluster
00440B ED53 2A 47 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
004410 AF                  B  1510    				xor a
004411 32 36 47 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
004415 2A E7 46 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	004419 3A 36 47 00         B  1514    				ld a,(fs_working_sector)
00441D CD 2F 46 00         B  1515    				call set_absolute_lba
                           B  1516    				
004421 CD 19 1A 00         B  1517    				call fs_get_dir_cluster			004425 7A                  B  1518    				ld a,d
004426 B3                  B  1519    				or e
004427 28 0C               B  1520    				jr z,at_rootd2
004429 2A 2A 47 00         B  1521    				ld hl,(fs_file_working_cluster)
00442D 3A 36 47 00         B  1522    				ld a,(fs_working_sector)
004431 CD E9 45 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
004435 CD 6A 46 00         B  1525    at_rootd2		call fs_read_sector
004439 D8                  B  1526    				ret c
00443A 0E10                B  1527    				ld c,16							00443C DD21 96 57 00       B  1528    				ld ix,sector_buffer
004441 DDE5                B  1529    ndirentr		push ix
004443 D1                  B  1530    				pop de
004444 3A 51 47 00         B  1531    				ld a,(fs_search_type)
004448 B7                  B  1532    				or a
004449 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
00444B DD7E00              B  1535    				ld a,(ix)						00444E FE80                B  1536    				cp 080h							004450 30 35               B  1537    				jr nc,fnnotsame
004452 FE20                B  1538    				cp 020h
004454 38 31               B  1539    				jr c,fnnotsame
004456 ED5B 4E 47 00       B  1540    				ld de,(fs_stash_dir_block)		00445B DD7E1A              B  1541    				ld a,(ix+01ah)
00445E BB                  B  1542    				cp e
00445F 20 26               B  1543    				jr nz,fnnotsame
004461 DD7E1B              B  1544    				ld a,(ix+01bh)
004464 BA                  B  1545    				cp d
004465 28 1E               B  1546    				jr z,fs_found
004467 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
004469 FD21 F4 46 00       B  1549    fs_ststr		ld iy,fs_sought_filename		00446E 060B                B  1550    				ld b,11							004470 1A                  B  1551    cmpfnlp			ld a,(de)						004471 CD 00 12 00         B  1552    				call os_uppercasify				004475 6F                  B  1553    				ld l,a
004476 FD7E00              B  1554    				ld a,(iy)
004479 CD 00 12 00         B  1555    				call os_uppercasify
00447D BD                  B  1556    				cp l				
00447E 20 07               B  1557    				jr nz,fnnotsame
004480 FD23                B  1558    				inc iy
004482 13                  B  1559    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004483 10 EB               B  1560    				djnz cmpfnlp
004485 AF                  B  1561    fs_found		xor a							004486 C9                  B  1562    				ret
                           B  1563    			
004487 11200000            B  1564    fnnotsame		ld de,32						00448B DD19                B  1565    				add ix,de
00448D 0D                  B  1566    				dec c
00448E 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
004490 21 36 47 00         B  1569    				ld hl,fs_working_sector			004494 34                  B  1570    				inc (hl)
                           B  1571    				
004495 CD 19 1A 00         B  1572    				call fs_get_dir_cluster			004499 7A                  B  1573    				ld a,d
00449A B3                  B  1574    				or e
00449B 20 0D               B  1575    				jr nz,notrootdir
00449D 3A ED 46 00         B  1576    				ld a,(fs_root_dir_sectors)		0044A1 BE                  B  1577    				cp (hl)							0044A2 C2 15 44 00         B  1578    				jp nz,ffnnxtsec
0044A6 3EC2                B  1579    fnnotfnd		ld a,0c2h						0044A8 B7                  B  1580    				or a
0044A9 C9                  B  1581    				ret
                           B  1582    			
0044AA                     B  1583    notrootdir
                           B  1584    				
0044AA 3A DD 46 00         B  1585    				ld a,(fs_cluster_size)			0044AE BE                  B  1586    				cp (hl)
0044AF C2 15 44 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
0044B3 2A 2A 47 00         B  1589    				ld hl,(fs_file_working_cluster)
0044B7 CD 12 45 00         B  1590    				call get_fat_entry_for_cluster
0044BB D8                  B  1591    				ret c
0044BC CD BB 42 00         B  1592    				call fs_compare_hl_fff8			0044C0 30 E4               B  1593    				jr nc,fnnotfnd					0044C2 EB                  B  1594    				ex de,hl						0044C3 C3 0B 44 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
0044C7                     B  1600    fs_hl_to_alt_filename
                           B  1601    
0044C7 11 00 47 00         B  1602    				ld de,fs_alt_filename
0044CB 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
0044CD                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0044CD 11 F4 46 00         B  1612    				ld de,fs_sought_filename
0044D1 CD DC 45 00         B  1613    hltofngo		call fs_clear_filename			0044D5 D5                  B  1614    				push de			
0044D6 DDE1                B  1615    				pop ix							                           B  1616    				
0044D8 0E00                B  1617    				ld c,0
0044DA 0608                B  1618    				ld b,8
0044DC 7E                  B  1619    csfnlp2			ld a,(hl)						0044DD B7                  B  1620    				or a
0044DE C8                  B  1621    				ret z							0044DF FE20                B  1622    				cp 32
0044E1 C8                  B  1623    				ret z							0044E2 FE2F                B  1624    				cp 02fh
0044E4 C8                  B  1625    				ret z							0044E5 FE2E                B  1626    				cp '.'
0044E7 28 16               B  1627    				jr z,dofn_ext					0044E9 12                  B  1628    				ld (de),a
0044EA 13                  B  1629    				inc de
0044EB 23                  B  1630    				inc hl
0044EC 0C                  B  1631    				inc c							0044ED 10 ED               B  1632    				djnz csfnlp2					0044EF 7E                  B  1633    find_ext		ld a,(hl)
0044F0 FE2E                B  1634    				cp '.'							0044F2 28 0B               B  1635    				jr z,dofn_ext	
0044F4 FE20                B  1636    				cp ' '							0044F6 C8                  B  1637    				ret z
0044F7 FE2F                B  1638    				cp 02fh
0044F9 C8                  B  1639    				ret z
0044FA B7                  B  1640    				or a
0044FB C8                  B  1641    				ret z
0044FC 23                  B  1642    				inc hl
0044FD 18 F0               B  1643    				jr find_ext
                           B  1644    				
0044FF 23                  B  1645    dofn_ext		inc hl							004500 0603                B  1646    				ld b,3				
004502 7E                  B  1647    fnextlp			ld a,(hl)						004503 B7                  B  1648    				or a
004504 C8                  B  1649    				ret z							004505 FE20                B  1650    				cp 32
004507 C8                  B  1651    				ret z
004508 DD7708              B  1652    				ld (ix+8),a
00450B DD23                B  1653    				inc ix
00450D 23                  B  1654    				inc hl
00450E 0C                  B  1655    				inc c
00450F 10 F1               B  1656    				djnz fnextlp
004511 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
004512                     B  1662    get_fat_entry_for_cluster
                           B  1663    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
004512 C5                  B  1666    				push bc
004513 D5                  B  1667    				push de
004514 01000000            B  1668    				ld bc,0
004518 4D                  B  1669    				ld c,l
004519 7C                  B  1670    				ld a,h
00451A 2A E1 46 00         B  1671    				ld hl,(fs_fat1_position)
00451E CD 40 46 00         B  1672    				call set_abs_lba_and_read_secto
004522 38 17               B  1673    				jr c,hwerr
004524 DDE5                B  1674    				push ix
004526 DD21 96 57 00       B  1675    				ld ix,sector_buffer
00452B DD09                B  1676    				add ix,bc
00452D DD09                B  1677    				add ix,bc
00452F 21000000            B  1678    				ld hl,0
004533 DD6E00              B  1679    				ld l,(ix)
004536 DD6601              B  1680    				ld h,(ix+1)
004539 DDE1                B  1681    				pop ix
00453B D1                  B  1682    hwerr			pop de
00453C C1                  B  1683    				pop bc
00453D C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
00453E                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
00453E C5                  B  1695    				push bc
00453F E5                  B  1696    				push hl
004540 01000000            B  1697    				ld bc,0
004544 4D                  B  1698    				ld c,l
004545 7C                  B  1699    				ld a,h
004546 2A E1 46 00         B  1700    				ld hl,(fs_fat1_position)		00454A CD 5E 45 00         B  1701    				call fat_upd
00454E 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
004550 E1                  B  1704    				pop hl
004551 E5                  B  1705    				push hl
004552 7C                  B  1706    				ld a,h
004553 2A E4 46 00         B  1707    				ld hl,(fs_fat2_position)		004557 CD 5E 45 00         B  1708    				call fat_upd
00455B E1                  B  1709    fup_end			pop hl
00455C C1                  B  1710    				pop bc
00455D C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
00455E CD 40 46 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
004562 38 0D               B  1715    				jr c,ufehwerr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004564 21 96 57 00         B  1716    				ld hl,sector_buffer
004568 09                  B  1717    				add hl,bc
004569 09                  B  1718    				add hl,bc
00456A 73                  B  1719    				ld (hl),e
00456B 23                  B  1720    				inc hl
00456C 72                  B  1721    				ld (hl),d
00456D CD 82 46 00         B  1722    				call fs_write_sector
004571 C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
004572                     B  1728    transfer_length_countdown
                           B  1729    
004572 E5                  B  1730    				push hl							004573 C5                  B  1731    				push bc
                           B  1732    			
004574 0604                B  1733    				ld b,4
004576 21 18 47 00         B  1734    				ld hl,fs_file_pointer			00457A 34                  B  1735    fpinclp			inc (hl)
00457B 20 03               B  1736    				jr nz,fs_fpino
00457D 23                  B  1737    				inc hl
00457E 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
004580 2A 24 47 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
004584 2B                  B  1741    				dec hl
004585 22 24 47 00         B  1742    				ld (fs_file_transfer_length),hl
004589 01000000            B  1743    				ld bc,0
00458D B7                  B  1744    				or a
00458E ED4A                B  1745    				adc hl,bc						                           B  1746    				
004590 C1                  B  1747    				pop bc
004591 E1                  B  1748    				pop hl
004592 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
004593                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
004593 CD 19 1A 00         B  1757    				call fs_get_dir_cluster			004597 7A                  B  1758    				ld a,d
004598 B3                  B  1759    				or e
004599 20 10               B  1760    				jr nz,fs_dnnr
00459B 21 60 51 00         B  1761    				ld hl,vol_txt+1					00459F 3A 5B 51 00         B  1762    				ld a,(current_volume)
0045A3 C630                B  1763    				add a,030h
0045A5 32 63 51 00         B  1764    				ld (vol_txt+4),a
0045A9 AF                  B  1765    				xor a
0045AA C9                  B  1766    				ret
                           B  1767    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0045AB ED53 4E 47 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
0045B0 CD 4B 3C 00         B  1769    				call fs_parent_dir_command		0045B4 D8                  B  1770    				ret c
0045B5 B7                  B  1771    				or a
0045B6 C0                  B  1772    				ret nz
0045B7 3E01                B  1773    				ld a,1
0045B9 CD 03 44 00         B  1774    				call fs_search					0045BD D8                  B  1775    				ret c
0045BE C0                  B  1776    				ret nz
                           B  1777    					
0045BF DDE5                B  1778    fs_gdbn			push ix
0045C1 E1                  B  1779    				pop hl
0045C2 060B                B  1780    				ld b,11							0045C4 7E                  B  1781    ntdirn			ld a,(hl)
0045C5 FE20                B  1782    				cp ' '
0045C7 28 03               B  1783    				jr z,rdirfsp
0045C9 23                  B  1784    				inc hl
0045CA 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
0045CC 3600                B  1787    rdirfsp			ld (hl),0
0045CE DDE5                B  1788    				push ix
0045D0 ED5B 4E 47 00       B  1789    				ld de,(fs_stash_dir_block)
0045D5 CD 25 1A 00         B  1790    				call fs_update_dir_cluster		0045D9 E1                  B  1791    				pop hl	
0045DA AF                  B  1792    				xor a							0045DB C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
0045DC                     B  1797    fs_clear_filename
                           B  1798    
0045DC D5                  B  1799    				push de							0045DD C5                  B  1800    				push bc
0045DE 060C                B  1801    				ld b,12
0045E0 3E20                B  1802    				ld a,' '
0045E2 12                  B  1803    clrfnlp			ld (de),a
0045E3 13                  B  1804    				inc de
0045E4 10 FC               B  1805    				djnz clrfnlp
0045E6 C1                  B  1806    				pop bc
0045E7 D1                  B  1807    				pop de
0045E8 C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
0045E9                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
0045E9 C5                  B  1817    				push bc
0045EA D5                  B  1818    				push de
0045EB E5                  B  1819    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0045EC DDE5                B  1820    				push ix
                           B  1821    
0045EE 2B                  B  1822    				dec hl							0045EF 2B                  B  1823    				dec hl							0045F0 11000000            B  1824    				ld de,0							0045F4 01000000            B  1825    				ld bc,0
0045F8 5F                  B  1826    				ld e,a
0045F9 3A DD 46 00         B  1827    				ld a,(fs_cluster_size)			0045FD CB3F                B  1828    caotllp			srl a
0045FF 28 03               B  1829    				jr z,clusdone
004601 29                  B  1830    				add hl,hl						004602 18 F9               B  1831    				jr caotllp
                           B  1832    			
004604 ED4B EA 46 00       B  1833    clusdone		ld bc,(fs_data_area)			004609 09                  B  1834    				add hl,bc						00460A 19                  B  1835    				add hl,de						                           B  1836    				
00460B E5                  B  1837    add_ptn_offset	push hl							00460C CD 53 1A 00         B  1838    				call fs_calc_volume_offset
004610 DD21 8D 51 00       B  1839    				ld ix,volume_mount_list
004615 DD19                B  1840    				add ix,de
004617 E1                  B  1841    				pop hl
004618 DD0708              B  1842    				ld bc,(ix+08h)					00461B DD7E0B              B  1843    				ld a,(ix+0bh)
00461E 09                  B  1844    				add hl,bc
00461F CE00                B  1845    				adc a,0
004621 22 32 53 00         B  1846    				ld (sector_lba0),hl				004625 32 35 53 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
004629 DDE1                B  1849    				pop ix
00462B E1                  B  1850    				pop hl
00462C D1                  B  1851    				pop de
00462D C1                  B  1852    				pop bc
00462E C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
00462F                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
00462F C5                  B  1862    				push bc							004630 D5                  B  1863    				push de							004631 E5                  B  1864    				push hl							004632 DDE5                B  1865    				push ix							004634 01000000            B  1866    				ld bc,0
004638 11000000            B  1867    				ld de,0
00463C 5F                  B  1868    				ld e,a
00463D 19                  B  1869    				add hl,de
00463E 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1872    
004640                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
004640 CD 2F 46 00         B  1875    				call set_absolute_lba
004644 C3 6A 46 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
004648                     B  1881    backup_sector_lba
                           B  1882    
004648 C5                  B  1883    				push bc
004649 D5                  B  1884    				push de
00464A E5                  B  1885    				push hl
00464B 21 32 53 00         B  1886    				ld hl,sector_lba0
00464F 11 52 47 00         B  1887    				ld de,fs_backed_up_sector_lba0
004653 01040000            B  1888    lbabur			ld bc,4
004657 EDB0                B  1889    				ldir
004659 E1                  B  1890    				pop hl
00465A D1                  B  1891    				pop de
00465B C1                  B  1892    				pop bc
00465C C9                  B  1893    				ret
                           B  1894    
                           B  1895    
00465D                     B  1896    restore_sector_lba
                           B  1897    
00465D C5                  B  1898    				push bc
00465E D5                  B  1899    				push de
00465F E5                  B  1900    				push hl
004660 21 52 47 00         B  1901    				ld hl,fs_backed_up_sector_lba0
004664 11 32 53 00         B  1902    				ld de,sector_lba0
004668 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
00466A                     B  1907    fs_read_sector
                           B  1908    			
00466A C5                  B  1909    				push bc
00466B D5                  B  1910    				push de
00466C E5                  B  1911    				push hl
00466D DDE5                B  1912    				push ix
00466F FDE5                B  1913    				push iy
004671 01040000            B  1914    				ld bc,04h						004675 CD 93 46 00         B  1915    				call sector_access_redirect
004679 FDE1                B  1916    secaccend		pop iy
00467B DDE1                B  1917    				pop ix
00467D E1                  B  1918    				pop hl
00467E D1                  B  1919    				pop de
00467F C1                  B  1920    				pop bc
004680 3F                  B  1921    				ccf								004681 C9                  B  1922    				ret								                           B  1923    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1924    
004682                     B  1925    fs_write_sector	
                           B  1926    				
004682 C5                  B  1927    				push bc
004683 D5                  B  1928    				push de
004684 E5                  B  1929    				push hl
004685 DDE5                B  1930    				push ix
004687 FDE5                B  1931    				push iy
004689 01080000            B  1932    				ld bc,08h						00468D CD 93 46 00         B  1933    				call sector_access_redirect
004691 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
004693                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
004693 3A 5C 51 00         B  1941    				ld a,(current_driver)			004697 CD EB 19 00         B  1942    				call locate_driver_base			00469B EB                  B  1943    				ex de,hl
00469C 09                  B  1944    				add hl,bc						00469D E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
00469E                     B  1949    bootsector_stub
                           B  1950    
00469E EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
0046A6 352E3000 02004000 
0046AE 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
0046B6 3F00FF00 00000000 
0046BE 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
0046C6 E636984E 4F204E41 
0046CE 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
0046D6 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
0046DD 00                  B  1958    fs_cluster_size				db 0
0046DE 000000              B  1959    fs_bytes_per_cluster		dw24 0
0046E1 000000              B  1960    fs_fat1_position			dw24 0		; offse
0046E4 000000              B  1961    fs_fat2_position			dw24 0		; offse
0046E7 000000              B  1962    fs_root_dir_position		dw24 0		; offse
0046EA 000000              B  1963    fs_data_area				dw24 0		; offse
0046ED 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
0046EE 000000              B  1966    fs_sectors_per_fat			dw24 0
0046F1 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
0046F4 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
0046FA 00 00 00 00 00 00 
004700 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004706 00 00 00 00 00 00 
00470C 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
004712 00 00 00 00 00 00 
                           B  1972    
004718 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
00471C 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
004720 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
004724 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
004727 000000              B  1979    fs_file_start_cluster		dw24 0
00472A 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
00472D 000000              B  1982    fs_ez80_address				dw24 0
004730 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
004733 000000              B  1985    fs_in_sector_offset			dw24 0
004736 00                  B  1986    fs_working_sector			db 0
                           B  1987    
004737 000000              B  1988    fs_working_cluster			dw24 0
00473A 000000              B  1989    fs_free_cluster				dw24 0
00473D 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
004740 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
004743 000000              B  1994    fs_dir_entry_cluster		dw24 0
004746 000000              B  1995    fs_dir_entry_line_offset	dw24 0
004749 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
00474A 00                  B  1998    fs_filepointer_valid		db 0
00474B 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
00474E 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
004751 00                  B  2003    fs_search_type				db 0
                           B  2004    
004752 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  2932    
                           A  2933    ;----------------------------------------------
                           A  2934    ; OS Data 
                           A  2935    ;----------------------------------------------
                           A  2936    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B     7    ;----------------------------------------------
                           B     8    
004756                     B     9    kernal_table
                           B    10    
004756 E51700              B    11    	dw24 ext_mount_volumes			;00		
004759 931700              B    12    	dw24 os_get_device_info			;01		
00475C 491600              B    13    	dw24 os_check_volume_format		;02		
00475F 741A00              B    14    	dw24 ext_change_volume			;03		
004762 A61700              B    15    	dw24 os_get_volume_info			;04		
004765 531600              B    16    	dw24 ext_format					;05		
004768 851600              B    17    	dw24 ext_make_dir				;06		
00476B 931600              B    18    	dw24 ext_change_dir				;07		
00476E A11600              B    19    	dw24 os_parent_dir				;08		
004771 A71600              B    20    	dw24 os_root_dir				;09		
004774 EF1600              B    21    	dw24 ext_delete_dir				;0a		
004777 D81500              B    22    	dw24 ext_find_file				;0b		
00477A F41500              B    23    	dw24 ext_set_file_pointer		;0c		
00477D ED1500              B    24    	dw24 os_set_load_length			;0d		
004780 071600              B    25    	dw24 ext_read_bytes_from_file	;0e		
004783 AD1600              B    26    	dw24 ext_erase_file				;0f		
004786 D51600              B    27    	dw24 ext_rename_file			;10		
004789 171600              B    28    	dw24 ext_create_file			;11		
00478C 291600              B    29    	dw24 ext_write_bytes_to_file	;12		
00478F 421A00              B    30    	dw24 fs_get_total_sectors		;13		
004792 BB1600              B    31    	dw24 os_goto_first_dir_entry	;14		 
004795 C11600              B    32    	dw24 os_get_dir_entry			;15		
004798 C71600              B    33    	dw24 os_goto_next_dir_entry		;16		
00479B FF1600              B    34    	dw24 ext_read_sector			;17		
00479E 2D1700              B    35    	dw24 ext_write_sector			;18		
0047A1 B01A00              B    36    	dw24 ext_file_sector_list		;19		
0047A4 191A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0047A7 251A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0047AA CD1600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0047AD 723600              B    41    	dw24 os_wait_key_press			;1d		
0047B0 B93600              B    42    	dw24 os_get_key_press			;1e		
0047B3 1D1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0047B6 B41700              B    45    	dw24 ext_serial_get_header		;20		
0047B9 BE1700              B    46    	dw24 ext_serial_receive_file	;21		 
0047BC C71700              B    47    	dw24 ext_serial_send_file		;22		 
0047BF D41700              B    48    	dw24 ext_serial_tx				;23		
0047C2 DB1700              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
0047C5 010F00              B    51    	dw24 ext_print_string			;25		
0047C8 8A2F00              B    52    	dw24 hwsc_clear_screen			;26		
0047CB 5C3300              B    53    	dw24 hwsc_wait_vrt				;27		
0047CE A21300              B    54    	dw24 os_set_cursor_position		;28		
0047D1 141A00              B    55    	dw24 ext_plot_char				;29		
0047D4 321500              B    56    	dw24 ext_set_pen				;2a		
0047D7 3F1500              B    57    	dw24 ext_background_colours		;2b		
0047DA B73100              B    58    	dw24 hwsc_draw_cursor			;2c		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0047DD 391500              B    59    	dw24 os_get_pen					;2d		
0047E0 D32F00              B    60    	dw24 hwsc_scroll_up				;2e		
0047E3 2A2F00              B    61    	dw24 os_set_video_hw_regs		;2f		
0047E6 231500              B    62    	dw24 os_get_display_size		;30		
0047E9 4C3200              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0047EC C21300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0047EF D31A00              B    66    	dw24 ext_set_envar				;33		
0047F2 CD1A00              B    67    	dw24 ext_get_envar				;34		
0047F5 DD1A00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
0047F8 181400              B    70    	dw24 os_set_mouse_window		;36		
0047FB 5E1400              B    71    	dw24 os_get_mouse_position		;37		
0047FE 351400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
004801 CA3300              B    74    	dw24 hwsc_time_delay			;39		
004804 BE1100              B    75    	dw24 ext_compare_strings		;3a		
004807 4A1000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
00480A 7F1000              B    77    	dw24 ext_ascii_to_hexword		;3c		
00480D D41000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
004810 AF3300              B    80    	dw24 hwsc_get_version			;3e		
004813 8C1300              B    81    	dw24 os_dont_store_registers	;3f		
004816 E91A00              B    82    	dw24 os_get_font_info			;40 	
004819 ED3300              B    83    	dw24 hwsc_read_rtc				;41     
00481C 153400              B    84    	dw24 hwsc_write_rtc				;42		 
00481F E31A00              B    85    	dw24 os_get_keymap_location		;43		 
004822 6D2800              B    86    	dw24 os_get_mem_high			;44
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    ; Non-packed Text Strings
                           B    90    ;----------------------------------------------
                           B    91    
004825 50524F53 4520666F   B    92    welcome_message			db "PROSE for EZ80P by 
00482D 7220455A 38305020 
004835 62792050 68696C20 
00483D 52757374 6F6E2032 
004845 3031310B 0B 
00484A 53595354 454D2052   B    93    						db "SYSTEM RAM free abo
004852 414D2066 72656520 
00485A 61626F76 653A2024 
004862 00 
004863 44726976 65733A0B   B    94    storage_txt				db "Drives:",11,0
00486B 00 
00486C 434F4D4D 414E4453   B    95    os_dos_cmds_txt			db "COMMANDS",0
004874 00 
004875 53544152 5455502E   B    96    startup_script_fn		db "STARTUP.SCR",0
00487D 53435200 
004881 2400                B    97    os_hex_prefix_txt		db "$",0
004883 4F532056 65727369   B    98    os_version_txt			db "OS Version: $",0	00488B 6F6E3A20 2400 
004891 414D4F45 42412048   B    99    hw_version_txt			db "AMOEBA HW Version: 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004899 57205665 7273696F 
0048A1 6E3A2024 00 
0048A6 202F2000            B   100    fwd_slash_txt			db " / ",0
0048AA 4C6F6164 696E672E   B   101    loading_txt				db "Loading..",11,0
0048B2 2E0B00 
0048B5 53617669 6E672E2E   B   102    saving_txt				db "Saving..",11,0
0048BD 0B00 
0048BF 2E657A70 20         B   103    ezp_extension_txt		db ".ezp",32
0048C4 0B4D6F72 653F0B0B   B   104    os_more_txt				db 11,"More?",11,11,0
0048CC 00 
0048CD 52656769 73746572   B   105    nmi_freeze_txt			db "Register Dump:"
0048D5 2044756D 703A 
0048DB 0B0B00              B   106    crlfx2_txt				db 11,11,0
0048DE 7800                B   107    rep_char_txt			db "x",0
0048E0 20746F20 00         B   108    to_txt					db " to ",0
                           B   109    
                           B   110    ;----------------------------------------------
                           B   111    ; Packed text section
                           B   112    ;----------------------------------------------
                           B   113    
0048E5 00444542 5547       B   114    dictionary				db 0,"DEBUG"			0048EB 002D2D2D 2D2D       B   115    						db 0,"-----"			0048F1 00494F              B   116    						db 0,"IO"				0048F4 002D2D              B   117    						db 0,"--"				0048F7 004D4953 43         B   118    						db 0,"MISC"				0048FC 002D2D2D 2D         B   119    						db 0,"----"				004901 00616464 72         B   120    						db 0,"addr"				004906 0050524F 5345       B   121    						db 0,"PROSE"			00490C 00612062 2063       B   122    						db 0,"a b c"			004912 00416464 72657373   B   123    						db 0,"Address"			00491A 00427974 6573       B   124    						db 0,"Bytes"			004920 00457865 63757461   B   125    						db 0,"Executable"		004928 626C65 
00492B 0048756E 74         B   126    						db 0,"Hunt"				004930 0046696C 6C         B   127    						db 0,"Fill"				004935 00476F74 6F         B   128    						db 0,"Goto"				                           B   129    						
00493A 0053686F 77         B   130    						db 0,"Show"				00493F 00435055            B   131    						db 0,"CPU"				004943 00526567 69737465   B   132    						db 0,"Registers"		00494B 7273 
00494D 004173              B   133    						db 0,"As"				004950 00415343 4949       B   134    						db 0,"ASCII"			004956 00436C65 6172       B   135    						db 0,"Clear"			00495C 00536372 65656E     B   136    						db 0,"Screen"			004963 00446973 61737365   B   137    						db 0,"Disassemble"		00496B 6D626C65 
00496F 00537769 746368     B   138    						db 0,"Switch"			004976 00436F70 79         B   139    						db 0,"Copy"				00497B 00446576 696365     B   140    						db 0,"Device"			004982 00436861 6E6765     B   141    						db 0,"Change"			004989 00447269 7665       B   142    						db 0,"Drive"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00498F 00446972            B   143    						db 0,"Dir"				004993 002F                B   144    						db 0,"/"				004995 00666E              B   145    						db 0,"fn"				                           B   146    						
004998 0044656C 657465     B   147    						db 0,"Delete"			00499F 0046696C 65         B   148    						db 0,"File"				0049A4 00496E66 6F         B   149    						db 0,"Info"				0049A9 00564F4C 783A       B   150    						db 0,"VOLx:"			0049AF 004D616B 65         B   151    						db 0,"Make"				0049B4 0052656D 6F756E74   B   152    						db 0,"Remount"			0049BC 00537461 7274       B   153    						db 0,"Start"			0049C2 00576172 6E696E67   B   154    						db 0,"Warning!"			0049CA 21 
0049CB 00416C6C            B   155    						db 0,"All"				0049CF 0052656D 6F7665     B   156    						db 0,"Remove"			0049D6 0052656E 616D65     B   157    						db 0,"Rename"			0049DD 004F72              B   158    						db 0,"Or"				0049E0 00526563 65697665   B   159    						db 0,"Receive"			0049E8 00536176 65         B   160    						db 0,"Save"				0049ED 00547261 6E736D69   B   161    						db 0,"Transmit"			0049F5 74 
0049F6 004C6F61 64         B   162    						db 0,"Load"				                           B   163    						
0049FB 004F532F 4857       B   164    						db 0,"OS/HW"			004A01 00566572 73696F6E   B   165    						db 0,"Version"			004A09 005B7065 6E207061   B   166    						db 0,"[pen paper]"		004A11 7065725D 
004A15 803A                B   167    						db 80h,":"				004A17 813E                B   168    						db 81h,">"				004A19 002A                B   169    						db 0,"*"				004A1B 00566F6C 756D6573   B   170    						db 0,"Volumes"			004A23 8343                B   171    						db 83h,"C"				004A25 844344              B   172    						db 84h,"CD"				004A28 85434C53            B   173    						db 85h,"CLS"			004A2C 8650454E            B   174    						db 86h,"PEN"			004A30 8744                B   175    						db 87h,"D"				004A32 8844454C            B   176    						db 88h,"DEL"			004A36 89444952            B   177    						db 89h,"DIR"			004A3A 8A48                B   178    						db 8ah,"H"				004A3C 8B46                B   179    						db 8bh,"F"				                           B   180    						
004A3E 004F6E              B   181    						db 0,"On"				004A41 8C464F52 4D4154     B   182    						db 8ch,"FORMAT"			004A48 0047                B   183    						db 0,"G"				004A4A 8D4C42              B   184    						db 8dh,"LB"				004A4D 8E4D                B   185    						db 8eh,"M"				004A4F 8F4D4F55 4E54       B   186    						db 8fh,"MOUNT"			004A55 004265              B   187    						db 0,"Be"				004A58 9052                B   188    						db 90h,"R"				004A5A 915244              B   189    						db 91h,"RD"				004A5D 92524E              B   190    						db 92h,"RN"				004A60 935258              B   191    						db 93h,"RX"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004A63 945342              B   192    						db 94h,"SB"				004A66 9554                B   193    						db 95h,"T"				004A68 965458              B   194    						db 96h,"TX"				004A6B 97564552 53         B   195    						db 97h,"VERS"			004A70 00577269 7465       B   196    						db 0,"Write"			                           B   197    						
004A76 004D656D            B   198    						db 0,"Mem"				004A7A 00227478 7422       B   199    						db 0,22h,"txt",22h		004A80 0057696C 6C         B   200    						db 0,"Will"				004A85 00526174 65         B   201    						db 0,"Rate"				004A8A 0061                B   202    						db 0,"a"				004A8C 00507265 70         B   203    						db 0,"Prep"				004A91 984D44              B   204    						db 98h,"MD"				004A94 00447269 766573     B   205    						db 0,"Drives"			004A9B 006F6C64 666E       B   206    						db 0,"oldfn"			004AA1 006E6577 666E       B   207    						db 0,"newfn"			004AA7 006C656E            B   208    						db 0,"len"				004AAB 00436F6C 6F757273   B   209    						db 0,"Colours"			004AB3 993F                B   210    						db 99h,"?"				004AB5 00436F6D 6D616E64   B   211    						db 0,"Commands"			004ABD 73 
004ABE 0020                B   212    						db 0," "				004AC0 002D                B   213    						db 0,"-"				                           B   214    						
004AC2 00566F6C 756D65     B   215    						db 0,"Volume"			004AC9 0046756C 6C         B   216    						db 0,"Full"				004ACE 004E6F74            B   217    						db 0,"Not"				004AD2 00466F75 6E64       B   218    						db 0,"Found"			004AD8 004C656E 677468     B   219    						db 0,"Length"			004ADF 005A6572 6F         B   220    						db 0,"Zero"				004AE4 004F7574            B   221    						db 0,"Out"				004AE8 004F66              B   222    						db 0,"Of"				004AEB 0052616E 6765       B   223    						db 0,"Range"			004AF1 00416C72 65616479   B   224    						db 0,"Already"			004AF9 00457869 737473     B   225    						db 0,"Exists"			004B00 004174              B   226    						db 0,"At"				004B03 00526F6F 74         B   227    						db 0,"Root"				004B08 004D6973 6D617463   B   228    						db 0,"Mismatch"			004B10 68 
004B11 00526571 75657374   B   229    						db 0,"Request"			004B19 00446174 61         B   230    						db 0,"Data"				                           B   231    				
004B1E 00454F46            B   232    						db 0,"EOF"				004B22 00416674 6572       B   233    						db 0,"After"			004B28 00556E6B 6E6F776E   B   234    						db 0,"Unknown"			004B30 00436F6D 6D616E64   B   235    						db 0,"Command"			004B38 00426164            B   236    						db 0,"Bad"				004B3C 00486578            B   237    						db 0,"Hex"				004B40 004E6F              B   238    						db 0,"No"				004B43 0041626F 72746564   B   239    						db 0,"Aborted"			004B4B 00507265 73656E74   B   240    						db 0,"Present"			004B53 00436865 636B7375   B   241    						db 0,"Checksum"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004B5B 6D 
004B5C 004C6F61 646564     B   242    						db 0,"Loaded"			004B63 00436F6D 6D73       B   243    						db 0,"Comms"			004B69 00457272 6F72       B   244    						db 0,"Error"			004B6F 00417267 756D656E   B   245    						db 0,"Arguments"		004B77 7473 
004B79 004C6F73 74         B   246    						db 0,"Lost"				                           B   247    						
004B7E 00                  B   248    						db 0
004B7F 46415431 36         B   249    fat16_txt				db "FAT16"				                           B   250    
004B84 00536572 69616C     B   251    						db 0,"Serial"			004B8B 0054696D 65         B   252    						db 0,"Time"				004B90 00466F6E 74         B   253    						db 0,"Font"				004B95 00546F6F            B   254    						db 0,"Too"				004B99 004C6F6E 67         B   255    						db 0,"Long"				004B9E 00446573 74696E61   B   256    						db 0,"Destination"		004BA6 74696F6E 
004BAA 0053656C 65637465   B   257    						db 0,"Selected"			004BB2 64 
004BB3 00496E76 616C6964   B   258    						db 0,"Invalid"			004BBB 004D6973 73696E67   B   259    						db 0,"Missing"			004BC3 004F4B              B   260    						db 0,"OK"				004BC6 004F53              B   261    						db 0,"OS"				004BC9 0050726F 74656374   B   262    						db 0,"Protected"		004BD1 6564 
004BD3 0041                B   263    						db 0,"A"				004BD5 004973              B   264    						db 0,"Is"				004BD8 00456D70 7479       B   265    						db 0,"Empty"			004BDE 00456E64            B   266    						db 0,"End"				                           B   267    						
004BE2 0024                B   268    						db 0,"$"
004BE4 7878                B   269    hex_byte_txt			db "xx"					                           B   270    						
004BE6 00417070 656E64     B   271    						db 0,"Append"			004BED 003F                B   272    						db 0,"?"				004BEF 0024                B   273    						db 0,"$"				004BF1 00417761 6974696E   B   274    						db 0,"Awaiting"			004BF9 67 
004BFA 00526563 65697669   B   275    						db 0,"Receiving"		004C02 6E67 
004C04 0053656E 64696E67   B   276    						db 0,"Sending"			004C0C 000B                B   277    						db 0,11					004C0E 002E2E              B   278    						db 0,".."				004C11 004E616D 65         B   279    						db 0,"Name"				004C16 00204279 746573     B   280    						db 0," Bytes"			004C1D 00507265 7373       B   281    						db 0,"Press"			004C23 00416E79            B   282    						db 0,"Any"				004C27 004B6579            B   283    						db 0,"Key"				004C2B 00456E74 6572       B   284    						db 0,"Enter"			004C31 9A455845 43         B   285    						db 9ah,"EXEC"			                           B   286    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004C36 0052756E            B   287    						db 0,"Run"				004C3A 00536372 697074     B   288    						db 0,"Script"			004C41 00594553            B   289    yes_txt					db 0,"YES" 				004C45 00546F              B   290    						db 0,"To"				004C48 00536574            B   291    						db 0,"Set"				004C4C 00436F6E 74696E75   B   292    						db 0,"Continue"			004C54 65 
004C55 004E6F6E 65         B   293    						db 0,"None"				004C5A 00447269 766572     B   294    						db 0,"Driver"			004C61 9B3C                B   295    						db 9bh,"<"				004C63 004E6577 6572       B   296    						db 0,"Newer"			004C69 00526571 75697265   B   297    						db 0,"Required"			004C71 64 
004C72 00465047 4120636F   B   298    						db 0,"FPGA config"		004C7A 6E666967 
004C7E 00556E63 68616E67   B   299    						db 0,"Unchanged"		004C86 6564 
004C88 00202849 6620666E   B   300    						db 0," (If fn = ! recei
004C90 203D2021 20726563 
004C98 65697665 20616E64 
004CA0 2072756E 2070726F 
004CA8 6772616D 29 
004CAD 9C50414C 45545445   B   301    						db 9ch,"PALETTE"		004CB5 0070616C 65747465   B   302    						db 0,"palette"			                           B   303    						
004CBD 9D4D4F55 5345       B   304    						db 9dh,"MOUSE"			004CC3 00456E61 626C65     B   305    						db 0,"Enable"			004CCA 004B6579 626F6172   B   306    						db 0,"Keyboard"			004CD2 64 
004CD3 00446574 65637465   B   307    						db 0,"Detected"			004CDB 64 
004CDC 004D6F75 7365       B   308    						db 0,"Mouse"			004CE2 00536563 746F72     B   309    						db 0,"Sector"			004CE9 00496E63 6F727265   B   310    						db 0,"Incorrect"		004CF1 6374 
004CF3 9E564D4F 4445       B   311    						db 9eh,"VMODE"			004CF9 00566964 656F       B   312    						db 0,"Video"			004CFF 004D6F64 65         B   313    						db 0,"Mode"				004D04 9F464F4E 54         B   314    						db 9fh,"FONT"			004D09 00416E64            B   315    						db 0,"And"				004D0D 00536176 696E67     B   316    						db 0,"Saving"			004D14 00556E73 7570706F   B   317    						db 0,"Unsupported"		004D1C 72746564 
                           B   318    						
004D20 0001                B   319    						db 0,1					                           B   320    
                           B   321    
                           B   322    
                           B   323    
                           B   324    
004D22 2199696A 5F916F92   B   325    save_append_msg			db 021h,099h,069h,06ah,
004D2A 9700 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004D2C 2F0A9300            B   326    os_loadaddress_msg 		db 02fh,00ah,093h,0		004D30 21649300            B   327    os_filesize_msg			db 021h,064h,093h,0		004D34 94219700            B   328    ser_rec_msg				db 094h,021h,097h,0		004D38 956F9897 00         B   329    ser_rec2_msg			db 095h,06fh,098h,097h,
004D3D 966F9897 00         B   330    ser_send_msg			db 096h,06fh,098h,097h,
004D42 9521BBBC 989700     B   331    ser_recsave_msg			db 095h,021h,0bbh,0bch,
004D49 A77C9097 00         B   332    hw_err_msg				db 0a7h,07ch,090h,097h,
004D4E 607C00              B   333    disk_err_msg			db 060h,07ch,0			004D51 A1779797 00         B   334    script_aborted_msg		db 0a1h,077h,097h,097h,
004D56 76B2B397 00         B   335    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   336    
004D5B 9700                B   337    packed_help1				db 097h,0
004D5D 0100                B   338    							db 001h,0			004D5F 0200                B   339    							db 002h,0			004D61 3307095F 4F500B00   B   340    							db 033h,007h,009h,0
004D69 3407515F 4F1400     B   341    							db 034h,007h,051h,0
004D70 A807095F 4F0B1E17   B   342    							db 0a8h,007h,009h,0
004D78 00 
                           B   343    
004D79 37070707 5F195000   B   344    							db 037h,007h,007h,0
004D81 3B07075F 1700       B   345    							db 03bh,007h,007h,0
004D87 3F070754 5F0E5000   B   346    							db 03fh,007h,007h,0
004D8F 42075F0F 0A00       B   347    							db 042h,007h,05fh,0
004D95 3E070709 5F0D5000   B   348    							db 03eh,007h,007h,0
004D9D 44075F10 500B00     B   349    							db 044h,007h,05fh,0
004DA4 475F1011 1200       B   350    							db 047h,05fh,010h,0
004DAA 4C075F10 50131400   B   351    							db 04ch,007h,05fh,0
                           B   352    	
004DB2 9700                B   353    							db 097h,0
004DB4 0300                B   354    							db 003h,0			004DB6 0400                B   355    							db 004h,0			004DB8 38231E1D 5F1B601E   B   356    							db 038h,023h,01eh,0
004DC0 1D00 
004DC2 3C1F5F20 2100       B   357    							db 03ch,01fh,05fh,0
004DC8 3D5F101D 00         B   358    							db 03dh,05fh,010h,0
004DCD 411A995F 551C00     B   359    							db 041h,01ah,099h,0
004DD4 431F075F 2F2100     B   360    							db 043h,01fh,007h,0
004DDB 561D5F24 1D00       B   361    							db 056h,01dh,05fh,0
004DE1 455F2557 00         B   362    							db 045h,05fh,025h,0
004DE6 481D5F29 1D00       B   363    							db 048h,01dh,05fh,0
004DEC 4958595F 2A2100     B   364    							db 049h,058h,059h,0
004DF3 4A1F075F 2C21AD00   B   365    							db 04ah,01fh,007h,0
004DFB 4B1F075A 5F2D2100   B   366    							db 04bh,01fh,007h,0
004E03 4D1F075A 5F2E2100   B   367    							db 04dh,01fh,007h,0
004E0B 235F1860 00         B   368    							db 023h,05fh,018h,0
                           B   369    
004E10 9700                B   370    							db 097h,0
004E12 0500                B   371    							db 005h,0			004E14 0600                B   372    							db 006h,0			004E16 395F1516 00         B   373    							db 039h,05fh,015h,0
004E1B 9F1F5FA0 A100       B   374    							db 09fh,01fh,05fh,0
004E21 BA1F5F1B 8200       B   375    							db 0bah,01fh,05fh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004E27 B05FB1B0 A700       B   376    							db 0b0h,05fh,0b1h,0
004E2D AE095F1B AF00       B   377    							db 0aeh,09h,05fh,01
004E33 3A325F1B 5B00       B   378    							db 03ah,032h,05fh,0
004E39 4E5F1030 3100       B   379    							db 04eh,05fh,010h,0
004E3F B7095F1B B8B900     B   380    							db 0b7h,09h,5fh,01b
004E46 5C5F105D 00         B   381    							db 05ch,05fh,010h,0
004E4B 9700                B   382    							db 097h,0
004E4D FF                  B   383    							db 0ffh
                           B   384    
                           B   385    
                           B   386    
                           B   387    
004E4E 491C00              B   388    os_cmd_locs					dw24 os_cmd_colon	004E51 EE1F00              B   389    							dw24 os_cmd_gtr		004E54 6C2800              B   390    							dw24 os_cmd_unused	004E57 F01A00              B   391    							dw24 os_cmd_c		004E5A 5D1B00              B   392    							dw24 os_cmd_cd		004E5D 431C00              B   393    							dw24 os_cmd_cls		004E60 F02600              B   394    							dw24 os_cmd_pen		004E63 631C00              B   395    							dw24 os_cmd_d		                           B   396    					
004E66 8B1C00              B   397    							dw24 os_cmd_del		004E69 A01C00              B   398    							dw24 os_cmd_dir		004E6C 1C1F00              B   399    							dw24 os_cmd_h		004E6F 9C1D00              B   400    							dw24 os_cmd_f		004E72 C41D00              B   401    							dw24 os_cmd_format	004E75 222000              B   402    							dw24 os_cmd_lb		004E78 B12000              B   403    							dw24 os_cmd_m		                           B   404    					
004E7B B12500              B   405    							dw24 os_cmd_remount
004E7E 082100              B   406    							dw24 os_cmd_r		004E81 392200              B   407    							dw24 os_cmd_rd		004E84 462200              B   408    							dw24 os_cmd_rn		004E87 CA2200              B   409    							dw24 os_cmd_rx		004E8A 622200              B   410    							dw24 os_cmd_sb		004E8D 5D2500              B   411    							dw24 os_cmd_t		004E90 F12400              B   412    							dw24 os_cmd_tx		                           B   413    					
004E93 BD2500              B   414    							dw24 os_cmd_vers	004E96 FB2000              B   415    							dw24 os_cmd_md		004E99 CA1F00              B   416    							dw24 os_cmd_help	004E9C EE2500              B   417    							dw24 os_cmd_exec	004E9F EE2600              B   418    							dw24 os_cmd_ltn		004EA2 102700              B   419    							dw24 os_cmd_palette
004EA5 412700              B   420    							dw24 os_cmd_mouse	004EA8 7D2700              B   421    							dw24 os_cmd_vmode	004EAB 1B2800              B   422    							dw24 os_cmd_font	                           B   423    							
                           B   424    								
004EAE 00                  B   425    packed_msg_list				db 0				                           B   426    		
004EAF 606100              B   427    							db 060h,061h,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004EB2 21626300            B   428    							db 021h,062h,063h,0
004EB6 1D6100              B   429    							db 01dh,061h,0		004EB9 628C1D00            B   430    							db 062h,08ch,01dh,0
004EBD 1D8D628E 00         B   431    							db 01dh,08dh,062h,0
004EC2 628C2100            B   432    							db 062h,08ch,021h,0
004EC6 21648D65 00         B   433    							db 021h,064h,08dh,0
004ECB 0A666768 00         B   434    							db 00ah,066h,067h,0
004ED0 2199696A 00         B   435    							db 021h,099h,069h,0
004ED5 696B6C00            B   436    							db 069h,06bh,06ch,0
                           B   437    					
004ED9 727300              B   438    							db 072h,073h,0		004EDC 877500              B   439    							db 087h,075h,0		004EDF 76219900            B   440    							db 076h,021h,099h,0
                           B   441    					
004EE3 87B500              B   442    							db 087h,0b5h,0		004EE6 797400              B   443    							db 079h,074h,0		004EE9 9A7A00              B   444    bytes_loaded_msg			db 09ah,07ah,0		004EEC 7B7C00              B   445    							db 07bh,07ch,0		004EEF 747D00              B   446    							db 074h,07dh,0		                           B   447    
004EF2 627F00              B   448    format_err_msg				db 062h,07fh,0		                           B   449    
004EF5 816600              B   450    							db 081h,066h,0		004EF8 21998384 00         B   451    							db 021h,099h,083h,0
004EFD 76260A00            B   452    							db 076h,026h,00ah,0
004F01 76216400            B   453    							db 076h,021h,064h,0
004F05 2D7700              B   454    							db 02dh,077h,0		004F08 2D7C6B85 00         B   455    							db 02dh,07ch,06bh,0
004F0D 628C080C 00         B   456    							db 062h,08ch,08h,0c
004F12 A9316708 AA00       B   457    							db 0a9h,031h,067h,0
004F18 768F0A00            B   458    							db 076h,08fh,00ah,0
004F1C 76850A00            B   459    							db 076h,085h,00ah,0
                           B   460    					
004F20 746800              B   461    							db 074h,068h,0		004F23 887D00              B   462    							db 088h,07dh,0		004F26 8900                B   463    ok_msg						db 089h,0			                           B   464    					
004F28 876000              B   465    							db 087h,060h,0		004F2B 1A627800            B   466    							db 01ah,062h,078h,0
                           B   467    					
004F2F 1D626300            B   468    							db 01dh,062h,063h,0
004F33 7700                B   469    							db 077h,0			                           B   470    					
004F35 21996D00            B   471    							db 021h,099h,06dh,0
004F39 8A508B00            B   472    							db 08ah,050h,08bh,0
004F3D 6F71706E 00         B   473    							db 06fh,071h,070h,0
004F42 763600              B   474    no_vols_msg					db 076h,036h,0		004F45 97A66300            B   475    none_found_msg				db 097h,0a6h,063h,0
                           B   476    							
004F49 B62100              B   477    							db 0b6h,021h,0		004F4C A9316708 AA00       B   478    							db 0a9h,031h,067h,0
004F52 21AC00              B   479    							db 021h,0ach,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   480    							
004F55 766F00              B   481    							db 076h,06fh,0		004F58 746F00              B   482    							db 074h,06fh,0		004F5B 66676800            B   483    							db 066h,067h,068h,0
004F5F BD1A00              B   484    							db 0bdh,01ah,0		004F62 1A62B300            B   485    							db 01ah,062h,0b3h,0
004F66 1A7C00              B   486    							db 01ah,07ch,0		                           B   487    							
004F69 FF                  B   488    							db 0ffh				                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
004F6A                     B   492    kernal_error_code_translation
                           B   493    
004F6A 242D2E14 08110F2A   B   494    					db 24h,2dh,2eh,14h, 08h,11h
004F72 2F303132 
                           B   495    					
004F76                     B   496    fs_error_code_translation
                           B   497    
004F76 00010203 04050607   B   498    					db 00h,01h,02h,03h,04h,05h,
004F7E 08090A0B 0C0D1321 
004F86 22232425 260E0000   B   499    					db 22h,23h,24h,25h,26h,0eh,
                           B   500    
                           B   501    
                           B   502    ;----------------------------------------------
                           B   503    ; Scancode to ASCII keymaps
                           B   504    ;----------------------------------------------
                           B   505    
                           C     0    include	'UK_keymap.asm'
004F8E                     C     1    keymap:
004F8E 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
004F96 00000000 00006000 
004F9E 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
004FA6 00007A73 61773200 
004FAE 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
004FB6 00207666 74723500 
004FBE 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
004FC6 00006D6A 75373800 
004FCE 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
004FD6 002E2F6C 3B702D00 
004FDE 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
004FE6 0000005D 00230000 
004FEE 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
004FF6 00000000 00000000 
004FFE AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005006 21000000 5A534157 
00500E 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005016 A3000020 56465452 
00501E 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005026 5E000000 4D4A5526 
00502E 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005036 2800003E 3F4C3A50 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
00503E 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005046 00000000 007D007E 
00504E 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005056 00000000 00000000 
00505E 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005066 00000000 00000000 
00506E 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005076 00000000 00000000 
00507E 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005086 00000000 00000000 
00508E 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005096 00000000 00000000 
00509E 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
0050A6 00000000 00000000 
0050AE 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   507    
       00004F8E            B   508    unshifted_keymap equ keymap+00h
       00004FF0            B   509    shifted_keymap   equ keymap+62h
       00005052            B   510    alted_keymap	 equ keymap+c4h
                           B   511    	
                           B   512    ;----------------------------------------------
                           B   513    
0050B4 00                  B   514    ui_index				db 0				; u
0050B5 00                  B   515    ui_maxchars				db 0				; "
0050B6 000000              B   516    ui_string_addr			dw24 0				; "
                           B   517    
                           B   518    ;----------------------------------------------
                           B   519    ; OS Display parameters
                           B   520    ;----------------------------------------------
                           B   521    
0050B9 00                  B   522    video_mode				db 0
0050BA 0700                B   523    current_pen				dw 07h				; c
0050BC 0000                B   524    background_colour		dw 00h				; f
                           B   525    
0050BE 00000F00 000F0F0F   B   526    pen_palette				dw 0000h,000fh,0f00h,0f
0050C6 F000FF00 F00FFF0F 
0050CE 55059909 CC0C710F   B   527    						dw 0555h,0999h,0ccch,0f
0050D6 7F00F80D 40088C03 
                           B   528    
0050DE 00                  B   529    plotchar_colour			db 0				; c
                           B   530    
0050DF 00                  B   531    req_cursor_image		db 0
0050E0 00                  B   532    active_cursor_image		db 0
                           B   533    
0050E1                     B   534    display_parameters							; D
                           B   535    ;-----------------
                           B   536    
0050E1 000000              B   537    window_rows				dw24 0				; i
0050E4 000000              B   538    window_columns			dw24 0				; i
0050E7 000000              B   539    window_width_bytes		dw24 0				; i
0050EA 000000              B   540    window_height_lines		dw24 0				; i
                           B   541    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0050ED 040000 080000       B   542    font_parameters			dw24 4,8,0,0
0050F3 000000 000000 
       000050ED            B   543    font_width_bytes		equ font_parameters+0	       000050F0            B   544    font_height_lines		equ font_parameters+3
       000050F3            B   545    font_addr				equ font_parameters+6
       000050F6            B   546    font_length				equ font_parameters+9
                           B   547    
0050F9 000000              B   548    video_window_address	dw24 0
0050FC 000000              B   549    charmap_address			dw24 0
0050FF 000000              B   550    attributes_address		dw24 0
005102 000000              B   551    cursor_image_address	dw24 0
005105 000000              B   552    total_window_bytes		dw24 0
005108 000000              B   553    total_charmap_bytes		dw24 0
00510B 000000              B   554    total_row_bytes			dw24 0				; i
00510E 00                  B   555    window_pixel_doubling	db 0
                           B   556    
                           B   557    ;==============================================
                           B   558    ;  Serial Routine Data
                           B   559    ;==============================================
                           B   560    
00510F 000000              B   561    serial_ez80_address		dw24 0
005112 000000              B   562    serial_file_length		dw24 0
005115 000000              B   563    serial_fn_addr			dw24 0
005118 00 00 00 00 00 00   B   564    serial_filename			blkb 18,0		
00511E 00 00 00 00 00 00 
005124 00 00 00 00 00 00 
00512A 00                  B   565    serial_fn_length		db 0
00512B 00                  B   566    serial_timeout			db 0
                           B   567    
00512C 00 00 00 00 00 00   B   568    serial_fileheader		blkb 20,0
005132 00 00 00 00 00 00 
005138 00 00 00 00 00 00 
00513E 00 00 
005140 5A383050 2E464845   B   569    serial_header_id		db "Z80P.FHEADER"		005148 41444552 
00514C 00                  B   570    serial_transfer_started	db 0
                           B   571    
00514D 00                  B   572    anim_wait_count			db 0
                           B   573    
                           B   574    ;==============================================
                           B   575    
00514E F3C8                B   576    intellimouse_seq	db 0f3h,200
005150 F364                B   577    					db 0f3h,100
005152 F350                B   578    					db 0f3h,80
                           B   579    
005154 E803                B   580    mouse_settings_seq	db 0e8h,default_resolution
005156 E6                  B   581    					db default_scaling
005157 F364                B   582    					db 0f3h,default_sample_rate
005159 F4                  B   583    					db 0f4h
                           B   584    					
                           B   585    ;----------------------------------------------
                           B   586    ; FILE SYSTEM RELATED VARIABLES
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   587    ;----------------------------------------------
                           B   588    
00515A 00                  B   589    boot_drive			db 0
                           B   590    
00515B 00                  B   591    current_volume		db 0
                           B   592    	
00515C 00                  B   593    current_driver		db 0			;normally u
                           B   594    
00515D 00                  B   595    device_count		db 0			;IE: the nu
                           B   596    
00515E 00                  B   597    volume_count		db 0
                           B   598    				
00515F 20564F4C 303A00     B   599    vol_txt				db " VOL0:",0	;space pref
005166 44455630 3A00       B   600    dev_txt				db "DEV0:",0
                           B   601    
00516C 000000              B   602    sector_rd_wr_addr	dw24 0
                           B   603    
                           B   604    ;==============================================
                           B   605    
                           B   606    ; Add storage device drivers here, end with 0
                           B   607    
00516F 7D2800              B   608    driver_table		dw24 sd_card_driver	;Device
005172 000000              B   609    					dw24 0				;last d
                           B   610    
                           B   611    ; Each driver's code should have a header in th
                           B   612    ; ---------------------------------------------
                           B   613    ; $0    = JP to get ID routin
                           B   614    ; $4    = JP to read sector routine
                           B   615    ; $8    = JP to write sector routinee
                           B   616    ; $c    = ASCII name of device type (null termi
                           B   617    ;==============================================
                           B   618    
005175                     B   619    volume_dir_clusters
                           B   620    
005175 00 00 00 00 00 00   B   621    					blkb max_volumes*3,0
00517B 00 00 00 00 00 00 
005181 00 00 00 00 00 00 
005187 00 00 00 00 00 00 
                           B   622    	
00518D                     B   623    volume_mount_list
                           B   624    
00518D 00 00 00 00 00 00   B   625    					blkb max_volumes*16,0
005193 00 00 00 00 00 00 
005199 00 00 00 00 00 00 
00519F 00 00 00 00 00 00 
0051A5 00 00 00 00 00 00 
0051AB 00 00 00 00 00 00 
0051B1 00 00 00 00 00 00 
0051B7 00 00 00 00 00 00 
0051BD 00 00 00 00 00 00 
0051C3 00 00 00 00 00 00 
0051C9 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0051CF 00 00 00 00 00 00 
0051D5 00 00 00 00 00 00 
0051DB 00 00 00 00 00 00 
0051E1 00 00 00 00 00 00 
0051E7 00 00 00 00 00 00 
0051ED 00 00 00 00 00 00 
0051F3 00 00 00 00 00 00 
0051F9 00 00 00 00 00 00 
0051FF 00 00 00 00 00 00 
005205 00 00 00 00 00 00 
00520B 00 00 
                           B   626    
                           B   627    ; Each entry is 16 bytes in the form:
                           B   628    
                           B   629    ; OFFSETS
                           B   630    ; -------
                           B   631    ; $00 - Volume is present (0/1)
                           B   632    ; $01 - Volume's host driver number (1 byte)	                           B   633    ; $02 - [reserved]
                           B   634    ; $03 - [reserved]
                           B   635    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   636    ; $07 - Partition number on host drive (0/1/2/3
                           B   637    ; $08 - Offset in sectors from MBR to partition
                           B   638    ; $0c - [reserved]
                           B   639    ; $0d - [reserved]	
                           B   640    ; $0e - [reserved]
                           B   641    ; $0f - [reserved]
                           B   642    
                           B   643    ;==============================================
                           B   644    
00520D                     B   645    host_device_hardware_info
                           B   646    
00520D 00 00 00 00 00 00   B   647    					blkb 32*4,0
005213 00 00 00 00 00 00 
005219 00 00 00 00 00 00 
00521F 00 00 00 00 00 00 
005225 00 00 00 00 00 00 
00522B 00 00 00 00 00 00 
005231 00 00 00 00 00 00 
005237 00 00 00 00 00 00 
00523D 00 00 00 00 00 00 
005243 00 00 00 00 00 00 
005249 00 00 00 00 00 00 
00524F 00 00 00 00 00 00 
005255 00 00 00 00 00 00 
00525B 00 00 00 00 00 00 
005261 00 00 00 00 00 00 
005267 00 00 00 00 00 00 
00526D 00 00 00 00 00 00 
005273 00 00 00 00 00 00 
005279 00 00 00 00 00 00 
00527F 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005285 00 00 00 00 00 00 
00528B 00 00 
                           B   648    
                           B   649    ; Each entry is 32 bytes..
                           B   650    ;
                           B   651    ; OFFSETS
                           B   652    ; -------
                           B   653    ; $00 - Device driver number
                           B   654    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   655    ; $05 - Zero terminated hardware name (22 ASCII
                           B   656    ; (remaining bytes to $1F currently unused)
                           B   657    
                           B   658    ;----------------------------------------------
                           B   659    
00528D 000000              B   660    dhwn_temp_pointer		dw24 0
                           B   661    
005290 00                  B   662    partition_temp			db 0
005291 00                  B   663    vols_on_device_temp		db 0
005292 00                  B   664    sys_driver_backup		db 0
005293 00                  B   665    os_quiet_mode			db 0
                           B   666    
005294 965A00              B   667    default_load_addr		dw24 os_max_addr
                           B   668    
                           B   669    ;----------------------------------------------
                           B   670    
005297 00 00 00 00 00 00   B   671    time_data				blkb	7,0
00529D 00 
                           B   672    
00529E 00                  B   673    frozen					db 0
00529F 01                  B   674    first_run				db 1
0052A0 01                  B   675    devices_connected		db 1					                           B   676    
                           B   677    ;----------------------------------------------
                           B   678    
0052A1 965A00              B   679    sys_ram_high			dw24 os_max_addr
0052A4 000080              B   680    vram_a_high				dw24 vram_a_addr
0052A7 0000C0              B   681    vram_b_high				dw24 vram_b_addr
                           B   682    
                           B   683    ;----------------------------------------------
                           B   684    
0052AA 00                  B   685    store_a1				db 0		
0052AB 000000              B   686    store_bc1				dw24 0
0052AE 000000              B   687    store_de1				dw24 0
0052B1 000000              B   688    store_hl1				dw24 0
0052B4 00                  B   689    store_a2				db 0
0052B5 000000              B   690    store_bc2				dw24 0
0052B8 000000              B   691    store_de2				dw24 0
0052BB 000000              B   692    store_hl2				dw24 0
0052BE 000000              B   693    store_ix				dw24 0
0052C1 000000              B   694    store_iy				dw24 0
0052C4 000000              B   695    store_pc				dw24 0		;only relev
0052C7 000000              B   696    store_spl				dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0052CA 0000                B   697    store_sps				dw 0
0052CC 00                  B   698    store_mbase				db 0
0052CD 00                  B   699    store_f	 				db 0
0052CE 00                  B   700    store_adl				db 0
                           B   701    
                           B   702    ;----------------------------------------------
0052CF                     B   703    os_variables
                           B   704    ;----------------------------------------------
                           B   705    
0052CF 00                  B   706    store_registers			db 0
0052D0 000000              B   707    com_start_addr			dw24 0
                           B   708    
0052D3 00 00 00 00 00 00   B   709    temp_string				blkb max_buffer_chars+2
0052D9 00 00 00 00 00 00 
0052DF 00 00 00 00 00 00 
0052E5 00 00 00 00 00 00 
0052EB 00 00 00 00 00 00 
0052F1 00 00 00 00 00 00 
0052F7 00 00 00 00 00 00 
0052FD 00 00 00 00 00 00 
005303 00 00 00 00 00 00 
005309 00 00 00 00 00 00 
00530F 00 00 00 00 00 00 
005315 00 00 00 00 00 00 
00531B 00 00 00 00 00 00 
005321 00 00 00 00 
005325 00 00 00 00 00 00   B   710    script_fn				blkb 13,0
00532B 00 00 00 00 00 00 
005331 00 
                           B   711    
005332 00                  B   712    sector_lba0				db 0			; keep 
005333 00                  B   713    sector_lba1				db 0
005334 00                  B   714    sector_lba2				db 0
005335 00                  B   715    sector_lba3				db 0
                           B   716    
                           B   717    ;----------------------------------------------
                           B   718    
005336 000000              B   719    cursor_pos				dw24 0			; 3rd b
                           B   720    
       00005336            B   721    cursor_y 				equ cursor_pos
       00005337            B   722    cursor_x 				equ cursor_pos+1
                           B   723    						
005339 00                  B   724    cursorflashtimer		db 0
00533A 00                  B   725    cursor_status			db 0
00533B 00                  B   726    os_linecount			db 0
                           B   727    		
00533C 000000              B   728    mem_mon_addr			dw24 0
00533F 000000              B   729    cmdop_start_address		dw24 0
005342 000000              B   730    cmdop_end_address		dw24 0
005345 000000              B   731    copy_dest_address		dw24 0
005348 000000              B   732    hex_address				dw24 0
                           B   733    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00534B 000000              B   734    find_hexstringascii 	dw24 0
00534E 000000              B   735    xrr_temp				dw24 0
005351 00                  B   736    temphex					db 0
005352 00                  B   737    fillbyte				db 0 
005353 00                  B   738    ui_im_cache				db 0
                           B   739    
005354 00 00 00 00 00 00   B   740    commandstring			blkb max_buffer_chars+2
00535A 00 00 00 00 00 00 
005360 00 00 00 00 00 00 
005366 00 00 00 00 00 00 
00536C 00 00 00 00 00 00 
005372 00 00 00 00 00 00 
005378 00 00 00 00 00 00 
00537E 00 00 00 00 00 00 
005384 00 00 00 00 00 00 
00538A 00 00 00 00 00 00 
005390 00 00 00 00 00 00 
005396 00 00 00 00 00 00 
00539C 00 00 00 00 00 00 
0053A2 00 00 00 00 
0053A6 00 00 00 00 00 00   B   741    output_line				blkb max_buffer_chars+2
0053AC 00 00 00 00 00 00 
0053B2 00 00 00 00 00 00 
0053B8 00 00 00 00 00 00 
0053BE 00 00 00 00 00 00 
0053C4 00 00 00 00 00 00 
0053CA 00 00 00 00 00 00 
0053D0 00 00 00 00 00 00 
0053D6 00 00 00 00 00 00 
0053DC 00 00 00 00 00 00 
0053E2 00 00 00 00 00 00 
0053E8 00 00 00 00 00 00 
0053EE 00 00 00 00 00 00 
0053F4 00 00 00 00 
                           B   742    				
0053F8 000000              B   743    os_args_loc				dw24 0
0053FB 000000              B   744    os_args_pos_cache		dw24 0
                           B   745    
0053FE 000000              B   746    os_dir_block_cache  	dw24 0
005401 000000              B   747    os_extcmd_jmp_addr		dw24 0
                           B   748    
005404 00                  B   749    in_script_flag			db 0
005405 000000              B   750    script_dir				dw24 0
005408 00 00 00 00 00 00   B   751    script_buffer			blkb max_buffer_chars+2
00540E 00 00 00 00 00 00 
005414 00 00 00 00 00 00 
00541A 00 00 00 00 00 00 
005420 00 00 00 00 00 00 
005426 00 00 00 00 00 00 
00542C 00 00 00 00 00 00 
005432 00 00 00 00 00 00 
005438 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00543E 00 00 00 00 00 00 
005444 00 00 00 00 00 00 
00544A 00 00 00 00 00 00 
005450 00 00 00 00 00 00 
005456 00 00 00 00 
00545A 000000              B   752    script_file_offset		dw24 0
00545D 000000              B   753    script_buffer_offset	dw24 0
005460 000000              B   754    script_orig_dir			dw24 0
                           B   755    
005463 0000                B   756    char_to_print			db 0,0	; zero terminat
                           B   757    
                           B   758    ;----------------------------------------------
                           B   759    ; Keyboard buffer and registers
                           B   760    ;----------------------------------------------
                           B   761    
005465 00 00 00 00 00 00   B   762    scancode_buffer			blkb 32,0
00546B 00 00 00 00 00 00 
005471 00 00 00 00 00 00 
005477 00 00 00 00 00 00 
00547D 00 00 00 00 00 00 
005483 00 00 
                           B   763    
005485 00                  B   764    key_buf_wr_idx			db 0
005486 00                  B   765    key_buf_rd_idx			db 0
005487 00                  B   766    key_release_mode		db 0		
005488 00                  B   767    not_currently_used		db 0
005489 00                  B   768    key_mod_flags			db 0
00548A 00                  B   769    insert_mode				db 0
00548B 00                  B   770    current_scancode		db 0
00548C 00                  B   771    current_asciicode		db 0
                           B   772    
                           B   773    ;----------------------------------------------
                           B   774    ; Mouse related registers
                           B   775    ;----------------------------------------------
                           B   776    
00548D 00                  B   777    mouse_id				db 0
00548E 00                  B   778    mouse_packet_size		db 0
                           B   779    
00548F 00 00 00 00         B   780    mouse_packet			blkb 4,0			; t
005493 00                  B   781    mouse_packet_index		db 0				;
005494 00                  B   782    mouse_buttons			db 0				;
005495 000000              B   783    mouse_disp_x			dw24 0				; c
005498 000000              B   784    mouse_disp_y			dw24 0				; c
00549B 00                  B   785    mouse_wheel				db 0				; m
00549C 00                  B   786    mouse_updated			db 0
                           B   787    
00549D 000000              B   788    mouse_window_size_x		dw24 0				; t
0054A0 000000              B   789    mouse_window_size_y		dw24 0
0054A3 000000              B   790    mouse_abs_x				dw24 0
0054A6 000000              B   791    mouse_abs_y				dw24 0
0054A9 000000              B   792    mouse_disp_x_old		dw24 0
0054AC 000000              B   793    mouse_disp_y_old		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0054AF 000000              B   794    mouse_disp_x_buffer		dw24 0
0054B2 000000              B   795    mouse_disp_y_buffer		dw24 0
0054B5 00                  B   796    mouse_new_window		db 0
                           B   797    
                           B   798    ;==============================================
0054B6 00                  B   799    last_os_var				db 0 
                           B   800    ;==============================================
                           B   801    
       00005336            B   802    first_os_var			equ cursor_y
                           B   803    
                           B   804    ;==============================================
                           B   805    
                           B   806    
                           B     0    	include		'prose_font_packed.asm'
0054B7                     B     1    packed_font_start:
0054B7 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
0054BF 00181800 EEEE6601 
0054C7 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
0054CF 6C00187E E07C0EFC 
0054D7 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
0054DF C60078EC EC78EDEE 
0054E7 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
0054EF 18300160 03301800 
0054F7 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
0054FF 105438FE 38541000 
005507 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
00550F 07383870 0100037E 
005517 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
00551F 0E1C3870 E0007CE6 
005527 EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
00552F 0138047C 007CEE0E 
005537 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
00553F 0C0ECE7C 001E3E76 
005547 E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
00554F 010E03FC 007EE0FC 
005557 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
00555F 18013803 007CE6E6 
005567 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
00556F 037E0E7C 01000318 
005577 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
00557F 30003030 600E1C38 
005587 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
00558F 007E0100 0370381C 
005597 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
00559F 3C380038 007CE601 
0055A7 EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
0055AF FE01E603 00FCE6E6 
0055B7 FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
0055BF E003E67C 00FC01E6 
0055C7 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
0055CF E0FE00FE E0E0F801 
0055D7 E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
0055DF E67C0001 E603FE01 
0055E7 E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
0055EF 007E011C 04DC7800 
0055F7 E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
0055FF 01E006FE 00C6EEFE 
005607 D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
00560F FEEEE6E6 007C01E6 
005617 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
00561F E0E0007C 01E603EA 
005627 EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
00562F E6E6007C EEE07C0E 
005637 EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
00563F 01E6067C 0001E605 
005647 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
00564F 6C00E6E6 6C3874E6 
005657 E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
00565F 00FE0E1C 3870E0FE 
005667 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
00566F E070381C 0E060078 
005677 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
00567F C601000B FE381C01 
005687 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
00568F 00E0E0FC E6E6FC01 
005697 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
00569F 0006067E E6E67E01 
0056A7 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
0056AF 003E70FC 01700301 
0056B7 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
0056BF 00E0E0FC 01E60300 
0056C7 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
0056CF 001C0001 1C047800 
0056D7 E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
0056DF 78013804 7C010003 
0056E7 ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
0056EF FC01E604 0100037C 
0056F7 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
0056FF E6E6FCE0 E000007E 
005707 E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
00570F E601E003 0100037E 
005717 F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
00571F 0138031E 01000301 
005727 E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
00572F 036C3801 0003E2EA 
005737 FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
00573F 387CE601 000301E6 
005747 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
00574F 3870FE00 3C303060 
005757 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
00575F 7818180C 18187800 
005767 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
00576F 070100FF 01001A1C 
005777 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
00577F 297CC6BA A2BAC67C 
005787 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
00578F FF0100FF 01009C 
005796                     B    48    packed_font_end:
                           A  2939    
005796 00 00 00 00 00 00   A  2940    sector_buffer	blkb 512,0
00579C 00 00 00 00 00 00 
0057A2 00 00 00 00 00 00 
0057A8 00 00 00 00 00 00 
0057AE 00 00 00 00 00 00 
0057B4 00 00 00 00 00 00 
0057BA 00 00 00 00 00 00 
0057C0 00 00 00 00 00 00 
0057C6 00 00 00 00 00 00 
0057CC 00 00 00 00 00 00 
0057D2 00 00 00 00 00 00 
0057D8 00 00 00 00 00 00 
0057DE 00 00 00 00 00 00 
0057E4 00 00 00 00 00 00 
0057EA 00 00 00 00 00 00 
0057F0 00 00 00 00 00 00 
0057F6 00 00 00 00 00 00 
0057FC 00 00 00 00 00 00 
005802 00 00 00 00 00 00 
005808 00 00 00 00 00 00 
00580E 00 00 00 00 00 00 
005814 00 00 00 00 00 00 
00581A 00 00 00 00 00 00 
005820 00 00 00 00 00 00 
005826 00 00 00 00 00 00 
00582C 00 00 00 00 00 00 
005832 00 00 00 00 00 00 
005838 00 00 00 00 00 00 
00583E 00 00 00 00 00 00 
005844 00 00 00 00 00 00 
00584A 00 00 00 00 00 00 
005850 00 00 00 00 00 00 
005856 00 00 00 00 00 00 
00585C 00 00 00 00 00 00 
005862 00 00 00 00 00 00 
005868 00 00 00 00 00 00 
00586E 00 00 00 00 00 00 
005874 00 00 00 00 00 00 
00587A 00 00 00 00 00 00 
005880 00 00 00 00 00 00 
005886 00 00 00 00 00 00 
00588C 00 00 00 00 00 00 
005892 00 00 00 00 00 00 
005898 00 00 00 00 00 00 
00589E 00 00 00 00 00 00 
0058A4 00 00 00 00 00 00 
0058AA 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0058B0 00 00 00 00 00 00 
0058B6 00 00 00 00 00 00 
0058BC 00 00 00 00 00 00 
0058C2 00 00 00 00 00 00 
0058C8 00 00 00 00 00 00 
0058CE 00 00 00 00 00 00 
0058D4 00 00 00 00 00 00 
0058DA 00 00 00 00 00 00 
0058E0 00 00 00 00 00 00 
0058E6 00 00 00 00 00 00 
0058EC 00 00 00 00 00 00 
0058F2 00 00 00 00 00 00 
0058F8 00 00 00 00 00 00 
0058FE 00 00 00 00 00 00 
005904 00 00 00 00 00 00 
00590A 00 00 00 00 00 00 
005910 00 00 00 00 00 00 
005916 00 00 00 00 00 00 
00591C 00 00 00 00 00 00 
005922 00 00 00 00 00 00 
005928 00 00 00 00 00 00 
00592E 00 00 00 00 00 00 
005934 00 00 00 00 00 00 
00593A 00 00 00 00 00 00 
005940 00 00 00 00 00 00 
005946 00 00 00 00 00 00 
00594C 00 00 00 00 00 00 
005952 00 00 00 00 00 00 
005958 00 00 00 00 00 00 
00595E 00 00 00 00 00 00 
005964 00 00 00 00 00 00 
00596A 00 00 00 00 00 00 
005970 00 00 00 00 00 00 
005976 00 00 00 00 00 00 
00597C 00 00 00 00 00 00 
005982 00 00 00 00 00 00 
005988 00 00 00 00 00 00 
00598E 00 00 00 00 00 00 
005994 00 00 
                           A  2941    
005996 00 00 00 00 00 00   A  2942    scratch_pad		blkb 256,0
00599C 00 00 00 00 00 00 
0059A2 00 00 00 00 00 00 
0059A8 00 00 00 00 00 00 
0059AE 00 00 00 00 00 00 
0059B4 00 00 00 00 00 00 
0059BA 00 00 00 00 00 00 
0059C0 00 00 00 00 00 00 
0059C6 00 00 00 00 00 00 
0059CC 00 00 00 00 00 00 
0059D2 00 00 00 00 00 00 
0059D8 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Jun-11     20:15:39     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0059DE 00 00 00 00 00 00 
0059E4 00 00 00 00 00 00 
0059EA 00 00 00 00 00 00 
0059F0 00 00 00 00 00 00 
0059F6 00 00 00 00 00 00 
0059FC 00 00 00 00 00 00 
005A02 00 00 00 00 00 00 
005A08 00 00 00 00 00 00 
005A0E 00 00 00 00 00 00 
005A14 00 00 00 00 00 00 
005A1A 00 00 00 00 00 00 
005A20 00 00 00 00 00 00 
005A26 00 00 00 00 00 00 
005A2C 00 00 00 00 00 00 
005A32 00 00 00 00 00 00 
005A38 00 00 00 00 00 00 
005A3E 00 00 00 00 00 00 
005A44 00 00 00 00 00 00 
005A4A 00 00 00 00 00 00 
005A50 00 00 00 00 00 00 
005A56 00 00 00 00 00 00 
005A5C 00 00 00 00 00 00 
005A62 00 00 00 00 00 00 
005A68 00 00 00 00 00 00 
005A6E 00 00 00 00 00 00 
005A74 00 00 00 00 00 00 
005A7A 00 00 00 00 00 00 
005A80 00 00 00 00 00 00 
005A86 00 00 00 00 00 00 
005A8C 00 00 00 00 00 00 
005A92 00 00 00 00 
                           A  2943    
                           A  2944    ;==============================================
                           A  2945    	
005A96 00                  A  2946    os_max_addr		db 0							                           A  2947    	
                           A  2948    				end		
                           A  2949    ;==============================================
                           A  2950    
                           A  2951    		


Errors: 0
Warnings: 0
Lines Assembled: 10787
