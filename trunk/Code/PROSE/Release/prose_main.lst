Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       0000002B            A    17    prose_version	equ 2bh
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 AE 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 B3 48 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 DD 52 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD DB 2D 00         A    88    				call disable_irqs
000A5C CD 63 2F 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A 22 54 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD 88 35 00         A    94    				call init_keyboard
000A6B 28 06               A    95    				jr z,kb_ok
000A6D 21 23 54 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 22 54 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 52 54 00         A   102    				ld hl,os_variables				000A7C 01 E7 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 4B 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 79 52 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD C9 34 00         A   110    				call hwsc_default_hw_settings
                           A   111    				
000A91 3A 3C 52 00         A   112    				ld a,(video_mode)
000A95 CD 85 28 00         A   113    				call set_vmode					                           A   114    
000A99 21 47 57 00         A   115    				ld hl,packed_font_start
000A9D ED5B 76 52 00       A   116    				ld de,(font_addr)
000AA2 01 DF 02 00         A   117    				ld bc,packed_font_end-packed_fo
000AA6 CD A9 15 00         A   118    				call unpack_rle
                           A   119    
000AAA 3E5F                A   120    				ld a,5fh
000AAC 32 62 52 00         A   121    				ld (req_cursor_image),a
                           A   122    
000AB0 21 82 49 00         A   123    				ld hl,welcome_message			000AB4 CD 25 0F 00         A   124    				call os_print_string
000AB8 CD CA 29 00         A   125    				call os_get_mem_high			000ABC EB                  A   126    				ex de,hl
000ABD CD F0 12 00         A   127    				call os_show_hex_address
                           A   128    
000AC1 CD B8 13 00         A   129    				call os_new_line
000AC5 CD B8 13 00         A   130    				call os_new_line
000AC9 CD BE 26 00         A   131    				call os_cmd_vers				000ACD CD B2 26 00         A   132    				call os_cmd_remount				                           A   133    
000AD1 CD B8 13 00         A   134    				call os_new_line				                           A   135    
000AD5 CD 46 36 00         A   136    				call purge_keyboard
                           A   137    				
000AD9 CD A6 2D 00         A   138    				call set_irq_vector
000ADD CD B8 2D 00         A   139    				call enable_os_irqs
000AE1 FB                  A   140    				ei
000AE2 CD 4B 2F 00         A   141    				call set_nmi_vector
                           A   142    				
000AE6 21 23 54 00         A   143    				ld hl,devices_connected			000AEA CB46                A   144    				bit 0,(hl)
000AEC 20 08               A   145    				jr nz,kb_present
000AEE 21 D0 4E 00         A   146    				ld hl,no_keyboard_msg
000AF2 CD EF 13 00         A   147    				call os_show_packed_text
000AF6                     A   148    kb_present				
000AF6 21 D2 49 00         A   149    				ld hl,startup_script_fn
000AFA 22 7B 55 00         A   150    				ld (os_args_loc),hl
000AFE CD EF 26 00         A   151    				call os_cmd_exec				000B02 AF                  A   152    				xor a
000B03 32 87 55 00         A   153    				ld (in_script_flag),a
                           A   154    									
000B07 3A 21 54 00         A   155    				ld a,(frozen)					000B0B B7                  A   156    				or a
000B0C 28 11               A   157    				jr z,os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0E AF                  A   158    				xor a
000B0F 32 21 54 00         A   159    				ld (frozen),a
000B13 21 2A 4A 00         A   160    				ld hl,nmi_freeze_txt
000B17 CD 25 0F 00         A   161    				call os_print_string
000B1B CD 09 22 00         A   162    				call os_cmd_r
                           A   163    				
                           A   164    	
                           A   165    ;==============================================
                           A   166    
000B1F                     A   167    os_main_loop
                           A   168    								
000B1F CD B9 34 00         A   169    				call hwsc_wait_vrt				                           A   170    
000B23 CD 76 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B27 CD 16 38 00         A   173    				call os_get_key_press
000B2B 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B2D 32 0E 56 00         A   176    				ld (current_scancode),a
000B31 78                  A   177    				ld a,b
000B32 32 0F 56 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B36 CD 01 33 00         A   180    				call hwsc_remove_cursor
000B3A 3E18                A   181    				ld a,24							000B3C 32 BC 54 00         A   182    				ld (cursorflashtimer),a			000B40 AF                  A   183    				xor a
000B41 32 BD 54 00         A   184    				ld (cursor_status),a
                           A   185    				
000B45 3A 0E 56 00         A   186    				ld a,(current_scancode)			000B49 FE70                A   187    				cp 70h
000B4B 20 16               A   188    				jr nz,os_notins
000B4D 3A 0D 56 00         A   189     				ld a,(insert_mode)
000B51 EE01                A   190    				xor 1
000B53 32 0D 56 00         A   191    				ld (insert_mode),a
000B57 3E5F                A   192    				ld a,5fh
000B59 28 02               A   193    				jr z,linecurs
000B5B 3E7F                A   194    				ld a,7fh
000B5D 32 62 52 00         A   195    linecurs		ld (req_cursor_image),a
000B61 18 BC               A   196    				jr os_main_loop
                           A   197    
000B63 21 BA 54 00         A   198    os_notins		ld hl,cursor_x					000B67 FE6B                A   199    				cp 06bh			
000B69 20 0E               A   200    				jr nz,os_ntlft
000B6B 35                  A   201    				dec (hl)
000B6C 7E                  A   202    				ld a,(hl)
000B6D FEFF                A   203    				cp 0ffh	
000B6F 20 AE               A   204    				jr nz,os_main_loop
000B71 3A 67 52 00         A   205    				ld a,(window_columns)
000B75 3D                  A   206    				dec a
000B76 77                  A   207    				ld (hl),a						000B77 18 A6               A   208    				jr os_main_loop
                           A   209    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B79 FE74                A   210    os_ntlft		cp 074h							000B7B 20 0C               A   211    				jr nz,os_ntrig
000B7D 34                  A   212    				inc (hl)
000B7E 3A 67 52 00         A   213    				ld a,(window_columns)
000B82 BE                  A   214    				cp (hl)
000B83 20 9A               A   215    				jr nz,os_main_loop
000B85 3600                A   216    				ld (hl),0						000B87 18 96               A   217    				jr os_main_loop
                           A   218    
000B89 21 B9 54 00         A   219    os_ntrig		ld hl,cursor_y
000B8D FE75                A   220    				cp 075h							000B8F 20 09               A   221    				jr nz,os_ntup
000B91 35                  A   222    				dec (hl)
000B92 CB7E                A   223    				bit 7,(hl)
000B94 28 89               A   224    				jr z,os_main_loop
000B96 3600                A   225    				ld (hl),0						000B98 18 85               A   226    				jr os_main_loop
                           A   227    
000B9A FE72                A   228    os_ntup			cp 072h
000B9C 20 14               A   229    				jr nz,os_ntdwn					000B9E 34                  A   230    				inc (hl)
000B9F 3A 64 52 00         A   231    				ld a,(window_rows)
000BA3 BE                  A   232    				cp (hl)
000BA4 C2 1F 0B 00         A   233    				jr nz,os_main_loop
000BA8 3D                  A   234    				dec a
000BA9 77                  A   235    				ld (hl),a						000BAA CD 30 31 00         A   236    				call hwsc_scroll_up
000BAE C3 1F 0B 00         A   237    				jr os_main_loop
                           A   238    
000BB2 FE71                A   239    os_ntdwn		cp 071h							000BB4 20 08               A   240    				jr nz,os_nodel		
000BB6 3A BA 54 00         A   241    				ld a,(cursor_x)					000BBA 47                  A   242    				ld b,a
000BBB 04                  A   243    				inc b
000BBC 18 13               A   244    				jr os_chrbk
                           A   245    
000BBE FE66                A   246    os_nodel		cp 066h							000BC0 20 17               A   247    				jr nz,os_nbksp
000BC2 3A BA 54 00         A   248    				ld a,(cursor_x)					000BC6 B7                  A   249    				or a							000BC7 CA 1F 0B 00         A   250    				jp z,os_main_loop
000BCB 47                  A   251    				ld b,a
000BCC 3D                  A   252    				dec a
000BCD 32 BA 54 00         A   253    				ld (cursor_x),a					000BD1 CD CA 33 00         A   254    os_chrbk		call hwsc_chars_left			000BD5 C3 1F 0B 00         A   255    				jp os_main_loop
                           A   256    
000BD9 FE5A                A   257    os_nbksp		cp 05ah							000BDB CA 22 0C 00         A   258    				jp z,os_enter_pressed
                           A   259    	
000BDF 3A 0F 56 00         A   260    				ld a,(current_asciicode)		000BE3 B7                  A   261    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BE4 28 38               A   262    				jr z,os_nvdun					                           A   263    
000BE6 FE7B                A   264    				cp 07bh							000BE8 30 12               A   265    				jr nc,os_gtcha					000BEA FE61                A   266    				cp 061h
000BEC 38 04               A   267    				jr c,os_ntupc
000BEE D620                A   268    				sub 020h
000BF0 18 0A               A   269    				jr os_gtcha
000BF2 FE5B                A   270    os_ntupc		cp 05bh
000BF4 30 06               A   271    				jr nc,os_gtcha
000BF6 FE41                A   272    				cp 041h
000BF8 38 02               A   273    				jr c,os_gtcha
000BFA C620                A   274    				add a,020h
000BFC 57                  A   275    os_gtcha		ld d,a							000BFD 3A 0D 56 00         A   276    				ld a,(insert_mode)				000C01 B7                  A   277    				or a
000C02 CC 11 34 00         A   278    				call z,hwsc_chars_right
                           A   279    				
000C06 ED4B B9 54 00       A   280    os_schi			ld bc,(cursor_pos)				000C0B 7A                  A   281    				ld a,d							000C0C CD D4 31 00         A   282    				call hwsc_plot_char		
000C10 21 BA 54 00         A   283    				ld hl,cursor_x					000C14 34                  A   284    				inc (hl)
000C15 3A 67 52 00         A   285    				ld a,(window_columns)
000C19 BE                  A   286    				cp (hl)							000C1A 20 02               A   287    				jr nz,os_nvdun
000C1C 3600                A   288    				ld (hl),0
                           A   289    
000C1E C3 1F 0B 00         A   290    os_nvdun		jp os_main_loop
                           A   291    	
                           A   292    
                           A   293    ;----------------------------------------------
                           A   294    
000C22                     A   295    os_enter_pressed
                           A   296    	
000C22 CD 9C 34 00         A   297    				call hwsc_charline_to_command_s
                           A   298    
000C26 AF                  A   299    				xor a
000C27 32 BA 54 00         A   300    				ld (cursor_x),a					000C2B 21 B9 54 00         A   301    				ld hl,cursor_y					000C2F 34                  A   302    				inc (hl)
000C30 3A 64 52 00         A   303    				ld a,(window_rows)
000C34 BE                  A   304    				cp (hl)
000C35 20 06               A   305    				jr nz,os_esdok
000C37 3D                  A   306    				dec a
000C38 77                  A   307    				ld (hl),a
000C39 CD 30 31 00         A   308    				call hwsc_scroll_up
                           A   309    
000C3D CD 4A 0C 00         A   310    os_esdok		call os_parse_cmd_chk_ps		                           A   311    
000C41 AF                  A   312    post_csb		xor a
000C42 32 87 55 00         A   313    				ld (in_script_flag),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C46 C3 1F 0B 00         A   314    				jp os_main_loop
                           A   315    
                           A   316    	
                           A   317    ;----------------------------------------------
                           A   318    
                           A   319    
000C4A                     A   320    os_parse_cmd_chk_ps
                           A   321    
000C4A CD 5D 0C 00         A   322    				call os_parse_command_line
000C4E FEFE                A   323    				cp 0feh							000C50 C0                  A   324    				ret nz
000C51 01500000            A   325    				ld bc,max_buffer_chars			000C55 11 D7 54 00         A   326    				ld de,commandstring				000C59 EDB0                A   327    				ldir
000C5B 18 ED               A   328    				jr os_parse_cmd_chk_ps
                           A   329    
                           A   330    	
                           A   331    ;----------------------------------------------
                           A   332    	
000C5D                     A   333    os_parse_command_line
                           A   334    
000C5D 3E01                A   335    				ld a,1
000C5F 32 52 54 00         A   336    				ld (store_registers),a			                           A   337    
000C63 21 D7 54 00         A   338    				ld hl,commandstring				000C67 0650                A   339    				ld b,max_buffer_chars			000C69 CD BB 0F 00         A   340    				call os_scan_for_non_space		000C6D B7                  A   341    				or a							000C6E C8                  A   342    				ret z
000C6F 11 47 4A 00         A   343    				ld de,dictionary-1				000C73 D5                  A   344    				push de
000C74 D1                  A   345    compcstr		pop de
000C75 E5                  A   346    				push hl
000C76 FDE1                A   347    				pop iy
000C78 13                  A   348    notacmd			inc de
000C79 1A                  A   349    				ld a,(de)
000C7A FE01                A   350    				cp 1							000C7C CA 16 0D 00         A   351    				jp z,os_no_kernal_command_found
000C80 CB7F                A   352    				bit 7,a
000C82 28 F4               A   353    				jr z,notacmd					000C84 E67F                A   354    				and 07fh
000C86 4F                  A   355    				ld c,a							000C87 D5                  A   356    				push de
000C88 13                  A   357    cmdnscan		inc de
000C89 FD7E00              A   358    				ld a,(iy)						000C8C CD 19 12 00         A   359    				call os_uppercasify
000C90 47                  A   360    				ld b,a
000C91 1A                  A   361    				ld a,(de)						000C92 B8                  A   362    				cp b
000C93 FD23                A   363    				inc iy
000C95 28 F1               A   364    				jr z,cmdnscan					000C97 1A                  A   365    nomatch			ld a,(de)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C98 B7                  A   366    				or a
000C99 28 04               A   367    				jr z,posmatch					000C9B CB7F                A   368    				bit 7,a			
000C9D 28 D5               A   369    				jr z,compcstr					000C9F FD7EFF              A   370    posmatch		ld a,(iy-1)						000CA2 FE20                A   371    				cp 32
000CA4 20 CE               A   372    				jr nz,compcstr					                           A   373    	
000CA6 D1                  A   374    				pop de				
000CA7 FDE5                A   375    				push iy							000CA9 E1                  A   376    				pop hl
000CAA CD BB 0F 00         A   377    				call os_scan_for_non_space
000CAE 22 7B 55 00         A   378    				ld (os_args_loc),hl				                           A   379    	
000CB2 21 CE 4F 00         A   380    				ld hl,os_cmd_locs
000CB6 11030000            A   381    				ld de,3
000CBA 51                  A   382    				ld d,c
000CBB ED5C                A   383    				mlt de							000CBD 19                  A   384    				add hl,de
000CBE ED37                A   385    				ld ix,(hl)						                           A   386    
000CC0 2A 7B 55 00         A   387    				ld hl,(os_args_loc)				000CC4 CD F8 0E 00         A   388    				call os_run_command				                           A   389    
000CC8 C8                  A   390    				ret z							000CC9 B7                  A   391    				or a
000CCA 20 13               A   392    				jr nz,show_erm
000CCC 78                  A   393    os_hwe1			ld a,b							000CCD 21 47 4D 00         A   394    os_hwerr		ld hl,hex_byte_txt		
000CD1 CD 68 10 00         A   395    				call hexbyte_to_ascii	
000CD5 21 C3 4E 00         A   396    				ld hl,hw_err_msg
000CD9 CD EF 13 00         A   397    				call os_show_packed_text
000CDD AF                  A   398    				xor a
000CDE C9                  A   399    				ret
                           A   400    
000CDF 01000000            A   401    show_erm		ld bc,0							000CE3 4F                  A   402    				ld c,a
000CE4 D680                A   403    				sub 080h						000CE6 38 11               A   404    				jr c,no_trans					000CE8 21 ED 50 00         A   405    				ld hl,kernal_error_code_transla
000CEC CB77                A   406    				bit 6,a							000CEE 28 06               A   407    				jr z,not_fs_err					000CF0 21 F9 50 00         A   408    				ld hl,fs_error_code_translation
000CF4 D640                A   409    				sub 040h
000CF6 4F                  A   410    not_fs_err		ld c,a
000CF7 09                  A   411    				add hl,bc
000CF8 4E                  A   412    				ld c,(hl)
000CF9 0600                A   413    no_trans		ld b,0
000CFB 21 31 50 00         A   414    				ld hl,packed_msg_list
000CFF 7E                  A   415    findmsg			ld a,(hl)
000D00 FEFF                A   416    				cp 0ffh
000D02 C8                  A   417    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D03 23                  A   418    				inc hl
000D04 B7                  A   419    				or a
000D05 20 F8               A   420    				jr nz,findmsg					000D07 04                  A   421    				inc b
000D08 79                  A   422    				ld a,c							000D09 B8                  A   423    				cp b
000D0A 20 F3               A   424    				jr nz,findmsg
000D0C CD EF 13 00         A   425    				call os_show_packed_text
000D10 CD B8 13 00         A   426    				call os_new_line
000D14 AF                  A   427    				xor a
000D15 C9                  A   428    				ret
                           A   429    	
                           A   430    
000D16                     A   431    os_no_kernal_command_found
                           A   432    
000D16 3E30                A   433    				ld a,030h						000D18 32 E6 52 00         A   434    fvolcmd			ld (vol_txt+4),a				000D1C F5                  A   435    				push af			
000D1D 11 E3 52 00         A   436    				ld de,vol_txt+1		
000D21 0605                A   437    				ld b,5			
000D23 CD DF 11 00         A   438    				call os_compare_strings	
000D27 28 08               A   439    				jr z,gotvolcmd		
000D29 F1                  A   440    				pop af				
000D2A 3C                  A   441    				inc a			
000D2B FE38                A   442    				cp 030h+max_volumes		
000D2D 20 E9               A   443    				jr nz,fvolcmd		
000D2F 18 0B               A   444    				jr novolcmd		
000D31 F1                  A   445    gotvolcmd		pop af
000D32 D630                A   446    				sub 030h
000D34 CD 96 1A 00         A   447    				call os_change_volume
000D38 C3 DD 0E 00         A   448    				jp extcmderf					                           A   449    		
                           A   450    
                           A   451    
000D3C 7E                  A   452    novolcmd		ld a,(hl)						000D3D FE47                A   453    				cp 'G'							000D3F 20 29               A   454    				jr nz,not_g_cmd					000D41 23                  A   455    				inc hl
000D42 7E                  A   456    				ld a,(hl)
000D43 2B                  A   457    				dec hl
000D44 FE20                A   458    				cp ' '
000D46 20 22               A   459    				jr nz,not_g_cmd
000D48 23                  A   460    				inc hl
000D49 CD BB 0F 00         A   461    				call os_scan_for_non_space
000D4D 22 7B 55 00         A   462    				ld (os_args_loc),hl				000D51 B7                  A   463    				or a
000D52 20 04               A   464    				jr nz,gotgargs
000D54 3E1F                A   465    				ld a,01fh						000D56 18 87               A   466    				jr show_erm
000D58 CD A7 10 00         A   467    gotgargs		call ascii_to_hex_no_scan		000D5C B7                  A   468    				or a
000D5D 20 80               A   469    				jr nz,show_erm
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D5F CD 5A 2F 00         A   470    				call enable_nmi					000D63 D5                  A   471    				push de
000D64 DDE1                A   472    				pop ix			
000D66 C3 F8 0E 00         A   473    				jp os_run_command				                           A   474    				
                           A   475    				
                           A   476    
000D6A 22 7B 55 00         A   477    not_g_cmd		ld (os_args_loc),hl				000D6E 22 7E 55 00         A   478    				ld (os_args_pos_cache),hl
000D72 CD EF 0F 00         A   479    				call os_args_to_fn_append_ezp	                           A   480    	
000D76 CD 02 0F 00         A   481    				call cache_dir_block			                           A   482    
000D7A CD 29 3C 00         A   483    				call fs_check_disk_format		000D7E 38 3C               A   484    				jr c,os_ndfxc
000D80 B7                  A   485    				or a							000D81 20 39               A   486    				jr nz,os_ndfxc
                           A   487    	
000D83 CD CB 3D 00         A   488    				call fs_open_file_command		000D87 DA CD 0C 00         A   489    				jp c,os_hwerr			 		000D8B B7                  A   490    				or a
000D8C 28 38               A   491    				jr z,os_gecmd					                           A   492    
000D8E CD 9C 3D 00         A   493    				call fs_goto_root_dir_command	000D92 21 C9 49 00         A   494    				ld hl,os_dos_cmds_txt
000D96 CD 2A 46 00         A   495    				call fs_hl_to_filename
000D9A CD 77 3D 00         A   496    				call fs_change_dir_command		000D9E DA CD 0C 00         A   497    				jp c,os_hwerr
000DA2 B7                  A   498    				or a
000DA3 20 17               A   499    				jr nz,os_ndfxc					                           A   500    	
000DA5 2A 7E 55 00         A   501    				ld hl,(os_args_pos_cache)		000DA9 22 7B 55 00         A   502    				ld (os_args_loc),hl
000DAD CD EF 0F 00         A   503    				call os_args_to_fn_append_ezp	000DB1 CD CB 3D 00         A   504    				call fs_open_file_command		000DB5 DA CD 0C 00         A   505    				jp c,os_hwerr
000DB9 B7                  A   506    				or a
000DBA 28 0A               A   507    				jr z,os_gecmd
000DBC CD 0E 0F 00         A   508    os_ndfxc		call restore_dir_block			000DC0 3E0B                A   509    				ld a,0bh						000DC2 C3 DF 0C 00         A   510    				jp show_erm
                           A   511    
000DC6 2A 7B 55 00         A   512    os_gecmd		ld hl,(os_args_loc)				000DCA CD BB 0F 00         A   513    				call os_scan_for_non_space		000DCE 22 7B 55 00         A   514    				ld (os_args_loc),hl
                           A   515    
000DD2 11100000            A   516    				ld de,16
000DD6 CD 0E 16 00         A   517    				call os_set_load_length			000DDA 21 26 5C 00         A   518    				ld hl,scratch_pad
000DDE 22 8A 48 00         A   519    				ld (fs_ez80_address),hl
000DE2 CD 16 3E 00         A   520    				call fs_read_data_command
000DE6 DA CD 0C 00         A   521    				jp c,os_hwerr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DEA B7                  A   522    				or a
000DEB C2 DF 0C 00         A   523    				jp nz,show_erm					000DEF 2A 28 5C 00         A   524    				ld hl,(scratch_pad+2)
000DF3 1150524F            A   525    				ld de,04f5250h					000DF7 AF                  A   526    				xor a	
000DF8 ED52                A   527    				sbc hl,de
000DFA 28 0A               A   528    				jr z,loc_header
000DFC CD 0E 0F 00         A   529    				call restore_dir_block			000E00 3E1A                A   530    				ld a,01ah						000E02 C3 DF 0C 00         A   531    				jp show_erm						                           A   532    				
000E06 3A 35 5C 00         A   533    loc_header		ld a,(scratch_pad+15)			000E0A 32 51 54 00         A   534    				ld (store_adl),a			
000E0E CD CB 3D 00         A   535    				call fs_open_file_command		000E12 DA CD 0C 00         A   536    				jp c,os_hwerr
000E16 B7                  A   537    				or a	
000E17 20 A3               A   538    				jr nz,os_ndfxc
000E19 2A 2B 5C 00         A   539    				ld hl,(scratch_pad+5)			000E1D 22 8A 48 00         A   540    				ld (fs_ez80_address),hl
000E21 ED5B 24 54 00       A   541    				ld de,(sys_ram_high)
000E26 AF                  A   542    				xor a
000E27 E5                  A   543    				push hl
000E28 ED52                A   544    				sbc hl,de
000E2A E1                  A   545    				pop hl
000E2B 30 0A               A   546    				jr nc,osmemok
000E2D CD 0E 0F 00         A   547    				call restore_dir_block			000E31 3E26                A   548    				ld a,026h
000E33 C3 DF 0C 00         A   549    				jp show_erm
                           A   550    
000E37 ED5B 31 5C 00       A   551    osmemok			ld de,(scratch_pad+11)			000E3C 7B                  A   552    				ld a,e
000E3D B2                  A   553    				or d
000E3E 28 14               A   554    				jr z,noprov_spec				000E40 212B0000            A   555    				ld hl,prose_version
000E44 AF                  A   556    				xor a
000E45 40ED52              A   557    				sbc.sis hl,de					000E48 30 0A               A   558    				jr nc,noprov_spec
000E4A CD 0E 0F 00         A   559    				call restore_dir_block
000E4E 3E1B                A   560    				ld a,01bh						000E50 C3 DF 0C 00         A   561    				jp show_erm
                           A   562    				
000E54 CD 0C 35 00         A   563    noprov_spec		call hwsc_get_version			000E58 2A 33 5C 00         A   564    				ld hl,(scratch_pad+13)			000E5C EB                  A   565    				ex de,hl						000E5D 7B                  A   566    				ld a,e
000E5E B2                  A   567    				or d
000E5F 28 10               A   568    				jr z,nohwv_spec					000E61 AF                  A   569    				xor a
000E62 40ED52              A   570    				sbc.sis hl,de					000E65 30 0A               A   571    				jr nc,nohwv_spec
000E67 CD 0E 0F 00         A   572    				call restore_dir_block
000E6B 3E2B                A   573    				ld a,02bh						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E6D C3 DF 0C 00         A   574    				jp show_erm
                           A   575    
000E71 ED5B 2E 5C 00       A   576    nohwv_spec		ld de,(scratch_pad+8)			000E76 3A 30 5C 00         A   577    				ld a,(scratch_pad+10)			000E7A B2                  A   578    				or d
000E7B B3                  A   579    				or e
000E7C 28 04               A   580    				jr z,readcode					000E7E CD 0E 16 00         A   581    				call os_set_load_length			                           A   582    		
000E82 2A 2B 5C 00         A   583    readcode		ld hl,(scratch_pad+5)
000E86 22 84 55 00         A   584    				ld (os_extcmd_jmp_addr),hl		000E8A CD 16 3E 00         A   585    				call fs_read_data_command
000E8E F5                  A   586    				push af
000E8F CD 0E 0F 00         A   587    				call restore_dir_block			000E93 F1                  A   588    				pop af
000E94 DA CD 0C 00         A   589    				jp c,os_hwerr					000E98 B7                  A   590    				or a
000E99 C2 DF 0C 00         A   591    				jp nz,show_erm					                           A   592    	
000E9D CD 5A 2F 00         A   593    				call enable_nmi					000EA1 DD2A 84 55 00       A   594    				ld ix,(os_extcmd_jmp_addr)		000EA6 2A 7B 55 00         A   595    				ld hl,(os_args_loc)				000EAA C3 F8 0E 00         A   596    				jp os_run_command				                           A   597    
000EAE F5                  A   598    extcmd_return	push af							000EAF CD C9 34 00         A   599    				call hwsc_default_hw_settings	000EB3 3A 52 54 00         A   600    				ld a,(store_registers)
000EB7 B7                  A   601    				or a
000EB8 28 06               A   602    				jr z,skp_strg
000EBA F1                  A   603    				pop af
000EBB CD 31 13 00         A   604    				call os_store_CPU_regs			000EBF F5                  A   605    				push af
000EC0 F1                  A   606    skp_strg		pop af
                           A   607    
000EC1 F5                  A   608    cntuasr			push af
000EC2 21 26 5C 00         A   609    				ld hl,scratch_pad				000EC6 CD 68 10 00         A   610    				call hexbyte_to_ascii
000ECA 3600                A   611    				ld (hl),0
000ECC 11 26 5C 00         A   612    				ld de,scratch_pad
000ED0 21 42 4A 00         A   613    				ld hl,error_txt
000ED4 CD 41 1B 00         A   614    				call os_set_envar
000ED8 CD 63 2F 00         A   615    				call disable_nmi				000EDC F1                  A   616    				pop af
000EDD 28 12               A   617    extcmderf		jr z,not_errc					000EDF B7                  A   618    				or a
000EE0 CA CC 0C 00         A   619    				jp z,os_hwe1					000EE4 FEFF                A   620    				cp 0ffh							000EE6 CA 48 0A 00         A   621    				jp z,os_cold_start
000EEA FEFE                A   622    				cp 0feh							000EEC C8                  A   623    				ret z
000EED C3 DF 0C 00         A   624    				jp show_erm						000EF1 FEFF                A   625    not_errc		cp 0ffh							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EF3 CA 48 0A 00         A   626    				jp z,os_cold_start
000EF7 C9                  A   627    				ret
                           A   628    				
                           A   629    ;----------------------------------------------
                           A   630    
000EF8                     A   631    os_run_command									000EF8 ED3906              A   632    				out0 (port_nmi_ack),a			000EFB DD22 53 54 00       A   633    				ld (com_start_addr),ix			000F00 DDE9                A   634    				jp (ix)							                           A   635    
                           A   636    ;----------------------------------------------
                           A   637    
000F02                     A   638    cache_dir_block
                           A   639    
                           A   640    	
000F02 D5                  A   641    				push de
000F03 CD 3A 1A 00         A   642    				call fs_get_dir_cluster	
000F07 ED53 81 55 00       A   643    				ld (os_dir_block_cache),de
000F0C D1                  A   644    				pop de	
000F0D C9                  A   645    				ret
                           A   646    		
                           A   647    
000F0E                     A   648    restore_dir_block
                           A   649    
000F0E D5                  A   650    				push de
000F0F ED5B 81 55 00       A   651    				ld de,(os_dir_block_cache)
000F14 CD 46 1A 00         A   652    				call fs_update_dir_cluster
000F18 D1                  A   653    				pop de
000F19 C9                  A   654    				ret
                           A   655    		
                           A   656    ;==============================================
                           A   657    ; Routines called by command line
                           A   658    ;==============================================
                           A   659    
                           A   660    ; Set:-
                           A   661    ; HL to address of string
                           A   662    ; c = y
                           A   663    ; b = x
                           A   664    
000F1A                     A   665    ext_print_string
                           A   666    
000F1A CC 72 15 00         A   667    				call z,mbase_hl
000F1E 18 05               A   668    				jr os_print_string
                           A   669    
000F20                     A   670    os_print_string_cond
                           A   671    
000F20 CD ED 19 00         A   672    				call test_quiet_mode
000F24 C0                  A   673    				ret nz
                           A   674    
000F25                     A   675    os_print_string
                           A   676    
000F25 D5                  A   677    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F26 C5                  A   678    				push bc
000F27 ED4B B9 54 00       A   679    				ld bc,(cursor_pos)				000F2C 7E                  A   680    prstr_lp		ld a,(hl)
000F2D 23                  A   681    				inc hl
000F2E B7                  A   682    				or a
000F2F 20 09               A   683    				jr nz,prstr_ne
000F31 ED43 B9 54 00       A   684    				ld (cursor_pos),bc
000F36 C1                  A   685    				pop bc
000F37 D1                  A   686    				pop de
000F38 AF                  A   687    				xor a							000F39 C9                  A   688    				ret
                           A   689    
000F3A FE0D                A   690    prstr_ne		cp 13
000F3C 20 04               A   691    				jr nz,not_cr
000F3E 0600                A   692    				ld b,0
000F40 18 EA               A   693    				jr prstr_lp
000F42 FE0A                A   694    not_cr			cp 10
000F44 28 12               A   695    				jr z,line_feed				
000F46 FE0B                A   696    				cp 11
000F48 28 0C               A   697    				jr z,next_line
000F4A CD D4 31 00         A   698    				call hwsc_plot_char
000F4E 04                  A   699    				inc b
000F4F 3A 67 52 00         A   700    				ld a,(window_columns)
000F53 B8                  A   701    				cp b
000F54 20 D6               A   702    				jr nz,prstr_lp
000F56 0600                A   703    next_line		ld b,0
000F58 0C                  A   704    line_feed		inc c
000F59 3A 64 52 00         A   705    				ld a,(window_rows)
000F5D B9                  A   706    				cp c
000F5E 20 CC               A   707    				jr nz,prstr_lp
000F60 0D                  A   708    				dec c
000F61 CD 30 31 00         A   709    				call hwsc_scroll_up
000F65 18 C5               A   710    				jr prstr_lp
                           A   711    
                           A   712    ;----------------------------------------------
                           A   713    
000F67 21 E6 55 00         A   714    os_print_char	ld hl,char_to_print
000F6B 77                  A   715    				ld (hl),a
000F6C 18 B7               A   716    				jr os_print_string
                           A   717    
                           A   718    ;----------------------------------------------
                           A   719    
000F6E F5                  A   720    home_cursor		push af
000F6F AF                  A   721    				xor a
000F70 32 BA 54 00         A   722    				ld (cursor_x),a
000F74 F1                  A   723    				pop af
000F75 C9                  A   724    				ret
                           A   725    				
                           A   726    ;----------------------------------------------
                           A   727    
000F76                     A   728    os_cursor_flash
                           A   729    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F76 21 BC 54 00         A   730    				ld hl,cursorflashtimer
000F7A 34                  A   731    				inc (hl)
000F7B 7E                  A   732    				ld a,(hl)
000F7C FE19                A   733    				cp 25
000F7E C0                  A   734    				ret nz
000F7F 3600                A   735    				ld (hl),0
000F81 3A BD 54 00         A   736    				ld a,(cursor_status)
000F85 EE01                A   737    				xor 1
000F87 32 BD 54 00         A   738    				ld (cursor_status),a
000F8B 28 05               A   739    				jr z,no_cursor
000F8D CD 14 33 00         A   740    				call hwsc_draw_cursor			000F91 C9                  A   741    				ret
000F92 CD 01 33 00         A   742    no_cursor		call hwsc_remove_cursor
000F96 C9                  A   743    				ret
                           A   744    
                           A   745    ;----------------------------------------------
                           A   746    
000F97                     A   747    os_refresh_screen
                           A   748    
000F97 0E00                A   749    				ld c,0							000F99 CD 74 34 00         A   750    rs_yloop		call hwsc_redraw_ui_line
000F9D 0C                  A   751    				inc c
000F9E 3A 64 52 00         A   752    				ld a,(window_rows)		
000FA2 B9                  A   753    				cp c
000FA3 20 F4               A   754    				jr nz,rs_yloop
000FA5 C9                  A   755    				ret
                           A   756    
                           A   757    ;----------------------------------------------
                           A   758    
000FA6                     A   759    os_next_arg
                           A   760    
000FA6 CD B2 0F 00         A   761    				call os_scan_for_space
000FAA B7                  A   762    				or a
000FAB C8                  A   763    				ret z
000FAC CD BB 0F 00         A   764    				call os_scan_for_non_space
000FB0 B7                  A   765    				or a
000FB1 C9                  A   766    				ret
                           A   767    
                           A   768    
                           A   769    ;----------------------------------------------
                           A   770    	
                           A   771    
000FB2                     A   772    os_scan_for_space
                           A   773    
000FB2 7E                  A   774    os_sfspl 		ld a,(hl)						000FB3 B7                  A   775    				or a							000FB4 C8                  A   776    				ret z
000FB5 FE20                A   777    				cp ' '
000FB7 C8                  A   778    				ret z
000FB8 23                  A   779    				inc hl
000FB9 18 F7               A   780    				jr os_sfspl
                           A   781    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   782    
                           A   783    ;----------------------------------------------
                           A   784    	
                           A   785    
000FBB                     A   786    os_scan_for_non_space
                           A   787    
000FBB 2B                  A   788    				dec hl							000FBC 23                  A   789    os_nsplp		inc hl			
000FBD 7E                  A   790    				ld a,(hl)			
000FBE B7                  A   791    				or a			
000FBF C8                  A   792    				ret z							000FC0 FE20                A   793    				cp ' '
000FC2 28 F8               A   794    				jr z,os_nsplp
000FC4 C9                  A   795    				ret
                           A   796    	
                           A   797    	
                           A   798    ;----------------------------------------------
                           A   799    
000FC5                     A   800    os_args_to_alt_filename
                           A   801    
000FC5 CD 1F 10 00         A   802    				call os_atfn_pre				000FC9 C8                  A   803    				ret z
000FCA CD 24 46 00         A   804    				call fs_hl_to_alt_filename
000FCE 18 09               A   805    				jr os_atfrl
                           A   806    	
                           A   807    	
                           A   808    	
                           A   809    		
000FD0                     A   810    os_args_to_filename
                           A   811    
000FD0 CD 1F 10 00         A   812    				call os_atfn_pre				000FD4 C8                  A   813    				ret z
000FD5 CD 2A 46 00         A   814    				call fs_hl_to_filename	
                           A   815    
000FD9 7E                  A   816    os_atfrl		ld a,(hl)						000FDA B7                  A   817    				or a							000FDB 28 0B               A   818    				jr z,os_cfne
000FDD FE20                A   819    				cp 32
000FDF 28 07               A   820    				jr z,os_cfne
000FE1 FE2F                A   821    				cp 02fh
000FE3 28 03               A   822    				jr z,os_cfne
000FE5 23                  A   823    				inc hl
000FE6 18 F1               A   824    				jr os_atfrl	
000FE8 22 7B 55 00         A   825    os_cfne			ld (os_args_loc),hl				000FEC 79                  A   826    				ld a,c			
000FED B7                  A   827    				or a							000FEE C9                  A   828    				ret
                           A   829    
                           A   830    
                           A   831    
                           A   832    
000FEF                     A   833    os_args_to_fn_append_ezp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   834    
                           A   835    	
000FEF CD 1F 10 00         A   836    				call os_atfn_pre				000FF3 C8                  A   837    				ret z
000FF4 11 56 54 00         A   838    				ld de,temp_string
000FF8 7E                  A   839    ccmdtlp			ld a,(hl)						000FF9 B7                  A   840    				or a
000FFA 28 0D               A   841    				jr z,goteocmd
000FFC FE20                A   842    				cp ' '
000FFE 28 09               A   843    				jr z,goteocmd
001000 FE2E                A   844    				cp '.'
001002 28 05               A   845    				jr z,goteocmd
001004 12                  A   846    				ld (de),a
001005 13                  A   847    				inc de
001006 23                  A   848    				inc hl
001007 18 EF               A   849    				jr ccmdtlp
                           A   850    	
001009 E5                  A   851    goteocmd		push hl
00100A 21 1C 4A 00         A   852    				ld hl,ezp_extension_txt
00100E 01050000            A   853    				ld bc,5
001012 EDB0                A   854    				ldir 
001014 21 56 54 00         A   855    				ld hl,temp_string
001018 CD 2A 46 00         A   856    				call fs_hl_to_filename
00101C E1                  A   857    				pop hl
00101D 18 BA               A   858    				jr os_atfrl
                           A   859    	
                           A   860    
                           A   861    
                           A   862    
00101F                     A   863    os_atfn_pre
                           A   864    
00101F 2A 7B 55 00         A   865    				ld hl,(os_args_loc)				001023 CD BB 0F 00         A   866    				call os_scan_for_non_space
001027 B7                  A   867    				or a
001028 C8                  A   868    				ret z
001029 7E                  A   869    				ld a,(hl)
00102A FE2F                A   870    				cp 02fh							00102C 20 01               A   871    				jr nz,notfsl1
00102E 23                  A   872    				inc hl
00102F AF                  A   873    notfsl1			xor a
001030 3C                  A   874    				inc a
001031 C9                  A   875    				ret
                           A   876    
                           A   877    
                           A   878    ;--------- Number <-> String functions --------
                           A   879    
                           A   880    
001032                     A   881    os_clear_output_line
                           A   882    
001032 C5                  A   883    				push bc
001033 E5                  A   884    				push hl			
001034 21 29 55 00         A   885    				ld hl,output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001038 01500000            A   886    				ld bc,max_buffer_chars
00103C 3E20                A   887    				ld a,32
00103E CD 4B 15 00         A   888    				call os_bchl_memfill
001042 E1                  A   889    				pop hl
001043 C1                  A   890    				pop bc
001044 C9                  A   891    				ret
                           A   892    	
                           A   893    	
                           A   894    	
001045                     A   895    os_skip_leading_ascii_zeros
                           A   896    
001045 7E                  A   897    slazlp			ld a,(hl)						001046 FE30                A   898    				cp '0'							001048 C0                  A   899    				ret nz
001049 23                  A   900    				inc hl
00104A 10 F9               A   901    				djnz slazlp
00104C C9                  A   902    				ret
                           A   903    	
                           A   904    
                           A   905    
00104D                     A   906    os_leading_ascii_zeros_to_spaces
                           A   907    
00104D E5                  A   908    				push hl
00104E 7E                  A   909    clazlp			ld a,(hl)						00104F FE30                A   910    				cp '0'							001051 20 05               A   911    				jr nz,claze	
001053 3620                A   912    				ld (hl),' '
001055 23                  A   913    				inc hl
001056 10 F6               A   914    				djnz clazlp
001058 E1                  A   915    claze			pop hl
001059 C9                  A   916    				ret
                           A   917    	
                           A   918    
                           A   919    
                           A   920    		
00105A                     A   921    n_hexbytes_to_ascii
                           A   922    
00105A 1A                  A   923    				ld a,(de)						00105B CD 68 10 00         A   924    				call hexbyte_to_ascii			00105F 1B                  A   925    				dec de
001060 10 F8               A   926    				djnz n_hexbytes_to_ascii
001062 C9                  A   927    				ret
                           A   928    			
                           A   929    			
                           A   930    
001063                     A   931    ext_hexbyte_to_ascii
                           A   932    
001063 CC 72 15 00         A   933    				call z,mbase_hl
001067 7B                  A   934    				ld a,e
                           A   935    
001068                     A   936    hexbyte_to_ascii
                           A   937    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001068 C5                  A   938    				push bc
001069 47                  A   939    				ld b,a							00106A CB3F                A   940    				srl a							00106C CB3F                A   941    				srl a
00106E CB3F                A   942    				srl a
001070 CB3F                A   943    				srl a
001072 CD 84 10 00         A   944    				call hxdigconv
001076 77                  A   945    				ld (hl),a
001077 23                  A   946    				inc hl
001078 78                  A   947    				ld a,b
001079 E60F                A   948    				and 0fh
00107B CD 84 10 00         A   949    				call hxdigconv
00107F 77                  A   950    				ld (hl),a
001080 23                  A   951    				inc hl
001081 C1                  A   952    				pop bc
001082 AF                  A   953    				xor a							001083 C9                  A   954    				ret
                           A   955    				
001084 C630                A   956    hxdigconv		add a,030h
001086 FE3A                A   957    				cp 03ah
001088 38 02               A   958    				jr c,hxdone
00108A C607                A   959    				add a,7
00108C C9                  A   960    hxdone			ret
                           A   961    
                           A   962    
                           A   963    
                           A   964    
00108D                     A   965    hexword_to_ascii	
                           A   966    
00108D 7A                  A   967    				ld a,d							00108E CD 68 10 00         A   968    				call hexbyte_to_ascii
001092 7B                  A   969    				ld a,e
001093 CD 68 10 00         A   970    				call hexbyte_to_ascii
001097 C9                  A   971    				ret
                           A   972    	
                           A   973    
                           A   974    
                           A   975    
001098                     A   976    ext_ascii_to_hexword
                           A   977    		
001098 CC 72 15 00         A   978    				call z,mbase_hl
                           A   979    
00109C                     A   980    ascii_to_hexword
                           A   981    	
00109C CD BB 0F 00         A   982    				call os_scan_for_non_space		0010A0 B7                  A   983    				or a
0010A1 20 04               A   984    				jr nz,ascii_to_hex_no_scan
0010A3 3E81                A   985    				ld a,081h						0010A5 B7                  A   986    				or a
0010A6 C9                  A   987    				ret	
                           A   988    
                           A   989    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010A7                     A   990    ascii_to_hex_no_scan
                           A   991    
0010A7 DDE5                A   992    				push ix
0010A9 C5                  A   993    				push bc
0010AA DD210000 00         A   994    				ld ix,0
0010AF 0606                A   995    				ld b,6							0010B1 CD DD 10 00         A   996    athlp			call ascii_to_hex_digit
0010B5 FEF0                A   997    				cp 0f0h							0010B7 28 17               A   998    				jr z,athend
0010B9 FED0                A   999    				cp 0d0h
0010BB 28 13               A  1000    				jr z,athend						0010BD FE10                A  1001    				cp 16
0010BF 30 17               A  1002    				jr nc,badhex					0010C1 DD29                A  1003    				add ix,ix						0010C3 DD29                A  1004    				add ix,ix
0010C5 DD29                A  1005    				add ix,ix
0010C7 DD29                A  1006    				add ix,ix
0010C9 DDB5                A  1007    				or a,ixl
0010CB DD6F                A  1008    				ld ixl,a
0010CD 23                  A  1009    				inc hl
0010CE 10 E1               A  1010    				djnz athlp
0010D0 DDE5                A  1011    athend			push ix
0010D2 D1                  A  1012    				pop de
0010D3 AF                  A  1013    				xor a
0010D4 C1                  A  1014    ath_quit		pop bc
0010D5 DDE1                A  1015    				pop ix							0010D7 C9                  A  1016    				ret
                           A  1017    		
0010D8 3E82                A  1018    badhex			ld a,82h						0010DA B7                  A  1019    				or a
0010DB 18 F7               A  1020    				jr ath_quit
                           A  1021    				
                           A  1022    	
                           A  1023    		
0010DD                     A  1024    ascii_to_hex_digit
                           A  1025    
0010DD 7E                  A  1026    				ld a,(hl)						0010DE FE61                A  1027    				cp 061h
0010E0 38 02               A  1028    				jr c,hc_uppercase
0010E2 D620                A  1029    				sub 020h						0010E4 D63A                A  1030    hc_uppercase	sub 03ah						0010E6 38 02               A  1031    				jr c,zeronine
0010E8 C6F9                A  1032    				add a,0f9h
0010EA C60A                A  1033    zeronine		add a,0ah
0010EC C9                  A  1034    				ret
                           A  1035    
                           A  1036    
                           A  1037    ;--------- Text Input / Non-numeric string func
                           A  1038    
                           A  1039    ; Waits for user to enter a string of character
                           A  1040    ; Before calling, set:  HL = destination of str
                           A  1041    ;                        E = max number of char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1042    ; Returns:   A  = number of characters in enter
                           A  1043    
                           A  1044    
0010ED                     A  1045    ext_user_input
0010ED CC 72 15 00         A  1046    				call z,mbase_hl
                           A  1047    				
0010F1                     A  1048    os_user_input
0010F1 AF                  A  1049    				xor a
0010F2 32 37 52 00         A  1050    				ld (ui_index),a
0010F6 22 39 52 00         A  1051    				ld (ui_string_addr),hl
0010FA 7B                  A  1052    				ld a,e
0010FB 32 38 52 00         A  1053    				ld (ui_maxchars),a
                           A  1054    				
0010FF 3A 0D 56 00         A  1055    				ld a,(insert_mode)
001103 32 D6 54 00         A  1056    				ld (ui_im_cache),a
001107 AF                  A  1057    				xor a
001108 32 0D 56 00         A  1058    				ld (insert_mode),a				                           A  1059    				
00110C CD 14 33 00         A  1060    ui_loop			call hwsc_draw_cursor			001110 CD CF 37 00         A  1061    				call os_wait_key_press			001114 32 0E 56 00         A  1062    				ld (current_scancode),a
001118 78                  A  1063    				ld a,b
001119 32 0F 56 00         A  1064    				ld (current_asciicode),a		00111D CD 01 33 00         A  1065    				call hwsc_remove_cursor
                           A  1066    	
001121 3A 0E 56 00         A  1067    				ld a,(current_scancode)
001125 FE66                A  1068    				cp 066h							001127 20 1F               A  1069    				jr nz,os_nuibs
001129 3A 37 52 00         A  1070    				ld a,(ui_index)
00112D B7                  A  1071    				or a
00112E 28 DC               A  1072    				jr z,ui_loop					001130 21 BA 54 00         A  1073    				ld hl,cursor_x					001134 35                  A  1074    				dec (hl)						001135 46                  A  1075    os_uixok		ld b,(hl)		
001136 3A B9 54 00         A  1076    				ld a,(cursor_y)
00113A 4F                  A  1077    				ld c,a
00113B 3E20                A  1078    				ld a,32
00113D CD D4 31 00         A  1079    				call hwsc_plot_char
001141 21 37 52 00         A  1080    				ld hl,ui_index
001145 35                  A  1081    				dec (hl)						001146 18 C4               A  1082    				jr ui_loop
                           A  1083    
001148 FE76                A  1084    os_nuibs		cp 076h							00114A 28 5E               A  1085    				jr z,ui_aborted
00114C FE5A                A  1086    				cp 05ah							00114E 28 45               A  1087    				jr z,ui_enter_pressed
                           A  1088    	
001150 3A 37 52 00         A  1089    				ld a,(ui_index)					001154 21 38 52 00         A  1090    				ld hl,ui_maxchars
001158 BE                  A  1091    				cp (hl)
001159 28 B1               A  1092    				jr z,ui_loop	
                           A  1093    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00115B 3A 0F 56 00         A  1094    				ld a,(current_asciicode)		00115F B7                  A  1095    				or a							001160 28 AA               A  1096    				jr z,ui_loop					                           A  1097    
001162 57                  A  1098    ui_gtcha		ld d,a
001163 2A 39 52 00         A  1099    				ld hl,(ui_string_addr)
001167 3A 37 52 00         A  1100    				ld a,(ui_index)
00116B 01000000            A  1101    				ld bc,0
00116F 4F                  A  1102    				ld c,a
001170 09                  A  1103    				add hl,bc
001171 72                  A  1104    				ld (hl),d						001172 3C                  A  1105    				inc a
001173 32 37 52 00         A  1106    				ld (ui_index),a					                           A  1107    				
001177 ED4B B9 54 00       A  1108    				ld bc,(cursor_y)				00117C 7A                  A  1109    				ld a,d
00117D CD D4 31 00         A  1110    				call hwsc_plot_char		
001181 21 BA 54 00         A  1111    				ld hl,cursor_x					001185 34                  A  1112    				inc (hl)
001186 3A 67 52 00         A  1113    				ld a,(window_columns)			00118A BE                  A  1114    				cp (hl)
00118B C2 0C 11 00         A  1115    				jp nz,ui_loop
00118F 3600                A  1116    				ld (hl),0
001191 C3 0C 11 00         A  1117    				jp ui_loop
                           A  1118    
001195                     A  1119    ui_enter_pressed
                           A  1120    				
001195 3A D6 54 00         A  1121    				ld a,(ui_im_cache)				001199 32 0D 56 00         A  1122    				ld (insert_mode),a
00119D 3A 37 52 00         A  1123    				ld a,(ui_index)					0011A1 B7                  A  1124    				or a
0011A2 20 04               A  1125    				jr nz,ui_data
0011A4 3E81                A  1126    				ld a,081h						0011A6 B7                  A  1127    				or a
0011A7 C9                  A  1128    				ret
0011A8 BF                  A  1129    ui_data			cp a							0011A9 C9                  A  1130    				ret
                           A  1131    
0011AA 3A D6 54 00         A  1132    ui_aborted		ld a,(ui_im_cache)				0011AE 32 0D 56 00         A  1133    				ld (insert_mode),a
0011B2 3E80                A  1134    				ld a,080h						0011B4 B7                  A  1135    				or a							0011B5 C9                  A  1136    				ret
                           A  1137    		
                           A  1138    ;----------------------------------------------
                           A  1139    	
0011B6                     A  1140    os_count_lines
                           A  1141    
0011B6 E5                  A  1142    				push hl							0011B7 0679                A  1143    				ld b,'y'						0011B9 21 BE 54 00         A  1144    				ld hl,os_linecount			
0011BD 34                  A  1145    				inc (hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011BE 3A 64 52 00         A  1146    				ld a,(window_rows)
0011C2 D604                A  1147    				sub 4
0011C4 BE                  A  1148    				cp (hl)
0011C5 20 0E               A  1149    				jr nz,os_nntpo
0011C7 3600                A  1150    				ld (hl),0
0011C9 21 21 4A 00         A  1151    				ld hl,os_more_txt
0011CD CD 25 0F 00         A  1152    				call os_print_string
0011D1 CD CF 37 00         A  1153    				call os_wait_key_press	
0011D5 E1                  A  1154    os_nntpo		pop hl
0011D6 C9                  A  1155    				ret
                           A  1156    
                           A  1157    ;----------------------------------------------
                           A  1158    
0011D7                     A  1159    ext_compare_strings
                           A  1160    	
0011D7 CC 72 15 00         A  1161    				call z,mbase_hl
0011DB CC 83 15 00         A  1162    				call z,mbase_de
                           A  1163    				
0011DF                     A  1164    os_compare_strings
                           A  1165    
                           A  1166    ; both strings at HL/DE should be zero terminat
                           A  1167    ; compare will fail if string lengths are diffe
                           A  1168    ; unless count (B) is reached first
                           A  1169    ; Case is ignored
                           A  1170    ; Zero flag set on return if same
                           A  1171    
0011DF E5                  A  1172    				push hl							0011E0 D5                  A  1173    				push de							0011E1 1A                  A  1174    ocslp			ld a,(de)						0011E2 B7                  A  1175    				or a
0011E3 28 0C               A  1176    				jr z,ocsbt
0011E5 CD 22 12 00         A  1177    				call case_insensitive_compare	0011E9 20 0E               A  1178    				jr nz,ocs_diff
0011EB 13                  A  1179    				inc de
0011EC 23                  A  1180    				inc hl
0011ED 10 F2               A  1181    				djnz ocslp
0011EF 18 04               A  1182    				jr ocs_same
0011F1 1A                  A  1183    ocsbt			ld a,(de)						0011F2 B6                  A  1184    				or (hl)
0011F3 20 04               A  1185    				jr nz,ocs_diff
0011F5 D1                  A  1186    ocs_same		pop de
0011F6 E1                  A  1187    				pop hl
0011F7 AF                  A  1188    				xor a							0011F8 C9                  A  1189    				ret
0011F9 D1                  A  1190    ocs_diff		pop de
0011FA E1                  A  1191    				pop hl
0011FB AF                  A  1192    				xor a							0011FC 3C                  A  1193    				inc a
0011FD C9                  A  1194    				ret
                           A  1195    
                           A  1196    
                           A  1197    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1198    
0011FE                     A  1199    os_copy_ascii_run
                           A  1200    
                           A  1201    ;INPUT HL = source ($00 or $20 terminates)
                           A  1202    ;      DE = dest
                           A  1203    ;       b = max chars
                           A  1204    
                           A  1205    ;OUTPUT HL/DE = end of runs
                           A  1206    ;           c = char count
                           A  1207    	
0011FE 0E00                A  1208    				ld c,0
001200 7E                  A  1209    cpyar_lp		ld a,(hl)
001201 B7                  A  1210    				or a
001202 C8                  A  1211    				ret z
001203 FE20                A  1212    				cp 32
001205 C8                  A  1213    				ret z
001206 12                  A  1214    				ld (de),a
001207 23                  A  1215    				inc hl
001208 13                  A  1216    				inc de
001209 0C                  A  1217    				inc c
00120A 10 F4               A  1218    				djnz cpyar_lp
00120C C9                  A  1219    				ret
                           A  1220    
                           A  1221    ;----------------------------------------------
                           A  1222    
00120D                     A  1223    uppercasify_string
                           A  1224    
                           A  1225    ; Set HL to string location ($00 quits)
                           A  1226    ; Set B to max number of chars
                           A  1227    
00120D 7E                  A  1228    				ld a,(hl)
00120E B7                  A  1229    				or a
00120F C8                  A  1230    				ret z
001210 CD 19 12 00         A  1231    				call os_uppercasify
001214 77                  A  1232    				ld (hl),a
001215 23                  A  1233    				inc hl
001216 10 F5               A  1234    				djnz uppercasify_string	
001218 C9                  A  1235    				ret
                           A  1236    	
                           A  1237    
001219                     A  1238    os_uppercasify
                           A  1239    
                           A  1240    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1241    
001219 FE61                A  1242    				cp 061h			
00121B D8                  A  1243    				ret c
00121C FE7B                A  1244    				cp 07bh
00121E D0                  A  1245    				ret nc
00121F D620                A  1246    				sub 020h				
001221 C9                  A  1247    				ret
                           A  1248    
                           A  1249    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1250    
001222                     A  1251    case_insensitive_compare
                           A  1252    
                           A  1253    ; compares A with (HL) disregarding the case of
                           A  1254    ; Zero flag set if the characters are the same
                           A  1255    ; all registers are preserved.
                           A  1256    
001222 C5                  A  1257    				push bc					
001223 4F                  A  1258    				ld c,a
                           A  1259    
001224 CD 19 12 00         A  1260    				call os_uppercasify				001228 47                  A  1261    				ld b,a
001229 7E                  A  1262    				ld a,(hl)
00122A CD 19 12 00         A  1263    				call os_uppercasify
00122E B8                  A  1264    				cp b
                           A  1265    
00122F 79                  A  1266    				ld a,c
001230 C1                  A  1267    				pop bc
001231 C9                  A  1268    				ret
                           A  1269    
                           A  1270    ;----------------------------------------------
                           A  1271    
001232                     A  1272    os_decimal_add
                           A  1273    
                           A  1274    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1275    
001232 C5                  A  1276    				push bc
001233 0E00                A  1277    				ld c,0
001235 1A                  A  1278    decdlp			ld a,(de)
001236 86                  A  1279    				add a,(hl)
001237 81                  A  1280    				add a,c
001238 FE0A                A  1281    				cp 10
00123A 38 0B               A  1282    				jr c,daddnc
00123C D60A                A  1283    				sub 10
00123E 0E01                A  1284    				ld c,1
001240 12                  A  1285    decnclp			ld (de),a
001241 23                  A  1286    				inc hl
001242 13                  A  1287    				inc de
001243 10 F0               A  1288    				djnz decdlp
001245 C1                  A  1289    				pop bc
001246 C9                  A  1290    				ret
001247 0E00                A  1291    daddnc			ld c,0
001249 18 F5               A  1292    				jr decnclp
                           A  1293    	
                           A  1294    ;----------------------------------------------
                           A  1295    
00124B                     A  1296    os_hex_to_decimal
                           A  1297    
                           A  1298    ; INPUT xDE hex longword
                           A  1299    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1300    
       00005C26            A  1301    hex_to_convert		equ scratch_pad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       00005C29            A  1302    decimal_digits		equ scratch_pad+3
       00005C31            A  1303    decimal_add_digits	equ scratch_pad+3+8
                           A  1304    
00124B ED53 26 5C 00       A  1305    				ld (hex_to_convert),de
                           A  1306    		
001250 21 31 5C 00         A  1307    				ld hl,decimal_add_digits
001254 E5                  A  1308    				push hl
001255 11 29 5C 00         A  1309    				ld de,decimal_digits
001259 AF                  A  1310    				xor a
00125A 0608                A  1311    				ld b,8
00125C 12                  A  1312    setupdec		ld (de),a
00125D 77                  A  1313    				ld (hl),a
00125E 23                  A  1314    				inc hl
00125F 13                  A  1315    				inc de
001260 10 FA               A  1316    				djnz setupdec
001262 E1                  A  1317    				pop hl
001263 3601                A  1318    				ld (hl),1
                           A  1319    	
001265 21 26 5C 00         A  1320    				ld hl,hex_to_convert
001269 0603                A  1321    				ld b,3
00126B C5                  A  1322    decconvlp		push bc
00126C 7E                  A  1323    				ld a,(hl)
00126D CD 8B 12 00         A  1324    				call decadder
001271 CD A4 12 00         A  1325    				call decaddx16
001275 7E                  A  1326    				ld a,(hl)
001276 0F                  A  1327    				rrca
001277 0F                  A  1328    				rrca
001278 0F                  A  1329    				rrca
001279 0F                  A  1330    				rrca
00127A CD 8B 12 00         A  1331    				call decadder
00127E CD A4 12 00         A  1332    				call decaddx16
001282 C1                  A  1333    				pop bc
001283 23                  A  1334    				inc hl
001284 10 E5               A  1335    				djnz decconvlp
001286 21 29 5C 00         A  1336    				ld hl,decimal_digits
00128A C9                  A  1337    				ret
                           A  1338    
                           A  1339    
                           A  1340    
00128B E60F                A  1341    decadder		and 15
00128D C8                  A  1342    				ret z
00128E 47                  A  1343    				ld b,a
00128F E5                  A  1344    				push hl
001290 C5                  A  1345    daddlp			push bc
001291 11 29 5C 00         A  1346    				ld de,decimal_digits
001295 21 31 5C 00         A  1347    				ld hl,decimal_add_digits
001299 0608                A  1348    				ld b,8
00129B CD 32 12 00         A  1349    				call os_decimal_add
00129F C1                  A  1350    				pop bc
0012A0 10 EE               A  1351    				djnz daddlp	
0012A2 E1                  A  1352    				pop hl
0012A3 C9                  A  1353    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1354    			
                           A  1355    				
0012A4 E5                  A  1356    decaddx16		push hl
0012A5 0604                A  1357    				ld b,4							0012A7 C5                  A  1358    x16loop			push bc
0012A8 11 31 5C 00         A  1359    				ld de,decimal_add_digits
0012AC 21 31 5C 00         A  1360    				ld hl,decimal_add_digits
0012B0 0608                A  1361    				ld b,8
0012B2 CD 32 12 00         A  1362    				call os_decimal_add
0012B6 C1                  A  1363    				pop bc
0012B7 10 EE               A  1364    				djnz x16loop	
0012B9 E1                  A  1365    				pop hl
0012BA C9                  A  1366    				ret
                           A  1367    	
                           A  1368    	
                           A  1369    ;----------------------------------------------
                           A  1370    
0012BB                     A  1371    os_show_decimal
                           A  1372    
0012BB 11 29 55 00         A  1373    				ld de,output_line				0012BF 01090000            A  1374    				ld bc,9
0012C3 09                  A  1375    				add hl,bc
0012C4 060A                A  1376    				ld b,10
0012C6 7E                  A  1377    shdeclp			ld a,(hl)
0012C7 B7                  A  1378    				or a
0012C8 28 04               A  1379    				jr z,dnodigit
0012CA C630                A  1380    				add a,030h
0012CC 12                  A  1381    				ld (de),a
0012CD 13                  A  1382    				inc de
0012CE 2B                  A  1383    dnodigit		dec hl
0012CF 10 F5               A  1384    				djnz shdeclp
0012D1 AF                  A  1385    				xor a
0012D2 12                  A  1386    				ld (de),a
0012D3 CD 1B 13 00         A  1387    				call os_print_output_line
0012D7 C9                  A  1388    				ret
                           A  1389    				
                           A  1390    ;----------------------------------------------
                           A  1391    		
0012D8                     A  1392    os_copy_to_output_line
                           A  1393    	
0012D8 D5                  A  1394    				push de
0012D9 C5                  A  1395    				push bc
0012DA 11 29 55 00         A  1396    				ld de,output_line				0012DE 01510000            A  1397    				ld bc,max_buffer_chars+1		0012E2 EDA0                A  1398    os_cloll		ldi
0012E4 7E                  A  1399    				ld a,(hl)
0012E5 B7                  A  1400    				or a
0012E6 28 04               A  1401    				jr z,os_clold
0012E8 78                  A  1402    				ld a,b
0012E9 B1                  A  1403    				or c
0012EA 20 F6               A  1404    				jr nz,os_cloll
0012EC 12                  A  1405    os_clold		ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012ED C1                  A  1406    				pop bc
0012EE D1                  A  1407    				pop de
0012EF C9                  A  1408    				ret
                           A  1409    
                           A  1410    
                           A  1411    ;----------------------------------------------
                           A  1412    
0012F0                     A  1413    os_show_hex_address
                           A  1414    
0012F0 E5                  A  1415    				push hl							0012F1 21 29 55 00         A  1416    				ld hl,output_line
0012F5 ED53 CB 54 00       A  1417    				ld (hex_address),de
0012FA 3A CD 54 00         A  1418    				ld a,(hex_address+2)
0012FE CD 68 10 00         A  1419    				call hexbyte_to_ascii
001302 18 10               A  1420    				jr shw_nt
                           A  1421    				
                           A  1422    
001304                     A  1423    os_show_hex_byte
                           A  1424    
001304 E5                  A  1425    				push hl							001305 21 29 55 00         A  1426    				ld hl,output_line
001309 CD 68 10 00         A  1427    				call hexbyte_to_ascii
00130D 18 09               A  1428    				jr shb_nt
                           A  1429    
                           A  1430    
                           A  1431    
00130F                     A  1432    os_show_hex_word
                           A  1433    
00130F E5                  A  1434    				push hl							001310 21 29 55 00         A  1435    				ld hl,output_line
001314 CD 8D 10 00         A  1436    shw_nt			call hexword_to_ascii
001318 3600                A  1437    shb_nt			ld (hl),0
00131A E1                  A  1438    				pop hl
                           A  1439    
                           A  1440    	
                           A  1441    
00131B                     A  1442    os_print_output_line
                           A  1443    
00131B E5                  A  1444    				push hl
00131C 21 29 55 00         A  1445    				ld hl,output_line
001320 CD 25 0F 00         A  1446    cproline		call os_print_string
001324 E1                  A  1447    				pop hl
001325 C9                  A  1448    				ret
                           A  1449    
                           A  1450    
                           A  1451    
001326                     A  1452    os_print_output_line_skip_zeroes
                           A  1453    
001326 E5                  A  1454    				push hl
001327 21 29 55 00         A  1455    				ld hl,output_line
00132B CD 45 10 00         A  1456    				call os_skip_leading_ascii_zero
00132F 18 EF               A  1457    				jr cproline
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1458    				
                           A  1459    		
                           A  1460    ;----------------------------------------------
                           A  1461    
001331                     A  1462    os_store_CPU_regs
                           A  1463    
001331 F3                  A  1464    				di								                           A  1465    
001332 33                  A  1466    				inc sp							001333 33                  A  1467    				inc sp
001334 33                  A  1468    				inc sp
001335 ED73 4A 54 00       A  1469    				ld (store_spl),sp
00133A 3B                  A  1470    				dec sp							00133B 3B                  A  1471    				dec sp
00133C 3B                  A  1472    				dec sp
                           A  1473    				
00133D F5                  A  1474    				push af
00133E 32 2D 54 00         A  1475    				ld (store_a1),a					001342 08                  A  1476    				ex af,af'
001343 32 37 54 00         A  1477    				ld (store_a2),a
001347 08                  A  1478    				ex af,af'
001348 ED43 2E 54 00       A  1479    				ld (store_bc1),bc		
00134D ED53 31 54 00       A  1480    				ld (store_de1),de
001352 22 34 54 00         A  1481    				ld (store_hl1),hl
001356 D9                  A  1482    				exx
001357 ED43 38 54 00       A  1483    				ld (store_bc2),bc
00135C ED53 3B 54 00       A  1484    				ld (store_de2),de
001361 22 3E 54 00         A  1485    				ld (store_hl2),hl
001365 D9                  A  1486    				exx
001366 DD22 41 54 00       A  1487    				ld (store_ix),ix
00136B FD22 44 54 00       A  1488    				ld (store_iy),iy
                           A  1489    				
001370 ED6E                A  1490    			    ld a,MB
001372 32 4F 54 00         A  1491    				ld (store_mbase),a
                           A  1492    								
001376 C5                  A  1493    				push bc
001377 0600                A  1494    				ld b,0
001379 20 02               A  1495    				jr nz,zfstzero					00137B CBF0                A  1496    				set 6,b
                           A  1497    
00137D 30 02               A  1498    zfstzero		jr nc,cfstzero					00137F CBC0                A  1499    				set 0,b
                           A  1500    
001381 F2 87 13 00         A  1501    cfstzero		jp p,sfstzero					001385 CBF8                A  1502    				set 7,b
                           A  1503    
001387 EA 8D 13 00         A  1504    sfstzero		jp pe,pfstzero					00138B CBD0                A  1505    				set 2,b
                           A  1506    
00138D ED57                A  1507    pfstzero		ld a,i			
00138F EA 95 13 00         A  1508    				jp pe,ifstzero					001393 CBE0                A  1509    				set 4,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1510    
001395 78                  A  1511    ifstzero		ld a,b
001396 32 50 54 00         A  1512    				ld (store_f),a
                           A  1513    				
00139A 3E00                A  1514    				ld a,os_location/65536			00139C ED6D                A  1515    				ld MB,a							00139E 40ED73 4D 54        A  1516    				ld.sis (store_sps),sp
0013A3 3A 4F 54 00         A  1517    				ld a,(store_mbase)				0013A7 ED6D                A  1518    				ld MB,a
                           A  1519    				
0013A9 C1                  A  1520    				pop bc
0013AA F1                  A  1521    				pop af
0013AB FB                  A  1522    				ei
0013AC C9                  A  1523    				ret
                           A  1524    
                           A  1525    
                           A  1526    
0013AD                     A  1527    os_dont_store_registers
                           A  1528    
0013AD AF                  A  1529    				xor a
0013AE 32 52 54 00         A  1530    				ld (store_registers),a			0013B2 C9                  A  1531    				ret
                           A  1532    	
                           A  1533    	
                           A  1534    ;----------------------------------------------
                           A  1535    
0013B3                     A  1536    os_new_line_cond
                           A  1537    
0013B3 CD ED 19 00         A  1538    				call test_quiet_mode
0013B7 C0                  A  1539    				ret nz
                           A  1540    
                           A  1541    	
0013B8                     A  1542    os_new_line
                           A  1543    
0013B8 E5                  A  1544    				push hl
0013B9 21 39 4A 00         A  1545    				ld hl,crlfx2_txt+1
0013BD CD 25 0F 00         A  1546    				call os_print_string
0013C1 E1                  A  1547    				pop hl
0013C2 C9                  A  1548    				ret
                           A  1549    				
                           A  1550    ;----------------------------------------------
                           A  1551    
0013C3                     A  1552    os_set_cursor_position
                           A  1553    				
                           A  1554    												0013C3 3A 64 52 00         A  1555    				ld a,(window_rows)				0013C7 3D                  A  1556    				dec a							0013C8 B9                  A  1557    				cp c
0013C9 38 14               A  1558    				jr c,badpos
0013CB 79                  A  1559    				ld a,c
0013CC 32 B9 54 00         A  1560    				ld (cursor_y),a
                           A  1561    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013D0 3A 67 52 00         A  1562    				ld a,(window_columns)
0013D4 3D                  A  1563    				dec a
0013D5 B8                  A  1564    				cp b
0013D6 38 07               A  1565    				jr c,badpos
0013D8 78                  A  1566    				ld a,b
0013D9 32 BA 54 00         A  1567    				ld (cursor_x),a
0013DD AF                  A  1568    				xor a
0013DE C9                  A  1569    				ret				
                           A  1570    
0013DF 3E82                A  1571    badpos			ld a,82h
0013E1 B7                  A  1572    				or a
0013E2 C9                  A  1573    				ret
                           A  1574    
                           A  1575    
                           A  1576    					
                           A  1577    	
                           A  1578    	
0013E3                     A  1579    os_get_cursor_position
                           A  1580    
0013E3 ED4B B9 54 00       A  1581    				ld bc,(cursor_pos)				0013E8 BF                  A  1582    				cp a							0013E9 C9                  A  1583    				ret
                           A  1584    
                           A  1585    
                           A  1586    ;----------------------------------------------
                           A  1587    
0013EA                     A  1588    os_show_packed_text_cond
                           A  1589    
0013EA CD ED 19 00         A  1590    				call test_quiet_mode
0013EE C0                  A  1591    				ret nz
                           A  1592    
                           A  1593    	
0013EF                     A  1594    os_show_packed_text
                           A  1595    
                           A  1596    ; Construct sentence from internal dictionary u
                           A  1597    	
0013EF C5                  A  1598    				push bc
0013F0 D5                  A  1599    				push de
0013F1 DDE5                A  1600    				push ix
0013F3 DD21 29 55 00       A  1601    				ld ix,output_line
0013F8 7E                  A  1602    readpind		ld a,(hl)
0013F9 B7                  A  1603    				or a
0013FA 20 10               A  1604    				jr nz,getword					0013FC DD2B                A  1605    				dec ix							0013FE DD7700              A  1606    				ld (ix),a						                           A  1607    			
001401 E5                  A  1608    				push hl
001402 CD 1B 13 00         A  1609    				call os_print_output_line
001406 E1                  A  1610    				pop hl
                           A  1611    			
001407 DDE1                A  1612    				pop ix
001409 D1                  A  1613    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00140A C1                  A  1614    				pop bc
00140B C9                  A  1615    				ret
                           A  1616    				
00140C 11 47 4A 00         A  1617    getword			ld de,dictionary-1
001410 0E00                A  1618    				ld c,0
001412 13                  A  1619    dictloop		inc de
001413 1A                  A  1620    				ld a,(de)
001414 B7                  A  1621    				or a							001415 28 04               A  1622    				jr z,faword
001417 CB7F                A  1623    				bit 7,a							001419 28 F7               A  1624    				jr z,dictloop	
                           A  1625    			
00141B 0C                  A  1626    faword			inc c							00141C 79                  A  1627    				ld a,c
00141D BE                  A  1628    				cp (hl)
00141E 20 F2               A  1629    				jr nz,dictloop
001420 13                  A  1630    copytol			inc de							001421 1A                  A  1631    				ld a,(de)
001422 B7                  A  1632    				or a
001423 28 0B               A  1633    				jr z,eoword						001425 CB7F                A  1634    				bit 7,a
001427 20 07               A  1635    				jr nz,eoword
001429 DD7700              A  1636    				ld (ix),a						00142C DD23                A  1637    				inc ix
00142E 18 F0               A  1638    				jr copytol
001430 DD360020            A  1639    eoword			ld (ix),32						001434 DD23                A  1640    				inc ix
001436 23                  A  1641    				inc hl
001437 18 BF               A  1642    				jr readpind
                           A  1643    
                           A  1644    
                           A  1645    		
                           A  1646    ;--------- Mouse functions --------------------
                           A  1647    
001439                     A  1648    os_set_mouse_window
                           A  1649    
                           A  1650    ; Set: HL/DE = window size mouse pointer is to 
                           A  1651    	
001439 22 20 56 00         A  1652    				ld (mouse_window_size_x),hl	 
00143D ED53 23 56 00       A  1653    				ld (mouse_window_size_y),de
001442 21000000            A  1654    				ld hl,0
001446 22 26 56 00         A  1655    				ld (mouse_abs_x),hl
00144A 22 29 56 00         A  1656    				ld (mouse_abs_y),hl
00144E 3E01                A  1657    				ld a,1
001450 32 38 56 00         A  1658    				ld (mouse_new_window),a
001454 AF                  A  1659    				xor a
001455 C9                  A  1660    				ret
                           A  1661    				
                           A  1662    			
001456                     A  1663    os_get_mouse_motion
                           A  1664    			
                           A  1665    ; Returns: ZF = Set: Relative X coord in HL, Re
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1666    ;          ZF = Not set: Mouse driver not initi
                           A  1667    			
001456 3A 23 54 00         A  1668    				ld a,(devices_connected)
00145A E602                A  1669    				and 2
00145C EE02                A  1670    				xor 2
00145E C0                  A  1671    				ret nz
00145F AF                  A  1672    ms_reread		xor a
001460 32 1F 56 00         A  1673    				ld (mouse_updated),a
001464 2A 18 56 00         A  1674    				ld hl,(mouse_disp_x)			001468 ED5B 1B 56 00       A  1675    				ld de,(mouse_disp_y)
00146D 3A 1F 56 00         A  1676    				ld a,(mouse_updated)			001471 B7                  A  1677    				or a
001472 20 EB               A  1678    				jr nz,ms_reread
001474 AF                  A  1679    mouse_end		xor a
001475 3A 1E 56 00         A  1680    				ld a,(mouse_wheel)
001479 47                  A  1681    				ld b,a
00147A 3A 17 56 00         A  1682    				ld a,(mouse_buttons)
00147E C9                  A  1683    				ret
                           A  1684    			
                           A  1685    			
00147F                     A  1686    os_get_mouse_position
                           A  1687    
                           A  1688    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1689    ;          ZF = Not set: Mouse driver not initi
                           A  1690    				
00147F CD 56 14 00         A  1691    				call os_get_mouse_motion
001483 C0                  A  1692    				ret nz
001484 22 32 56 00         A  1693    				ld (mouse_disp_x_buffer),hl
001488 ED53 35 56 00       A  1694    				ld (mouse_disp_y_buffer),de
00148D 3A 38 56 00         A  1695    				ld a,(mouse_new_window)
001491 B7                  A  1696    				or a
001492 20 6C               A  1697    				jr nz,ms_nmw
                           A  1698    
001494 ED5B 2C 56 00       A  1699    				ld de,(mouse_disp_x_old)
001499 AF                  A  1700    				xor a
00149A ED52                A  1701    				sbc hl,de
00149C EB                  A  1702    				ex de,hl
00149D 2A 26 56 00         A  1703    				ld hl,(mouse_abs_x)
0014A1 19                  A  1704    				add hl,de
0014A2 E5                  A  1705    				push hl
0014A3 C1                  A  1706    				pop bc
0014A4 DD210000 80         A  1707    				ld ix,800000h					0014A9 DD09                A  1708    				add ix,bc
0014AB 30 06               A  1709    				jr nc,ms_x_ok1
0014AD 01000000            A  1710    				ld bc,0
0014B1 18 10               A  1711    				jr ms_x_ok2
0014B3 ED5B 20 56 00       A  1712    ms_x_ok1		ld de,(mouse_window_size_x)
0014B8 AF                  A  1713    				xor a
0014B9 ED52                A  1714    				sbc hl,de
0014BB 38 06               A  1715    				jr c,ms_x_ok2
0014BD ED4B 20 56 00       A  1716    				ld bc,(mouse_window_size_x)		0014C2 0B                  A  1717    				dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C3 ED43 26 56 00       A  1718    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1719    					
0014C8 2A 35 56 00         A  1720    				ld hl,(mouse_disp_y_buffer)
0014CC ED5B 2F 56 00       A  1721    				ld de,(mouse_disp_y_old)
0014D1 AF                  A  1722    				xor a
0014D2 ED52                A  1723    				sbc hl,de
0014D4 EB                  A  1724    				ex de,hl
0014D5 2A 29 56 00         A  1725    				ld hl,(mouse_abs_y)
0014D9 19                  A  1726    				add hl,de
0014DA E5                  A  1727    				push hl
0014DB C1                  A  1728    				pop bc
0014DC DD210000 80         A  1729    				ld ix,800000h					0014E1 DD09                A  1730    				add ix,bc
0014E3 30 06               A  1731    				jr nc,ms_y_ok1
0014E5 01000000            A  1732    				ld bc,0
0014E9 18 10               A  1733    				jr ms_y_ok2
0014EB ED5B 23 56 00       A  1734    ms_y_ok1		ld de,(mouse_window_size_y)
0014F0 AF                  A  1735    				xor a
0014F1 ED52                A  1736    				sbc hl,de
0014F3 38 06               A  1737    				jr c,ms_y_ok2
0014F5 ED4B 23 56 00       A  1738    				ld bc,(mouse_window_size_y)		0014FA 0B                  A  1739    				dec bc
0014FB ED43 29 56 00       A  1740    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1741    
                           A  1742    				
001500 2A 32 56 00         A  1743    ms_nmw			ld hl,(mouse_disp_x_buffer)
001504 22 2C 56 00         A  1744    				ld (mouse_disp_x_old),hl
001508 2A 35 56 00         A  1745    				ld hl,(mouse_disp_y_buffer)
00150C 22 2F 56 00         A  1746    				ld (mouse_disp_y_old),hl
                           A  1747    				
001510 2A 26 56 00         A  1748    				ld hl,(mouse_abs_x)
001514 ED5B 29 56 00       A  1749    				ld de,(mouse_abs_y)
                           A  1750    				
001519 AF                  A  1751    				xor a
00151A 32 38 56 00         A  1752    				ld (mouse_new_window),a
00151E C3 74 14 00         A  1753    				jp mouse_end
                           A  1754    				
                           A  1755    	
                           A  1756    ;==============================================
                           A  1757    ;----- General Subroutines --------------------
                           A  1758    ;==============================================
                           A  1759    
                           A  1760    ; .--------------.
                           A  1761    ; ! CRC Checksum !
                           A  1762    ; '--------------'
                           A  1763    
                           A  1764    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1765    
001522                     A  1766    crc_checksum
                           A  1767    
001522 21FFFF00            A  1768    				ld hl,0ffffh		
001526 1A                  A  1769    crcloop			ld a,(de)			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001527 AC                  A  1770    				xor h			
001528 67                  A  1771    				ld h,a			
001529 0608                A  1772    				ld b,8
00152B 4029                A  1773    crcbyte			add.sis hl,hl					00152D 30 08               A  1774    				jr nc,crcnext
00152F 7C                  A  1775    				ld a,h
001530 EE10                A  1776    				xor 10h
001532 67                  A  1777    				ld h,a
001533 7D                  A  1778    				ld a,l
001534 EE21                A  1779    				xor 21h
001536 6F                  A  1780    				ld l,a
001537 10 F2               A  1781    crcnext			djnz crcbyte
001539 13                  A  1782    				inc de
00153A 0D                  A  1783    				dec c
00153B 20 E9               A  1784    				jr nz,crcloop
00153D C9                  A  1785    				ret
                           A  1786    
                           A  1787    
                           A  1788    ;----------------------------------------------
                           A  1789    
00153E                     A  1790    os_get_key_mod_flags
                           A  1791    
00153E 3A 0C 56 00         A  1792    				ld a,(key_mod_flags)
001542 BF                  A  1793    				cp a							001543 C9                  A  1794    				ret
                           A  1795    
                           A  1796    ;----------------------------------------------
                           A  1797    
001544                     A  1798    os_get_display_size
                           A  1799    			
001544 ED4B 64 52 00       A  1800    				ld bc,(display_parameters)
001549 BF                  A  1801    				cp a
00154A C9                  A  1802    				ret
                           A  1803    
                           A  1804    ;----------------------------------------------
                           A  1805    
00154B                     A  1806    os_bchl_memfill
                           A  1807    
                           A  1808    ; fill memory from xHL with A. Count in xBC.
                           A  1809    		
00154B 77                  A  1810    mf_loop			ld (hl),a
00154C EDA1                A  1811    				cpi								00154E EA 4B 15 00         A  1812    				jp pe,mf_loop
001552 C9                  A  1813    				ret
                           A  1814    	
                           A  1815    ;----------------------------------------------
                           A  1816    
001553 7B                  A  1817    ext_set_pen		ld a,e
                           A  1818    
001554 32 3D 52 00         A  1819    os_set_pen		ld (current_pen),a
001558 BF                  A  1820    				cp a							001559 C9                  A  1821    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1822    
                           A  1823    ;----------------------------------------------
                           A  1824    	
00155A 3A 3D 52 00         A  1825    os_get_pen		ld a,(current_pen)
00155E BF                  A  1826    				cp a							00155F C9                  A  1827    				ret	
                           A  1828    
                           A  1829    ;----------------------------------------------
                           A  1830    
001560                     A  1831    ext_background_colours
                           A  1832    				
001560 CC 72 15 00         A  1833    				call z,mbase_hl
001564 C3 DB 30 00         A  1834    				jp hswc_set_ui_colours
                           A  1835    				
                           A  1836    				
                           A  1837    ;----------------------------------------------
                           A  1838    
001568                     A  1839    os_get_xde_msb	
                           A  1840    			
001568 ED53 D1 54 00       A  1841    				ld (xrr_temp),de				00156D 3A D3 54 00         A  1842    				ld a,(xrr_temp+2)
001571 C9                  A  1843    				ret
                           A  1844    
                           A  1845    ;----------------------------------------------
                           A  1846    
001572 F5                  A  1847    mbase_hl		push af
001573 22 D1 54 00         A  1848    				ld (xrr_temp),hl				001577 ED6E                A  1849    				ld a,MB
001579 32 D3 54 00         A  1850    				ld (xrr_temp+2),a
00157D 2A D1 54 00         A  1851    				ld hl,(xrr_temp)
001581 F1                  A  1852    				pop af
001582 C9                  A  1853    				ret
                           A  1854    				
001583 F5                  A  1855    mbase_de		push af
001584 ED53 D1 54 00       A  1856    				ld (xrr_temp),de				001589 ED6E                A  1857    				ld a,MB
00158B 32 D3 54 00         A  1858    				ld (xrr_temp+2),a
00158F ED5B D1 54 00       A  1859    				ld de,(xrr_temp)
001594 F1                  A  1860    				pop af
001595 C9                  A  1861    				ret
                           A  1862    
001596 F5                  A  1863    mbase_ix		push af
001597 DD22 D1 54 00       A  1864    				ld (xrr_temp),ix				00159C ED6E                A  1865    				ld a,MB
00159E 32 D3 54 00         A  1866    				ld (xrr_temp+2),a
0015A2 DD2A D1 54 00       A  1867    				ld ix,(xrr_temp)
0015A7 F1                  A  1868    				pop af
0015A8 C9                  A  1869    				ret
                           A  1870    							
                           A  1871    ;----------------------------------------------
                           A  1872    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1873    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1874    
0015A9                     A  1875    unpack_rle
                           A  1876    
                           A  1877    ;set xHL = source address of packed file
                           A  1878    ;set xDE = destination address for unpacked dat
                           A  1879    ;set xBC = length of packed file
                           A  1880    
0015A9 E5                  A  1881    			push hl	
0015AA DDE1                A  1882    			pop ix
0015AC 0B                  A  1883    			dec bc								0015AD 23                  A  1884    			inc hl
0015AE DD7E00              A  1885    unp_gtok	ld a,(ix)							0015B1 BE                  A  1886    unp_next	cp (hl)								0015B2 28 07               A  1887    			jr z,unp_brun						0015B4 EDA0                A  1888    			ldi									0015B6 EA B1 15 00         A  1889    			jp pe,unp_next						0015BA C9                  A  1890    			ret
                           A  1891    	
0015BB C5                  A  1892    unp_brun	push bc								0015BC 23                  A  1893    			inc hl		
0015BD 7E                  A  1894    			ld a,(hl)							0015BE 23                  A  1895    			inc hl		
0015BF 46                  A  1896    			ld b,(hl)							0015C0 23                  A  1897    			inc hl
                           A  1898    	
0015C1 12                  A  1899    unp_rllp	ld (de),a							0015C2 13                  A  1900    			inc de			
0015C3 10 FC               A  1901    			djnz unp_rllp
                           A  1902    	
0015C5 C1                  A  1903    			pop bc	
0015C6 0B                  A  1904    			dec bc								0015C7 0B                  A  1905    			dec bc
0015C8 0B                  A  1906    			dec bc
0015C9 E5                  A  1907    			push hl								0015CA 21000000            A  1908    			ld hl,0
0015CE B7                  A  1909    			or a
0015CF ED4A                A  1910    			adc hl,bc
0015D1 E1                  A  1911    			pop hl
0015D2 20 DA               A  1912    			jr nz,unp_gtok
0015D4 C9                  A  1913    			ret	
                           A  1914    	
                           A  1915    ;----------------------------------------------
                           A  1916    ; Commonly called error messages - gets message
                           A  1917    ;----------------------------------------------
                           A  1918    
                           A  1919    
0015D5 3E0D                A  1920    os_no_fn_error		ld a,0dh
0015D7 B7                  A  1921    					or a
0015D8 C9                  A  1922    					ret
                           A  1923    			
0015D9 3E15                A  1924    os_fn_too_long		ld a,15h
0015DB B7                  A  1925    					or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015DC C9                  A  1926    					ret
                           A  1927    				
0015DD 3E16                A  1928    os_no_start_addr	ld a,16h
0015DF B7                  A  1929    					or a
0015E0 C9                  A  1930    					ret
                           A  1931    			
0015E1 3E17                A  1932    os_no_filesize		ld a,17h
0015E3 B7                  A  1933    					or a
0015E4 C9                  A  1934    					ret
                           A  1935    			
0015E5 3E18                A  1936    os_abort_save		ld a,18h
0015E7 B7                  A  1937    					or a
0015E8 C9                  A  1938    					ret
                           A  1939    			
0015E9 3E1C                A  1940    os_no_e_addr_error	ld a,1ch
0015EB B7                  A  1941    					or a
0015EC C9                  A  1942    					ret
                           A  1943    			
0015ED 3E1D                A  1944    os_no_d_addr_error	ld a,1dh
0015EF B7                  A  1945    					or a
0015F0 C9                  A  1946    					ret
                           A  1947    				
0015F1 3E1E                A  1948    os_range_error		ld a,1eh
0015F3 B7                  A  1949    					or a
0015F4 C9                  A  1950    					ret
                           A  1951    			
0015F5 3E1F                A  1952    os_no_args_error	ld a,1fh
0015F7 B7                  A  1953    					or a
0015F8 C9                  A  1954    					ret	
                           A  1955    
                           A  1956    ;----------------------------------------------
                           A  1957    
                           A  1958    ; Set xHL to address of zero terminated filenam
                           A  1959    ; RETURNS:	C:xDE  = File length
                           A  1960    ;    		HL     = Start cluster of file
                           A  1961    
0015F9 CC 72 15 00         A  1962    ext_find_file	call z,mbase_hl
                           A  1963    
0015FD CD 2A 46 00         A  1964    os_find_file	call fs_hl_to_filename
001601 CD CB 3D 00         A  1965    				call fs_open_file_command		001605 38 02               A  1966    				jr c,os_fferr					001607 B7                  A  1967    				or a							001608 C9                  A  1968    				ret 		
                           A  1969    								
001609 47                  A  1970    os_fferr		ld b,a							00160A AF                  A  1971    				xor a			
00160B 4F                  A  1972    				ld c,a
00160C 0C                  A  1973    				inc c							00160D C9                  A  1974    				ret	
                           A  1975    
                           A  1976    ;----------------------------------------------
                           A  1977    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00160E                     A  1978    os_set_load_length
                           A  1979    
00160E ED53 81 48 00       A  1980    				ld (fs_file_transfer_length),de
001613 BF                  A  1981    				cp a							001614 C9                  A  1982    				ret
                           A  1983    				
                           A  1984    ;----------------------------------------------
                           A  1985    
001615                     A  1986    ext_set_file_pointer
                           A  1987    
001615 79                  A  1988    				ld a,c
                           A  1989    				
001616                     A  1990    os_set_file_pointer
                           A  1991    
                           A  1992    ; Moves the 'start of file' pointer allowing ra
                           A  1993    ; Note: File pointer is reset by opening a file
                           A  1994    ; by normal read function.
                           A  1995    
001616 ED53 75 48 00       A  1996    				ld (fs_file_pointer),de			00161B 32 78 48 00         A  1997    				ld (fs_file_pointer+3),a
00161F F5                  A  1998    				push af
001620 AF                  A  1999    				xor a
001621 32 A7 48 00         A  2000    				ld (fs_filepointer_valid),a		001625 F1                  A  2001    				pop af
001626 BF                  A  2002    				cp a							001627 C9                  A  2003    				ret
                           A  2004    				
                           A  2005    ;----------------------------------------------
                           A  2006    
                           A  2007    ; set xHL = load address 
                           A  2008    ; (Before calling this routine, call os_find_fi
                           A  2009    
001628                     A  2010    ext_read_bytes_from_file
                           A  2011    
001628 CC 72 15 00         A  2012    				call z,mbase_hl					                           A  2013    				
00162C                     A  2014    os_read_bytes_from_file
                           A  2015    
00162C 22 8A 48 00         A  2016    				ld (fs_ez80_address),hl			001630 CD 16 3E 00         A  2017    				call fs_read_data_command
001634 38 D3               A  2018    				jr c,os_fferr
001636 B7                  A  2019    				or a
001637 C9                  A  2020    				ret
                           A  2021    
                           A  2022    ;----------------------------------------------
                           A  2023    
                           A  2024    ; Before calling, set xHL = address of zero ter
                           A  2025    
001638 CC 72 15 00         A  2026    ext_create_file	call z,mbase_hl
                           A  2027    
00163C CD 2A 46 00         A  2028    os_create_file	call fs_hl_to_filename
001640 CD CC 40 00         A  2029    				call fs_create_file_command		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001644 DA 09 16 00         A  2030    				jp c,os_fferr					001648 B7                  A  2031    				or a
001649 C9                  A  2032    				ret
                           A  2033    
                           A  2034    ;----------------------------------------------
                           A  2035    
00164A                     A  2036    ext_write_bytes_to_file
                           A  2037    
00164A CC 72 15 00         A  2038    				call z,mbase_hl
00164E CC 83 15 00         A  2039    				call z,mbase_de
                           A  2040    
001652                     A  2041    os_write_bytes_to_file
                           A  2042    
                           A  2043    ; Before calling, set..
                           A  2044    
                           A  2045    ; xDE   = address to save data from
                           A  2046    ; xBC   = number of bytes to save
                           A  2047    ; xHL   = address of null-terminated ascii name
                           A  2048    
                           A  2049    ; On return:
                           A  2050    
                           A  2051    ; If zero flag NOT set, there was an error.
                           A  2052    ; If   A = $00, b = hardware error code
                           A  2053    ; Else A = File system error code
                           A  2054    
                           A  2055    ; NOTE:
                           A  2056    ; Will return 'file not found' if the file has 
                           A  2057    				
001652 ED43 81 48 00       A  2058    				ld (fs_file_transfer_length),bc
001657 ED53 8A 48 00       A  2059    				ld (fs_ez80_address),de	 	
00165C CD 2A 46 00         A  2060    				call fs_hl_to_filename
001660 CD FE 40 00         A  2061    				call fs_write_bytes_to_file_com
001664 DA 09 16 00         A  2062    				jp c,os_fferr
001668 B7                  A  2063    				or a
001669 C9                  A  2064    				ret
                           A  2065    		
                           A  2066    		
                           A  2067    ;----------------------------------------------
                           A  2068    	
                           A  2069    
00166A                     A  2070    os_check_volume_format
                           A  2071    
00166A CD 29 3C 00         A  2072    				call fs_check_disk_format
00166E DA 09 16 00         A  2073    os_rffsc		jp c,os_fferr
001672 B7                  A  2074    				or a
001673 C9                  A  2075    				ret
                           A  2076    
                           A  2077    ;----------------------------------------------
                           A  2078    
                           A  2079    
001674 7B                  A  2080    ext_format		ld a,e
001675 CC 72 15 00         A  2081    				call z,mbase_hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2082    
001679 E5                  A  2083    os_format		push hl							00167A CD 80 1A 00         A  2084    				call dev_to_driver_lookup
00167E E1                  A  2085    				pop hl
00167F 38 04               A  2086    				jr c,sdevok
001681 3ED0                A  2087    				ld a,0d0h						001683 B7                  A  2088    				or a
001684 C9                  A  2089    				ret
                           A  2090    
001685 F5                  A  2091    sdevok			push af				
001686 11 51 48 00         A  2092    				ld de,fs_sought_filename
00168A CD 39 47 00         A  2093    				call fs_clear_filename
00168E 060B                A  2094    				ld b,11
001690 CD FE 11 00         A  2095    				call os_copy_ascii_run
001694 F1                  A  2096    				pop af
                           A  2097    				
001695 21 DF 52 00         A  2098    				ld hl,current_driver
001699 46                  A  2099    				ld b,(hl)
00169A 77                  A  2100    				ld (hl),a
00169B C5                  A  2101    				push bc
00169C E5                  A  2102    				push hl
00169D CD 9E 3A 00         A  2103    				call fs_format_device_command
0016A1 E1                  A  2104    				pop hl
0016A2 C1                  A  2105    				pop bc
0016A3 70                  A  2106    				ld (hl),b
0016A4 18 C8               A  2107    				jr os_rffsc
                           A  2108    
                           A  2109    
                           A  2110    ;----------------------------------------------
                           A  2111    
                           A  2112    
0016A6 CC 72 15 00         A  2113    ext_make_dir	call z,mbase_hl					                           A  2114    
0016AA CD 2A 46 00         A  2115    os_make_dir		call fs_hl_to_filename
0016AE CD 44 3F 00         A  2116    				call fs_make_dir_command
0016B2 18 BA               A  2117    				jr os_rffsc
                           A  2118    
                           A  2119    
                           A  2120    ;----------------------------------------------
                           A  2121    
                           A  2122    
0016B4 CC 72 15 00         A  2123    ext_change_dir	call z,mbase_hl					                           A  2124    
0016B8 CD 2A 46 00         A  2125    os_change_dir	call fs_hl_to_filename
0016BC CD 77 3D 00         A  2126    				call fs_change_dir_command
0016C0 18 AC               A  2127    				jr os_rffsc
                           A  2128    				
                           A  2129    	
                           A  2130    ;----------------------------------------------
                           A  2131    	
                           A  2132    	
0016C2 CD A8 3D 00         A  2133    os_parent_dir	call fs_parent_dir_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016C6 18 A6               A  2134    				jr os_rffsc
                           A  2135    				
                           A  2136    
                           A  2137    ;----------------------------------------------
                           A  2138    
                           A  2139    	
0016C8 CD 9C 3D 00         A  2140    os_root_dir		call fs_goto_root_dir_command
0016CC 18 A0               A  2141    				jr os_rffsc
                           A  2142    
                           A  2143    
                           A  2144    ;----------------------------------------------
                           A  2145    
                           A  2146    
0016CE CC 72 15 00         A  2147    ext_erase_file	call z,mbase_hl					                           A  2148    
0016D2 CD 2A 46 00         A  2149    os_erase_file	call fs_hl_to_filename
0016D6 CD 8D 42 00         A  2150    				call fs_erase_file_command
0016DA 18 92               A  2151    				jr os_rffsc
                           A  2152    	
                           A  2153    
                           A  2154    ;----------------------------------------------
                           A  2155    
                           A  2156    
0016DC                     A  2157    os_goto_first_dir_entry	
                           A  2158    
0016DC CD E8 42 00         A  2159    				call fs_goto_first_dir_entry
0016E0 18 8C               A  2160    				jr os_rffsc
                           A  2161    
                           A  2162    
                           A  2163    ;----------------------------------------------
                           A  2164    
                           A  2165    
0016E2                     A  2166    os_get_dir_entry		
                           A  2167    
0016E2 CD FF 42 00         A  2168    				call fs_get_dir_entry	
0016E6 18 86               A  2169    				jr os_rffsc
                           A  2170    
                           A  2171    
                           A  2172    ;----------------------------------------------
                           A  2173    
                           A  2174    
0016E8                     A  2175    os_goto_next_dir_entry	
                           A  2176    	
0016E8 CD 8C 43 00         A  2177    				call fs_goto_next_dir_entry	
0016EC 18 80               A  2178    				jr os_rffsc
                           A  2179    
                           A  2180    
                           A  2181    ;----------------------------------------------
                           A  2182    
                           A  2183    
0016EE                     A  2184    os_get_current_dir_name
                           A  2185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016EE CD F0 46 00         A  2186    				call fs_get_current_dir_name
0016F2 C3 6E 16 00         A  2187    				jr os_rffsc
                           A  2188    				
                           A  2189    
                           A  2190    ;----------------------------------------------
                           A  2191    
                           A  2192    
0016F6 CC 72 15 00         A  2193    ext_rename_file	call z,mbase_hl
0016FA CC 83 15 00         A  2194    				call z,mbase_de
                           A  2195    
0016FE D5                  A  2196    os_rename_file	push de
0016FF CD 24 46 00         A  2197    				call fs_hl_to_alt_filename		001703 E1                  A  2198    				pop hl				
001704 CD 2A 46 00         A  2199    				call fs_hl_to_filename	
001708 CD A4 42 00         A  2200    				call fs_rename_command
00170C C3 6E 16 00         A  2201    				jr os_rffsc
                           A  2202    				
                           A  2203    
                           A  2204    ;----------------------------------------------
                           A  2205    
                           A  2206    
001710 CC 72 15 00         A  2207    ext_delete_dir	call z,mbase_hl					                           A  2208    
001714 CD 2A 46 00         A  2209    os_delete_dir	call fs_hl_to_filename
001718 CD 1D 40 00         A  2210    				call fs_delete_dir_command
00171C C3 6E 16 00         A  2211    				jp os_rffsc
                           A  2212    	
                           A  2213    	
                           A  2214    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2215    
                           A  2216    
001720                     A  2217    ext_read_sector
001720 CD 6B 17 00         A  2218    				call ext_sector_access_preamble
001724 C0                  A  2219    				ret nz
001725 32 DF 52 00         A  2220    				ld (current_driver),a
001729 CD C7 47 00         A  2221    				call fs_read_sector
00172D 20 11               A  2222    				jr nz,sect_done
00172F 38 0F               A  2223    				jr c,sect_done
001731 21 26 5A 00         A  2224    				ld hl,sector_buffer
001735 ED5B EF 52 00       A  2225    				ld de,(sector_rd_wr_addr)
00173A 01000200            A  2226    				ld bc,512
00173E EDB0                A  2227    				ldir			
001740 F5                  A  2228    sect_done		push af
001741 3A 15 54 00         A  2229    				ld a,(sys_driver_backup)		001745 32 DF 52 00         A  2230    				ld (current_driver),a
001749 F1                  A  2231    				pop af
00174A C3 6E 16 00         A  2232    				jp os_rffsc
                           A  2233    				
                           A  2234    
00174E                     A  2235    ext_write_sector
                           A  2236    			
00174E CD 6B 17 00         A  2237    				call ext_sector_access_preamble
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001752 C0                  A  2238    				ret nz
001753 32 DF 52 00         A  2239    				ld (current_driver),a
001757 2A EF 52 00         A  2240    				ld hl,(sector_rd_wr_addr)
00175B 11 26 5A 00         A  2241    				ld de,sector_buffer
00175F 01000200            A  2242    				ld bc,512
001763 EDB0                A  2243    				ldir			
001765 CD DF 47 00         A  2244    				call fs_write_sector
001769 18 D5               A  2245    				jr sect_done
                           A  2246    
                           A  2247    
00176B                     A  2248    ext_sector_access_preamble
                           A  2249    
00176B CC 72 15 00         A  2250    				call z,mbase_hl
00176F 22 EF 52 00         A  2251    				ld (sector_rd_wr_addr),hl
                           A  2252    				
001773 78                  A  2253    				ld a,b
001774 F5                  A  2254    				push af							001775 DD21 B5 54 00       A  2255    				ld ix,sector_lba0
00177A DD1F00              A  2256    				ld (ix),de						00177D DD7103              A  2257    				ld (ix+3),c
001780 CD 80 1A 00         A  2258    				call dev_to_driver_lookup		001784 E5                  A  2259    				push hl
001785 DDE1                A  2260    				pop ix
001787 2A B5 54 00         A  2261    				ld hl,(sector_lba0)				00178B 3A B8 54 00         A  2262    				ld a,(sector_lba3)				00178F DD0701              A  2263    				ld bc,(ix+1)					001792 B7                  A  2264    				or a							001793 ED42                A  2265    				sbc hl,bc
001795 DD9E04              A  2266    				sbc a,(ix+4)
001798 38 05               A  2267    				jr c,range_ok
00179A F1                  A  2268    				pop af
00179B 3ED5                A  2269    				ld a,0d5h						00179D B7                  A  2270    				or a							00179E C9                  A  2271    				ret
                           A  2272    	
00179F 3A DF 52 00         A  2273    range_ok		ld a,(current_driver)
0017A3 32 15 54 00         A  2274    				ld (sys_driver_backup),a
0017A7 F1                  A  2275    				pop af							0017A8 CD 80 1A 00         A  2276    				call dev_to_driver_lookup
0017AC 30 02               A  2277    				jr nc,bad_dev
0017AE BF                  A  2278    os_null			cp a							0017AF C9                  A  2279    				ret
                           A  2280    					
0017B0 3ED0                A  2281    bad_dev			ld a,0d0h						0017B2 B7                  A  2282    				or a							0017B3 C9                  A  2283    				ret	
                           A  2284    			
                           A  2285    
                           A  2286    ;----------------------------------------------
                           A  2287    
                           A  2288    
0017B4                     A  2289    os_get_device_info
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2290    
0017B4 21 90 53 00         A  2291    				ld hl,host_device_hardware_info
0017B8 11 F2 52 00         A  2292    				ld de,driver_table
0017BC 3A E0 52 00         A  2293    				ld a,(device_count)
0017C0 47                  A  2294    				ld b,a
0017C1 3A DF 52 00         A  2295    				ld a,(current_driver)
0017C5 BF                  A  2296    				cp a
0017C6 C9                  A  2297    				ret
                           A  2298    
                           A  2299    
                           A  2300    
                           A  2301    
0017C7                     A  2302    os_get_volume_info
                           A  2303    
0017C7 21 10 53 00         A  2304    				ld hl,volume_mount_list	
0017CB 3A E1 52 00         A  2305    				ld a,(volume_count)
0017CF 47                  A  2306    				ld b,a
0017D0 3A DE 52 00         A  2307    				ld a,(current_volume)
0017D4 C9                  A  2308    				ret
                           A  2309    				
                           A  2310    		
                           A  2311    ;----------------------------------------------
                           A  2312    
                           A  2313    
0017D5                     A  2314    ext_serial_get_header
                           A  2315    
0017D5 CC 72 15 00         A  2316    				call z,mbase_hl
0017D9 7B                  A  2317    				ld a,e
0017DA CD 31 38 00         A  2318    				call serial_get_header
0017DE C9                  A  2319    				ret
                           A  2320    				
                           A  2321    				
0017DF                     A  2322    ext_serial_receive_file
                           A  2323    				
0017DF CC 72 15 00         A  2324    				call z,mbase_hl
0017E3 CD CC 38 00         A  2325    				call serial_receive_file
0017E7 C9                  A  2326    				ret
                           A  2327    				
                           A  2328    	
0017E8                     A  2329    ext_serial_send_file
                           A  2330    
0017E8 CC 72 15 00         A  2331    				call z,mbase_hl
0017EC CC 96 15 00         A  2332    				call z,mbase_ix				
0017F0 CD 95 39 00         A  2333    				call serial_send_file
0017F4 C9                  A  2334    				ret
                           A  2335    
                           A  2336    
0017F5                     A  2337    ext_serial_tx
0017F5 7B                  A  2338    				ld a,e
0017F6 CD A4 2F 00         A  2339    				call send_serial_byte
0017FA AF                  A  2340    				xor a							0017FB C9                  A  2341    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2342    
                           A  2343    
0017FC                     A  2344    ext_serial_rx
0017FC 7B                  A  2345    				ld a,e
0017FD 32 AE 52 00         A  2346    				ld (serial_timeout),a
001801 CD 69 2F 00         A  2347    				call receive_serial_byte
001805 C9                  A  2348    				ret
                           A  2349    				
                           A  2350    
                           A  2351    ;----------------------------------------------
                           A  2352    
001806                     A  2353    ext_mount_volumes
                           A  2354    
001806 7B                  A  2355    				ld a,e
                           A  2356    
001807                     A  2357    os_mount_volumes
                           A  2358    				
001807 32 16 54 00         A  2359    				ld (os_quiet_mode),a			                           A  2360    				
00180B 21 C0 49 00         A  2361    				ld hl,storage_txt
00180F CD 20 0F 00         A  2362    				call os_print_string_cond
001813 CD 3B 18 00         A  2363    				call mount_go
001817 AF                  A  2364    				xor a
001818 32 DE 52 00         A  2365    tvloop			ld (current_volume),a
00181C CD 96 1A 00         A  2366    				call os_change_volume			001820 C8                  A  2367    				ret z							001821 3A DE 52 00         A  2368    				ld a,(current_volume)			001825 3C                  A  2369    				inc a
001826 FE08                A  2370    				cp max_volumes
001828 20 EE               A  2371    				jr nz,tvloop
00182A 3A E0 52 00         A  2372    				ld a,(device_count)
00182E B7                  A  2373    				or a
00182F 20 08               A  2374    				jr nz,mfsdevs
001831 21 C8 50 00         A  2375    				ld hl,none_found_msg
001835 CD EA 13 00         A  2376    				call os_show_packed_text_cond
001839 AF                  A  2377    mfsdevs			xor a
00183A C9                  A  2378    				ret
                           A  2379    
                           A  2380    
                           A  2381    
00183B 21 10 53 00         A  2382    mount_go		ld hl,volume_mount_list			00183F 01800000            A  2383    				ld bc,max_volumes*16
001843 AF                  A  2384    clrdl_lp		xor a
001844 CD 4B 15 00         A  2385    				call os_bchl_memfill
                           A  2386    								
001848 21 F8 52 00         A  2387    				ld hl,volume_dir_clusters		00184C 01180000            A  2388    				ld bc,max_volumes*3		
001850 AF                  A  2389    				xor a	
001851 CD 4B 15 00         A  2390    				call os_bchl_memfill	
                           A  2391    			
001855 11 90 53 00         A  2392    				ld de,host_device_hardware_info
001859 ED53 10 54 00       A  2393    				ld (dhwn_temp_pointer),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2394    				
00185E FD21 10 53 00       A  2395    				ld iy,volume_mount_list
001863 AF                  A  2396    				xor a
001864 32 E1 52 00         A  2397    				ld (volume_count),a
001868 32 E0 52 00         A  2398    				ld (device_count),a
00186C 32 DF 52 00         A  2399    mnt_loop		ld (current_driver),a			001870 CD 0C 1A 00         A  2400    				call locate_driver_base			001874 21000000            A  2401    				ld hl,0
001878 AF                  A  2402    				xor a
001879 ED5A                A  2403    				adc hl,de
00187B C8                  A  2404    				ret z							00187C EB                  A  2405    				ex de,hl						00187D FDE5                A  2406    				push iy
00187F CD 90 18 00         A  2407    				call find_dev					001883 FDE1                A  2408    				pop iy							001885 DC 91 18 00         A  2409    				call c,got_dev		
001889 3A DF 52 00         A  2410    nxt_drv			ld a,(current_driver)			00188D 3C                  A  2411    				inc a
00188E 18 DC               A  2412    				jr mnt_loop
                           A  2413    
                           A  2414    				
001890 E9                  A  2415    find_dev		jp (hl)
                           A  2416    			
                           A  2417    			
001891 E5                  A  2418    got_dev			push hl							001892 D5                  A  2419    				push de							001893 C5                  A  2420    				push bc
001894 CD B3 13 00         A  2421    				call os_new_line_cond			001898 015B0100            A  2422    				ld bc,015bh
00189C CD 1D 1A 00         A  2423    				call os_print_multiple_chars_co
0018A0 3A DF 52 00         A  2424    				ld a,(current_driver)
0018A4 CD 0C 1A 00         A  2425    				call locate_driver_base
0018A8 210C0000            A  2426    				ld hl,0ch
0018AC 19                  A  2427    				add hl,de
0018AD CD 20 0F 00         A  2428    				call os_print_string_cond		0018B1 015D0100            A  2429    				ld bc,015dh
0018B5 CD 1D 1A 00         A  2430    				call os_print_multiple_chars_co
0018B9 C1                  A  2431    				pop bc
0018BA D1                  A  2432    				pop de
0018BB AF                  A  2433    				xor a
0018BC 32 14 54 00         A  2434    				ld (vols_on_device_temp),a
                           A  2435    				
0018C0 21 E0 52 00         A  2436    				ld hl,device_count
0018C4 34                  A  2437    				inc (hl)						0018C5 3A DF 52 00         A  2438    				ld a,(current_driver)
0018C9 2A 10 54 00         A  2439    				ld hl,(dhwn_temp_pointer)	
0018CD 77                  A  2440    				ld (hl),a
0018CE 23                  A  2441    				inc hl
0018CF 73                  A  2442    				ld (hl),e						0018D0 FD7304              A  2443    				ld (iy+4),e						0018D3 23                  A  2444    				inc hl							0018D4 72                  A  2445    				ld (hl),d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018D5 FD7205              A  2446    				ld (iy+5),d
0018D8 23                  A  2447    				inc hl
0018D9 71                  A  2448    				ld (hl),c			
0018DA FD7106              A  2449    				ld (iy+6),c
0018DD 23                  A  2450    				inc hl
0018DE 70                  A  2451    				ld (hl),b						0018DF 23                  A  2452    				inc hl
0018E0 D1                  A  2453    				pop de
0018E1 EB                  A  2454    				ex de,hl
0018E2 01160000            A  2455    				ld bc,22
0018E6 EDB0                A  2456    				ldir							0018E8 AF                  A  2457    				xor a
0018E9 0605                A  2458    				ld b,5		
0018EB 12                  A  2459    clrrode			ld (de),a						0018EC 13                  A  2460    				inc de
0018ED 10 FC               A  2461    				djnz clrrode
0018EF ED53 10 54 00       A  2462    				ld (dhwn_temp_pointer),de		                           A  2463    					
0018F4 AF                  A  2464    				xor a							0018F5 FDE5                A  2465    fnxtpart		push iy
0018F7 CD C7 3B 00         A  2466    				call fs_get_partition_info
0018FB FDE1                A  2467    				pop iy
0018FD 38 31               A  2468    				jr c,nxt_dev					0018FF FECE                A  2469    				cp 0ceh							001901 28 2D               A  2470    				jr z,nxt_dev
001903 F5                  A  2471    				push af
001904 FD360001            A  2472    				ld (iy),1						001908 3A DF 52 00         A  2473    				ld a,(current_driver)
00190C FD7701              A  2474    				ld (iy+1),a						00190F 3A 13 54 00         A  2475    				ld a,(partition_temp)	
001913 FD7707              A  2476    				ld (iy+7),a						001916 F1                  A  2477    				pop af
001917 B7                  A  2478    				or a
001918 28 35               A  2479    				jr z,dev_mbr
00191A AF                  A  2480    				xor a
00191B FD7708              A  2481    				ld (iy+8),a						00191E FD7709              A  2482    				ld (iy+9),a						001921 FD770A              A  2483    				ld (iy+10),a					001924 FD770B              A  2484    				ld (iy+11),a
001927 CD 9B 19 00         A  2485    				call show_vol_info
00192B CD 8C 19 00         A  2486    				call test_max_vol
00192F C8                  A  2487    				ret z							                           A  2488    			
001930 3A 14 54 00         A  2489    nxt_dev			ld a,(vols_on_device_temp)		001934 B7                  A  2490    				or a
001935 C0                  A  2491    				ret nz		
001936 CD ED 19 00         A  2492    				call test_quiet_mode
00193A 20 06               A  2493    				jr nz,skp_cu
00193C 3E0A                A  2494    				ld a,10
00193E 32 BA 54 00         A  2495    				ld (cursor_x),a
001942 21 C5 50 00         A  2496    skp_cu			ld hl,no_vols_msg				001946 CD EA 13 00         A  2497    				call os_show_packed_text_cond
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00194A CD B3 13 00         A  2498    				call os_new_line_cond
00194E C9                  A  2499    				ret
                           A  2500    				
                           A  2501    			
00194F 11040000            A  2502    dev_mbr			ld de,4
001953 19                  A  2503    				add hl,de
001954 7E                  A  2504    				ld a,(hl)						001955 B7                  A  2505    				or a
001956 C8                  A  2506    				ret z							001957 19                  A  2507    				add hl,de
                           A  2508    				
001958 FDE5                A  2509    				push iy
00195A 0604                A  2510    				ld b,4
00195C 7E                  A  2511    sfmbrlp			ld a,(hl)						00195D FD7708              A  2512    				ld (iy+8),a
001960 23                  A  2513    				inc hl
001961 FD23                A  2514    				inc iy
001963 10 F7               A  2515    				djnz sfmbrlp
001965 FDE1                A  2516    				pop iy
001967 FDE5                A  2517    				push iy
001969 0603                A  2518    				ld b,3	
00196B 7E                  A  2519    nsivlp			ld a,(hl)
00196C FD7704              A  2520    				ld (iy+4),a						00196F 23                  A  2521    				inc hl
001970 FD23                A  2522    				inc iy
001972 10 F7               A  2523    				djnz nsivlp
001974 FDE1                A  2524    				pop iy
                           A  2525    				
001976 CD 9B 19 00         A  2526    				call show_vol_info
00197A CD 8C 19 00         A  2527    				call test_max_vol	
00197E C8                  A  2528    				ret z							00197F 3A 13 54 00         A  2529    				ld a,(partition_temp)
001983 3C                  A  2530    				inc a
001984 FE04                A  2531    				cp 4							001986 C2 F5 18 00         A  2532    				jp nz,fnxtpart
00198A 18 A4               A  2533    				jr nxt_dev
                           A  2534    				
                           A  2535    
00198C                     A  2536    test_max_vol
                           A  2537    			
00198C 11100000            A  2538    				ld de,16
001990 FD19                A  2539    				add iy,de			
001992 21 E1 52 00         A  2540    				ld hl,volume_count
001996 34                  A  2541    				inc (hl)
001997 7E                  A  2542    				ld a,(hl)
001998 FE08                A  2543    				cp max_volumes
00199A C9                  A  2544    				ret
                           A  2545    			
                           A  2546    			
00199B                     A  2547    show_vol_info
                           A  2548    				
00199B CD ED 19 00         A  2549    				call test_quiet_mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00199F 20 06               A  2550    				jr nz,skp_cm2
0019A1 3E09                A  2551    				ld a,9			
0019A3 32 BA 54 00         A  2552    				ld (cursor_x),a
0019A7 3A E1 52 00         A  2553    skp_cm2			ld a,(volume_count)
0019AB F5                  A  2554    				push af
0019AC C630                A  2555    				add a,30h		
0019AE 32 E6 52 00         A  2556    				ld (vol_txt+4),a	
0019B2 21 E2 52 00         A  2557    				ld hl,vol_txt
0019B6 CD 20 0F 00         A  2558    				call os_print_string_cond		0019BA 21 14 54 00         A  2559    				ld hl,vols_on_device_temp
0019BE CBC6                A  2560    				set 0,(hl)						                           A  2561    			
0019C0 F1                  A  2562    				pop af
0019C1 FDE5                A  2563    				push iy
0019C3 CD 96 1A 00         A  2564    				call os_change_volume			0019C7 28 0A               A  2565    				jr z,vform_ok					0019C9 21 75 50 00         A  2566    svi_fe			ld hl,format_err_msg		
0019CD CD EA 13 00         A  2567    svi_pem			call os_show_packed_text_cond	0019D1 18 0D               A  2568    				jr skpsvl
                           A  2569    			
0019D3 CD E3 43 00         A  2570    vform_ok		call fs_get_volume_label
0019D7 38 0E               A  2571    				jr c,svi_hwe
0019D9 B7                  A  2572    				or a
0019DA 20 ED               A  2573    				jr nz,svi_fe
0019DC CD 20 0F 00         A  2574    				call os_print_string_cond		                           A  2575    			
0019E0 CD B3 13 00         A  2576    skpsvl			call os_new_line_cond
0019E4 FDE1                A  2577    				pop iy
0019E6 C9                  A  2578    				ret
                           A  2579    				
0019E7 21 C8 4E 00         A  2580    svi_hwe			ld hl,disk_err_msg
0019EB 18 E0               A  2581    				jr svi_pem
                           A  2582    			
                           A  2583    			
0019ED                     A  2584    test_quiet_mode
                           A  2585    			
0019ED 3A 16 54 00         A  2586    				ld a,(os_quiet_mode)
0019F1 B7                  A  2587    				or a
0019F2 C9                  A  2588    				ret
                           A  2589    
                           A  2590    ;----------------------------------------------
                           A  2591    
                           A  2592    
0019F3                     A  2593    show_dev_driver_name
                           A  2594    	
                           A  2595    	
0019F3 CD 0C 1A 00         A  2596    				call locate_driver_base			0019F7 EB                  A  2597    				ex de,hl
0019F8 110C0000            A  2598    				ld de,0ch
0019FC 19                  A  2599    				add hl,de
0019FD CD 25 0F 00         A  2600    				call os_print_string			001A01 C5                  A  2601    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A02 01200100            A  2602    				ld bc,0120h
001A06 CD 22 1A 00         A  2603    				call os_print_multiple_chars	001A0A C1                  A  2604    				pop bc
001A0B C9                  A  2605    				ret
                           A  2606    
                           A  2607    
001A0C                     A  2608    locate_driver_base
                           A  2609    
001A0C E5                  A  2610    				push hl							001A0D 11030000            A  2611    				ld de,3							001A11 57                  A  2612    				ld d,a
001A12 ED5C                A  2613    				mlt de
001A14 21 F2 52 00         A  2614    				ld hl,driver_table
001A18 19                  A  2615    				add hl,de
001A19 ED17                A  2616    				ld de,(hl)
001A1B E1                  A  2617    				pop hl
001A1C C9                  A  2618    				ret
                           A  2619    				
                           A  2620    		
                           A  2621    ;----------------------------------------------
                           A  2622    
001A1D                     A  2623    os_print_multiple_chars_cond
                           A  2624    
001A1D CD ED 19 00         A  2625    				call test_quiet_mode
001A21 C0                  A  2626    				ret nz
                           A  2627    			
001A22                     A  2628    os_print_multiple_chars
                           A  2629    
                           A  2630    ;c = char
                           A  2631    ;b = count
001A22 C5                  A  2632    				push bc
001A23 E5                  A  2633    				push hl
001A24 79                  A  2634    				ld a,c
001A25 21 3B 4A 00         A  2635    				ld hl,rep_char_txt
001A29 77                  A  2636    				ld (hl),a
001A2A E5                  A  2637    pmch_lp			push hl
001A2B CD 25 0F 00         A  2638    				call os_print_string
001A2F E1                  A  2639    				pop hl
001A30 10 F8               A  2640    				djnz pmch_lp
001A32 E1                  A  2641    				pop hl
001A33 C1                  A  2642    				pop bc
001A34 C9                  A  2643    				ret
                           A  2644    
                           A  2645    ;----------------------------------------------
                           A  2646    
                           A  2647    
001A35 7B                  A  2648    ext_plot_char	ld a,e
001A36 C3 D4 31 00         A  2649    				jp hwsc_plot_char
                           A  2650    				
                           A  2651    
                           A  2652    ;----------------------------------------------
                           A  2653    ; Some file system related routines 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2654    ;----------------------------------------------
                           A  2655    
                           A  2656    
001A3A                     A  2657    fs_get_dir_cluster
                           A  2658    
                           A  2659    
001A3A F5                  A  2660    				push af							001A3B E5                  A  2661    				push hl			
001A3C CD 52 1A 00         A  2662    				call fs_get_dir_cluster_address
001A40 ED17                A  2663    				ld de,(hl)
001A42 E1                  A  2664    dclopdone		pop hl
001A43 F1                  A  2665    				pop af
001A44 BF                  A  2666    				cp a							001A45 C9                  A  2667    				ret
                           A  2668    				
                           A  2669    
                           A  2670    
                           A  2671    
                           A  2672    
001A46                     A  2673    fs_update_dir_cluster
                           A  2674    
001A46 F5                  A  2675    				push af							001A47 E5                  A  2676    				push hl			
001A48 D5                  A  2677    				push de			
001A49 CD 52 1A 00         A  2678    				call fs_get_dir_cluster_address
001A4D D1                  A  2679    				pop de
001A4E ED1F                A  2680    				ld (hl),de
001A50 18 F0               A  2681    				jr dclopdone
                           A  2682    			
                           A  2683    
                           A  2684    
                           A  2685    
                           A  2686    
001A52                     A  2687    fs_get_dir_cluster_address
                           A  2688    
001A52 21 F8 52 00         A  2689    				ld hl,volume_dir_clusters		001A56 3A DE 52 00         A  2690    				ld a,(current_volume)	
001A5A 11030000            A  2691    				ld de,3
001A5E 57                  A  2692    				ld d,a
001A5F ED5C                A  2693    				mlt de
001A61 19                  A  2694    				add hl,de
001A62 C9                  A  2695    				ret
                           A  2696    				
                           A  2697    	
                           A  2698    
                           A  2699    	
                           A  2700    	
001A63                     A  2701    fs_get_total_sectors
                           A  2702    
                           A  2703    
001A63 F5                  A  2704    				push af
001A64 E5                  A  2705    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A65 CD 74 1A 00         A  2706    				call fs_calc_volume_offset	
001A69 21 14 53 00         A  2707    				ld hl,volume_mount_list+4
001A6D 19                  A  2708    				add hl,de
001A6E ED17                A  2709    				ld de,(hl)
001A70 E1                  A  2710    				pop hl
001A71 F1                  A  2711    				pop af
001A72 BF                  A  2712    				cp a							001A73 C9                  A  2713    				ret
                           A  2714    
                           A  2715    
                           A  2716    
                           A  2717    
                           A  2718    
001A74                     A  2719    fs_calc_volume_offset
                           A  2720    
001A74 3A DE 52 00         A  2721    				ld a,(current_volume)			001A78 11100000            A  2722    calc_vol		ld de,16
001A7C 57                  A  2723    				ld d,a
001A7D ED5C                A  2724    				mlt de
001A7F C9                  A  2725    				ret
                           A  2726    
                           A  2727    
                           A  2728    
                           A  2729    
                           A  2730    
001A80                     A  2731    dev_to_driver_lookup
                           A  2732    
001A80 21 E0 52 00         A  2733    				ld hl,device_count				001A84 BE                  A  2734    				cp (hl)							001A85 D0                  A  2735    				ret nc
001A86 11200000            A  2736    				ld de,32						001A8A 57                  A  2737    				ld d,a
001A8B ED5C                A  2738    				mlt de
001A8D 21 90 53 00         A  2739    				ld hl,host_device_hardware_info
001A91 19                  A  2740    				add hl,de
001A92 7E                  A  2741    				ld a,(hl)
001A93 37                  A  2742    				scf
001A94 C9                  A  2743    				ret
                           A  2744    				
                           A  2745    
                           A  2746    
001A95                     A  2747    ext_change_volume
                           A  2748    
001A95 7B                  A  2749    				ld a,e
                           A  2750    
001A96                     A  2751    os_change_volume
                           A  2752    
001A96 47                  A  2753    				ld b,a							001A97 FE08                A  2754    				cp max_volumes		
001A99 30 23               A  2755    				jr nc,fs_ccv2					                           A  2756    			
001A9B 3A DE 52 00         A  2757    				ld a,(current_volume)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A9F F5                  A  2758    				push af
001AA0 78                  A  2759    				ld a,b
001AA1 32 DE 52 00         A  2760    				ld (current_volume),a			001AA5 CD C2 1A 00         A  2761    				call fs_set_driver_for_volume	                           A  2762    				
001AA9 CD 29 3C 00         A  2763    				call fs_check_disk_format		001AAD 38 06               A  2764    				jr c,fs_cant_chg_vols	
001AAF B7                  A  2765    				or a
001AB0 20 03               A  2766    				jr nz,fs_cant_chg_vols
001AB2 F1                  A  2767    				pop af							001AB3 AF                  A  2768    				xor a							001AB4 C9                  A  2769    				ret
                           A  2770    
                           A  2771    
001AB5                     A  2772    fs_cant_chg_vols
                           A  2773    			
001AB5 F1                  A  2774    				pop af
001AB6 32 DE 52 00         A  2775    				ld (current_volume),a			001ABA CD C2 1A 00         A  2776    				call fs_set_driver_for_volume	                           A  2777    				
001ABE 3ECF                A  2778    fs_ccv2			ld a,0cfh						001AC0 B7                  A  2779    				or a
001AC1 C9                  A  2780    				ret
                           A  2781    					
                           A  2782    	
001AC2                     A  2783    fs_set_driver_for_volume
                           A  2784    
001AC2 CD 74 1A 00         A  2785    				call fs_calc_volume_offset		001AC6 21 11 53 00         A  2786    				ld hl,volume_mount_list+1
001ACA 19                  A  2787    				add hl,de
001ACB 7E                  A  2788    				ld a,(hl)
001ACC 32 DF 52 00         A  2789    				ld (current_driver),a
001AD0 C9                  A  2790    				ret
                           A  2791    
                           A  2792    
                           A  2793    ;----------------------------------------------
                           A  2794    
001AD1                     A  2795    ext_file_sector_list
                           A  2796    
                           A  2797    ;Input HL = cluster, E = sector offset
                           A  2798    
                           A  2799    ;Output HL = new cluster, E = new sector number
                           A  2800    ;       IX = address of LBA0 LSB of sector (int
                           A  2801    
                           A  2802    				
001AD1 3A 3A 48 00         A  2803    				ld a,(fs_cluster_size)
001AD5 BB                  A  2804    				cp e
001AD6 20 0A               A  2805    				jr nz,fsl_sc
001AD8 CD 6F 46 00         A  2806    				call get_fat_entry_for_cluster
001ADC DA 09 16 00         A  2807    				jp c,os_fferr
001AE0 1E00                A  2808    				ld e,0
001AE2 CD 46 47 00         A  2809    fsl_sc			call cluster_and_offset_to_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AE6 1C                  A  2810    				inc e
001AE7 DD21 B5 54 00       A  2811    fsl_done		ld ix,sector_lba0
001AEC BF                  A  2812    				cp a							001AED C9                  A  2813    				ret
                           A  2814    				
                           A  2815    ;----------------------------------------------
                           A  2816    
                           A  2817    
001AEE E5                  A  2818    os_count_chars	push hl							001AEF 01000000            A  2819    				ld bc,0
001AF3 7E                  A  2820    cch_lp			ld a,(hl)
001AF4 B7                  A  2821    				or a
001AF5 28 04               A  2822    				jr z,cch_end
001AF7 23                  A  2823    				inc hl
001AF8 03                  A  2824    				inc bc
001AF9 18 F8               A  2825    				jr cch_lp
001AFB E1                  A  2826    cch_end			pop hl
001AFC C9                  A  2827    				ret
                           A  2828    				
                           A  2829    			
                           A  2830    ;----------------------------------------------
                           A  2831    ; Environment variable code V0.01
                           A  2832    ;----------------------------------------------
                           A  2833    
       00000100            A  2834    envar_buffer_size equ 256
                           A  2835    
                           A  2836    ;----------------------------------------------
                           A  2837    
001AFD                     A  2838    ext_get_envar
001AFD CC 72 15 00         A  2839    				call z,mbase_hl
                           A  2840    
001B01                     A  2841    os_get_envar
                           A  2842    
                           A  2843    ;Set: 		HL = name of required variable
                           A  2844    ;Returns:	ZF Set: DE = address of variable's 
                           A  2845    ;        	ZF Not Set: Couldn't find variable
                           A  2846    				
001B01 DD21 39 56 00       A  2847    				ld ix,envar_list-1
001B06 CD EE 1A 00         A  2848    env_fname		call os_count_chars				001B0A 78                  A  2849    				ld a,b
001B0B B1                  A  2850    				or c
001B0C 28 27               A  2851    				jr z,env_bad
                           A  2852    								
001B0E ED1201              A  2853    env_cname		lea de,ix+1
001B11 1A                  A  2854    				ld a,(de)
001B12 FEFF                A  2855    				cp 0ffh
001B14 28 1F               A  2856    				jr z,env_bad
001B16 C5                  A  2857    				push bc
001B17 41                  A  2858    				ld b,c
001B18 CD DF 11 00         A  2859    				call os_compare_strings
001B1C C1                  A  2860    				pop bc
001B1D 20 06               A  2861    				jr nz,env_nomatch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B1F 03                  A  2862    				inc bc							001B20 EB                  A  2863    				ex de,hl
001B21 09                  A  2864    				add hl,bc
001B22 EB                  A  2865    				ex de,hl						001B23 AF                  A  2866    				xor a
001B24 C9                  A  2867    				ret			
                           A  2868    				
001B25 DD23                A  2869    env_nomatch		inc ix							001B27 CD CD 1B 00         A  2870    				call check_envar_bounds
001B2B 20 08               A  2871    				jr nz,env_bad
001B2D DD7E00              A  2872    				ld a,(ix)
001B30 B7                  A  2873    				or a
001B31 28 DB               A  2874    				jr z,env_cname
001B33 18 F0               A  2875    				jr env_nomatch
                           A  2876    
001B35 3E82                A  2877    env_bad			ld a,82h						001B37 B7                  A  2878    				or a
001B38 C9                  A  2879    				ret	
                           A  2880    				
                           A  2881    ;----------------------------------------------
                           A  2882    
001B39                     A  2883    ext_set_envar
                           A  2884    
                           A  2885    ;HL = addr of variable name (zero terminated)
                           A  2886    ;DE = addr of data for variable (zero terminate
                           A  2887    
                           A  2888    ;Returns:
                           A  2889    ;ZF = Set: OK
                           A  2890    ;ZF = Not Set: No enough space for new variable
                           A  2891    		
001B39 CC 72 15 00         A  2892    				call z,mbase_hl
001B3D CC 83 15 00         A  2893    				call z,mbase_de
                           A  2894    
001B41 7E                  A  2895    os_set_envar	ld a,(hl)						001B42 B7                  A  2896    				or a
001B43 28 F0               A  2897    				jr z,env_bad
001B45 1A                  A  2898    				ld a,(de)
001B46 B7                  A  2899    				or a
001B47 28 EC               A  2900    				jr z,env_bad
                           A  2901    
001B49 E5                  A  2902    				push hl
001B4A D5                  A  2903    				push de
001B4B CD 97 1B 00         A  2904    				call os_delete_envar			001B4F D1                  A  2905    				pop de
001B50 E1                  A  2906    				pop hl
                           A  2907    				
001B51 DD2A 44 57 00       A  2908    				ld ix,(envar_top_loc)			001B56 CD CD 1B 00         A  2909    env_enlp		call check_envar_bounds
001B5A 20 D9               A  2910    				jr nz,env_bad
001B5C 7E                  A  2911    				ld a,(hl)						001B5D DD7700              A  2912    				ld (ix),a
001B60 B7                  A  2913    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B61 28 05               A  2914    				jr z,env_ndone
001B63 23                  A  2915    				inc hl
001B64 DD23                A  2916    				inc ix
001B66 18 EE               A  2917    				jr env_enlp
                           A  2918    				
001B68 CD CD 1B 00         A  2919    env_ndone		call check_envar_bounds			001B6C 20 C7               A  2920    				jr nz,env_bad
001B6E DD36003D            A  2921    				ld (ix),'='
001B72 DD23                A  2922    				inc ix
                           A  2923    
001B74 CD CD 1B 00         A  2924    env_evlp		call check_envar_bounds			001B78 20 BB               A  2925    				jr nz,env_bad
001B7A 1A                  A  2926    				ld a,(de)
001B7B DD7700              A  2927    				ld (ix),a
001B7E B7                  A  2928    				or a
001B7F 28 05               A  2929    				jr z,env_vdone
001B81 13                  A  2930    				inc de
001B82 DD23                A  2931    				inc ix
001B84 18 EE               A  2932    				jr env_evlp
                           A  2933    
001B86 DD23                A  2934    env_vdone		inc ix
001B88 DD3600FF            A  2935    				ld (ix),0ffh
001B8C DD22 44 57 00       A  2936    				ld (envar_top_loc),ix			001B91 AF                  A  2937    				xor a
001B92 C9                  A  2938    				ret
                           A  2939    
                           A  2940    	
                           A  2941    ;----------------------------------------------
                           A  2942    
001B93                     A  2943    ext_delete_envar
                           A  2944    
001B93 CC 72 15 00         A  2945    				call z,mbase_hl
                           A  2946    
001B97                     A  2947    os_delete_envar
                           A  2948    
                           A  2949    ;HL = name of required variable (null terminate
                           A  2950    ;ZF = Set: OK
                           A  2951    ;ZF = Not Set: Didnt find named variable
                           A  2952    
                           A  2953    
001B97 CD 01 1B 00         A  2954    				call os_get_envar				001B9B C0                  A  2955    				ret nz
                           A  2956    				
001B9C D5                  A  2957    				push de
001B9D E1                  A  2958    				pop hl
001B9E AF                  A  2959    				xor a
001B9F ED42                A  2960    				sbc hl,bc						                           A  2961    				
001BA1 13                  A  2962    env_fnxt		inc de							001BA2 D5                  A  2963    				push de
001BA3 DDE1                A  2964    				pop ix
001BA5 CD CD 1B 00         A  2965    				call check_envar_bounds
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BA9 20 8A               A  2966    				jr nz,env_bad
001BAB 1A                  A  2967    				ld a,(de)
001BAC B7                  A  2968    				or a
001BAD 20 F2               A  2969    				jr nz,env_fnxt
                           A  2970    
001BAF 13                  A  2971    env_gnxt		inc de							001BB0 EB                  A  2972    				ex de,hl
001BB1 7E                  A  2973    env_collp		ld a,(hl)
001BB2 12                  A  2974    				ld (de),a						001BB3 FEFF                A  2975    				cp 0ffh
001BB5 28 0F               A  2976    				jr z,env_clspd					001BB7 E5                  A  2977    				push hl
001BB8 DDE1                A  2978    				pop ix
001BBA CD CD 1B 00         A  2979    				call check_envar_bounds
001BBE C2 35 1B 00         A  2980    				jr nz,env_bad
001BC2 23                  A  2981    				inc hl
001BC3 13                  A  2982    				inc de
001BC4 18 EB               A  2983    				jr env_collp
                           A  2984    
001BC6 ED53 44 57 00       A  2985    env_clspd		ld (envar_top_loc),de			001BCB AF                  A  2986    				xor a
001BCC C9                  A  2987    				ret
                           A  2988    				
                           A  2989    ;----------------------------------------------
                           A  2990    
001BCD                     A  2991    check_envar_bounds
                           A  2992    
001BCD C5                  A  2993    				push bc
001BCE E5                  A  2994    				push hl
001BCF DDE5                A  2995    				push ix
001BD1 E1                  A  2996    				pop hl
001BD2 01 3B 57 00         A  2997    				ld bc,1+(envar_list+envar_buffe
001BD6 AF                  A  2998    				xor a
001BD7 ED42                A  2999    				sbc hl,bc
001BD9 38 05               A  3000    				jr c,env_bok
001BDB AF                  A  3001    				xor a
001BDC 3C                  A  3002    				inc a
001BDD E1                  A  3003    				pop hl
001BDE C1                  A  3004    				pop bc
001BDF C9                  A  3005    				ret
                           A  3006    
001BE0 AF                  A  3007    env_bok			xor a
001BE1 E1                  A  3008    				pop hl
001BE2 C1                  A  3009    				pop bc
001BE3 C9                  A  3010    				ret
                           A  3011    						
                           A  3012    ;----------------------------------------------
                           A  3013    
001BE4                     A  3014    os_get_keymap_location
                           A  3015    
001BE4 21 11 51 00         A  3016    				ld hl,unshifted_keymap
001BE8 BF                  A  3017    				cp a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BE9 C9                  A  3018    				ret
                           A  3019    
                           A  3020    ;----------------------------------------------
                           A  3021    
001BEA                     A  3022    os_get_font_info
                           A  3023    
001BEA DD21 70 52 00       A  3024    				ld ix,font_parameters
001BEF BF                  A  3025    				cp a
001BF0 C9                  A  3026    				ret
                           A  3027    
                           A  3028    ;==============================================
                           A  3029    ; Internal OS command routines
                           A  3030    ;==============================================
                           A  3031    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001BF1                     B     5    os_cmd_c
                           B     6    
001BF1 CD 27 1C 00         B     7    				call get_start_and_end			                           B     8    				
001BF5 CD 50 1C 00         B     9    				call hexword_or_bust			001BF9 CA ED 15 00         B    10    				jp z,os_no_d_addr_error
001BFD ED53 C8 54 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C02 CD 15 1C 00         B    13    				call test_mem_range				001C06 DA F1 15 00         B    14    				jp c,os_range_error				001C0A ED5B C8 54 00       B    15    				ld de,(copy_dest_address)
001C0F EDB0                B    16    				ldir
                           B    17    
001C11 3E20                B    18    copy_done		ld a,020h						001C13 B7                  B    19    				or a
001C14 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C15                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C15 2A C5 54 00         B    33    				ld hl,(cmdop_end_address)	
001C19 ED4B C2 54 00       B    34    				ld bc,(cmdop_start_address)
001C1E C5                  B    35    				push bc
001C1F AF                  B    36    				xor a
001C20 ED42                B    37    				sbc hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C22 E5                  B    38    				push hl
001C23 C1                  B    39    				pop bc
001C24 03                  B    40    				inc bc
001C25 E1                  B    41    				pop hl
001C26 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C27                     B    46    get_start_and_end
                           B    47    			
001C27 CD 9C 10 00         B    48    				call ascii_to_hexword			001C2B ED53 C2 54 00       B    49    				ld (cmdop_start_address),de
001C30 23                  B    50    				inc hl
001C31 28 09               B    51    				jr z,st_addrok
001C33 E1                  B    52    				pop hl							001C34 FE82                B    53    				cp 82h							001C36 28 02               B    54    				jr z,c_badhex
001C38 3E16                B    55    				ld a,016h						001C3A B7                  B    56    c_badhex		or a
001C3B C9                  B    57    				ret
                           B    58    				
001C3C CD 9C 10 00         B    59    st_addrok		call ascii_to_hexword			001C40 ED53 C5 54 00       B    60    				ld (cmdop_end_address),de
001C45 23                  B    61    				inc hl
001C46 B7                  B    62    				or a
001C47 C8                  B    63    				ret z
001C48 E1                  B    64    				pop hl							001C49 FE82                B    65    				cp 82h							001C4B 28 ED               B    66    				jr z,c_badhex
001C4D 3E1C                B    67    				ld a,01ch						001C4F C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C50                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C50 CD 9C 10 00         B    79    				call ascii_to_hexword		
001C54 FE82                B    80    				cp 82h
001C56 20 03               B    81    				jr nz,hex_good
001C58 E1                  B    82    				pop hl						; r
001C59 B7                  B    83    				or a	
001C5A C9                  B    84    				ret			 
001C5B FE81                B    85    hex_good		cp 081h						; n
001C5D C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C5E                     B     5    os_cmd_cd	
                           B     6    
001C5E CD 6A 16 00         B     7    				call os_check_volume_format	
001C62 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C63 7E                  B    11    				ld a,(hl)						001C64 B7                  B    12    				or a				
001C65 CA 0C 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C69 7E                  B    16    				ld a,(hl)						001C6A 23                  B    17    				inc hl
001C6B 46                  B    18    				ld b,(hl)
001C6C 2B                  B    19    				dec hl
001C6D FE2E                B    20    				cp '.'			
001C6F 20 08               B    21    				jr nz,cd_nual
001C71 B8                  B    22    				cp b
001C72 20 05               B    23    				jr nz,cd_nual
001C74 CD C2 16 00         B    24    				call os_parent_dir	
001C78 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001C79 FE2F                B    28    cd_nual			cp 02fh			
001C7B 20 05               B    29    				jr nz,cd_nogor					001C7D CD C8 16 00         B    30    				call os_root_dir	
001C81 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001C82 FE25                B    34    cd_nogor		cp '%'							001C84 20 1F               B    35    				jr nz,cd_no_assign
001C86 CD 01 1B 00         B    36    				call os_get_envar
001C8A 28 04               B    37    				jr z,cd_evok
001C8C 3ED1                B    38    				ld a,0d1h						001C8E B7                  B    39    				or a
001C8F C9                  B    40    				ret
001C90 11000000            B    41    cd_evok			ld de,0
001C94 5E                  B    42    				ld e,(hl)
001C95 23                  B    43    				inc hl
001C96 56                  B    44    				ld d,(hl)
001C97 23                  B    45    				inc hl
001C98 7E                  B    46    				ld a,(hl)
001C99 D5                  B    47    				push de
001C9A CD 96 1A 00         B    48    				call os_change_volume
001C9E D1                  B    49    				pop de
001C9F C0                  B    50    				ret nz
001CA0 CD 46 1A 00         B    51    				call fs_update_dir_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CA4 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CA5                     B    55    cd_no_assign
                           B    56    			
001CA5 3A DE 52 00         B    57    				ld a,(current_volume)
001CA9 32 29 5C 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CAD E5                  B    60    				push hl
001CAE DDE1                B    61    				pop ix
001CB0 DD7E04              B    62    				ld a,(ix+4)
001CB3 FE3A                B    63    				cp ':'							001CB5 20 25               B    64    				jr nz,cd_nchvol
001CB7 11 E3 52 00         B    65    				ld de,vol_txt+1
001CBB 0603                B    66    				ld b,3
001CBD CD DF 11 00         B    67    				call os_compare_strings
001CC1 20 19               B    68    				jr nz,cd_nchvol
001CC3 11050000            B    69    				ld de,5
001CC7 19                  B    70    				add hl,de
001CC8 22 7B 55 00         B    71    				ld (os_args_loc),hl				001CCC DD7E03              B    72    				ld a,(ix+3)						001CCF D630                B    73    				sub 030h
001CD1 CD 96 1A 00         B    74    				call os_change_volume
001CD5 C0                  B    75    				ret nz							001CD6 CD C8 16 00         B    76    				call os_root_dir				001CDA 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001CDC CD 3A 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001CE0 ED53 26 5C 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001CE5 E5                  B    83    cd_mollp		push hl
001CE6 CD B8 16 00         B    84    				call os_change_dir				001CEA E1                  B    85    				pop hl
001CEB 20 0A               B    86    				jr nz,cd_dcherr
001CED 7E                  B    87    cd_mol			ld a,(hl)						001CEE 23                  B    88    				inc hl
001CEF B7                  B    89    				or a
001CF0 C8                  B    90    				ret z
001CF1 FE2F                B    91    				cp 02fh
001CF3 28 F0               B    92    				jr z,cd_mollp
001CF5 18 F6               B    93    				jr cd_mol
                           B    94    					
001CF7                     B    95    cd_dcherr	
                           B    96    			
001CF7 F5                  B    97    				push af							001CF8 ED5B 26 5C 00       B    98    				ld de,(original_dir_cd_cmd)
001CFD CD 46 1A 00         B    99    				call fs_update_dir_cluster
001D01 3A 29 5C 00         B   100    				ld a,(original_vol_cd_cmd)
001D05 CD 96 1A 00         B   101    				call os_change_volume	
001D09 F1                  B   102    				pop af
001D0A B7                  B   103    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D0B C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D0C                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D0C 0610                B   113    				ld b,max_dirs
001D0E 0E00                B   114    				ld c,0
001D10 C5                  B   115    lp1				push bc
001D11 CD 3A 1A 00         B   116    				call fs_get_dir_cluster
001D15 C1                  B   117    				pop bc
001D16 D5                  B   118    				push de
001D17 0C                  B   119    				inc c
001D18 C5                  B   120    				push bc
001D19 CD C2 16 00         B   121    				call os_parent_dir
001D1D C1                  B   122    				pop bc
001D1E 20 02               B   123    				jr nz,shdir_lp
001D20 10 EE               B   124    				djnz lp1
                           B   125    				
001D22 D1                  B   126    shdir_lp		pop de
001D23 C5                  B   127    				push bc
001D24 CD 46 1A 00         B   128    				call fs_update_dir_cluster
001D28 CD EE 16 00         B   129    				call os_get_current_dir_name
001D2C CD 25 0F 00         B   130    				call os_print_string
001D30 21 42 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D34 CD 25 0F 00         B   132    				call os_print_string
001D38 C1                  B   133    				pop bc
001D39 0D                  B   134    				dec c
001D3A 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D3C CD B8 13 00         B   137    				call os_new_line	
001D40 AF                  B   138    				xor a
001D41 C9                  B   139    				ret
                           B   140    			
001D42 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00005C26            B   145    original_dir_cd_cmd		equ scratch_pad 
       00005C29            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D44                     B     5    os_cmd_cls
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cls.asm
001D44 CD E7 30 00         B     7    				call hwsc_clear_screen
001D48 AF                  B     8    				xor a
001D49 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D4A                     B     5    os_cmd_colon
                           B     6    	
001D4A CD 50 1C 00         B     7    				call hexword_or_bust			001D4E CA DD 15 00         B     8    				jp z,os_no_start_addr			001D52 D5                  B     9    				push de
001D53 DDE1                B    10    				pop ix							                           B    11    			
001D55 CD 50 1C 00         B    12    wmblp			call hexword_or_bust			001D59 28 07               B    13    				jr z,os_ccmdn
001D5B DD7300              B    14    				ld (ix),e						001D5E DD23                B    15    				inc ix
001D60 18 F3               B    16    				jr wmblp
                           B    17    
001D62 AF                  B    18    os_ccmdn		xor a
001D63 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: Z80 Disassembler
                           B     3    ;
                           B     4    ; Not currently enabled
                           B     5    ;----------------------------------------------
                           B     6    
001D64                     B     7    os_cmd_d
                           B     8    
001D64 21 6E 1D 00         B     9    			ld hl,not_yet_txt
001D68 CD 25 0F 00         B    10    			call os_print_string
001D6C AF                  B    11    			xor a
001D6D C9                  B    12    			ret
                           B    13    
001D6E                     B    14    not_yet_txt
                           B    15    
001D6E 436F6D6D 616E6420   B    16    			db 'Command not yet implemented.',1
001D76 6E6F7420 79657420 
001D7E 696D706C 656D656E 
001D86 7465642E 0B00 
                           B    17    			
                           B    18    ;----------------------------------------------
                           B     0    	include 'commands\del.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
001D8C                     B     6    os_cmd_del
                           B     7    	
001D8C CD 6A 16 00         B     8    				call os_check_volume_format	
001D90 C0                  B     9    				ret nz
                           B    10    			
001D91 CD 99 1D 00         B    11    				call filename_or_bust
                           B    12    				
001D95 C3 D2 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
001D99                     B    18    filename_or_bust
                           B    19    			
001D99 7E                  B    20    				ld a,(hl)					;is
001D9A B7                  B    21    				or a
001D9B C0                  B    22    				ret nz
001D9C E1                  B    23    				pop hl						;ot
001D9D C3 D5 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
001DA1                     B     5    os_cmd_dir
                           B     6    
001DA1 CD 6A 16 00         B     7    				call os_check_volume_format	
001DA5 C0                  B     8    				ret nz
                           B     9    				
001DA6 CD 80 1E 00         B    10    				call div_line
001DAA CD F0 46 00         B    11    				call fs_get_current_dir_name	001DAE D8                  B    12    				ret c
001DAF C0                  B    13    				ret nz
001DB0 CD 25 0F 00         B    14    				call os_print_string
001DB4 CD 3A 1A 00         B    15    				call fs_get_dir_cluster			001DB8 7A                  B    16    				ld a,d
001DB9 B3                  B    17    				or e
001DBA 20 08               B    18    				jr nz,dcmdnr
001DBC CD E3 43 00         B    19    				call fs_get_volume_label
001DC0 CD 25 0F 00         B    20    				call os_print_string
001DC4 CD B8 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
001DC8 CD 80 1E 00         B    23    nrootdir		call div_line
001DCC CD E8 42 00         B    24    				call fs_goto_first_dir_entry
001DD0 D8                  B    25    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
001DD1 20 6F               B    26    				jr nz,os_dlr
001DD3 AF                  B    27    				xor a
001DD4 32 BE 54 00         B    28    				ld (os_linecount),a
                           B    29    				
001DD8 CD FF 42 00         B    30    os_dfllp		call fs_get_dir_entry			001DDC D8                  B    31    				ret c
001DDD 20 63               B    32    				jr nz,os_dlr					001DDF C5                  B    33    				push bc
001DE0 CD 25 0F 00         B    34    				call os_print_string			001DE4 CD E3 13 00         B    35    				call os_get_cursor_position		001DE8 060E                B    36    				ld b,14
001DEA CD C3 13 00         B    37    				call os_set_cursor_position	
001DEE C1                  B    38    				pop bc
001DEF CB40                B    39    				bit 0,b							001DF1 28 06               B    40    				jr z,os_deif		
001DF3 21 8D 1E 00         B    41    				ld hl,dir_txt					001DF7 18 32               B    42    				jr os_dpl
                           B    43    				
001DF9 21 DE 49 00         B    44    os_deif			ld hl,os_hex_prefix_txt			001DFD CD 25 0F 00         B    45    				call os_print_string
001E01 ED53 26 5C 00       B    46    				ld (scratch_pad),de
001E06 79                  B    47    				ld a,c
001E07 32 29 5C 00         B    48    				ld (scratch_pad+3),a
001E0B 21 29 55 00         B    49    				ld hl,output_line
001E0F E5                  B    50    				push hl
001E10 ED5B 28 5C 00       B    51    				ld de,(scratch_pad+2)
001E15 CD 8D 10 00         B    52    				call hexword_to_ascii
001E19 ED5B 26 5C 00       B    53    				ld de,(scratch_pad)
001E1E CD 8D 10 00         B    54    				call hexword_to_ascii
001E22 3600                B    55    				ld (hl),0
001E24 E1                  B    56    				pop hl
001E25 0607                B    57    				ld b,7							001E27 CD 45 10 00         B    58    				call os_skip_leading_ascii_zero
001E2B CD 25 0F 00         B    59    os_dpl			call os_print_string
001E2F CD B8 13 00         B    60    				call os_new_line
                           B    61    				
001E33 CD 8C 43 00         B    62    				call fs_goto_next_dir_entry
001E37 20 09               B    63    				jr nz,os_dlr					001E39 CD B6 11 00         B    64    				call os_count_lines
001E3D 3E79                B    65    				ld a,'y'
001E3F B8                  B    66    				cp b
001E40 28 96               B    67    				jr z,os_dfllp
                           B    68    				
001E42 CD 80 1E 00         B    69    os_dlr			call div_line					001E46 CD 1B 3D 00         B    70    				call fs_calc_free_space
001E4A D8                  B    71    				ret c	
001E4B CD 59 1E 00         B    72    				call show_hlde_decimal
001E4F 21 93 1E 00         B    73    				ld hl,kb_spare_txt
001E53 CD 25 0F 00         B    74    				call os_print_string
001E57 AF                  B    75    				xor a
001E58 C9                  B    76    				ret
                           B    77    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    78    ;----------------------------------------------
                           B    79    
001E59                     B    80    show_hlde_decimal
                           B    81    
001E59 CD 4B 12 00         B    82    				call os_hex_to_decimal			001E5D 11070000            B    83    				ld de,7
001E61 19                  B    84    				add hl,de						001E62 43                  B    85    				ld b,e
001E63 11 29 55 00         B    86    				ld de,output_line
001E67 D5                  B    87    				push de
001E68 7E                  B    88    dec2strlp		ld a,(hl)						001E69 B7                  B    89    				or a
001E6A 20 03               B    90    				jr nz,foundlnz
001E6C 2B                  B    91    				dec hl
001E6D 10 F9               B    92    				djnz dec2strlp
001E6F 04                  B    93    foundlnz		inc b
001E70 7E                  B    94    ndecchar		ld a,(hl)						001E71 C630                B    95    				add a,030h
001E73 12                  B    96    				ld (de),a
001E74 13                  B    97    				inc de
001E75 2B                  B    98    				dec hl
001E76 10 F8               B    99    				djnz ndecchar
001E78 AF                  B   100    				xor a
001E79 12                  B   101    				ld (de),a
001E7A E1                  B   102    				pop hl							001E7B CD 25 0F 00         B   103    				call os_print_string
001E7F C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
001E80 0E2D                B   108    div_line		ld c,'-'
001E82 0613                B   109    				ld b,19
001E84 CD 22 1A 00         B   110    				call os_print_multiple_chars
001E88 CD B8 13 00         B   111    				call os_new_line
001E8C C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
001E8D 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
001E93 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
001E9B 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001E9D                     B     5    os_cmd_f			
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
001E9D CD 27 1C 00         B     7    				call get_start_and_end			                           B     8    			
001EA1 CD 50 1C 00         B     9    				call hexword_or_bust			001EA5 CA F5 15 00         B    10    				jp z,os_no_args_error			001EA9 7B                  B    11    				ld a,e
001EAA 32 D5 54 00         B    12    				ld (fillbyte),a
                           B    13    					
001EAE CD 15 1C 00         B    14    				call test_mem_range
001EB2 DA F1 15 00         B    15    				jp c,os_range_error				                           B    16    					
001EB6 3A D5 54 00         B    17    				ld a,(fillbyte)
001EBA 77                  B    18    f_floop			ld (hl),a
001EBB EDA1                B    19    				cpi								001EBD EA BA 1E 00         B    20    				jp pe,f_floop
                           B    21    					
001EC1 3E20                B    22    				ld a,020h						001EC3 B7                  B    23    				or a
001EC4 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
001EC5                     B     9    os_cmd_format
                           B    10    
001EC5 7E                  B    11    				ld a,(hl)						001EC6 B7                  B    12    				or a
001EC7 20 04               B    13    				jr nz,fgotargs					001EC9 3E1F                B    14    				ld a,01fh						001ECB B7                  B    15    				or a
001ECC C9                  B    16    				ret
                           B    17    			
001ECD                     B    18    fgotargs	
001ECD 11 51 48 00         B    19    				ld de,fs_sought_filename
001ED1 CD 39 47 00         B    20    				call fs_clear_filename			001ED5 E5                  B    21    				push hl							001ED6 CD A6 0F 00         B    22    				call os_next_arg
001EDA 20 04               B    23    				jr nz,fgotlab
001EDC 21 0D 20 00         B    24    				ld hl,default_label
001EE0 060B                B    25    fgotlab			ld b,11
001EE2 CD FE 11 00         B    26    				call os_copy_ascii_run
001EE6 E1                  B    27    				pop hl
                           B    28    				
001EE7 3A E0 52 00         B    29    				ld a,(device_count)				001EEB B7                  B    30    				or a
001EEC 28 25               B    31    				jr z,fno_dev
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
001EEE 47                  B    32    				ld b,a
001EEF 0E00                B    33    				ld c,0							001EF1 DD21 90 53 00       B    34    				ld ix,host_device_hardware_info
001EF6 DD7E00              B    35    fdev_lp			ld a,(ix)						001EF9 CD 0C 1A 00         B    36    				call locate_driver_base			001EFD D5                  B    37    				push de
001EFE FDE1                B    38    				pop iy
001F00 ED130C              B    39    				lea de,iy+0ch					001F03 C5                  B    40    				push bc
001F04 0607                B    41    				ld b,7
001F06 CD DF 11 00         B    42    				call os_compare_strings
001F0A C1                  B    43    				pop bc
001F0B 28 0A               B    44    				jr z,format_dev
001F0D ED3220              B    45    				lea ix,ix+20h					001F10 0C                  B    46    				inc c
001F11 10 E3               B    47    				djnz fdev_lp
                           B    48    			
001F13 3ED0                B    49    fno_dev			ld a,0d0h						001F15 B7                  B    50    				or a
001F16 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
001F17 C5                  B    58    format_dev		push bc
001F18 CD B8 13 00         B    59    				call os_new_line
001F1C 21 DE 1F 00         B    60    				ld hl,form_dev_warn1
001F20 CD EF 13 00         B    61    				call os_show_packed_text
001F24 C1                  B    62    				pop bc
                           B    63    				
001F25 79                  B    64    				ld a,c							001F26 C630                B    65    				add a,030h
001F28 32 EC 52 00         B    66    				ld (dev_txt+3),a
001F2C 21 E9 52 00         B    67    				ld hl,dev_txt	
001F30 CD 25 0F 00         B    68    				call os_print_string			                           B    69    				
001F34 79                  B    70    				ld a,c
001F35 CD 80 1A 00         B    71    				call dev_to_driver_lookup		001F39 E5                  B    72    				push hl
001F3A 32 DF 52 00         B    73    				ld (current_driver),a
001F3E CD F3 19 00         B    74    				call show_dev_driver_name		001F42 DDE1                B    75    				pop ix
001F44 DD1701              B    76    				ld de,(ix+1)
001F47 FD21 D1 54 00       B    77    				ld iy,xrr_temp
001F4C FD1F00              B    78    				ld (iy),de						001F4F FDCB023E            B    79    				srl (iy+2)
001F53 FDCB011E            B    80    				rr (iy+1)
001F57 FDCB001E            B    81    				rr (iy+0)						001F5B FD1700              B    82    				ld de,(iy)						001F5E CD 59 1E 00         B    83    				call show_hlde_decimal			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
001F62 21 18 20 00         B    84    				ld hl,kb_txt
001F66 CD 25 0F 00         B    85    				call os_print_string
001F6A ED2205              B    86    				lea hl,ix+5		
001F6D CD 25 0F 00         B    87    				call os_print_string			001F71 3E29                B    88    				ld a,')'
001F73 CD 67 0F 00         B    89    				call os_print_char
                           B    90    				
001F77 CD B8 13 00         B    91    				call os_new_line
001F7B CD B8 13 00         B    92    				call os_new_line
001F7F 21 E5 1F 00         B    93    				ld hl,form_dev_warn2
001F83 CD D5 1F 00         B    94    				call show_packed_text_and_cr
001F87 CD BD 1F 00         B    95    				call confirm_yes
001F8B 20 28               B    96    				jr nz,ab_form
                           B    97    				
001F8D 21 EF 1F 00         B    98    				ld hl,formatting_txt			001F91 CD 25 0F 00         B    99    				call os_print_string
                           B   100    				
001F95 CD 9E 3A 00         B   101    				call fs_format_device_command
001F99 38 10               B   102    				jr c,form_err
001F9B B7                  B   103    				or a
001F9C 20 0D               B   104    				jr nz,form_err
                           B   105    			
001F9E 21 FF 1F 00         B   106    				ld hl,ok_txt					001FA2 CD 25 0F 00         B   107    				call os_print_string
                           B   108    				
001FA6 CD B2 26 00         B   109    f_end			call os_cmd_remount				001FAA C9                  B   110    				ret
                           B   111    			
001FAB                     B   112    form_err
001FAB 21 04 20 00         B   113    				ld hl,ferr_txt
001FAF CD 25 0F 00         B   114    				call os_print_string
001FB3 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
001FB5 CD B8 13 00         B   121    ab_form			call os_new_line
001FB9 3E24                B   122    				ld a,024h						001FBB B7                  B   123    				or a
001FBC C9                  B   124    				ret
                           B   125    				
001FBD                     B   126    confirm_yes
                           B   127    			
001FBD 21 26 5C 00         B   128    				ld hl,scratch_pad
001FC1 1E03                B   129    				ld e,3
001FC3 E5                  B   130    				push hl
001FC4 CD F1 10 00         B   131    				call os_user_input
001FC8 E1                  B   132    				pop hl
001FC9 C0                  B   133    				ret nz
001FCA 0603                B   134    				ld b,3
001FCC 11 A5 4D 00         B   135    				ld de,yes_txt+1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
001FD0 CD DF 11 00         B   136    				call os_compare_strings
001FD4 C9                  B   137    				ret
                           B   138    			
                           B   139    			
001FD5                     B   140    show_packed_text_and_cr
                           B   141    			
001FD5 CD EF 13 00         B   142    				call os_show_packed_text
001FD9 CD B8 13 00         B   143    				call os_new_line
001FDD C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
001FDE                     B   148    form_dev_warn1
                           B   149    
001FDE 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
001FE5                     B   152    form_dev_warn2
                           B   153    
001FE5 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
001FED 9700 
                           B   155    
001FEF                     B   156    formatting_txt
                           B   157    
001FEF 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
001FF7 74696E67 2E2E2000 
                           B   159    
001FFF 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002004 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
00200C 00 
                           B   163    
00200D                     B   164    default_label	
                           B   165    
00200D 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002015 534B00 
                           B   167    
002018 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00005C2A            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00201D CD 27 1C 00         B     5    os_cmd_h		call get_start_and_end			002021 22 CE 54 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002025 CD 15 1C 00         B     8    				call test_mem_range
002029 DA F1 15 00         B     9    				jp c,os_range_error				                           B    10    			
00202D AF                  B    11    				xor a
00202E 32 CA 20 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002032 2A CE 54 00         B    14    				ld hl,(find_hexstringascii)
002036 0600                B    15    				ld b,0
002038 7E                  B    16    h_lfascii		ld a,(hl)						002039 B7                  B    17    				or a
00203A 28 28               B    18    				jr z,h_no_text					00203C FE22                B    19    				cp 022h
00203E 28 03               B    20    				jr z,h_found_quote
002040 23                  B    21    				inc hl
002041 18 F5               B    22    				jr h_lfascii
002043 23                  B    23    h_found_quote	inc hl
002044 22 CE 54 00         B    24    				ld (find_hexstringascii),hl
002048 7E                  B    25    h_fasc_len		ld a,(hl)
002049 B7                  B    26    				or a
00204A CA F5 15 00         B    27    				jp z,os_no_args_error			00204E FE22                B    28    				cp 022h
002050 28 04               B    29    				jr z,h_startas
002052 23                  B    30    				inc hl
002053 04                  B    31    				inc b
002054 18 F2               B    32    				jr h_fasc_len
                           B    33    
002056 78                  B    34    h_startas		ld a,b
002057 B7                  B    35    				or a
002058 CA F5 15 00         B    36    				jp z,os_no_args_error			00205C 3E01                B    37    				ld a,1
00205E 32 CA 20 00         B    38    				ld (h_ascii_mode),a
002062 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002064 2A CE 54 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002068 0600                B    43    				ld b,0							00206A CD 50 1C 00         B    44    cntfbyts		call hexword_or_bust			00206E 28 04               B    45    				jr z,gthexstr
002070 04                  B    46    				inc b
002071 23                  B    47    				inc hl
002072 18 F6               B    48    				jr cntfbyts
002074 78                  B    49    gthexstr		ld a,b
002075 B7                  B    50    				or a
002076 CA F5 15 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
00207A                     B    54    h_start_search
                           B    55    	
00207A DD2A C2 54 00       B    56    				ld ix,(cmdop_start_address)		00207F DDE5                B    57    fndloop1		push ix
002081 FDE1                B    58    				pop iy
002083 48                  B    59    				ld c,b							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002084 2A CE 54 00         B    60    				ld hl,(find_hexstringascii)
002088 3A CA 20 00         B    61    fcmloop			ld a,(h_ascii_mode)
00208C B7                  B    62    				or a
00208D 28 08               B    63    				jr z,h_hex
00208F FD7E00              B    64    				ld a,(iy)
002092 BE                  B    65    				cp (hl)
002093 20 23               B    66    				jr nz,nofmatch
002095 18 0A               B    67    				jr h_matched
002097 CD 9C 10 00         B    68    h_hex			call ascii_to_hexword			00209B FD7E00              B    69    				ld a,(iy)
00209E BB                  B    70    				cp e
00209F 20 17               B    71    				jr nz,nofmatch
0020A1 FD23                B    72    h_matched		inc iy
0020A3 23                  B    73    				inc hl
0020A4 0D                  B    74    				dec c
0020A5 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
0020A7 DDE5                B    77    				push ix							0020A9 D1                  B    78    				pop de							0020AA DDE5                B    79    				push ix
0020AC C5                  B    80    				push bc
0020AD CD F0 12 00         B    81    				call os_show_hex_address
0020B1 CD B8 13 00         B    82    				call os_new_line
0020B5 C1                  B    83    				pop bc
0020B6 DDE1                B    84    				pop ix
                           B    85    				
0020B8 DDE5                B    86    nofmatch		push ix
0020BA DD23                B    87    				inc ix
0020BC D1                  B    88    				pop de
0020BD 2A C5 54 00         B    89    				ld hl,(cmdop_end_address)
0020C1 AF                  B    90    				xor a
0020C2 ED52                B    91    				sbc hl,de
0020C4 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
0020C6 3E20                B    94    				ld a,020h						0020C8 B7                  B    95    				or a
0020C9 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
0020CA 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0020CB                     B     5    os_cmd_help		
0020CB AF                  B     6    				xor a
0020CC 32 BE 54 00         B     7    				ld (os_linecount),a
                           B     8    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
0020D0 21 D5 4E 00         B     9    				ld hl,packed_help1
0020D4 CD EF 13 00         B    10    show_page		call os_show_packed_text
0020D8 E5                  B    11    				push hl
0020D9 CD B8 13 00         B    12    				call os_new_line
0020DD E1                  B    13    				pop hl
0020DE 23                  B    14    				inc hl						;sk
0020DF 7E                  B    15    				ld a,(hl)
0020E0 FEFF                B    16    				cp 0ffh						;la
0020E2 28 09               B    17    				jr z,last_help_page
                           B    18    				
0020E4 CD B6 11 00         B    19    				call os_count_lines
0020E8 78                  B    20    				ld a,b
0020E9 FE79                B    21    				cp 'y'
0020EB 28 E7               B    22    				jr z,show_page
                           B    23    
0020ED                     B    24    last_help_page
0020ED AF                  B    25    				xor a
0020EE C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
0020EF                     B     5    os_cmd_gtr
                           B     6    
0020EF CD 50 1C 00         B     7    				call hexword_or_bust			0020F3 CA DD 15 00         B     8    				jp z,os_no_start_addr
0020F7 23                  B     9    fndquot1		inc hl
0020F8 7E                  B    10    				ld a,(hl)
0020F9 B7                  B    11    				or a
0020FA CA F5 15 00         B    12    				jp z,os_no_args_error
0020FE FE22                B    13    				cp 022h							002100 20 F5               B    14    				jr nz,fndquot1
002102 23                  B    15    				inc hl
002103 E5                  B    16    				push hl
002104 7E                  B    17    fndquot2		ld a,(hl)
002105 23                  B    18    				inc hl
002106 B7                  B    19    				or a
002107 28 15               B    20    				jr z,noquot2
002109 FE22                B    21    				cp 022h							00210B 20 F7               B    22    				jr nz,fndquot2
00210D E1                  B    23    				pop hl
                           B    24    					
00210E 7E                  B    25    wmbalp			ld a,(hl)						00210F FE22                B    26    				cp 022h
002111 28 09               B    27    				jr z,os_gtrdn					002113 FE7D                B    28    				cp 07dh
002115 28 01               B    29    				jr z,skpnasc
002117 12                  B    30    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002118 13                  B    31    skpnasc			inc de
002119 23                  B    32    				inc hl
00211A 18 F2               B    33    				jr wmbalp
00211C AF                  B    34    os_gtrdn		xor a
00211D C9                  B    35    				ret	
                           B    36    				
00211E E1                  B    37    noquot2			pop hl							00211F 3E12                B    38    				ld a,012h
002121 B7                  B    39    				or a
002122 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002123                     B     5    os_cmd_lb
                           B     6    	
002123 CD 6A 16 00         B     7    				call os_check_volume_format	
002127 C0                  B     8    				ret nz
                           B     9    				
002128 CD 99 1D 00         B    10    				call filename_or_bust			00212C CD FD 15 00         B    11    				call os_find_file				002130 C0                  B    12    				ret nz
002131 ED53 29 5C 00       B    13    				ld (filesize_cache),de			002136 2A 17 54 00         B    14    				ld hl,(default_load_addr)
00213A 22 26 5C 00         B    15    				ld (data_load_addr),hl			                           B    16    				
00213E 2A 7B 55 00         B    17    				ld hl,(os_args_loc)
002142 CD A6 0F 00         B    18    				call os_next_arg
                           B    19    
002146 CD 50 1C 00         B    20    				call hexword_or_bust			00214A 28 05               B    21    				jr z,os_lbnao					00214C ED53 26 5C 00       B    22    				ld (data_load_addr),de
                           B    23    
002151 ED5B 26 5C 00       B    24    os_lbnao		ld de,(data_load_addr)			002156 2A 24 54 00         B    25    				ld hl,(sys_ram_high)			00215A 2B                  B    26    				dec hl
00215B AF                  B    27    				xor a
00215C ED52                B    28    				sbc hl,de
00215E 38 04               B    29    				jr c,os_lbprok
002160 3E26                B    30    				ld a,026h						002162 B7                  B    31    				or a
002163 C9                  B    32    				ret
                           B    33    				
002164 2A 26 5C 00         B    34    os_lbprok		ld hl,(data_load_addr)			002168 CD 2C 16 00         B    35    				call os_read_bytes_from_file
00216C C0                  B    36    				ret nz
                           B    37    			
00216D                     B    38    report_bytes_loaded
                           B    39    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
00216D 21 DE 49 00         B    40    				ld hl,os_hex_prefix_txt			002171 CD 25 0F 00         B    41    				call os_print_string			                           B    42    				
002175 11 2B 5C 00         B    43    				ld de,filesize_cache+2			002179 21 29 55 00         B    44    				ld hl,output_line
00217D 0603                B    45    				ld b,3
00217F CD 5A 10 00         B    46    				call n_hexbytes_to_ascii
002183 3600                B    47    				ld (hl),0	
002185 0605                B    48    				ld b,5							002187 CD 26 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
00218B 21 6C 50 00         B    51    				ld hl,bytes_loaded_msg			00218F CD EF 13 00         B    52    				call os_show_packed_text
                           B    53    				
002193 21 3D 4A 00         B    54    				ld hl,to_txt					002197 CD 25 0F 00         B    55    				call os_print_string
                           B    56    
00219B 21 DE 49 00         B    57    				ld hl,os_hex_prefix_txt			00219F CD 25 0F 00         B    58    				call os_print_string	
                           B    59    
0021A3 ED5B 26 5C 00       B    60    				ld de,(data_load_addr)			0021A8 CD F0 12 00         B    61    				call os_show_hex_address
                           B    62    
0021AC CD B8 13 00         B    63    				call os_new_line
0021B0 AF                  B    64    				xor a
0021B1 C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00005C26            B    69    data_load_addr	equ scratch_pad
       00005C29            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
0021B2 CD 50 1C 00         B     7    os_cmd_m		call hexword_or_bust			0021B6 28 05               B     8    				jr z,m_no_hex					0021B8 ED53 BF 54 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
0021BD 0610                B    11    m_no_hex		ld b,16							0021BF C5                  B    12    smbllp			push bc							                           B    13    				
0021C0 21 F9 21 00         B    14    				ld hl,colon_cmd_prefix			0021C4 CD 25 0F 00         B    15    				call os_print_string
0021C8 ED5B BF 54 00       B    16    				ld de,(mem_mon_addr)
0021CD CD F0 12 00         B    17    				call os_show_hex_address
                           B    18    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
0021D1 21 29 55 00         B    19    				ld hl,output_line
0021D5 0610                B    20    				ld b,bytes_per_line				0021D7 3620                B    21    mmbllp			ld (hl),' '
0021D9 23                  B    22    				inc hl
0021DA 1A                  B    23    				ld a,(de)	
0021DB CD 68 10 00         B    24    				call hexbyte_to_ascii
0021DF 13                  B    25    				inc de
0021E0 10 F5               B    26    				djnz mmbllp
                           B    27    
0021E2 ED53 BF 54 00       B    28    				ld (mem_mon_addr),de
0021E7 360B                B    29    				ld (hl),11
0021E9 23                  B    30    				inc hl
0021EA 3600                B    31    				ld (hl),0
0021EC 21 29 55 00         B    32    				ld hl,output_line
0021F0 CD 25 0F 00         B    33    				call os_print_string
0021F4 C1                  B    34    				pop bc
0021F5 10 C8               B    35    				djnz smbllp
                           B    36    				
0021F7 AF                  B    37    				xor a
0021F8 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
0021F9 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0021FC                     B     5    os_cmd_md
                           B     6    	
0021FC CD 6A 16 00         B     7    				call os_check_volume_format	
002200 C0                  B     8    				ret nz
                           B     9    			
002201 CD 99 1D 00         B    10    				call filename_or_bust
                           B    11    				
002205 C3 AA 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002209                     B     5    os_cmd_r	
002209 DD21 2D 54 00       B     6    				ld ix,store_a1					00220E 21 B3 22 00         B     7    				ld hl,register_txt
002212 CD 25 0F 00         B     8    rcmdloop2		call os_print_string
002216 7E                  B     9    rcmdloop		ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002217 FE01                B    10    				cp 1
002219 28 0B               B    11    				jr z,showbyte
00221B FE02                B    12    				cp 2
00221D 28 15               B    13    				jr z,showword16
00221F FE03                B    14    				cp 3
002221 28 2E               B    15    				jr z,showaddr
002223 23                  B    16    				inc hl
002224 18 F0               B    17    				jr rcmdloop
                           B    18    				
002226 DD7E00              B    19    showbyte		ld a,(ix)
002229 DD23                B    20    				inc ix
00222B DDE5                B    21    				push ix
00222D E5                  B    22    				push hl
00222E CD 04 13 00         B    23    				call os_show_hex_byte
002232 18 2A               B    24    				jr showreg
                           B    25    
002234 DD7E01              B    26    showword16		ld a,(ix+1)
002237 DDE5                B    27    				push ix
002239 E5                  B    28    				push hl
00223A CD 04 13 00         B    29    				call os_show_hex_byte
00223E E1                  B    30    				pop hl
00223F DDE1                B    31    				pop ix
002241 DD7E00              B    32    				ld a,(ix)
002244 DD23                B    33    				inc ix
002246 DD23                B    34    				inc ix
002248 DDE5                B    35    				push ix
00224A E5                  B    36    				push hl
00224B CD 04 13 00         B    37    				call os_show_hex_byte
00224F 18 0D               B    38    				jr showreg
                           B    39    
002251 DD1700              B    40    showaddr		ld de,(ix)
002254 ED3203              B    41    				lea ix,ix+3
002257 DDE5                B    42    				push ix
002259 E5                  B    43    				push hl
00225A CD F0 12 00         B    44    				call os_show_hex_address
00225E E1                  B    45    showreg			pop hl
00225F DDE1                B    46    				pop ix
002261 23                  B    47    				inc hl
002262 7E                  B    48    				ld a,(hl)
002263 B7                  B    49    				or a
002264 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002266 CD B8 13 00         B    52    				call os_new_line				00226A 21 17 23 00         B    53    				ld hl,flag_txt
00226E CD D8 12 00         B    54    				call os_copy_to_output_line
002272 21 2D 55 00         B    55    				ld hl,output_line+4
002276 01050000            B    56    				ld bc,5
00227A 3A 50 54 00         B    57    				ld a,(store_f)
00227E CB77                B    58    				bit 6,a							002280 28 02               B    59    				jr z,zfzero
002282 3631                B    60    				ld (hl),'1'
002284 09                  B    61    zfzero			add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002285 CB47                B    62    				bit 0,a							002287 28 02               B    63    				jr z,cfzero
002289 3631                B    64    				ld (hl),'1'
00228B 09                  B    65    cfzero			add hl,bc
00228C CB7F                B    66    				bit 7,a							00228E 28 02               B    67    				jr z,sfzero
002290 364D                B    68    				ld (hl),'M'
002292 09                  B    69    sfzero			add hl,bc
002293 CB57                B    70    				bit 2,a							002295 28 02               B    71    				jr z,pfzero
002297 364F                B    72    				ld (hl),'O'
002299 09                  B    73    pfzero			add hl,bc
00229A 23                  B    74    				inc hl
00229B CB67                B    75    				bit 4,a							00229D 28 02               B    76    				jr z,iffzero
00229F 3631                B    77    				ld (hl),'1'
0022A1                     B    78    iffzero			
0022A1 01060000            B    79    				ld bc,6
0022A5 09                  B    80    				add hl,bc
0022A6 3A 51 54 00         B    81    				ld a,(store_adl)
0022AA C630                B    82    				add a,30h
0022AC 77                  B    83    				ld (hl),a
0022AD CD 1B 13 00         B    84    				call os_print_output_line
0022B1 AF                  B    85    				xor a
0022B2 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
0022B3 20413D00 01         B    91    register_txt		db ' A=',0,1
0022B8 20204243 3D0003     B    92    					db '  BC=',0,3
0022BF 20204445 3D0003     B    93    					db '  DE=',0,3
0022C6 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
0022CD 0B                  B    96    					db 11
                           B    97    
0022CE 27413D00 01         B    98    					db 027h,'A=',0,1
0022D3 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
0022DA 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
0022E1 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
0022E8 0B                  B   103    					db 11
                           B   104    
0022E9 2049583D 0003       B   105    					db ' IX=',0,3
0022EF 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
0022F5 0B                  B   108    					db 11
                           B   109    					
0022F6 2050433D 0003       B   110    					db ' PC=',0,3
0022FC 204C5350 3D0003     B   111    					db ' LSP=',0,3
002303 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
00230A 0B                  B   114    					db 11
                           B   115    					
00230B 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002313 010000 
                           B   117    					
002316 0B                  B   118    					db 11
                           B   119    
002317 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
00231F 3D302053 463D5020 
002327 50563D45 20494646 
00232F 3D302041 444C3D30 
002337 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
00233A                     B     5    os_cmd_rd
                           B     6    
00233A CD 6A 16 00         B     7    				call os_check_volume_format	
00233E C0                  B     8    				ret nz
                           B     9    				
00233F CD 99 1D 00         B    10    				call filename_or_bust
                           B    11    			
002343 C3 14 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002347                     B     5    os_cmd_rn
                           B     6    	
002347 CD 6A 16 00         B     7    				call os_check_volume_format	
00234B C0                  B     8    				ret nz
                           B     9    			
00234C CD 99 1D 00         B    10    				call filename_or_bust
002350 E5                  B    11    				push hl
002351 D1                  B    12    				pop de
002352 CD A6 0F 00         B    13    				call os_next_arg
002356 7E                  B    14    				ld a,(hl)						002357 B7                  B    15    				or a
002358 20 04               B    16    				jr nz,rn_grfn
00235A 3E1F                B    17    				ld a,01fh						00235C B7                  B    18    				or a
00235D C9                  B    19    				ret
                           B    20    
00235E EB                  B    21    rn_grfn			ex de,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
00235F C3 FE 16 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002363                     B     5    os_cmd_sb
                           B     6    	
002363 CD 6A 16 00         B     7    				call os_check_volume_format		002367 C0                  B     8    				ret nz
                           B     9    					
002368 CD 99 1D 00         B    10    				call filename_or_bust			00236C 22 2C 5C 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002370 2A 7B 55 00         B    13    				ld hl,(os_args_loc)
002374 CD A6 0F 00         B    14    				call os_next_arg
002378 CD 50 1C 00         B    15    				call hexword_or_bust			00237C CA DD 15 00         B    16    				jp z,os_no_start_addr			002380 ED53 26 5C 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002385 CD 50 1C 00         B    19    				call hexword_or_bust			002389 CA E1 15 00         B    20    				jp z,os_no_filesize
00238D ED53 29 5C 00       B    21    				ld (sb_save_length),de
                           B    22    				
002392 2A 2C 5C 00         B    23    				ld hl,(sb_save_name_addr)		002396 CD 3C 16 00         B    24    				call os_create_file
00239A 28 18               B    25    				jr z,os_sfapp
00239C FEC9                B    26    				cp 0c9h							00239E C0                  B    27    				ret nz			
00239F 21 9C 4E 00         B    28    				ld hl,save_append_msg			0023A3 CD EF 13 00         B    29    				call os_show_packed_text
0023A7 CD CF 37 00         B    30    				call os_wait_key_press
0023AB 3E79                B    31    				ld a,'y'
0023AD B8                  B    32    				cp b
0023AE 28 04               B    33    				jr z,os_sfapp
0023B0 3E2C                B    34    				ld a,2ch						0023B2 B7                  B    35    				or a
0023B3 C9                  B    36    				ret
                           B    37    			
0023B4 2A 2C 5C 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		0023B8 ED5B 26 5C 00       B    39    				ld de,(sb_save_addr)			0023BD ED4B 29 5C 00       B    40    				ld bc,(sb_save_length)			0023C2 CD 52 16 00         B    41    				call os_write_bytes_to_file
0023C6 C0                  B    42    				ret nz	
                           B    43    				
0023C7 3E20                B    44    				ld a,020h						0023C9 B7                  B    45    				or a
0023CA C9                  B    46    				ret
                           B    47    			
                           B    48    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B    49    ;----------------------------------------------
                           B    50    
       00005C26            B    51    sb_save_addr		equ scratch_pad
       00005C29            B    52    sb_save_length		equ scratch_pad+3
       00005C2C            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00005D26            B     6    buffer_addr				 equ os_max_addr		       00005C26            B     7    rx_buffer_ptr			 equ scratch_pad
       00005C29            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
0023CB 7E                  B    11    os_cmd_rx		ld a,(hl)						0023CC B7                  B    12    				or a
0023CD CA D5 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
0023D1 3E3E                B    15    				ld a,'>'						0023D3 BE                  B    16    				cp (hl)
0023D4 C2 97 24 00         B    17    				jp nz,rx_nrs
0023D8 23                  B    18    				inc hl
0023D9 3E20                B    19    				ld a,' '
0023DB BE                  B    20    				cp (hl)
0023DC 2B                  B    21    				dec hl
0023DD C2 97 24 00         B    22    				jp nz,rx_nrs
                           B    23    				
0023E1 CD 6A 16 00         B    24    				call os_check_volume_format		0023E5 C0                  B    25    				ret nz		
                           B    26    				
0023E6 112A0000            B    27    				ld de,02ah						0023EA ED53 9B 52 00       B    28    				ld (serial_filename),de			0023EF CD 9B 25 00         B    29    				call rx_get_header
0023F3 C0                  B    30    				ret nz
0023F4 CD 8E 39 00         B    31    				call s_holdack					                           B    32    				
0023F8 21 AF 52 00         B    33    				ld hl,serial_fileheader			0023FC CD 3C 16 00         B    34    				call os_create_file
002400 C2 76 24 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002404 21 BC 4E 00         B    37    				ld hl,ser_recsave_msg
002408 CD EF 13 00         B    38    				call os_show_packed_text
                           B    39    				
00240C 2A BF 52 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002410 22 29 5C 00         B    41    				ld (serial_file_length_cache),h
002414 21 26 5D 00         B    42    				ld hl,buffer_addr
002418 22 26 5C 00         B    43    				ld (rx_buffer_ptr),hl
00241C 0680                B    44    				ld b,buffer_blocks				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    45    				
00241E CD 76 39 00         B    46    rx_lnb			call s_goodack
002422 CD 20 39 00         B    47    				call s_getblock
002426 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002428 F5                  B    50    				push af							002429 CD 87 39 00         B    51    				call s_badack					00242D 21 AF 52 00         B    52    				ld hl,serial_fileheader			002431 CD D2 16 00         B    53    				call os_erase_file
002435 F1                  B    54    				pop af
002436 C9                  B    55    				ret
                           B    56    
002437 CD 8E 39 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
00243B 21 26 5A 00         B    59    				ld hl,sector_buffer
00243F ED5B 26 5C 00       B    60    				ld de,(rx_buffer_ptr)
002444 01000100            B    61    				ld bc,256
002448 EDB0                B    62    				ldir
00244A ED53 26 5C 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
00244F 2A BF 52 00         B    65    				ld hl,(serial_fileheader+16)
002453 11000100            B    66    				ld de,256
002457 AF                  B    67    				xor a
002458 ED52                B    68    				sbc hl,de
00245A 22 BF 52 00         B    69    				ld (serial_fileheader+16),hl
00245E 28 1D               B    70    				jr z,rx_lbr
002460 38 1B               B    71    				jr c,rx_lbr
002462 10 BA               B    72    				djnz rx_lnb
                           B    73    
002464 01008000            B    74    				ld bc,buffer_blocks*256
002468 11 26 5D 00         B    75    				ld de,buffer_addr
00246C 21 AF 52 00         B    76    				ld hl,serial_fileheader
002470 CD 52 16 00         B    77    				call os_write_bytes_to_file
002474 28 96               B    78    				jr z,rx_rnblk
002476 F5                  B    79    rxwtd_fail		push af
002477 CD 87 39 00         B    80    				call s_badack
00247B F1                  B    81    				pop af
00247C C9                  B    82    				ret
                           B    83    				
00247D CD 76 39 00         B    84    rx_lbr			call s_goodack
002481 ED4B 29 5C 00       B    85    				ld bc,(serial_file_length_cache
002486 11 26 5D 00         B    86    				ld de,buffer_addr
00248A 21 AF 52 00         B    87    				ld hl,serial_fileheader
00248E CD 52 16 00         B    88    				call os_write_bytes_to_file
002492 C0                  B    89    				ret nz	
                           B    90    				
002493 3E20                B    91    rxtd_done		ld a,020h						002495 B7                  B    92    				or a
002496 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    97    				
002497 3E21                B    98    rx_nrs			ld a,'!'						002499 BE                  B    99    				cp (hl)							00249A C2 45 25 00         B   100    				jr nz,notrxe
00249E 23                  B   101    				inc hl
00249F 3E20                B   102    				ld a,' '
0024A1 BE                  B   103    				cp (hl)
0024A2 2B                  B   104    				dec hl
0024A3 C2 45 25 00         B   105    				jr nz,notrxe
0024A7 112A0000            B   106    				ld de,02ah						0024AB ED53 9B 52 00       B   107    				ld (serial_filename),de			0024B0 CD 9B 25 00         B   108    				call rx_get_header
0024B4 C0                  B   109    				ret nz
0024B5 21 B2 4E 00         B   110    				ld hl,ser_rec2_msg
0024B9 CD EF 13 00         B   111    				call os_show_packed_text
0024BD CD 76 39 00         B   112    				call s_goodack
0024C1 3E01                B   113    				ld a,1							0024C3 32 AE 52 00         B   114    				ld (serial_timeout),a
0024C7 CD 20 39 00         B   115    				call s_getblock					0024CB 28 07               B   116    				jr z,rxe_fblok
0024CD F5                  B   117    rxe_badblock	push af							0024CE CD 87 39 00         B   118    				call s_badack					0024D2 F1                  B   119    				pop af
0024D3 C9                  B   120    				ret
                           B   121    	
0024D4 2A 28 5A 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
0024D8 1150524F            B   123    				ld de,04f5250h					0024DC AF                  B   124    				xor a
0024DD 28 04               B   125    				jr z,rxe_ok
0024DF 3E1A                B   126    				ld a,1ah						0024E1 B7                  B   127    				or a
0024E2 C9                  B   128    				ret
0024E3 2A 2B 5A 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			0024E7 22 92 52 00         B   130    				ld (serial_ez80_address),hl
0024EB 01000100            B   131    				ld bc,256						0024EF DD21 AF 52 00       B   132    				ld ix,serial_fileheader
0024F4 AF                  B   133    				xor a
0024F5 DDB612              B   134    				or (ix+18)						0024F8 20 0A               B   135    				jr nz,mtones
0024FA DDB611              B   136    				or a,(ix+17)					0024FD 20 05               B   137    				jr nz,mtones
0024FF 0600                B   138    				ld b,0
002501 DD4E10              B   139    				ld c,(ix+16)					002504 21 26 5A 00         B   140    mtones			ld hl,sector_buffer				002508 ED5B 92 52 00       B   141    				ld de,(serial_ez80_address)		00250D EDB0                B   142    				ldir
                           B   143    				
00250F D5                  B   144    				push de
002510 CD 76 39 00         B   145    				call s_goodack		
002514 DDE1                B   146    				pop ix							002516 2A BF 52 00         B   147    				ld hl,(serial_fileheader+16)	00251A 11000100            B   148    				ld de,256
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00251E AF                  B   149    				xor a
00251F ED52                B   150    				sbc hl,de						002521 28 18               B   151    				jr z,rxe_done
002523 38 16               B   152    				jr c,rxe_done
002525 EB                  B   153    				ex de,hl
002526 ED53 BF 52 00       B   154    				ld (serial_fileheader+16),de	00252B DD2A 92 52 00       B   155    				ld ix,(serial_ez80_address)
002530 01000100            B   156    				ld bc,256
002534 DD09                B   157    				add ix,bc
002536 CD DE 38 00         B   158    				call s_gbloop					00253A C0                  B   159    				ret nz
00253B E1                  B   160    rxe_done		pop hl							00253C CD 5A 2F 00         B   161    				call enable_nmi					002540 2A 92 52 00         B   162    				ld hl,(serial_ez80_address)
002544 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
002545 CD E2 25 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
002549 0610                B   169    				ld b,16							00254B 11 9B 52 00         B   170    				ld de,serial_filename
00254F CD FE 11 00         B   171    				call os_copy_ascii_run			002553 79                  B   172    				ld a,c
002554 32 AD 52 00         B   173    				ld (serial_fn_length),a
002558 CD B2 0F 00         B   174    				call os_scan_for_space
                           B   175    				
00255C CD 50 1C 00         B   176    				call hexword_or_bust			002560 CA DD 15 00         B   177    				jp z,os_no_start_addr			002564 ED53 26 5C 00       B   178    				ld (data_load_addr),de			002569 2A 24 54 00         B   179    				ld hl,(sys_ram_high)			00256D 2B                  B   180    				dec hl
00256E AF                  B   181    				xor a
00256F ED52                B   182    				sbc hl,de
002571 38 04               B   183    				jr c,os_prok
002573 3E26                B   184    				ld a,026h						002575 B7                  B   185    				or a
002576 C9                  B   186    				ret
                           B   187    
002577 CD 9B 25 00         B   188    os_prok			call rx_get_header
00257B C0                  B   189    				ret nz
                           B   190    
00257C 21 B2 4E 00         B   191    				ld hl,ser_rec2_msg
002580 CD EF 13 00         B   192    				call os_show_packed_text
                           B   193    	
002584 2A 26 5C 00         B   194    				ld hl,(data_load_addr)			002588 CD CC 38 00         B   195    				call serial_receive_file
00258C C0                  B   196    				ret nz							                           B   197    
00258D ED5B BF 52 00       B   198    				ld de,(serial_fileheader+16)	002592 ED53 29 5C 00       B   199    				ld (filesize_cache),de
002597 C3 6D 21 00         B   200    				jp report_bytes_loaded			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
00259B                     B   204    rx_get_header
00259B 21 AE 4E 00         B   205    				ld hl,ser_rec_msg
00259F CD EF 13 00         B   206    				call os_show_packed_text
                           B   207    				
0025A3 3E00                B   208    				ld a,0
0025A5 32 D0 52 00         B   209    				ld (anim_wait_count),a			0025A9 3A D0 52 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0025AD 3C                  B   211    				inc a
0025AE 47                  B   212    				ld b,a
0025AF FE06                B   213    				cp 6
0025B1 20 07               B   214    				jr nz,notsix
0025B3 0E20                B   215    				ld c,' '
0025B5 0605                B   216    				ld b,5
0025B7 AF                  B   217    				xor a
0025B8 18 02               B   218    				jr mcharset
0025BA 0E2E                B   219    notsix			ld c,'.'
0025BC 32 D0 52 00         B   220    mcharset		ld (anim_wait_count),a
0025C0 CD 22 1A 00         B   221    				call os_print_multiple_chars
0025C4 CD 6E 0F 00         B   222    				call home_cursor
                           B   223    				
0025C8 21 9B 52 00         B   224    				ld hl,serial_filename			0025CC 3E01                B   225    				ld a,1							0025CE CD 31 38 00         B   226    				call serial_get_header
0025D2 C8                  B   227    				ret z
0025D3 FE83                B   228    				cp 083h							0025D5 C0                  B   229    				ret nz
0025D6 CD 16 38 00         B   230    				call os_get_key_press
0025DA FE76                B   231    				cp 076h
0025DC 20 CB               B   232    				jr nz,get_hdr_loop
0025DE 3E80                B   233    				ld a,080h						0025E0 B7                  B   234    notsto			or a
0025E1 C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
0025E2                     B   240    clear_serial_filename
                           B   241    
0025E2 E5                  B   242    				push hl							0025E3 21 9B 52 00         B   243    				ld hl,serial_filename
0025E7 01100000            B   244    				ld bc,16
0025EB AF                  B   245    				xor a
0025EC CD 4B 15 00         B   246    				call os_bchl_memfill
0025F0 E1                  B   247    				pop hl
0025F1 C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
0025F2 7E                  B     5    os_cmd_tx		ld a,(hl)						0025F3 B7                  B     6    				or a
0025F4 CA D5 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0025F8 E5                  B     9    				push hl							0025F9 21 9B 52 00         B    10    				ld hl,serial_filename
0025FD 01100000            B    11    				ld bc,16
002601 AF                  B    12    				xor a
002602 CD 4B 15 00         B    13    				call os_bchl_memfill
002606 E1                  B    14    				pop hl
                           B    15    			
002607 0610                B    16    				ld b,16							002609 11 9B 52 00         B    17    				ld de,serial_filename
00260D CD FE 11 00         B    18    				call os_copy_ascii_run			002611 79                  B    19    				ld a,c
002612 32 AD 52 00         B    20    				ld (serial_fn_length),a
002616 CD B2 0F 00         B    21    				call os_scan_for_space
                           B    22    							
00261A CD 50 1C 00         B    23    				call hexword_or_bust			00261E CA DD 15 00         B    24    				jp z,os_no_start_addr			002622 ED53 92 52 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
002627 CD 50 1C 00         B    27    				call hexword_or_bust			00262B CA E1 15 00         B    28    				jp z,os_no_filesize
00262F ED53 95 52 00       B    29    				ld (serial_file_length),de
002634 21000000            B    30    				ld hl,0
002638 3E07                B    31    				ld a,07h						00263A B7                  B    32    				or a
00263B ED5A                B    33    				adc hl,de
00263D 28 1D               B    34    				jr z,s_error
                           B    35    				
00263F 21 B7 4E 00         B    36    				ld hl,ser_send_msg
002643 CD EF 13 00         B    37    				call os_show_packed_text
                           B    38    			
002647 ED5B 95 52 00       B    39    				ld de,(serial_file_length)
00264C 21 9B 52 00         B    40    				ld hl,serial_filename			002650 DD2A 92 52 00       B    41    				ld ix,(serial_ez80_address)
002655 CD 95 39 00         B    42    				call serial_send_file
002659 C0                  B    43    				ret nz			
                           B    44    			
00265A 3E20                B    45    				ld a,020h						00265C B7                  B    46    s_error			or a
00265D C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
                           B     3    ;----------------------------------------------
                           B     4    
00265E CD 50 1C 00         B     5    os_cmd_t		call hexword_or_bust			002662 28 05               B     6    				jr z,t_no_hex					002664 ED53 BF 54 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
002669 0610                B     9    t_no_hex		ld b,16
00266B C5                  B    10    smaalp			push bc
                           B    11    				
00266C 21 AF 26 00         B    12    				ld hl,gtr_cmd_prefix			002670 CD 25 0F 00         B    13    				call os_print_string
002674 ED5B BF 54 00       B    14    				ld de,(mem_mon_addr)
002679 CD F0 12 00         B    15    				call os_show_hex_address
                           B    16    
00267D 21 29 55 00         B    17    				ld hl,output_line
002681 3620                B    18    				ld (hl),' '
002683 23                  B    19    				inc hl
002684 3622                B    20    				ld (hl),022h
002686 0610                B    21    				ld b,16
002688 23                  B    22    mabllp			inc hl
002689 1A                  B    23    				ld a,(de)	
00268A FE20                B    24    				cp 020h
00268C 38 04               B    25    				jr c,chchar
00268E FE7F                B    26    				cp 07fh
002690 38 02               B    27    				jr c,nchchar
002692 3E7C                B    28    chchar			ld a,07ch
002694 77                  B    29    nchchar			ld (hl),a
002695 13                  B    30    				inc de
002696 10 F0               B    31    				djnz mabllp
                           B    32    
002698 ED53 BF 54 00       B    33    				ld (mem_mon_addr),de
00269D 23                  B    34    				inc hl
00269E 3622                B    35    				ld (hl),022h
0026A0 23                  B    36    				inc hl
0026A1 360B                B    37    				ld (hl),11
0026A3 23                  B    38    				inc hl
0026A4 3600                B    39    				ld (hl),0
0026A6 CD 1B 13 00         B    40    				call os_print_output_line
0026AA C1                  B    41    				pop bc
0026AB 10 BE               B    42    				djnz smaalp
0026AD AF                  B    43    				xor a
0026AE C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0026AF 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mount.asm
                           B     4    
0026B2                     B     5    os_cmd_remount
                           B     6    
0026B2 3E00                B     7    				ld a,0							0026B4 CD 07 18 00         B     8    				call os_mount_volumes
0026B8 CD B8 13 00         B     9    				call os_new_line
0026BC AF                  B    10    				xor a
0026BD C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
0026BE                     B     5    os_cmd_vers
                           B     6    
0026BE 21 E0 49 00         B     7    				ld hl,os_version_txt
0026C2 CD 25 0F 00         B     8    				call os_print_string
                           B     9    			
0026C6 CD 0C 35 00         B    10    				call hwsc_get_version
0026CA D5                  B    11    				push de
0026CB EB                  B    12    				ex de,hl
0026CC CD 0F 13 00         B    13    				call os_show_hex_word
                           B    14    				
0026D0 21 03 4A 00         B    15    				ld hl,fwd_slash_txt
0026D4 CD 25 0F 00         B    16    				call os_print_string
                           B    17    				
0026D8 21 EE 49 00         B    18    				ld hl,hw_version_txt
0026DC CD 25 0F 00         B    19    				call os_print_string
0026E0 D1                  B    20    				pop de
0026E1 CD 0F 13 00         B    21    				call os_show_hex_word
                           B    22    				
0026E5 CD B8 13 00         B    23    				call os_new_line
0026E9 CD B8 13 00         B    24    				call os_new_line	
0026ED AF                  B    25    				xor a
0026EE C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.03 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;----------------------------------------------
                           B     8    
0026EF                     B     9    os_cmd_exec
                           B    10    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0026EF 21 87 55 00         B    11    				ld hl,in_script_flag			0026F3 CB46                B    12    				bit 0,(hl)
0026F5 28 02               B    13    				jr z,oktlscr
0026F7 AF                  B    14    				xor a
0026F8 C9                  B    15    				ret
0026F9 CBC6                B    16    oktlscr			set 0,(hl)
                           B    17    			
0026FB 2A 7B 55 00         B    18    				ld hl,(os_args_loc)				0026FF 11 A8 54 00         B    19    				ld de,script_fn					002703 060D                B    20    				ld b,13
002705 CD FE 11 00         B    21    				call os_copy_ascii_run
002709 CD 3A 1A 00         B    22    				call fs_get_dir_cluster			00270D ED53 88 55 00       B    23    				ld (script_dir),de
                           B    24    				
002712 CD 6A 16 00         B    25    				call os_check_volume_format	
002716 C0                  B    26    				ret nz
                           B    27    				
002717 21000000            B    28    				ld hl,0
00271B 22 DD 55 00         B    29    				ld (script_file_offset),hl
                           B    30    				
                           B    31    			
00271F 3A 0C 56 00         B    32    scrp_loop		ld a,(key_mod_flags)			002723 E602                B    33    				and 2
002725 28 27               B    34    				jr z,noskip_script	
002727 1600                B    35    				ld d,0
002729 CD 16 38 00         B    36    chk_c			call os_get_key_press
00272D FE21                B    37    				cp 021h
00272F 20 1A               B    38    				jr nz,no_cpr
002731 1619                B    39    wkend			ld d,25							002733 CD B9 34 00         B    40    wkend2			call hwsc_wait_vrt				002737 CD 16 38 00         B    41    				call os_get_key_press		
00273B B7                  B    42    				or a
00273C 20 F3               B    43    				jr nz,wkend
00273E 15                  B    44    				dec d
00273F 20 F2               B    45    				jr nz,wkend2
002741 21 CB 4E 00         B    46    				ld hl,script_aborted_msg
002745 CD EF 13 00         B    47    				call os_show_packed_text
002749 AF                  B    48    				xor a							00274A C9                  B    49    				ret
00274B 15                  B    50    no_cpr			dec d
00274C 20 DB               B    51    				jr nz,chk_c
                           B    52    			
                           B    53    			
00274E                     B    54    noskip_script
                           B    55    		
00274E 21 8B 55 00         B    56    				ld hl,script_buffer				002752 11 D7 54 00         B    57    				ld de,commandstring
002756 0651                B    58    				ld b,max_buffer_chars+1
002758 3E20                B    59    				ld a,020h						00275A 77                  B    60    scrp_flp		ld (hl),a
00275B 12                  B    61    				ld (de),a
00275C 23                  B    62    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00275D 13                  B    63    				inc de
00275E 10 FA               B    64    				djnz scrp_flp
                           B    65    				
002760 CD 3A 1A 00         B    66    				call fs_get_dir_cluster			002764 D5                  B    67    				push de
002765 ED5B 88 55 00       B    68    				ld de,(script_dir)				00276A CD 46 1A 00         B    69    				call fs_update_dir_cluster
00276E 21 A8 54 00         B    70    				ld hl,script_fn					002772 CD 2A 46 00         B    71    				call fs_hl_to_filename			002776 CD CB 3D 00         B    72    				call fs_open_file_command		00277A 38 71               B    73    				jr c,pop_ret
00277C B7                  B    74    				or a
00277D 20 6E               B    75    				jr nz,pop_ret
00277F D1                  B    76    				pop de
002780 CD 46 1A 00         B    77    				call fs_update_dir_cluster		                           B    78    			
002784 11500000            B    79    				ld de,max_buffer_chars			002788 CD 0E 16 00         B    80    				call os_set_load_length
00278C AF                  B    81    				xor a
00278D ED5B DD 55 00       B    82    				ld de,(script_file_offset)		002792 CD 16 16 00         B    83    				call os_set_file_pointer
                           B    84    					
002796 21 8B 55 00         B    85    				ld hl,script_buffer				00279A CD 2C 16 00         B    86    				call os_read_bytes_from_file
00279E B7                  B    87    				or a			
00279F 28 03               B    88    				jr z,scrp_ok					0027A1 FECC                B    89    				cp 0cch			
0027A3 C0                  B    90    				ret nz							                           B    91    				
0027A4 FD2A DD 55 00       B    92    scrp_ok			ld iy,(script_file_offset)
0027A9 21 8B 55 00         B    93    				ld hl,script_buffer				0027AD 11 D7 54 00         B    94    				ld de,commandstring
0027B1 3E50                B    95    				ld a,max_buffer_chars
0027B3 47                  B    96    				ld b,a
0027B4 7E                  B    97    scrp_cmd		ld a,(hl)
0027B5 FE20                B    98    				cp 020h
0027B7 38 07               B    99    				jr c,scrp_eol
0027B9 12                  B   100    				ld (de),a
0027BA 23                  B   101    				inc hl
0027BB 13                  B   102    				inc de
0027BC FD23                B   103    				inc iy
0027BE 10 F4               B   104    				djnz scrp_cmd
                           B   105    				
0027C0 AF                  B   106    scrp_eol		xor a
0027C1 12                  B   107    				ld (de),a						0027C2 FD22 DD 55 00       B   108    				ld (script_file_offset),iy
0027C7 22 E0 55 00         B   109    				ld (script_buffer_offset),hl
                           B   110    			
0027CB CD 4A 0C 00         B   111    				call os_parse_cmd_chk_ps		                           B   112    				
0027CF FD2A DD 55 00       B   113    				ld iy,(script_file_offset)		0027D4 2A E0 55 00         B   114    				ld hl,(script_buffer_offset)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0027D8 7E                  B   115    scrp_fnc		ld a,(hl)		
0027D9 B7                  B   116    				or a
0027DA C8                  B   117    				ret z							0027DB FE20                B   118    				cp 020h
0027DD 30 05               B   119    				jr nc,scrp_gnc					0027DF 23                  B   120    				inc hl		
0027E0 FD23                B   121    				inc iy							0027E2 18 F4               B   122    				jr scrp_fnc
                           B   123    			
0027E4 FD22 DD 55 00       B   124    scrp_gnc		ld (script_file_offset),iy		0027E9 C3 1F 27 00         B   125    				jp scrp_loop	
                           B   126    			
                           B   127    			
                           B   128    			
0027ED D1                  B   129    pop_ret			pop de
0027EE C9                  B   130    				ret
                           B   131    				
                           B   132    			
                           B   133    ;----------------------------------------------
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0027EF                     B     7    os_cmd_ltn
                           B     8    
0027EF AF                  B     9    				xor a
0027F0 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0027F1                     B     5    os_cmd_pen
                           B     6    	
0027F1 0602                B     7    				ld b,2							0027F3 DD21 3D 52 00       B     8    				ld ix,current_pen
                           B     9    				
0027F8 CD 50 1C 00         B    10    chpenlp			call hexword_or_bust			0027FC 28 0D               B    11    				jr z,pendone					0027FE 23                  B    12    				inc hl
0027FF DD7300              B    13    				ld (ix),e
002802 DD7201              B    14    				ld (ix+1),d
002805 DD23                B    15    				inc ix
002807 DD23                B    16    				inc ix
002809 10 ED               B    17    				djnz chpenlp	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
                           B    18    				
00280B CD 97 0F 00         B    19    pendone			call os_refresh_screen
00280F AF                  B    20    				xor a
002810 C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002811                     B     5    os_cmd_palette
                           B     6    
002811 0610                B     7    				ld b,16							002813 DD21 41 52 00       B     8    				ld ix,pen_palette
                           B     9    				
002818 0E00                B    10    				ld c,0
00281A C5                  B    11    chcollp			push bc
00281B CD 50 1C 00         B    12    				call hexword_or_bust			00281F C1                  B    13    				pop bc
002820 28 0E               B    14    				jr z,colrdone					002822 0C                  B    15    				inc c
002823 23                  B    16    				inc hl
002824 DD7300              B    17    				ld (ix),e
002827 DD7201              B    18    				ld (ix+1),d
00282A DD23                B    19    				inc ix
00282C DD23                B    20    				inc ix
00282E 10 EA               B    21    				djnz chcollp
                           B    22    			
002830 79                  B    23    colrdone		ld a,c
002831 B7                  B    24    				or a
002832 20 04               B    25    				jr nz,pal_ok
002834 3E81                B    26    				ld a,81h						002836 B7                  B    27    				or a
002837 C9                  B    28    				ret
002838 21 41 52 00         B    29    pal_ok			ld hl,pen_palette
00283C CD DB 30 00         B    30    				call hswc_set_ui_colours	
002840 AF                  B    31    				xor a
002841 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
                           B    11    
002842                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
002842 CD D5 2D 00         B    15    				call disable_ms_irq
                           B    16    
002846 21 23 54 00         B    17    				ld hl,devices_connected
00284A CB8E                B    18    				res 1,(hl)
                           B    19    		
00284C CD 51 36 00         B    20    				call init_mouse
002850 C0                  B    21    				ret nz
                           B    22    			
002851 AF                  B    23    				xor a
002852 32 16 56 00         B    24    				ld (mouse_packet_index),a
002856 32 17 56 00         B    25    				ld (mouse_buttons),a
00285A 21000000            B    26    				ld hl,0
00285E 22 18 56 00         B    27    				ld (mouse_disp_x),hl
002862 22 1B 56 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
002866 21800200            B    30    				ld hl,window_width_pixels
00286A 11E00100            B    31    				ld de,window_height_pixels
00286E CD 39 14 00         B    32    				call os_set_mouse_window
                           B    33    
002872 CD CF 2D 00         B    34    				call enable_ms_irq
                           B    35    
002876 21 23 54 00         B    36    				ld hl,devices_connected
00287A CBCE                B    37    				set 1,(hl)
00287C AF                  B    38    				xor a
00287D C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
00287E                     B     5    os_cmd_vmode
                           B     6    	
00287E CD 50 1C 00         B     7    				call hexword_or_bust			002882 28 78               B     8    				jr z,vm_no_data					002884 7B                  B     9    				ld a,e
                           B    10    
002885 FE04                B    11    set_vmode		cp 4
002887 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
002889 2A 76 52 00         B    14    				ld hl,(font_addr)				00288D ED5B 7C 52 00       B    15    				ld de,(video_window_address)
002892 ED4B 79 52 00       B    16    				ld bc,(font_length)
002897 EDB0                B    17    				ldir
                           B    18    								
002899 32 3C 52 00         B    19    				ld (video_mode),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
00289D 21070000            B    20    				ld hl,7
0028A1 67                  B    21    				ld h,a
0028A2 ED6C                B    22    				mlt hl
0028A4 E5                  B    23    				push hl
0028A5 DDE1                B    24    				pop ix
0028A7 11 00 29 00         B    25    				ld de,mode_param_list
0028AB DD19                B    26    				add ix,de
0028AD 21000000            B    27    				ld hl,0
0028B1 11000000            B    28    				ld de,0
0028B5 DD6E00              B    29    				ld l,(ix)
0028B8 DD6601              B    30    				ld h,(ix+1)
0028BB DD5E02              B    31    				ld e,(ix+2)
0028BE DD5603              B    32    				ld d,(ix+3)
0028C1 DD4604              B    33    				ld b,(ix+4)
0028C4 DDE5                B    34    				push ix
0028C6 CD C8 2F 00         B    35    				call set_bitmap_parameters
0028CA DDE1                B    36    				pop ix
0028CC DD4605              B    37    				ld b,(ix+5)
0028CF DD4E06              B    38    				ld c,(ix+6)
0028D2 CD 2E 30 00         B    39    				call set_charmap_parameters
                           B    40    				
0028D6 2A 7C 52 00         B    41    				ld hl,(video_window_address)	0028DA ED5B 76 52 00       B    42    				ld de,(font_addr)				0028DF ED4B 79 52 00       B    43    				ld bc,(font_length)				0028E4 EDB0                B    44    				ldir
                           B    45    				
0028E6 CD E7 30 00         B    46    				call hwsc_clear_screen
                           B    47    				
0028EA 01080400            B    48    				ld bc,0408h
0028EE CD FC 2F 00         B    49    				call set_font_parameters		                           B    50    				
0028F2 AF                  B    51    				xor a
0028F3 32 63 52 00         B    52    				ld (active_cursor_image),a		                           B    53    				
0028F7 C9                  B    54    				ret
                           B    55    
0028F8 3E88                B    56    vm_bad_range	ld a,88h
0028FA B7                  B    57    				or a
0028FB C9                  B    58    				ret
                           B    59    
0028FC 3E81                B    60    vm_no_data		ld a,81h
0028FE B7                  B    61    				or a
0028FF C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
002900                     B    66    mode_param_list
                           B    67    
002900 4001E001            B    68    				dw 640/2,480
002904 00                  B    69    				db 00b
002905 503C                B    70    				db 80,60
                           B    71    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
002907 4001F000            B    72    				dw 640/2,240
00290B 01                  B    73    				db 01b
00290C 501E                B    74    				db 80,30
                           B    75    				
00290E A000E001            B    76    				dw 320/2,480
002912 02                  B    77    				db 10b
002913 283C                B    78    				db 40,60
                           B    79    				
002915 A000F000            B    80    				dw 320/2,240
002919 03                  B    81    				db 11b
00291A 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00291C                     B     5    os_cmd_font
                           B     6    	
00291C CD 6A 16 00         B     7    				call os_check_volume_format	
002920 C0                  B     8    				ret nz
                           B     9    				
002921 CD 99 1D 00         B    10    				call filename_or_bust			002925 22 26 5C 00         B    11    				ld (scratch_pad),hl
                           B    12    
002929 CD 3A 1A 00         B    13    				call fs_get_dir_cluster			00292D ED53 29 5C 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
002932 CD C8 16 00         B    16    				call os_root_dir				002936 C0                  B    17    				ret nz
002937 21 67 29 00         B    18    				ld hl,fonts_fn
00293B CD B8 16 00         B    19    				call os_change_dir
00293F 20 1A               B    20    				jr nz,no_font
                           B    21    				
002941 2A 26 5C 00         B    22    				ld hl,(scratch_pad)
002945 CD FD 15 00         B    23    				call os_find_file				002949 20 10               B    24    				jr nz,no_font
                           B    25    				
00294B 11000700            B    26    				ld de,700h
00294F CD 0E 16 00         B    27    				call os_set_load_length			                           B    28    
002953 2A 76 52 00         B    29    				ld hl,(font_addr)				002957 CD 2C 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
00295B F5                  B    32    no_font			push af
00295C ED5B 29 5C 00       B    33    				ld de,(scratch_pad+3)			002961 CD 46 1A 00         B    34    				call fs_update_dir_cluster
002965 F1                  B    35    				pop af
002966 C9                  B    36    				ret
                           B    37    
                           B    38    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    39    
002967 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
00296D 7E                  B     8    os_cmd_set		ld a,(hl)					; i
00296E B7                  B     9    				or a
00296F 28 3B               B    10    				jr z,show_envars
                           B    11    
002971 11 29 5C 00         B    12    				ld de,scratch_pad+3			; p
002975 7E                  B    13    evsalp1			ld a,(hl)
002976 12                  B    14    				ld (de),a
002977 B7                  B    15    				or a
002978 28 2E               B    16    				jr z,set_bad_args
00297A FE3D                B    17    				cp '='
00297C 28 04               B    18    				jr z,evsadone1
00297E 23                  B    19    				inc hl
00297F 13                  B    20    				inc de
002980 18 F3               B    21    				jr evsalp1
002982 AF                  B    22    evsadone1		xor a
002983 12                  B    23    				ld (de),a
002984 13                  B    24    				inc de
002985 23                  B    25    				inc hl
002986 ED53 26 5C 00       B    26    				ld (scratch_pad),de
                           B    27    
00298B 7E                  B    28    evsalp2			ld a,(hl)
00298C 12                  B    29    				ld (de),a
00298D FE20                B    30    				cp ' '
00298F 28 07               B    31    				jr z,evsadone2
002991 B7                  B    32    				or a
002992 28 14               B    33    				jr z,set_bad_args
002994 23                  B    34    				inc hl
002995 13                  B    35    				inc de
002996 18 F3               B    36    				jr evsalp2
002998 AF                  B    37    evsadone2		xor a
002999 12                  B    38    				ld (de),a
                           B    39    				
00299A 21 29 5C 00         B    40    				ld hl,scratch_pad+3
00299E ED5B 26 5C 00       B    41    				ld de,(scratch_pad)
0029A3 CD 41 1B 00         B    42    				call os_set_envar
0029A7 C9                  B    43    				ret
                           B    44    
0029A8 3E82                B    45    set_bad_args	ld a,82h
0029AA B7                  B    46    				or a
0029AB C9                  B    47    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B    48    				
                           B    49    
0029AC 21 3A 56 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
0029B0 7E                  B    52    show_envlp		ld a,(hl)
0029B1 FEFF                B    53    				cp 0ffh
0029B3 28 12               B    54    				jr z,set_done
0029B5 E5                  B    55    				push hl
0029B6 CD 25 0F 00         B    56    				call os_print_string
0029BA CD B8 13 00         B    57    				call os_new_line
0029BE E1                  B    58    				pop hl
                           B    59    				
0029BF 23                  B    60    set_fnl			inc hl
0029C0 7E                  B    61    				ld a,(hl)
0029C1 B7                  B    62    				or a
0029C2 20 FB               B    63    				jr nz,set_fnl
0029C4 23                  B    64    				inc hl
0029C5 18 E9               B    65    				jr show_envlp
                           B    66    				
0029C7 AF                  B    67    set_done		xor a
0029C8 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           A  3064    
0029C9 C9                  A  3065    os_cmd_unused	ret		; <- dummy command, sho
                           A  3066    
                           A  3067    ;----------------------------------------------
                           A  3068    
0029CA                     A  3069    os_get_mem_high
                           A  3070    
0029CA 2A 24 54 00         A  3071    		ld hl,(sys_ram_high)
0029CE ED5B 27 54 00       A  3072    		ld de,(vram_a_high)
0029D3 ED4B 2A 54 00       A  3073    		ld bc,(vram_b_high)
0029D8 AF                  A  3074    		xor a
0029D9 C9                  A  3075    		ret
                           A  3076    								
                           A  3077    ;----------------------------------------------
                           A  3078    ; Drivers
                           A  3079    ;----------------------------------------------
                           A  3080    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
0029DA                     B    49    sd_card_driver				; label of driver c
                           B    50    
0029DA C3 EE 29 00         B    51    	jp sdc_get_id			; $00 : init / get 
0029DE C3 B8 2B 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
0029E2 C3 08 2C 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
0029E6 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
0029EE                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
0029EE 3E01                B    72    				ld a,1							0029F0 32 3E 2D 00         B    73    				ld (sdc_sdc),a			
                           B    74    
0029F4 CD 85 2D 00         B    75    				call sdc_power_off				0029F8 CD 90 2D 00         B    76    				call sdc_slow_clock				0029FC CD 5E 2D 00         B    77    				call sdc_select_card			                           B    78    
002A00 11004000            B    79    				ld de,16384						002A04 CD 27 35 00         B    80    				call hwsc_time_delay
                           B    81    				
002A08 CD 7A 2D 00         B    82    				call sdc_power_on				                           B    83    
002A0C 11830000            B    84    				ld de,131						002A10 CD 27 35 00         B    85    				call hwsc_time_delay
                           B    86    
002A14 CD 69 2D 00         B    87    				call sdc_deselect_card			                           B    88    	
002A18 060A                B    89    				ld b,10							002A1A CD F6 2C 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
002A1E 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
002A20 CD 5E 2D 00         B    93    				call sdc_select_card			                           B    94    	
002A24 3E40                B    95    				ld a,040h						002A26 01009500            B    96    				ld bc,09500h					002A2A 11000000            B    97    				ld de,00000h
002A2E CD A4 2C 00         B    98    				call sdc_send_command		 
002A32 CD 4F 2D 00         B    99    				call sdc_get_byte				002A36 CD C9 2C 00         B   100    				call sdc_wait_ncr				002A3A EE01                B   101    				xor 01h							002A3C C2 FD 2C 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
002A40 01401F00            B   105    				ld bc,8000						002A44 C5                  B   106    sdc_iwl			push bc							002A45 3E77                B   107    				ld a,077h						002A47 CD 9C 2C 00         B   108    				call sdc_send_command_null_args
002A4B CD 4F 2D 00         B   109    				call sdc_get_byte				002A4F CD 4F 2D 00         B   110    				call sdc_get_byte				002A53 3E69                B   111    				ld a,069h						002A55 CD 9C 2C 00         B   112    				call sdc_send_command_null_args
002A59 CD 4F 2D 00         B   113    				call sdc_get_byte
002A5D C1                  B   114    				pop bc
002A5E CD C9 2C 00         B   115    				call sdc_wait_ncr				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002A62 CB57                B   116    				bit 2,a							002A64 20 0C               B   117    				jr nz,mmc_init			
002A66 B7                  B   118    				or a
002A67 28 2A               B   119    				jr z,sdc_init_done				002A69 0B                  B   120    				dec bc
002A6A 78                  B   121    				ld a,b
002A6B B1                  B   122    				or c
002A6C 20 D6               B   123    				jr nz,sdc_iwl
002A6E C3 0B 2D 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
002A72 AF                  B   127    mmc_init		xor a							002A73 32 3E 2D 00         B   128    				ld (sdc_sdc),a
002A77 01401F00            B   129    				ld bc,8000						002A7B C5                  B   130    mmc_iwl			push bc
002A7C 3E41                B   131    				ld a,041h						002A7E CD 9C 2C 00         B   132    				call sdc_send_command_null_args
002A82 C1                  B   133    				pop bc
002A83 CD C9 2C 00         B   134    				call sdc_wait_ncr				002A87 B7                  B   135    				or a							002A88 28 09               B   136    				jr z,sdc_init_done
002A8A 0B                  B   137    				dec bc
002A8B 78                  B   138    				ld a,b
002A8C B1                  B   139    				or c
002A8D 20 EC               B   140    				jr nz,mmc_iwl
002A8F C3 07 2D 00         B   141    				jp mmc_init_fail
                           B   142    
002A93                     B   143    sdc_init_done
                           B   144    
002A93 3E49                B   145    				ld a,049h						002A95 CD 9C 2C 00         B   146    				call sdc_send_command_null_args
002A99 CD C9 2C 00         B   147    				call sdc_wait_ncr				002A9D B7                  B   148    				or a							002A9E C2 0F 2D 00         B   149    				jp nz,sdc_id_fail
002AA2 CD DD 2C 00         B   150    				call sdc_wait_data_token		002AA6 B7                  B   151    				or a
002AA7 C2 0F 2D 00         B   152    				jp nz,sdc_id_fail
002AAB 21 26 5A 00         B   153    				ld hl,sector_buffer				002AAF CD A5 2B 00         B   154    				call sdc_read_id_bytes	
                           B   155    
002AB3 3E4A                B   156    				ld a,04ah						002AB5 CD 9C 2C 00         B   157    				call sdc_send_command_null_args
002AB9 CD C9 2C 00         B   158    				call sdc_wait_ncr				002ABD B7                  B   159    				or a							002ABE C2 0F 2D 00         B   160    				jp nz,sdc_id_fail
002AC2 CD DD 2C 00         B   161    				call sdc_wait_data_token		002AC6 B7                  B   162    				or a
002AC7 C2 0F 2D 00         B   163    				jp nz,sdc_id_fail
002ACB 21 36 5A 00         B   164    				ld hl,sector_buffer+16			002ACF CD A5 2B 00         B   165    				call sdc_read_id_bytes
002AD3 CD 69 2D 00         B   166    				call sdc_deselect_card
                           B   167    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   168    
002AD7                     B   169    sdc_quit	
                           B   170    
002AD7 21 39 5A 00         B   171    				ld hl,sector_buffer+013h		002ADB 11 46 5A 00         B   172    				ld de,sector_buffer+020h
002ADF 01050000            B   173    				ld bc,5
002AE3 3A 3E 2D 00         B   174    				ld a,(sdc_sdc)
002AE7 B7                  B   175    				or a
002AE8 20 01               B   176    				jr nz,sdc_cn5
002AEA 03                  B   177    				inc bc
002AEB EDB0                B   178    sdc_cn5			ldir
002AED E5                  B   179    				push hl
002AEE D5                  B   180    				push de
002AEF 21 23 2D 00         B   181    				ld hl,sdc_vnchars
002AF3 011A0000            B   182    				ld bc,26
002AF7 EDB0                B   183    				ldir
002AF9 D1                  B   184    				pop de
002AFA E1                  B   185    				pop hl
002AFB 13                  B   186    				inc de
002AFC 13                  B   187    				inc de
002AFD 7E                  B   188    				ld a,(hl)
002AFE CB3F                B   189    				srl a
002B00 CB3F                B   190    				srl a
002B02 CB3F                B   191    				srl a
002B04 CB3F                B   192    				srl a
002B06 C630                B   193    				add a,030h						002B08 12                  B   194    				ld (de),a
002B09 13                  B   195    				inc de
002B0A 13                  B   196    				inc de
002B0B 7E                  B   197    				ld a,(hl)
002B0C E60F                B   198    				and 0fh
002B0E C630                B   199    				add a,030h
002B10 12                  B   200    				ld (de),a						002B11 13                  B   201    				inc de
002B12 13                  B   202    				inc de
002B13 13                  B   203    				inc de
002B14 13                  B   204    				inc de
002B15 13                  B   205    				inc de
002B16 23                  B   206    				inc hl
002B17 0604                B   207    				ld b,4
002B19 7E                  B   208    sdc_snulp		ld a,(hl)						002B1A CB3F                B   209    				srl a
002B1C CB3F                B   210    				srl a
002B1E CB3F                B   211    				srl a
002B20 CB3F                B   212    				srl a
002B22 C630                B   213    				add a,030h
002B24 FE3A                B   214    				cp 03ah
002B26 38 02               B   215    				jr c,sdc_hvl1
002B28 C607                B   216    				add a,07h
002B2A 12                  B   217    sdc_hvl1		ld (de),a
002B2B 13                  B   218    				inc de
002B2C 7E                  B   219    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002B2D E60F                B   220    				and 0fh
002B2F C630                B   221    				add a,030h
002B31 FE3A                B   222    				cp 03ah
002B33 38 02               B   223    				jr c,sdc_hvl2
002B35 C607                B   224    				add a,07h
002B37 12                  B   225    sdc_hvl2		ld (de),a
002B38 13                  B   226    				inc de
002B39 23                  B   227    				inc hl
002B3A 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
002B3C DD21 26 5A 00       B   232    				ld ix,sector_buffer				002B41 DD7E06              B   233    				ld a,(ix+6)
002B44 E603                B   234    				and 00000011b
002B46 57                  B   235    				ld d,a
002B47 DD5E07              B   236    				ld e,(ix+7)
002B4A DD7E08              B   237    				ld a,(ix+8)
002B4D E6C0                B   238    				and 11000000b
002B4F CB27                B   239    				sla a
002B51 CB13                B   240    				rl e
002B53 CB12                B   241    				rl d
002B55 CB27                B   242    				sla a
002B57 CB13                B   243    				rl e
002B59 CB12                B   244    				rl d							                           B   245    	
002B5B DD7E09              B   246    				ld a,(ix+9)
002B5E E603                B   247    				and 00000011b
002B60 47                  B   248    				ld b,a
002B61 DD7E0A              B   249    				ld a,(ix+10)
002B64 E680                B   250    				and 10000000b
002B66 CB27                B   251    				sla a
002B68 CB10                B   252    				rl b							                           B   253    	
002B6A 04                  B   254    				inc b
002B6B 04                  B   255    				inc b
002B6C 21000000            B   256    				ld hl,0
002B70 CB23                B   257    sdc_cmsh		sla e
002B72 CB12                B   258    				rl d
002B74 CB15                B   259    				rl l
002B76 CB14                B   260    				rl h
002B78 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
002B7A DD7E05              B   263    				ld a,(ix+5)
002B7D E60F                B   264    				and 00001111b					002B7F 28 17               B   265    				jr z,sdc_nbls
002B81 47                  B   266    				ld b,a
002B82 CB23                B   267    sdc_blsh		sla e
002B84 CB12                B   268    				rl d
002B86 CB15                B   269    				rl l
002B88 CB14                B   270    				rl h
002B8A 10 F6               B   271    				djnz sdc_blsh					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   272    	
002B8C 0609                B   273    				ld b,9							002B8E CB3C                B   274    sdc_cbsec		srl h
002B90 CB1D                B   275    				rr l
002B92 CB1A                B   276    				rr d
002B94 CB1B                B   277    				rr e
002B96 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
002B98 E5                  B   280    sdc_nbls		push hl
002B99 C1                  B   281    				pop bc							002B9A 21 46 5A 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
002B9E CD 9B 2D 00         B   284    				call sdc_fast_clock				002BA2 AF                  B   285    				xor a
002BA3 37                  B   286    				scf
002BA4 C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
002BA5                     B   292    sdc_read_id_bytes
                           B   293    
002BA5 0610                B   294    				ld b,16
002BA7 CD 4F 2D 00         B   295    sdc_csdlp		call sdc_get_byte
002BAB 77                  B   296    				ld (hl),a
002BAC 23                  B   297    				inc hl
002BAD 10 F8               B   298    				djnz sdc_csdlp
002BAF CD 4F 2D 00         B   299    				call sdc_get_byte				002BB3 CD 4F 2D 00         B   300    				call sdc_get_byte				002BB7 C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
002BB8                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
002BB8 CD 5E 2D 00         B   310    				call sdc_select_card
                           B   311    
002BBC 21 B5 54 00         B   312    				ld hl,sector_lba0
002BC0 5E                  B   313    				ld e,(hl)						002BC1 23                  B   314    				inc hl
002BC2 56                  B   315    				ld d,(hl)
002BC3 23                  B   316    				inc hl
002BC4 4E                  B   317    				ld c,(hl)
002BC5 CB23                B   318    				sla e							002BC7 CB12                B   319    				rl d
002BC9 CB11                B   320    				rl c
002BCB 3E51                B   321    				ld a,051h						002BCD 0601                B   322    				ld b,001h						002BCF CD A4 2C 00         B   323    				call sdc_send_command		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002BD3 CD C9 2C 00         B   324    				call sdc_wait_ncr				002BD7 B7                  B   325    				or a							002BD8 C2 13 2D 00         B   326    				jp nz,sdc_bcr_error			
002BDC CD DD 2C 00         B   327    				call sdc_wait_data_token		002BE0 B7                  B   328    				or a
002BE1 C2 17 2D 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
002BE5 21 26 5A 00         B   331    				ld hl,sector_buffer				002BE9 0600                B   332    				ld b,0
002BEB CD 4F 2D 00         B   333    sdc_rslp		call sdc_get_byte
002BEF 77                  B   334    				ld (hl),a
002BF0 23                  B   335    				inc hl
002BF1 CD 4F 2D 00         B   336    				call sdc_get_byte
002BF5 77                  B   337    				ld (hl),a
002BF6 23                  B   338    				inc hl
002BF7 10 F2               B   339    				djnz sdc_rslp
002BF9 CD 4F 2D 00         B   340    				call sdc_get_byte				002BFD CD 4F 2D 00         B   341    				call sdc_get_byte				                           B   342    
002C01 CD 69 2D 00         B   343    				call sdc_deselect_card
002C05 AF                  B   344    				xor a
002C06 37                  B   345    				scf
002C07 C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
002C08                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
002C08 CD 5E 2D 00         B   354    				call sdc_select_card
                           B   355    
002C0C 21 B5 54 00         B   356    				ld hl,sector_lba0
002C10 5E                  B   357    				ld e,(hl)						002C11 23                  B   358    				inc hl
002C12 56                  B   359    				ld d,(hl)
002C13 23                  B   360    				inc hl
002C14 4E                  B   361    				ld c,(hl)
002C15 CB23                B   362    				sla e							002C17 CB12                B   363    				rl d
002C19 CB11                B   364    				rl c
002C1B 3E58                B   365    				ld a,058h						002C1D 0601                B   366    				ld b,001h						002C1F CD A4 2C 00         B   367    				call sdc_send_command		
002C23 CD C9 2C 00         B   368    				call sdc_wait_ncr				002C27 B7                  B   369    				or a							002C28 C2 13 2D 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
002C2C CD F6 2C 00         B   372    				call sdc_send_eight_clocks		                           B   373    
002C30 3EFE                B   374    				ld a,0feh
002C32 CD 3F 2D 00         B   375    				call sdc_send_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   376    
002C36 21 26 5A 00         B   377    				ld hl,sector_buffer				002C3A 0600                B   378    				ld b,0
002C3C 7E                  B   379    sdc_wslp		ld a,(hl)
002C3D CD 3F 2D 00         B   380    				call sdc_send_byte
002C41 23                  B   381    				inc hl
002C42 7E                  B   382    				ld a,(hl)
002C43 CD 3F 2D 00         B   383    				call sdc_send_byte
002C47 23                  B   384    				inc hl
002C48 10 F2               B   385    				djnz sdc_wslp
                           B   386    
002C4A CD F6 2C 00         B   387    				call sdc_send_eight_clocks		002C4E CD F6 2C 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
002C52 CD 4F 2D 00         B   390    				call sdc_get_byte				002C56 E61F                B   391    				and 01fh
002C58 CB3F                B   392    				srl a
002C5A FE02                B   393    				cp 002h
002C5C C2 1B 2D 00         B   394    				jp nz,sdc_write_fail
                           B   395    
002C60 0150C300            B   396    				ld bc,50000						002C64 CD 4F 2D 00         B   397    sdc_wcbsy		call sdc_get_byte				002C68 FEFF                B   398    				cp 0ffh
002C6A 28 09               B   399    				jr z,sdc_nbusy
002C6C 0B                  B   400    				dec bc
002C6D 78                  B   401    				ld a,b
002C6E B1                  B   402    				or c
002C6F 20 F3               B   403    				jr nz,sdc_wcbsy
002C71 C3 1F 2D 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
002C75 3E4D                B   406    sdc_nbusy		ld a,04dh						002C77 01000100            B   407    				ld bc,0100h			
002C7B 11000000            B   408    				ld de,0000h
002C7F CD A4 2C 00         B   409    				call sdc_send_command
002C83 CD C9 2C 00         B   410    				call sdc_wait_ncr				002C87 B7                  B   411    				or a							002C88 C2 1B 2D 00         B   412    				jp nz,sdc_write_fail
002C8C CD 4F 2D 00         B   413    				call sdc_get_byte				002C90 B7                  B   414    				or a							002C91 C2 1B 2D 00         B   415    				jp nz,sdc_write_fail		
002C95 CD 69 2D 00         B   416    				call sdc_deselect_card			002C99 AF                  B   417    				xor a
002C9A 37                  B   418    				scf
002C9B C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
002C9C                     B   423    sdc_send_command_null_args
                           B   424    
002C9C 01000100            B   425    				ld bc,0100h				
002CA0 11000000            B   426    				ld de,0000h
                           B   427    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   428    
002CA4                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
002CA4 F5                  B   433    				push af				
002CA5 CD F6 2C 00         B   434    				call sdc_send_eight_clocks		002CA9 F1                  B   435    				pop af
                           B   436    
002CAA CD 3F 2D 00         B   437    				call sdc_send_byte				002CAE 79                  B   438    				ld a,c							002CAF CD 3F 2D 00         B   439    				call sdc_send_byte
002CB3 7A                  B   440    				ld a,d
002CB4 CD 3F 2D 00         B   441    				call sdc_send_byte
002CB8 7B                  B   442    				ld a,e
002CB9 CD 3F 2D 00         B   443    				call sdc_send_byte
002CBD 3E00                B   444    				ld a,0
002CBF CD 3F 2D 00         B   445    				call sdc_send_byte
002CC3 78                  B   446    				ld a,b							002CC4 CD 3F 2D 00         B   447    				call sdc_send_byte
002CC8 C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
002CC9                     B   452    sdc_wait_ncr
                           B   453    	
002CC9 C5                  B   454    				push bc
002CCA 01000000            B   455    				ld bc,0
002CCE CD 4F 2D 00         B   456    sdc_wncrl		call sdc_get_byte				002CD2 CB7F                B   457    				bit 7,a							002CD4 28 05               B   458    				jr z,sdc_gcr
002CD6 0B                  B   459    				dec bc
002CD7 78                  B   460    			 	ld a,b
002CD8 B1                  B   461    				or c
002CD9 20 F3               B   462    				jr nz,sdc_wncrl
002CDB C1                  B   463    sdc_gcr			pop bc
002CDC C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
002CDD                     B   468    sdc_wait_data_token
                           B   469    
002CDD C5                  B   470    				push bc
002CDE 01000000            B   471    				ld bc,0
002CE2 CD 4F 2D 00         B   472    sdc_wdt			call sdc_get_byte				002CE6 FEFE                B   473    				cp 0feh
002CE8 28 09               B   474    				jr z,sdc_gdt
002CEA 0B                  B   475    				dec bc
002CEB 78                  B   476    			 	ld a,b
002CEC B1                  B   477    				or c
002CED 20 F3               B   478    				jr nz,sdc_wdt
002CEF C1                  B   479    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002CF0 3E01                B   480    				ld a,1							002CF2 C9                  B   481    				ret
                           B   482    
002CF3 C1                  B   483    sdc_gdt			pop bc
002CF4 AF                  B   484    				xor a							002CF5 C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
002CF6                     B   489    sdc_send_eight_clocks
                           B   490    
002CF6 3EFF                B   491    				ld a,0ffh
002CF8 CD 3F 2D 00         B   492    				call sdc_send_byte
002CFC C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
002CFD                     B   497    init_spi_mode_fail	
                           B   498    
002CFD 3E00                B   499    				ld a,sdc_error_spi_mode_failed
002CFF F5                  B   500    fail_ret		push af
002D00 CD 69 2D 00         B   501    				call sdc_deselect_card
002D04 F1                  B   502    				pop af
002D05 B7                  B   503    				or a
002D06 C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
002D07                     B   508    mmc_init_fail
                           B   509    
002D07 3E01                B   510    				ld a,sdc_error_bad_init_mmc
002D09 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
002D0B                     B   515    sdc_init_fail
                           B   516    
002D0B 3E02                B   517    				ld a,sdc_error_bad_init
002D0D 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
002D0F                     B   523    sdc_id_fail
                           B   524    
002D0F 3E03                B   525    				ld a,sdc_error_bad_id
002D11 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
002D13                     B   530    sdc_bcr_error
                           B   531    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
002D13 3E04                B   532    				ld a,sdc_error_bad_command_resp
002D15 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
002D17                     B   537    sdc_dt_timeout
                           B   538    
002D17 3E05                B   539    				ld a,sdc_error_data_token_timeo
002D19 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
002D1B                     B   544    sdc_write_fail
                           B   545    	
002D1B 3E07                B   546    				ld a,sdc_error_write_failed
002D1D 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
002D1F                     B   551    sdc_card_busy_timeout
                           B   552    
002D1F 3E06                B   553    				ld a,sdc_error_write_timeout
002D21 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
002D23 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
002D2B 3A303030 30303030 
002D33 30202020 20202000 
002D3B 000000 
                           B   559    
002D3E 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
002D3F                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
002D3F C5                  C     9    					push bc
002D40 01030000            C    10    					ld bc,port_sdc_data
002D44 ED79                C    11    					out (bc),a					                           C    12    	
002D46 0E01                C    13    					ld c,port_hw_flags			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
002D48 ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
002D4B 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
002D4D C1                  C    17    					pop bc
002D4E C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
002D4F                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
002D4F 3EFF                C    26    					ld a,0ffh
002D51 CD 3F 2D 00         C    27    					call sdc_send_byte
002D55 C5                  C    28    					push bc
002D56 01030000            C    29    					ld bc,port_sdc_data
002D5A ED78                C    30    					in a,(bc)					002D5C C1                  C    31    					pop bc
002D5D C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
002D5E                     C    36    sdc_select_card
                           C    37    	
002D5E C5                  C    38    					push bc
002D5F 01020000            C    39    					ld bc,port_sdc_ctrl
002D63 3E02                C    40    					ld a,1<<sdc_cs				002D65 ED79                C    41    					out (bc),a
002D67 C1                  C    42    					pop bc
002D68 C9                  C    43    					ret
                           C    44    
                           C    45    
002D69                     C    46    sdc_deselect_card
                           C    47    
002D69 C5                  C    48    					push bc
002D6A 01020000            C    49    					ld bc,port_sdc_ctrl
002D6E 3E82                C    50    					ld a,080h+(1<<sdc_cs)		002D70 ED79                C    51    					out (bc),a
002D72 C1                  C    52    					pop bc
                           C    53    				
002D73 3EFF                C    54    					ld a,0ffh					002D75 CD 3F 2D 00         C    55    					call sdc_send_byte
002D79 C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
002D7A                     C    60    sdc_power_on
                           C    61    
002D7A C5                  C    62    					push bc
002D7B 01020000            C    63    					ld bc,port_sdc_ctrl
002D7F 3E81                C    64    					ld a,80h+(1<<sdc_power)		002D81 ED79                C    65    					out (bc),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
002D83 C1                  C    66    					pop bc
002D84 C9                  C    67    					ret
                           C    68    	
                           C    69    
002D85                     C    70    sdc_power_off
                           C    71    	
002D85 C5                  C    72    					push bc						002D86 01020000            C    73    					ld bc,port_sdc_ctrl
002D8A 3E01                C    74    					ld a,1<<sdc_power			002D8C ED79                C    75    					out (bc),a					002D8E C1                  C    76    					pop bc						002D8F C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
002D90                     C    82    sdc_slow_clock
                           C    83    
002D90 C5                  C    84    					push bc
002D91 01020000            C    85    					ld bc,port_sdc_ctrl
002D95 3E04                C    86    					ld a,1<<sdc_speed			002D97 ED79                C    87    					out (bc),a
002D99 C1                  C    88    					pop bc
002D9A C9                  C    89    					ret
                           C    90    
                           C    91    
002D9B                     C    92    sdc_fast_clock
                           C    93    	
002D9B C5                  C    94    					push bc
002D9C 01020000            C    95    					ld bc,port_sdc_ctrl
002DA0 3E84                C    96    					ld a,080h+(1<<sdc_speed)	002DA2 ED79                C    97    					out (bc),a
002DA4 C1                  C    98    					pop bc
002DA5 C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3082    
                           A  3083    
                           A  3084    ;----------------------------------------------
                           A  3085    ; IO routines
                           A  3086    ;----------------------------------------------
                           A  3087    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
002DA6                     B     5    set_irq_vector
                           B     6    
002DA6 AF                  B     7    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
002DA7 ED47                B     8    				ld i,a
002DA9 3EC3                B     9    				ld a,c3h						002DAB 32320000            B    10    				ld (032h),a	
002DAF 21 E1 2D 00         B    11    				ld hl,int_routine				002DB3 22330000            B    12    				ld (033h),hl
002DB7 C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
002DB8 21 23 54 00         B    17    enable_os_irqs	ld hl,devices_connected			002DBC CB46                B    18    				bit 0,(hl)
002DBE C4 C9 2D 00         B    19    				call nz,enable_kb_irq
002DC2 CB4E                B    20    				bit 1,(hl)
002DC4 C4 CF 2D 00         B    21    				call nz,enable_ms_irq
002DC8 C9                  B    22    				ret
                           B    23    
                           B    24    
002DC9 3E81                B    25    enable_kb_irq	ld a,10000001b
002DCB ED3905              B    26    				out0 (port_irq_ctrl),a			002DCE C9                  B    27    				ret
                           B    28    
002DCF 3E82                B    29    enable_ms_irq	ld a,10000010b
002DD1 ED3905              B    30    				out0 (port_irq_ctrl),a			002DD4 C9                  B    31    				ret
                           B    32    
002DD5 3E02                B    33    disable_ms_irq	ld a,00000010b
002DD7 ED3905              B    34    				out0 (port_irq_ctrl),a			002DDA C9                  B    35    				ret
                           B    36    
002DDB 3E3F                B    37    disable_irqs	ld a,00111111b
002DDD ED3905              B    38    				out0 (port_irq_ctrl),a			002DE0 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
002DE1                     B    44    int_routine
002DE1 F5                  B    45    				push af							002DE2 ED3807              B    46    				in0 a,(port_ps2_ctrl)			002DE5 CB67                B    47    				bit 4,a
002DE7 C4 F9 2D 00         B    48    				call nz,kb_interrupt_handler
002DEB ED3807              B    49    				in0 a,(port_ps2_ctrl)			002DEE CB6F                B    50    				bit 5,a
002DF0 C4 9B 2E 00         B    51    				call nz,ms_interrupt_handler
002DF4 F1                  B    52    				pop af
                           B    53    
002DF5 FB                  B    54    				ei								002DF6 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    60    
002DF9                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
002DF9 E5                  B    77    				push hl							002DFA C5                  B    78    				push bc
                           B    79    				
002DFB ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		002DFE 47                  B    81    				ld b,a
                           B    82    
002DFF 3A 0A 56 00         B    83    				ld a,(key_release_mode)
002E03 B7                  B    84    				or a
002E04 28 20               B    85    				jr z,key_pressed
                           B    86    			
002E06 78                  B    87    				ld a,b							002E07 FEE0                B    88    				cp 0e0h							002E09 28 61               B    89    				jr z,kirq_done	
002E0B FEE1                B    90    				cp 0e1h
002E0D 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
002E0F CD 76 2E 00         B    93    				call qualifiers					002E13 7D                  B    94    				ld a,l
002E14 2F                  B    95    				cpl
002E15 6F                  B    96    				ld l,a
002E16 3A 0C 56 00         B    97    				ld a,(key_mod_flags)
002E1A A5                  B    98    				and l							002E1B 32 0C 56 00         B    99    				ld (key_mod_flags),a
002E1F AF                  B   100    				xor a
002E20 32 0A 56 00         B   101    				ld (key_release_mode),a
002E24 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
002E26 78                  B   105    key_pressed		ld a,b							002E27 FEE0                B   106    				cp 0e0h							002E29 28 41               B   107    				jr z,kirq_done	
002E2B FEE1                B   108    				cp 0e1h
002E2D 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
002E2F FEF0                B   111    				cp 0f0h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
002E31 20 08               B   112    				jr nz,not_krel
002E33 3E01                B   113    				ld a,1							002E35 32 0A 56 00         B   114    				ld (key_release_mode),a			002E39 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
002E3B CD 76 2E 00         B   118    not_krel		call qualifiers					002E3F 3A 0C 56 00         B   119    				ld a,(key_mod_flags)			002E43 B5                  B   120    				or l
002E44 32 0C 56 00         B   121    				ld (key_mod_flags),a			002E48 68                  B   122    				ld l,b
002E49 01000000            B   123    				ld bc,0
002E4D 3A 08 56 00         B   124    				ld a,(key_buf_wr_idx)
002E51 4F                  B   125    				ld c,a
002E52 7D                  B   126    				ld a,l
002E53 21 E8 55 00         B   127    				ld hl,scancode_buffer
002E57 09                  B   128    				add hl,bc
002E58 77                  B   129    				ld (hl),a						002E59 0E10                B   130    				ld c,16
002E5B 09                  B   131    				add hl,bc
002E5C 3A 0C 56 00         B   132    				ld a,(key_mod_flags)			002E60 77                  B   133    				ld (hl),a	
002E61 3A 08 56 00         B   134    				ld a,(key_buf_wr_idx)
002E65 3C                  B   135    				inc a
002E66 E60F                B   136    				and 15
002E68 32 08 56 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
002E6C ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			002E6F CB67                B   140    				bit 4,a	
002E71 20 88               B   141    				jr nz,key_loop
                           B   142    
002E73 C1                  B   143    				pop bc
002E74 E1                  B   144    				pop hl
002E75 C9                  B   145    				ret
                           B   146    
                           B   147    
002E76 2E40                B   148    qualifiers		ld l,040h
002E78 FE2F                B   149    				cp 02fh
002E7A C8                  B   150    				ret z
                           B   151    			
002E7B 2E20                B   152    				ld l,020h
002E7D FE27                B   153    				cp 027h
002E7F C8                  B   154    				ret z
                           B   155    			
002E80 2E10                B   156    				ld l,010h
002E82 FE59                B   157    				cp 059h
002E84 C8                  B   158    				ret z
                           B   159    			
002E85 2E08                B   160    				ld l,08h
002E87 FE11                B   161    				cp 011h
002E89 C8                  B   162    				ret z
                           B   163    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
002E8A 2E04                B   164    				ld l,04h
002E8C FE1F                B   165    				cp 01fh
                           B   166    			
002E8E 2E02                B   167    				ld l,02h
002E90 FE14                B   168    				cp 14h
002E92 C8                  B   169    				ret z
                           B   170    			
002E93 2E01                B   171    				ld l,01h
002E95 FE12                B   172    				cp 12h
002E97 C8                  B   173    				ret z
                           B   174    				
002E98 2E00                B   175    				ld l,0
002E9A C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
002E9B                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
002E9B C5                  B   198    				push bc							002E9C D5                  B   199    				push de							002E9D E5                  B   200    				push hl							                           B   201    							
002E9E 11000000            B   202    ms_loop			ld de,0		
002EA2 3A 16 56 00         B   203    				ld a,(mouse_packet_index)		002EA6 5F                  B   204    				ld e,a
002EA7 21 12 56 00         B   205    				ld hl,mouse_packet	
002EAB 19                  B   206    				add hl,de
002EAC ED3806              B   207    				in0 a,(port_mouse_data)
002EAF 77                  B   208    				ld (hl),a
                           B   209    								
002EB0 21 11 56 00         B   210    				ld hl,mouse_packet_size
002EB4 1C                  B   211    				inc e							002EB5 7B                  B   212    				ld a,e
002EB6 BE                  B   213    				cp (hl)
002EB7 20 4F               B   214    				jr nz,msubpkt
                           B   215    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
002EB9 3A 12 56 00         B   216    				ld a,(mouse_packet)				002EBD 4F                  B   217    				ld c,a	
002EBE E607                B   218    				and 0111b
002EC0 32 17 56 00         B   219    				ld (mouse_buttons),a
                           B   220    				
002EC4 11000000            B   221    				ld de,0							002EC8 CB61                B   222    				bit 4,c
002ECA 28 01               B   223    				jr z,mxsignpos
002ECC 1B                  B   224    				dec de
002ECD 3A 13 56 00         B   225    mxsignpos		ld a,(mouse_packet+1)
002ED1 5F                  B   226    				ld e,a
002ED2 2A 18 56 00         B   227    				ld hl,(mouse_disp_x)
002ED6 19                  B   228    				add hl,de
002ED7 22 18 56 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
002EDB 11000000            B   231    				ld de,0							002EDF CB69                B   232    				bit 5,c
002EE1 28 01               B   233    				jr z,mysignpos
002EE3 1B                  B   234    				dec de
002EE4 3A 14 56 00         B   235    mysignpos		ld a,(mouse_packet+2)
002EE8 5F                  B   236    				ld e,a
002EE9 2A 1B 56 00         B   237    				ld hl,(mouse_disp_y)			002EED AF                  B   238    				xor a							002EEE ED52                B   239    				sbc hl,de
002EF0 22 1B 56 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
002EF4 21 15 56 00         B   242    				ld hl,mouse_packet+3			002EF8 3A 1E 56 00         B   243    				ld a,(mouse_wheel)
002EFC 86                  B   244    				add a,(hl)
002EFD 32 1E 56 00         B   245    				ld (mouse_wheel),a
                           B   246    				
002F01 3E01                B   247    				ld a,1
002F03 32 1F 56 00         B   248    				ld (mouse_updated),a			                           B   249    				
002F07 AF                  B   250    				xor a
002F08 32 16 56 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
002F0C ED3807              B   253    				in0 a,(port_ps2_ctrl)			002F0F CB6F                B   254    				bit 5,a
002F11 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
002F13 E1                  B   257    				pop hl
002F14 D1                  B   258    				pop de
002F15 C1                  B   259    				pop bc
002F16 C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
002F17                     B   266    nmi_routine
002F17 CD 31 13 00         B   267    				call os_store_CPU_regs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   268    				
002F1B 21000000            B   269    				ld hl,0
002F1F 39                  B   270    				add hl,sp
002F20 7E                  B   271    				ld a,(hl)						002F21 E601                B   272    				and 1
002F23 32 51 54 00         B   273    				ld (store_adl),a
002F27 20 0A               B   274    				jr nz,adl_freeze
002F29 23                  B   275    				inc hl
002F2A 5E                  B   276    				ld e,(hl)						002F2B 23                  B   277    				inc hl
002F2C 56                  B   278    				ld d,(hl)
002F2D CD 83 15 00         B   279    				call mbase_de
002F31 18 02               B   280    				jr got_pc
                           B   281    				
002F33 33                  B   282    adl_freeze		inc sp
002F34 D1                  B   283    				pop de							002F35 ED53 47 54 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
002F3A CD 63 2F 00         B   286    				call disable_nmi
002F3E ED3906              B   287    				out0 (port_nmi_ack),a			002F41 3E01                B   288    				ld a,1
002F43 32 21 54 00         B   289    				ld (frozen),a
002F47 C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
002F4B                     B   311    set_nmi_vector
                           B   312    
002F4B 3EC3                B   313    				ld a,0c3h						002F4D 32660000            B   314    				ld (066h),a
002F51 21 17 2F 00         B   315    				ld hl,nmi_routine				002F55 22670000            B   316    				ld (067h),hl
002F59 C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   320    
002F5A ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			002F5D 3EC0                B   322    				ld a,11000000b					002F5F ED3905              B   323    				out0 (port_irq_ctrl),a
002F62 C9                  B   324    				ret
                           B   325    
002F63 3E40                B   326    disable_nmi		ld a,01000000b					002F65 ED3905              B   327    				out0 (port_irq_ctrl),a
002F68 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
002F69                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
002F69 C5                  B    10    				push bc
002F6A 3A AE 52 00         B    11    				ld a,(serial_timeout)
002F6E 47                  B    12    				ld b,a
002F6F 3ECC                B    13    rx_set_timer	ld a,cch
002F71 ED3981              B    14    				out0 (TMR0_RR_L),a				002F74 3E0C                B    15    				ld a,0ch
002F76 ED3982              B    16    				out0 (TMR0_RR_H),a				002F79 3E03                B    17    				ld a,00000011b					002F7B ED3980              B    18    				out0 (TMR0_CTL),a				002F7E ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
002F81 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					002F83 ED7401              B    22    				tstio 1							002F86 20 0E               B    23    				jr nz,rx_in_buffer
002F88 AF                  B    24    				xor a
002F89 B0                  B    25    				or b
002F8A 28 13               B    26    				jr z,rx_time_out
002F8C 0E80                B    27    				ld c,TMR0_CTL	
002F8E ED7480              B    28    				tstio 128						002F91 28 EE               B    29    				jr z,rx_byte_lp		
002F93 05                  B    30    				dec b
002F94 18 D9               B    31    				jr rx_set_timer
                           B    32    
002F96 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
002F9A ED78                B    34    				in a,(bc)						002F9C C1                  B    35    				pop bc
002F9D BF                  B    36    				cp a							002F9E C9                  B    37    				ret
                           B    38    
002F9F C1                  B    39    rx_time_out		pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
002FA0 3E83                B    40    				ld a,083h						002FA2 B7                  B    41    				or a							002FA3 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
002FA4                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
002FA4 C5                  B    52    				push bc
002FA5 0EC5                B    53    				ld c,UART0_LSR					002FA7 ED7420              B    54    rs232_swait		tstio 020h						002FAA 28 FB               B    55    				jr z,rs232_swait
002FAC 01C00000            B    56    				ld bc,UART0_THR
002FB0 ED79                B    57    				out (c),a						002FB2 C1                  B    58    				pop bc
002FB3 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
002FB4                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
002FB4 7A                  B    68    				ld a,d
002FB5 CD A4 2F 00         B    69    				call send_serial_byte
002FB9 7B                  B    70    				ld a,e
002FBA CD A4 2F 00         B    71    				call send_serial_byte
002FBE C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
002FBF                     B    76    hwsc_flush_serial_buffer
                           B    77    
002FBF C5                  B    78    				push bc
002FC0 01C00000            B    79    				ld bc,UART0_RBR
002FC4 ED78                B    80    				in a,(bc)						002FC6 C1                  B    81    				pop bc
002FC7 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
002FC8                     B     6    set_bitmap_parameters
                           B     7    				
002FC8 78                  B     8    				ld a,b
002FC9 32 91 52 00         B     9    				ld (window_pixel_doubling),a
002FCD 22 6A 52 00         B    10    				ld (window_width_bytes),hl		002FD1 ED53 6D 52 00       B    11    				ld (window_height_lines),de
                           B    12    			
002FD6 21000080            B    13    				ld hl,vram_a_addr				002FDA 22 7C 52 00         B    14    				ld (video_window_address),hl
002FDE 21000000            B    15    				ld hl,0
002FE2 ED5B 6A 52 00       B    16    				ld de,(window_width_bytes)
002FE7 ED4B 6D 52 00       B    17    				ld bc,(window_height_lines)
002FEC 19                  B    18    cwsblp			add hl,de
002FED 0B                  B    19    				dec bc
002FEE 78                  B    20    				ld a,b
002FEF B1                  B    21    				or c
002FF0 20 FA               B    22    				jr nz,cwsblp
002FF2 22 88 52 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
002FF6 CD 87 30 00         B    25    				call os_set_video_hw_regs
                           B    26    				
002FFA AF                  B    27    				xor a
002FFB C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
002FFC                     B    32    set_font_parameters
                           B    33    
002FFC 78                  B    34    				ld a,b							002FFD 32 70 52 00         B    35    				ld (font_width_bytes),a
003001 79                  B    36    				ld a,c
003002 32 73 52 00         B    37    				ld (font_height_lines),a		003006 11000000            B    38    				ld de,0
00300A 59                  B    39    				ld e,c
00300B 50                  B    40    				ld d,b
00300C ED5C                B    41    				mlt de
00300E 21000000            B    42    				ld hl,0
003012 0638                B    43    				ld b,224/4						003014 19                  B    44    cfslp			add hl,de
003015 10 FD               B    45    				djnz cfslp
003017 22 79 52 00         B    46    				ld (font_length),hl
                           B    47    							
00301B 41                  B    48    				ld b,c
00301C 21000000            B    49    				ld hl,0
003020 ED5B 6A 52 00       B    50    				ld de,(window_width_bytes)
003025 19                  B    51    csualp			add hl,de
003026 10 FD               B    52    				djnz csualp
003028 22 8E 52 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
00302C AF                  B    55    				xor a
00302D C9                  B    56    				ret
                           B    57    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    58    				
                           B    59    
00302E                     B    60    set_charmap_parameters
                           B    61    
00302E 79                  B    62    				ld a,c
00302F 32 64 52 00         B    63    				ld (window_rows),a
003033 78                  B    64    				ld a,b
003034 32 67 52 00         B    65    				ld (window_columns),a
                           B    66    				
003038 2A 7C 52 00         B    67    				ld hl,(video_window_address)
00303C ED5B 88 52 00       B    68    				ld de,(total_window_bytes)
003041 19                  B    69    				add hl,de
003042 22 7F 52 00         B    70    				ld (charmap_address),hl
                           B    71    
003046 11000000            B    72    				ld de,0
00304A 3A 64 52 00         B    73    				ld a,(window_rows)
00304E 5F                  B    74    				ld e,a
00304F 3A 67 52 00         B    75    				ld a,(window_columns)
003053 57                  B    76    				ld d,a
003054 ED5C                B    77    				mlt de
003056 ED53 8B 52 00       B    78    				ld (total_charmap_bytes),de
00305B 19                  B    79    				add hl,de
00305C 22 82 52 00         B    80    				ld (attributes_address),hl
003060 19                  B    81    				add hl,de
003061 22 85 52 00         B    82    				ld (cursor_image_address),hl
003065 11000000            B    83    				ld de,0
003069 3A 73 52 00         B    84    				ld a,(font_height_lines)
00306D 5F                  B    85    				ld e,a
00306E 3A 70 52 00         B    86    				ld a,(font_width_bytes)
003072 57                  B    87    				ld d,a
003073 D5                  B    88    				push de
003074 ED5C                B    89    				mlt de
003076 19                  B    90    				add hl,de
003077 22 76 52 00         B    91    				ld (font_addr),hl
00307B D1                  B    92    				pop de
00307C 16E0                B    93    				ld d,224
00307E ED5C                B    94    				mlt de
003080 19                  B    95    				add hl,de				
003081 22 27 54 00         B    96    				ld (vram_a_high),hl
003085 AF                  B    97    				xor a
003086 C9                  B    98    				ret
                           B    99    				
                           B   100    
003087                     B   101    os_set_video_hw_regs
                           B   102    
003087 DD210018 FF         B   103    				ld ix,video_control				00308C 3A 91 52 00         B   104    				ld a,(window_pixel_doubling)
003090 CB27                B   105    				sla a
003092 F601                B   106    				or 1
003094 DD7700              B   107    				ld (ix),a						003097 DD360100            B   108    				ld (ix+1),0						00309B DD360200            B   109    				ld (ix+2),0						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00309F DD360463            B   110    				ld (ix+4),99					                           B   111    
0030A3 DD212010 FF         B   112    				ld ix,bitmap_parameters			0030A8 ED5B 7C 52 00       B   113    				ld de,(video_window_address)	0030AD DD1F00              B   114    				ld (ix),de						0030B0 DD360401            B   115    				ld (ix+04h),1					0030B4 DD360800            B   116    				ld (ix+08h),0					0030B8 DD360C00            B   117    				ld (ix+0ch),0					0030BC ED4B 6A 52 00       B   118    				ld bc,(window_width_bytes)		0030C1 CB38                B   119    				srl b							0030C3 CB19                B   120    				rr c
0030C5 CB38                B   121    				srl b
0030C7 CB19                B   122    				rr c
0030C9 CB38                B   123    				srl b
0030CB CB19                B   124    				rr c
0030CD 0D                  B   125    				dec c
0030CE DD7110              B   126    				ld (ix+10h),c
                           B   127    				
0030D1 21 41 52 00         B   128    				ld hl,pen_palette
0030D5 CD DB 30 00         B   129    				call hswc_set_ui_colours
                           B   130    				
0030D9 AF                  B   131    				xor a							0030DA C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
                           B   136    				
0030DB                     B   137    hswc_set_ui_colours
                           B   138    
0030DB 110000FF            B   139    				ld de,hw_palette
0030DF 01200000            B   140    				ld bc,16*2
0030E3 EDB0                B   141    				ldir
0030E5 AF                  B   142    				xor a							0030E6 C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
0030E7                     B   148    hwsc_clear_screen
                           B   149    
0030E7 2A 7C 52 00         B   150    				ld hl,(video_window_address)	0030EB 3A 3F 52 00         B   151    				ld a,(background_colour)
0030EF E60F                B   152    				and 0fh
0030F1 47                  B   153    				ld b,a
0030F2 07                  B   154    				rlca
0030F3 07                  B   155    				rlca
0030F4 07                  B   156    				rlca
0030F5 07                  B   157    				rlca
0030F6 B0                  B   158    				or b
0030F7 77                  B   159    				ld (hl),a
0030F8 E5                  B   160    				push hl
0030F9 D1                  B   161    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0030FA 13                  B   162    				inc de
0030FB ED4B 88 52 00       B   163    				ld bc,(total_window_bytes)
003100 0B                  B   164    				dec bc
003101 EDB0                B   165    				ldir
                           B   166    				
003103 2A 82 52 00         B   167    				ld hl,(attributes_address)		003107 ED4B 8B 52 00       B   168    				ld bc,(total_charmap_bytes)
00310C 0B                  B   169    				dec bc
00310D 3600                B   170    				ld (hl),0
00310F E5                  B   171    				push hl
003110 D1                  B   172    				pop de
003111 13                  B   173    				inc de
003112 EDB0                B   174    				ldir				
                           B   175    
003114 2A 7F 52 00         B   176    				ld hl,(charmap_address)			003118 ED4B 8B 52 00       B   177    				ld bc,(total_charmap_bytes)
00311D 0B                  B   178    				dec bc
00311E 3620                B   179    				ld (hl),' '
003120 E5                  B   180    				push hl
003121 D1                  B   181    				pop de
003122 13                  B   182    				inc de
003123 EDB0                B   183    				ldir				
                           B   184    
003125 01000000            B   185    				ld bc,0
003129 ED43 B9 54 00       B   186    				ld (cursor_y),bc
00312E AF                  B   187    				xor a							00312F C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003130                     B   193    hwsc_scroll_up	
                           B   194    				
003130 C5                  B   195    				push bc
003131 D5                  B   196    				push de
003132 E5                  B   197    				push hl
                           B   198    
003133 2A 88 52 00         B   199    				ld hl,(total_window_bytes)
003137 ED5B 8E 52 00       B   200    				ld de,(total_row_bytes)
00313C AF                  B   201    				xor a
00313D ED52                B   202    				sbc hl,de
00313F E5                  B   203    				push hl
003140 C1                  B   204    				pop bc							003141 2A 7C 52 00         B   205    				ld hl,(video_window_address)
003145 ED5B 8E 52 00       B   206    				ld de,(total_row_bytes)
00314A 19                  B   207    				add hl,de						00314B ED5B 7C 52 00       B   208    				ld de,(video_window_address)	003150 EDB0                B   209    				ldir
                           B   210    				
003152 EB                  B   211    				ex de,hl						003153 3A 3F 52 00         B   212    				ld a,(background_colour)
003157 E60F                B   213    				and 0fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003159 4F                  B   214    				ld c,a
00315A 07                  B   215    				rlca
00315B 07                  B   216    				rlca
00315C 07                  B   217    				rlca
00315D 07                  B   218    				rlca
00315E B1                  B   219    				or c
00315F 77                  B   220    				ld (hl),a
003160 ED4B 8E 52 00       B   221    				ld bc,(total_row_bytes)
003165 0B                  B   222    				dec bc
003166 E5                  B   223    				push hl
003167 D1                  B   224    				pop de
003168 13                  B   225    				inc de
003169 EDB0                B   226    				ldir
                           B   227    
00316B 2A 7F 52 00         B   228    				ld hl,(charmap_address)			00316F ED5B 67 52 00       B   229    				ld de,(window_columns)
003174 19                  B   230    				add hl,de
003175 ED5B 7F 52 00       B   231    				ld de,(charmap_address)
00317A ED4B 64 52 00       B   232    				ld bc,(window_rows)
00317F 0D                  B   233    				dec c
003180 3A 67 52 00         B   234    				ld a,(window_columns)
003184 47                  B   235    				ld b,a
003185 ED4C                B   236    				mlt bc
003187 C5                  B   237    				push bc
003188 EDB0                B   238    				ldir
00318A C1                  B   239    				pop bc							                           B   240    
00318B 2A 7F 52 00         B   241    				ld hl,(charmap_address)			00318F 09                  B   242    				add hl,bc
003190 3620                B   243    				ld (hl),' '
003192 ED4B 67 52 00       B   244    				ld bc,(window_columns)
003197 0B                  B   245    				dec bc
003198 E5                  B   246    				push hl
003199 D1                  B   247    				pop de
00319A 13                  B   248    				inc de
00319B EDB0                B   249    				ldir
                           B   250    					
00319D 2A 82 52 00         B   251    				ld hl,(attributes_address)		0031A1 ED5B 67 52 00       B   252    				ld de,(window_columns)
0031A6 19                  B   253    				add hl,de
0031A7 ED5B 82 52 00       B   254    				ld de,(attributes_address)
0031AC ED4B 64 52 00       B   255    				ld bc,(window_rows)
0031B1 0D                  B   256    				dec c
0031B2 3A 67 52 00         B   257    				ld a,(window_columns)
0031B6 47                  B   258    				ld b,a
0031B7 ED4C                B   259    				mlt bc
0031B9 C5                  B   260    				push bc
0031BA EDB0                B   261    				ldir
0031BC C1                  B   262    				pop bc			
                           B   263    
0031BD 2A 82 52 00         B   264    				ld hl,(attributes_address)		0031C1 09                  B   265    				add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0031C2 3600                B   266    				ld (hl),0
0031C4 ED4B 67 52 00       B   267    				ld bc,(window_columns)
0031C9 0B                  B   268    				dec bc
0031CA E5                  B   269    				push hl
0031CB D1                  B   270    				pop de
0031CC 13                  B   271    				inc de
0031CD EDB0                B   272    				ldir
                           B   273    
0031CF E1                  B   274    				pop hl
0031D0 D1                  B   275    				pop de
0031D1 C1                  B   276    				pop bc
0031D2 AF                  B   277    				xor a							0031D3 C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
0031D4                     B   291    hwsc_plot_char
0031D4 E5                  B   292    				push hl							0031D5 F5                  B   293    				push af
0031D6 3A 3D 52 00         B   294    				ld a,(current_pen)
0031DA 32 61 52 00         B   295    				ld (plotchar_colour),a
0031DE 18 02               B   296    				jr plotc_go
                           B   297    				
0031E0                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
0031E0 E5                  B   300    				push hl
0031E1 F5                  B   301    				push af							0031E2 3A 64 52 00         B   302    plotc_go		ld a,(window_rows)				0031E6 3D                  B   303    				dec a
0031E7 B9                  B   304    				cp c							0031E8 38 08               B   305    				jr c,win_err
0031EA 3A 67 52 00         B   306    				ld a,(window_columns)
0031EE 3D                  B   307    				dec a
0031EF B8                  B   308    				cp b
0031F0 30 06               B   309    				jr nc,win_ok
0031F2 F1                  B   310    win_err			pop af
0031F3 E1                  B   311    				pop hl
0031F4 3E82                B   312    				ld a,82h						0031F6 B7                  B   313    				or a
0031F7 C9                  B   314    				ret
                           B   315    				
0031F8 F1                  B   316    win_ok			pop af
0031F9 D5                  B   317    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0031FA C5                  B   318    				push bc
0031FB DDE5                B   319    				push ix
0031FD FDE5                B   320    				push iy
0031FF 2A 73 52 00         B   321    				ld hl,(font_height_lines)		003203 D620                B   322    				sub a,32
003205 67                  B   323    				ld h,a
003206 C620                B   324    				add a,32
003208 ED6C                B   325    				mlt hl							00320A ED5B 76 52 00       B   326    				ld de,(font_addr)
00320F 19                  B   327    				add hl,de
003210 E5                  B   328    				push hl
003211 DDE1                B   329    				pop ix							                           B   330    				
003213 11000000            B   331    				ld de,0
003217 2A 8E 52 00         B   332    				ld hl,(total_row_bytes)			00321B 5D                  B   333    				ld e,l
00321C 51                  B   334    				ld d,c
00321D ED5C                B   335    				mlt de							00321F 69                  B   336    				ld l,c							003220 ED6C                B   337    				mlt hl							003222 29                  B   338    				add hl,hl						003223 29                  B   339    				add hl,hl
003224 29                  B   340    				add hl,hl
003225 29                  B   341    				add hl,hl
003226 29                  B   342    				add hl,hl
003227 29                  B   343    				add hl,hl
003228 29                  B   344    				add hl,hl
003229 29                  B   345    				add hl,hl
00322A 19                  B   346    				add hl,de						00322B ED5B 70 52 00       B   347    				ld de,(font_width_bytes)
003230 50                  B   348    				ld d,b	
003231 ED5C                B   349    				mlt de							003233 19                  B   350    				add hl,de						003234 ED5B 7C 52 00       B   351    				ld de,(video_window_address)
003239 19                  B   352    				add hl,de
00323A E5                  B   353    				push hl
00323B FDE1                B   354    				pop iy							                           B   355    				
00323D 2A 67 52 00         B   356    				ld hl,(window_columns)			003241 61                  B   357    				ld h,c							003242 ED6C                B   358    				mlt hl
003244 11000000            B   359    				ld de,0
003248 58                  B   360    				ld e,b
003249 19                  B   361    				add hl,de
00324A EB                  B   362    				ex de,hl
00324B 2A 7F 52 00         B   363    				ld hl,(charmap_address)
00324F 19                  B   364    				add hl,de
003250 77                  B   365    				ld (hl),a
                           B   366    
003251 3A 61 52 00         B   367    				ld a,(plotchar_colour)			003255 2A 82 52 00         B   368    				ld hl,(attributes_address)
003259 19                  B   369    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00325A 77                  B   370    				ld (hl),a
                           B   371    
00325B 57                  B   372    				ld d,a				
00325C E6F0                B   373    				and 0f0h
00325E 20 0E               B   374    				jr nz,notransbg
003260 3A 3F 52 00         B   375    				ld a,(background_colour)
003264 E60F                B   376    				and 0fh
003266 47                  B   377    				ld b,a
003267 07                  B   378    				rlca
003268 07                  B   379    				rlca
003269 07                  B   380    				rlca
00326A 07                  B   381    				rlca
00326B 4F                  B   382    				ld c,a
00326C 18 06               B   383    				jr gotbg
00326E 4F                  B   384    notransbg		ld c,a							00326F 0F                  B   385    				rrca
003270 0F                  B   386    				rrca
003271 0F                  B   387    				rrca
003272 0F                  B   388    				rrca
003273 47                  B   389    				ld b,a							003274 7A                  B   390    gotbg			ld a,d
003275 E60F                B   391    				and 0fh
003277 20 0E               B   392    				jr nz,notransfg
003279 3A 3F 52 00         B   393    				ld a,(background_colour)
00327D E60F                B   394    				and 0fh
00327F 57                  B   395    				ld d,a
003280 07                  B   396    				rlca
003281 07                  B   397    				rlca
003282 07                  B   398    				rlca
003283 07                  B   399    				rlca
003284 5F                  B   400    				ld e,a
003285 18 06               B   401    				jr gotfg
003287 57                  B   402    notransfg		ld d,a							003288 07                  B   403    				rlca
003289 07                  B   404    				rlca
00328A 07                  B   405    				rlca
00328B 07                  B   406    				rlca
00328C 5F                  B   407    				ld e,a							                           B   408    				
00328D D9                  B   409    gotfg			exx
00328E 3A 73 52 00         B   410    				ld a,(font_height_lines)
003292 47                  B   411    				ld b,a
003293 2A 6A 52 00         B   412    				ld hl,(window_width_bytes)
003297 ED5B 70 52 00       B   413    				ld de,(font_width_bytes)
00329C AF                  B   414    				xor a
00329D ED52                B   415    				sbc hl,de
00329F EB                  B   416    				ex de,hl
                           B   417    						
0032A0 D9                  B   418    charloop		exx
0032A1 DD6E00              B   419    				ld l,(ix)						0032A4 CB25                B   420    				sla l
0032A6 79                  B   421    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0032A7 30 01               B   422    				jr nc,nbgmsb7
0032A9 7B                  B   423    				ld a,e
0032AA CB25                B   424    nbgmsb7			sla l
0032AC 30 03               B   425    				jr nc,nfgmsb6
0032AE B2                  B   426    				or d
0032AF 18 01               B   427    				jr gotpixcol76
0032B1 B0                  B   428    nfgmsb6			or b
0032B2 FD7700              B   429    gotpixcol76		ld (iy),a
0032B5 FD23                B   430    				inc iy
                           B   431    
0032B7 CB25                B   432    				sla l
0032B9 79                  B   433    				ld a,c
0032BA 30 01               B   434    				jr nc,nbgmsb5
0032BC 7B                  B   435    				ld a,e
0032BD CB25                B   436    nbgmsb5			sla l
0032BF 30 03               B   437    				jr nc,nfgmsb4
0032C1 B2                  B   438    				or d
0032C2 18 01               B   439    				jr gotpixcol54
0032C4 B0                  B   440    nfgmsb4			or b
0032C5 FD7700              B   441    gotpixcol54		ld (iy),a
0032C8 FD23                B   442    				inc iy
                           B   443    				
0032CA CB25                B   444    				sla l
0032CC 79                  B   445    				ld a,c
0032CD 30 01               B   446    				jr nc,nbgmsb3
0032CF 7B                  B   447    				ld a,e
0032D0 CB25                B   448    nbgmsb3			sla l
0032D2 30 03               B   449    				jr nc,nfgmsb2
0032D4 B2                  B   450    				or d
0032D5 18 01               B   451    				jr gotpixcol32
0032D7 B0                  B   452    nfgmsb2			or b
0032D8 FD7700              B   453    gotpixcol32		ld (iy),a
0032DB FD23                B   454    				inc iy
                           B   455    				
0032DD CB25                B   456    				sla l
0032DF 79                  B   457    				ld a,c
0032E0 30 01               B   458    				jr nc,nbgmsb1
0032E2 7B                  B   459    				ld a,e
0032E3 CB25                B   460    nbgmsb1			sla l
0032E5 30 03               B   461    				jr nc,nfgmsb0
0032E7 B2                  B   462    				or d
0032E8 18 01               B   463    				jr gotpixcol10
0032EA B0                  B   464    nfgmsb0			or b
0032EB FD7700              B   465    gotpixcol10		ld (iy),a
0032EE FD23                B   466    				inc iy
                           B   467    				
0032F0 DD23                B   468    				inc ix
0032F2 D9                  B   469    				exx
0032F3 FD19                B   470    				add iy,de
0032F5 10 A9               B   471    				djnz charloop
0032F7 D9                  B   472    				exx 
                           B   473    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0032F8 FDE1                B   474    				pop iy
0032FA DDE1                B   475    				pop ix
0032FC C1                  B   476    				pop bc
0032FD D1                  B   477    				pop de
0032FE E1                  B   478    				pop hl
0032FF AF                  B   479    				xor a
003300 C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
003301                     B   484    hwsc_remove_cursor
                           B   485    
003301 ED4B B9 54 00       B   486    				ld bc,(cursor_y)
003306 CD A9 33 00         B   487    				call hwsc_get_charmap_addr_xy
00330A 1A                  B   488    				ld a,(de)
00330B 32 61 52 00         B   489    				ld (plotchar_colour),a
00330F 7E                  B   490    				ld a,(hl)				
003310 C3 E0 31 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
003314                     B   494    hwsc_draw_cursor
                           B   495    
003314 21 63 52 00         B   496    				ld hl,active_cursor_image
003318 3A 62 52 00         B   497    				ld a,(req_cursor_image)
00331C BE                  B   498    				cp (hl)
00331D C4 71 33 00         B   499    				call nz,hwsc_set_cursor_image
                           B   500    
003321 ED4B B9 54 00       B   501    				ld bc,(cursor_y)
003326 2A 8E 52 00         B   502    				ld hl,(total_row_bytes)			00332A 5D                  B   503    				ld e,l
00332B 51                  B   504    				ld d,c
00332C ED5C                B   505    				mlt de
00332E 69                  B   506    				ld l,c
00332F ED6C                B   507    				mlt hl
003331 29                  B   508    				add hl,hl
003332 29                  B   509    				add hl,hl
003333 29                  B   510    				add hl,hl
003334 29                  B   511    				add hl,hl
003335 29                  B   512    				add hl,hl
003336 29                  B   513    				add hl,hl
003337 29                  B   514    				add hl,hl
003338 29                  B   515    				add hl,hl
003339 19                  B   516    				add hl,de
00333A ED5B 70 52 00       B   517    				ld de,(font_width_bytes)
00333F 50                  B   518    				ld d,b
003340 ED5C                B   519    				mlt de		
003342 19                  B   520    				add hl,de						003343 ED5B 7C 52 00       B   521    				ld de,(video_window_address)
003348 19                  B   522    				add hl,de						003349 E5                  B   523    				push hl
00334A FDE1                B   524    				pop iy
                           B   525    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00334C ED4B 73 52 00       B   526    				ld bc,(font_height_lines)
003351 DD2A 85 52 00       B   527    				ld ix,(cursor_image_address)	003356 ED5B 6A 52 00       B   528    				ld de,(window_width_bytes)
                           B   529    
00335B ED2300              B   530    curlp2			lea hl,iy+0
00335E 0604                B   531    				ld b,4							003360 7E                  B   532    curlp1			ld a,(hl)
003361 DDAE00              B   533    				xor (ix)
003364 77                  B   534    				ld (hl),a
003365 DD23                B   535    				inc ix
003367 23                  B   536    				inc hl
003368 10 F6               B   537    				djnz curlp1
                           B   538    											
00336A FD19                B   539    				add iy,de
00336C 0D                  B   540    				dec c
00336D 20 EC               B   541    				jr nz,curlp2
                           B   542    
00336F AF                  B   543    				xor a							003370 C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
                           B   548    
003371                     B   549    hwsc_set_cursor_image
                           B   550    
003371 32 63 52 00         B   551    				ld (active_cursor_image),a
003375 D620                B   552    				sub a,32						003377 2A 73 52 00         B   553    				ld hl,(font_height_lines)
00337B 67                  B   554    				ld h,a
00337C ED6C                B   555    				mlt hl
00337E ED5B 76 52 00       B   556    				ld de,(font_addr)
003383 19                  B   557    				add hl,de
003384 ED5B 85 52 00       B   558    				ld de,(cursor_image_address)	003389 3A 73 52 00         B   559    				ld a,(font_height_lines)
00338D 47                  B   560    				ld b,a
00338E C5                  B   561    fclp2			push bc
                           B   562    
00338F 4E                  B   563    				ld c,(hl)
003390 0604                B   564    				ld b,4							003392 3E00                B   565    fclp1			ld a,0
003394 CB21                B   566    				sla c
003396 30 02               B   567    				jr nc,nopixl
003398 F6F0                B   568    				or a,0f0h						00339A CB21                B   569    nopixl			sla c
00339C 30 02               B   570    				jr nc,nopixr
00339E F60F                B   571    				or a,0fh
0033A0 12                  B   572    nopixr			ld (de),a
0033A1 13                  B   573    				inc de
0033A2 10 EE               B   574    				djnz fclp1
                           B   575    			
0033A4 23                  B   576    				inc hl
0033A5 C1                  B   577    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0033A6 10 E6               B   578    				djnz fclp2
0033A8 C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
0033A9                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
                           B   588    				
0033A9 11000000            B   589    				ld de,0
0033AD 3A 67 52 00         B   590    				ld a,(window_columns)			0033B1 5F                  B   591    				ld e,a							0033B2 51                  B   592    				ld d,c							0033B3 ED5C                B   593    				mlt de
0033B5 7B                  B   594    				ld a,e
0033B6 80                  B   595    				add a,b
0033B7 5F                  B   596    				ld e,a
0033B8 30 01               B   597    				jr nc,choffh_ok
0033BA 14                  B   598    				inc d
0033BB 2A 7F 52 00         B   599    choffh_ok		ld hl,(charmap_address)
0033BF 19                  B   600    				add hl,de
0033C0 E5                  B   601    				push hl
0033C1 2A 82 52 00         B   602    				ld hl,(attributes_address)
0033C5 19                  B   603    				add hl,de
0033C6 EB                  B   604    				ex de,hl
0033C7 E1                  B   605    				pop hl
0033C8 AF                  B   606    				xor a							0033C9 C9                  B   607    				ret
                           B   608    								
                           B   609    ;----------------------------------------------
                           B   610    
0033CA                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
0033CA C5                  B   615    				push bc
0033CB D5                  B   616    				push de
0033CC E5                  B   617    				push hl
                           B   618    
0033CD 3A B9 54 00         B   619    				ld a,(cursor_y)
0033D1 2A 67 52 00         B   620    				ld hl,(window_columns)
0033D5 67                  B   621    				ld h,a
0033D6 ED6C                B   622    				mlt hl
0033D8 11000000            B   623    				ld de,0
0033DC 58                  B   624    				ld e,b
0033DD 19                  B   625    				add hl,de
0033DE EB                  B   626    				ex de,hl
0033DF D5                  B   627    				push de
0033E0 2A 7F 52 00         B   628    				ld hl,(charmap_address)
0033E4 19                  B   629    				add hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   630    
0033E5 E5                  B   631    				push hl
0033E6 D1                  B   632    				pop de
0033E7 1B                  B   633    				dec de							0033E8 3A 67 52 00         B   634    				ld a,(window_columns)
0033EC 90                  B   635    				sub b
0033ED 01000000            B   636    				ld bc,0
0033F1 4F                  B   637    				ld c,a							0033F2 C5                  B   638    				push bc
0033F3 EDB0                B   639    				ldir
0033F5 C1                  B   640    				pop bc
0033F6 3E20                B   641    				ld a,32
0033F8 12                  B   642    				ld (de),a						                           B   643    				
0033F9 2A 82 52 00         B   644    				ld hl,(attributes_address)		0033FD D1                  B   645    				pop de
0033FE 19                  B   646    				add hl,de
0033FF E5                  B   647    				push hl
003400 D1                  B   648    				pop de
003401 1B                  B   649    				dec de							003402 EDB0                B   650    				ldir							003404 3A 3F 52 00         B   651    				ld a,(background_colour)
003408 12                  B   652    				ld (de),a						                           B   653    
003409 CD 6F 34 00         B   654    				call hwsc_redraw_line			                           B   655    
00340D E1                  B   656    				pop hl
00340E D1                  B   657    				pop de
00340F C1                  B   658    				pop bc
003410 C9                  B   659    				ret
                           B   660    
                           B   661    
                           B   662    
003411                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
003411 C5                  B   667    				push bc
003412 D5                  B   668    				push de
003413 E5                  B   669    				push hl
                           B   670    	
003414 21 BA 54 00         B   671    				ld hl,cursor_x				
003418 3A 67 52 00         B   672    				ld a,(window_columns)
00341C 3D                  B   673    				dec a
00341D BE                  B   674    				cp (hl)			
00341E 28 4B               B   675    				jr z,chright_end
                           B   676    
003420 46                  B   677    				ld b,(hl)
003421 11000000            B   678    				ld de,0
003425 57                  B   679    				ld d,a
003426 14                  B   680    				inc d
003427 3A B9 54 00         B   681    				ld a,(cursor_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00342B 5F                  B   682    				ld e,a
00342C ED5C                B   683    				mlt de
00342E D5                  B   684    				push de 
                           B   685    				
00342F C5                  B   686    				push bc
003430 2A 7F 52 00         B   687    				ld hl,(charmap_address)
003434 ED4B 67 52 00       B   688    				ld bc,(window_columns)
003439 0B                  B   689    				dec bc
00343A 0B                  B   690    				dec bc
00343B 09                  B   691    				add hl,bc
00343C C1                  B   692    				pop bc
                           B   693    				
00343D 19                  B   694    				add hl,de						00343E E5                  B   695    				push hl
00343F D1                  B   696    				pop de
003440 13                  B   697    				inc de							003441 3A 67 52 00         B   698    				ld a,(window_columns)
003445 3D                  B   699    				dec a
003446 90                  B   700    				sub b
003447 47                  B   701    				ld b,a
003448 C5                  B   702    				push bc							003449 7E                  B   703    mchrlp			ld a,(hl)
00344A 12                  B   704    				ld (de),a
00344B 2B                  B   705    				dec hl
00344C 1B                  B   706    				dec de
00344D 10 FA               B   707    				djnz mchrlp
                           B   708    
00344F 2A 82 52 00         B   709    				ld hl,(attributes_address)		003453 ED4B 67 52 00       B   710    				ld bc,(window_columns)
003458 0B                  B   711    				dec bc
003459 0B                  B   712    				dec bc
00345A 09                  B   713    				add hl,bc
                           B   714    
00345B C1                  B   715    				pop bc
00345C D1                  B   716    				pop de
00345D 19                  B   717    				add hl,de						00345E E5                  B   718    				push hl
00345F D1                  B   719    				pop de
003460 13                  B   720    				inc de							003461 7E                  B   721    mattrlp			ld a,(hl)
003462 12                  B   722    				ld (de),a
003463 2B                  B   723    				dec hl
003464 1B                  B   724    				dec de
003465 10 FA               B   725    				djnz mattrlp
                           B   726    
003467 CD 6F 34 00         B   727    				call hwsc_redraw_line			                           B   728    
00346B E1                  B   729    chright_end		pop hl	
00346C D1                  B   730    				pop de
00346D C1                  B   731    				pop bc
00346E C9                  B   732    				ret
                           B   733    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   734    ;----------------------------------------------
                           B   735    
00346F                     B   736    hwsc_redraw_line
                           B   737    				
00346F 3A B9 54 00         B   738    				ld a,(cursor_y)
003473 4F                  B   739    				ld c,a
                           B   740    		
003474                     B   741    hwsc_redraw_ui_line
                           B   742    
003474 ED5B 67 52 00       B   743    				ld de,(window_columns)			003479 51                  B   744    				ld d,c
00347A ED5C                B   745    				mlt de
00347C 0600                B   746    				ld b,0							00347E 2A 82 52 00         B   747    rs_xloop		ld hl,(attributes_address)		003482 19                  B   748    				add hl,de
003483 7E                  B   749    				ld a,(hl)						003484 32 61 52 00         B   750    				ld (plotchar_colour),a
003488 2A 7F 52 00         B   751    				ld hl,(charmap_address)
00348C 19                  B   752    				add hl,de
00348D 7E                  B   753    				ld a,(hl)				
00348E CD E0 31 00         B   754    				call hwsc_plotchar_specific_att
003492 13                  B   755    				inc de
003493 04                  B   756    				inc b
003494 3A 67 52 00         B   757    				ld a,(window_columns)
003498 B8                  B   758    				cp b
003499 20 E3               B   759    				jr nz,rs_xloop
00349B C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
00349C                     B   764    hwsc_charline_to_command_string	
                           B   765    								
00349C ED5B 67 52 00       B   766    				ld de,(window_columns)
0034A1 3A B9 54 00         B   767    				ld a,(cursor_y)					0034A5 57                  B   768    				ld d,a
0034A6 ED5C                B   769    				mlt de
0034A8 2A 7F 52 00         B   770    				ld hl,(charmap_address)
0034AC 19                  B   771    				add hl,de
0034AD 11 D7 54 00         B   772    				ld de,commandstring				0034B1 ED4B 67 52 00       B   773    				ld bc,(window_columns)
0034B6 EDB0                B   774    				ldir
0034B8 C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
0034B9 C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
0034BA 0E01                B   781    				ld c,1
0034BC ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
0034BF 0E01                B   784    				ld c,port_hw_flags
0034C1 ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0034C4 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
0034C6 C1                  B   788    				pop bc
0034C7 BF                  B   789    				cp a							0034C8 C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
0034C9                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0034C9 3E48                B     9    					ld a,01001000b				0034CB ED39AA              B    10    					out0 (CS0_CTL),a
0034CE 3E00                B    11    					ld a,000h					0034D0 ED39A8              B    12    					out0 (CS0_LBR),a
0034D3 3EFF                B    13    					ld a,0ffh	
0034D5 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
0034D8 3E58                B    16    					ld a,01011000b
0034DA ED39AD              B    17    					out0 (CS1_CTL),a			0034DD 3E00                B    18    					ld a,0
0034DF ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
0034E2 3EFF                B    23    					ld a,0ffh
0034E4 ED399F              B    24    					out0 (PC_DDR),a				0034E7 AF                  B    25    					xor a
0034E8 ED39A0              B    26    					out0 (PC_ALT1),a
0034EB ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
0034EE 3EFF                B    29    					ld a,0ffh					0034F0 ED39A3              B    30    					out0 (PD_DDR),a				0034F3 AF                  B    31    					xor a	
0034F4 ED39A4              B    32    					out0 (PD_ALT1),a			0034F7 3E0F                B    33    					ld a,00fh				
0034F9 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0034FC ED3892              B    38    					in0 a,(TMR_ISS)
0034FF E6FC                B    39    					and 11111100b
003501 F601                B    40    					or  00000001b
003503 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
003506 AF                  B    46    					xor a
003507 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
00350B C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
00350C 11000000            B    53    hwsc_get_version	ld de,0
003510 0610                B    54    					ld b,16
003512 78                  B    55    gethwvlp			ld a,b
003513 3D                  B    56    					dec a
003514 ED3908              B    57    					out0 (port_selector),a		003517 DB01                B    58    					in a,(port_hw_flags)		003519 CB27                B    59    					sla a
00351B CB13                B    60    					rl e
00351D CB12                B    61    					rl d
00351F 10 F1               B    62    					djnz gethwvlp				                           B    63    									
003521 212B0000            B    64    					ld hl,prose_version
003525 BF                  B    65    					cp a						003526 C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
003527                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
003527 CD 33 35 00         B    78    					call set_timeout
00352B CD 44 35 00         B    79    twaitlp				call test_timeout
00352F 28 FA               B    80    					jr z,twaitlp
003531 AF                  B    81    					xor a						003532 C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
003533 7B                  B    86    set_timeout			ld a,e						003534 ED3981              B    87    					out0 (TMR0_RR_L),a			003537 7A                  B    88    					ld a,d
003538 ED3982              B    89    					out0 (TMR0_RR_H),a			00353B 3E03                B    90    					ld a,00000011b				00353D ED3980              B    91    					out0 (TMR0_CTL),a			003540 ED3880              B    92    					in0 a,(TMR0_CTL)			003543 C9                  B    93    					ret
                           B    94    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003544 ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			003547 CB7F                B    96    					bit 7,a
003549 C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
00354A                     B   101    hwsc_read_rtc
00354A D5                  B   102    					push de
00354B C5                  B   103    					push bc
00354C 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
00354E 0608                B   105    					ld b,8
003550 21 1A 54 00         B   106    					ld hl,time_data
003554 ED92                B   107    					inimr						003556 0EE0                B   108    					ld c,RTC_SEC
003558 0600                B   109    					ld b,0
00355A 1E08                B   110    					ld e,8
00355C 21 1A 54 00         B   111    					ld hl,time_data
003560 ED78                B   112    timevloop			in a,(bc)					003562 BE                  B   113    					cp (hl)						003563 20 E7               B   114    					jr nz,hwsc_rtc_rlp			003565 23                  B   115    					inc hl
003566 0C                  B   116    					inc c
003567 1D                  B   117    					dec e
003568 20 F6               B   118    					jr nz,timevloop
00356A 21 1A 54 00         B   119    					ld hl,time_data
00356E C1                  B   120    					pop bc
00356F D1                  B   121    					pop de
003570 BF                  B   122    					cp a						003571 C9                  B   123    					ret
                           B   124    
                           B   125    
003572                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
003572 E5                  B   130    					push hl
003573 C5                  B   131    					push bc
003574 3E21                B   132    					ld a,00100001b				003576 ED39ED              B   133    					out0 (RTC_CTRL),a
003579 0EE0                B   134    					ld c,RTC_SEC
00357B 0608                B   135    					ld b,8
00357D ED93                B   136    					otimr
00357F 3E20                B   137    					ld a,00100000b				003581 ED39ED              B   138    					out0 (RTC_CTRL),a
003584 C1                  B   139    					pop bc
003585 E1                  B   140    					pop hl
003586 BF                  B   141    					cp a						003587 C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
003588                     B   151    init_keyboard
                           B   152    
003588 11004000            B   153    			ld de,16384							00358C CD 27 35 00         B   154    			call hwsc_time_delay
003590 F3                  B   155    			di
003591 CD 46 36 00         B   156    			call purge_keyboard
003595 CD 9F 35 00         B   157    			call rs_keyboard
003599 FB                  B   158    			ei
00359A D0                  B   159    			ret nc
00359B 3E8B                B   160    			ld a,08bh							00359D B7                  B   161    			or a
00359E C9                  B   162    			ret
                           B   163    			
                           B   164    			
00359F                     B   165    rs_keyboard
                           B   166    
00359F 3EFF                B   167    			ld a,0ffh
0035A1 CD BE 35 00         B   168    			call write_to_keyboard
0035A5 30 04               B   169    			jr nc,kb_connected
0035A7 3E8A                B   170    			ld a,08ah							0035A9 B7                  B   171    			or a
0035AA C9                  B   172    			ret
                           B   173    
0035AB                     B   174    kb_connected
                           B   175    			
0035AB 0605                B   176    			ld b,5
0035AD C5                  B   177    kb_initlp	push bc
0035AE CD 2A 36 00         B   178    			call wait_kb_byte					0035B2 C1                  B   179    			pop bc
0035B3 D8                  B   180    			ret c
0035B4 FEAA                B   181    			cp 0aah
0035B6 28 04               B   182    			jr z,kb_postok
0035B8 10 F3               B   183    			djnz kb_initlp						0035BA 37                  B   184    			scf									0035BB C9                  B   185    			ret
                           B   186    			
                           B   187    			
0035BC AF                  B   188    kb_postok	xor a
0035BD C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
0035BE                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
0035BE 4F                  B   198    			ld c,a								Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0035BF 3E01                B   199    			ld a,01b							0035C1 ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
0035C4 110A0000            B   202    			ld de,10
0035C8 CD 27 35 00         B   203    			call hwsc_time_delay				                           B   204    
0035CC 3E03                B   205    			ld a,11b
0035CE ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
0035D1 3E02                B   208    			ld a,10b
0035D3 ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
0035D6 CD A6 37 00         B   211    			call wait_kb_clk_high
                           B   212    			
0035DA 1601                B   213    			ld d,1								0035DC 0608                B   214    			ld b,8								0035DE CD 79 37 00         B   215    kdoloop		call wait_kb_clk_low	
0035E2 D8                  B   216    			ret c
0035E3 AF                  B   217    			xor a
0035E4 CBCF                B   218    			set 1,a
0035E6 CB41                B   219    			bit 0,c
0035E8 28 03               B   220    			jr z,kdbzero
0035EA CB8F                B   221    			res 1,a
0035EC 14                  B   222    			inc d
0035ED ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				0035F0 CD A6 37 00         B   224    			call wait_kb_clk_high
0035F4 D8                  B   225    			ret c
0035F5 CB19                B   226    			rr c
0035F7 10 E5               B   227    			djnz kdoloop
                           B   228    
0035F9 CD 79 37 00         B   229    			call wait_kb_clk_low
0035FD D8                  B   230    			ret c
0035FE AF                  B   231    			xor a
0035FF CB42                B   232    			bit 0,d
003601 20 02               B   233    			jr nz,kparone
003603 CBCF                B   234    			set 1,a
003605 ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				003608 CD A6 37 00         B   236    			call wait_kb_clk_high
00360C D8                  B   237    			ret c
                           B   238    			
00360D CD 79 37 00         B   239    			call wait_kb_clk_low
003611 D8                  B   240    			ret c
003612 AF                  B   241    			xor a
003613 ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
003616 CD 75 37 00         B   244    			call wait_kb_data_low				00361A D8                  B   245    			ret c
00361B CD 79 37 00         B   246    			call wait_kb_clk_low				00361F D8                  B   247    			ret c
                           B   248    				
003620 CD A2 37 00         B   249    			call wait_kb_data_high				003624 D8                  B   250    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003625 CD A6 37 00         B   251    			call wait_kb_clk_high				003629 C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
00362A                     B   258    wait_kb_byte
                           B   259    
00362A 11008000            B   260    			ld de,8000h
00362E CD 33 35 00         B   261    			call set_timeout					                           B   262    
003632 ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
003635 CB67                B   264    			bit 4,a
003637 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
003639 CD 44 35 00         B   267    			call test_timeout
00363D 28 F3               B   268    			jr z,wait_kloop
00363F 37                  B   269    			scf									003640 C9                  B   270    			ret
                           B   271    			
003641 ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			003644 B7                  B   273    			or a
003645 C9                  B   274    			ret
                           B   275    
                           B   276    
                           B   277    ;----------------------------------------------
                           B   278    
003646                     B   279    purge_keyboard
                           B   280    			
003646 ED3807              B   281    			in0 a,(port_ps2_ctrl)
003649 CB67                B   282    			bit 4,a
00364B C8                  B   283    			ret z
00364C ED3802              B   284    			in0 a,(port_keyboard_data)			00364F 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
003651                     B   295    init_mouse		
003651 F3                  B   296    			di
003652 CD 6A 37 00         B   297    			call purge_mouse
003656 CD 60 36 00         B   298    			call rs_mouse
00365A FB                  B   299    			ei
00365B D0                  B   300    			ret nc
00365C 3E8B                B   301    			ld a,08bh							00365E B7                  B   302    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00365F C9                  B   303    			ret
                           B   304    
                           B   305    
003660                     B   306    rs_mouse
003660 3EFF                B   307    			ld a,0ffh							003662 CD E2 36 00         B   308    			call write_to_mouse		
003666 30 04               B   309    			jr nc,mouse_connected
003668 3E8A                B   310    			ld a,08ah							00366A B7                  B   311    			or a
00366B C9                  B   312    			ret
                           B   313    
                           B   314    
00366C                     B   315    mouse_connected
                           B   316    
00366C 0605                B   317    			ld b,5
00366E C5                  B   318    ms_initlp	push bc
00366F CD 4E 37 00         B   319    			call wait_mouse_byte				003673 C1                  B   320    			pop bc
003674 D8                  B   321    			ret c
003675 FEAA                B   322    			cp 0aah
003677 28 04               B   323    			jr z,ms_postok
003679 10 F3               B   324    			djnz ms_initlp
00367B 18 43               B   325    			jr bad_mouse
                           B   326    			
00367D CD 4E 37 00         B   327    ms_postok	call wait_mouse_byte				003681 D8                  B   328    			ret c
003682 B7                  B   329    			or a
003683 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
003685 3E03                B   332    			ld a,3
003687 32 11 56 00         B   333    			ld (mouse_packet_size),a
                           B   334    
00368B 21 D1 52 00         B   335    			ld hl,intellimouse_seq
00368F 0606                B   336    			ld b,6
003691 CD C4 36 00         B   337    			call mouse_sequence
003695 D8                  B   338    			ret c
                           B   339    			
003696 3EF2                B   340    			ld a,0f2h
003698 CD D3 36 00         B   341    			call write_mouse_wait_ack			00369C D8                  B   342    			ret c
00369D CD 4E 37 00         B   343    			call wait_mouse_byte				0036A1 D8                  B   344    			ret c
0036A2 32 10 56 00         B   345    			ld (mouse_id),a
0036A6 B7                  B   346    			or a								0036A7 28 0A               B   347    			jr z,standard_mouse
0036A9 FE03                B   348    			cp 3
0036AB 20 13               B   349    			jr nz,bad_mouse						0036AD 3E04                B   350    			ld a,4
0036AF 32 11 56 00         B   351    			ld (mouse_packet_size),a
                           B   352    
0036B3                     B   353    standard_mouse
                           B   354    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0036B3 21 D7 52 00         B   355    			ld hl,mouse_settings_seq
0036B7 0606                B   356    			ld b,6
0036B9 CD C4 36 00         B   357    			call mouse_sequence
0036BD D8                  B   358    			ret c
0036BE AF                  B   359    			xor a								0036BF C9                  B   360    			ret
                           B   361    
                           B   362    
0036C0 3E89                B   363    bad_mouse	ld a,089h							0036C2 B7                  B   364    			or a
0036C3 C9                  B   365    			ret
                           B   366    
                           B   367    
0036C4                     B   368    mouse_sequence
                           B   369    
0036C4 7E                  B   370    mseqlp		ld a,(hl)
0036C5 E5                  B   371    			push hl
0036C6 C5                  B   372    			push bc
0036C7 CD D3 36 00         B   373    			call write_mouse_wait_ack
0036CB C1                  B   374    			pop bc
0036CC E1                  B   375    			pop hl
0036CD D8                  B   376    			ret c
0036CE 23                  B   377    			inc hl
0036CF 10 F3               B   378    			djnz mseqlp
0036D1 AF                  B   379    			xor a
0036D2 C9                  B   380    			ret
                           B   381    
                           B   382    
0036D3                     B   383    write_mouse_wait_ack
                           B   384    			
0036D3 CD E2 36 00         B   385    			call write_to_mouse
0036D7 D8                  B   386    			ret c
0036D8 CD 4E 37 00         B   387    			call wait_mouse_byte				0036DC D8                  B   388    			ret c
0036DD FEFA                B   389    			cp 0fah								0036DF C8                  B   390    			ret z
0036E0 37                  B   391    			scf
0036E1 C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
0036E2                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
0036E2 4F                  B   400    			ld c,a								0036E3 3E04                B   401    			ld a,0100b							0036E5 ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
0036E8 110A0000            B   404    			ld de,10
0036EC CD 27 35 00         B   405    			call hwsc_time_delay				                           B   406    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0036F0 3E0C                B   407    			ld a,1100b
0036F2 ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
0036F5 3E08                B   410    			ld a,1000b
0036F7 ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
0036FA CD AE 37 00         B   413    			call wait_mouse_clk_high
                           B   414    			
0036FE 1601                B   415    			ld d,1								003700 0608                B   416    			ld b,8								003702 CD 81 37 00         B   417    mdoloop		call wait_mouse_clk_low	
003706 D8                  B   418    			ret c
003707 AF                  B   419    			xor a
003708 CBDF                B   420    			set 3,a
00370A CB41                B   421    			bit 0,c
00370C 28 03               B   422    			jr z,mdbzero
00370E CB9F                B   423    			res 3,a
003710 14                  B   424    			inc d
003711 ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				003714 CD AE 37 00         B   426    			call wait_mouse_clk_high
003718 D8                  B   427    			ret c
003719 CB19                B   428    			rr c
00371B 10 E5               B   429    			djnz mdoloop
                           B   430    
00371D CD 81 37 00         B   431    			call wait_mouse_clk_low
003721 D8                  B   432    			ret c
003722 AF                  B   433    			xor a
003723 CB42                B   434    			bit 0,d
003725 20 02               B   435    			jr nz,parone
003727 CBDF                B   436    			set 3,a
003729 ED3907              B   437    parone		out0 (port_ps2_ctrl),a				00372C CD AE 37 00         B   438    			call wait_mouse_clk_high
003730 D8                  B   439    			ret c
                           B   440    			
003731 CD 81 37 00         B   441    			call wait_mouse_clk_low
003735 D8                  B   442    			ret c
003736 AF                  B   443    			xor a
003737 ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
00373A CD 7D 37 00         B   446    			call wait_mouse_data_low			00373E D8                  B   447    			ret c
00373F CD 81 37 00         B   448    			call wait_mouse_clk_low				003743 D8                  B   449    			ret c
                           B   450    				
003744 CD AA 37 00         B   451    			call wait_mouse_data_high			003748 D8                  B   452    			ret c
003749 CD AE 37 00         B   453    			call wait_mouse_clk_high			00374D C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00374E                     B   459    wait_mouse_byte
                           B   460    
00374E 11008000            B   461    			ld de,8000h
003752 CD 33 35 00         B   462    			call set_timeout					                           B   463    
003756 ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
003759 CB6F                B   465    			bit 5,a
00375B 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
00375D CD 44 35 00         B   468    			call test_timeout
003761 28 F3               B   469    			jr z,wait_mloop
003763 37                  B   470    			scf									003764 C9                  B   471    			ret
                           B   472    			
003765 ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				003768 B7                  B   474    			or a
003769 C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
00376A                     B   479    purge_mouse
                           B   480    			
00376A ED3807              B   481    			in0 a,(port_ps2_ctrl)
00376D CB6F                B   482    			bit 5,a
00376F C8                  B   483    			ret z
003770 ED3806              B   484    			in0 a,(port_mouse_data)			; r
003773 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
003775                     B   491    wait_kb_data_low
                           B   492    
003775 3E02                B   493    			ld a,2
003777 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
003779                     B   496    wait_kb_clk_low
                           B   497    
003779 3E01                B   498    			ld a,1
00377B 18 06               B   499    			jr test_lo_ps2			
                           B   500    
00377D                     B   501    wait_mouse_data_low
                           B   502    
00377D 3E08                B   503    			ld a,8
00377F 18 02               B   504    			jr test_lo_ps2
                           B   505    
003781                     B   506    wait_mouse_clk_low
                           B   507    
003781 3E04                B   508    			ld a,4
                           B   509    
003783 C5                  B   510    test_lo_ps2	push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
003784 D5                  B   511    			push de
003785 4F                  B   512    			ld c,a
003786 11004000            B   513    			ld de,04000h					; a
00378A CD 33 35 00         B   514    			call set_timeout
                           B   515    
00378E CD 44 35 00         B   516    nkb_lw		call test_timeout				; t
003792 28 04               B   517    			jr z,nkb_lnto
003794 D1                  B   518    			pop de
003795 C1                  B   519    			pop bc
003796 37                  B   520    			scf								; c
003797 C9                  B   521    			ret
003798 ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
00379B A1                  B   523    			and c
00379C 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
00379E D1                  B   526    			pop de
00379F C1                  B   527    			pop bc
0037A0 AF                  B   528    			xor a
0037A1 C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
                           B   533    
0037A2                     B   534    wait_kb_data_high
                           B   535    
0037A2 3E02                B   536    			ld a,2
0037A4 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
0037A6                     B   539    wait_kb_clk_high
                           B   540    
0037A6 3E01                B   541    			ld a,1
0037A8 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
0037AA                     B   545    wait_mouse_data_high
                           B   546    			
0037AA 3E08                B   547    			ld a,8
0037AC 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
0037AE                     B   550    wait_mouse_clk_high
                           B   551    
0037AE 3E04                B   552    			ld a,4
                           B   553    
0037B0 C5                  B   554    test_hi_ps2	push bc
0037B1 D5                  B   555    			push de
0037B2 4F                  B   556    			ld c,a
0037B3 11004000            B   557    			ld de,04000h					; a
0037B7 CD 33 35 00         B   558    			call set_timeout
                           B   559    
0037BB CD 44 35 00         B   560    nkb_hw		call test_timeout				; t
0037BF 28 04               B   561    			jr z,nkb_hnto
0037C1 D1                  B   562    			pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0037C2 C1                  B   563    			pop bc
0037C3 37                  B   564    			scf								; c
0037C4 C9                  B   565    			ret
0037C5 ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
0037C8 A1                  B   567    			and c
0037C9 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
0037CB D1                  B   570    			pop de
0037CC C1                  B   571    			pop bc
0037CD AF                  B   572    			xor a							; c
0037CE C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           A  3092    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
0037CF                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
0037CF D5                  B    13    				push de
0037D0 51                  B    14    				ld d,c
0037D1 E5                  B    15    				push hl
0037D2 CD 28 38 00         B    16    wait_kbuf		call get_kb_buffer_indexes		0037D6 BE                  B    17    				cp (hl)							0037D7 28 F9               B    18    				jr z,wait_kbuf		
                           B    19    			
0037D9 01000000            B    20    new_key			ld bc,0							0037DD 4F                  B    21    				ld c,a
0037DE 21 E8 55 00         B    22    				ld hl,scancode_buffer	
0037E2 09                  B    23    				add hl,bc
                           B    24    												0037E3 4E                  B    25    				ld c,(hl)						0037E4 11100000            B    26    				ld de,16
0037E8 19                  B    27    				add hl,de						0037E9 7E                  B    28    				ld a,(hl)						                           B    29    				
0037EA 21 D5 51 00         B    30    				ld hl,alted_keymap				0037EE CB5F                B    31    				bit 3,a
0037F0 20 0C               B    32    				jr nz,got_kmap	
0037F2 21 11 51 00         B    33    				ld hl,unshifted_keymap			0037F6 E611                B    34    				and 011h			
0037F8 28 04               B    35    				jr z,got_kmap
0037FA 21 73 51 00         B    36    				ld hl,shifted_keymap			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    37    			
0037FE 79                  B    38    got_kmap		ld a,c							0037FF FE62                B    39    				cp 062h
003801 30 02               B    40    				jr nc,gotkdone
003803 09                  B    41    				add hl,bc						003804 46                  B    42    				ld b,(hl)						                           B    43    			
003805 3A 09 56 00         B    44    gotkdone		ld a,(key_buf_rd_idx)			003809 3C                  B    45    				inc a							00380A E60F                B    46    				and 15
00380C 32 09 56 00         B    47    				ld (key_buf_rd_idx),a			003810 79                  B    48    				ld a,c							003811 E1                  B    49    				pop hl
003812 4A                  B    50    				ld c,d
003813 D1                  B    51    				pop de
003814 BF                  B    52    				cp a							003815 C9                  B    53    				ret
                           B    54    			
                           B    55    		
                           B    56    ;----------------------------------------------
                           B    57    			
003816                     B    58    os_get_key_press
                           B    59    				
                           B    60    ; Gets a keycode on-the-fly - If one is availab
                           B    61    ; On return, ZF is set if there is a new scanco
                           B    62    ; (ASCII code is modifed by shift key status), 
                           B    63    			
                           B    64    			
003816 D5                  B    65    				push de
003817 51                  B    66    				ld d,c
003818 E5                  B    67    				push hl
003819 CD 28 38 00         B    68    				call get_kb_buffer_indexes		00381D BE                  B    69    				cp (hl)							00381E 20 B9               B    70    				jr nz,new_key					003820 3E81                B    71    				ld a,81h			
003822 47                  B    72    				ld b,a
003823 B7                  B    73    				or a
003824 E1                  B    74    				pop hl
003825 4A                  B    75    				ld c,d
003826 D1                  B    76    				pop de
003827 C9                  B    77    				ret
                           B    78    			
                           B    79    ;----------------------------------------------
                           B    80    			
003828                     B    81    get_kb_buffer_indexes
                           B    82    			
                           B    83    			
003828 21 08 56 00         B    84    				ld hl,key_buf_wr_idx			00382C 3A 09 56 00         B    85    				ld a,(key_buf_rd_idx)			003830 C9                  B    86    				ret
                           B    87    			
                           B    88    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    89    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
003831                     B    21    serial_get_header
                           B    22    
003831 32 AE 52 00         B    23    				ld (serial_timeout),a			003835 22 98 52 00         B    24    				ld (serial_fn_addr),hl
003839 CD BF 2F 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
00383D CD 20 39 00         B    27    				call s_getblock					003841 28 0C               B    28    				jr z,s_gbfhok					003843 F5                  B    29    				push af							003844 3A CF 52 00         B    30    				ld a,(serial_transfer_started)
003848 B7                  B    31    				or a							003849 C4 87 39 00         B    32    				call nz,s_badack				00384D F1                  B    33    				pop af
00384E C9                  B    34    				ret
                           B    35    	
00384F 21 C3 52 00         B    36    s_gbfhok		ld hl,serial_header_id			003853 11 3A 5A 00         B    37    				ld de,sector_buffer+20			003857 060C                B    38    				ld b,12
003859 CD DF 11 00         B    39    				call os_compare_strings
00385D 20 0F               B    40    				jr nz,s_nfhdr
00385F 06E0                B    41    				ld b,256-32						003861 21 46 5A 00         B    42    				ld hl,sector_buffer+32
003865 7E                  B    43    s_chdr			ld a,(hl)
003866 23                  B    44    				inc hl
003867 B7                  B    45    				or a
003868 20 04               B    46    				jr nz,s_nfhdr
00386A 10 F9               B    47    				djnz s_chdr
00386C 18 08               B    48    				jr s_fhcsok
                           B    49    				
00386E CD 87 39 00         B    50    s_nfhdr			call s_badack					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
003872 3E85                B    51    				ld a,085h						003874 B7                  B    52    				or a
003875 C9                  B    53    				ret
                           B    54    		
003876 21 36 5A 00         B    55    s_fhcsok		ld hl,sector_buffer+16			00387A 11 BF 52 00         B    56    				ld de,serial_fileheader+16
00387E 01040000            B    57    				ld bc,4
003882 EDB0                B    58    				ldir
                           B    59    				
003884 21 26 5A 00         B    60    				ld hl,sector_buffer
003888 11 AF 52 00         B    61    				ld de,serial_fileheader			00388C 0610                B    62    				ld b,16							00388E 7E                  B    63    s_tuclp			ld a,(hl)						00388F B7                  B    64    				or a
003890 28 0B               B    65    				jr z,s_ffhswz	
003892 CD 19 12 00         B    66    				call os_uppercasify
003896 12                  B    67    				ld (de),a
003897 23                  B    68    				inc hl
003898 13                  B    69    				inc de
003899 10 F3               B    70    				djnz s_tuclp
00389B 18 04               B    71    				jr s_tucdone
00389D 12                  B    72    s_ffhswz		ld (de),a
00389E 13                  B    73    				inc de
00389F 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
0038A1 2A 98 52 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			0038A5 7E                  B    77    				ld a,(hl)
0038A6 FE2A                B    78    				cp '*'
0038A8 28 14               B    79    				jr z,s_rffns					0038AA 11 AF 52 00         B    80    				ld de,serial_fileheader
0038AE 0610                B    81    				ld b,16
0038B0 CD DF 11 00         B    82    				call os_compare_strings
0038B4 28 08               B    83    				jr z,s_rffns
0038B6 CD 87 39 00         B    84    s_rfnbad		call s_badack
0038BA 3E87                B    85    				ld a,087h						0038BC B7                  B    86    				or a
0038BD C9                  B    87    				ret
                           B    88    				
0038BE DD21 AF 52 00       B    89    s_rffns			ld ix,serial_fileheader			0038C3 AF                  B    90    				xor a
0038C4 C9                  B    91    				ret
                           B    92    
0038C5 F5                  B    93    s_fail			push af				
0038C6 CD 87 39 00         B    94    				call s_badack		 
0038CA F1                  B    95    				pop af
0038CB C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
0038CC                     B   114    serial_receive_file
                           B   115    
0038CC 3E0A                B   116    				ld a,10							0038CE 32 AE 52 00         B   117    				ld (serial_timeout),a
0038D2 E5                  B   118    				push hl
0038D3 CD 76 39 00         B   119    				call s_goodack					0038D7 DDE1                B   120    				pop ix							0038D9 ED5B BF 52 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
0038DE CD 20 39 00         B   123    s_gbloop		call s_getblock
0038E2 20 E1               B   124    				jr nz,s_fail
0038E4 0E00                B   125    				ld c,0							0038E6 FD21 26 5A 00       B   126    				ld iy,sector_buffer
0038EB FD7E00              B   127    s_rfloop		ld a,(iy)
0038EE DD7700              B   128    				ld (ix),a						0038F1 1B                  B   129    				dec de							0038F2 21000000            B   130    				ld hl,0
0038F6 AF                  B   131    				xor a
0038F7 ED5A                B   132    				adc hl,de						0038F9 28 1A               B   133    				jr z,s_rfabr					0038FB C5                  B   134    				push bc
0038FC 01010000            B   135    				ld bc,1
003900 DD09                B   136    				add ix,bc						003902 C1                  B   137    				pop bc
003903 30 05               B   138    				jr nc,s_nbt
003905 3E84                B   139    				ld a,84h						003907 B7                  B   140    				or a
003908 18 BB               B   141    				jr s_fail
00390A FD23                B   142    s_nbt			inc iy
00390C 0D                  B   143    				dec c
00390D 20 DC               B   144    				jr nz,s_rfloop
00390F CD 76 39 00         B   145    				call s_goodack					003913 18 C9               B   146    				jr s_gbloop
                           B   147    			
003915 CD 76 39 00         B   148    s_rfabr			call s_goodack					003919 DD21 AF 52 00       B   149    				ld ix,serial_fileheader			00391E AF                  B   150    				xor a							00391F C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
003920                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
003920 AF                  B   159    				xor a
003921 32 CF 52 00         B   160    				ld (serial_transfer_started),a	003925 E5                  B   161    				push hl							003926 D5                  B   162    				push de
003927 C5                  B   163    				push bc
003928 21 26 5A 00         B   164    				ld hl,sector_buffer				00392C 0600                B   165    				ld b,0
00392E D9                  B   166    				exx
00392F 21FFFF00            B   167    				ld hl,0ffffh					003933 D9                  B   168    				exx
003934 CD 69 2F 00         B   169    s_lgb			call receive_serial_byte
003938 20 38               B   170    				jr nz,s_gberr					00393A F5                  B   171    				push af
00393B 3E01                B   172    				ld a,1
00393D 32 CF 52 00         B   173    				ld (serial_transfer_started),a
003941 F1                  B   174    				pop af
003942 77                  B   175    				ld (hl),a
003943 D9                  B   176    				exx
003944 AC                  B   177    				xor h							003945 67                  B   178    				ld h,a			
003946 0608                B   179    				ld b,8
003948 4029                B   180    rxcrcbyte		add.sis hl,hl					00394A 30 08               B   181    				jr nc,rxcrcnext
00394C 7C                  B   182    				ld a,h
00394D EE10                B   183    				xor 10h
00394F 67                  B   184    				ld h,a
003950 7D                  B   185    				ld a,l
003951 EE21                B   186    				xor 21h
003953 6F                  B   187    				ld l,a
003954 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
003956 D9                  B   189    				exx
003957 23                  B   190    				inc hl
003958 10 DA               B   191    				djnz s_lgb
00395A D9                  B   192    				exx								                           B   193    			
00395B CD 69 2F 00         B   194    				call receive_serial_byte		00395F 20 11               B   195    				jr nz,s_gberr
003961 4F                  B   196    				ld c,a
003962 CD 69 2F 00         B   197    				call receive_serial_byte
003966 20 0A               B   198    				jr nz,s_gberr		
003968 47                  B   199    				ld b,a
                           B   200    				
003969 AF                  B   201    				xor a							00396A 52ED42              B   202    				sbc.s hl,bc						00396D 28 03               B   203    				jr z,s_gberr
                           B   204    			
00396F 3E86                B   205    				ld a,86h						003971 B7                  B   206    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
003972 C1                  B   207    s_gberr			pop bc
003973 D1                  B   208    				pop de
003974 E1                  B   209    				pop hl
003975 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
003976 C5                  B   214    s_goodack		push bc
003977 014F4B00            B   215    				ld bc,04b4fh					00397B 79                  B   216    ackbytes		ld a,c
00397C CD A4 2F 00         B   217    				call send_serial_byte
003980 78                  B   218    				ld a,b
003981 CD A4 2F 00         B   219    				call send_serial_byte
003985 C1                  B   220    				pop bc
003986 C9                  B   221    				ret
                           B   222    
003987 C5                  B   223    s_badack		push bc
003988 01585800            B   224    				ld bc,05858h					00398C 18 ED               B   225    				jr ackbytes
                           B   226    
00398E C5                  B   227    s_holdack		push bc
00398F 01575700            B   228    				ld bc,05757h					003993 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
003995                     B   249    serial_send_file
                           B   250    			
003995 3E01                B   251    				ld a,1							003997 32 AE 52 00         B   252    				ld (serial_timeout),a
                           B   253    			
00399B DD22 92 52 00       B   254    				ld (serial_ez80_address),ix
0039A0 ED53 BF 52 00       B   255    				ld (serial_fileheader+10h),de	0039A5 E5                  B   256    				push hl
0039A6 21000000            B   257    				ld hl,0
0039AA AF                  B   258    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0039AB ED5A                B   259    				adc hl,de
0039AD 20 05               B   260    				jr nz,s_flok
0039AF E1                  B   261    				pop hl
0039B0 3E81                B   262    				ld a,081h						0039B2 B7                  B   263    				or a							0039B3 C9                  B   264    				ret
                           B   265    			
0039B4 21 AF 52 00         B   266    s_flok			ld hl,serial_fileheader			0039B8 01100000            B   267    				ld bc,16
0039BC AF                  B   268    				xor a
0039BD CD 4B 15 00         B   269    				call os_bchl_memfill
0039C1 E1                  B   270    				pop hl							0039C2 11 AF 52 00         B   271    				ld de,serial_fileheader
0039C6 0610                B   272    				ld b,16
0039C8 CD FE 11 00         B   273    				call os_copy_ascii_run
                           B   274    				
0039CC 21 C3 52 00         B   275    				ld hl,serial_header_id			0039D0 11 C3 52 00         B   276    				ld de,serial_fileheader+014h
0039D4 010C0000            B   277    				ld bc,12		
0039D8 EDB0                B   278    				ldir
                           B   279    			
0039DA DD21 AF 52 00       B   280    				ld ix,serial_fileheader			0039DF 11200000            B   281    				ld de,32
0039E3 CD 19 3A 00         B   282    				call s_makeblock			
0039E7 C0                  B   283    				ret nz
0039E8 CD 51 3A 00         B   284    				call s_sendblock
0039EC C0                  B   285    				ret nz
0039ED CD 7E 3A 00         B   286    				call s_waitack					0039F1 C0                  B   287    				ret nz							                           B   288    				
0039F2 DD2A 92 52 00       B   289    				ld ix,(serial_ez80_address)
0039F7 ED5B BF 52 00       B   290    				ld de,(serial_fileheader+16)	0039FC CD 19 3A 00         B   291    s_sbloop		call s_makeblock				003A00 38 16               B   292    				jr c,s_rerr
003A02 CD 51 3A 00         B   293    				call s_sendblock				003A06 38 10               B   294    				jr c,s_rerr	
003A08 CD 7E 3A 00         B   295    				call s_waitack					003A0C 38 0A               B   296    				jr c,s_rerr
003A0E 21000000            B   297    				ld hl,0
003A12 AF                  B   298    				xor a
003A13 ED5A                B   299    				adc hl,de
003A15 20 E5               B   300    				jr nz,s_sbloop					003A17 AF                  B   301    				xor a							003A18 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
003A19                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   311    
003A19 21 26 5A 00         B   312    				ld hl,sector_buffer				003A1D 01000100            B   313    				ld bc,256						003A21 AF                  B   314    				xor a							003A22 CD 4B 15 00         B   315    				call os_bchl_memfill			                           B   316    				
003A26 0600                B   317    				ld b,0							003A28 FD21 26 5A 00       B   318    				ld iy,sector_buffer	
003A2D DD7E00              B   319    s_sloop			ld a,(ix)
003A30 FD7700              B   320    				ld (iy),a
003A33 1B                  B   321    				dec de							003A34 21000000            B   322    				ld hl,0
003A38 AF                  B   323    				xor a
003A39 ED5A                B   324    				adc hl,de
003A3B 28 12               B   325    				jr z,s_mbend	
003A3D FD23                B   326    				inc iy							003A3F C5                  B   327    				push bc
003A40 01010000            B   328    				ld bc,1
003A44 DD09                B   329    				add ix,bc						003A46 C1                  B   330    				pop bc							003A47 20 04               B   331    				jr nz,s_sbok
003A49 3E84                B   332    				ld a,84h						003A4B B7                  B   333    				or a
003A4C C9                  B   334    				ret
003A4D 10 DE               B   335    s_sbok			djnz s_sloop
003A4F AF                  B   336    s_mbend			xor a
003A50 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
003A51                     B   341    s_sendblock
                           B   342    
003A51 E5                  B   343    				push hl
003A52 D5                  B   344    				push de							003A53 C5                  B   345    				push bc				
003A54 21 26 5A 00         B   346    				ld hl,sector_buffer			
003A58 1E00                B   347    				ld e,0
003A5A 7E                  B   348    s_sblklp		ld a,(hl)
003A5B CD A4 2F 00         B   349    				call send_serial_byte
003A5F 23                  B   350    				inc hl
003A60 1D                  B   351    				dec e
003A61 20 F7               B   352    				jr nz,s_sblklp
003A63 11 26 5A 00         B   353    				ld de,sector_buffer
003A67 01000000            B   354    				ld bc,0
003A6B CD 22 15 00         B   355    				call crc_checksum
003A6F 7D                  B   356    				ld a,l
003A70 CD A4 2F 00         B   357    				call send_serial_byte
003A74 7C                  B   358    				ld a,h
003A75 CD A4 2F 00         B   359    				call send_serial_byte
003A79 AF                  B   360    				xor a
003A7A C1                  B   361    s_popall		pop bc
003A7B D1                  B   362    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
003A7C E1                  B   363    				pop hl
003A7D C9                  B   364    				ret
                           B   365    	
                           B   366    
003A7E                     B   367    s_waitack
003A7E E5                  B   368    				push hl
003A7F D5                  B   369    				push de
003A80 C5                  B   370    				push bc
003A81 CD 69 2F 00         B   371    				call receive_serial_byte		003A85 20 F3               B   372    				jr nz,s_popall
003A87 47                  B   373    				ld b,a
003A88 CD 69 2F 00         B   374    				call receive_serial_byte
003A8C 20 EC               B   375    				jr nz,s_popall
003A8E 4F                  B   376    				ld c,a
003A8F 264F                B   377    				ld h,'O'
003A91 2E4B                B   378    				ld l,'K'
003A93 AF                  B   379    				xor a
003A94 52ED42              B   380    				sbc.s hl,bc						003A97 28 E1               B   381    				jr z,s_popall					                           B   382    			
003A99 3E85                B   383    				ld a,085h						003A9B B7                  B   384    				or a
003A9C 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
003A9E                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
003A9E 3A E0 52 00         B    57    				ld a,(device_count)				003AA2 47                  B    58    				ld b,a							003AA3 DD21 90 53 00       B    59    				ld ix,host_device_hardware_info
003AA8 3A DF 52 00         B    60    fdevinfo		ld a,(current_driver)
003AAC DDBE00              B    61    				cp (ix)
003AAF 28 09               B    62    				jr z,got_dev_info
003AB1 ED3220              B    63    				lea ix,ix+32
003AB4 10 F2               B    64    				djnz fdevinfo
003AB6 AF                  B    65    				xor a
003AB7 3ED0                B    66    				ld a,0d0h						003AB9 C9                  B    67    				ret	
                           B    68    	
003ABA CD 4D 45 00         B    69    got_dev_info	call fs_clear_sector_buffer		003ABE 11000000            B    70    				ld de,0							003AC2 CD B2 3B 00         B    71    form_ws			call set_lba_and_write_sector
003AC6 D8                  B    72    				ret c
003AC7 13                  B    73    				inc de
003AC8 7A                  B    74    				ld a,d
003AC9 FE03                B    75    				cp 3
003ACB 20 F5               B    76    				jr nz,form_ws
                           B    77    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003ACD 21 FB 47 00         B    78    				ld hl,bootsector_stub			003AD1 11 26 5A 00         B    79    				ld de,sector_buffer				003AD5 013F0000            B    80    				ld bc,03fh
003AD9 EDB0                B    81    				ldir
                           B    82    	
003ADB DD7E04              B    83    				ld a,(ix+4)						003ADE B7                  B    84    				or a
003ADF 20 0C               B    85    				jr nz,above_2gb
003AE1 2100FF3F            B    86    				ld hl,3fff00h					003AE5 DD1701              B    87    				ld de,(ix+1)					003AE8 AF                  B    88    				xor a			
003AE9 ED52                B    89    				sbc hl,de						003AEB 30 08               B    90    				jr nc,lessthan2gb				003AED 3E40                B    91    above_2gb		ld a,40h						003AEF 1100FF3F            B    92    				ld de,3fff00h					003AF3 18 11               B    93    				jr spcvalok
                           B    94    
003AF5 DD4E03              B    95    lessthan2gb		ld c,(ix+3)						003AF8 0C                  B    96    				inc c							003AF9 3E01                B    97    spc_loop		ld a,1							003AFB B9                  B    98    spc_comp		cp c							003AFC 28 08               B    99    				jr z,spcvalok
003AFE 07                  B   100    				rlca
003AFF FE80                B   101    				cp 080h							003B01 20 F8               B   102    				jr nz,spc_comp
003B03 0C                  B   103    				inc c			
003B04 18 F3               B   104    				jr spc_loop						                           B   105    							
003B06 DD21 26 5A 00       B   106    spcvalok		ld ix,sector_buffer
003B0B DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
003B0E CD 68 15 00         B   109    				call os_get_xde_msb				003B12 4F                  B   110    				ld c,a							003B13 B7                  B   111    				or a							003B14 20 08               B   112    				jr nz,ts_dword					003B16 DD7313              B   113    				ld (ix+13h),e					003B19 DD7214              B   114    				ld (ix+14h),d
003B1C 18 07               B   115    				jr ts_done
003B1E DD1F20              B   116    ts_dword		ld (ix+20h),de					003B21 DD362300            B   117    				ld (ix+23h),0
                           B   118    
003B25 EB                  B   119    ts_done			ex de,hl						003B26 11000000            B   120    				ld de,0						
003B2A DD560D              B   121    				ld d,(ix+0dh)					003B2D 01000000            B   122    				ld bc,0							003B31 AF                  B   123    div_tscls		xor a							003B32 ED52                B   124    				sbc hl,de
003B34 28 05               B   125    				jr z,gotfats
003B36 38 03               B   126    				jr c,gotfats	
003B38 03                  B   127    				inc bc
003B39 18 F6               B   128    				jr div_tscls
003B3B 03                  B   129    gotfats			inc bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003B3C DD7116              B   130    				ld (ix+16h),c					003B3F DD7017              B   131    				ld (ix+17h),b
003B42 ED43 4B 48 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
003B47 010055AA            B   134    				ld bc,0aa5500h
003B4B ED43 23 5C 00       B   135    				ld (sector_buffer+1fdh),bc		003B50 11000000            B   136    				ld de,0
003B54 CD B2 3B 00         B   137    				call set_lba_and_write_sector	003B58 D8                  B   138    				ret c
                           B   139    				
003B59 21000000            B   140    				ld hl,0
003B5D DD6E0E              B   141    				ld l,(ix+0eh)					003B60 DD660F              B   142    				ld h,(ix+0fh)
003B63 19                  B   143    				add hl,de
003B64 EB                  B   144    				ex de,hl						                           B   145    				
003B65 CD 4D 45 00         B   146    				call fs_clear_sector_buffer		003B69 DD3600FF            B   147    				ld (ix+0),0ffh
003B6D DD3601F8            B   148    				ld (ix+1),0f8h
003B71 DD3602FF            B   149    				ld (ix+2),0ffh
003B75 DD3603FF            B   150    				ld (ix+3),0ffh
003B79 CD B2 3B 00         B   151    				call set_lba_and_write_sector	003B7D D8                  B   152    				ret c
                           B   153    
003B7E 2A 4B 48 00         B   154    				ld hl,(fs_sectors_per_fat)	
003B82 19                  B   155    				add hl,de
003B83 EB                  B   156    				ex de,hl
003B84 CD B2 3B 00         B   157    				call set_lba_and_write_sector 	003B88 D8                  B   158    				ret c	
                           B   159    				
003B89 D5                  B   160    				push de							003B8A CD 4D 45 00         B   161    				call fs_clear_sector_buffer
003B8E 21 51 48 00         B   162    				ld hl,fs_sought_filename
003B92 11 26 5A 00         B   163    				ld de,sector_buffer
003B96 010B0000            B   164    				ld bc,11
003B9A EDB0                B   165    				ldir							003B9C D1                  B   166    				pop de							003B9D DD360B08            B   167    				ld (ix+0bh),8					003BA1 DD361821            B   168    				ld (ix+018h),021h				003BA5 2A 4B 48 00         B   169    				ld hl,(fs_sectors_per_fat)		003BA9 19                  B   170    				add hl,de
003BAA EB                  B   171    				ex de,hl
003BAB CD B2 3B 00         B   172    				call set_lba_and_write_sector	003BAF D8                  B   173    				ret c	
                           B   174    			
003BB0 AF                  B   175    				xor a							003BB1 C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
003BB2                     B   180    set_lba_and_write_sector
                           B   181    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003BB2 DDE5                B   182    				push ix
003BB4 DD21 B5 54 00       B   183    				ld ix,sector_lba0				003BB9 DD1F00              B   184    				ld (ix),de						003BBC DD360300            B   185    				ld (ix+3),0
003BC0 DDE1                B   186    				pop ix
003BC2 CD DF 47 00         B   187    				call fs_write_sector
003BC6 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003BC7                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
003BC7 32 13 54 00         B   202    				ld (partition_temp),a
                           B   203    				
003BCB 21000000            B   204    				ld hl,0							003BCF 22 B5 54 00         B   205    				ld (sector_lba0),hl
003BD3 7D                  B   206    				ld a,l
003BD4 32 B8 54 00         B   207    				ld (sector_lba3),a
003BD8 CD C7 47 00         B   208    				call fs_read_sector
003BDC D8                  B   209    				ret c
                           B   210    			
003BDD CD 18 3C 00         B   211    				call fs_check_fat_sig			003BE1 20 42               B   212    				jr nz,formbad
                           B   213    			
003BE3 CD 09 3C 00         B   214    				call check_fat16_id				003BE7 28 1C               B   215    				jr z,at_pbs						                           B   216    				
003BE9 3A E8 5B 00         B   217    				ld a,(sector_buffer+01c2h)		003BED E604                B   218    				and 4							003BEF 28 34               B   219    				jr z,formbad	
003BF1 11000000            B   220    				ld de,0
003BF5 3A 13 54 00         B   221    				ld a,(partition_temp)
003BF9 5F                  B   222    				ld e,a
003BFA 1610                B   223    				ld d,16
003BFC ED5C                B   224    				mlt de
003BFE 21 E4 5B 00         B   225    				ld hl,sector_buffer+01beh
003C02 19                  B   226    				add hl,de						003C03 AF                  B   227    				xor a
003C04 C9                  B   228    				ret
                           B   229    					
003C05 AF                  B   230    at_pbs			xor a
003C06 3ED3                B   231    				ld a,0d3h						003C08 C9                  B   232    				ret
                           B   233    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   234    
                           B   235    
003C09                     B   236    check_fat16_id
                           B   237    		
003C09 21 5C 5A 00         B   238    				ld hl,sector_buffer+036h		003C0D 11 E2 4C 00         B   239    				ld de,fat16_txt			
003C11 0605                B   240    				ld b,5
003C13 CD DF 11 00         B   241    				call os_compare_strings
003C17 C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
003C18                     B   247    fs_check_fat_sig
                           B   248    
003C18 2A 24 5C 00         B   249    				ld hl,(sector_buffer+01feh)		003C1C 1155AA00            B   250    				ld de,0aa55h
003C20 AF                  B   251    				xor a
003C21 52ED52              B   252    				sbc.s hl,de						003C24 C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
003C25 AF                  B   257    formbad			xor a
003C26 3ECE                B   258    				ld a,0ceh						003C28 C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
003C29                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
003C29 C5                  B   268    				push bc
003C2A D5                  B   269    				push de
003C2B E5                  B   270    				push hl
003C2C CD 34 3C 00         B   271    				call go_checkf
003C30 E1                  B   272    				pop hl
003C31 D1                  B   273    				pop de
003C32 C1                  B   274    				pop bc
003C33 C9                  B   275    				ret
                           B   276    				
003C34 CD 74 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
003C38 21 10 53 00         B   278    				ld hl,volume_mount_list
003C3C 19                  B   279    				add hl,de
003C3D 7E                  B   280    				ld a,(hl)
003C3E B7                  B   281    				or a							003C3F 20 04               B   282    				jr nz,fs_volpre
003C41 AF                  B   283    				xor a
003C42 3ECF                B   284    				ld a,cfh						003C44 C9                  B   285    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   286    			
003C45 11080000            B   287    fs_volpre		ld de,8							003C49 19                  B   288    				add hl,de
003C4A 11 B5 54 00         B   289    				ld de,sector_lba0
003C4E 01040000            B   290    				ld bc,4
003C52 EDB0                B   291    				ldir
003C54 CD C7 47 00         B   292    				call fs_read_sector
003C58 D8                  B   293    				ret c	
                           B   294    				
003C59 CD 18 3C 00         B   295    				call fs_check_fat_sig			003C5D 20 C6               B   296    				jr nz,formbad		
                           B   297    			
003C5F CD 09 3C 00         B   298    				call check_fat16_id				003C63 20 C0               B   299    				jr nz,formbad
                           B   300    			
003C65 DD21 26 5A 00       B   301    				ld ix,sector_buffer
003C6A DD270B              B   302    				ld hl,(ix+0bh)					003C6D 11000200            B   303    				ld de,512						003C71 AF                  B   304    				xor a
003C72 52ED52              B   305    				sbc.s hl,de						003C75 20 AE               B   306    				jr nz,formbad
                           B   307    			
003C77 DD7E0D              B   308    				ld a,(ix+0dh)					003C7A 32 3A 48 00         B   309    				ld (fs_cluster_size),a
003C7E CB27                B   310    				sla a
003C80 32 3C 48 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
003C84 21000000            B   313    				ld hl,0
003C88 DD6E0E              B   314    				ld l,(ix+0eh)					003C8B DD660F              B   315    				ld h,(ix+0fh)
003C8E 22 3E 48 00         B   316    				ld (fs_fat1_position),hl		003C92 11000000            B   317    				ld de,0
003C96 DD5E16              B   318    				ld e,(ix+16h)					003C99 DD5617              B   319    				ld d,(ix+17h)
003C9C ED53 4B 48 00       B   320    				ld (fs_sectors_per_fat),de
003CA1 19                  B   321    				add hl,de
003CA2 22 41 48 00         B   322    				ld (fs_fat2_position),hl		003CA6 19                  B   323    				add hl,de
003CA7 22 44 48 00         B   324    				ld (fs_root_dir_position),hl 	003CAB EB                  B   325    				ex de,hl
003CAC DD6E11              B   326    				ld l,(ix+11h)					003CAF DD6612              B   327    				ld h,(ix+12h)					003CB2 7C                  B   328    				ld a,h
003CB3 B5                  B   329    				or l
003CB4 CA 25 3C 00         B   330    				jr z,formbad					003CB8 29                  B   331    				add hl,hl						003CB9 29                  B   332    				add hl,hl						003CBA 29                  B   333    				add hl,hl
003CBB 29                  B   334    				add hl,hl
003CBC EB                  B   335    				ex de,hl
003CBD 7A                  B   336    				ld a,d
003CBE 32 4A 48 00         B   337    				ld (fs_root_dir_sectors),a		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003CC2 01000000            B   338    				ld bc,0
003CC6 4A                  B   339    				ld c,d
003CC7 09                  B   340    				add hl,bc				
003CC8 22 47 48 00         B   341    				ld (fs_data_area),hl			                           B   342    												003CCC 21000000            B   343    				ld hl,0
003CD0 01000000            B   344    				ld bc,0
003CD4 DD4E22              B   345    				ld c,(ix+022h)					003CD7 DD4623              B   346    				ld b,(ix+023h)
003CDA DD6E13              B   347    				ld l,(ix+013h)					003CDD DD6614              B   348    				ld h,(ix+014h)
003CE0 7C                  B   349    				ld a,h							003CE1 B5                  B   350    				or l
003CE2 20 06               B   351    				jr nz,got_tsfbs
003CE4 DD6E20              B   352    				ld l,(ix+020h)					003CE7 DD6621              B   353    				ld h,(ix+021h)
003CEA ED5B 47 48 00       B   354    got_tsfbs 		ld de,(fs_data_area)
003CEF AF                  B   355    				xor a							003CF0 52ED52              B   356    				sbc.s hl,de						003CF3 30 02               B   357    				jr nc,nomxcb
003CF5 520B                B   358    				dec.s bc
003CF7 3A 3A 48 00         B   359    nomxcb			ld a,(fs_cluster_size)
003CFB CB3F                B   360    fmaxcl			srl a
003CFD 28 08               B   361    				jr z,got_cmaxc					003CFF CB39                B   362    				srl c				
003D01 CB1C                B   363    				rr h
003D03 CB1D                B   364    				rr l
003D05 18 F4               B   365    				jr fmaxcl
003D07 E5                  B   366    got_cmaxc		push hl							003D08 11F0FF00            B   367    				ld de,0fff0h
003D0C AF                  B   368    				xor a
003D0D 52ED52              B   369    				sbc.s hl,de						003D10 38 02               B   370    				jr c,cmaxok
003D12 E1                  B   371    				pop hl
003D13 D5                  B   372    				push de
003D14 E1                  B   373    cmaxok			pop hl
003D15 22 4E 48 00         B   374    				ld (fs_max_data_clusters),hl
003D19 AF                  B   375    				xor a
003D1A C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
003D1B                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
003D1B ED5B 4E 48 00       B   384    				ld de,(fs_max_data_clusters)
003D20 13                  B   385    				inc de
003D21 13                  B   386    				inc de							003D22 D5                  B   387    				push de
003D23 DDE1                B   388    				pop ix
                           B   389    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003D25 AF                  B   390    				xor a
003D26 32 93 48 00         B   391    cfs_lp2			ld (fs_working_sector),a
003D2A 2A 3E 48 00         B   392    				ld hl,(fs_fat1_position)
003D2E CD 9D 47 00         B   393    				call set_abs_lba_and_read_secto
003D32 D8                  B   394    				ret c
                           B   395    				
003D33 21 26 5A 00         B   396    				ld hl,sector_buffer
003D37 0600                B   397    				ld b,0
003D39 AF                  B   398    cfs_lp1			xor a
003D3A B6                  B   399    				or a,(hl)						003D3B 23                  B   400    				inc hl							003D3C 20 03               B   401    				jr nz,cfs_ciu					003D3E B6                  B   402    				or a,(hl)
003D3F 28 02               B   403    				jr z,cfs_ddcc
003D41 DD2B                B   404    cfs_ciu			dec ix							003D43 23                  B   405    cfs_ddcc		inc hl
003D44 1B                  B   406    				dec de
003D45 7A                  B   407    				ld a,d
003D46 B3                  B   408    				or e
003D47 28 09               B   409    				jr z,cfs_ok						003D49 10 EE               B   410    				djnz cfs_lp1
003D4B 3A 93 48 00         B   411    				ld a,(fs_working_sector)
003D4F 3C                  B   412    				inc a
003D50 18 D4               B   413    				jr cfs_lp2
                           B   414    				
003D52 3A 3A 48 00         B   415    cfs_ok			ld a,(fs_cluster_size)			003D56 CB3F                B   416    cltoslp			srl a
003D58 28 04               B   417    				jr z,powdone
003D5A DD29                B   418    				add ix,ix
003D5C 18 F8               B   419    				jr cltoslp	
003D5E FD21 D1 54 00       B   420    powdone			ld iy,xrr_temp
003D63 FD3E00              B   421    				ld (iy),ix						003D66 FDCB023E            B   422    				srl (iy+2)
003D6A FDCB011E            B   423    				rr (iy+1)
003D6E FDCB001E            B   424    				rr (iy+0)						003D72 FD1700              B   425    				ld de,(iy)						003D75 AF                  B   426    				xor a
003D76 C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
003D77                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
003D77 CD 5F 45 00         B   436    				call fs_find_filename			003D7B D8                  B   437    				ret c							003D7C FEC2                B   438    				cp 0c2h							003D7E 20 04               B   439    				jr nz,founddir
003D80 AF                  B   440    				xor a							003D81 3ED1                B   441    				ld a,0d1h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003D83 C9                  B   442    				ret
003D84 AF                  B   443    founddir		xor a							003D85 3E04                B   444    				ld a,04h						003D87 DDCB0B66            B   445    				bit 4,(ix+0bh)
003D8B C8                  B   446    				ret z
003D8C 11000000            B   447    				ld de,0
003D90 DD5E1A              B   448    				ld e,(ix+01ah)
003D93 DD561B              B   449    				ld d,(ix+01bh)					003D96 CD 46 1A 00         B   450    				call fs_update_dir_cluster
003D9A AF                  B   451    				xor a
003D9B C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
003D9C                     B   458    fs_goto_root_dir_command
                           B   459    
003D9C D5                  B   460    				push de
003D9D 11000000            B   461    				ld de,0
003DA1 CD 46 1A 00         B   462    				call fs_update_dir_cluster
003DA5 D1                  B   463    				pop de
003DA6 AF                  B   464    				xor a
003DA7 C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
003DA8                     B   470    fs_parent_dir_command
                           B   471    
003DA8 CD 3A 1A 00         B   472    				call fs_get_dir_cluster
003DAC 7A                  B   473    				ld a,d
003DAD B3                  B   474    				or e
003DAE 20 03               B   475    				jr nz,pdnaroot
003DB0 3ECA                B   476    				ld a,0cah						003DB2 C9                  B   477    				ret
003DB3 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					003DB7 22 51 48 00         B   479    				ld (fs_sought_filename),hl		003DBB 21 54 48 00         B   480    				ld hl,fs_sought_filename+3		003DBF 3E20                B   481    				ld a,32
003DC1 01080000            B   482    				ld bc,8
003DC5 CD 4B 15 00         B   483    				call os_bchl_memfill
003DC9 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
003DCB                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
003DCB CD 5F 45 00         B   497    				call fs_find_filename			003DCF D8                  B   498    				ret c							003DD0 C0                  B   499    				ret nz							                           B   500    								
003DD1 3EC6                B   501    				ld a,0c6h						003DD3 DDCB0B66            B   502    				bit 4,(ix+0bh)
003DD7 C0                  B   503    				ret nz
                           B   504    
003DD8 AF                  B   505    				xor a
003DD9 32 A7 48 00         B   506    				ld (fs_filepointer_valid),a		003DDD 21000000            B   507    				ld hl,0
003DE1 22 75 48 00         B   508    				ld (fs_file_pointer),hl			003DE5 32 78 48 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
003DE9 DD171C              B   511    				ld de,(ix+01ch)
003DEC D5                  B   512    				push de
003DED E1                  B   513    				pop hl
003DEE DD4E1F              B   514    				ld c,(ix+01fh)					003DF1 ED53 79 48 00       B   515    				ld (fs_file_length),de			003DF6 79                  B   516    				ld a,c
003DF7 32 7C 48 00         B   517    				ld (fs_file_length+3),a			003DFB B7                  B   518    				or a							003DFC 28 04               B   519    				jr z,fs_dflsm					003DFE 21FFFFFF            B   520    				ld hl,0ffffffh
003E02 22 81 48 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
003E06 21000000            B   523    				ld hl,0
003E0A DD6E1A              B   524    				ld l,(ix+01ah)		
003E0D DD661B              B   525    				ld h,(ix+01bh)
003E10 22 84 48 00         B   526    				ld (fs_file_start_cluster),hl	003E14 AF                  B   527    				xor a
003E15 C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
003E16                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
003E16 2A 81 48 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
003E1A 11000000            B   540    				ld de,0
003E1E AF                  B   541    				xor a
003E1F ED5A                B   542    				adc hl,de
003E21 20 04               B   543    				jr nz,fs_btrok
003E23 AF                  B   544    fs_fliz			xor a							003E24 3EC7                B   545    				ld a,0c7h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003E26 C9                  B   546    				ret
                           B   547    			 
003E27 2A 8A 48 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			003E2B 22 8D 48 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
003E2F 2A 79 48 00         B   551    				ld hl,(fs_file_length)			003E33 ED4B 75 48 00       B   552    				ld bc,(fs_file_pointer)			003E38 3A 78 48 00         B   553    				ld a,(fs_file_pointer+3)		003E3C 5F                  B   554    				ld e,a
003E3D 3A 7C 48 00         B   555    				ld a,(fs_file_length+3)
003E41 B7                  B   556    				or a							003E42 ED42                B   557    				sbc hl,bc
003E44 9B                  B   558    				sbc a,e
003E45 38 09               B   559    				jr c,fs_fpbad
003E47 01000000            B   560    				ld bc,0
003E4B AF                  B   561    				xor a
003E4C ED4A                B   562    				adc hl,bc
003E4E 20 04               B   563    				jr nz,fs_fpok
003E50 AF                  B   564    fs_fpbad		xor a
003E51 3ECC                B   565    				ld a,0cch						003E53 C9                  B   566    				ret
                           B   567    			
                           B   568    	
003E54 3A A7 48 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		003E58 B7                  B   570    				or a							003E59 28 1B               B   571    				jr z,seek_strt
                           B   572    			
003E5B ED5B 8D 48 00       B   573    				ld de,(fs_ez80_working_address)
003E60 ED4B A8 48 00       B   574    				ld bc,(fs_sector_pos_cnt)		003E65 C5                  B   575    				push bc
003E66 ED4B 90 48 00       B   576    				ld bc,(fs_in_sector_offset)
003E6B 21 26 5C 00         B   577    				ld hl,sector_buffer+0200h		003E6F AF                  B   578    				xor a
003E70 ED42                B   579    				sbc hl,bc		
003E72 C3 02 3F 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
003E76 3E01                B   583    seek_strt		ld a,1
003E78 32 A7 48 00         B   584    				ld (fs_filepointer_valid),a
003E7C 2A 84 48 00         B   585    				ld hl,(fs_file_start_cluster)	003E80 22 87 48 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
003E84 3A 78 48 00         B   588    				ld a,(fs_file_pointer+3)		003E88 2A 75 48 00         B   589    				ld hl,(fs_file_pointer)			003E8C ED4B 3B 48 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
003E91 AF                  B   591    				xor a
003E92 ED42                B   592    				sbc hl,bc						003E94 DE00                B   593    				sbc a,0
003E96 38 14               B   594    				jr c,fs_fpgbo
003E98 E5                  B   595    fs_fpgnb		push hl				
003E99 2A 87 48 00         B   596    				ld hl,(fs_file_working_cluster)
003E9D CD 6F 46 00         B   597    				call get_fat_entry_for_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003EA1 30 02               B   598    				jr nc,fs_ghok					003EA3 E1                  B   599    				pop hl
003EA4 C9                  B   600    				ret
003EA5 22 87 48 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
003EA9 E1                  B   602    				pop hl
003EAA 18 E0               B   603    				jr fs_fpblp
                           B   604    			
003EAC 09                  B   605    fs_fpgbo		add hl,bc						003EAD 4C                  B   606    				ld c,h
003EAE CB39                B   607    				srl c							003EB0 3A 3A 48 00         B   608    				ld a,(fs_cluster_size)
003EB4 91                  B   609    				sub c
003EB5 47                  B   610    				ld b,a							003EB6 7C                  B   611    				ld a,h
003EB7 E601                B   612    				and 01h
003EB9 67                  B   613    				ld h,a
003EBA 22 90 48 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
003EBE 79                  B   616    fs_flns			ld a,c				
003EBF 2A 87 48 00         B   617    				ld hl,(fs_file_working_cluster)
003EC3 CD 46 47 00         B   618    				call cluster_and_offset_to_lba
003EC7 CD C7 47 00         B   619    				call fs_read_sector				003ECB D8                  B   620    				ret c							                           B   621    			
003ECC C5                  B   622    				push bc							003ECD 11000000            B   623    				ld de,0
003ED1 2A 90 48 00         B   624    				ld hl,(fs_in_sector_offset)		003ED5 5D                  B   625    				ld e,l
003ED6 54                  B   626    				ld d,h
003ED7 21000200            B   627    				ld hl,512
003EDB AF                  B   628    				xor a
003EDC ED52                B   629    				sbc hl,de						003EDE 44                  B   630    				ld b,h
003EDF 4D                  B   631    				ld c,l							003EE0 21 26 5A 00         B   632    				ld hl,sector_buffer				003EE4 19                  B   633    				add hl,de						003EE5 ED5B 8D 48 00       B   634    				ld de,(fs_ez80_working_address)
003EEA EDA0                B   635    fs_cblp			ldi 							                           B   636    
003EEC 7A                  B   637    				ld a,d							003EED B3                  B   638    				or e
003EEE 20 0C               B   639    				jr nz,fs_edaok
003EF0 ED53 8D 48 00       B   640    				ld (fs_ez80_working_address),de
003EF5 3A 8F 48 00         B   641    				ld a,(fs_ez80_working_address+2
003EF9 B7                  B   642    				or a
003EFA 28 43               B   643    				jr z,fs_mem_error
                           B   644    
003EFC CD CF 46 00         B   645    fs_edaok		call transfer_length_countdown	003F00 28 30               B   646    				jr z,fs_bdld
003F02 78                  B   647    fs_dadok		ld a,b							003F03 B1                  B   648    				or c
003F04 20 E4               B   649    				jr nz,fs_cblp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   650    			
003F06 ED43 90 48 00       B   651    				ld (fs_in_sector_offset),bc		003F0B ED53 8D 48 00       B   652    				ld (fs_ez80_working_address),de
003F10 C1                  B   653    				pop bc							003F11 0C                  B   654    				inc c							003F12 10 AA               B   655    				djnz fs_flns					                           B   656    			
003F14 2A 87 48 00         B   657    				ld hl,(fs_file_working_cluster)
003F18 CD 6F 46 00         B   658    				call get_fat_entry_for_cluster	003F1C D8                  B   659    				ret c							003F1D 22 87 48 00         B   660    				ld (fs_file_working_cluster),hl
003F21 CD 18 44 00         B   661    				call fs_compare_hl_fff8			003F25 D2 50 3E 00         B   662    				jp nc,fs_fpbad			
003F29 0E00                B   663    fs_nfbok		ld c,0							003F2B 3A 3A 48 00         B   664    				ld a,(fs_cluster_size)	
003F2F 47                  B   665    				ld b,a							003F30 18 8C               B   666    				jr fs_flns		
                           B   667    			
003F32 ED43 90 48 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		003F37 C1                  B   669    				pop bc							003F38 ED43 A8 48 00       B   670    				ld (fs_sector_pos_cnt),bc
003F3D AF                  B   671    				xor a							003F3E C9                  B   672    				ret
                           B   673    				
003F3F 3EC8                B   674    fs_mem_error	ld a,0c8h						003F41 C1                  B   675    fs_flerr		pop bc
003F42 B7                  B   676    				or a							003F43 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
003F44                     B   681    fs_make_dir_command		
                           B   682    				
003F44 CD 5F 45 00         B   683    				call fs_find_filename			003F48 D8                  B   684    				ret c
003F49 FEC2                B   685    				cp 0c2h							003F4B 28 04               B   686    				jr z,mdirfnde
003F4D AF                  B   687    				xor a							003F4E 3EC9                B   688    				ld a,0c9h						003F50 C9                  B   689    				ret
                           B   690    			
003F51 CD 25 44 00         B   691    mdirfnde		call fs_find_free_cluster		003F55 D8                  B   692    				ret c							003F56 C0                  B   693    				ret nz							                           B   694    							
003F57 2A 97 48 00         B   695    				ld hl,(fs_free_cluster)
003F5B 22 9A 48 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
003F5F CD 76 44 00         B   698    				call fs_find_free_dir_entry		003F63 D8                  B   699    				ret c							003F64 C0                  B   700    				ret nz							                           B   701    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003F65 DDE5                B   702    				push ix							003F67 D1                  B   703    				pop de
003F68 21 51 48 00         B   704    				ld hl,fs_sought_filename
003F6C 010B0000            B   705    				ld bc,11
003F70 EDB0                B   706    				ldir
003F72 AF                  B   707    				xor a							003F73 0615                B   708    				ld b,21
003F75 12                  B   709    clrdiren		ld (de),a
003F76 13                  B   710    				inc de
003F77 10 FC               B   711    				djnz clrdiren
003F79 DD360B10            B   712    				ld (ix+0bh),010h				003F7D DD361821            B   713    				ld (ix+018h),021h				003F81 ED5B 9A 48 00       B   714    				ld de,(fs_new_file_cluster)
003F86 DD731A              B   715    				ld (ix+01ah),e					003F89 DD721B              B   716    				ld (ix+01bh),d
003F8C CD DF 47 00         B   717    				call fs_write_sector			003F90 D8                  B   718    				ret c							                           B   719    				
003F91 CD 4D 45 00         B   720    				call fs_clear_sector_buffer
003F95 DD21 26 5A 00       B   721    				ld ix,sector_buffer				003F9A DD36002E            B   722    				ld (ix+00h),02eh				003F9E DD360120            B   723    				ld (ix+01h),020h
003FA2 DD36202E            B   724    				ld (ix+020h),02eh
003FA6 DD36212E            B   725    				ld (ix+021h),02eh
003FAA DD360B10            B   726    				ld (ix+0bh),010h
003FAE DD362B10            B   727    				ld (ix+02bh),010h
003FB2 ED5B 9A 48 00       B   728    				ld de,(fs_new_file_cluster)		003FB7 DD731A              B   729    				ld (ix+01ah),e
003FBA DD721B              B   730    				ld (ix+01bh),d
003FBD CD 3A 1A 00         B   731    				call fs_get_dir_cluster			003FC1 DD733A              B   732    				ld (ix+03ah),e
003FC4 DD723B              B   733    				ld (ix+03bh),d
003FC7 DD361821            B   734    				ld (ix+018h),021h				003FCB DD363821            B   735    				ld (ix+038h),021h				003FCF 0609                B   736    				ld b,9
003FD1 DD360220            B   737    mndelp			ld (ix+002h),32
003FD5 DD362220            B   738    				ld (ix+022h),32
003FD9 DD23                B   739    				inc ix
003FDB 10 F4               B   740    				djnz mndelp
003FDD 2A 9A 48 00         B   741    				ld hl,(fs_new_file_cluster)		003FE1 AF                  B   742    				xor a
003FE2 CD 46 47 00         B   743    				call cluster_and_offset_to_lba
003FE6 CD DF 47 00         B   744    				call fs_write_sector
003FEA D8                  B   745    				ret c							                           B   746    			
003FEB CD 4D 45 00         B   747    				call fs_clear_sector_buffer		003FEF AF                  B   748    				xor a
003FF0 3C                  B   749    wroslp			inc a
003FF1 32 93 48 00         B   750    				ld (fs_working_sector),a
003FF5 21 3A 48 00         B   751    				ld hl,fs_cluster_size
003FF9 BE                  B   752    				cp (hl)
003FFA 28 13               B   753    				jr z,allsclr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
003FFC 2A 9A 48 00         B   754    				ld hl,(fs_new_file_cluster)
004000 CD 46 47 00         B   755    				call cluster_and_offset_to_lba
004004 CD DF 47 00         B   756    				call fs_write_sector
004008 D8                  B   757    				ret c
004009 3A 93 48 00         B   758    				ld a,(fs_working_sector)
00400D 18 E1               B   759    				jr wroslp
                           B   760    			
00400F 2A 9A 48 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004013 11FFFF00            B   762    				ld de,0ffffh
004017 CD 9B 46 00         B   763    				call update_fat_entry_for_clust
00401B AF                  B   764    				xor a
00401C C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
00401D                     B   771    fs_delete_dir_command
                           B   772    
00401D CD 5F 45 00         B   773    				call fs_find_filename			004021 D8                  B   774    				ret c
004022 28 04               B   775    				jr z,ddc_gotd
004024 3ED1                B   776    				ld a,0d1h						004026 B7                  B   777    				or a
004027 C9                  B   778    				ret
                           B   779    				
004028 DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					00402C 20 04               B   781    				jr nz,okdeldir
00402E AF                  B   782    				xor a
00402F 3EC4                B   783    				ld a,0c4h						004031 C9                  B   784    				ret
                           B   785    				
004032 DD22 9D 48 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004037 CD A5 47 00         B   787    				call backup_sector_lba
00403B DD6E1A              B   788    				ld l,(ix+01ah)					00403E DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004041 3A 3A 48 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004045 47                  B   792    				ld b,a							004046 0E00                B   793    				ld c,0			
004048 79                  B   794    fs_cne2 		ld a,c
004049 CD 46 47 00         B   795    				call cluster_and_offset_to_lba
00404D CD C7 47 00         B   796    				call fs_read_sector
004051 D8                  B   797    				ret c							                           B   798    				
004052 C5                  B   799    				push bc
004053 0610                B   800    				ld b,16							004055 DD21 26 5A 00       B   801    				ld ix,sector_buffer
00405A 11200000            B   802    				ld de,020h
00405E DD7E00              B   803    fs_cne1			ld a,(ix)
004061 B7                  B   804    				or a
004062 28 0D               B   805    				jr z,fs_chnde
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004064 FEE5                B   806    				cp 0e5h
004066 28 09               B   807    				jr z,fs_chnde
004068 FE2E                B   808    				cp '.'
00406A 28 05               B   809    				jr z,fs_chnde
00406C C1                  B   810    				pop bc
00406D AF                  B   811    				xor a							00406E 3EC5                B   812    				ld a,0c5h						004070 C9                  B   813    				ret
                           B   814    			
004071 DD19                B   815    fs_chnde		add ix,de
004073 10 E9               B   816    				djnz fs_cne1
004075 C1                  B   817    				pop bc
004076 0C                  B   818    				inc c
004077 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004079 CD 6F 46 00         B   821    				call get_fat_entry_for_cluster	00407D D8                  B   822    				ret c
00407E CD 18 44 00         B   823    				call fs_compare_hl_fff8
004082 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004084 CD BA 47 00         B   826    dir_empty		call restore_sector_lba			004088 CD C7 47 00         B   827    				call fs_read_sector
00408C D8                  B   828    				ret c							00408D 2A 9D 48 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004091 36E5                B   830    fs_delco		ld (hl),0e5h					004093 CD DF 47 00         B   831    				call fs_write_sector
004097 D8                  B   832    				ret c
                           B   833    			
004098 E5                  B   834    				push hl
004099 DDE1                B   835    				pop ix
00409B DD6E1A              B   836    				ld l,(ix+01ah)
00409E DD661B              B   837    				ld h,(ix+01bh)
0040A1 22 94 48 00         B   838    				ld (fs_working_cluster),hl
0040A5 7C                  B   839    				ld a,h							0040A6 B5                  B   840    				or l							0040A7 C8                  B   841    				ret z							                           B   842    				
0040A8 2A 94 48 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
0040AC CD 6F 46 00         B   844    				call get_fat_entry_for_cluster
0040B0 D8                  B   845    				ret c
0040B1 EB                  B   846    				ex de,hl
                           B   847    				
0040B2 2A 94 48 00         B   848    				ld hl,(fs_working_cluster)
0040B6 ED53 94 48 00       B   849    				ld (fs_working_cluster),de
0040BB 11000000            B   850    				ld de,0
0040BF CD 9B 46 00         B   851    				call update_fat_entry_for_clust
0040C3 D8                  B   852    				ret c
                           B   853    				
0040C4 CD 18 44 00         B   854    				call fs_compare_hl_fff8			0040C8 38 DE               B   855    				jr c,clrfatlp
0040CA AF                  B   856    				xor a
0040CB C9                  B   857    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
0040CC                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
0040CC CD 5F 45 00         B   867    				call fs_find_filename			0040D0 D8                  B   868    				ret c
0040D1 FEC2                B   869    				cp 0c2h							0040D3 28 04               B   870    				jr z,mfilefnde
0040D5 AF                  B   871    				xor a							0040D6 3EC9                B   872    				ld a,0c9h						0040D8 C9                  B   873    				ret
                           B   874    			
0040D9 CD 76 44 00         B   875    mfilefnde		call fs_find_free_dir_entry		0040DD D8                  B   876    				ret c							0040DE C0                  B   877    				ret nz							                           B   878    			
0040DF DDE5                B   879    				push ix							0040E1 D1                  B   880    				pop de
0040E2 21 51 48 00         B   881    				ld hl,fs_sought_filename
0040E6 010B0000            B   882    				ld bc,11
0040EA EDB0                B   883    				ldir
0040EC AF                  B   884    				xor a							0040ED 0615                B   885    				ld b,21
0040EF 12                  B   886    clrfnen			ld (de),a
0040F0 13                  B   887    				inc de
0040F1 10 FC               B   888    				djnz clrfnen
0040F3 DD361821            B   889    				ld (ix+018h),021h				0040F7 CD DF 47 00         B   890    				call fs_write_sector			0040FB D8                  B   891    				ret c							0040FC AF                  B   892    				xor a
0040FD C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
0040FE                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
0040FE ED5B 81 48 00       B   906    				ld de,(fs_file_transfer_length)
004103 21000000            B   907    				ld hl,0
004107 AF                  B   908    				xor a
004108 ED5A                B   909    				adc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00410A CA 23 3E 00         B   910    				jp z,fs_fliz					                           B   911    				 
00410E CD 5F 45 00         B   912    				call fs_find_filename			004112 D8                  B   913    				ret c							004113 FEC2                B   914    				cp 0c2h				
004115 C8                  B   915    				ret z							004116 DDCB0B66            B   916    				bit 4,(ix+0bh)					00411A 28 04               B   917    				jr z,fs_oknad					00411C AF                  B   918    				xor a							00411D 3EC6                B   919    				ld a,0c6h						00411F C9                  B   920    				ret
                           B   921    
004120 CD A5 47 00         B   922    fs_oknad		call backup_sector_lba
004124 DD22 9D 48 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004129 DD311C              B   925    				ld iy,(ix+01ch)					00412C DD7E1F              B   926    				ld a,(ix+01fh)
00412F FD22 7D 48 00       B   927    				ld (fs_existing_file_length),iy
004134 32 7D 48 00         B   928    				ld (fs_existing_file_length),a
004138 ED5B 81 48 00       B   929    				ld de,(fs_file_transfer_length)
00413D FD19                B   930    				add iy,de						00413F CE00                B   931    				adc a,0
004141 DD3E1C              B   932    				ld (ix+01ch),iy					004144 DD771F              B   933    				ld (ix+01fh),a					004147 30 04               B   934    				jr nc,nfsizeok
004149 AF                  B   935    				xor a
00414A 3EC7                B   936    				ld a,0c7h						00414C C9                  B   937    				ret
                           B   938    
00414D 11000000            B   939    nfsizeok		ld de,0
004151 DD5E1A              B   940    				ld e,(ix+01ah)					004154 DD561B              B   941    				ld d,(ix+01bh)					004157 ED53 87 48 00       B   942    				ld (fs_file_working_cluster),de
00415C CD DF 47 00         B   943    				call fs_write_sector			004160 D8                  B   944    				ret c
004161 7A                  B   945    				ld a,d
004162 B3                  B   946    				or e
004163 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004165 CD 25 44 00         B   949    				call fs_find_free_cluster		004169 D8                  B   950    				ret c
00416A C0                  B   951    				ret nz
00416B 2A 97 48 00         B   952    				ld hl,(fs_free_cluster)
00416F 22 87 48 00         B   953    				ld (fs_file_working_cluster),hl
004173 11FFFF00            B   954    				ld de,0ffffh
004177 CD 9B 46 00         B   955    				call update_fat_entry_for_clust
00417B D8                  B   956    				ret c
                           B   957    			
00417C CD BA 47 00         B   958    				call restore_sector_lba			004180 CD C7 47 00         B   959    				call fs_read_sector
004184 D8                  B   960    				ret c
004185 DD2A 9D 48 00       B   961    				ld ix,(fs_fname_in_sector_addr)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00418A ED5B 87 48 00       B   962    				ld de,(fs_file_working_cluster)
00418F DD731A              B   963    				ld (ix+01ah),e
004192 DD721B              B   964    				ld (ix+01bh),d
004195 CD DF 47 00         B   965    				call fs_write_sector			004199 D8                  B   966    				ret c
                           B   967    				
                           B   968    					
00419A 2A 87 48 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
00419E CD 6F 46 00         B   970    				call get_fat_entry_for_cluster
0041A2 D8                  B   971    				ret c
0041A3 CD 18 44 00         B   972    				call fs_compare_hl_fff8
0041A7 30 1C               B   973    				jr nc,atlclif
0041A9 22 87 48 00         B   974    				ld (fs_file_working_cluster),hl
0041AD 01000000            B   975    				ld bc,0
0041B1 3A 3A 48 00         B   976    				ld a,(fs_cluster_size)
0041B5 CB27                B   977    				sla a
0041B7 47                  B   978    				ld b,a
0041B8 2A 7D 48 00         B   979    				ld hl,(fs_existing_file_length)
0041BC AF                  B   980    				xor a							0041BD ED42                B   981    				sbc hl,bc						0041BF 22 7D 48 00         B   982    				ld (fs_existing_file_length),hl
0041C3 18 D5               B   983    				jr apenclch
                           B   984    				
0041C5 ED4B 7D 48 00       B   985    atlclif			ld bc,(fs_existing_file_length)
0041CA CB38                B   986    				srl b				
0041CC 48                  B   987    				ld c,b							0041CD 3A 3A 48 00         B   988    				ld a,(fs_cluster_size)
0041D1 91                  B   989    				sub c
0041D2 47                  B   990    				ld b,a							0041D3 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
0041D5 2A 87 48 00         B   993    				ld hl,(fs_file_working_cluster)
0041D9 79                  B   994    				ld a,c
0041DA CD 46 47 00         B   995    				call cluster_and_offset_to_lba
0041DE CD C7 47 00         B   996    				call fs_read_sector
0041E2 D8                  B   997    				ret c
0041E3 C5                  B   998    				push bc							                           B   999    				
0041E4 11000000            B  1000    				ld de,0
0041E8 3A 7D 48 00         B  1001    				ld a,(fs_existing_file_length)
0041EC 5F                  B  1002    				ld e,a
0041ED 3A 7E 48 00         B  1003    				ld a,(fs_existing_file_length+1
0041F1 E601                B  1004    				and 1
0041F3 57                  B  1005    				ld d,a							0041F4 21000200            B  1006    				ld hl,512	
0041F8 AF                  B  1007    				xor a
0041F9 ED52                B  1008    				sbc hl,de						0041FB E5                  B  1009    				push hl
0041FC C1                  B  1010    				pop bc							0041FD 21 26 5A 00         B  1011    				ld hl,sector_buffer
004201 19                  B  1012    				add hl,de
004202 EB                  B  1013    				ex de,hl						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004203 7C                  B  1014    				ld a,h			
004204 B5                  B  1015    				or l
004205 20 04               B  1016    				jr nz,fs_dcsb					004207 CD 4D 45 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
00420B 2A 8A 48 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			00420F EDA0                B  1019    fs_cbsb			ldi								004211 7C                  B  1020    				ld a,h							004212 B5                  B  1021    				or l
004213 20 0D               B  1022    				jr nz,fs_srcadok
004215 22 8A 48 00         B  1023    				ld (fs_ez80_address),hl
004219 3A 8C 48 00         B  1024    				ld a,(fs_ez80_address+2)
00421D B7                  B  1025    				or a
00421E CA 3F 3F 00         B  1026    				jp z,fs_mem_error
004222 CD CF 46 00         B  1027    fs_srcadok		call transfer_length_countdown
004226 28 54               B  1028    				jr z,fs_lbof					004228 78                  B  1029    fs_sadok		ld a,b							004229 B1                  B  1030    				or c
00422A 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
00422C 22 8A 48 00         B  1033    				ld (fs_ez80_address),hl			004230 C1                  B  1034    				pop bc							004231 79                  B  1035    				ld a,c
004232 2A 87 48 00         B  1036    				ld hl,(fs_file_working_cluster)
004236 CD 46 47 00         B  1037    				call cluster_and_offset_to_lba
00423A CD DF 47 00         B  1038    				call fs_write_sector			00423E D8                  B  1039    				ret c							00423F 0C                  B  1040    				inc c							004240 05                  B  1041    				dec b
004241 28 0B               B  1042    				jr z,fs_sfncl					004243 C5                  B  1043    fs_sfns			push bc				
004244 01000200            B  1044    				ld bc,512						004248 11 26 5A 00         B  1045    				ld de,sector_buffer				00424C 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
00424E CD 25 44 00         B  1048    fs_sfncl		call fs_find_free_cluster		004252 D8                  B  1049    				ret c							004253 C0                  B  1050    				ret nz							004254 2A 87 48 00         B  1051    				ld hl,(fs_file_working_cluster)
004258 ED5B 97 48 00       B  1052    				ld de,(fs_free_cluster)
00425D CD 9B 46 00         B  1053    				call update_fat_entry_for_clust
004261 D8                  B  1054    				ret c
004262 2A 97 48 00         B  1055    				ld hl,(fs_free_cluster)
004266 22 87 48 00         B  1056    				ld (fs_file_working_cluster),hl
00426A 11FFFF00            B  1057    				ld de,0ffffh
00426E CD 9B 46 00         B  1058    				call update_fat_entry_for_clust
004272 D8                  B  1059    				ret c
004273 3A 3A 48 00         B  1060    				ld a,(fs_cluster_size)
004277 47                  B  1061    				ld b,a							004278 0E00                B  1062    				ld c,0							00427A 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
00427C C1                  B  1065    fs_lbof			pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00427D 79                  B  1066    				ld a,c							00427E 2A 87 48 00         B  1067    				ld hl,(fs_file_working_cluster)
004282 CD 46 47 00         B  1068    				call cluster_and_offset_to_lba
004286 CD DF 47 00         B  1069    				call fs_write_sector	
00428A D8                  B  1070    				ret c
00428B AF                  B  1071    				xor a							00428C C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
00428D                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
00428D CD 5F 45 00         B  1079    				call fs_find_filename			004291 D8                  B  1080    				ret c
004292 C0                  B  1081    				ret nz
                           B  1082    				
004293 DDCB0B66            B  1083    				bit 4,(ix+0bh)					004297 28 04               B  1084    				jr z,okdelf
004299 AF                  B  1085    				xor a
00429A 3EC6                B  1086    				ld a,0c6h						00429C C9                  B  1087    				ret
                           B  1088    				
00429D DDE5                B  1089    okdelf			push ix
00429F E1                  B  1090    				pop hl
0042A0 C3 91 40 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
0042A4                     B  1097    fs_rename_command
                           B  1098    
0042A4 CD 5F 45 00         B  1099    				call fs_find_filename			0042A8 D8                  B  1100    				ret c							0042A9 FEC2                B  1101    				cp 0c2h							0042AB 28 04               B  1102    				jr z,fs_nfnok					0042AD AF                  B  1103    				xor a							0042AE 3EC9                B  1104    				ld a,0c9h						0042B0 C9                  B  1105    				ret
                           B  1106    			
0042B1 21 51 48 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		0042B5 11 69 48 00         B  1108    				ld de,fs_filename_buffer
0042B9 010B0000            B  1109    				ld bc,11
0042BD EDB0                B  1110    				ldir
0042BF 21 5D 48 00         B  1111    				ld hl,fs_alt_filename			0042C3 11 51 48 00         B  1112    				ld de,fs_sought_filename
0042C7 010B0000            B  1113    				ld bc,11
0042CB EDB0                B  1114    				ldir
0042CD CD 5F 45 00         B  1115    				call fs_find_filename			0042D1 D8                  B  1116    				ret c
0042D2 FEC2                B  1117    				cp 0c2h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0042D4 C8                  B  1118    				ret z							                           B  1119    				
0042D5 DDE5                B  1120    				push ix
0042D7 D1                  B  1121    				pop de
0042D8 21 69 48 00         B  1122    				ld hl,fs_filename_buffer	 	0042DC 010B0000            B  1123    				ld bc,11
0042E0 EDB0                B  1124    				ldir							0042E2 CD DF 47 00         B  1125    				call fs_write_sector			                           B  1126    				
0042E6 AF                  B  1127    fs_rndone		xor a
0042E7 C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
0042E8                     B  1134    fs_goto_first_dir_entry
                           B  1135    
0042E8 CD 3A 1A 00         B  1136    				call fs_get_dir_cluster
0042EC ED53 A0 48 00       B  1137    				ld (fs_dir_entry_cluster),de
0042F1 AF                  B  1138    				xor a
0042F2 32 A6 48 00         B  1139    				ld (fs_dir_entry_sector),a		0042F6 11000000            B  1140    				ld de,0
0042FA ED53 A3 48 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
0042FF                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
0042FF 3A A6 48 00         B  1156    				ld a,(fs_dir_entry_sector)		004303 4F                  B  1157    				ld c,a
004304 2A A0 48 00         B  1158    				ld hl,(fs_dir_entry_cluster)	004308 CD 46 47 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
00430C 7C                  B  1161    				ld a,h							00430D B5                  B  1162    				or l							00430E 20 09               B  1163    				jr nz,nr_read					004310 2A 44 48 00         B  1164    				ld hl,(fs_root_dir_position)	004314 79                  B  1165    				ld a,c
004315 CD 8C 47 00         B  1166    				call set_absolute_lba
                           B  1167    				
004319 CD C7 47 00         B  1168    nr_read			call fs_read_sector				00431D D8                  B  1169    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1170    				
00431E ED5B A3 48 00       B  1171    				ld de,(fs_dir_entry_line_offset
004323 DD21 26 5A 00       B  1172    dscan_int_loop	ld ix,sector_buffer
004328 DD19                B  1173    				add ix,de
00432A DD7E00              B  1174    ds_int_loop		ld a,(ix)
00432D B7                  B  1175    				or a							00432E 28 0E               B  1176    				jr z,fs_dir_entry_free		
004330 FEE5                B  1177    				cp 0e5h							004332 28 0A               B  1178    				jr z,fs_dir_entry_free	
004334 FE05                B  1179    				cp 05h							004336 28 06               B  1180    				jr z,fs_dir_entry_free	
004338 DDCB0B5E            B  1181    				bit 3,(ix+0bh)					00433C 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
00433E                     B  1184    fs_dir_entry_free
                           B  1185    
00433E EB                  B  1186    				ex de,hl
00433F 11200000            B  1187    				ld de,32
004343 19                  B  1188    				add hl,de
004344 EB                  B  1189    				ex de,hl
004345 CB4A                B  1190    				bit 1,d
004347 28 DA               B  1191    				jr z,dscan_int_loop
004349 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
00434B                     B  1194    fs_dir_entry_in_use
                           B  1195    				
00434B ED53 A3 48 00       B  1196    				ld (fs_dir_entry_line_offset),d
004350 DDE5                B  1197    				push ix
004352 E1                  B  1198    				pop hl
004353 CD 32 10 00         B  1199    				call os_clear_output_line
004357 0608                B  1200    				ld b,8							004359 11 29 55 00         B  1201    				ld de,output_line
00435D 7E                  B  1202    dcopyn			ld a,(hl)
00435E FE20                B  1203    				cp ' '							004360 28 02               B  1204    				jr z,digchar
004362 12                  B  1205    				ld (de),a
004363 13                  B  1206    				inc de
004364 23                  B  1207    digchar			inc hl
004365 10 F6               B  1208    				djnz dcopyn
004367 7E                  B  1209    				ld a,(hl)						004368 FE20                B  1210    				cp ' '							00436A 28 0A               B  1211    				jr z,dirnoex
00436C 3E2E                B  1212    				ld a,'.'						00436E 12                  B  1213    				ld (de),a
00436F 13                  B  1214    				inc de	
004370 01030000            B  1215    				ld bc,3							004374 EDB0                B  1216    				ldir
004376 AF                  B  1217    dirnoex			xor a 
004377 12                  B  1218    				ld (de),a						                           B  1219    				
004378 47                  B  1220    				ld b,a
004379 DDCB0B66            B  1221    				bit 4,(ix+0bh)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00437D 28 01               B  1222    				jr z,fs_fniaf		
00437F 04                  B  1223    				inc b							004380 DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					004383 DD4E1F              B  1225    				ld c,(ix+01fh)
004386 21 29 55 00         B  1226    				ld hl,output_line				00438A AF                  B  1227    				xor a
00438B C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
00438C                     B  1233    fs_goto_next_dir_entry
                           B  1234    
00438C 11200000            B  1235    				ld de,32
004390 2A A3 48 00         B  1236    				ld hl,(fs_dir_entry_line_offset
004394 19                  B  1237    				add hl,de
004395 22 A3 48 00         B  1238    				ld (fs_dir_entry_line_offset),h
004399 CB4C                B  1239    				bit 1,h
00439B CA FF 42 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
00439F 21000000            B  1242    dscan_new_sect	ld hl,0				
0043A3 22 A3 48 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
0043A7 21 A6 48 00         B  1245    				ld hl,fs_dir_entry_sector
0043AB 34                  B  1246    				inc (hl)						                           B  1247    			
0043AC ED5B A0 48 00       B  1248    				ld de,(fs_dir_entry_cluster)
0043B1 7A                  B  1249    				ld a,d
0043B2 B3                  B  1250    				or e							0043B3 20 0B               B  1251    				jr nz,nonroot2
0043B5 3A 4A 48 00         B  1252    				ld a,(fs_root_dir_sectors)
0043B9 BE                  B  1253    				cp (hl)
0043BA 28 23               B  1254    				jr z,endofdir			
0043BC C3 FF 42 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												0043C0 3A 3A 48 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
0043C4 BE                  B  1258    				cp (hl)							0043C5 C2 FF 42 00         B  1259    				jp nz,fs_get_dir_entry
0043C9 3600                B  1260    				ld (hl),0						0043CB 2A A0 48 00         B  1261    				ld hl,(fs_dir_entry_cluster)
0043CF CD 6F 46 00         B  1262    				call get_fat_entry_for_cluster
0043D3 22 A0 48 00         B  1263    				ld (fs_dir_entry_cluster),hl
0043D7 CD 18 44 00         B  1264    				call fs_compare_hl_fff8			0043DB DA FF 42 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
0043DF 3ED2                B  1267    endofdir		ld a,0d2h
0043E1 B7                  B  1268    				or a							0043E2 C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
0043E3                     B  1273    fs_get_volume_label
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
0043E3 2A 44 48 00         B  1279    				ld hl,(fs_root_dir_position)
0043E7 AF                  B  1280    				xor a
0043E8 CD 9D 47 00         B  1281    				call set_abs_lba_and_read_secto
0043EC D8                  B  1282    				ret c
0043ED 0E10                B  1283    				ld c,16							0043EF DD21 26 5A 00       B  1284    				ld ix,sector_buffer
0043F4 DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
0043F7 FE08                B  1286    				cp 08h
0043F9 20 11               B  1287    				jr nz,not_label
0043FB DD360B00            B  1288    				ld (ix+0bh),0					0043FF DDE5                B  1289    				push ix
004401 E1                  B  1290    				pop hl
004402 E5                  B  1291    				push hl
004403 060B                B  1292    				ld b,11
004405 CD 0D 12 00         B  1293    				call uppercasify_string
004409 E1                  B  1294    				pop hl
00440A AF                  B  1295    				xor a
00440B C9                  B  1296    				ret
                           B  1297    				
00440C 11200000            B  1298    not_label		ld de,32						004410 DD19                B  1299    				add ix,de						004412 10 E0               B  1300    				djnz find_vl
004414 AF                  B  1301    				xor a
004415 3ED4                B  1302    				ld a,0d4h						004417 C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
004418                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
004418 E5                  B  1315    				push hl
004419 D5                  B  1316    				push de
00441A 11F8FF00            B  1317    				ld de,0fff8h			
00441E B7                  B  1318    				or a							00441F 52ED52              B  1319    				sbc.s hl,de						004422 D1                  B  1320    				pop de
004423 E1                  B  1321    				pop hl
004424 C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1326    
004425                     B  1327    fs_find_free_cluster
                           B  1328    	
004425 DD210000 00         B  1329    				ld ix,0							00442A ED5B 3E 48 00       B  1330    				ld de,(fs_fat1_position)		00442F AF                  B  1331    				xor a				
004430 32 93 48 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
004434 D5                  B  1333    				push de
004435 E1                  B  1334    				pop hl
004436 3A 93 48 00         B  1335    				ld a,(fs_working_sector)
00443A CD 9D 47 00         B  1336    				call set_abs_lba_and_read_secto
00443E D8                  B  1337    				ret c
00443F 21 26 5A 00         B  1338    				ld hl,sector_buffer
004443 0600                B  1339    				ld b,0
004445 7E                  B  1340    fs_ffcl1		ld a,(hl)						004446 23                  B  1341    				inc hl
004447 B6                  B  1342    				or (hl)
004448 23                  B  1343    				inc hl
004449 28 14               B  1344    				jr z,fs_gotfc
00444B DD23                B  1345    				inc ix
00444D 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
00444F 2A 4B 48 00         B  1348    				ld hl,(fs_sectors_per_fat)
004453 3A 93 48 00         B  1349    				ld a,(fs_working_sector)		004457 3C                  B  1350    				inc a				
004458 BD                  B  1351    				cp l		
004459 20 D5               B  1352    				jr nz,fs_ffcl2					00445B 3EC1                B  1353    fs_dfull		ld a,c1h						00445D B7                  B  1354    				or a							00445E C9                  B  1355    				ret
                           B  1356    			
00445F DDE5                B  1357    fs_gotfc		push ix							004461 E1                  B  1358    				pop hl							004462 2B                  B  1359    				dec hl							004463 2B                  B  1360    				dec hl							004464 ED5B 4E 48 00       B  1361    				ld de,(fs_max_data_clusters)
004469 AF                  B  1362    				xor a
00446A 52ED52              B  1363    				sbc.s hl,de						00446D 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
00446F DD22 97 48 00       B  1366    				ld (fs_free_cluster),ix
004474 AF                  B  1367    				xor a
004475 C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
004476                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1378    
                           B  1379    			
004476 CD 3A 1A 00         B  1380    				call fs_get_dir_cluster			00447A EB                  B  1381    				ex de,hl
00447B 22 87 48 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
00447F AF                  B  1383    				xor a
004480 32 93 48 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
004484 2A 44 48 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	004488 3A 93 48 00         B  1387    				ld a,(fs_working_sector)
00448C CD 8C 47 00         B  1388    				call set_absolute_lba
                           B  1389    				
004490 CD 3A 1A 00         B  1390    				call fs_get_dir_cluster			004494 7A                  B  1391    				ld a,d
004495 B3                  B  1392    				or e
004496 28 0C               B  1393    				jr z,at_rootd
004498 2A 87 48 00         B  1394    				ld hl,(fs_file_working_cluster)
00449C 3A 93 48 00         B  1395    				ld a,(fs_working_sector)
0044A0 CD 46 47 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
0044A4 CD C7 47 00         B  1398    at_rootd		call fs_read_sector
0044A8 D8                  B  1399    				ret c
0044A9 0610                B  1400    				ld b,16							0044AB 11200000            B  1401    				ld de,32
0044AF DD21 26 5A 00       B  1402    				ld ix,sector_buffer
0044B4 DD7E00              B  1403    scdirfe			ld a,(ix)						0044B7 B7                  B  1404    				or a
0044B8 28 65               B  1405    				jr z,got_fde
0044BA FEE5                B  1406    				cp 0e5h
0044BC 28 61               B  1407    				jr z,got_fde
0044BE DD19                B  1408    				add ix,de						0044C0 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
0044C2 21 93 48 00         B  1411    				ld hl,fs_working_sector			0044C6 34                  B  1412    				inc (hl)
                           B  1413    				
0044C7 CD 3A 1A 00         B  1414    				call fs_get_dir_cluster			0044CB 7A                  B  1415    				ld a,d
0044CC B3                  B  1416    				or e
0044CD 20 0B               B  1417    				jr nz,ffenotroo
0044CF 3A 4A 48 00         B  1418    				ld a,(fs_root_dir_sectors)		0044D3 BE                  B  1419    				cp (hl)							0044D4 20 AE               B  1420    				jr nz,ffenxtsec
0044D6 AF                  B  1421    fenotfnd		xor a							0044D7 3EC3                B  1422    				ld a,0c3h						0044D9 C9                  B  1423    				ret
                           B  1424    			
0044DA 3A 3A 48 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			0044DE BE                  B  1426    				cp (hl)
0044DF 20 A3               B  1427    				jr nz,ffenxtsec
0044E1 2A 87 48 00         B  1428    				ld hl,(fs_file_working_cluster)
0044E5 CD 6F 46 00         B  1429    				call get_fat_entry_for_cluster	Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0044E9 D8                  B  1430    				ret c
0044EA CD 18 44 00         B  1431    				call fs_compare_hl_fff8			0044EE 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
0044F0 CD 25 44 00         B  1434    				call fs_find_free_cluster		0044F4 D8                  B  1435    				ret c							0044F5 C0                  B  1436    				ret nz							0044F6 ED5B 97 48 00       B  1437    				ld de,(fs_free_cluster)
0044FB 2A 87 48 00         B  1438    				ld hl,(fs_file_working_cluster)
0044FF CD 9B 46 00         B  1439    				call update_fat_entry_for_clust
004503 D8                  B  1440    				ret c
004504 EB                  B  1441    				ex de,hl						004505 11FFFF00            B  1442    				ld de,0ffffh
004509 CD 9B 46 00         B  1443    				call update_fat_entry_for_clust
00450D D8                  B  1444    				ret c
                           B  1445    			
00450E 2A 97 48 00         B  1446    				ld hl,(fs_free_cluster)			004512 CD 21 45 00         B  1447    				call fs_clear_cluster			004516 D8                  B  1448    				ret c
004517 2A 97 48 00         B  1449    				ld hl,(fs_free_cluster)			00451B C3 7B 44 00         B  1450    				jp ffenxtclu					                           B  1451    			
00451F AF                  B  1452    got_fde			xor a
004520 C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
004521                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
004521 22 94 48 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
004525 CD 4D 45 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
004529 AF                  B  1466    				xor a				
00452A 32 93 48 00         B  1467    				ld (fs_working_sector),a		00452E 3A 93 48 00         B  1468    wipeclulp		ld a,(fs_working_sector)		004532 2A 94 48 00         B  1469    				ld hl,(fs_working_cluster)		004536 CD 46 47 00         B  1470    				call cluster_and_offset_to_lba	00453A CD DF 47 00         B  1471    				call fs_write_sector
00453E D8                  B  1472    				ret c
00453F 21 93 48 00         B  1473    				ld hl,fs_working_sector
004543 34                  B  1474    				inc (hl)
004544 3A 3A 48 00         B  1475    				ld a,(fs_cluster_size)
004548 BE                  B  1476    				cp (hl)
004549 20 E3               B  1477    				jr nz,wipeclulp
00454B AF                  B  1478    				xor a
00454C C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00454D                     B  1482    fs_clear_sector_buffer
                           B  1483    			
00454D E5                  B  1484    				push hl
00454E C5                  B  1485    				push bc
00454F 21 26 5A 00         B  1486    				ld hl,sector_buffer			
004553 01000200            B  1487    				ld bc,512				
004557 AF                  B  1488    				xor a				
004558 CD 4B 15 00         B  1489    				call os_bchl_memfill	
00455C C1                  B  1490    				pop bc
00455D E1                  B  1491    				pop hl
00455E C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
00455F                     B  1498    fs_find_filename
                           B  1499    
00455F AF                  B  1500    				xor a
                           B  1501    
004560                     B  1502    fs_search	
                           B  1503    				
004560 32 AE 48 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
004564 CD 3A 1A 00         B  1508    				call fs_get_dir_cluster
004568 ED53 87 48 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
00456D AF                  B  1510    				xor a
00456E 32 93 48 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
004572 2A 44 48 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	004576 3A 93 48 00         B  1514    				ld a,(fs_working_sector)
00457A CD 8C 47 00         B  1515    				call set_absolute_lba
                           B  1516    				
00457E CD 3A 1A 00         B  1517    				call fs_get_dir_cluster			004582 7A                  B  1518    				ld a,d
004583 B3                  B  1519    				or e
004584 28 0C               B  1520    				jr z,at_rootd2
004586 2A 87 48 00         B  1521    				ld hl,(fs_file_working_cluster)
00458A 3A 93 48 00         B  1522    				ld a,(fs_working_sector)
00458E CD 46 47 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
004592 CD C7 47 00         B  1525    at_rootd2		call fs_read_sector
004596 D8                  B  1526    				ret c
004597 0E10                B  1527    				ld c,16							004599 DD21 26 5A 00       B  1528    				ld ix,sector_buffer
00459E DDE5                B  1529    ndirentr		push ix
0045A0 D1                  B  1530    				pop de
0045A1 3A AE 48 00         B  1531    				ld a,(fs_search_type)
0045A5 B7                  B  1532    				or a
0045A6 28 1E               B  1533    				jr z,fs_ststr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1534    			
0045A8 DD7E00              B  1535    				ld a,(ix)						0045AB FE80                B  1536    				cp 080h							0045AD 30 35               B  1537    				jr nc,fnnotsame
0045AF FE20                B  1538    				cp 020h
0045B1 38 31               B  1539    				jr c,fnnotsame
0045B3 ED5B AB 48 00       B  1540    				ld de,(fs_stash_dir_block)		0045B8 DD7E1A              B  1541    				ld a,(ix+01ah)
0045BB BB                  B  1542    				cp e
0045BC 20 26               B  1543    				jr nz,fnnotsame
0045BE DD7E1B              B  1544    				ld a,(ix+01bh)
0045C1 BA                  B  1545    				cp d
0045C2 28 1E               B  1546    				jr z,fs_found
0045C4 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
0045C6 FD21 51 48 00       B  1549    fs_ststr		ld iy,fs_sought_filename		0045CB 060B                B  1550    				ld b,11							0045CD 1A                  B  1551    cmpfnlp			ld a,(de)						0045CE CD 19 12 00         B  1552    				call os_uppercasify				0045D2 6F                  B  1553    				ld l,a
0045D3 FD7E00              B  1554    				ld a,(iy)
0045D6 CD 19 12 00         B  1555    				call os_uppercasify
0045DA BD                  B  1556    				cp l				
0045DB 20 07               B  1557    				jr nz,fnnotsame
0045DD FD23                B  1558    				inc iy
0045DF 13                  B  1559    				inc de
0045E0 10 EB               B  1560    				djnz cmpfnlp
0045E2 AF                  B  1561    fs_found		xor a							0045E3 C9                  B  1562    				ret
                           B  1563    			
0045E4 11200000            B  1564    fnnotsame		ld de,32						0045E8 DD19                B  1565    				add ix,de
0045EA 0D                  B  1566    				dec c
0045EB 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
0045ED 21 93 48 00         B  1569    				ld hl,fs_working_sector			0045F1 34                  B  1570    				inc (hl)
                           B  1571    				
0045F2 CD 3A 1A 00         B  1572    				call fs_get_dir_cluster			0045F6 7A                  B  1573    				ld a,d
0045F7 B3                  B  1574    				or e
0045F8 20 0D               B  1575    				jr nz,notrootdir
0045FA 3A 4A 48 00         B  1576    				ld a,(fs_root_dir_sectors)		0045FE BE                  B  1577    				cp (hl)							0045FF C2 72 45 00         B  1578    				jp nz,ffnnxtsec
004603 3EC2                B  1579    fnnotfnd		ld a,0c2h						004605 B7                  B  1580    				or a
004606 C9                  B  1581    				ret
                           B  1582    			
004607                     B  1583    notrootdir
                           B  1584    				
004607 3A 3A 48 00         B  1585    				ld a,(fs_cluster_size)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00460B BE                  B  1586    				cp (hl)
00460C C2 72 45 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
004610 2A 87 48 00         B  1589    				ld hl,(fs_file_working_cluster)
004614 CD 6F 46 00         B  1590    				call get_fat_entry_for_cluster
004618 D8                  B  1591    				ret c
004619 CD 18 44 00         B  1592    				call fs_compare_hl_fff8			00461D 30 E4               B  1593    				jr nc,fnnotfnd					00461F EB                  B  1594    				ex de,hl						004620 C3 68 45 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
004624                     B  1600    fs_hl_to_alt_filename
                           B  1601    
004624 11 5D 48 00         B  1602    				ld de,fs_alt_filename
004628 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
00462A                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
00462A 11 51 48 00         B  1612    				ld de,fs_sought_filename
00462E CD 39 47 00         B  1613    hltofngo		call fs_clear_filename			004632 D5                  B  1614    				push de			
004633 DDE1                B  1615    				pop ix							                           B  1616    				
004635 0E00                B  1617    				ld c,0
004637 0608                B  1618    				ld b,8
004639 7E                  B  1619    csfnlp2			ld a,(hl)						00463A B7                  B  1620    				or a
00463B C8                  B  1621    				ret z							00463C FE20                B  1622    				cp 32
00463E C8                  B  1623    				ret z							00463F FE2F                B  1624    				cp 02fh
004641 C8                  B  1625    				ret z							004642 FE2E                B  1626    				cp '.'
004644 28 16               B  1627    				jr z,dofn_ext					004646 12                  B  1628    				ld (de),a
004647 13                  B  1629    				inc de
004648 23                  B  1630    				inc hl
004649 0C                  B  1631    				inc c							00464A 10 ED               B  1632    				djnz csfnlp2					00464C 7E                  B  1633    find_ext		ld a,(hl)
00464D FE2E                B  1634    				cp '.'							00464F 28 0B               B  1635    				jr z,dofn_ext	
004651 FE20                B  1636    				cp ' '							004653 C8                  B  1637    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004654 FE2F                B  1638    				cp 02fh
004656 C8                  B  1639    				ret z
004657 B7                  B  1640    				or a
004658 C8                  B  1641    				ret z
004659 23                  B  1642    				inc hl
00465A 18 F0               B  1643    				jr find_ext
                           B  1644    				
00465C 23                  B  1645    dofn_ext		inc hl							00465D 0603                B  1646    				ld b,3				
00465F 7E                  B  1647    fnextlp			ld a,(hl)						004660 B7                  B  1648    				or a
004661 C8                  B  1649    				ret z							004662 FE20                B  1650    				cp 32
004664 C8                  B  1651    				ret z
004665 DD7708              B  1652    				ld (ix+8),a
004668 DD23                B  1653    				inc ix
00466A 23                  B  1654    				inc hl
00466B 0C                  B  1655    				inc c
00466C 10 F1               B  1656    				djnz fnextlp
00466E C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
00466F                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
00466F C5                  B  1666    				push bc
004670 D5                  B  1667    				push de
004671 01000000            B  1668    				ld bc,0
004675 4D                  B  1669    				ld c,l
004676 7C                  B  1670    				ld a,h
004677 2A 3E 48 00         B  1671    				ld hl,(fs_fat1_position)
00467B CD 9D 47 00         B  1672    				call set_abs_lba_and_read_secto
00467F 38 17               B  1673    				jr c,hwerr
004681 DDE5                B  1674    				push ix
004683 DD21 26 5A 00       B  1675    				ld ix,sector_buffer
004688 DD09                B  1676    				add ix,bc
00468A DD09                B  1677    				add ix,bc
00468C 21000000            B  1678    				ld hl,0
004690 DD6E00              B  1679    				ld l,(ix)
004693 DD6601              B  1680    				ld h,(ix+1)
004696 DDE1                B  1681    				pop ix
004698 D1                  B  1682    hwerr			pop de
004699 C1                  B  1683    				pop bc
00469A C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00469B                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
00469B C5                  B  1695    				push bc
00469C E5                  B  1696    				push hl
00469D 01000000            B  1697    				ld bc,0
0046A1 4D                  B  1698    				ld c,l
0046A2 7C                  B  1699    				ld a,h
0046A3 2A 3E 48 00         B  1700    				ld hl,(fs_fat1_position)		0046A7 CD BB 46 00         B  1701    				call fat_upd
0046AB 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
0046AD E1                  B  1704    				pop hl
0046AE E5                  B  1705    				push hl
0046AF 7C                  B  1706    				ld a,h
0046B0 2A 41 48 00         B  1707    				ld hl,(fs_fat2_position)		0046B4 CD BB 46 00         B  1708    				call fat_upd
0046B8 E1                  B  1709    fup_end			pop hl
0046B9 C1                  B  1710    				pop bc
0046BA C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
0046BB CD 9D 47 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
0046BF 38 0D               B  1715    				jr c,ufehwerr
0046C1 21 26 5A 00         B  1716    				ld hl,sector_buffer
0046C5 09                  B  1717    				add hl,bc
0046C6 09                  B  1718    				add hl,bc
0046C7 73                  B  1719    				ld (hl),e
0046C8 23                  B  1720    				inc hl
0046C9 72                  B  1721    				ld (hl),d
0046CA CD DF 47 00         B  1722    				call fs_write_sector
0046CE C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
0046CF                     B  1728    transfer_length_countdown
                           B  1729    
0046CF E5                  B  1730    				push hl							0046D0 C5                  B  1731    				push bc
                           B  1732    			
0046D1 0604                B  1733    				ld b,4
0046D3 21 75 48 00         B  1734    				ld hl,fs_file_pointer			0046D7 34                  B  1735    fpinclp			inc (hl)
0046D8 20 03               B  1736    				jr nz,fs_fpino
0046DA 23                  B  1737    				inc hl
0046DB 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
0046DD 2A 81 48 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
0046E1 2B                  B  1741    				dec hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0046E2 22 81 48 00         B  1742    				ld (fs_file_transfer_length),hl
0046E6 01000000            B  1743    				ld bc,0
0046EA B7                  B  1744    				or a
0046EB ED4A                B  1745    				adc hl,bc						                           B  1746    				
0046ED C1                  B  1747    				pop bc
0046EE E1                  B  1748    				pop hl
0046EF C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
0046F0                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
0046F0 CD 3A 1A 00         B  1757    				call fs_get_dir_cluster			0046F4 7A                  B  1758    				ld a,d
0046F5 B3                  B  1759    				or e
0046F6 20 10               B  1760    				jr nz,fs_dnnr
0046F8 21 E3 52 00         B  1761    				ld hl,vol_txt+1					0046FC 3A DE 52 00         B  1762    				ld a,(current_volume)
004700 C630                B  1763    				add a,030h
004702 32 E6 52 00         B  1764    				ld (vol_txt+4),a
004706 AF                  B  1765    				xor a
004707 C9                  B  1766    				ret
                           B  1767    					
004708 ED53 AB 48 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
00470D CD A8 3D 00         B  1769    				call fs_parent_dir_command		004711 D8                  B  1770    				ret c
004712 B7                  B  1771    				or a
004713 C0                  B  1772    				ret nz
004714 3E01                B  1773    				ld a,1
004716 CD 60 45 00         B  1774    				call fs_search					00471A D8                  B  1775    				ret c
00471B C0                  B  1776    				ret nz
                           B  1777    					
00471C DDE5                B  1778    fs_gdbn			push ix
00471E E1                  B  1779    				pop hl
00471F 060B                B  1780    				ld b,11							004721 7E                  B  1781    ntdirn			ld a,(hl)
004722 FE20                B  1782    				cp ' '
004724 28 03               B  1783    				jr z,rdirfsp
004726 23                  B  1784    				inc hl
004727 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
004729 3600                B  1787    rdirfsp			ld (hl),0
00472B DDE5                B  1788    				push ix
00472D ED5B AB 48 00       B  1789    				ld de,(fs_stash_dir_block)
004732 CD 46 1A 00         B  1790    				call fs_update_dir_cluster		004736 E1                  B  1791    				pop hl	
004737 AF                  B  1792    				xor a							004738 C9                  B  1793    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
004739                     B  1797    fs_clear_filename
                           B  1798    
004739 D5                  B  1799    				push de							00473A C5                  B  1800    				push bc
00473B 060C                B  1801    				ld b,12
00473D 3E20                B  1802    				ld a,' '
00473F 12                  B  1803    clrfnlp			ld (de),a
004740 13                  B  1804    				inc de
004741 10 FC               B  1805    				djnz clrfnlp
004743 C1                  B  1806    				pop bc
004744 D1                  B  1807    				pop de
004745 C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
004746                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
004746 C5                  B  1817    				push bc
004747 D5                  B  1818    				push de
004748 E5                  B  1819    				push hl
004749 DDE5                B  1820    				push ix
                           B  1821    
00474B 2B                  B  1822    				dec hl							00474C 2B                  B  1823    				dec hl							00474D 11000000            B  1824    				ld de,0							004751 01000000            B  1825    				ld bc,0
004755 5F                  B  1826    				ld e,a
004756 3A 3A 48 00         B  1827    				ld a,(fs_cluster_size)			00475A CB3F                B  1828    caotllp			srl a
00475C 28 03               B  1829    				jr z,clusdone
00475E 29                  B  1830    				add hl,hl						00475F 18 F9               B  1831    				jr caotllp
                           B  1832    			
004761 ED4B 47 48 00       B  1833    clusdone		ld bc,(fs_data_area)			004766 09                  B  1834    				add hl,bc						004767 19                  B  1835    				add hl,de						                           B  1836    				
004768 E5                  B  1837    add_ptn_offset	push hl							004769 CD 74 1A 00         B  1838    				call fs_calc_volume_offset
00476D DD21 10 53 00       B  1839    				ld ix,volume_mount_list
004772 DD19                B  1840    				add ix,de
004774 E1                  B  1841    				pop hl
004775 DD0708              B  1842    				ld bc,(ix+08h)					004778 DD7E0B              B  1843    				ld a,(ix+0bh)
00477B 09                  B  1844    				add hl,bc
00477C CE00                B  1845    				adc a,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00477E 22 B5 54 00         B  1846    				ld (sector_lba0),hl				004782 32 B8 54 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
004786 DDE1                B  1849    				pop ix
004788 E1                  B  1850    				pop hl
004789 D1                  B  1851    				pop de
00478A C1                  B  1852    				pop bc
00478B C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
00478C                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
00478C C5                  B  1862    				push bc							00478D D5                  B  1863    				push de							00478E E5                  B  1864    				push hl							00478F DDE5                B  1865    				push ix							004791 01000000            B  1866    				ld bc,0
004795 11000000            B  1867    				ld de,0
004799 5F                  B  1868    				ld e,a
00479A 19                  B  1869    				add hl,de
00479B 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
00479D                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
00479D CD 8C 47 00         B  1875    				call set_absolute_lba
0047A1 C3 C7 47 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
0047A5                     B  1881    backup_sector_lba
                           B  1882    
0047A5 C5                  B  1883    				push bc
0047A6 D5                  B  1884    				push de
0047A7 E5                  B  1885    				push hl
0047A8 21 B5 54 00         B  1886    				ld hl,sector_lba0
0047AC 11 AF 48 00         B  1887    				ld de,fs_backed_up_sector_lba0
0047B0 01040000            B  1888    lbabur			ld bc,4
0047B4 EDB0                B  1889    				ldir
0047B6 E1                  B  1890    				pop hl
0047B7 D1                  B  1891    				pop de
0047B8 C1                  B  1892    				pop bc
0047B9 C9                  B  1893    				ret
                           B  1894    
                           B  1895    
0047BA                     B  1896    restore_sector_lba
                           B  1897    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047BA C5                  B  1898    				push bc
0047BB D5                  B  1899    				push de
0047BC E5                  B  1900    				push hl
0047BD 21 AF 48 00         B  1901    				ld hl,fs_backed_up_sector_lba0
0047C1 11 B5 54 00         B  1902    				ld de,sector_lba0
0047C5 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
0047C7                     B  1907    fs_read_sector
                           B  1908    			
0047C7 C5                  B  1909    				push bc
0047C8 D5                  B  1910    				push de
0047C9 E5                  B  1911    				push hl
0047CA DDE5                B  1912    				push ix
0047CC FDE5                B  1913    				push iy
0047CE 01040000            B  1914    				ld bc,04h						0047D2 CD F0 47 00         B  1915    				call sector_access_redirect
0047D6 FDE1                B  1916    secaccend		pop iy
0047D8 DDE1                B  1917    				pop ix
0047DA E1                  B  1918    				pop hl
0047DB D1                  B  1919    				pop de
0047DC C1                  B  1920    				pop bc
0047DD 3F                  B  1921    				ccf								0047DE C9                  B  1922    				ret								                           B  1923    
                           B  1924    
0047DF                     B  1925    fs_write_sector	
                           B  1926    				
0047DF C5                  B  1927    				push bc
0047E0 D5                  B  1928    				push de
0047E1 E5                  B  1929    				push hl
0047E2 DDE5                B  1930    				push ix
0047E4 FDE5                B  1931    				push iy
0047E6 01080000            B  1932    				ld bc,08h						0047EA CD F0 47 00         B  1933    				call sector_access_redirect
0047EE 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
0047F0                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
0047F0 3A DF 52 00         B  1941    				ld a,(current_driver)			0047F4 CD 0C 1A 00         B  1942    				call locate_driver_base			0047F8 EB                  B  1943    				ex de,hl
0047F9 09                  B  1944    				add hl,bc						0047FA E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
0047FB                     B  1949    bootsector_stub
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1950    
0047FB EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
004803 352E3000 02004000 
00480B 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
004813 3F00FF00 00000000 
00481B 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
004823 E636984E 4F204E41 
00482B 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
004833 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
00483A 00                  B  1958    fs_cluster_size				db 0
00483B 000000              B  1959    fs_bytes_per_cluster		dw24 0
00483E 000000              B  1960    fs_fat1_position			dw24 0		; offse
004841 000000              B  1961    fs_fat2_position			dw24 0		; offse
004844 000000              B  1962    fs_root_dir_position		dw24 0		; offse
004847 000000              B  1963    fs_data_area				dw24 0		; offse
00484A 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
00484B 000000              B  1966    fs_sectors_per_fat			dw24 0
00484E 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
004851 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
004857 00 00 00 00 00 00 
00485D 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
004863 00 00 00 00 00 00 
004869 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
00486F 00 00 00 00 00 00 
                           B  1972    
004875 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
004879 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
00487D 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
004881 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
004884 000000              B  1979    fs_file_start_cluster		dw24 0
004887 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
00488A 000000              B  1982    fs_ez80_address				dw24 0
00488D 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
004890 000000              B  1985    fs_in_sector_offset			dw24 0
004893 00                  B  1986    fs_working_sector			db 0
                           B  1987    
004894 000000              B  1988    fs_working_cluster			dw24 0
004897 000000              B  1989    fs_free_cluster				dw24 0
00489A 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
00489D 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
0048A0 000000              B  1994    fs_dir_entry_cluster		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048A3 000000              B  1995    fs_dir_entry_line_offset	dw24 0
0048A6 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
0048A7 00                  B  1998    fs_filepointer_valid		db 0
0048A8 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
0048AB 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
0048AE 00                  B  2003    fs_search_type				db 0
                           B  2004    
0048AF 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3096    
                           A  3097    ;----------------------------------------------
                           A  3098    ; OS Data 
                           A  3099    ;----------------------------------------------
                           A  3100    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
0048B3                     B     9    kernal_table
                           B    10    
0048B3 061800              B    11    	dw24 ext_mount_volumes			;00		
0048B6 B41700              B    12    	dw24 os_get_device_info			;01		
0048B9 6A1600              B    13    	dw24 os_check_volume_format		;02		
0048BC 951A00              B    14    	dw24 ext_change_volume			;03		
0048BF C71700              B    15    	dw24 os_get_volume_info			;04		
0048C2 741600              B    16    	dw24 ext_format					;05		
0048C5 A61600              B    17    	dw24 ext_make_dir				;06		
0048C8 B41600              B    18    	dw24 ext_change_dir				;07		
0048CB C21600              B    19    	dw24 os_parent_dir				;08		
0048CE C81600              B    20    	dw24 os_root_dir				;09		
0048D1 101700              B    21    	dw24 ext_delete_dir				;0a		
0048D4 F91500              B    22    	dw24 ext_find_file				;0b		
0048D7 151600              B    23    	dw24 ext_set_file_pointer		;0c		
0048DA 0E1600              B    24    	dw24 os_set_load_length			;0d		
0048DD 281600              B    25    	dw24 ext_read_bytes_from_file	;0e		
0048E0 CE1600              B    26    	dw24 ext_erase_file				;0f		
0048E3 F61600              B    27    	dw24 ext_rename_file			;10		
0048E6 381600              B    28    	dw24 ext_create_file			;11		
0048E9 4A1600              B    29    	dw24 ext_write_bytes_to_file	;12		
0048EC 631A00              B    30    	dw24 fs_get_total_sectors		;13		
0048EF DC1600              B    31    	dw24 os_goto_first_dir_entry	;14		 
0048F2 E21600              B    32    	dw24 os_get_dir_entry			;15		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0048F5 E81600              B    33    	dw24 os_goto_next_dir_entry		;16		
0048F8 201700              B    34    	dw24 ext_read_sector			;17		
0048FB 4E1700              B    35    	dw24 ext_write_sector			;18		
0048FE D11A00              B    36    	dw24 ext_file_sector_list		;19		
004901 3A1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
004904 461A00              B    38    	dw24 fs_update_dir_cluster		;1b		
004907 EE1600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
00490A CF3700              B    41    	dw24 os_wait_key_press			;1d		
00490D 163800              B    42    	dw24 os_get_key_press			;1e		
004910 3E1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
004913 D51700              B    45    	dw24 ext_serial_get_header		;20		
004916 DF1700              B    46    	dw24 ext_serial_receive_file	;21		 
004919 E81700              B    47    	dw24 ext_serial_send_file		;22		 
00491C F51700              B    48    	dw24 ext_serial_tx				;23		
00491F FC1700              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
004922 1A0F00              B    51    	dw24 ext_print_string			;25		
004925 E73000              B    52    	dw24 hwsc_clear_screen			;26		
004928 B93400              B    53    	dw24 hwsc_wait_vrt				;27		
00492B C31300              B    54    	dw24 os_set_cursor_position		;28		
00492E 351A00              B    55    	dw24 ext_plot_char				;29		
004931 531500              B    56    	dw24 ext_set_pen				;2a		
004934 601500              B    57    	dw24 ext_background_colours		;2b		
004937 143300              B    58    	dw24 hwsc_draw_cursor			;2c		
00493A 5A1500              B    59    	dw24 os_get_pen					;2d		
00493D 303100              B    60    	dw24 hwsc_scroll_up				;2e		
004940 873000              B    61    	dw24 os_set_video_hw_regs		;2f		
004943 441500              B    62    	dw24 os_get_display_size		;30		
004946 A93300              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
004949 E31300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
00494C 391B00              B    66    	dw24 ext_set_envar				;33		
00494F FD1A00              B    67    	dw24 ext_get_envar				;34		
004952 931B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
004955 391400              B    70    	dw24 os_set_mouse_window		;36		
004958 7F1400              B    71    	dw24 os_get_mouse_position		;37		
00495B 561400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
00495E 273500              B    74    	dw24 hwsc_time_delay			;39		
004961 D71100              B    75    	dw24 ext_compare_strings		;3a		
004964 631000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
004967 981000              B    77    	dw24 ext_ascii_to_hexword		;3c		
00496A ED1000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
00496D 0C3500              B    80    	dw24 hwsc_get_version			;3e		
004970 AD1300              B    81    	dw24 os_dont_store_registers	;3f		
004973 EA1B00              B    82    	dw24 os_get_font_info			;40 	
004976 4A3500              B    83    	dw24 hwsc_read_rtc				;41     
004979 723500              B    84    	dw24 hwsc_write_rtc				;42		 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00497C E41B00              B    85    	dw24 os_get_keymap_location		;43		 
00497F CA2900              B    86    	dw24 os_get_mem_high			;44
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    ; Non-packed Text Strings
                           B    90    ;----------------------------------------------
                           B    91    
004982 50524F53 4520666F   B    92    welcome_message			db "PROSE for EZ80P by 
00498A 7220455A 38305020 
004992 62792050 68696C20 
00499A 52757374 6F6E2032 
0049A2 3031310B 0B 
0049A7 53595354 454D2052   B    93    						db "SYSTEM RAM free abo
0049AF 414D2066 72656520 
0049B7 61626F76 653A2024 
0049BF 00 
0049C0 44726976 65733A0B   B    94    storage_txt				db "Drives:",11,0
0049C8 00 
0049C9 434F4D4D 414E4453   B    95    os_dos_cmds_txt			db "COMMANDS",0
0049D1 00 
0049D2 53544152 5455502E   B    96    startup_script_fn		db "STARTUP.SCR",0
0049DA 53435200 
0049DE 2400                B    97    os_hex_prefix_txt		db "$",0
0049E0 4F532056 65727369   B    98    os_version_txt			db "OS Version: $",0	0049E8 6F6E3A20 2400 
0049EE 414D4F45 42412048   B    99    hw_version_txt			db "AMOEBA HW Version: 
0049F6 57205665 7273696F 
0049FE 6E3A2024 00 
004A03 202F2000            B   100    fwd_slash_txt			db " / ",0
004A07 4C6F6164 696E672E   B   101    loading_txt				db "Loading..",11,0
004A0F 2E0B00 
004A12 53617669 6E672E2E   B   102    saving_txt				db "Saving..",11,0
004A1A 0B00 
004A1C 2E657A70 20         B   103    ezp_extension_txt		db ".ezp",32
004A21 0B4D6F72 653F0B0B   B   104    os_more_txt				db 11,"More?",11,11,0
004A29 00 
004A2A 52656769 73746572   B   105    nmi_freeze_txt			db "Register Dump:"
004A32 2044756D 703A 
004A38 0B0B00              B   106    crlfx2_txt				db 11,11,0
004A3B 7800                B   107    rep_char_txt			db "x",0
004A3D 20746F20 00         B   108    to_txt					db " to ",0
004A42 4552524F 5200       B   109    error_txt				db "ERROR",0
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Packed text section
                           B   113    ;----------------------------------------------
                           B   114    
004A48 00444542 5547       B   115    dictionary				db 0,"DEBUG"			004A4E 002D2D2D 2D2D       B   116    						db 0,"-----"			004A54 00494F              B   117    						db 0,"IO"				004A57 002D2D              B   118    						db 0,"--"				004A5A 004D4953 43         B   119    						db 0,"MISC"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004A5F 002D2D2D 2D         B   120    						db 0,"----"				004A64 00616464 72         B   121    						db 0,"addr"				004A69 0050524F 5345       B   122    						db 0,"PROSE"			004A6F 00612062 2063       B   123    						db 0,"a b c"			004A75 00416464 72657373   B   124    						db 0,"Address"			004A7D 00427974 6573       B   125    						db 0,"Bytes"			004A83 00457865 63757461   B   126    						db 0,"Executable"		004A8B 626C65 
004A8E 0048756E 74         B   127    						db 0,"Hunt"				004A93 0046696C 6C         B   128    						db 0,"Fill"				004A98 00476F74 6F         B   129    						db 0,"Goto"				                           B   130    						
004A9D 0053686F 77         B   131    						db 0,"Show"				004AA2 00435055            B   132    						db 0,"CPU"				004AA6 00526567 69737465   B   133    						db 0,"Registers"		004AAE 7273 
004AB0 004173              B   134    						db 0,"As"				004AB3 00415343 4949       B   135    						db 0,"ASCII"			004AB9 00436C65 6172       B   136    						db 0,"Clear"			004ABF 00536372 65656E     B   137    						db 0,"Screen"			004AC6 00446973 61737365   B   138    						db 0,"Disassemble"		004ACE 6D626C65 
004AD2 00537769 746368     B   139    						db 0,"Switch"			004AD9 00436F70 79         B   140    						db 0,"Copy"				004ADE 00446576 696365     B   141    						db 0,"Device"			004AE5 00436861 6E6765     B   142    						db 0,"Change"			004AEC 00447269 7665       B   143    						db 0,"Drive"			004AF2 00446972            B   144    						db 0,"Dir"				004AF6 002F                B   145    						db 0,"/"				004AF8 00666E              B   146    						db 0,"fn"				                           B   147    						
004AFB 0044656C 657465     B   148    						db 0,"Delete"			004B02 0046696C 65         B   149    						db 0,"File"				004B07 00496E66 6F         B   150    						db 0,"Info"				004B0C 00564F4C 783A       B   151    						db 0,"VOLx:"			004B12 004D616B 65         B   152    						db 0,"Make"				004B17 0052656D 6F756E74   B   153    						db 0,"Remount"			004B1F 00537461 7274       B   154    						db 0,"Start"			004B25 00576172 6E696E67   B   155    						db 0,"Warning!"			004B2D 21 
004B2E 00416C6C            B   156    						db 0,"All"				004B32 0052656D 6F7665     B   157    						db 0,"Remove"			004B39 0052656E 616D65     B   158    						db 0,"Rename"			004B40 004F72              B   159    						db 0,"Or"				004B43 00526563 65697665   B   160    						db 0,"Receive"			004B4B 00536176 65         B   161    						db 0,"Save"				004B50 00547261 6E736D69   B   162    						db 0,"Transmit"			004B58 74 
004B59 004C6F61 64         B   163    						db 0,"Load"				                           B   164    						
004B5E 004F532F 4857       B   165    						db 0,"OS/HW"			004B64 00566572 73696F6E   B   166    						db 0,"Version"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004B6C 005B7065 6E207061   B   167    						db 0,"[pen paper]"		004B74 7065725D 
004B78 803A                B   168    						db 80h,":"				004B7A 813E                B   169    						db 81h,">"				004B7C 002A                B   170    						db 0,"*"				004B7E 00566F6C 756D6573   B   171    						db 0,"Volumes"			004B86 8343                B   172    						db 83h,"C"				004B88 844344              B   173    						db 84h,"CD"				004B8B 85434C53            B   174    						db 85h,"CLS"			004B8F 8650454E            B   175    						db 86h,"PEN"			004B93 8744                B   176    						db 87h,"D"				004B95 8844454C            B   177    						db 88h,"DEL"			004B99 89444952            B   178    						db 89h,"DIR"			004B9D 8A48                B   179    						db 8ah,"H"				004B9F 8B46                B   180    						db 8bh,"F"				                           B   181    						
004BA1 004F6E              B   182    						db 0,"On"				004BA4 8C464F52 4D4154     B   183    						db 8ch,"FORMAT"			004BAB 0047                B   184    						db 0,"G"				004BAD 8D4C42              B   185    						db 8dh,"LB"				004BB0 8E4D                B   186    						db 8eh,"M"				004BB2 8F4D4F55 4E54       B   187    						db 8fh,"MOUNT"			004BB8 004265              B   188    						db 0,"Be"				004BBB 9052                B   189    						db 90h,"R"				004BBD 915244              B   190    						db 91h,"RD"				004BC0 92524E              B   191    						db 92h,"RN"				004BC3 935258              B   192    						db 93h,"RX"				004BC6 945342              B   193    						db 94h,"SB"				004BC9 9554                B   194    						db 95h,"T"				004BCB 965458              B   195    						db 96h,"TX"				004BCE 97564552 53         B   196    						db 97h,"VERS"			004BD3 00577269 7465       B   197    						db 0,"Write"			                           B   198    						
004BD9 004D656D            B   199    						db 0,"Mem"				004BDD 00227478 7422       B   200    						db 0,22h,"txt",22h		004BE3 0057696C 6C         B   201    						db 0,"Will"				004BE8 00526174 65         B   202    						db 0,"Rate"				004BED 0061                B   203    						db 0,"a"				004BEF 00507265 70         B   204    						db 0,"Prep"				004BF4 984D44              B   205    						db 98h,"MD"				004BF7 00447269 766573     B   206    						db 0,"Drives"			004BFE 006F6C64 666E       B   207    						db 0,"oldfn"			004C04 006E6577 666E       B   208    						db 0,"newfn"			004C0A 006C656E            B   209    						db 0,"len"				004C0E 00436F6C 6F757273   B   210    						db 0,"Colours"			004C16 993F                B   211    						db 99h,"?"				004C18 00436F6D 6D616E64   B   212    						db 0,"Commands"			004C20 73 
004C21 0020                B   213    						db 0," "				004C23 002D                B   214    						db 0,"-"				                           B   215    						
004C25 00566F6C 756D65     B   216    						db 0,"Volume"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004C2C 0046756C 6C         B   217    						db 0,"Full"				004C31 004E6F74            B   218    						db 0,"Not"				004C35 00466F75 6E64       B   219    						db 0,"Found"			004C3B 004C656E 677468     B   220    						db 0,"Length"			004C42 005A6572 6F         B   221    						db 0,"Zero"				004C47 004F7574            B   222    						db 0,"Out"				004C4B 004F66              B   223    						db 0,"Of"				004C4E 0052616E 6765       B   224    						db 0,"Range"			004C54 00416C72 65616479   B   225    						db 0,"Already"			004C5C 00457869 737473     B   226    						db 0,"Exists"			004C63 004174              B   227    						db 0,"At"				004C66 00526F6F 74         B   228    						db 0,"Root"				004C6B 004D6973 6D617463   B   229    						db 0,"Mismatch"			004C73 68 
004C74 00526571 75657374   B   230    						db 0,"Request"			004C7C 00446174 61         B   231    						db 0,"Data"				                           B   232    				
004C81 00454F46            B   233    						db 0,"EOF"				004C85 00416674 6572       B   234    						db 0,"After"			004C8B 00556E6B 6E6F776E   B   235    						db 0,"Unknown"			004C93 00436F6D 6D616E64   B   236    						db 0,"Command"			004C9B 00426164            B   237    						db 0,"Bad"				004C9F 00486578            B   238    						db 0,"Hex"				004CA3 004E6F              B   239    						db 0,"No"				004CA6 0041626F 72746564   B   240    						db 0,"Aborted"			004CAE 00507265 73656E74   B   241    						db 0,"Present"			004CB6 00436865 636B7375   B   242    						db 0,"Checksum"			004CBE 6D 
004CBF 004C6F61 646564     B   243    						db 0,"Loaded"			004CC6 00436F6D 6D73       B   244    						db 0,"Comms"			004CCC 00457272 6F72       B   245    						db 0,"Error"			004CD2 00417267 756D656E   B   246    						db 0,"Arguments"		004CDA 7473 
004CDC 004C6F73 74         B   247    						db 0,"Lost"				                           B   248    						
004CE1 00                  B   249    						db 0
004CE2 46415431 36         B   250    fat16_txt				db "FAT16"				                           B   251    
004CE7 00536572 69616C     B   252    						db 0,"Serial"			004CEE 0054696D 65         B   253    						db 0,"Time"				004CF3 00466F6E 74         B   254    						db 0,"Font"				004CF8 00546F6F            B   255    						db 0,"Too"				004CFC 004C6F6E 67         B   256    						db 0,"Long"				004D01 00446573 74696E61   B   257    						db 0,"Destination"		004D09 74696F6E 
004D0D 0053656C 65637465   B   258    						db 0,"Selected"			004D15 64 
004D16 00496E76 616C6964   B   259    						db 0,"Invalid"			004D1E 004D6973 73696E67   B   260    						db 0,"Missing"			004D26 004F4B              B   261    						db 0,"OK"				004D29 004F53              B   262    						db 0,"OS"				004D2C 0050726F 74656374   B   263    						db 0,"Protected"		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004D34 6564 
004D36 0041                B   264    						db 0,"A"				004D38 004973              B   265    						db 0,"Is"				004D3B 00456D70 7479       B   266    						db 0,"Empty"			004D41 00456E64            B   267    						db 0,"End"				                           B   268    						
004D45 0024                B   269    						db 0,"$"
004D47 7878                B   270    hex_byte_txt			db "xx"					                           B   271    						
004D49 00417070 656E64     B   272    						db 0,"Append"			004D50 003F                B   273    						db 0,"?"				004D52 0024                B   274    						db 0,"$"				004D54 00417761 6974696E   B   275    						db 0,"Awaiting"			004D5C 67 
004D5D 00526563 65697669   B   276    						db 0,"Receiving"		004D65 6E67 
004D67 0053656E 64696E67   B   277    						db 0,"Sending"			004D6F 000B                B   278    						db 0,11					004D71 002E2E              B   279    						db 0,".."				004D74 004E616D 65         B   280    						db 0,"Name"				004D79 00204279 746573     B   281    						db 0," Bytes"			004D80 00507265 7373       B   282    						db 0,"Press"			004D86 00416E79            B   283    						db 0,"Any"				004D8A 004B6579            B   284    						db 0,"Key"				004D8E 00456E74 6572       B   285    						db 0,"Enter"			004D94 9A455845 43         B   286    						db 9ah,"EXEC"			                           B   287    				
004D99 0052756E            B   288    						db 0,"Run"				004D9D 00536372 697074     B   289    						db 0,"Script"			004DA4 00594553            B   290    yes_txt					db 0,"YES" 				004DA8 00546F              B   291    						db 0,"To"				004DAB 00536574            B   292    						db 0,"Set"				004DAF 00436F6E 74696E75   B   293    						db 0,"Continue"			004DB7 65 
004DB8 004E6F6E 65         B   294    						db 0,"None"				004DBD 00447269 766572     B   295    						db 0,"Driver"			004DC4 9B3C                B   296    						db 9bh,"<"				004DC6 004E6577 6572       B   297    						db 0,"Newer"			004DCC 00526571 75697265   B   298    						db 0,"Required"			004DD4 64 
004DD5 00465047 4120636F   B   299    						db 0,"FPGA config"		004DDD 6E666967 
004DE1 00556E63 68616E67   B   300    						db 0,"Unchanged"		004DE9 6564 
004DEB 00202849 6620666E   B   301    						db 0," (If fn = ! recei
004DF3 203D2021 20726563 
004DFB 65697665 20616E64 
004E03 2072756E 2070726F 
004E0B 6772616D 29 
004E10 9C50414C 45545445   B   302    						db 9ch,"PALETTE"		004E18 0070616C 65747465   B   303    						db 0,"palette"			                           B   304    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004E20 9D4D4F55 5345       B   305    						db 9dh,"MOUSE"			004E26 00456E61 626C65     B   306    						db 0,"Enable"			004E2D 004B6579 626F6172   B   307    						db 0,"Keyboard"			004E35 64 
004E36 00446574 65637465   B   308    						db 0,"Detected"			004E3E 64 
004E3F 004D6F75 7365       B   309    						db 0,"Mouse"			004E45 00536563 746F72     B   310    						db 0,"Sector"			004E4C 00496E63 6F727265   B   311    						db 0,"Incorrect"		004E54 6374 
004E56 9E564D4F 4445       B   312    						db 9eh,"VMODE"			004E5C 00566964 656F       B   313    						db 0,"Video"			004E62 004D6F64 65         B   314    						db 0,"Mode"				004E67 9F464F4E 54         B   315    						db 9fh,"FONT"			004E6C 00416E64            B   316    						db 0,"And"				004E70 00536176 696E67     B   317    						db 0,"Saving"			004E77 00556E73 7570706F   B   318    						db 0,"Unsupported"		004E7F 72746564 
004E83 A0534554            B   319    						db a0h,"SET"			004E87 005B7661 723D7374   B   320    						db 0,"[var=string]"		004E8F 72696E67 5D 
004E94 00456E76 6172       B   321    						db 0,"Envar"			                           B   322    						
004E9A 0001                B   323    						db 0,1					                           B   324    
                           B   325    
                           B   326    
                           B   327    
                           B   328    
004E9C 2199696A 5F916F92   B   329    save_append_msg			db 021h,099h,069h,06ah,
004EA4 9700 
004EA6 2F0A9300            B   330    os_loadaddress_msg 		db 02fh,00ah,093h,0		004EAA 21649300            B   331    os_filesize_msg			db 021h,064h,093h,0		004EAE 94219700            B   332    ser_rec_msg				db 094h,021h,097h,0		004EB2 956F9897 00         B   333    ser_rec2_msg			db 095h,06fh,098h,097h,
004EB7 966F9897 00         B   334    ser_send_msg			db 096h,06fh,098h,097h,
004EBC 9521BBBC 989700     B   335    ser_recsave_msg			db 095h,021h,0bbh,0bch,
004EC3 A77C9097 00         B   336    hw_err_msg				db 0a7h,07ch,090h,097h,
004EC8 607C00              B   337    disk_err_msg			db 060h,07ch,0			004ECB A1779797 00         B   338    script_aborted_msg		db 0a1h,077h,097h,097h,
004ED0 76B2B397 00         B   339    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   340    
004ED5 9700                B   341    packed_help1				db 097h,0
004ED7 0100                B   342    							db 001h,0			004ED9 0200                B   343    							db 002h,0			004EDB 3307095F 4F500B00   B   344    							db 033h,007h,009h,0
004EE3 3407515F 4F1400     B   345    							db 034h,007h,051h,0
004EEA A807095F 4F0B1E17   B   346    							db 0a8h,007h,009h,0
004EF2 00 
                           B   347    
004EF3 37070707 5F195000   B   348    							db 037h,007h,007h,0
004EFB 3B07075F 1700       B   349    							db 03bh,007h,007h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
004F01 3F070754 5F0E5000   B   350    							db 03fh,007h,007h,0
004F09 42075F0F 0A00       B   351    							db 042h,007h,05fh,0
004F0F 3E070709 5F0D5000   B   352    							db 03eh,007h,007h,0
004F17 44075F10 500B00     B   353    							db 044h,007h,05fh,0
004F1E 475F1011 1200       B   354    							db 047h,05fh,010h,0
004F24 4C075F10 50131400   B   355    							db 04ch,007h,05fh,0
                           B   356    	
004F2C 9700                B   357    							db 097h,0
004F2E 0300                B   358    							db 003h,0			004F30 0400                B   359    							db 004h,0			004F32 38231E1D 5F1B601E   B   360    							db 038h,023h,01eh,0
004F3A 1D00 
004F3C 3C1F5F20 2100       B   361    							db 03ch,01fh,05fh,0
004F42 3D5F101D 00         B   362    							db 03dh,05fh,010h,0
004F47 411A995F 551C00     B   363    							db 041h,01ah,099h,0
004F4E 431F075F 2F2100     B   364    							db 043h,01fh,007h,0
004F55 561D5F24 1D00       B   365    							db 056h,01dh,05fh,0
004F5B 455F2557 00         B   366    							db 045h,05fh,025h,0
004F60 481D5F29 1D00       B   367    							db 048h,01dh,05fh,0
004F66 4958595F 2A2100     B   368    							db 049h,058h,059h,0
004F6D 4A1F075F 2C21AD00   B   369    							db 04ah,01fh,007h,0
004F75 4B1F075A 5F2D2100   B   370    							db 04bh,01fh,007h,0
004F7D 4D1F075A 5F2E2100   B   371    							db 04dh,01fh,007h,0
004F85 235F1860 00         B   372    							db 023h,05fh,018h,0
                           B   373    
004F8A 9700                B   374    							db 097h,0
004F8C 0500                B   375    							db 005h,0			004F8E 0600                B   376    							db 006h,0			004F90 395F1516 00         B   377    							db 039h,05fh,015h,0
004F95 9F1F5FA0 A100       B   378    							db 09fh,01fh,05fh,0
004F9B BA1F5F1B 8200       B   379    							db 0bah,01fh,05fh,0
004FA1 B05FB1B0 A700       B   380    							db 0b0h,05fh,0b1h,0
004FA7 AE095F1B AF00       B   381    							db 0aeh,09h,05fh,01
004FAD 3A325F1B 5B00       B   382    							db 03ah,032h,05fh,0
004FB3 BEBF5FA4 C000       B   383    							db 0beh,0bfh,05fh,0
004FB9 4E5F1030 3100       B   384    							db 04eh,05fh,010h,0
004FBF B7095F1B B8B900     B   385    							db 0b7h,09h,5fh,01b
004FC6 5C5F105D 00         B   386    							db 05ch,05fh,010h,0
004FCB 9700                B   387    							db 097h,0
004FCD FF                  B   388    							db 0ffh
                           B   389    
                           B   390    
                           B   391    
                           B   392    
004FCE 4A1D00              B   393    os_cmd_locs					dw24 os_cmd_colon	004FD1 EF2000              B   394    							dw24 os_cmd_gtr		004FD4 C92900              B   395    							dw24 os_cmd_unused	004FD7 F11B00              B   396    							dw24 os_cmd_c		004FDA 5E1C00              B   397    							dw24 os_cmd_cd		004FDD 441D00              B   398    							dw24 os_cmd_cls		004FE0 F12700              B   399    							dw24 os_cmd_pen		004FE3 641D00              B   400    							dw24 os_cmd_d		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   401    					
004FE6 8C1D00              B   402    							dw24 os_cmd_del		004FE9 A11D00              B   403    							dw24 os_cmd_dir		004FEC 1D2000              B   404    							dw24 os_cmd_h		004FEF 9D1E00              B   405    							dw24 os_cmd_f		004FF2 C51E00              B   406    							dw24 os_cmd_format	004FF5 232100              B   407    							dw24 os_cmd_lb		004FF8 B22100              B   408    							dw24 os_cmd_m		004FFB B22600              B   409    							dw24 os_cmd_remount
                           B   410    
004FFE 092200              B   411    							dw24 os_cmd_r		005001 3A2300              B   412    							dw24 os_cmd_rd		005004 472300              B   413    							dw24 os_cmd_rn		005007 CB2300              B   414    							dw24 os_cmd_rx		00500A 632300              B   415    							dw24 os_cmd_sb		00500D 5E2600              B   416    							dw24 os_cmd_t		005010 F22500              B   417    							dw24 os_cmd_tx		005013 BE2600              B   418    							dw24 os_cmd_vers	                           B   419    							
005016 FC2100              B   420    							dw24 os_cmd_md		005019 CB2000              B   421    							dw24 os_cmd_help	00501C EF2600              B   422    							dw24 os_cmd_exec	00501F EF2700              B   423    							dw24 os_cmd_ltn		005022 112800              B   424    							dw24 os_cmd_palette
005025 422800              B   425    							dw24 os_cmd_mouse	005028 7E2800              B   426    							dw24 os_cmd_vmode	00502B 1C2900              B   427    							dw24 os_cmd_font	                           B   428    							
00502E 6D2900              B   429    							dw24 os_cmd_set		                           B   430    							
                           B   431    								
005031 00                  B   432    packed_msg_list				db 0				                           B   433    		
005032 606100              B   434    							db 060h,061h,0		005035 21626300            B   435    							db 021h,062h,063h,0
005039 1D6100              B   436    							db 01dh,061h,0		00503C 628C1D00            B   437    							db 062h,08ch,01dh,0
005040 1D8D628E 00         B   438    							db 01dh,08dh,062h,0
005045 628C2100            B   439    							db 062h,08ch,021h,0
005049 21648D65 00         B   440    							db 021h,064h,08dh,0
00504E 0A666768 00         B   441    							db 00ah,066h,067h,0
005053 2199696A 00         B   442    							db 021h,099h,069h,0
005058 696B6C00            B   443    							db 069h,06bh,06ch,0
                           B   444    					
00505C 727300              B   445    							db 072h,073h,0		00505F 877500              B   446    							db 087h,075h,0		005062 76219900            B   447    							db 076h,021h,099h,0
                           B   448    					
005066 87B500              B   449    							db 087h,0b5h,0		005069 797400              B   450    							db 079h,074h,0		00506C 9A7A00              B   451    bytes_loaded_msg			db 09ah,07ah,0		00506F 7B7C00              B   452    							db 07bh,07ch,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005072 747D00              B   453    							db 074h,07dh,0		                           B   454    
005075 627F00              B   455    format_err_msg				db 062h,07fh,0		                           B   456    
005078 816600              B   457    							db 081h,066h,0		00507B 21998384 00         B   458    							db 021h,099h,083h,0
005080 76260A00            B   459    							db 076h,026h,00ah,0
005084 76216400            B   460    							db 076h,021h,064h,0
005088 2D7700              B   461    							db 02dh,077h,0		00508B 2D7C6B85 00         B   462    							db 02dh,07ch,06bh,0
005090 628C080C 00         B   463    							db 062h,08ch,08h,0c
005095 A9316708 AA00       B   464    							db 0a9h,031h,067h,0
00509B 768F0A00            B   465    							db 076h,08fh,00ah,0
00509F 76850A00            B   466    							db 076h,085h,00ah,0
                           B   467    					
0050A3 746800              B   468    							db 074h,068h,0		0050A6 887D00              B   469    							db 088h,07dh,0		0050A9 8900                B   470    ok_msg						db 089h,0			                           B   471    					
0050AB 876000              B   472    							db 087h,060h,0		0050AE 1A627800            B   473    							db 01ah,062h,078h,0
                           B   474    					
0050B2 1D626300            B   475    							db 01dh,062h,063h,0
0050B6 7700                B   476    							db 077h,0			                           B   477    					
0050B8 21996D00            B   478    							db 021h,099h,06dh,0
0050BC 8A508B00            B   479    							db 08ah,050h,08bh,0
0050C0 6F71706E 00         B   480    							db 06fh,071h,070h,0
0050C5 763600              B   481    no_vols_msg					db 076h,036h,0		0050C8 97A66300            B   482    none_found_msg				db 097h,0a6h,063h,0
                           B   483    							
0050CC B62100              B   484    							db 0b6h,021h,0		0050CF A9316708 AA00       B   485    							db 0a9h,031h,067h,0
0050D5 21AC00              B   486    							db 021h,0ach,0		                           B   487    							
0050D8 766F00              B   488    							db 076h,06fh,0		0050DB 746F00              B   489    							db 074h,06fh,0		0050DE 66676800            B   490    							db 066h,067h,068h,0
0050E2 BD1A00              B   491    							db 0bdh,01ah,0		0050E5 1A62B300            B   492    							db 01ah,062h,0b3h,0
0050E9 1A7C00              B   493    							db 01ah,07ch,0		                           B   494    							
0050EC FF                  B   495    							db 0ffh				                           B   496    
                           B   497    ;----------------------------------------------
                           B   498    
0050ED                     B   499    kernal_error_code_translation
                           B   500    
0050ED 242D2E14 08110F2A   B   501    					db 24h,2dh,2eh,14h, 08h,11h
0050F5 2F303132 
                           B   502    					
0050F9                     B   503    fs_error_code_translation
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   504    
0050F9 00010203 04050607   B   505    					db 00h,01h,02h,03h,04h,05h,
005101 08090A0B 0C0D1321 
005109 22232425 260E0000   B   506    					db 22h,23h,24h,25h,26h,0eh,
                           B   507    
                           B   508    
                           B   509    ;----------------------------------------------
                           B   510    ; Scancode to ASCII keymaps
                           B   511    ;----------------------------------------------
                           B   512    
                           C     0    include	'UK_keymap.asm'
005111                     C     1    keymap:
005111 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005119 00000000 00006000 
005121 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005129 00007A73 61773200 
005131 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005139 00207666 74723500 
005141 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005149 00006D6A 75373800 
005151 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005159 002E2F6C 3B702D00 
005161 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005169 0000005D 00230000 
005171 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005179 00000000 00000000 
005181 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005189 21000000 5A534157 
005191 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005199 A3000020 56465452 
0051A1 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
0051A9 5E000000 4D4A5526 
0051B1 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
0051B9 2800003E 3F4C3A50 
0051C1 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
0051C9 00000000 007D007E 
0051D1 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
0051D9 00000000 00000000 
0051E1 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
0051E9 00000000 00000000 
0051F1 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
0051F9 00000000 00000000 
005201 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005209 00000000 00000000 
005211 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005219 00000000 00000000 
005221 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005229 00000000 00000000 
005231 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   514    
       00005111            B   515    unshifted_keymap equ keymap+00h
       00005173            B   516    shifted_keymap   equ keymap+62h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
       000051D5            B   517    alted_keymap	 equ keymap+c4h
                           B   518    	
                           B   519    ;----------------------------------------------
                           B   520    
005237 00                  B   521    ui_index				db 0				; u
005238 00                  B   522    ui_maxchars				db 0				; "
005239 000000              B   523    ui_string_addr			dw24 0				; "
                           B   524    
                           B   525    ;----------------------------------------------
                           B   526    ; OS Display parameters
                           B   527    ;----------------------------------------------
                           B   528    
00523C 00                  B   529    video_mode				db 0
00523D 0700                B   530    current_pen				dw 07h				; c
00523F 0000                B   531    background_colour		dw 00h				; f
                           B   532    
005241 00000F00 000F0F0F   B   533    pen_palette				dw 0000h,000fh,0f00h,0f
005249 F000FF00 F00FFF0F 
005251 55059909 CC0C710F   B   534    						dw 0555h,0999h,0ccch,0f
005259 7F00F80D 40088C03 
                           B   535    
005261 00                  B   536    plotchar_colour			db 0				; c
                           B   537    
005262 00                  B   538    req_cursor_image		db 0
005263 00                  B   539    active_cursor_image		db 0
                           B   540    
005264                     B   541    display_parameters							; D
                           B   542    ;-----------------
                           B   543    
005264 000000              B   544    window_rows				dw24 0				; i
005267 000000              B   545    window_columns			dw24 0				; i
00526A 000000              B   546    window_width_bytes		dw24 0				; i
00526D 000000              B   547    window_height_lines		dw24 0				; i
                           B   548    
005270 040000 080000       B   549    font_parameters			dw24 4,8,0,0
005276 000000 000000 
       00005270            B   550    font_width_bytes		equ font_parameters+0	       00005273            B   551    font_height_lines		equ font_parameters+3
       00005276            B   552    font_addr				equ font_parameters+6
       00005279            B   553    font_length				equ font_parameters+9
                           B   554    
00527C 000000              B   555    video_window_address	dw24 0
00527F 000000              B   556    charmap_address			dw24 0
005282 000000              B   557    attributes_address		dw24 0
005285 000000              B   558    cursor_image_address	dw24 0
005288 000000              B   559    total_window_bytes		dw24 0
00528B 000000              B   560    total_charmap_bytes		dw24 0
00528E 000000              B   561    total_row_bytes			dw24 0				; i
005291 00                  B   562    window_pixel_doubling	db 0
                           B   563    
                           B   564    ;==============================================
                           B   565    ;  Serial Routine Data
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   566    ;==============================================
                           B   567    
005292 000000              B   568    serial_ez80_address		dw24 0
005295 000000              B   569    serial_file_length		dw24 0
005298 000000              B   570    serial_fn_addr			dw24 0
00529B 00 00 00 00 00 00   B   571    serial_filename			blkb 18,0		
0052A1 00 00 00 00 00 00 
0052A7 00 00 00 00 00 00 
0052AD 00                  B   572    serial_fn_length		db 0
0052AE 00                  B   573    serial_timeout			db 0
                           B   574    
0052AF 00 00 00 00 00 00   B   575    serial_fileheader		blkb 20,0
0052B5 00 00 00 00 00 00 
0052BB 00 00 00 00 00 00 
0052C1 00 00 
0052C3 5A383050 2E464845   B   576    serial_header_id		db "Z80P.FHEADER"		0052CB 41444552 
0052CF 00                  B   577    serial_transfer_started	db 0
                           B   578    
0052D0 00                  B   579    anim_wait_count			db 0
                           B   580    
                           B   581    ;==============================================
                           B   582    
0052D1 F3C8                B   583    intellimouse_seq	db 0f3h,200
0052D3 F364                B   584    					db 0f3h,100
0052D5 F350                B   585    					db 0f3h,80
                           B   586    
0052D7 E803                B   587    mouse_settings_seq	db 0e8h,default_resolution
0052D9 E6                  B   588    					db default_scaling
0052DA F364                B   589    					db 0f3h,default_sample_rate
0052DC F4                  B   590    					db 0f4h
                           B   591    					
                           B   592    ;----------------------------------------------
                           B   593    ; FILE SYSTEM RELATED VARIABLES
                           B   594    ;----------------------------------------------
                           B   595    
0052DD 00                  B   596    boot_drive			db 0
                           B   597    
0052DE 00                  B   598    current_volume		db 0
                           B   599    	
0052DF 00                  B   600    current_driver		db 0			;normally u
                           B   601    
0052E0 00                  B   602    device_count		db 0			;IE: the nu
                           B   603    
0052E1 00                  B   604    volume_count		db 0
                           B   605    				
0052E2 20564F4C 303A00     B   606    vol_txt				db " VOL0:",0	;space pref
0052E9 44455630 3A00       B   607    dev_txt				db "DEV0:",0
                           B   608    
0052EF 000000              B   609    sector_rd_wr_addr	dw24 0
                           B   610    
                           B   611    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   612    
                           B   613    ; Add storage device drivers here, end with 0
                           B   614    
0052F2 DA2900              B   615    driver_table		dw24 sd_card_driver	;Device
0052F5 000000              B   616    					dw24 0				;last d
                           B   617    
                           B   618    ; Each driver's code should have a header in th
                           B   619    ; ---------------------------------------------
                           B   620    ; $0    = JP to get ID routin
                           B   621    ; $4    = JP to read sector routine
                           B   622    ; $8    = JP to write sector routinee
                           B   623    ; $c    = ASCII name of device type (null termi
                           B   624    ;==============================================
                           B   625    
0052F8                     B   626    volume_dir_clusters
                           B   627    
0052F8 00 00 00 00 00 00   B   628    					blkb max_volumes*3,0
0052FE 00 00 00 00 00 00 
005304 00 00 00 00 00 00 
00530A 00 00 00 00 00 00 
                           B   629    	
005310                     B   630    volume_mount_list
                           B   631    
005310 00 00 00 00 00 00   B   632    					blkb max_volumes*16,0
005316 00 00 00 00 00 00 
00531C 00 00 00 00 00 00 
005322 00 00 00 00 00 00 
005328 00 00 00 00 00 00 
00532E 00 00 00 00 00 00 
005334 00 00 00 00 00 00 
00533A 00 00 00 00 00 00 
005340 00 00 00 00 00 00 
005346 00 00 00 00 00 00 
00534C 00 00 00 00 00 00 
005352 00 00 00 00 00 00 
005358 00 00 00 00 00 00 
00535E 00 00 00 00 00 00 
005364 00 00 00 00 00 00 
00536A 00 00 00 00 00 00 
005370 00 00 00 00 00 00 
005376 00 00 00 00 00 00 
00537C 00 00 00 00 00 00 
005382 00 00 00 00 00 00 
005388 00 00 00 00 00 00 
00538E 00 00 
                           B   633    
                           B   634    ; Each entry is 16 bytes in the form:
                           B   635    
                           B   636    ; OFFSETS
                           B   637    ; -------
                           B   638    ; $00 - Volume is present (0/1)
                           B   639    ; $01 - Volume's host driver number (1 byte)	Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   640    ; $02 - [reserved]
                           B   641    ; $03 - [reserved]
                           B   642    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   643    ; $07 - Partition number on host drive (0/1/2/3
                           B   644    ; $08 - Offset in sectors from MBR to partition
                           B   645    ; $0c - [reserved]
                           B   646    ; $0d - [reserved]	
                           B   647    ; $0e - [reserved]
                           B   648    ; $0f - [reserved]
                           B   649    
                           B   650    ;==============================================
                           B   651    
005390                     B   652    host_device_hardware_info
                           B   653    
005390 00 00 00 00 00 00   B   654    					blkb 32*4,0
005396 00 00 00 00 00 00 
00539C 00 00 00 00 00 00 
0053A2 00 00 00 00 00 00 
0053A8 00 00 00 00 00 00 
0053AE 00 00 00 00 00 00 
0053B4 00 00 00 00 00 00 
0053BA 00 00 00 00 00 00 
0053C0 00 00 00 00 00 00 
0053C6 00 00 00 00 00 00 
0053CC 00 00 00 00 00 00 
0053D2 00 00 00 00 00 00 
0053D8 00 00 00 00 00 00 
0053DE 00 00 00 00 00 00 
0053E4 00 00 00 00 00 00 
0053EA 00 00 00 00 00 00 
0053F0 00 00 00 00 00 00 
0053F6 00 00 00 00 00 00 
0053FC 00 00 00 00 00 00 
005402 00 00 00 00 00 00 
005408 00 00 00 00 00 00 
00540E 00 00 
                           B   655    
                           B   656    ; Each entry is 32 bytes..
                           B   657    ;
                           B   658    ; OFFSETS
                           B   659    ; -------
                           B   660    ; $00 - Device driver number
                           B   661    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   662    ; $05 - Zero terminated hardware name (22 ASCII
                           B   663    ; (remaining bytes to $1F currently unused)
                           B   664    
                           B   665    ;----------------------------------------------
                           B   666    
005410 000000              B   667    dhwn_temp_pointer		dw24 0
                           B   668    
005413 00                  B   669    partition_temp			db 0
005414 00                  B   670    vols_on_device_temp		db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005415 00                  B   671    sys_driver_backup		db 0
005416 00                  B   672    os_quiet_mode			db 0
                           B   673    
005417 265D00              B   674    default_load_addr		dw24 os_max_addr
                           B   675    
                           B   676    ;----------------------------------------------
                           B   677    
00541A 00 00 00 00 00 00   B   678    time_data				blkb	7,0
005420 00 
                           B   679    
005421 00                  B   680    frozen					db 0
005422 01                  B   681    first_run				db 1
005423 01                  B   682    devices_connected		db 1					                           B   683    
                           B   684    ;----------------------------------------------
                           B   685    
005424 265D00              B   686    sys_ram_high			dw24 os_max_addr
005427 000080              B   687    vram_a_high				dw24 vram_a_addr
00542A 0000C0              B   688    vram_b_high				dw24 vram_b_addr
                           B   689    
                           B   690    ;----------------------------------------------
                           B   691    
00542D 00                  B   692    store_a1				db 0		
00542E 000000              B   693    store_bc1				dw24 0
005431 000000              B   694    store_de1				dw24 0
005434 000000              B   695    store_hl1				dw24 0
005437 00                  B   696    store_a2				db 0
005438 000000              B   697    store_bc2				dw24 0
00543B 000000              B   698    store_de2				dw24 0
00543E 000000              B   699    store_hl2				dw24 0
005441 000000              B   700    store_ix				dw24 0
005444 000000              B   701    store_iy				dw24 0
005447 000000              B   702    store_pc				dw24 0		;only relev
00544A 000000              B   703    store_spl				dw24 0
00544D 0000                B   704    store_sps				dw 0
00544F 00                  B   705    store_mbase				db 0
005450 00                  B   706    store_f	 				db 0
005451 00                  B   707    store_adl				db 0
                           B   708    
                           B   709    ;----------------------------------------------
005452                     B   710    os_variables
                           B   711    ;----------------------------------------------
                           B   712    
005452 00                  B   713    store_registers			db 0
005453 000000              B   714    com_start_addr			dw24 0
                           B   715    
005456 00 00 00 00 00 00   B   716    temp_string				blkb max_buffer_chars+2
00545C 00 00 00 00 00 00 
005462 00 00 00 00 00 00 
005468 00 00 00 00 00 00 
00546E 00 00 00 00 00 00 
005474 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00547A 00 00 00 00 00 00 
005480 00 00 00 00 00 00 
005486 00 00 00 00 00 00 
00548C 00 00 00 00 00 00 
005492 00 00 00 00 00 00 
005498 00 00 00 00 00 00 
00549E 00 00 00 00 00 00 
0054A4 00 00 00 00 
0054A8 00 00 00 00 00 00   B   717    script_fn				blkb 13,0
0054AE 00 00 00 00 00 00 
0054B4 00 
                           B   718    
0054B5 00                  B   719    sector_lba0				db 0			; keep 
0054B6 00                  B   720    sector_lba1				db 0
0054B7 00                  B   721    sector_lba2				db 0
0054B8 00                  B   722    sector_lba3				db 0
                           B   723    
                           B   724    ;----------------------------------------------
                           B   725    
0054B9 000000              B   726    cursor_pos				dw24 0			; 3rd b
                           B   727    
       000054B9            B   728    cursor_y 				equ cursor_pos
       000054BA            B   729    cursor_x 				equ cursor_pos+1
                           B   730    						
0054BC 00                  B   731    cursorflashtimer		db 0
0054BD 00                  B   732    cursor_status			db 0
0054BE 00                  B   733    os_linecount			db 0
                           B   734    		
0054BF 000000              B   735    mem_mon_addr			dw24 0
0054C2 000000              B   736    cmdop_start_address		dw24 0
0054C5 000000              B   737    cmdop_end_address		dw24 0
0054C8 000000              B   738    copy_dest_address		dw24 0
0054CB 000000              B   739    hex_address				dw24 0
                           B   740    
0054CE 000000              B   741    find_hexstringascii 	dw24 0
0054D1 000000              B   742    xrr_temp				dw24 0
0054D4 00                  B   743    temphex					db 0
0054D5 00                  B   744    fillbyte				db 0 
0054D6 00                  B   745    ui_im_cache				db 0
                           B   746    
0054D7 00 00 00 00 00 00   B   747    commandstring			blkb max_buffer_chars+2
0054DD 00 00 00 00 00 00 
0054E3 00 00 00 00 00 00 
0054E9 00 00 00 00 00 00 
0054EF 00 00 00 00 00 00 
0054F5 00 00 00 00 00 00 
0054FB 00 00 00 00 00 00 
005501 00 00 00 00 00 00 
005507 00 00 00 00 00 00 
00550D 00 00 00 00 00 00 
005513 00 00 00 00 00 00 
005519 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00551F 00 00 00 00 00 00 
005525 00 00 00 00 
005529 00 00 00 00 00 00   B   748    output_line				blkb max_buffer_chars+2
00552F 00 00 00 00 00 00 
005535 00 00 00 00 00 00 
00553B 00 00 00 00 00 00 
005541 00 00 00 00 00 00 
005547 00 00 00 00 00 00 
00554D 00 00 00 00 00 00 
005553 00 00 00 00 00 00 
005559 00 00 00 00 00 00 
00555F 00 00 00 00 00 00 
005565 00 00 00 00 00 00 
00556B 00 00 00 00 00 00 
005571 00 00 00 00 00 00 
005577 00 00 00 00 
                           B   749    				
00557B 000000              B   750    os_args_loc				dw24 0
00557E 000000              B   751    os_args_pos_cache		dw24 0
                           B   752    
005581 000000              B   753    os_dir_block_cache  	dw24 0
005584 000000              B   754    os_extcmd_jmp_addr		dw24 0
                           B   755    
005587 00                  B   756    in_script_flag			db 0
005588 000000              B   757    script_dir				dw24 0
00558B 00 00 00 00 00 00   B   758    script_buffer			blkb max_buffer_chars+2
005591 00 00 00 00 00 00 
005597 00 00 00 00 00 00 
00559D 00 00 00 00 00 00 
0055A3 00 00 00 00 00 00 
0055A9 00 00 00 00 00 00 
0055AF 00 00 00 00 00 00 
0055B5 00 00 00 00 00 00 
0055BB 00 00 00 00 00 00 
0055C1 00 00 00 00 00 00 
0055C7 00 00 00 00 00 00 
0055CD 00 00 00 00 00 00 
0055D3 00 00 00 00 00 00 
0055D9 00 00 00 00 
0055DD 000000              B   759    script_file_offset		dw24 0
0055E0 000000              B   760    script_buffer_offset	dw24 0
0055E3 000000              B   761    script_orig_dir			dw24 0
                           B   762    
0055E6 0000                B   763    char_to_print			db 0,0	; zero terminat
                           B   764    
                           B   765    ;----------------------------------------------
                           B   766    ; Keyboard buffer and registers
                           B   767    ;----------------------------------------------
                           B   768    
0055E8 00 00 00 00 00 00   B   769    scancode_buffer			blkb 32,0
0055EE 00 00 00 00 00 00 
0055F4 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0055FA 00 00 00 00 00 00 
005600 00 00 00 00 00 00 
005606 00 00 
                           B   770    
005608 00                  B   771    key_buf_wr_idx			db 0
005609 00                  B   772    key_buf_rd_idx			db 0
00560A 00                  B   773    key_release_mode		db 0		
00560B 00                  B   774    not_currently_used		db 0
00560C 00                  B   775    key_mod_flags			db 0
00560D 00                  B   776    insert_mode				db 0
00560E 00                  B   777    current_scancode		db 0
00560F 00                  B   778    current_asciicode		db 0
                           B   779    
                           B   780    ;----------------------------------------------
                           B   781    ; Mouse related registers
                           B   782    ;----------------------------------------------
                           B   783    
005610 00                  B   784    mouse_id				db 0
005611 00                  B   785    mouse_packet_size		db 0
                           B   786    
005612 00 00 00 00         B   787    mouse_packet			blkb 4,0			; t
005616 00                  B   788    mouse_packet_index		db 0				;
005617 00                  B   789    mouse_buttons			db 0				;
005618 000000              B   790    mouse_disp_x			dw24 0				; c
00561B 000000              B   791    mouse_disp_y			dw24 0				; c
00561E 00                  B   792    mouse_wheel				db 0				; m
00561F 00                  B   793    mouse_updated			db 0
                           B   794    
005620 000000              B   795    mouse_window_size_x		dw24 0				; t
005623 000000              B   796    mouse_window_size_y		dw24 0
005626 000000              B   797    mouse_abs_x				dw24 0
005629 000000              B   798    mouse_abs_y				dw24 0
00562C 000000              B   799    mouse_disp_x_old		dw24 0
00562F 000000              B   800    mouse_disp_y_old		dw24 0
005632 000000              B   801    mouse_disp_x_buffer		dw24 0
005635 000000              B   802    mouse_disp_y_buffer		dw24 0
005638 00                  B   803    mouse_new_window		db 0
                           B   804    
                           B   805    ;----------------------------------------------
       000054B9            B   806    first_os_var			equ cursor_y
005639 00                  B   807    last_os_var				db 0
                           B   808    ;----------------------------------------------
                           B   809    
                           B   810    ;==============================================
                           B   811    ; Environment variables
                           B   812    ;==============================================
                           B   813    
00563A 4552524F 523D3030   B   814    envar_list				db "ERROR=00",0
005642 00 
005643 FF                  B   815    first_ext_ev_entry		db 0ffh
005644 00 00 00 00 00 00   B   816    						blkb envar_buffer_size,
00564A 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005650 00 00 00 00 00 00 
005656 00 00 00 00 00 00 
00565C 00 00 00 00 00 00 
005662 00 00 00 00 00 00 
005668 00 00 00 00 00 00 
00566E 00 00 00 00 00 00 
005674 00 00 00 00 00 00 
00567A 00 00 00 00 00 00 
005680 00 00 00 00 00 00 
005686 00 00 00 00 00 00 
00568C 00 00 00 00 00 00 
005692 00 00 00 00 00 00 
005698 00 00 00 00 00 00 
00569E 00 00 00 00 00 00 
0056A4 00 00 00 00 00 00 
0056AA 00 00 00 00 00 00 
0056B0 00 00 00 00 00 00 
0056B6 00 00 00 00 00 00 
0056BC 00 00 00 00 00 00 
0056C2 00 00 00 00 00 00 
0056C8 00 00 00 00 00 00 
0056CE 00 00 00 00 00 00 
0056D4 00 00 00 00 00 00 
0056DA 00 00 00 00 00 00 
0056E0 00 00 00 00 00 00 
0056E6 00 00 00 00 00 00 
0056EC 00 00 00 00 00 00 
0056F2 00 00 00 00 00 00 
0056F8 00 00 00 00 00 00 
0056FE 00 00 00 00 00 00 
005704 00 00 00 00 00 00 
00570A 00 00 00 00 00 00 
005710 00 00 00 00 00 00 
005716 00 00 00 00 00 00 
00571C 00 00 00 00 00 00 
005722 00 00 00 00 00 00 
005728 00 00 00 00 00 00 
00572E 00 00 00 00 00 00 
005734 00 00 00 00 00 00 
00573A 00 00 00 00 00 00 
005740 00 00 00 00 
                           B   817    
005744 435600              B   818    envar_top_loc			dw24 first_ext_ev_entry
                           B   819    
                           B   820    ;==============================================
                           B   821    
                           B     0    	include		'prose_font_packed.asm'
005747                     B     1    packed_font_start:
005747 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
00574F 00181800 EEEE6601 
005757 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
00575F 6C00187E E07C0EFC 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
005767 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
00576F C60078EC EC78EDEE 
005777 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
00577F 18300160 03301800 
005787 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
00578F 105438FE 38541000 
005797 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
00579F 07383870 0100037E 
0057A7 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
0057AF 0E1C3870 E0007CE6 
0057B7 EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
0057BF 0138047C 007CEE0E 
0057C7 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
0057CF 0C0ECE7C 001E3E76 
0057D7 E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
0057DF 010E03FC 007EE0FC 
0057E7 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
0057EF 18013803 007CE6E6 
0057F7 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
0057FF 037E0E7C 01000318 
005807 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
00580F 30003030 600E1C38 
005817 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
00581F 007E0100 0370381C 
005827 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
00582F 3C380038 007CE601 
005837 EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
00583F FE01E603 00FCE6E6 
005847 FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
00584F E003E67C 00FC01E6 
005857 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
00585F E0FE00FE E0E0F801 
005867 E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
00586F E67C0001 E603FE01 
005877 E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
00587F 007E011C 04DC7800 
005887 E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
00588F 01E006FE 00C6EEFE 
005897 D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
00589F FEEEE6E6 007C01E6 
0058A7 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
0058AF E0E0007C 01E603EA 
0058B7 EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
0058BF E6E6007C EEE07C0E 
0058C7 EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
0058CF 01E6067C 0001E605 
0058D7 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
0058DF 6C00E6E6 6C3874E6 
0058E7 E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
0058EF 00FE0E1C 3870E0FE 
0058F7 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
0058FF E070381C 0E060078 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
005907 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
00590F C601000B FE381C01 
005917 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
00591F 00E0E0FC E6E6FC01 
005927 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
00592F 0006067E E6E67E01 
005937 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
00593F 003E70FC 01700301 
005947 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
00594F 00E0E0FC 01E60300 
005957 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
00595F 001C0001 1C047800 
005967 E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
00596F 78013804 7C010003 
005977 ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
00597F FC01E604 0100037C 
005987 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
00598F E6E6FCE0 E000007E 
005997 E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
00599F E601E003 0100037E 
0059A7 F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
0059AF 0138031E 01000301 
0059B7 E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
0059BF 036C3801 0003E2EA 
0059C7 FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
0059CF 387CE601 000301E6 
0059D7 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
0059DF 3870FE00 3C303060 
0059E7 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
0059EF 7818180C 18187800 
0059F7 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
0059FF 070100FF 01001A1C 
005A07 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
005A0F 297CC6BA A2BAC67C 
005A17 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
005A1F FF0100FF 01009C 
005A26                     B    48    packed_font_end:
                           A  3103    
005A26 00 00 00 00 00 00   A  3104    sector_buffer	blkb 512,0
005A2C 00 00 00 00 00 00 
005A32 00 00 00 00 00 00 
005A38 00 00 00 00 00 00 
005A3E 00 00 00 00 00 00 
005A44 00 00 00 00 00 00 
005A4A 00 00 00 00 00 00 
005A50 00 00 00 00 00 00 
005A56 00 00 00 00 00 00 
005A5C 00 00 00 00 00 00 
005A62 00 00 00 00 00 00 
005A68 00 00 00 00 00 00 
005A6E 00 00 00 00 00 00 
005A74 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
005A7A 00 00 00 00 00 00 
005A80 00 00 00 00 00 00 
005A86 00 00 00 00 00 00 
005A8C 00 00 00 00 00 00 
005A92 00 00 00 00 00 00 
005A98 00 00 00 00 00 00 
005A9E 00 00 00 00 00 00 
005AA4 00 00 00 00 00 00 
005AAA 00 00 00 00 00 00 
005AB0 00 00 00 00 00 00 
005AB6 00 00 00 00 00 00 
005ABC 00 00 00 00 00 00 
005AC2 00 00 00 00 00 00 
005AC8 00 00 00 00 00 00 
005ACE 00 00 00 00 00 00 
005AD4 00 00 00 00 00 00 
005ADA 00 00 00 00 00 00 
005AE0 00 00 00 00 00 00 
005AE6 00 00 00 00 00 00 
005AEC 00 00 00 00 00 00 
005AF2 00 00 00 00 00 00 
005AF8 00 00 00 00 00 00 
005AFE 00 00 00 00 00 00 
005B04 00 00 00 00 00 00 
005B0A 00 00 00 00 00 00 
005B10 00 00 00 00 00 00 
005B16 00 00 00 00 00 00 
005B1C 00 00 00 00 00 00 
005B22 00 00 00 00 00 00 
005B28 00 00 00 00 00 00 
005B2E 00 00 00 00 00 00 
005B34 00 00 00 00 00 00 
005B3A 00 00 00 00 00 00 
005B40 00 00 00 00 00 00 
005B46 00 00 00 00 00 00 
005B4C 00 00 00 00 00 00 
005B52 00 00 00 00 00 00 
005B58 00 00 00 00 00 00 
005B5E 00 00 00 00 00 00 
005B64 00 00 00 00 00 00 
005B6A 00 00 00 00 00 00 
005B70 00 00 00 00 00 00 
005B76 00 00 00 00 00 00 
005B7C 00 00 00 00 00 00 
005B82 00 00 00 00 00 00 
005B88 00 00 00 00 00 00 
005B8E 00 00 00 00 00 00 
005B94 00 00 00 00 00 00 
005B9A 00 00 00 00 00 00 
005BA0 00 00 00 00 00 00 
005BA6 00 00 00 00 00 00 
005BAC 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
005BB2 00 00 00 00 00 00 
005BB8 00 00 00 00 00 00 
005BBE 00 00 00 00 00 00 
005BC4 00 00 00 00 00 00 
005BCA 00 00 00 00 00 00 
005BD0 00 00 00 00 00 00 
005BD6 00 00 00 00 00 00 
005BDC 00 00 00 00 00 00 
005BE2 00 00 00 00 00 00 
005BE8 00 00 00 00 00 00 
005BEE 00 00 00 00 00 00 
005BF4 00 00 00 00 00 00 
005BFA 00 00 00 00 00 00 
005C00 00 00 00 00 00 00 
005C06 00 00 00 00 00 00 
005C0C 00 00 00 00 00 00 
005C12 00 00 00 00 00 00 
005C18 00 00 00 00 00 00 
005C1E 00 00 00 00 00 00 
005C24 00 00 
                           A  3105    
005C26 00 00 00 00 00 00   A  3106    scratch_pad		blkb 256,0
005C2C 00 00 00 00 00 00 
005C32 00 00 00 00 00 00 
005C38 00 00 00 00 00 00 
005C3E 00 00 00 00 00 00 
005C44 00 00 00 00 00 00 
005C4A 00 00 00 00 00 00 
005C50 00 00 00 00 00 00 
005C56 00 00 00 00 00 00 
005C5C 00 00 00 00 00 00 
005C62 00 00 00 00 00 00 
005C68 00 00 00 00 00 00 
005C6E 00 00 00 00 00 00 
005C74 00 00 00 00 00 00 
005C7A 00 00 00 00 00 00 
005C80 00 00 00 00 00 00 
005C86 00 00 00 00 00 00 
005C8C 00 00 00 00 00 00 
005C92 00 00 00 00 00 00 
005C98 00 00 00 00 00 00 
005C9E 00 00 00 00 00 00 
005CA4 00 00 00 00 00 00 
005CAA 00 00 00 00 00 00 
005CB0 00 00 00 00 00 00 
005CB6 00 00 00 00 00 00 
005CBC 00 00 00 00 00 00 
005CC2 00 00 00 00 00 00 
005CC8 00 00 00 00 00 00 
005CCE 00 00 00 00 00 00 
005CD4 00 00 00 00 00 00 
005CDA 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jun-11     19:48:28     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
005CE0 00 00 00 00 00 00 
005CE6 00 00 00 00 00 00 
005CEC 00 00 00 00 00 00 
005CF2 00 00 00 00 00 00 
005CF8 00 00 00 00 00 00 
005CFE 00 00 00 00 00 00 
005D04 00 00 00 00 00 00 
005D0A 00 00 00 00 00 00 
005D10 00 00 00 00 00 00 
005D16 00 00 00 00 00 00 
005D1C 00 00 00 00 00 00 
005D22 00 00 00 00 
                           A  3107    
                           A  3108    ;==============================================
                           A  3109    	
005D26 00                  A  3110    os_max_addr		db 0							                           A  3111    	
                           A  3112    				end		
                           A  3113    ;==============================================
                           A  3114    
                           A  3115    		


Errors: 0
Warnings: 0
Lines Assembled: 11036
