Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000005            B    12    port_irq_flags			equ 005h
       00000006            B    13    port_nmi_ack			equ 006h
       00000007            B    14    port_ps2_ctrl			equ 007h
       00000008            B    15    port_selector			equ 008h
       00000006            B    16    port_mouse_data			equ 006h
       00000009            B    17    port_clear_flags		equ 009h
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
                           B    48    
                           B    49    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000035            A    14    prose_version			equ 35h
       00000107            A    15    amoeba_version_required	equ 107h
                           A    16    
       00000A00            A    17    os_location			 	equ 0a00h
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
                           A    35    			
000A10 C3 4E 0A 00         A    36    				jp os_first_run					000A14 C3 E3 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
                           A    42    
000A20                     A    43    prose_kernal
                           A    44    
                           A    45    ; External apps can call kernal routines by doi
                           A    46    ; Set A to kernal routine number required (see 
                           A    47    ; (this routine is always located at os_locatio
                           A    48    
000A20 D9                  A    49    				exx
000A21 DD22 CC 60 00       A    50    				ld (kernal_ix_cache),ix
000A26 DD21 ED 54 00       A    51    				ld ix,kernal_table				000A2B 11030000            A    52    				ld de,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F 57                  A    53    				ld d,a
000A30 ED5C                A    54    				mlt de
000A32 DD19                A    55    				add ix,de						000A34 DD3700              A    56    				ld ix,(ix)						                           A    57    				
000A37 E3                  A    58    				ex (sp),hl
000A38 7D                  A    59    				ld a,l							000A39 E601                A    60    				and 1							000A3B E3                  A    61    				ex (sp),hl
000A3C D9                  A    62    				exx
000A3D FDE5                A    63    				push iy
000A3F CD 4C 0A 00         A    64    				call kr_jump					000A43 FDE1                A    65    				pop iy							000A45 DD2A CC 60 00       A    66    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    67    				ret.l							                           A    68    				
000A4C DDE9                A    69    kr_jump			jp (ix)							                           A    70    						
                           A    71    ;----------------------------------------------
                           A    72    
                           A    73    ; *******************
                           A    74    ; *   START UP OS   *
                           A    75    ; *******************
                           A    76    
000A4E                     A    77    os_first_run
                           A    78    	
000A4E B7                  A    79    				or a							000A4F 20 05               A    80    				jr nz,os_cold_start		
000A51 78                  A    81    				ld a,b
000A52 32 54 5F 00         A    82    				ld (boot_drive),a				                           A    83    
000A56                     A    84    os_cold_start
000A56 ED7D                A    85    				stmix							000A58 F3                  A    86    				di								000A59 ED5E                A    87    				im 2							000A5B AF                  A    88    				xor a
000A5C ED6D                A    89    				ld MB,a							000A5E 4031FFFF            A    90    				ld.sis sp,0ffffh				000A62 31FFFF07            A    91    				ld sp,sys_mem_top				                           A    92    
000A66 CD C6 3B 00         A    93    				call disable_irqs
000A6A CD 6A 3D 00         A    94    				call disable_all_nmis
                           A    95    				
000A6E 3A 99 60 00         A    96    				ld a,(first_run)				000A72 B7                  A    97    				or a
000A73 28 11               A    98    				jr z,dont_resetkb
000A75 CD 0D 41 00         A    99    				call init_keyboard
000A79 28 06               A   100    				jr z,kb_ok
000A7B 21 9A 60 00         A   101    				ld hl,devices_connected
000A7F CB86                A   102    				res 0,(hl)
000A81 AF                  A   103    kb_ok			xor a
000A82 32 99 60 00         A   104    				ld (first_run),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A86                     A   105    dont_resetkb
                           A   106    				
000A86 21 A4 63 00         A   107    				ld hl,packed_font_start
000A8A 11000080            A   108    				ld de,vram_a_addr
000A8E 01 E2 02 00         A   109    				ld bc,packed_font_end-packed_fo
000A92 CD 11 16 00         A   110    				call unpack_rle
000A96 CD C3 35 00         A   111    				call convert_font
                           A   112    
000A9A CD 14 37 00         A   113    				call test_amoeba_vers
                           A   114    				
000A9E 21 CC 60 00         A   115    				ld hl,os_variables				000AA2 01 CA 01 00         A   116    				ld bc,last_os_var-os_variables
000AA6 AF                  A   117    				xor a
000AA7 CD C6 15 00         A   118    				call os_bchl_memfill
                           A   119    	
000AAB CD 4C 40 00         A   120    				call hwsc_default_hw_settings
000AAF CD A1 43 00         A   121    				call hwsc_disable_audio
                           A   122    				
000AB3 3A CC 5E 00         A   123    				ld a,(video_mode)
000AB7 CD 9F 15 00         A   124    				call os_set_vmode				                           A   125    				
000ABB 21 D1 55 00         A   126    				ld hl,welcome_message			000ABF CD 5A 0F 00         A   127    				call os_print_string
                           A   128    				
000AC3 CD 04 37 00         A   129    				call os_get_mem_high			000AC7 EB                  A   130    				ex de,hl
000AC8 CD 3A 13 00         A   131    				call os_show_hex_address
                           A   132    
000ACC CD 02 14 00         A   133    				call os_new_line
000AD0 CD 02 14 00         A   134    				call os_new_line
000AD4 CD 68 32 00         A   135    				call os_cmd_vers				000AD8 CD 5C 32 00         A   136    				call os_cmd_remount				                           A   137    
000ADC CD 02 14 00         A   138    				call os_new_line				                           A   139    
000AE0 CD CB 41 00         A   140    				call purge_keyboard
                           A   141    				
000AE4 CD 91 3B 00         A   142    				call set_irq_vector
000AE8 CD A3 3B 00         A   143    				call enable_os_irqs
000AEC FB                  A   144    				ei
000AED CD 4A 3D 00         A   145    				call set_nmi_vector
                           A   146    				
000AF1 21 9A 60 00         A   147    				ld hl,devices_connected			000AF5 CB46                A   148    				bit 0,(hl)
000AF7 20 08               A   149    				jr nz,kb_present
000AF9 21 54 5B 00         A   150    				ld hl,no_keyboard_msg
000AFD CD 39 14 00         A   151    				call os_show_packed_text
000B01                     A   152    kb_present				
000B01 21 21 56 00         A   153    				ld hl,startup_script_fn
000B05 22 F8 61 00         A   154    				ld (os_args_loc),hl
000B09 CD 99 32 00         A   155    				call os_cmd_exec				                           A   156    									
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0D 3A 98 60 00         A   157    				ld a,(frozen)					000B11 B7                  A   158    				or a
000B12 28 11               A   159    				jr z,os_main_loop
000B14 AF                  A   160    				xor a
000B15 32 98 60 00         A   161    				ld (frozen),a
000B19 21 79 56 00         A   162    				ld hl,nmi_freeze_txt
000B1D CD 5A 0F 00         A   163    				call os_print_string
000B21 CD B3 2D 00         A   164    				call os_cmd_r
                           A   165    				
                           A   166    
                           A   167    ;==============================================
                           A   168    
000B25 CD 3C 40 00         A   169    os_main_loop	call hwsc_wait_vrt				                           A   170    
000B29 CD AB 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B2D CD 42 44 00         A   173    				call os_get_key_press
000B31 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B33 32 6B 62 00         A   176    				ld (current_scancode),a
000B37 78                  A   177    				ld a,b
000B38 32 6C 62 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B3C CD 1B 3F 00         A   180    				call hwsc_remove_cursor
000B40 3E18                A   181    				ld a,24							000B42 32 39 61 00         A   182    				ld (cursorflashtimer),a			000B46 AF                  A   183    				xor a
000B47 32 3A 61 00         A   184    				ld (cursor_status),a
                           A   185    				
000B4B 3A 6B 62 00         A   186    				ld a,(current_scancode)			000B4F FE70                A   187    				cp 70h
000B51 20 0C               A   188    				jr nz,os_notins
000B53 3A F4 5E 00         A   189     				ld a,(overwrite_mode)
000B57 EE01                A   190    				xor 1
000B59 32 F4 5E 00         A   191    				ld (overwrite_mode),a
000B5D 18 C6               A   192    				jr os_main_loop
                           A   193    
000B5F FE6C                A   194    os_notins		cp 6ch
000B61 20 07               A   195    				jr nz,not_homekey
000B63 AF                  A   196    				xor a
000B64 32 37 61 00         A   197    				ld (cursor_x),a
000B68 18 BB               A   198    				jr os_main_loop
                           A   199    								
000B6A FE69                A   200    not_homekey		cp 69h
000B6C 20 24               A   201    				jr nz,not_endkey
000B6E 3A 36 61 00         A   202    				ld a,(cursor_y)					000B72 4F                  A   203    				ld c,a
000B73 3A FA 5E 00         A   204    				ld a,(charmap_columns)
000B77 47                  A   205    				ld b,a
000B78 05                  A   206    fendloop		dec b
000B79 CD 89 3F 00         A   207    				call hwsc_get_charmap_addr_xy
000B7D 7E                  A   208    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B7E FE20                A   209    				cp 20h
000B80 28 F6               A   210    				jr z,fendloop
000B82 04                  A   211    				inc b
000B83 3A FA 5E 00         A   212    				ld a,(charmap_columns)
000B87 B8                  A   213    				cp b
000B88 20 01               A   214    				jr nz,endxposok
000B8A 05                  A   215    				dec b
000B8B 78                  A   216    endxposok		ld a,b
000B8C 32 37 61 00         A   217    				ld (cursor_x),a
000B90 18 93               A   218    				jr os_main_loop
                           A   219    
000B92 21 37 61 00         A   220    not_endkey		ld hl,cursor_x					000B96 FE6B                A   221    				cp 06bh			
000B98 20 10               A   222    				jr nz,os_ntlft
000B9A 35                  A   223    				dec (hl)
000B9B 7E                  A   224    				ld a,(hl)
000B9C FEFF                A   225    				cp 0ffh	
000B9E 20 85               A   226    				jr nz,os_main_loop
000BA0 3A FA 5E 00         A   227    				ld a,(charmap_columns)
000BA4 3D                  A   228    				dec a
000BA5 77                  A   229    				ld (hl),a						000BA6 C3 25 0B 00         A   230    				jr os_main_loop
                           A   231    
000BAA FE74                A   232    os_ntlft		cp 074h							000BAC 20 10               A   233    				jr nz,os_ntrig
000BAE 34                  A   234    				inc (hl)
000BAF 3A FA 5E 00         A   235    				ld a,(charmap_columns)
000BB3 BE                  A   236    				cp (hl)
000BB4 C2 25 0B 00         A   237    				jr nz,os_main_loop
000BB8 3600                A   238    				ld (hl),0						000BBA C3 25 0B 00         A   239    				jr os_main_loop
                           A   240    
000BBE 21 36 61 00         A   241    os_ntrig		ld hl,cursor_y
000BC2 FE75                A   242    				cp 075h							000BC4 20 0D               A   243    				jr nz,os_ntup
000BC6 35                  A   244    				dec (hl)
000BC7 CB7E                A   245    				bit 7,(hl)
000BC9 CA 25 0B 00         A   246    				jr z,os_main_loop
000BCD 3600                A   247    				ld (hl),0						000BCF C3 25 0B 00         A   248    				jr os_main_loop
                           A   249    
000BD3 FE72                A   250    os_ntup			cp 072h
000BD5 20 14               A   251    				jr nz,os_ntdwn					000BD7 34                  A   252    				inc (hl)
000BD8 3A F7 5E 00         A   253    				ld a,(charmap_rows)
000BDC BE                  A   254    				cp (hl)
000BDD C2 25 0B 00         A   255    				jr nz,os_main_loop
000BE1 3D                  A   256    				dec a
000BE2 77                  A   257    				ld (hl),a						000BE3 CD A7 3E 00         A   258    				call hwsc_scroll_up
000BE7 C3 25 0B 00         A   259    				jr os_main_loop
                           A   260    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BEB FE71                A   261    os_ntdwn		cp 071h							000BED 20 08               A   262    				jr nz,os_nodel		
000BEF 3A 37 61 00         A   263    				ld a,(cursor_x)					000BF3 47                  A   264    				ld b,a
000BF4 04                  A   265    				inc b
000BF5 18 13               A   266    				jr os_chrbk
                           A   267    
000BF7 FE66                A   268    os_nodel		cp 066h							000BF9 20 17               A   269    				jr nz,os_nbksp
000BFB 3A 37 61 00         A   270    				ld a,(cursor_x)					000BFF B7                  A   271    				or a							000C00 CA 25 0B 00         A   272    				jp z,os_main_loop
000C04 47                  A   273    				ld b,a
000C05 3D                  A   274    				dec a
000C06 32 37 61 00         A   275    				ld (cursor_x),a					000C0A CD A1 3F 00         A   276    os_chrbk		call hwsc_chars_left			000C0E C3 25 0B 00         A   277    				jp os_main_loop
                           A   278    
000C12 FE5A                A   279    os_nbksp		cp 05ah							000C14 CA 5C 0C 00         A   280    				jp z,os_enter_pressed
                           A   281    	
000C18 3A 6C 62 00         A   282    				ld a,(current_asciicode)		000C1C FE20                A   283    				cp 32							000C1E 38 38               A   284    				jr c,os_nvdun					                           A   285    
000C20 FE7B                A   286    				cp 07bh							000C22 30 12               A   287    				jr nc,os_gtcha					000C24 FE61                A   288    				cp 061h
000C26 38 04               A   289    				jr c,os_ntupc
000C28 D620                A   290    				sub 020h
000C2A 18 0A               A   291    				jr os_gtcha
000C2C FE5B                A   292    os_ntupc		cp 05bh
000C2E 30 06               A   293    				jr nc,os_gtcha
000C30 FE41                A   294    				cp 041h
000C32 38 02               A   295    				jr c,os_gtcha
000C34 C620                A   296    				add a,020h
000C36 57                  A   297    os_gtcha		ld d,a							000C37 3A F4 5E 00         A   298    				ld a,(overwrite_mode)			000C3B B7                  A   299    				or a
000C3C CC DA 3F 00         A   300    				call z,hwsc_chars_right
                           A   301    				
000C40 ED4B 36 61 00       A   302    os_schi			ld bc,(cursor_pos)				000C45 7A                  A   303    				ld a,d							000C46 CD E2 3E 00         A   304    				call hwsc_plot_char		
000C4A 21 37 61 00         A   305    				ld hl,cursor_x					000C4E 34                  A   306    				inc (hl)
000C4F 3A FA 5E 00         A   307    				ld a,(charmap_columns)
000C53 BE                  A   308    				cp (hl)							000C54 20 02               A   309    				jr nz,os_nvdun
000C56 3600                A   310    				ld (hl),0
                           A   311    
000C58 C3 25 0B 00         A   312    os_nvdun		jp os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   313    	
                           A   314    
                           A   315    ;----------------------------------------------
                           A   316    
000C5C                     A   317    os_enter_pressed
                           A   318    	
000C5C CD 1D 40 00         A   319    				call hwsc_charline_to_command_s
                           A   320    
000C60 AF                  A   321    				xor a
000C61 32 37 61 00         A   322    				ld (cursor_x),a					000C65 21 36 61 00         A   323    				ld hl,cursor_y					000C69 34                  A   324    				inc (hl)
000C6A 3A F7 5E 00         A   325    				ld a,(charmap_rows)
000C6E BE                  A   326    				cp (hl)
000C6F 20 06               A   327    				jr nz,os_esdok
000C71 3D                  A   328    				dec a
000C72 77                  A   329    				ld (hl),a
000C73 CD A7 3E 00         A   330    				call hwsc_scroll_up
                           A   331    
000C77 CD 7F 0C 00         A   332    os_esdok		call os_parse_cmd_chk_ps		                           A   333    
000C7B C3 25 0B 00         A   334    post_csb		jp os_main_loop
                           A   335    
                           A   336    	
                           A   337    ;----------------------------------------------
                           A   338    
                           A   339    
000C7F                     A   340    os_parse_cmd_chk_ps
                           A   341    
000C7F CD 92 0C 00         A   342    				call os_parse_command_line
000C83 FEFE                A   343    				cp 0feh							000C85 C0                  A   344    				ret nz
000C86 01500000            A   345    				ld bc,max_buffer_chars			000C8A 11 54 61 00         A   346    				ld de,commandstring				000C8E EDB0                A   347    				ldir
000C90 18 ED               A   348    				jr os_parse_cmd_chk_ps
                           A   349    
                           A   350    	
                           A   351    ;----------------------------------------------
                           A   352    	
000C92                     A   353    os_parse_command_line
                           A   354    
000C92 3E01                A   355    				ld a,1
000C94 32 CF 60 00         A   356    				ld (store_registers),a			                           A   357    
000C98 21 54 61 00         A   358    				ld hl,commandstring				000C9C 0650                A   359    				ld b,max_buffer_chars			000C9E CD F8 0F 00         A   360    				call os_scan_for_non_space		000CA2 B7                  A   361    				or a							000CA3 C8                  A   362    				ret z
000CA4 11 B7 56 00         A   363    				ld de,dictionary-1				000CA8 D5                  A   364    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CA9 D1                  A   365    compcstr		pop de
000CAA E5                  A   366    				push hl
000CAB FDE1                A   367    				pop iy
000CAD 13                  A   368    notacmd			inc de
000CAE 1A                  A   369    				ld a,(de)
000CAF FE01                A   370    				cp 1							000CB1 CA 4B 0D 00         A   371    				jp z,os_no_kernal_command_found
000CB5 CB7F                A   372    				bit 7,a
000CB7 28 F4               A   373    				jr z,notacmd					000CB9 E67F                A   374    				and 07fh
000CBB 4F                  A   375    				ld c,a							000CBC D5                  A   376    				push de
000CBD 13                  A   377    cmdnscan		inc de
000CBE FD7E00              A   378    				ld a,(iy)						000CC1 CD 63 12 00         A   379    				call os_uppercasify
000CC5 47                  A   380    				ld b,a
000CC6 1A                  A   381    				ld a,(de)						000CC7 B8                  A   382    				cp b
000CC8 FD23                A   383    				inc iy
000CCA 28 F1               A   384    				jr z,cmdnscan					000CCC 1A                  A   385    nomatch			ld a,(de)						000CCD B7                  A   386    				or a
000CCE 28 04               A   387    				jr z,posmatch					000CD0 CB7F                A   388    				bit 7,a			
000CD2 28 D5               A   389    				jr z,compcstr					000CD4 FD7EFF              A   390    posmatch		ld a,(iy-1)						000CD7 FE20                A   391    				cp 32
000CD9 20 CE               A   392    				jr nz,compcstr					                           A   393    	
000CDB D1                  A   394    				pop de				
000CDC FDE5                A   395    				push iy							000CDE E1                  A   396    				pop hl
000CDF CD F8 0F 00         A   397    				call os_scan_for_non_space
000CE3 22 F8 61 00         A   398    				ld (os_args_loc),hl				                           A   399    	
000CE7 21 56 5C 00         A   400    				ld hl,os_cmd_locs
000CEB 11030000            A   401    				ld de,3
000CEF 51                  A   402    				ld d,c
000CF0 ED5C                A   403    				mlt de							000CF2 19                  A   404    				add hl,de
000CF3 ED37                A   405    				ld ix,(hl)						                           A   406    
000CF5 2A F8 61 00         A   407    				ld hl,(os_args_loc)				000CF9 CD 2D 0F 00         A   408    				call os_run_command				                           A   409    
000CFD C8                  A   410    				ret z							000CFE B7                  A   411    				or a
000CFF 20 13               A   412    				jr nz,show_erm
000D01 78                  A   413    os_hwe1			ld a,b							000D02 21 BB 59 00         A   414    os_hwerr		ld hl,hex_byte_txt		
000D06 CD A5 10 00         A   415    				call hexbyte_to_ascii	
000D0A 21 47 5B 00         A   416    				ld hl,hw_err_msg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D0E CD 39 14 00         A   417    				call os_show_packed_text
000D12 AF                  A   418    				xor a
000D13 C9                  A   419    				ret
                           A   420    
000D14 01000000            A   421    show_erm		ld bc,0							000D18 4F                  A   422    				ld c,a
000D19 D680                A   423    				sub 080h						000D1B 38 11               A   424    				jr c,no_trans					000D1D 21 7B 5D 00         A   425    				ld hl,kernal_error_code_transla
000D21 CB77                A   426    				bit 6,a							000D23 28 06               A   427    				jr z,not_fs_err					000D25 21 89 5D 00         A   428    				ld hl,fs_error_code_translation
000D29 D640                A   429    				sub 040h
000D2B 4F                  A   430    not_fs_err		ld c,a
000D2C 09                  A   431    				add hl,bc
000D2D 4E                  A   432    				ld c,(hl)
000D2E 0600                A   433    no_trans		ld b,0
000D30 21 BC 5C 00         A   434    				ld hl,packed_msg_list
000D34 7E                  A   435    findmsg			ld a,(hl)
000D35 FEFF                A   436    				cp 0ffh
000D37 C8                  A   437    				ret z							000D38 23                  A   438    				inc hl
000D39 B7                  A   439    				or a
000D3A 20 F8               A   440    				jr nz,findmsg					000D3C 04                  A   441    				inc b
000D3D 79                  A   442    				ld a,c							000D3E B8                  A   443    				cp b
000D3F 20 F3               A   444    				jr nz,findmsg
000D41 CD 39 14 00         A   445    				call os_show_packed_text
000D45 CD 02 14 00         A   446    				call os_new_line
000D49 AF                  A   447    				xor a
000D4A C9                  A   448    				ret
                           A   449    	
                           A   450    
000D4B                     A   451    os_no_kernal_command_found
                           A   452    
000D4B 3E30                A   453    				ld a,030h						000D4D 32 5D 5F 00         A   454    fvolcmd			ld (vol_txt+4),a				000D51 F5                  A   455    				push af			
000D52 11 5A 5F 00         A   456    				ld de,vol_txt+1		
000D56 0605                A   457    				ld b,5			
000D58 CD 29 12 00         A   458    				call os_compare_strings	
000D5C 28 08               A   459    				jr z,gotvolcmd		
000D5E F1                  A   460    				pop af				
000D5F 3C                  A   461    				inc a			
000D60 FE38                A   462    				cp 030h+max_volumes		
000D62 20 E9               A   463    				jr nz,fvolcmd		
000D64 18 0B               A   464    				jr novolcmd		
000D66 F1                  A   465    gotvolcmd		pop af
000D67 D630                A   466    				sub 030h
000D69 CD 06 1B 00         A   467    				call os_change_volume
000D6D C3 12 0F 00         A   468    				jp extcmderf					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   469    		
                           A   470    
                           A   471    
000D71 7E                  A   472    novolcmd		ld a,(hl)						000D72 FE47                A   473    				cp 'G'							000D74 20 29               A   474    				jr nz,not_g_cmd					000D76 23                  A   475    				inc hl
000D77 7E                  A   476    				ld a,(hl)
000D78 2B                  A   477    				dec hl
000D79 FE20                A   478    				cp ' '
000D7B 20 22               A   479    				jr nz,not_g_cmd
000D7D 23                  A   480    				inc hl
000D7E CD F8 0F 00         A   481    				call os_scan_for_non_space
000D82 22 F8 61 00         A   482    				ld (os_args_loc),hl				000D86 B7                  A   483    				or a
000D87 20 04               A   484    				jr nz,gotgargs
000D89 3E1F                A   485    				ld a,01fh						000D8B 18 87               A   486    				jr show_erm
000D8D CD E4 10 00         A   487    gotgargs		call ascii_to_hex_no_scan		000D91 B7                  A   488    				or a
000D92 20 80               A   489    				jr nz,show_erm
000D94 CD 59 3D 00         A   490    				call enable_button_nmi			000D98 D5                  A   491    				push de
000D99 DDE1                A   492    				pop ix			
000D9B C3 2D 0F 00         A   493    				jp os_run_command				                           A   494    				
                           A   495    				
                           A   496    
000D9F 22 F8 61 00         A   497    not_g_cmd		ld (os_args_loc),hl				000DA3 22 FB 61 00         A   498    				ld (os_args_pos_cache),hl
000DA7 CD 2C 10 00         A   499    				call os_args_to_fn_append_ezp	                           A   500    	
000DAB CD 37 0F 00         A   501    				call cache_dir_block			                           A   502    
000DAF CD 55 48 00         A   503    				call fs_check_disk_format		000DB3 38 3C               A   504    				jr c,os_ndfxc
000DB5 B7                  A   505    				or a							000DB6 20 39               A   506    				jr nz,os_ndfxc
                           A   507    	
000DB8 CD FC 49 00         A   508    				call fs_open_file_command		000DBC DA 02 0D 00         A   509    				jp c,os_hwerr			 		000DC0 B7                  A   510    				or a
000DC1 28 38               A   511    				jr z,os_gecmd					                           A   512    
000DC3 CD CD 49 00         A   513    				call fs_goto_root_dir_command	000DC7 21 18 56 00         A   514    				ld hl,os_dos_cmds_txt
000DCB CD 63 52 00         A   515    				call fs_hl_to_filename
000DCF CD A8 49 00         A   516    				call fs_change_dir_command		000DD3 DA 02 0D 00         A   517    				jp c,os_hwerr
000DD7 B7                  A   518    				or a
000DD8 20 17               A   519    				jr nz,os_ndfxc					                           A   520    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DDA 2A FB 61 00         A   521    				ld hl,(os_args_pos_cache)		000DDE 22 F8 61 00         A   522    				ld (os_args_loc),hl
000DE2 CD 2C 10 00         A   523    				call os_args_to_fn_append_ezp	000DE6 CD FC 49 00         A   524    				call fs_open_file_command		000DEA DA 02 0D 00         A   525    				jp c,os_hwerr
000DEE B7                  A   526    				or a
000DEF 28 0A               A   527    				jr z,os_gecmd
000DF1 CD 43 0F 00         A   528    os_ndfxc		call restore_dir_block			000DF5 3E0B                A   529    				ld a,0bh						000DF7 C3 14 0D 00         A   530    				jp show_erm
                           A   531    
000DFB 2A F8 61 00         A   532    os_gecmd		ld hl,(os_args_loc)				000DFF CD F8 0F 00         A   533    				call os_scan_for_non_space		000E03 22 F8 61 00         A   534    				ld (os_args_loc),hl
                           A   535    
000E07 11100000            A   536    				ld de,16
000E0B CD 76 16 00         A   537    				call os_set_load_length			000E0F 21 86 68 00         A   538    				ld hl,scratch_pad
000E13 22 C4 54 00         A   539    				ld (fs_ez80_address),hl
000E17 CD 47 4A 00         A   540    				call fs_read_data_command
000E1B DA 02 0D 00         A   541    				jp c,os_hwerr					000E1F B7                  A   542    				or a
000E20 C2 14 0D 00         A   543    				jp nz,show_erm					000E24 2A 88 68 00         A   544    				ld hl,(scratch_pad+2)
000E28 1150524F            A   545    				ld de,04f5250h					000E2C AF                  A   546    				xor a	
000E2D ED52                A   547    				sbc hl,de
000E2F 28 0A               A   548    				jr z,loc_header
000E31 CD 43 0F 00         A   549    				call restore_dir_block			000E35 3E1A                A   550    				ld a,01ah						000E37 C3 14 0D 00         A   551    				jp show_erm						                           A   552    				
000E3B 3A 95 68 00         A   553    loc_header		ld a,(scratch_pad+15)			000E3F 32 CB 60 00         A   554    				ld (store_adl),a			
000E43 CD FC 49 00         A   555    				call fs_open_file_command		000E47 DA 02 0D 00         A   556    				jp c,os_hwerr
000E4B B7                  A   557    				or a	
000E4C 20 A3               A   558    				jr nz,os_ndfxc
000E4E 2A 8B 68 00         A   559    				ld hl,(scratch_pad+5)			000E52 22 C4 54 00         A   560    				ld (fs_ez80_address),hl
000E56 ED5B 9B 60 00       A   561    				ld de,(sysram_os_highest)
000E5B AF                  A   562    				xor a
000E5C E5                  A   563    				push hl
000E5D ED52                A   564    				sbc hl,de
000E5F E1                  A   565    				pop hl
000E60 30 0A               A   566    				jr nc,osmemok
000E62 CD 43 0F 00         A   567    				call restore_dir_block			000E66 3E26                A   568    				ld a,026h
000E68 C3 14 0D 00         A   569    				jp show_erm
                           A   570    
000E6C ED5B 91 68 00       A   571    osmemok			ld de,(scratch_pad+11)			000E71 7B                  A   572    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E72 B2                  A   573    				or d
000E73 28 14               A   574    				jr z,noprov_spec				000E75 21350000            A   575    				ld hl,prose_version
000E79 AF                  A   576    				xor a
000E7A 40ED52              A   577    				sbc.sis hl,de					000E7D 30 0A               A   578    				jr nc,noprov_spec
000E7F CD 43 0F 00         A   579    				call restore_dir_block
000E83 3E1B                A   580    				ld a,01bh						000E85 C3 14 0D 00         A   581    				jp show_erm
                           A   582    				
000E89 CD 91 40 00         A   583    noprov_spec		call hwsc_get_version			000E8D 2A 93 68 00         A   584    				ld hl,(scratch_pad+13)			000E91 EB                  A   585    				ex de,hl						000E92 7B                  A   586    				ld a,e
000E93 B2                  A   587    				or d
000E94 28 10               A   588    				jr z,nohwv_spec					000E96 AF                  A   589    				xor a
000E97 40ED52              A   590    				sbc.sis hl,de					000E9A 30 0A               A   591    				jr nc,nohwv_spec
000E9C CD 43 0F 00         A   592    				call restore_dir_block
000EA0 3E2B                A   593    				ld a,02bh						000EA2 C3 14 0D 00         A   594    				jp show_erm
                           A   595    
000EA6 ED5B 8E 68 00       A   596    nohwv_spec		ld de,(scratch_pad+8)			000EAB 3A 90 68 00         A   597    				ld a,(scratch_pad+10)			000EAF B2                  A   598    				or d
000EB0 B3                  A   599    				or e
000EB1 28 04               A   600    				jr z,readcode					000EB3 CD 76 16 00         A   601    				call os_set_load_length			                           A   602    		
000EB7 2A 8B 68 00         A   603    readcode		ld hl,(scratch_pad+5)
000EBB 22 01 62 00         A   604    				ld (os_extcmd_jmp_addr),hl		000EBF CD 47 4A 00         A   605    				call fs_read_data_command
000EC3 F5                  A   606    				push af
000EC4 CD 43 0F 00         A   607    				call restore_dir_block			000EC8 F1                  A   608    				pop af
000EC9 DA 02 0D 00         A   609    				jp c,os_hwerr					000ECD B7                  A   610    				or a
000ECE C2 14 0D 00         A   611    				jp nz,show_erm					                           A   612    	
000ED2 CD 59 3D 00         A   613    				call enable_button_nmi			000ED6 DD2A 01 62 00       A   614    				ld ix,(os_extcmd_jmp_addr)		000EDB 2A F8 61 00         A   615    				ld hl,(os_args_loc)				000EDF C3 2D 0F 00         A   616    				jp os_run_command				                           A   617    
000EE3 F5                  A   618    extcmd_return	push af							000EE4 CD 4C 40 00         A   619    				call hwsc_default_hw_settings	000EE8 3A CF 60 00         A   620    				ld a,(store_registers)
000EEC B7                  A   621    				or a
000EED 28 06               A   622    				jr z,skp_strg
000EEF F1                  A   623    				pop af
000EF0 CD 7B 13 00         A   624    				call os_store_CPU_regs			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EF4 F5                  A   625    				push af
000EF5 F1                  A   626    skp_strg		pop af
                           A   627    
000EF6 F5                  A   628    cntuasr			push af
000EF7 21 86 68 00         A   629    				ld hl,scratch_pad				000EFB CD A5 10 00         A   630    				call hexbyte_to_ascii
000EFF 3600                A   631    				ld (hl),0
000F01 11 86 68 00         A   632    				ld de,scratch_pad
000F05 21 91 56 00         A   633    				ld hl,error_txt
000F09 CD B0 1B 00         A   634    				call os_set_envar
000F0D CD 64 3D 00         A   635    				call disable_button_nmi			000F11 F1                  A   636    				pop af
000F12 28 12               A   637    extcmderf		jr z,not_errc					000F14 B7                  A   638    				or a
000F15 CA 01 0D 00         A   639    				jp z,os_hwe1					000F19 FEFF                A   640    				cp 0ffh							000F1B CA 56 0A 00         A   641    				jp z,os_cold_start
000F1F FEFE                A   642    				cp 0feh							000F21 C8                  A   643    				ret z
000F22 C3 14 0D 00         A   644    				jp show_erm						000F26 FEFF                A   645    not_errc		cp 0ffh							000F28 CA 56 0A 00         A   646    				jp z,os_cold_start
000F2C C9                  A   647    				ret
                           A   648    				
                           A   649    ;----------------------------------------------
                           A   650    
000F2D                     A   651    os_run_command									000F2D ED3906              A   652    				out0 (port_nmi_ack),a			000F30 DD22 D0 60 00       A   653    				ld (com_start_addr),ix			000F35 DDE9                A   654    				jp (ix)							                           A   655    
                           A   656    ;----------------------------------------------
                           A   657    
000F37                     A   658    cache_dir_block
                           A   659    
                           A   660    	
000F37 D5                  A   661    				push de
000F38 CD AA 1A 00         A   662    				call fs_get_dir_cluster	
000F3C ED53 FE 61 00       A   663    				ld (os_dir_block_cache),de
000F41 D1                  A   664    				pop de	
000F42 C9                  A   665    				ret
                           A   666    		
                           A   667    
000F43                     A   668    restore_dir_block
                           A   669    
000F43 D5                  A   670    				push de
000F44 ED5B FE 61 00       A   671    				ld de,(os_dir_block_cache)
000F49 CD B6 1A 00         A   672    				call fs_update_dir_cluster
000F4D D1                  A   673    				pop de
000F4E C9                  A   674    				ret
                           A   675    		
                           A   676    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   677    ; Routines called by command line
                           A   678    ;==============================================
                           A   679    
                           A   680    ; Set:-
                           A   681    ; HL to address of string
                           A   682    ; c = y
                           A   683    ; b = x
                           A   684    
000F4F                     A   685    ext_print_string
                           A   686    
000F4F CC ED 15 00         A   687    				call z,mbase_hl
000F53 18 05               A   688    				jr os_print_string
                           A   689    
000F55                     A   690    os_print_string_cond
                           A   691    
000F55 CD 5D 1A 00         A   692    				call test_quiet_mode
000F59 C0                  A   693    				ret nz
                           A   694    
000F5A                     A   695    os_print_string
                           A   696    
000F5A D5                  A   697    				push de
000F5B C5                  A   698    				push bc
000F5C ED4B 36 61 00       A   699    				ld bc,(cursor_pos)				000F61 7E                  A   700    prstr_lp		ld a,(hl)
000F62 23                  A   701    				inc hl
000F63 B7                  A   702    				or a
000F64 20 09               A   703    				jr nz,prstr_ne
000F66 ED43 36 61 00       A   704    				ld (cursor_pos),bc
000F6B C1                  A   705    				pop bc
000F6C D1                  A   706    				pop de
000F6D AF                  A   707    				xor a							000F6E C9                  A   708    				ret
                           A   709    
000F6F FE0D                A   710    prstr_ne		cp 13
000F71 20 04               A   711    				jr nz,not_cr
000F73 0600                A   712    				ld b,0
000F75 18 EA               A   713    				jr prstr_lp
000F77 FE0A                A   714    not_cr			cp 10
000F79 28 12               A   715    				jr z,line_feed				
000F7B FE0B                A   716    				cp 11
000F7D 28 0C               A   717    				jr z,next_line
000F7F CD E2 3E 00         A   718    				call hwsc_plot_char
000F83 04                  A   719    				inc b
000F84 3A FA 5E 00         A   720    				ld a,(charmap_columns)
000F88 B8                  A   721    				cp b
000F89 20 D6               A   722    				jr nz,prstr_lp
000F8B 0600                A   723    next_line		ld b,0
000F8D 0C                  A   724    line_feed		inc c
000F8E 3A F7 5E 00         A   725    				ld a,(charmap_rows)
000F92 B9                  A   726    				cp c
000F93 20 CC               A   727    				jr nz,prstr_lp
000F95 0D                  A   728    				dec c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F96 CD A7 3E 00         A   729    				call hwsc_scroll_up
000F9A 18 C5               A   730    				jr prstr_lp
                           A   731    
                           A   732    ;----------------------------------------------
                           A   733    
000F9C 21 44 62 00         A   734    os_print_char	ld hl,char_to_print
000FA0 77                  A   735    				ld (hl),a
000FA1 18 B7               A   736    				jr os_print_string
                           A   737    
                           A   738    ;----------------------------------------------
                           A   739    
000FA3 F5                  A   740    home_cursor		push af
000FA4 AF                  A   741    				xor a
000FA5 32 37 61 00         A   742    				ld (cursor_x),a
000FA9 F1                  A   743    				pop af
000FAA C9                  A   744    				ret
                           A   745    				
                           A   746    ;----------------------------------------------
                           A   747    
000FAB                     A   748    os_cursor_flash
                           A   749    
000FAB 21 39 61 00         A   750    				ld hl,cursorflashtimer
000FAF 34                  A   751    				inc (hl)
000FB0 7E                  A   752    				ld a,(hl)
000FB1 FE19                A   753    				cp 25
000FB3 C0                  A   754    				ret nz
000FB4 3600                A   755    				ld (hl),0
000FB6 3A 3A 61 00         A   756    				ld a,(cursor_status)
000FBA EE01                A   757    				xor 1
000FBC 32 3A 61 00         A   758    				ld (cursor_status),a
000FC0 28 15               A   759    				jr z,no_cursor
000FC2 3E5F                A   760    				ld a,05fh
000FC4 21 F4 5E 00         A   761    				ld hl,overwrite_mode
000FC8 CB46                A   762    				bit 0,(hl)
000FCA 28 02               A   763    				jr z,cursor_selected
000FCC 3E7F                A   764    				ld a,07fh
                           A   765    				
000FCE CD DD 0F 00         A   766    cursor_selected	call os_set_cursor_image
000FD2 CD 35 3F 00         A   767    				call hwsc_draw_cursor			000FD6 C9                  A   768    				ret
                           A   769    
000FD7 CD 1B 3F 00         A   770    no_cursor		call hwsc_remove_cursor
000FDB C9                  A   771    				ret
                           A   772    
                           A   773    
                           A   774    ;----------------------------------------------
                           A   775    
000FDC                     A   776    ext_set_cursor_image
                           A   777    
000FDC 7B                  A   778    				ld a,e
                           A   779    				
000FDD                     A   780    os_set_cursor_image
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   781    			
000FDD 32 F5 5E 00         A   782    				ld (cursor_image_char),a
000FE1 BF                  A   783    				cp a
000FE2 C9                  A   784    				ret
                           A   785    
                           A   786    ;----------------------------------------------
                           A   787    
000FE3                     A   788    os_next_arg
                           A   789    
000FE3 CD EF 0F 00         A   790    				call os_scan_for_space
000FE7 B7                  A   791    				or a
000FE8 C8                  A   792    				ret z
000FE9 CD F8 0F 00         A   793    				call os_scan_for_non_space
000FED B7                  A   794    				or a
000FEE C9                  A   795    				ret
                           A   796    
                           A   797    
                           A   798    ;----------------------------------------------
                           A   799    	
                           A   800    
000FEF                     A   801    os_scan_for_space
                           A   802    
000FEF 7E                  A   803    os_sfspl 		ld a,(hl)						000FF0 B7                  A   804    				or a							000FF1 C8                  A   805    				ret z
000FF2 FE20                A   806    				cp ' '
000FF4 C8                  A   807    				ret z
000FF5 23                  A   808    				inc hl
000FF6 18 F7               A   809    				jr os_sfspl
                           A   810    	
                           A   811    
                           A   812    ;----------------------------------------------
                           A   813    	
                           A   814    
000FF8                     A   815    os_scan_for_non_space
                           A   816    
000FF8 2B                  A   817    				dec hl							000FF9 23                  A   818    os_nsplp		inc hl			
000FFA 7E                  A   819    				ld a,(hl)			
000FFB B7                  A   820    				or a			
000FFC C8                  A   821    				ret z							000FFD FE20                A   822    				cp ' '
000FFF 28 F8               A   823    				jr z,os_nsplp
001001 C9                  A   824    				ret
                           A   825    	
                           A   826    	
                           A   827    ;----------------------------------------------
                           A   828    
001002                     A   829    os_args_to_alt_filename
                           A   830    
001002 CD 5C 10 00         A   831    				call os_atfn_pre				001006 C8                  A   832    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001007 CD 5D 52 00         A   833    				call fs_hl_to_alt_filename
00100B 18 09               A   834    				jr os_atfrl
                           A   835    	
                           A   836    	
                           A   837    	
                           A   838    		
00100D                     A   839    os_args_to_filename
                           A   840    
00100D CD 5C 10 00         A   841    				call os_atfn_pre				001011 C8                  A   842    				ret z
001012 CD 63 52 00         A   843    				call fs_hl_to_filename	
                           A   844    
001016 7E                  A   845    os_atfrl		ld a,(hl)						001017 B7                  A   846    				or a							001018 28 0B               A   847    				jr z,os_cfne
00101A FE20                A   848    				cp 32
00101C 28 07               A   849    				jr z,os_cfne
00101E FE2F                A   850    				cp 02fh
001020 28 03               A   851    				jr z,os_cfne
001022 23                  A   852    				inc hl
001023 18 F1               A   853    				jr os_atfrl	
001025 22 F8 61 00         A   854    os_cfne			ld (os_args_loc),hl				001029 79                  A   855    				ld a,c			
00102A B7                  A   856    				or a							00102B C9                  A   857    				ret
                           A   858    
                           A   859    
                           A   860    
                           A   861    
00102C                     A   862    os_args_to_fn_append_ezp
                           A   863    
                           A   864    	
00102C CD 5C 10 00         A   865    				call os_atfn_pre				001030 C8                  A   866    				ret z
001031 11 D3 60 00         A   867    				ld de,temp_string
001035 7E                  A   868    ccmdtlp			ld a,(hl)						001036 B7                  A   869    				or a
001037 28 0D               A   870    				jr z,goteocmd
001039 FE20                A   871    				cp ' '
00103B 28 09               A   872    				jr z,goteocmd
00103D FE2E                A   873    				cp '.'
00103F 28 05               A   874    				jr z,goteocmd
001041 12                  A   875    				ld (de),a
001042 13                  A   876    				inc de
001043 23                  A   877    				inc hl
001044 18 EF               A   878    				jr ccmdtlp
                           A   879    	
001046 E5                  A   880    goteocmd		push hl
001047 21 6B 56 00         A   881    				ld hl,ezp_extension_txt
00104B 01050000            A   882    				ld bc,5
00104F EDB0                A   883    				ldir 
001051 21 D3 60 00         A   884    				ld hl,temp_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001055 CD 63 52 00         A   885    				call fs_hl_to_filename
001059 E1                  A   886    				pop hl
00105A 18 BA               A   887    				jr os_atfrl
                           A   888    	
                           A   889    
                           A   890    
                           A   891    
00105C                     A   892    os_atfn_pre
                           A   893    
00105C 2A F8 61 00         A   894    				ld hl,(os_args_loc)				001060 CD F8 0F 00         A   895    				call os_scan_for_non_space
001064 B7                  A   896    				or a
001065 C8                  A   897    				ret z
001066 7E                  A   898    				ld a,(hl)
001067 FE2F                A   899    				cp 02fh							001069 20 01               A   900    				jr nz,notfsl1
00106B 23                  A   901    				inc hl
00106C AF                  A   902    notfsl1			xor a
00106D 3C                  A   903    				inc a
00106E C9                  A   904    				ret
                           A   905    
                           A   906    
                           A   907    ;--------- Number <-> String functions --------
                           A   908    
                           A   909    
00106F                     A   910    os_clear_output_line
                           A   911    
00106F C5                  A   912    				push bc
001070 E5                  A   913    				push hl			
001071 21 A6 61 00         A   914    				ld hl,output_line
001075 01500000            A   915    				ld bc,max_buffer_chars
001079 3E20                A   916    				ld a,32
00107B CD C6 15 00         A   917    				call os_bchl_memfill
00107F E1                  A   918    				pop hl
001080 C1                  A   919    				pop bc
001081 C9                  A   920    				ret
                           A   921    	
                           A   922    	
                           A   923    	
001082                     A   924    os_skip_leading_ascii_zeros
                           A   925    
001082 7E                  A   926    slazlp			ld a,(hl)						001083 FE30                A   927    				cp '0'							001085 C0                  A   928    				ret nz
001086 23                  A   929    				inc hl
001087 10 F9               A   930    				djnz slazlp
001089 C9                  A   931    				ret
                           A   932    	
                           A   933    
                           A   934    
00108A                     A   935    os_leading_ascii_zeros_to_spaces
                           A   936    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00108A E5                  A   937    				push hl
00108B 7E                  A   938    clazlp			ld a,(hl)						00108C FE30                A   939    				cp '0'							00108E 20 05               A   940    				jr nz,claze	
001090 3620                A   941    				ld (hl),' '
001092 23                  A   942    				inc hl
001093 10 F6               A   943    				djnz clazlp
001095 E1                  A   944    claze			pop hl
001096 C9                  A   945    				ret
                           A   946    	
                           A   947    
                           A   948    
                           A   949    		
001097                     A   950    n_hexbytes_to_ascii
                           A   951    
001097 1A                  A   952    				ld a,(de)						001098 CD A5 10 00         A   953    				call hexbyte_to_ascii			00109C 1B                  A   954    				dec de
00109D 10 F8               A   955    				djnz n_hexbytes_to_ascii
00109F C9                  A   956    				ret
                           A   957    			
                           A   958    			
                           A   959    
0010A0                     A   960    ext_hexbyte_to_ascii
                           A   961    
0010A0 CC ED 15 00         A   962    				call z,mbase_hl
0010A4 7B                  A   963    				ld a,e
                           A   964    
0010A5                     A   965    hexbyte_to_ascii
                           A   966    
0010A5 C5                  A   967    				push bc
0010A6 47                  A   968    				ld b,a							0010A7 CB3F                A   969    				srl a							0010A9 CB3F                A   970    				srl a
0010AB CB3F                A   971    				srl a
0010AD CB3F                A   972    				srl a
0010AF CD C1 10 00         A   973    				call hxdigconv
0010B3 77                  A   974    				ld (hl),a
0010B4 23                  A   975    				inc hl
0010B5 78                  A   976    				ld a,b
0010B6 E60F                A   977    				and 0fh
0010B8 CD C1 10 00         A   978    				call hxdigconv
0010BC 77                  A   979    				ld (hl),a
0010BD 23                  A   980    				inc hl
0010BE C1                  A   981    				pop bc
0010BF AF                  A   982    				xor a							0010C0 C9                  A   983    				ret
                           A   984    				
0010C1 C630                A   985    hxdigconv		add a,030h
0010C3 FE3A                A   986    				cp 03ah
0010C5 38 02               A   987    				jr c,hxdone
0010C7 C607                A   988    				add a,7
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010C9 C9                  A   989    hxdone			ret
                           A   990    
                           A   991    
                           A   992    
                           A   993    
0010CA                     A   994    hexword_to_ascii	
                           A   995    
0010CA 7A                  A   996    				ld a,d							0010CB CD A5 10 00         A   997    				call hexbyte_to_ascii
0010CF 7B                  A   998    				ld a,e
0010D0 CD A5 10 00         A   999    				call hexbyte_to_ascii
0010D4 C9                  A  1000    				ret
                           A  1001    	
                           A  1002    
                           A  1003    
                           A  1004    
0010D5                     A  1005    ext_ascii_to_hexword
                           A  1006    		
0010D5 CC ED 15 00         A  1007    				call z,mbase_hl
                           A  1008    
0010D9                     A  1009    ascii_to_hexword
                           A  1010    	
0010D9 CD F8 0F 00         A  1011    				call os_scan_for_non_space		0010DD B7                  A  1012    				or a
0010DE 20 04               A  1013    				jr nz,ascii_to_hex_no_scan
0010E0 3E81                A  1014    				ld a,081h						0010E2 B7                  A  1015    				or a
0010E3 C9                  A  1016    				ret	
                           A  1017    
                           A  1018    	
0010E4                     A  1019    ascii_to_hex_no_scan
                           A  1020    
0010E4 DDE5                A  1021    				push ix
0010E6 C5                  A  1022    				push bc
0010E7 DD210000 00         A  1023    				ld ix,0
0010EC 0606                A  1024    				ld b,6							0010EE CD 1A 11 00         A  1025    athlp			call ascii_to_hex_digit
0010F2 FEF0                A  1026    				cp 0f0h							0010F4 28 17               A  1027    				jr z,athend
0010F6 FED0                A  1028    				cp 0d0h
0010F8 28 13               A  1029    				jr z,athend						0010FA FE10                A  1030    				cp 16
0010FC 30 17               A  1031    				jr nc,badhex					0010FE DD29                A  1032    				add ix,ix						001100 DD29                A  1033    				add ix,ix
001102 DD29                A  1034    				add ix,ix
001104 DD29                A  1035    				add ix,ix
001106 DDB5                A  1036    				or a,ixl
001108 DD6F                A  1037    				ld ixl,a
00110A 23                  A  1038    				inc hl
00110B 10 E1               A  1039    				djnz athlp
00110D DDE5                A  1040    athend			push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00110F D1                  A  1041    				pop de
001110 AF                  A  1042    				xor a
001111 C1                  A  1043    ath_quit		pop bc
001112 DDE1                A  1044    				pop ix							001114 C9                  A  1045    				ret
                           A  1046    		
001115 3E82                A  1047    badhex			ld a,82h						001117 B7                  A  1048    				or a
001118 18 F7               A  1049    				jr ath_quit
                           A  1050    				
                           A  1051    	
                           A  1052    		
00111A                     A  1053    ascii_to_hex_digit
                           A  1054    
00111A 7E                  A  1055    				ld a,(hl)						00111B FE61                A  1056    				cp 061h
00111D 38 02               A  1057    				jr c,hc_uppercase
00111F D620                A  1058    				sub 020h						001121 D63A                A  1059    hc_uppercase	sub 03ah						001123 38 02               A  1060    				jr c,zeronine
001125 C6F9                A  1061    				add a,0f9h
001127 C60A                A  1062    zeronine		add a,0ah
001129 C9                  A  1063    				ret
                           A  1064    
                           A  1065    
                           A  1066    ;--------- Text Input / Non-numeric string func
                           A  1067    
                           A  1068    ; Waits for user to enter a string of character
                           A  1069    ; Before calling, set:  HL = destination of str
                           A  1070    ;                        E = max number of char
                           A  1071    ; Returns:   A  = number of characters in enter
                           A  1072    
                           A  1073    
00112A                     A  1074    ext_user_input
00112A CC ED 15 00         A  1075    				call z,mbase_hl
                           A  1076    				
00112E                     A  1077    os_user_input
00112E AF                  A  1078    				xor a
00112F 32 C7 5E 00         A  1079    				ld (ui_index),a
001133 22 C9 5E 00         A  1080    				ld (ui_string_addr),hl
001137 7B                  A  1081    				ld a,e
001138 32 C8 5E 00         A  1082    				ld (ui_maxchars),a
                           A  1083    				
00113C 3A F4 5E 00         A  1084    				ld a,(overwrite_mode)
001140 32 53 61 00         A  1085    				ld (ui_im_cache),a
001144 AF                  A  1086    				xor a
001145 32 F4 5E 00         A  1087    				ld (overwrite_mode),a			                           A  1088    				
001149 CD 35 3F 00         A  1089    ui_loop			call hwsc_draw_cursor			00114D CD E7 43 00         A  1090    				call os_wait_key_press			001151 32 6B 62 00         A  1091    				ld (current_scancode),a
001155 78                  A  1092    				ld a,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001156 32 6C 62 00         A  1093    				ld (current_asciicode),a		00115A CD 1B 3F 00         A  1094    				call hwsc_remove_cursor
                           A  1095    	
00115E 3A 6B 62 00         A  1096    				ld a,(current_scancode)
001162 FE66                A  1097    				cp 066h							001164 20 1F               A  1098    				jr nz,os_nuibs
001166 3A C7 5E 00         A  1099    				ld a,(ui_index)
00116A B7                  A  1100    				or a
00116B 28 DC               A  1101    				jr z,ui_loop					00116D 21 37 61 00         A  1102    				ld hl,cursor_x					001171 35                  A  1103    				dec (hl)						001172 46                  A  1104    os_uixok		ld b,(hl)		
001173 3A 36 61 00         A  1105    				ld a,(cursor_y)
001177 4F                  A  1106    				ld c,a
001178 3E20                A  1107    				ld a,32
00117A CD E2 3E 00         A  1108    				call hwsc_plot_char
00117E 21 C7 5E 00         A  1109    				ld hl,ui_index
001182 35                  A  1110    				dec (hl)						001183 18 C4               A  1111    				jr ui_loop
                           A  1112    
001185 FE76                A  1113    os_nuibs		cp 076h							001187 28 6B               A  1114    				jr z,ui_aborted
001189 FE5A                A  1115    				cp 05ah							00118B 28 46               A  1116    				jr z,ui_enter_pressed
                           A  1117    	
00118D 3A C7 5E 00         A  1118    				ld a,(ui_index)					001191 21 C8 5E 00         A  1119    				ld hl,ui_maxchars
001195 BE                  A  1120    				cp (hl)
001196 28 B1               A  1121    				jr z,ui_loop	
                           A  1122    
001198 3A 6C 62 00         A  1123    				ld a,(current_asciicode)		00119C FE20                A  1124    				cp 32							00119E 38 A9               A  1125    				jr c,ui_loop					                           A  1126    
0011A0 57                  A  1127    ui_gtcha		ld d,a
0011A1 2A C9 5E 00         A  1128    				ld hl,(ui_string_addr)
0011A5 3A C7 5E 00         A  1129    				ld a,(ui_index)
0011A9 01000000            A  1130    				ld bc,0
0011AD 4F                  A  1131    				ld c,a
0011AE 09                  A  1132    				add hl,bc
0011AF 72                  A  1133    				ld (hl),d						0011B0 3C                  A  1134    				inc a
0011B1 32 C7 5E 00         A  1135    				ld (ui_index),a					                           A  1136    				
0011B5 ED4B 36 61 00       A  1137    				ld bc,(cursor_y)				0011BA 7A                  A  1138    				ld a,d
0011BB CD E2 3E 00         A  1139    				call hwsc_plot_char		
0011BF 21 37 61 00         A  1140    				ld hl,cursor_x					0011C3 34                  A  1141    				inc (hl)
0011C4 3A FA 5E 00         A  1142    				ld a,(charmap_columns)			0011C8 BE                  A  1143    				cp (hl)
0011C9 C2 49 11 00         A  1144    				jp nz,ui_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011CD 3600                A  1145    				ld (hl),0
0011CF C3 49 11 00         A  1146    				jp ui_loop
                           A  1147    
0011D3                     A  1148    ui_enter_pressed
                           A  1149    				
0011D3 3A 53 61 00         A  1150    				ld a,(ui_im_cache)				0011D7 32 F4 5E 00         A  1151    				ld (overwrite_mode),a
0011DB 3A C7 5E 00         A  1152    				ld a,(ui_index)					0011DF B7                  A  1153    				or a
0011E0 20 04               A  1154    				jr nz,ui_data
0011E2 3E81                A  1155    				ld a,081h						0011E4 B7                  A  1156    				or a
0011E5 C9                  A  1157    				ret
0011E6 2A C9 5E 00         A  1158    ui_data			ld hl,(ui_string_addr)
0011EA 11000000            A  1159    				ld de,0
0011EE 5F                  A  1160    				ld e,a
0011EF 19                  A  1161    				add hl,de
0011F0 3600                A  1162    				ld (hl),0						0011F2 BF                  A  1163    				cp a							0011F3 C9                  A  1164    				ret
                           A  1165    
0011F4 3A 53 61 00         A  1166    ui_aborted		ld a,(ui_im_cache)				0011F8 32 F4 5E 00         A  1167    				ld (overwrite_mode),a
0011FC 3E80                A  1168    				ld a,080h						0011FE B7                  A  1169    				or a							0011FF C9                  A  1170    				ret
                           A  1171    		
                           A  1172    ;----------------------------------------------
                           A  1173    	
001200                     A  1174    os_count_lines
                           A  1175    
001200 E5                  A  1176    				push hl							001201 0679                A  1177    				ld b,'y'						001203 21 3B 61 00         A  1178    				ld hl,os_linecount			
001207 34                  A  1179    				inc (hl)						001208 3A F7 5E 00         A  1180    				ld a,(charmap_rows)
00120C D604                A  1181    				sub 4
00120E BE                  A  1182    				cp (hl)
00120F 20 0E               A  1183    				jr nz,os_nntpo
001211 3600                A  1184    				ld (hl),0
001213 21 70 56 00         A  1185    				ld hl,os_more_txt
001217 CD 5A 0F 00         A  1186    				call os_print_string
00121B CD E7 43 00         A  1187    				call os_wait_key_press	
00121F E1                  A  1188    os_nntpo		pop hl
001220 C9                  A  1189    				ret
                           A  1190    
                           A  1191    ;----------------------------------------------
                           A  1192    
001221                     A  1193    ext_compare_strings
                           A  1194    	
001221 CC ED 15 00         A  1195    				call z,mbase_hl
001225 CC FE 15 00         A  1196    				call z,mbase_de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1197    				
001229                     A  1198    os_compare_strings
                           A  1199    
                           A  1200    ; both strings at HL/DE should be zero terminat
                           A  1201    ; compare will fail if string lengths are diffe
                           A  1202    ; unless count (B) is reached first
                           A  1203    ; Case is ignored
                           A  1204    ; Zero flag set on return if same
                           A  1205    
001229 E5                  A  1206    				push hl							00122A D5                  A  1207    				push de							00122B 1A                  A  1208    ocslp			ld a,(de)						00122C B7                  A  1209    				or a
00122D 28 0C               A  1210    				jr z,ocsbt
00122F CD 6C 12 00         A  1211    				call case_insensitive_compare	001233 20 0E               A  1212    				jr nz,ocs_diff
001235 13                  A  1213    				inc de
001236 23                  A  1214    				inc hl
001237 10 F2               A  1215    				djnz ocslp
001239 18 04               A  1216    				jr ocs_same
00123B 1A                  A  1217    ocsbt			ld a,(de)						00123C B6                  A  1218    				or (hl)
00123D 20 04               A  1219    				jr nz,ocs_diff
00123F D1                  A  1220    ocs_same		pop de
001240 E1                  A  1221    				pop hl
001241 AF                  A  1222    				xor a							001242 C9                  A  1223    				ret
001243 D1                  A  1224    ocs_diff		pop de
001244 E1                  A  1225    				pop hl
001245 AF                  A  1226    				xor a							001246 3C                  A  1227    				inc a
001247 C9                  A  1228    				ret
                           A  1229    
                           A  1230    
                           A  1231    ;----------------------------------------------
                           A  1232    
001248                     A  1233    os_copy_ascii_run
                           A  1234    
                           A  1235    ;INPUT HL = source ($00 or $20 terminates)
                           A  1236    ;      DE = dest
                           A  1237    ;       b = max chars
                           A  1238    
                           A  1239    ;OUTPUT HL/DE = end of runs
                           A  1240    ;           c = char count
                           A  1241    	
001248 0E00                A  1242    				ld c,0
00124A 7E                  A  1243    cpyar_lp		ld a,(hl)
00124B B7                  A  1244    				or a
00124C C8                  A  1245    				ret z
00124D FE20                A  1246    				cp 32
00124F C8                  A  1247    				ret z
001250 12                  A  1248    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001251 23                  A  1249    				inc hl
001252 13                  A  1250    				inc de
001253 0C                  A  1251    				inc c
001254 10 F4               A  1252    				djnz cpyar_lp
001256 C9                  A  1253    				ret
                           A  1254    
                           A  1255    ;----------------------------------------------
                           A  1256    
001257                     A  1257    uppercasify_string
                           A  1258    
                           A  1259    ; Set HL to string location ($00 quits)
                           A  1260    ; Set B to max number of chars
                           A  1261    
001257 7E                  A  1262    				ld a,(hl)
001258 B7                  A  1263    				or a
001259 C8                  A  1264    				ret z
00125A CD 63 12 00         A  1265    				call os_uppercasify
00125E 77                  A  1266    				ld (hl),a
00125F 23                  A  1267    				inc hl
001260 10 F5               A  1268    				djnz uppercasify_string	
001262 C9                  A  1269    				ret
                           A  1270    	
                           A  1271    
001263                     A  1272    os_uppercasify
                           A  1273    
                           A  1274    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1275    
001263 FE61                A  1276    				cp 061h			
001265 D8                  A  1277    				ret c
001266 FE7B                A  1278    				cp 07bh
001268 D0                  A  1279    				ret nc
001269 D620                A  1280    				sub 020h				
00126B C9                  A  1281    				ret
                           A  1282    
                           A  1283    ;----------------------------------------------
                           A  1284    
00126C                     A  1285    case_insensitive_compare
                           A  1286    
                           A  1287    ; compares A with (HL) disregarding the case of
                           A  1288    ; Zero flag set if the characters are the same
                           A  1289    ; all registers are preserved.
                           A  1290    
00126C C5                  A  1291    				push bc					
00126D 4F                  A  1292    				ld c,a
                           A  1293    
00126E CD 63 12 00         A  1294    				call os_uppercasify				001272 47                  A  1295    				ld b,a
001273 7E                  A  1296    				ld a,(hl)
001274 CD 63 12 00         A  1297    				call os_uppercasify
001278 B8                  A  1298    				cp b
                           A  1299    
001279 79                  A  1300    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00127A C1                  A  1301    				pop bc
00127B C9                  A  1302    				ret
                           A  1303    
                           A  1304    ;----------------------------------------------
                           A  1305    
00127C                     A  1306    os_decimal_add
                           A  1307    
                           A  1308    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1309    
00127C C5                  A  1310    				push bc
00127D 0E00                A  1311    				ld c,0
00127F 1A                  A  1312    decdlp			ld a,(de)
001280 86                  A  1313    				add a,(hl)
001281 81                  A  1314    				add a,c
001282 FE0A                A  1315    				cp 10
001284 38 0B               A  1316    				jr c,daddnc
001286 D60A                A  1317    				sub 10
001288 0E01                A  1318    				ld c,1
00128A 12                  A  1319    decnclp			ld (de),a
00128B 23                  A  1320    				inc hl
00128C 13                  A  1321    				inc de
00128D 10 F0               A  1322    				djnz decdlp
00128F C1                  A  1323    				pop bc
001290 C9                  A  1324    				ret
001291 0E00                A  1325    daddnc			ld c,0
001293 18 F5               A  1326    				jr decnclp
                           A  1327    	
                           A  1328    ;----------------------------------------------
                           A  1329    
001295                     A  1330    os_hex_to_decimal
                           A  1331    
                           A  1332    ; INPUT xDE hex longword
                           A  1333    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1334    
       00006886            A  1335    hex_to_convert		equ scratch_pad
       00006889            A  1336    decimal_digits		equ scratch_pad+3
       00006891            A  1337    decimal_add_digits	equ scratch_pad+3+8
                           A  1338    
001295 ED53 86 68 00       A  1339    				ld (hex_to_convert),de
                           A  1340    		
00129A 21 91 68 00         A  1341    				ld hl,decimal_add_digits
00129E E5                  A  1342    				push hl
00129F 11 89 68 00         A  1343    				ld de,decimal_digits
0012A3 AF                  A  1344    				xor a
0012A4 0608                A  1345    				ld b,8
0012A6 12                  A  1346    setupdec		ld (de),a
0012A7 77                  A  1347    				ld (hl),a
0012A8 23                  A  1348    				inc hl
0012A9 13                  A  1349    				inc de
0012AA 10 FA               A  1350    				djnz setupdec
0012AC E1                  A  1351    				pop hl
0012AD 3601                A  1352    				ld (hl),1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1353    	
0012AF 21 86 68 00         A  1354    				ld hl,hex_to_convert
0012B3 0603                A  1355    				ld b,3
0012B5 C5                  A  1356    decconvlp		push bc
0012B6 7E                  A  1357    				ld a,(hl)
0012B7 CD D5 12 00         A  1358    				call decadder
0012BB CD EE 12 00         A  1359    				call decaddx16
0012BF 7E                  A  1360    				ld a,(hl)
0012C0 0F                  A  1361    				rrca
0012C1 0F                  A  1362    				rrca
0012C2 0F                  A  1363    				rrca
0012C3 0F                  A  1364    				rrca
0012C4 CD D5 12 00         A  1365    				call decadder
0012C8 CD EE 12 00         A  1366    				call decaddx16
0012CC C1                  A  1367    				pop bc
0012CD 23                  A  1368    				inc hl
0012CE 10 E5               A  1369    				djnz decconvlp
0012D0 21 89 68 00         A  1370    				ld hl,decimal_digits
0012D4 C9                  A  1371    				ret
                           A  1372    
                           A  1373    
                           A  1374    
0012D5 E60F                A  1375    decadder		and 15
0012D7 C8                  A  1376    				ret z
0012D8 47                  A  1377    				ld b,a
0012D9 E5                  A  1378    				push hl
0012DA C5                  A  1379    daddlp			push bc
0012DB 11 89 68 00         A  1380    				ld de,decimal_digits
0012DF 21 91 68 00         A  1381    				ld hl,decimal_add_digits
0012E3 0608                A  1382    				ld b,8
0012E5 CD 7C 12 00         A  1383    				call os_decimal_add
0012E9 C1                  A  1384    				pop bc
0012EA 10 EE               A  1385    				djnz daddlp	
0012EC E1                  A  1386    				pop hl
0012ED C9                  A  1387    				ret
                           A  1388    			
                           A  1389    				
0012EE E5                  A  1390    decaddx16		push hl
0012EF 0604                A  1391    				ld b,4							0012F1 C5                  A  1392    x16loop			push bc
0012F2 11 91 68 00         A  1393    				ld de,decimal_add_digits
0012F6 21 91 68 00         A  1394    				ld hl,decimal_add_digits
0012FA 0608                A  1395    				ld b,8
0012FC CD 7C 12 00         A  1396    				call os_decimal_add
001300 C1                  A  1397    				pop bc
001301 10 EE               A  1398    				djnz x16loop	
001303 E1                  A  1399    				pop hl
001304 C9                  A  1400    				ret
                           A  1401    	
                           A  1402    	
                           A  1403    ;----------------------------------------------
                           A  1404    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001305                     A  1405    os_show_decimal
                           A  1406    
001305 11 A6 61 00         A  1407    				ld de,output_line				001309 01090000            A  1408    				ld bc,9
00130D 09                  A  1409    				add hl,bc
00130E 060A                A  1410    				ld b,10
001310 7E                  A  1411    shdeclp			ld a,(hl)
001311 B7                  A  1412    				or a
001312 28 04               A  1413    				jr z,dnodigit
001314 C630                A  1414    				add a,030h
001316 12                  A  1415    				ld (de),a
001317 13                  A  1416    				inc de
001318 2B                  A  1417    dnodigit		dec hl
001319 10 F5               A  1418    				djnz shdeclp
00131B AF                  A  1419    				xor a
00131C 12                  A  1420    				ld (de),a
00131D CD 65 13 00         A  1421    				call os_print_output_line
001321 C9                  A  1422    				ret
                           A  1423    				
                           A  1424    ;----------------------------------------------
                           A  1425    		
001322                     A  1426    os_copy_to_output_line
                           A  1427    	
001322 D5                  A  1428    				push de
001323 C5                  A  1429    				push bc
001324 11 A6 61 00         A  1430    				ld de,output_line				001328 01510000            A  1431    				ld bc,max_buffer_chars+1		00132C EDA0                A  1432    os_cloll		ldi
00132E 7E                  A  1433    				ld a,(hl)
00132F B7                  A  1434    				or a
001330 28 04               A  1435    				jr z,os_clold
001332 78                  A  1436    				ld a,b
001333 B1                  A  1437    				or c
001334 20 F6               A  1438    				jr nz,os_cloll
001336 12                  A  1439    os_clold		ld (de),a
001337 C1                  A  1440    				pop bc
001338 D1                  A  1441    				pop de
001339 C9                  A  1442    				ret
                           A  1443    
                           A  1444    
                           A  1445    ;----------------------------------------------
                           A  1446    
00133A                     A  1447    os_show_hex_address
                           A  1448    
00133A E5                  A  1449    				push hl							00133B 21 A6 61 00         A  1450    				ld hl,output_line
00133F ED53 48 61 00       A  1451    				ld (hex_address),de
001344 3A 4A 61 00         A  1452    				ld a,(hex_address+2)
001348 CD A5 10 00         A  1453    				call hexbyte_to_ascii
00134C 18 10               A  1454    				jr shw_nt
                           A  1455    				
                           A  1456    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00134E                     A  1457    os_show_hex_byte
                           A  1458    
00134E E5                  A  1459    				push hl							00134F 21 A6 61 00         A  1460    				ld hl,output_line
001353 CD A5 10 00         A  1461    				call hexbyte_to_ascii
001357 18 09               A  1462    				jr shb_nt
                           A  1463    
                           A  1464    
                           A  1465    
001359                     A  1466    os_show_hex_word
                           A  1467    
001359 E5                  A  1468    				push hl							00135A 21 A6 61 00         A  1469    				ld hl,output_line
00135E CD CA 10 00         A  1470    shw_nt			call hexword_to_ascii
001362 3600                A  1471    shb_nt			ld (hl),0
001364 E1                  A  1472    				pop hl
                           A  1473    
                           A  1474    	
                           A  1475    
001365                     A  1476    os_print_output_line
                           A  1477    
001365 E5                  A  1478    				push hl
001366 21 A6 61 00         A  1479    				ld hl,output_line
00136A CD 5A 0F 00         A  1480    cproline		call os_print_string
00136E E1                  A  1481    				pop hl
00136F C9                  A  1482    				ret
                           A  1483    
                           A  1484    
                           A  1485    
001370                     A  1486    os_print_output_line_skip_zeroes
                           A  1487    
001370 E5                  A  1488    				push hl
001371 21 A6 61 00         A  1489    				ld hl,output_line
001375 CD 82 10 00         A  1490    				call os_skip_leading_ascii_zero
001379 18 EF               A  1491    				jr cproline
                           A  1492    				
                           A  1493    		
                           A  1494    ;----------------------------------------------
                           A  1495    
00137B                     A  1496    os_store_CPU_regs
                           A  1497    
00137B F3                  A  1498    				di								                           A  1499    
00137C 33                  A  1500    				inc sp							00137D 33                  A  1501    				inc sp
00137E 33                  A  1502    				inc sp
00137F ED73 C4 60 00       A  1503    				ld (store_spl),sp
001384 3B                  A  1504    				dec sp							001385 3B                  A  1505    				dec sp
001386 3B                  A  1506    				dec sp
                           A  1507    				
001387 F5                  A  1508    				push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001388 32 A7 60 00         A  1509    				ld (store_a1),a					00138C 08                  A  1510    				ex af,af'
00138D 32 B1 60 00         A  1511    				ld (store_a2),a
001391 08                  A  1512    				ex af,af'
001392 ED43 A8 60 00       A  1513    				ld (store_bc1),bc		
001397 ED53 AB 60 00       A  1514    				ld (store_de1),de
00139C 22 AE 60 00         A  1515    				ld (store_hl1),hl
0013A0 D9                  A  1516    				exx
0013A1 ED43 B2 60 00       A  1517    				ld (store_bc2),bc
0013A6 ED53 B5 60 00       A  1518    				ld (store_de2),de
0013AB 22 B8 60 00         A  1519    				ld (store_hl2),hl
0013AF D9                  A  1520    				exx
0013B0 DD22 BB 60 00       A  1521    				ld (store_ix),ix
0013B5 FD22 BE 60 00       A  1522    				ld (store_iy),iy
                           A  1523    				
0013BA ED6E                A  1524    			    ld a,MB
0013BC 32 C9 60 00         A  1525    				ld (store_mbase),a
                           A  1526    								
0013C0 C5                  A  1527    				push bc
0013C1 0600                A  1528    				ld b,0
0013C3 20 02               A  1529    				jr nz,zfstzero					0013C5 CBF0                A  1530    				set 6,b
                           A  1531    
0013C7 30 02               A  1532    zfstzero		jr nc,cfstzero					0013C9 CBC0                A  1533    				set 0,b
                           A  1534    
0013CB F2 D1 13 00         A  1535    cfstzero		jp p,sfstzero					0013CF CBF8                A  1536    				set 7,b
                           A  1537    
0013D1 EA D7 13 00         A  1538    sfstzero		jp pe,pfstzero					0013D5 CBD0                A  1539    				set 2,b
                           A  1540    
0013D7 ED57                A  1541    pfstzero		ld a,i			
0013D9 EA DF 13 00         A  1542    				jp pe,ifstzero					0013DD CBE0                A  1543    				set 4,b
                           A  1544    
0013DF 78                  A  1545    ifstzero		ld a,b
0013E0 32 CA 60 00         A  1546    				ld (store_f),a
                           A  1547    				
0013E4 3E00                A  1548    				ld a,os_location/65536			0013E6 ED6D                A  1549    				ld MB,a							0013E8 40ED73 C7 60        A  1550    				ld.sis (store_sps),sp
0013ED 3A C9 60 00         A  1551    				ld a,(store_mbase)				0013F1 ED6D                A  1552    				ld MB,a
                           A  1553    				
0013F3 C1                  A  1554    				pop bc
0013F4 F1                  A  1555    				pop af
0013F5 FB                  A  1556    				ei
0013F6 C9                  A  1557    				ret
                           A  1558    
                           A  1559    
                           A  1560    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013F7                     A  1561    os_dont_store_registers
                           A  1562    
0013F7 AF                  A  1563    				xor a
0013F8 32 CF 60 00         A  1564    				ld (store_registers),a			0013FC C9                  A  1565    				ret
                           A  1566    	
                           A  1567    	
                           A  1568    ;----------------------------------------------
                           A  1569    
0013FD                     A  1570    os_new_line_cond
                           A  1571    
0013FD CD 5D 1A 00         A  1572    				call test_quiet_mode
001401 C0                  A  1573    				ret nz
                           A  1574    
                           A  1575    	
001402                     A  1576    os_new_line
                           A  1577    
001402 E5                  A  1578    				push hl
001403 21 88 56 00         A  1579    				ld hl,crlfx2_txt+1
001407 CD 5A 0F 00         A  1580    				call os_print_string
00140B E1                  A  1581    				pop hl
00140C C9                  A  1582    				ret
                           A  1583    				
                           A  1584    ;----------------------------------------------
                           A  1585    
00140D                     A  1586    os_set_cursor_position
                           A  1587    				
                           A  1588    												00140D 3A F7 5E 00         A  1589    				ld a,(charmap_rows)				001411 3D                  A  1590    				dec a							001412 B9                  A  1591    				cp c
001413 38 14               A  1592    				jr c,badpos
001415 79                  A  1593    				ld a,c
001416 32 36 61 00         A  1594    				ld (cursor_y),a
                           A  1595    				
00141A 3A FA 5E 00         A  1596    				ld a,(charmap_columns)
00141E 3D                  A  1597    				dec a
00141F B8                  A  1598    				cp b
001420 38 07               A  1599    				jr c,badpos
001422 78                  A  1600    				ld a,b
001423 32 37 61 00         A  1601    				ld (cursor_x),a
001427 AF                  A  1602    				xor a
001428 C9                  A  1603    				ret				
                           A  1604    
001429 3E88                A  1605    badpos			ld a,88h						00142B B7                  A  1606    				or a
00142C C9                  A  1607    				ret
                           A  1608    
                           A  1609    
                           A  1610    					
                           A  1611    	
                           A  1612    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00142D                     A  1613    os_get_cursor_position
                           A  1614    
00142D ED4B 36 61 00       A  1615    				ld bc,(cursor_pos)				001432 BF                  A  1616    				cp a							001433 C9                  A  1617    				ret
                           A  1618    
                           A  1619    
                           A  1620    ;----------------------------------------------
                           A  1621    
001434                     A  1622    os_show_packed_text_cond
                           A  1623    
001434 CD 5D 1A 00         A  1624    				call test_quiet_mode
001438 C0                  A  1625    				ret nz
                           A  1626    
                           A  1627    	
001439                     A  1628    os_show_packed_text
                           A  1629    
                           A  1630    ; Construct sentence from internal dictionary u
                           A  1631    	
001439 C5                  A  1632    				push bc
00143A D5                  A  1633    				push de
00143B DDE5                A  1634    				push ix
00143D DD21 A6 61 00       A  1635    				ld ix,output_line
001442 7E                  A  1636    readpind		ld a,(hl)
001443 B7                  A  1637    				or a
001444 20 10               A  1638    				jr nz,getword					001446 DD2B                A  1639    				dec ix							001448 DD7700              A  1640    				ld (ix),a						                           A  1641    			
00144B E5                  A  1642    				push hl
00144C CD 65 13 00         A  1643    				call os_print_output_line
001450 E1                  A  1644    				pop hl
                           A  1645    			
001451 DDE1                A  1646    				pop ix
001453 D1                  A  1647    				pop de
001454 C1                  A  1648    				pop bc
001455 C9                  A  1649    				ret
                           A  1650    				
001456 11 B7 56 00         A  1651    getword			ld de,dictionary-1
00145A 0E00                A  1652    				ld c,0
00145C 13                  A  1653    dictloop		inc de
00145D 1A                  A  1654    				ld a,(de)
00145E B7                  A  1655    				or a							00145F 28 04               A  1656    				jr z,faword
001461 CB7F                A  1657    				bit 7,a							001463 28 F7               A  1658    				jr z,dictloop	
                           A  1659    			
001465 0C                  A  1660    faword			inc c							001466 79                  A  1661    				ld a,c
001467 BE                  A  1662    				cp (hl)
001468 20 F2               A  1663    				jr nz,dictloop
00146A 13                  A  1664    copytol			inc de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00146B 1A                  A  1665    				ld a,(de)
00146C B7                  A  1666    				or a
00146D 28 0B               A  1667    				jr z,eoword						00146F CB7F                A  1668    				bit 7,a
001471 20 07               A  1669    				jr nz,eoword
001473 DD7700              A  1670    				ld (ix),a						001476 DD23                A  1671    				inc ix
001478 18 F0               A  1672    				jr copytol
00147A DD360020            A  1673    eoword			ld (ix),32						00147E DD23                A  1674    				inc ix
001480 23                  A  1675    				inc hl
001481 18 BF               A  1676    				jr readpind
                           A  1677    
                           A  1678    
                           A  1679    		
                           A  1680    ;--------- Mouse functions --------------------
                           A  1681    
001483                     A  1682    os_set_mouse_window
                           A  1683    
                           A  1684    ; Set: HL/DE = window size mouse pointer is to 
                           A  1685    	
001483 22 7D 62 00         A  1686    				ld (mouse_window_size_x),hl	 
001487 ED53 80 62 00       A  1687    				ld (mouse_window_size_y),de
00148C 21000000            A  1688    				ld hl,0
001490 22 83 62 00         A  1689    				ld (mouse_abs_x),hl
001494 22 86 62 00         A  1690    				ld (mouse_abs_y),hl
001498 3E01                A  1691    				ld a,1
00149A 32 95 62 00         A  1692    				ld (mouse_new_window),a
00149E AF                  A  1693    				xor a
00149F C9                  A  1694    				ret
                           A  1695    				
                           A  1696    			
0014A0                     A  1697    os_get_mouse_motion
                           A  1698    			
                           A  1699    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1700    ;          ZF = Not set: Mouse driver not initi
                           A  1701    			
0014A0 3A 9A 60 00         A  1702    				ld a,(devices_connected)
0014A4 E602                A  1703    				and 2
0014A6 EE02                A  1704    				xor 2
0014A8 C0                  A  1705    				ret nz
0014A9 AF                  A  1706    ms_reread		xor a
0014AA 32 7C 62 00         A  1707    				ld (mouse_updated),a
0014AE 2A 75 62 00         A  1708    				ld hl,(mouse_disp_x)			0014B2 ED5B 78 62 00       A  1709    				ld de,(mouse_disp_y)
0014B7 3A 7C 62 00         A  1710    				ld a,(mouse_updated)			0014BB B7                  A  1711    				or a
0014BC 20 EB               A  1712    				jr nz,ms_reread
0014BE AF                  A  1713    mouse_end		xor a
0014BF 3A 7B 62 00         A  1714    				ld a,(mouse_wheel)
0014C3 47                  A  1715    				ld b,a
0014C4 3A 74 62 00         A  1716    				ld a,(mouse_buttons)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C8 C9                  A  1717    				ret
                           A  1718    			
                           A  1719    			
0014C9                     A  1720    os_get_mouse_position
                           A  1721    
                           A  1722    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1723    ;          ZF = Not set: Mouse driver not initi
                           A  1724    				
0014C9 CD A0 14 00         A  1725    				call os_get_mouse_motion
0014CD C0                  A  1726    				ret nz
0014CE 22 8F 62 00         A  1727    				ld (mouse_disp_x_buffer),hl
0014D2 ED53 92 62 00       A  1728    				ld (mouse_disp_y_buffer),de
0014D7 3A 95 62 00         A  1729    				ld a,(mouse_new_window)
0014DB B7                  A  1730    				or a
0014DC 20 6C               A  1731    				jr nz,ms_nmw
                           A  1732    
0014DE ED5B 89 62 00       A  1733    				ld de,(mouse_disp_x_old)
0014E3 AF                  A  1734    				xor a
0014E4 ED52                A  1735    				sbc hl,de
0014E6 EB                  A  1736    				ex de,hl
0014E7 2A 83 62 00         A  1737    				ld hl,(mouse_abs_x)
0014EB 19                  A  1738    				add hl,de
0014EC E5                  A  1739    				push hl
0014ED C1                  A  1740    				pop bc
0014EE DD210000 80         A  1741    				ld ix,800000h					0014F3 DD09                A  1742    				add ix,bc
0014F5 30 06               A  1743    				jr nc,ms_x_ok1
0014F7 01000000            A  1744    				ld bc,0
0014FB 18 10               A  1745    				jr ms_x_ok2
0014FD ED5B 7D 62 00       A  1746    ms_x_ok1		ld de,(mouse_window_size_x)
001502 AF                  A  1747    				xor a
001503 ED52                A  1748    				sbc hl,de
001505 38 06               A  1749    				jr c,ms_x_ok2
001507 ED4B 7D 62 00       A  1750    				ld bc,(mouse_window_size_x)		00150C 0B                  A  1751    				dec bc
00150D ED43 83 62 00       A  1752    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1753    					
001512 2A 92 62 00         A  1754    				ld hl,(mouse_disp_y_buffer)
001516 ED5B 8C 62 00       A  1755    				ld de,(mouse_disp_y_old)
00151B AF                  A  1756    				xor a
00151C ED52                A  1757    				sbc hl,de
00151E EB                  A  1758    				ex de,hl
00151F 2A 86 62 00         A  1759    				ld hl,(mouse_abs_y)
001523 19                  A  1760    				add hl,de
001524 E5                  A  1761    				push hl
001525 C1                  A  1762    				pop bc
001526 DD210000 80         A  1763    				ld ix,800000h					00152B DD09                A  1764    				add ix,bc
00152D 30 06               A  1765    				jr nc,ms_y_ok1
00152F 01000000            A  1766    				ld bc,0
001533 18 10               A  1767    				jr ms_y_ok2
001535 ED5B 80 62 00       A  1768    ms_y_ok1		ld de,(mouse_window_size_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00153A AF                  A  1769    				xor a
00153B ED52                A  1770    				sbc hl,de
00153D 38 06               A  1771    				jr c,ms_y_ok2
00153F ED4B 80 62 00       A  1772    				ld bc,(mouse_window_size_y)		001544 0B                  A  1773    				dec bc
001545 ED43 86 62 00       A  1774    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1775    
                           A  1776    				
00154A 2A 8F 62 00         A  1777    ms_nmw			ld hl,(mouse_disp_x_buffer)
00154E 22 89 62 00         A  1778    				ld (mouse_disp_x_old),hl
001552 2A 92 62 00         A  1779    				ld hl,(mouse_disp_y_buffer)
001556 22 8C 62 00         A  1780    				ld (mouse_disp_y_old),hl
                           A  1781    				
00155A 2A 83 62 00         A  1782    				ld hl,(mouse_abs_x)
00155E ED5B 86 62 00       A  1783    				ld de,(mouse_abs_y)
                           A  1784    				
001563 AF                  A  1785    				xor a
001564 32 95 62 00         A  1786    				ld (mouse_new_window),a
001568 C3 BE 14 00         A  1787    				jp mouse_end
                           A  1788    				
                           A  1789    	
                           A  1790    ;==============================================
                           A  1791    ;----- General Subroutines --------------------
                           A  1792    ;==============================================
                           A  1793    
                           A  1794    ; .--------------.
                           A  1795    ; ! CRC Checksum !
                           A  1796    ; '--------------'
                           A  1797    
                           A  1798    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1799    
00156C                     A  1800    crc_checksum
                           A  1801    
00156C 21FFFF00            A  1802    				ld hl,0ffffh		
001570 1A                  A  1803    crcloop			ld a,(de)			
001571 AC                  A  1804    				xor h			
001572 67                  A  1805    				ld h,a			
001573 0608                A  1806    				ld b,8
001575 4029                A  1807    crcbyte			add.sis hl,hl					001577 30 08               A  1808    				jr nc,crcnext
001579 7C                  A  1809    				ld a,h
00157A EE10                A  1810    				xor 10h
00157C 67                  A  1811    				ld h,a
00157D 7D                  A  1812    				ld a,l
00157E EE21                A  1813    				xor 21h
001580 6F                  A  1814    				ld l,a
001581 10 F2               A  1815    crcnext			djnz crcbyte
001583 13                  A  1816    				inc de
001584 0D                  A  1817    				dec c
001585 20 E9               A  1818    				jr nz,crcloop
001587 C9                  A  1819    				ret
                           A  1820    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1821    
                           A  1822    ;----------------------------------------------
                           A  1823    
001588                     A  1824    os_get_key_mod_flags
                           A  1825    
001588 3A 6A 62 00         A  1826    				ld a,(key_mod_flags)
00158C BF                  A  1827    				cp a							00158D C9                  A  1828    				ret
                           A  1829    
                           A  1830    ;----------------------------------------------
                           A  1831    
00158E                     A  1832    os_get_vmode
                           A  1833    			
00158E 3A F7 5E 00         A  1834    				ld a,(charmap_rows)
001592 4F                  A  1835    				ld c,a
001593 3A FA 5E 00         A  1836    				ld a,(charmap_columns)
001597 47                  A  1837    				ld b,a
001598 3A CC 5E 00         A  1838    				ld a,(video_mode)
00159C BF                  A  1839    				cp a						; Z
00159D C9                  A  1840    				ret
                           A  1841    
                           A  1842    ;----------------------------------------------
                           A  1843    
00159E 7B                  A  1844    ext_set_vmode	ld a,e
                           A  1845    
00159F FE04                A  1846    os_set_vmode	cp 4
0015A1 38 04               A  1847    				jr c,vm_range_ok
0015A3 3E88                A  1848    				ld a,88h					;ou
0015A5 B7                  A  1849    				or a
0015A6 C9                  A  1850    				ret
                           A  1851    				
0015A7 32 CC 5E 00         A  1852    vm_range_ok		ld (video_mode),a
0015AB 21030000            A  1853    				ld hl,3
0015AF 67                  A  1854    				ld h,a
0015B0 ED6C                A  1855    				mlt hl
0015B2 11 FD 5E 00         A  1856    				ld de,vmode_parameter_list
0015B6 19                  A  1857    				add hl,de
0015B7 7E                  A  1858    				ld a,(hl)
0015B8 23                  A  1859    				inc hl
0015B9 46                  A  1860    				ld b,(hl)
0015BA 23                  A  1861    				inc hl
0015BB 4E                  A  1862    				ld c,(hl)
0015BC CD CF 3D 00         A  1863    				call set_charmap_parameters
                           A  1864    				
0015C0 CD 6C 3E 00         A  1865    				call hwsc_clear_screen
                           A  1866    
0015C4 AF                  A  1867    				xor a				
0015C5 C9                  A  1868    				ret
                           A  1869    
                           A  1870    
                           A  1871    ;----------------------------------------------
                           A  1872    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015C6                     A  1873    os_bchl_memfill
                           A  1874    
                           A  1875    ; fill memory from xHL with A. Count in xBC.
                           A  1876    		
0015C6 77                  A  1877    mf_loop			ld (hl),a
0015C7 EDA1                A  1878    				cpi								0015C9 EA C6 15 00         A  1879    				jp pe,mf_loop
0015CD C9                  A  1880    				ret
                           A  1881    	
                           A  1882    ;----------------------------------------------
                           A  1883    
0015CE 7B                  A  1884    ext_set_pen		ld a,e
                           A  1885    
0015CF 32 CD 5E 00         A  1886    os_set_pen		ld (current_pen),a
0015D3 BF                  A  1887    				cp a							0015D4 C9                  A  1888    				ret
                           A  1889    
                           A  1890    ;----------------------------------------------
                           A  1891    	
0015D5 3A CD 5E 00         A  1892    os_get_pen		ld a,(current_pen)
0015D9 BF                  A  1893    				cp a							0015DA C9                  A  1894    				ret	
                           A  1895    
                           A  1896    ;----------------------------------------------
                           A  1897    
0015DB                     A  1898    ext_background_colours
                           A  1899    				
0015DB CC ED 15 00         A  1900    				call z,mbase_hl
0015DF C3 60 3E 00         A  1901    				jp hswc_set_ui_colours
                           A  1902    				
                           A  1903    				
                           A  1904    ;----------------------------------------------
                           A  1905    
0015E3                     A  1906    os_get_xde_msb	
                           A  1907    			
0015E3 ED53 4E 61 00       A  1908    				ld (xrr_temp),de				0015E8 3A 50 61 00         A  1909    				ld a,(xrr_temp+2)
0015EC C9                  A  1910    				ret
                           A  1911    
                           A  1912    ;----------------------------------------------
                           A  1913    
0015ED F5                  A  1914    mbase_hl		push af
0015EE 22 4E 61 00         A  1915    				ld (xrr_temp),hl				0015F2 ED6E                A  1916    				ld a,MB
0015F4 32 50 61 00         A  1917    				ld (xrr_temp+2),a
0015F8 2A 4E 61 00         A  1918    				ld hl,(xrr_temp)
0015FC F1                  A  1919    				pop af
0015FD C9                  A  1920    				ret
                           A  1921    				
0015FE F5                  A  1922    mbase_de		push af
0015FF ED53 4E 61 00       A  1923    				ld (xrr_temp),de				001604 ED6E                A  1924    				ld a,MB
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001606 32 50 61 00         A  1925    				ld (xrr_temp+2),a
00160A ED5B 4E 61 00       A  1926    				ld de,(xrr_temp)
00160F F1                  A  1927    				pop af
001610 C9                  A  1928    				ret
                           A  1929    
                           A  1930    
                           A  1931    ;----------------------------------------------
                           A  1932    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1933    ;----------------------------------------------
                           A  1934    
001611                     A  1935    unpack_rle
                           A  1936    
                           A  1937    ;set xHL = source address of packed file
                           A  1938    ;set xDE = destination address for unpacked dat
                           A  1939    ;set xBC = length of packed file
                           A  1940    
001611 E5                  A  1941    			push hl	
001612 DDE1                A  1942    			pop ix
001614 0B                  A  1943    			dec bc								001615 23                  A  1944    			inc hl
001616 DD7E00              A  1945    unp_gtok	ld a,(ix)							001619 BE                  A  1946    unp_next	cp (hl)								00161A 28 07               A  1947    			jr z,unp_brun						00161C EDA0                A  1948    			ldi									00161E EA 19 16 00         A  1949    			jp pe,unp_next						001622 C9                  A  1950    			ret
                           A  1951    	
001623 C5                  A  1952    unp_brun	push bc								001624 23                  A  1953    			inc hl		
001625 7E                  A  1954    			ld a,(hl)							001626 23                  A  1955    			inc hl		
001627 46                  A  1956    			ld b,(hl)							001628 23                  A  1957    			inc hl
                           A  1958    	
001629 12                  A  1959    unp_rllp	ld (de),a							00162A 13                  A  1960    			inc de			
00162B 10 FC               A  1961    			djnz unp_rllp
                           A  1962    	
00162D C1                  A  1963    			pop bc	
00162E 0B                  A  1964    			dec bc								00162F 0B                  A  1965    			dec bc
001630 0B                  A  1966    			dec bc
001631 E5                  A  1967    			push hl								001632 21000000            A  1968    			ld hl,0
001636 B7                  A  1969    			or a
001637 ED4A                A  1970    			adc hl,bc
001639 E1                  A  1971    			pop hl
00163A 20 DA               A  1972    			jr nz,unp_gtok
00163C C9                  A  1973    			ret	
                           A  1974    	
                           A  1975    ;----------------------------------------------
                           A  1976    ; Commonly called error messages - gets message
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1977    ;----------------------------------------------
                           A  1978    
                           A  1979    
00163D 3E0D                A  1980    os_no_fn_error		ld a,0dh
00163F B7                  A  1981    					or a
001640 C9                  A  1982    					ret
                           A  1983    			
001641 3E15                A  1984    os_fn_too_long		ld a,15h
001643 B7                  A  1985    					or a
001644 C9                  A  1986    					ret
                           A  1987    				
001645 3E16                A  1988    os_no_start_addr	ld a,16h
001647 B7                  A  1989    					or a
001648 C9                  A  1990    					ret
                           A  1991    			
001649 3E17                A  1992    os_no_filesize		ld a,17h
00164B B7                  A  1993    					or a
00164C C9                  A  1994    					ret
                           A  1995    			
00164D 3E18                A  1996    os_abort_save		ld a,18h
00164F B7                  A  1997    					or a
001650 C9                  A  1998    					ret
                           A  1999    			
001651 3E1C                A  2000    os_no_e_addr_error	ld a,1ch
001653 B7                  A  2001    					or a
001654 C9                  A  2002    					ret
                           A  2003    			
001655 3E1D                A  2004    os_no_d_addr_error	ld a,1dh
001657 B7                  A  2005    					or a
001658 C9                  A  2006    					ret
                           A  2007    				
001659 3E1E                A  2008    os_range_error		ld a,1eh
00165B B7                  A  2009    					or a
00165C C9                  A  2010    					ret
                           A  2011    			
00165D 3E1F                A  2012    os_no_args_error	ld a,1fh
00165F B7                  A  2013    					or a
001660 C9                  A  2014    					ret	
                           A  2015    
                           A  2016    ;----------------------------------------------
                           A  2017    
                           A  2018    ; Set xHL to address of zero terminated filenam
                           A  2019    ; RETURNS:	C:xDE  = File length
                           A  2020    ;    		HL     = Start cluster of file
                           A  2021    
001661 CC ED 15 00         A  2022    ext_find_file	call z,mbase_hl
                           A  2023    
001665 CD 63 52 00         A  2024    os_find_file	call fs_hl_to_filename
001669 CD FC 49 00         A  2025    				call fs_open_file_command		00166D 38 02               A  2026    				jr c,os_fferr					00166F B7                  A  2027    				or a							001670 C9                  A  2028    				ret 		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2029    								
001671 47                  A  2030    os_fferr		ld b,a							001672 AF                  A  2031    				xor a			
001673 4F                  A  2032    				ld c,a
001674 0C                  A  2033    				inc c							001675 C9                  A  2034    				ret	
                           A  2035    
                           A  2036    ;----------------------------------------------
                           A  2037    
001676                     A  2038    os_set_load_length
                           A  2039    
001676 ED53 BB 54 00       A  2040    				ld (fs_file_transfer_length),de
00167B BF                  A  2041    				cp a							00167C C9                  A  2042    				ret
                           A  2043    				
                           A  2044    ;----------------------------------------------
                           A  2045    
00167D                     A  2046    ext_set_file_pointer
                           A  2047    
00167D 79                  A  2048    				ld a,c
                           A  2049    				
00167E                     A  2050    os_set_file_pointer
                           A  2051    
                           A  2052    ; Moves the 'start of file' pointer allowing ra
                           A  2053    ; Note: File pointer is reset by opening a file
                           A  2054    ; by normal read function.
                           A  2055    
00167E ED53 AF 54 00       A  2056    				ld (fs_file_pointer),de			001683 32 B2 54 00         A  2057    				ld (fs_file_pointer+3),a
001687 F5                  A  2058    				push af
001688 AF                  A  2059    				xor a
001689 32 E1 54 00         A  2060    				ld (fs_filepointer_valid),a		00168D F1                  A  2061    				pop af
00168E BF                  A  2062    				cp a							00168F C9                  A  2063    				ret
                           A  2064    				
                           A  2065    ;----------------------------------------------
                           A  2066    
                           A  2067    ; set xHL = load address 
                           A  2068    ; (Before calling this routine, call os_find_fi
                           A  2069    
001690                     A  2070    ext_read_bytes_from_file
                           A  2071    
001690 CC ED 15 00         A  2072    				call z,mbase_hl					                           A  2073    				
001694                     A  2074    os_read_bytes_from_file
                           A  2075    
001694 22 C4 54 00         A  2076    				ld (fs_ez80_address),hl			001698 CD 47 4A 00         A  2077    				call fs_read_data_command
00169C 38 D3               A  2078    				jr c,os_fferr
00169E B7                  A  2079    				or a
00169F C9                  A  2080    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2081    
                           A  2082    ;----------------------------------------------
                           A  2083    
                           A  2084    ; Before calling, set xHL = address of zero ter
                           A  2085    
0016A0 CC ED 15 00         A  2086    ext_create_file	call z,mbase_hl
                           A  2087    
0016A4 CD 63 52 00         A  2088    os_create_file	call fs_hl_to_filename
0016A8 CD FD 4C 00         A  2089    				call fs_create_file_command		0016AC DA 71 16 00         A  2090    				jp c,os_fferr					0016B0 B7                  A  2091    				or a
0016B1 C9                  A  2092    				ret
                           A  2093    
                           A  2094    ;----------------------------------------------
                           A  2095    
0016B2                     A  2096    ext_write_bytes_to_file
                           A  2097    
0016B2 CC ED 15 00         A  2098    				call z,mbase_hl
0016B6 CC FE 15 00         A  2099    				call z,mbase_de
                           A  2100    
0016BA                     A  2101    os_write_bytes_to_file
                           A  2102    
                           A  2103    ; Before calling, set..
                           A  2104    
                           A  2105    ; xDE   = address to save data from
                           A  2106    ; xBC   = number of bytes to save
                           A  2107    ; xHL   = address of null-terminated ascii name
                           A  2108    
                           A  2109    ; On return:
                           A  2110    
                           A  2111    ; If zero flag NOT set, there was an error.
                           A  2112    ; If   A = $00, b = hardware error code
                           A  2113    ; Else A = File system error code
                           A  2114    
                           A  2115    ; NOTE:
                           A  2116    ; Will return 'file not found' if the file has 
                           A  2117    				
0016BA ED43 BB 54 00       A  2118    				ld (fs_file_transfer_length),bc
0016BF ED53 C4 54 00       A  2119    				ld (fs_ez80_address),de	 	
0016C4 CD 63 52 00         A  2120    				call fs_hl_to_filename
0016C8 CD 2F 4D 00         A  2121    				call fs_write_bytes_to_file_com
0016CC DA 71 16 00         A  2122    				jp c,os_fferr
0016D0 B7                  A  2123    				or a
0016D1 C9                  A  2124    				ret
                           A  2125    		
                           A  2126    		
                           A  2127    ;----------------------------------------------
                           A  2128    	
                           A  2129    
0016D2                     A  2130    os_check_volume_format
                           A  2131    
0016D2 CD 55 48 00         A  2132    				call fs_check_disk_format
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016D6 DA 71 16 00         A  2133    os_rffsc		jp c,os_fferr
0016DA B7                  A  2134    				or a
0016DB C9                  A  2135    				ret
                           A  2136    
                           A  2137    ;----------------------------------------------
                           A  2138    
                           A  2139    
0016DC 7B                  A  2140    ext_format		ld a,e
0016DD CC ED 15 00         A  2141    				call z,mbase_hl					                           A  2142    
0016E1 E5                  A  2143    os_format		push hl							0016E2 CD F0 1A 00         A  2144    				call dev_to_driver_lookup
0016E6 E1                  A  2145    				pop hl
0016E7 38 04               A  2146    				jr c,sdevok
0016E9 3ED0                A  2147    				ld a,0d0h						0016EB B7                  A  2148    				or a
0016EC C9                  A  2149    				ret
                           A  2150    
0016ED F5                  A  2151    sdevok			push af				
0016EE 11 8B 54 00         A  2152    				ld de,fs_sought_filename
0016F2 CD 72 53 00         A  2153    				call fs_clear_filename
0016F6 060B                A  2154    				ld b,11
0016F8 CD 48 12 00         A  2155    				call os_copy_ascii_run
0016FC F1                  A  2156    				pop af
                           A  2157    				
0016FD 21 56 5F 00         A  2158    				ld hl,current_driver
001701 46                  A  2159    				ld b,(hl)
001702 77                  A  2160    				ld (hl),a
001703 C5                  A  2161    				push bc
001704 E5                  A  2162    				push hl
001705 CD CA 46 00         A  2163    				call fs_format_device_command
001709 E1                  A  2164    				pop hl
00170A C1                  A  2165    				pop bc
00170B 70                  A  2166    				ld (hl),b
00170C 18 C8               A  2167    				jr os_rffsc
                           A  2168    
                           A  2169    
                           A  2170    ;----------------------------------------------
                           A  2171    
                           A  2172    
00170E CC ED 15 00         A  2173    ext_make_dir	call z,mbase_hl					                           A  2174    
001712 CD 63 52 00         A  2175    os_make_dir		call fs_hl_to_filename
001716 CD 75 4B 00         A  2176    				call fs_make_dir_command
00171A 18 BA               A  2177    				jr os_rffsc
                           A  2178    
                           A  2179    
                           A  2180    ;----------------------------------------------
                           A  2181    
                           A  2182    
00171C CC ED 15 00         A  2183    ext_change_dir	call z,mbase_hl					                           A  2184    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001720 CD 63 52 00         A  2185    os_change_dir	call fs_hl_to_filename
001724 CD A8 49 00         A  2186    				call fs_change_dir_command
001728 18 AC               A  2187    				jr os_rffsc
                           A  2188    				
                           A  2189    	
                           A  2190    ;----------------------------------------------
                           A  2191    	
                           A  2192    	
00172A CD D9 49 00         A  2193    os_parent_dir	call fs_parent_dir_command
00172E 18 A6               A  2194    				jr os_rffsc
                           A  2195    				
                           A  2196    
                           A  2197    ;----------------------------------------------
                           A  2198    
                           A  2199    	
001730 CD CD 49 00         A  2200    os_root_dir		call fs_goto_root_dir_command
001734 18 A0               A  2201    				jr os_rffsc
                           A  2202    
                           A  2203    
                           A  2204    ;----------------------------------------------
                           A  2205    
                           A  2206    
001736 CC ED 15 00         A  2207    ext_erase_file	call z,mbase_hl					                           A  2208    
00173A CD 63 52 00         A  2209    os_erase_file	call fs_hl_to_filename
00173E CD BE 4E 00         A  2210    				call fs_erase_file_command
001742 18 92               A  2211    				jr os_rffsc
                           A  2212    	
                           A  2213    
                           A  2214    ;----------------------------------------------
                           A  2215    
                           A  2216    
001744                     A  2217    os_goto_first_dir_entry	
                           A  2218    
001744 CD 19 4F 00         A  2219    				call fs_goto_first_dir_entry
001748 18 8C               A  2220    				jr os_rffsc
                           A  2221    
                           A  2222    
                           A  2223    ;----------------------------------------------
                           A  2224    
                           A  2225    
00174A                     A  2226    os_get_dir_entry		
                           A  2227    
00174A CD 30 4F 00         A  2228    				call fs_get_dir_entry	
00174E 18 86               A  2229    				jr os_rffsc
                           A  2230    
                           A  2231    
                           A  2232    ;----------------------------------------------
                           A  2233    
                           A  2234    
001750                     A  2235    os_goto_next_dir_entry	
                           A  2236    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001750 CD BD 4F 00         A  2237    				call fs_goto_next_dir_entry	
001754 18 80               A  2238    				jr os_rffsc
                           A  2239    
                           A  2240    
                           A  2241    ;----------------------------------------------
                           A  2242    
                           A  2243    
001756                     A  2244    os_get_current_dir_name
                           A  2245    
001756 CD 29 53 00         A  2246    				call fs_get_current_dir_name
00175A C3 D6 16 00         A  2247    				jr os_rffsc
                           A  2248    				
                           A  2249    
                           A  2250    ;----------------------------------------------
                           A  2251    
                           A  2252    
00175E CC ED 15 00         A  2253    ext_rename_file	call z,mbase_hl
001762 CC FE 15 00         A  2254    				call z,mbase_de
                           A  2255    
001766 D5                  A  2256    os_rename_file	push de
001767 CD 5D 52 00         A  2257    				call fs_hl_to_alt_filename		00176B E1                  A  2258    				pop hl				
00176C CD 63 52 00         A  2259    				call fs_hl_to_filename	
001770 CD D5 4E 00         A  2260    				call fs_rename_command
001774 C3 D6 16 00         A  2261    				jr os_rffsc
                           A  2262    				
                           A  2263    
                           A  2264    ;----------------------------------------------
                           A  2265    
                           A  2266    
001778 CC ED 15 00         A  2267    ext_delete_dir	call z,mbase_hl					                           A  2268    
00177C CD 63 52 00         A  2269    os_delete_dir	call fs_hl_to_filename
001780 CD 4E 4C 00         A  2270    				call fs_delete_dir_command
001784 C3 D6 16 00         A  2271    				jp os_rffsc
                           A  2272    	
                           A  2273    	
                           A  2274    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2275    
                           A  2276    
001788                     A  2277    ext_read_sector
001788 CD D3 17 00         A  2278    				call ext_sector_access_preamble
00178C C0                  A  2279    				ret nz
00178D 32 56 5F 00         A  2280    				ld (current_driver),a
001791 CD 00 54 00         A  2281    				call fs_read_sector
001795 20 11               A  2282    				jr nz,sect_done
001797 38 0F               A  2283    				jr c,sect_done
001799 21 86 66 00         A  2284    				ld hl,sector_buffer
00179D ED5B 66 5F 00       A  2285    				ld de,(sector_rd_wr_addr)
0017A2 01000200            A  2286    				ld bc,512
0017A6 EDB0                A  2287    				ldir			
0017A8 F5                  A  2288    sect_done		push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017A9 3A 8C 60 00         A  2289    				ld a,(sys_driver_backup)		0017AD 32 56 5F 00         A  2290    				ld (current_driver),a
0017B1 F1                  A  2291    				pop af
0017B2 C3 D6 16 00         A  2292    				jp os_rffsc
                           A  2293    				
                           A  2294    
0017B6                     A  2295    ext_write_sector
                           A  2296    			
0017B6 CD D3 17 00         A  2297    				call ext_sector_access_preamble
0017BA C0                  A  2298    				ret nz
0017BB 32 56 5F 00         A  2299    				ld (current_driver),a
0017BF 2A 66 5F 00         A  2300    				ld hl,(sector_rd_wr_addr)
0017C3 11 86 66 00         A  2301    				ld de,sector_buffer
0017C7 01000200            A  2302    				ld bc,512
0017CB EDB0                A  2303    				ldir			
0017CD CD 19 54 00         A  2304    				call fs_write_sector
0017D1 18 D5               A  2305    				jr sect_done
                           A  2306    
                           A  2307    
0017D3                     A  2308    ext_sector_access_preamble
                           A  2309    
0017D3 CC ED 15 00         A  2310    				call z,mbase_hl
0017D7 22 66 5F 00         A  2311    				ld (sector_rd_wr_addr),hl
                           A  2312    				
0017DB 78                  A  2313    				ld a,b
0017DC F5                  A  2314    				push af							0017DD DD21 32 61 00       A  2315    				ld ix,sector_lba0
0017E2 DD1F00              A  2316    				ld (ix),de						0017E5 DD7103              A  2317    				ld (ix+3),c
0017E8 CD F0 1A 00         A  2318    				call dev_to_driver_lookup		0017EC E5                  A  2319    				push hl
0017ED DDE1                A  2320    				pop ix
0017EF 2A 32 61 00         A  2321    				ld hl,(sector_lba0)				0017F3 3A 35 61 00         A  2322    				ld a,(sector_lba3)				0017F7 DD0701              A  2323    				ld bc,(ix+1)					0017FA B7                  A  2324    				or a							0017FB ED42                A  2325    				sbc hl,bc
0017FD DD9E04              A  2326    				sbc a,(ix+4)
001800 38 05               A  2327    				jr c,range_ok
001802 F1                  A  2328    				pop af
001803 3ED5                A  2329    				ld a,0d5h						001805 B7                  A  2330    				or a							001806 C9                  A  2331    				ret
                           A  2332    	
001807 3A 56 5F 00         A  2333    range_ok		ld a,(current_driver)
00180B 32 8C 60 00         A  2334    				ld (sys_driver_backup),a
00180F F1                  A  2335    				pop af							001810 CD F0 1A 00         A  2336    				call dev_to_driver_lookup
001814 30 02               A  2337    				jr nc,bad_dev
001816 BF                  A  2338    os_null			cp a							001817 C9                  A  2339    				ret
                           A  2340    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001818 3ED0                A  2341    bad_dev			ld a,0d0h						00181A B7                  A  2342    				or a							00181B C9                  A  2343    				ret	
                           A  2344    			
                           A  2345    
                           A  2346    ;----------------------------------------------
                           A  2347    
                           A  2348    
00181C                     A  2349    os_get_device_info
                           A  2350    
00181C 21 07 60 00         A  2351    				ld hl,host_device_hardware_info
001820 11 69 5F 00         A  2352    				ld de,driver_table
001824 3A 57 5F 00         A  2353    				ld a,(device_count)
001828 47                  A  2354    				ld b,a
001829 3A 56 5F 00         A  2355    				ld a,(current_driver)
00182D BF                  A  2356    				cp a
00182E C9                  A  2357    				ret
                           A  2358    
                           A  2359    
                           A  2360    
                           A  2361    
00182F                     A  2362    os_get_volume_info
                           A  2363    
00182F 21 87 5F 00         A  2364    				ld hl,volume_mount_list	
001833 3A 58 5F 00         A  2365    				ld a,(volume_count)
001837 47                  A  2366    				ld b,a
001838 3A 55 5F 00         A  2367    				ld a,(current_volume)
00183C C9                  A  2368    				ret
                           A  2369    				
                           A  2370    		
                           A  2371    ;----------------------------------------------
                           A  2372    
                           A  2373    
00183D                     A  2374    ext_serial_get_header
                           A  2375    
00183D CC ED 15 00         A  2376    				call z,mbase_hl
001841 7B                  A  2377    				ld a,e
001842 CD 5D 44 00         A  2378    				call serial_get_header
001846 DDE5                A  2379    				push ix
001848 D1                  A  2380    				pop de
001849 C9                  A  2381    				ret
                           A  2382    				
                           A  2383    				
00184A                     A  2384    ext_serial_receive_file
                           A  2385    				
00184A CC ED 15 00         A  2386    				call z,mbase_hl
00184E CD F8 44 00         A  2387    				call serial_receive_file
001852 C9                  A  2388    				ret
                           A  2389    				
                           A  2390    	
001853                     A  2391    ext_serial_send_file
                           A  2392    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001853 CC ED 15 00         A  2393    				call z,mbase_hl					001857 CC FE 15 00         A  2394    				call z,mbase_de					00185B D5                  A  2395    				push de	
00185C DDE1                A  2396    				pop ix							00185E C5                  A  2397    				push bc							00185F D1                  A  2398    				pop de							001860 CD C1 45 00         A  2399    				call serial_send_file
001864 C9                  A  2400    				ret
                           A  2401    
                           A  2402    
001865                     A  2403    ext_serial_tx
001865 7B                  A  2404    				ld a,e
001866 CD AB 3D 00         A  2405    				call send_serial_byte
00186A AF                  A  2406    				xor a							00186B C9                  A  2407    				ret
                           A  2408    
                           A  2409    
00186C                     A  2410    ext_serial_rx
00186C 7B                  A  2411    				ld a,e
00186D 32 25 5F 00         A  2412    				ld (serial_timeout),a
001871 CD 70 3D 00         A  2413    				call receive_serial_byte
001875 C9                  A  2414    				ret
                           A  2415    				
                           A  2416    
                           A  2417    ;----------------------------------------------
                           A  2418    
001876                     A  2419    ext_mount_volumes
                           A  2420    
001876 7B                  A  2421    				ld a,e
                           A  2422    
001877                     A  2423    os_mount_volumes
                           A  2424    				
001877 32 8D 60 00         A  2425    				ld (os_quiet_mode),a			                           A  2426    				
00187B 21 0F 56 00         A  2427    				ld hl,storage_txt
00187F CD 55 0F 00         A  2428    				call os_print_string_cond
001883 CD AB 18 00         A  2429    				call mount_go
001887 AF                  A  2430    				xor a
001888 32 55 5F 00         A  2431    tvloop			ld (current_volume),a
00188C CD 06 1B 00         A  2432    				call os_change_volume			001890 C8                  A  2433    				ret z							001891 3A 55 5F 00         A  2434    				ld a,(current_volume)			001895 3C                  A  2435    				inc a
001896 FE08                A  2436    				cp max_volumes
001898 20 EE               A  2437    				jr nz,tvloop
00189A 3A 57 5F 00         A  2438    				ld a,(device_count)
00189E B7                  A  2439    				or a
00189F 20 08               A  2440    				jr nz,mfsdevs
0018A1 21 53 5D 00         A  2441    				ld hl,none_found_msg
0018A5 CD 34 14 00         A  2442    				call os_show_packed_text_cond
0018A9 AF                  A  2443    mfsdevs			xor a
0018AA C9                  A  2444    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2445    
                           A  2446    
                           A  2447    
0018AB 21 87 5F 00         A  2448    mount_go		ld hl,volume_mount_list			0018AF 01800000            A  2449    				ld bc,max_volumes*16
0018B3 AF                  A  2450    clrdl_lp		xor a
0018B4 CD C6 15 00         A  2451    				call os_bchl_memfill
                           A  2452    								
0018B8 21 6F 5F 00         A  2453    				ld hl,volume_dir_clusters		0018BC 01180000            A  2454    				ld bc,max_volumes*3		
0018C0 AF                  A  2455    				xor a	
0018C1 CD C6 15 00         A  2456    				call os_bchl_memfill	
                           A  2457    			
0018C5 11 07 60 00         A  2458    				ld de,host_device_hardware_info
0018C9 ED53 87 60 00       A  2459    				ld (dhwn_temp_pointer),de
                           A  2460    				
0018CE FD21 87 5F 00       A  2461    				ld iy,volume_mount_list
0018D3 AF                  A  2462    				xor a
0018D4 32 58 5F 00         A  2463    				ld (volume_count),a
0018D8 32 57 5F 00         A  2464    				ld (device_count),a
0018DC 32 56 5F 00         A  2465    mnt_loop		ld (current_driver),a			0018E0 CD 7C 1A 00         A  2466    				call locate_driver_base			0018E4 21000000            A  2467    				ld hl,0
0018E8 AF                  A  2468    				xor a
0018E9 ED5A                A  2469    				adc hl,de
0018EB C8                  A  2470    				ret z							0018EC EB                  A  2471    				ex de,hl						0018ED FDE5                A  2472    				push iy
0018EF CD 00 19 00         A  2473    				call find_dev					0018F3 FDE1                A  2474    				pop iy							0018F5 CC 01 19 00         A  2475    				call z,got_dev		
0018F9 3A 56 5F 00         A  2476    nxt_drv			ld a,(current_driver)			0018FD 3C                  A  2477    				inc a
0018FE 18 DC               A  2478    				jr mnt_loop
                           A  2479    
                           A  2480    				
001900 E9                  A  2481    find_dev		jp (hl)
                           A  2482    			
                           A  2483    			
001901 E5                  A  2484    got_dev			push hl							001902 D5                  A  2485    				push de							001903 C5                  A  2486    				push bc
001904 CD FD 13 00         A  2487    				call os_new_line_cond			001908 015B0100            A  2488    				ld bc,015bh
00190C CD 8D 1A 00         A  2489    				call os_print_multiple_chars_co
001910 3A 56 5F 00         A  2490    				ld a,(current_driver)
001914 CD 7C 1A 00         A  2491    				call locate_driver_base
001918 210C0000            A  2492    				ld hl,0ch
00191C 19                  A  2493    				add hl,de
00191D CD 55 0F 00         A  2494    				call os_print_string_cond		001921 015D0100            A  2495    				ld bc,015dh
001925 CD 8D 1A 00         A  2496    				call os_print_multiple_chars_co
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001929 C1                  A  2497    				pop bc
00192A D1                  A  2498    				pop de
00192B AF                  A  2499    				xor a
00192C 32 8B 60 00         A  2500    				ld (vols_on_device_temp),a
                           A  2501    				
001930 21 57 5F 00         A  2502    				ld hl,device_count
001934 34                  A  2503    				inc (hl)						001935 3A 56 5F 00         A  2504    				ld a,(current_driver)
001939 2A 87 60 00         A  2505    				ld hl,(dhwn_temp_pointer)	
00193D 77                  A  2506    				ld (hl),a
00193E 23                  A  2507    				inc hl
00193F 73                  A  2508    				ld (hl),e						001940 FD7304              A  2509    				ld (iy+4),e						001943 23                  A  2510    				inc hl							001944 72                  A  2511    				ld (hl),d
001945 FD7205              A  2512    				ld (iy+5),d
001948 23                  A  2513    				inc hl
001949 71                  A  2514    				ld (hl),c			
00194A FD7106              A  2515    				ld (iy+6),c
00194D 23                  A  2516    				inc hl
00194E 70                  A  2517    				ld (hl),b						00194F 23                  A  2518    				inc hl
001950 D1                  A  2519    				pop de
001951 EB                  A  2520    				ex de,hl
001952 01160000            A  2521    				ld bc,22
001956 EDB0                A  2522    				ldir							001958 AF                  A  2523    				xor a
001959 0605                A  2524    				ld b,5		
00195B 12                  A  2525    clrrode			ld (de),a						00195C 13                  A  2526    				inc de
00195D 10 FC               A  2527    				djnz clrrode
00195F ED53 87 60 00       A  2528    				ld (dhwn_temp_pointer),de		                           A  2529    					
001964 AF                  A  2530    				xor a							001965 FDE5                A  2531    fnxtpart		push iy
001967 CD F3 47 00         A  2532    				call fs_get_partition_info
00196B FDE1                A  2533    				pop iy
00196D 38 31               A  2534    				jr c,nxt_dev					00196F FECE                A  2535    				cp 0ceh							001971 28 2D               A  2536    				jr z,nxt_dev
001973 F5                  A  2537    				push af
001974 FD360001            A  2538    				ld (iy),1						001978 3A 56 5F 00         A  2539    				ld a,(current_driver)
00197C FD7701              A  2540    				ld (iy+1),a						00197F 3A 8A 60 00         A  2541    				ld a,(partition_temp)	
001983 FD7707              A  2542    				ld (iy+7),a						001986 F1                  A  2543    				pop af
001987 B7                  A  2544    				or a
001988 28 35               A  2545    				jr z,dev_mbr
00198A AF                  A  2546    				xor a
00198B FD7708              A  2547    				ld (iy+8),a						00198E FD7709              A  2548    				ld (iy+9),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001991 FD770A              A  2549    				ld (iy+10),a					001994 FD770B              A  2550    				ld (iy+11),a
001997 CD 0B 1A 00         A  2551    				call show_vol_info
00199B CD FC 19 00         A  2552    				call test_max_vol
00199F C8                  A  2553    				ret z							                           A  2554    			
0019A0 3A 8B 60 00         A  2555    nxt_dev			ld a,(vols_on_device_temp)		0019A4 B7                  A  2556    				or a
0019A5 C0                  A  2557    				ret nz		
0019A6 CD 5D 1A 00         A  2558    				call test_quiet_mode
0019AA 20 06               A  2559    				jr nz,skp_cu
0019AC 3E0A                A  2560    				ld a,10
0019AE 32 37 61 00         A  2561    				ld (cursor_x),a
0019B2 21 50 5D 00         A  2562    skp_cu			ld hl,no_vols_msg				0019B6 CD 34 14 00         A  2563    				call os_show_packed_text_cond
0019BA CD FD 13 00         A  2564    				call os_new_line_cond
0019BE C9                  A  2565    				ret
                           A  2566    				
                           A  2567    			
0019BF 11040000            A  2568    dev_mbr			ld de,4
0019C3 19                  A  2569    				add hl,de
0019C4 7E                  A  2570    				ld a,(hl)						0019C5 B7                  A  2571    				or a
0019C6 C8                  A  2572    				ret z							0019C7 19                  A  2573    				add hl,de
                           A  2574    				
0019C8 FDE5                A  2575    				push iy
0019CA 0604                A  2576    				ld b,4
0019CC 7E                  A  2577    sfmbrlp			ld a,(hl)						0019CD FD7708              A  2578    				ld (iy+8),a
0019D0 23                  A  2579    				inc hl
0019D1 FD23                A  2580    				inc iy
0019D3 10 F7               A  2581    				djnz sfmbrlp
0019D5 FDE1                A  2582    				pop iy
0019D7 FDE5                A  2583    				push iy
0019D9 0603                A  2584    				ld b,3	
0019DB 7E                  A  2585    nsivlp			ld a,(hl)
0019DC FD7704              A  2586    				ld (iy+4),a						0019DF 23                  A  2587    				inc hl
0019E0 FD23                A  2588    				inc iy
0019E2 10 F7               A  2589    				djnz nsivlp
0019E4 FDE1                A  2590    				pop iy
                           A  2591    				
0019E6 CD 0B 1A 00         A  2592    				call show_vol_info
0019EA CD FC 19 00         A  2593    				call test_max_vol	
0019EE C8                  A  2594    				ret z							0019EF 3A 8A 60 00         A  2595    				ld a,(partition_temp)
0019F3 3C                  A  2596    				inc a
0019F4 FE04                A  2597    				cp 4							0019F6 C2 65 19 00         A  2598    				jp nz,fnxtpart
0019FA 18 A4               A  2599    				jr nxt_dev
                           A  2600    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2601    
0019FC                     A  2602    test_max_vol
                           A  2603    			
0019FC 11100000            A  2604    				ld de,16
001A00 FD19                A  2605    				add iy,de			
001A02 21 58 5F 00         A  2606    				ld hl,volume_count
001A06 34                  A  2607    				inc (hl)
001A07 7E                  A  2608    				ld a,(hl)
001A08 FE08                A  2609    				cp max_volumes
001A0A C9                  A  2610    				ret
                           A  2611    			
                           A  2612    			
001A0B                     A  2613    show_vol_info
                           A  2614    				
001A0B CD 5D 1A 00         A  2615    				call test_quiet_mode
001A0F 20 06               A  2616    				jr nz,skp_cm2
001A11 3E09                A  2617    				ld a,9			
001A13 32 37 61 00         A  2618    				ld (cursor_x),a
001A17 3A 58 5F 00         A  2619    skp_cm2			ld a,(volume_count)
001A1B F5                  A  2620    				push af
001A1C C630                A  2621    				add a,30h		
001A1E 32 5D 5F 00         A  2622    				ld (vol_txt+4),a	
001A22 21 59 5F 00         A  2623    				ld hl,vol_txt
001A26 CD 55 0F 00         A  2624    				call os_print_string_cond		001A2A 21 8B 60 00         A  2625    				ld hl,vols_on_device_temp
001A2E CBC6                A  2626    				set 0,(hl)						                           A  2627    			
001A30 F1                  A  2628    				pop af
001A31 FDE5                A  2629    				push iy
001A33 CD 06 1B 00         A  2630    				call os_change_volume			001A37 28 0A               A  2631    				jr z,vform_ok					001A39 21 00 5D 00         A  2632    svi_fe			ld hl,format_err_msg		
001A3D CD 34 14 00         A  2633    svi_pem			call os_show_packed_text_cond	001A41 18 0D               A  2634    				jr skpsvl
                           A  2635    			
001A43 CD 14 50 00         A  2636    vform_ok		call fs_get_volume_label
001A47 38 0E               A  2637    				jr c,svi_hwe
001A49 B7                  A  2638    				or a
001A4A 20 ED               A  2639    				jr nz,svi_fe
001A4C CD 55 0F 00         A  2640    				call os_print_string_cond		                           A  2641    			
001A50 CD FD 13 00         A  2642    skpsvl			call os_new_line_cond
001A54 FDE1                A  2643    				pop iy
001A56 C9                  A  2644    				ret
                           A  2645    				
001A57 21 4C 5B 00         A  2646    svi_hwe			ld hl,disk_err_msg
001A5B 18 E0               A  2647    				jr svi_pem
                           A  2648    			
                           A  2649    			
001A5D                     A  2650    test_quiet_mode
                           A  2651    			
001A5D 3A 8D 60 00         A  2652    				ld a,(os_quiet_mode)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A61 B7                  A  2653    				or a
001A62 C9                  A  2654    				ret
                           A  2655    
                           A  2656    ;----------------------------------------------
                           A  2657    
                           A  2658    
001A63                     A  2659    show_dev_driver_name
                           A  2660    	
                           A  2661    	
001A63 CD 7C 1A 00         A  2662    				call locate_driver_base			001A67 EB                  A  2663    				ex de,hl
001A68 110C0000            A  2664    				ld de,0ch
001A6C 19                  A  2665    				add hl,de
001A6D CD 5A 0F 00         A  2666    				call os_print_string			001A71 C5                  A  2667    				push bc
001A72 01200100            A  2668    				ld bc,0120h
001A76 CD 92 1A 00         A  2669    				call os_print_multiple_chars	001A7A C1                  A  2670    				pop bc
001A7B C9                  A  2671    				ret
                           A  2672    
                           A  2673    
001A7C                     A  2674    locate_driver_base
                           A  2675    
001A7C E5                  A  2676    				push hl							001A7D 11030000            A  2677    				ld de,3							001A81 57                  A  2678    				ld d,a
001A82 ED5C                A  2679    				mlt de
001A84 21 69 5F 00         A  2680    				ld hl,driver_table
001A88 19                  A  2681    				add hl,de
001A89 ED17                A  2682    				ld de,(hl)
001A8B E1                  A  2683    				pop hl
001A8C C9                  A  2684    				ret
                           A  2685    				
                           A  2686    		
                           A  2687    ;----------------------------------------------
                           A  2688    
001A8D                     A  2689    os_print_multiple_chars_cond
                           A  2690    
001A8D CD 5D 1A 00         A  2691    				call test_quiet_mode
001A91 C0                  A  2692    				ret nz
                           A  2693    			
001A92                     A  2694    os_print_multiple_chars
                           A  2695    
                           A  2696    ;c = char
                           A  2697    ;b = count
001A92 C5                  A  2698    				push bc
001A93 E5                  A  2699    				push hl
001A94 79                  A  2700    				ld a,c
001A95 21 8A 56 00         A  2701    				ld hl,rep_char_txt
001A99 77                  A  2702    				ld (hl),a
001A9A E5                  A  2703    pmch_lp			push hl
001A9B CD 5A 0F 00         A  2704    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A9F E1                  A  2705    				pop hl
001AA0 10 F8               A  2706    				djnz pmch_lp
001AA2 E1                  A  2707    				pop hl
001AA3 C1                  A  2708    				pop bc
001AA4 C9                  A  2709    				ret
                           A  2710    
                           A  2711    ;----------------------------------------------
                           A  2712    
                           A  2713    
001AA5 7B                  A  2714    ext_plot_char	ld a,e
001AA6 C3 E2 3E 00         A  2715    				jp hwsc_plot_char
                           A  2716    				
                           A  2717    
                           A  2718    ;----------------------------------------------
                           A  2719    ; Some file system related routines 
                           A  2720    ;----------------------------------------------
                           A  2721    
                           A  2722    
001AAA                     A  2723    fs_get_dir_cluster
                           A  2724    
                           A  2725    
001AAA F5                  A  2726    				push af							001AAB E5                  A  2727    				push hl			
001AAC CD C2 1A 00         A  2728    				call fs_get_dir_cluster_address
001AB0 ED17                A  2729    				ld de,(hl)
001AB2 E1                  A  2730    dclopdone		pop hl
001AB3 F1                  A  2731    				pop af
001AB4 BF                  A  2732    				cp a							001AB5 C9                  A  2733    				ret
                           A  2734    				
                           A  2735    
                           A  2736    
                           A  2737    
                           A  2738    
001AB6                     A  2739    fs_update_dir_cluster
                           A  2740    
001AB6 F5                  A  2741    				push af							001AB7 E5                  A  2742    				push hl			
001AB8 D5                  A  2743    				push de			
001AB9 CD C2 1A 00         A  2744    				call fs_get_dir_cluster_address
001ABD D1                  A  2745    				pop de
001ABE ED1F                A  2746    				ld (hl),de
001AC0 18 F0               A  2747    				jr dclopdone
                           A  2748    			
                           A  2749    
                           A  2750    
                           A  2751    
                           A  2752    
001AC2                     A  2753    fs_get_dir_cluster_address
                           A  2754    
001AC2 21 6F 5F 00         A  2755    				ld hl,volume_dir_clusters		001AC6 3A 55 5F 00         A  2756    				ld a,(current_volume)	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001ACA 11030000            A  2757    				ld de,3
001ACE 57                  A  2758    				ld d,a
001ACF ED5C                A  2759    				mlt de
001AD1 19                  A  2760    				add hl,de
001AD2 C9                  A  2761    				ret
                           A  2762    				
                           A  2763    	
                           A  2764    
                           A  2765    	
                           A  2766    	
001AD3                     A  2767    fs_get_total_sectors
                           A  2768    
                           A  2769    
001AD3 F5                  A  2770    				push af
001AD4 E5                  A  2771    				push hl							001AD5 CD E4 1A 00         A  2772    				call fs_calc_volume_offset	
001AD9 21 8B 5F 00         A  2773    				ld hl,volume_mount_list+4
001ADD 19                  A  2774    				add hl,de
001ADE ED17                A  2775    				ld de,(hl)
001AE0 E1                  A  2776    				pop hl
001AE1 F1                  A  2777    				pop af
001AE2 BF                  A  2778    				cp a							001AE3 C9                  A  2779    				ret
                           A  2780    
                           A  2781    
                           A  2782    
                           A  2783    
                           A  2784    
001AE4                     A  2785    fs_calc_volume_offset
                           A  2786    
001AE4 3A 55 5F 00         A  2787    				ld a,(current_volume)			001AE8 11100000            A  2788    calc_vol		ld de,16
001AEC 57                  A  2789    				ld d,a
001AED ED5C                A  2790    				mlt de
001AEF C9                  A  2791    				ret
                           A  2792    
                           A  2793    
                           A  2794    
                           A  2795    
                           A  2796    
001AF0                     A  2797    dev_to_driver_lookup
                           A  2798    
001AF0 21 57 5F 00         A  2799    				ld hl,device_count				001AF4 BE                  A  2800    				cp (hl)							001AF5 D0                  A  2801    				ret nc
001AF6 11200000            A  2802    				ld de,32						001AFA 57                  A  2803    				ld d,a
001AFB ED5C                A  2804    				mlt de
001AFD 21 07 60 00         A  2805    				ld hl,host_device_hardware_info
001B01 19                  A  2806    				add hl,de
001B02 7E                  A  2807    				ld a,(hl)
001B03 37                  A  2808    				scf
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B04 C9                  A  2809    				ret
                           A  2810    				
                           A  2811    
                           A  2812    
001B05                     A  2813    ext_change_volume
                           A  2814    
001B05 7B                  A  2815    				ld a,e
                           A  2816    
001B06                     A  2817    os_change_volume
                           A  2818    
001B06 47                  A  2819    				ld b,a							001B07 FE08                A  2820    				cp max_volumes		
001B09 30 23               A  2821    				jr nc,fs_ccv2					                           A  2822    			
001B0B 3A 55 5F 00         A  2823    				ld a,(current_volume)			001B0F F5                  A  2824    				push af
001B10 78                  A  2825    				ld a,b
001B11 32 55 5F 00         A  2826    				ld (current_volume),a			001B15 CD 32 1B 00         A  2827    				call fs_set_driver_for_volume	                           A  2828    				
001B19 CD 55 48 00         A  2829    				call fs_check_disk_format		001B1D 38 06               A  2830    				jr c,fs_cant_chg_vols	
001B1F B7                  A  2831    				or a
001B20 20 03               A  2832    				jr nz,fs_cant_chg_vols
001B22 F1                  A  2833    				pop af							001B23 AF                  A  2834    				xor a							001B24 C9                  A  2835    				ret
                           A  2836    
                           A  2837    
001B25                     A  2838    fs_cant_chg_vols
                           A  2839    			
001B25 F1                  A  2840    				pop af
001B26 32 55 5F 00         A  2841    				ld (current_volume),a			001B2A CD 32 1B 00         A  2842    				call fs_set_driver_for_volume	                           A  2843    				
001B2E 3ECF                A  2844    fs_ccv2			ld a,0cfh						001B30 B7                  A  2845    				or a
001B31 C9                  A  2846    				ret
                           A  2847    					
                           A  2848    	
001B32                     A  2849    fs_set_driver_for_volume
                           A  2850    
001B32 CD E4 1A 00         A  2851    				call fs_calc_volume_offset		001B36 21 88 5F 00         A  2852    				ld hl,volume_mount_list+1
001B3A 19                  A  2853    				add hl,de
001B3B 7E                  A  2854    				ld a,(hl)
001B3C 32 56 5F 00         A  2855    				ld (current_driver),a
001B40 C9                  A  2856    				ret
                           A  2857    
                           A  2858    
                           A  2859    ;----------------------------------------------
                           A  2860    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B41                     A  2861    ext_file_sector_list
                           A  2862    
                           A  2863    ;Input HL = cluster, E = sector offset
                           A  2864    
                           A  2865    ;Output HL = new cluster, E = new sector number
                           A  2866    ;       IX = address of LBA0 LSB of sector (int
                           A  2867    
                           A  2868    				
001B41 3A 74 54 00         A  2869    				ld a,(fs_cluster_size)
001B45 BB                  A  2870    				cp e
001B46 20 0A               A  2871    				jr nz,fsl_sc
001B48 CD A8 52 00         A  2872    				call get_fat_entry_for_cluster
001B4C DA 71 16 00         A  2873    				jp c,os_fferr
001B50 1E00                A  2874    				ld e,0
001B52 CD 7F 53 00         A  2875    fsl_sc			call cluster_and_offset_to_lba
001B56 1C                  A  2876    				inc e
001B57 01 32 61 00         A  2877    fsl_done		ld bc,sector_lba0
001B5B BF                  A  2878    				cp a							001B5C C9                  A  2879    				ret
                           A  2880    				
                           A  2881    ;----------------------------------------------
                           A  2882    
                           A  2883    
001B5D E5                  A  2884    os_count_chars	push hl							001B5E 01000000            A  2885    				ld bc,0
001B62 7E                  A  2886    cch_lp			ld a,(hl)
001B63 B7                  A  2887    				or a
001B64 28 04               A  2888    				jr z,cch_end
001B66 23                  A  2889    				inc hl
001B67 03                  A  2890    				inc bc
001B68 18 F8               A  2891    				jr cch_lp
001B6A E1                  A  2892    cch_end			pop hl
001B6B C9                  A  2893    				ret
                           A  2894    				
                           A  2895    			
                           A  2896    ;----------------------------------------------
                           A  2897    ; Environment variable code V0.01
                           A  2898    ;----------------------------------------------
                           A  2899    
       00000100            A  2900    envar_buffer_size equ 256
                           A  2901    
                           A  2902    ;----------------------------------------------
                           A  2903    
001B6C                     A  2904    ext_get_envar
001B6C CC ED 15 00         A  2905    				call z,mbase_hl
                           A  2906    
001B70                     A  2907    os_get_envar
                           A  2908    
                           A  2909    ;Set: 		HL = name of required variable
                           A  2910    ;Returns:	ZF Set: DE = address of variable's 
                           A  2911    ;        	ZF Not Set: Couldn't find variable
                           A  2912    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B70 DD21 96 62 00       A  2913    				ld ix,envar_list-1
001B75 CD 5D 1B 00         A  2914    env_fname		call os_count_chars				001B79 78                  A  2915    				ld a,b
001B7A B1                  A  2916    				or c
001B7B 28 27               A  2917    				jr z,env_bad
                           A  2918    								
001B7D ED1201              A  2919    env_cname		lea de,ix+1
001B80 1A                  A  2920    				ld a,(de)
001B81 FEFF                A  2921    				cp 0ffh
001B83 28 1F               A  2922    				jr z,env_bad
001B85 C5                  A  2923    				push bc
001B86 41                  A  2924    				ld b,c
001B87 CD 29 12 00         A  2925    				call os_compare_strings
001B8B C1                  A  2926    				pop bc
001B8C 20 06               A  2927    				jr nz,env_nomatch
001B8E 03                  A  2928    				inc bc							001B8F EB                  A  2929    				ex de,hl
001B90 09                  A  2930    				add hl,bc
001B91 EB                  A  2931    				ex de,hl						001B92 AF                  A  2932    				xor a
001B93 C9                  A  2933    				ret			
                           A  2934    				
001B94 DD23                A  2935    env_nomatch		inc ix							001B96 CD 3C 1C 00         A  2936    				call check_envar_bounds
001B9A 20 08               A  2937    				jr nz,env_bad
001B9C DD7E00              A  2938    				ld a,(ix)
001B9F B7                  A  2939    				or a
001BA0 28 DB               A  2940    				jr z,env_cname
001BA2 18 F0               A  2941    				jr env_nomatch
                           A  2942    
001BA4 3E82                A  2943    env_bad			ld a,82h						001BA6 B7                  A  2944    				or a
001BA7 C9                  A  2945    				ret	
                           A  2946    				
                           A  2947    ;----------------------------------------------
                           A  2948    
001BA8                     A  2949    ext_set_envar
                           A  2950    
                           A  2951    ;HL = addr of variable name (zero terminated)
                           A  2952    ;DE = addr of data for variable (zero terminate
                           A  2953    
                           A  2954    ;Returns:
                           A  2955    ;ZF = Set: OK
                           A  2956    ;ZF = Not Set: No enough space for new variable
                           A  2957    		
001BA8 CC ED 15 00         A  2958    				call z,mbase_hl
001BAC CC FE 15 00         A  2959    				call z,mbase_de
                           A  2960    
001BB0 7E                  A  2961    os_set_envar	ld a,(hl)						001BB1 B7                  A  2962    				or a
001BB2 28 F0               A  2963    				jr z,env_bad
001BB4 1A                  A  2964    				ld a,(de)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BB5 B7                  A  2965    				or a
001BB6 28 EC               A  2966    				jr z,env_bad
                           A  2967    
001BB8 E5                  A  2968    				push hl
001BB9 D5                  A  2969    				push de
001BBA CD 06 1C 00         A  2970    				call os_delete_envar			001BBE D1                  A  2971    				pop de
001BBF E1                  A  2972    				pop hl
                           A  2973    				
001BC0 DD2A A1 63 00       A  2974    				ld ix,(envar_top_loc)			001BC5 CD 3C 1C 00         A  2975    env_enlp		call check_envar_bounds
001BC9 20 D9               A  2976    				jr nz,env_bad
001BCB 7E                  A  2977    				ld a,(hl)						001BCC DD7700              A  2978    				ld (ix),a
001BCF B7                  A  2979    				or a
001BD0 28 05               A  2980    				jr z,env_ndone
001BD2 23                  A  2981    				inc hl
001BD3 DD23                A  2982    				inc ix
001BD5 18 EE               A  2983    				jr env_enlp
                           A  2984    				
001BD7 CD 3C 1C 00         A  2985    env_ndone		call check_envar_bounds			001BDB 20 C7               A  2986    				jr nz,env_bad
001BDD DD36003D            A  2987    				ld (ix),'='
001BE1 DD23                A  2988    				inc ix
                           A  2989    
001BE3 CD 3C 1C 00         A  2990    env_evlp		call check_envar_bounds			001BE7 20 BB               A  2991    				jr nz,env_bad
001BE9 1A                  A  2992    				ld a,(de)
001BEA DD7700              A  2993    				ld (ix),a
001BED B7                  A  2994    				or a
001BEE 28 05               A  2995    				jr z,env_vdone
001BF0 13                  A  2996    				inc de
001BF1 DD23                A  2997    				inc ix
001BF3 18 EE               A  2998    				jr env_evlp
                           A  2999    
001BF5 DD23                A  3000    env_vdone		inc ix
001BF7 DD3600FF            A  3001    				ld (ix),0ffh
001BFB DD22 A1 63 00       A  3002    				ld (envar_top_loc),ix			001C00 AF                  A  3003    				xor a
001C01 C9                  A  3004    				ret
                           A  3005    
                           A  3006    	
                           A  3007    ;----------------------------------------------
                           A  3008    
001C02                     A  3009    ext_delete_envar
                           A  3010    
001C02 CC ED 15 00         A  3011    				call z,mbase_hl
                           A  3012    
001C06                     A  3013    os_delete_envar
                           A  3014    
                           A  3015    ;HL = name of required variable (null terminate
                           A  3016    ;ZF = Set: OK
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3017    ;ZF = Not Set: Didnt find named variable
                           A  3018    
                           A  3019    
001C06 CD 70 1B 00         A  3020    				call os_get_envar				001C0A C0                  A  3021    				ret nz
                           A  3022    				
001C0B D5                  A  3023    				push de
001C0C E1                  A  3024    				pop hl
001C0D AF                  A  3025    				xor a
001C0E ED42                A  3026    				sbc hl,bc						                           A  3027    				
001C10 13                  A  3028    env_fnxt		inc de							001C11 D5                  A  3029    				push de
001C12 DDE1                A  3030    				pop ix
001C14 CD 3C 1C 00         A  3031    				call check_envar_bounds
001C18 20 8A               A  3032    				jr nz,env_bad
001C1A 1A                  A  3033    				ld a,(de)
001C1B B7                  A  3034    				or a
001C1C 20 F2               A  3035    				jr nz,env_fnxt
                           A  3036    
001C1E 13                  A  3037    env_gnxt		inc de							001C1F EB                  A  3038    				ex de,hl
001C20 7E                  A  3039    env_collp		ld a,(hl)
001C21 12                  A  3040    				ld (de),a						001C22 FEFF                A  3041    				cp 0ffh
001C24 28 0F               A  3042    				jr z,env_clspd					001C26 E5                  A  3043    				push hl
001C27 DDE1                A  3044    				pop ix
001C29 CD 3C 1C 00         A  3045    				call check_envar_bounds
001C2D C2 A4 1B 00         A  3046    				jr nz,env_bad
001C31 23                  A  3047    				inc hl
001C32 13                  A  3048    				inc de
001C33 18 EB               A  3049    				jr env_collp
                           A  3050    
001C35 ED53 A1 63 00       A  3051    env_clspd		ld (envar_top_loc),de			001C3A AF                  A  3052    				xor a
001C3B C9                  A  3053    				ret
                           A  3054    				
                           A  3055    ;----------------------------------------------
                           A  3056    
001C3C                     A  3057    check_envar_bounds
                           A  3058    
001C3C C5                  A  3059    				push bc
001C3D E5                  A  3060    				push hl
001C3E DDE5                A  3061    				push ix
001C40 E1                  A  3062    				pop hl
001C41 01 98 63 00         A  3063    				ld bc,1+(envar_list+envar_buffe
001C45 AF                  A  3064    				xor a
001C46 ED42                A  3065    				sbc hl,bc
001C48 38 05               A  3066    				jr c,env_bok
001C4A AF                  A  3067    				xor a
001C4B 3C                  A  3068    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C4C E1                  A  3069    				pop hl
001C4D C1                  A  3070    				pop bc
001C4E C9                  A  3071    				ret
                           A  3072    
001C4F AF                  A  3073    env_bok			xor a
001C50 E1                  A  3074    				pop hl
001C51 C1                  A  3075    				pop bc
001C52 C9                  A  3076    				ret
                           A  3077    						
                           A  3078    ;----------------------------------------------
                           A  3079    
001C53                     A  3080    os_get_keymap_location
                           A  3081    
001C53 21 A1 5D 00         A  3082    				ld hl,unshifted_keymap
001C57 BF                  A  3083    				cp a							001C58 C9                  A  3084    				ret
                           A  3085    
                           A  3086    
                           A  3087    ;----------------------------------------------
                           A  3088    
                           A  3089    
001C59 CC ED 15 00         A  3090    ext_play_audio	call z,mbase_hl
                           A  3091    				
001C5D CD 54 43 00         A  3092    os_play_audio	call hwsc_play_audio
001C61 C9                  A  3093    				ret
                           A  3094    				
                           A  3095    				
                           A  3096    ;==============================================
                           A  3097    ; Internal OS command routines
                           A  3098    ;==============================================
                           A  3099    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C62                     B     5    os_cmd_c
                           B     6    
001C62 CD 98 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C66 CD C1 1C 00         B     9    				call hexword_or_bust			001C6A CA 55 16 00         B    10    				jp z,os_no_d_addr_error
001C6E ED53 45 61 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C73 CD 86 1C 00         B    13    				call test_mem_range				001C77 DA 59 16 00         B    14    				jp c,os_range_error				001C7B ED5B 45 61 00       B    15    				ld de,(copy_dest_address)
001C80 EDB0                B    16    				ldir
                           B    17    
001C82 3E20                B    18    copy_done		ld a,020h						001C84 B7                  B    19    				or a
001C85 C9                  B    20    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C86                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C86 2A 42 61 00         B    33    				ld hl,(cmdop_end_address)	
001C8A ED4B 3F 61 00       B    34    				ld bc,(cmdop_start_address)
001C8F C5                  B    35    				push bc
001C90 AF                  B    36    				xor a
001C91 ED42                B    37    				sbc hl,bc
001C93 E5                  B    38    				push hl
001C94 C1                  B    39    				pop bc
001C95 03                  B    40    				inc bc
001C96 E1                  B    41    				pop hl
001C97 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C98                     B    46    get_start_and_end
                           B    47    			
001C98 CD D9 10 00         B    48    				call ascii_to_hexword			001C9C ED53 3F 61 00       B    49    				ld (cmdop_start_address),de
001CA1 23                  B    50    				inc hl
001CA2 28 09               B    51    				jr z,st_addrok
001CA4 E1                  B    52    				pop hl							001CA5 FE82                B    53    				cp 82h							001CA7 28 02               B    54    				jr z,c_badhex
001CA9 3E16                B    55    				ld a,016h						001CAB B7                  B    56    c_badhex		or a
001CAC C9                  B    57    				ret
                           B    58    				
001CAD CD D9 10 00         B    59    st_addrok		call ascii_to_hexword			001CB1 ED53 42 61 00       B    60    				ld (cmdop_end_address),de
001CB6 23                  B    61    				inc hl
001CB7 B7                  B    62    				or a
001CB8 C8                  B    63    				ret z
001CB9 E1                  B    64    				pop hl							001CBA FE82                B    65    				cp 82h							001CBC 28 ED               B    66    				jr z,c_badhex
001CBE 3E1C                B    67    				ld a,01ch						001CC0 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001CC1                     B    72    hexword_or_bust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001CC1 CD D9 10 00         B    79    				call ascii_to_hexword		
001CC5 FE82                B    80    				cp 82h
001CC7 20 03               B    81    				jr nz,hex_good
001CC9 E1                  B    82    				pop hl						; r
001CCA B7                  B    83    				or a	
001CCB C9                  B    84    				ret			 
001CCC FE81                B    85    hex_good		cp 081h						; n
001CCE C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CCF                     B     5    os_cmd_cd	
                           B     6    
001CCF CD D2 16 00         B     7    				call os_check_volume_format	
001CD3 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001CD4 7E                  B    11    				ld a,(hl)						001CD5 B7                  B    12    				or a				
001CD6 CA 7D 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001CDA 7E                  B    16    				ld a,(hl)						001CDB 23                  B    17    				inc hl
001CDC 46                  B    18    				ld b,(hl)
001CDD 2B                  B    19    				dec hl
001CDE FE2E                B    20    				cp '.'			
001CE0 20 08               B    21    				jr nz,cd_nual
001CE2 B8                  B    22    				cp b
001CE3 20 05               B    23    				jr nz,cd_nual
001CE5 CD 2A 17 00         B    24    				call os_parent_dir	
001CE9 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CEA FE2F                B    28    cd_nual			cp 02fh			
001CEC 20 05               B    29    				jr nz,cd_nogor					001CEE CD 30 17 00         B    30    				call os_root_dir	
001CF2 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CF3 FE25                B    34    cd_nogor		cp '%'							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CF5 20 1F               B    35    				jr nz,cd_no_assign
001CF7 CD 70 1B 00         B    36    				call os_get_envar
001CFB 28 04               B    37    				jr z,cd_evok
001CFD 3ED1                B    38    				ld a,0d1h						001CFF B7                  B    39    				or a
001D00 C9                  B    40    				ret
001D01 11000000            B    41    cd_evok			ld de,0
001D05 5E                  B    42    				ld e,(hl)
001D06 23                  B    43    				inc hl
001D07 56                  B    44    				ld d,(hl)
001D08 23                  B    45    				inc hl
001D09 7E                  B    46    				ld a,(hl)
001D0A D5                  B    47    				push de
001D0B CD 06 1B 00         B    48    				call os_change_volume
001D0F D1                  B    49    				pop de
001D10 C0                  B    50    				ret nz
001D11 CD B6 1A 00         B    51    				call fs_update_dir_cluster
001D15 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001D16                     B    55    cd_no_assign
                           B    56    			
001D16 3A 55 5F 00         B    57    				ld a,(current_volume)
001D1A 32 89 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001D1E E5                  B    60    				push hl
001D1F DDE1                B    61    				pop ix
001D21 DD7E04              B    62    				ld a,(ix+4)
001D24 FE3A                B    63    				cp ':'							001D26 20 25               B    64    				jr nz,cd_nchvol
001D28 11 5A 5F 00         B    65    				ld de,vol_txt+1
001D2C 0603                B    66    				ld b,3
001D2E CD 29 12 00         B    67    				call os_compare_strings
001D32 20 19               B    68    				jr nz,cd_nchvol
001D34 11050000            B    69    				ld de,5
001D38 19                  B    70    				add hl,de
001D39 22 F8 61 00         B    71    				ld (os_args_loc),hl				001D3D DD7E03              B    72    				ld a,(ix+3)						001D40 D630                B    73    				sub 030h
001D42 CD 06 1B 00         B    74    				call os_change_volume
001D46 C0                  B    75    				ret nz							001D47 CD 30 17 00         B    76    				call os_root_dir				001D4B 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D4D CD AA 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D51 ED53 86 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D56 E5                  B    83    cd_mollp		push hl
001D57 CD 20 17 00         B    84    				call os_change_dir				001D5B E1                  B    85    				pop hl
001D5C 20 0A               B    86    				jr nz,cd_dcherr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D5E 7E                  B    87    cd_mol			ld a,(hl)						001D5F 23                  B    88    				inc hl
001D60 B7                  B    89    				or a
001D61 C8                  B    90    				ret z
001D62 FE2F                B    91    				cp 02fh
001D64 28 F0               B    92    				jr z,cd_mollp
001D66 18 F6               B    93    				jr cd_mol
                           B    94    					
001D68                     B    95    cd_dcherr	
                           B    96    			
001D68 F5                  B    97    				push af							001D69 ED5B 86 68 00       B    98    				ld de,(original_dir_cd_cmd)
001D6E CD B6 1A 00         B    99    				call fs_update_dir_cluster
001D72 3A 89 68 00         B   100    				ld a,(original_vol_cd_cmd)
001D76 CD 06 1B 00         B   101    				call os_change_volume	
001D7A F1                  B   102    				pop af
001D7B B7                  B   103    				or a
001D7C C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D7D                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D7D 0610                B   113    				ld b,max_dirs
001D7F 0E00                B   114    				ld c,0
001D81 C5                  B   115    lp1				push bc
001D82 CD AA 1A 00         B   116    				call fs_get_dir_cluster
001D86 C1                  B   117    				pop bc
001D87 D5                  B   118    				push de
001D88 0C                  B   119    				inc c
001D89 C5                  B   120    				push bc
001D8A CD 2A 17 00         B   121    				call os_parent_dir
001D8E C1                  B   122    				pop bc
001D8F 20 02               B   123    				jr nz,shdir_lp
001D91 10 EE               B   124    				djnz lp1
                           B   125    				
001D93 D1                  B   126    shdir_lp		pop de
001D94 C5                  B   127    				push bc
001D95 CD B6 1A 00         B   128    				call fs_update_dir_cluster
001D99 CD 56 17 00         B   129    				call os_get_current_dir_name
001D9D CD 5A 0F 00         B   130    				call os_print_string
001DA1 21 B3 1D 00         B   131    				ld hl,cd_fwdslash_txt
001DA5 CD 5A 0F 00         B   132    				call os_print_string
001DA9 C1                  B   133    				pop bc
001DAA 0D                  B   134    				dec c
001DAB 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001DAD CD 02 14 00         B   137    				call os_new_line	
001DB1 AF                  B   138    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001DB2 C9                  B   139    				ret
                           B   140    			
001DB3 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006886            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006889            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DB5                     B     5    os_cmd_cls
                           B     6    
001DB5 CD 6C 3E 00         B     7    				call hwsc_clear_screen
001DB9 AF                  B     8    				xor a
001DBA C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001DBB                     B     5    os_cmd_colon
                           B     6    	
001DBB CD C1 1C 00         B     7    				call hexword_or_bust			001DBF CA 45 16 00         B     8    				jp z,os_no_start_addr			001DC3 D5                  B     9    				push de
001DC4 DDE1                B    10    				pop ix							                           B    11    			
001DC6 CD C1 1C 00         B    12    wmblp			call hexword_or_bust			001DCA 28 07               B    13    				jr z,os_ccmdn
001DCC DD7300              B    14    				ld (ix),e						001DCF DD23                B    15    				inc ix
001DD1 18 F3               B    16    				jr wmblp
                           B    17    
001DD3 AF                  B    18    os_ccmdn		xor a
001DD4 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DD5 FD21 BC 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DDA FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DDE CD C1 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DE2 28 05               B    10    				jr z,d_no_hex					001DE4 ED53 33 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001DE9 3A F7 5E 00         B    13    d_no_hex		ld a,(charmap_rows)				001DED D602                B    14    				sub a,2
001DEF 47                  B    15    				ld b,a
001DF0 C5                  B    16    dis_loop		push bc
                           B    17    				
001DF1 DD2A 33 29 00       B    18    				ld ix,(dis_addr)				001DF6 CD 9E 23 00         B    19    				call show_ix					001DFA 3E20                B    20    				ld a,' '
001DFC CD 92 23 00         B    21    				call show_ascii_char
                           B    22    
001E00 FD21 BC 23 00       B    23    				ld iy,prefix_bits_loc
001E05 FD360000            B    24    				ld (iy),0						001E09 CD 45 1E 00         B    25    				call dis_instr					001E0D DD23                B    26    				inc ix							                           B    27    				
001E0F 3E1A                B    28    				ld a,26							001E11 32 37 61 00         B    29    				ld (cursor_pos+1),a				001E15 ED4B 33 29 00       B    30    				ld bc,(dis_addr)
001E1A DD22 33 29 00       B    31    				ld (dis_addr),ix				001E1F DDE5                B    32    				push ix
001E21 E1                  B    33    				pop hl
001E22 AF                  B    34    				xor a
001E23 ED42                B    35    				sbc hl,bc						001E25 7D                  B    36    				ld a,l
001E26 E607                B    37    				and 7
001E28 6F                  B    38    				ld l,a
001E29 0A                  B    39    shexoplp		ld a,(bc)						001E2A CD 81 23 00         B    40    				call show_hex_byte
001E2E 3E20                B    41    				ld a,' '
001E30 CD 92 23 00         B    42    				call show_ascii_char
001E34 03                  B    43    				inc bc
001E35 2D                  B    44    				dec l
001E36 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E38 CD 02 14 00         B    47    				call os_new_line
001E3C C1                  B    48    				pop bc
001E3D 10 B1               B    49    				djnz dis_loop
                           B    50    
001E3F CD 02 14 00         B    51    				call os_new_line
001E43 AF                  B    52    				xor a
001E44 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E45 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E48 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E4C 28 04               B    73    			jr z,z80_list					; T
001E4E FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E52                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E52 FE40                B    79    			cp 40h
001E54 20 0A               B    80    			jr nz,not_sis
001E56 FDCB00B6            B    81    			res il_prefix,(iy)
001E5A FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E5E 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E60 FE49                B    85    not_sis		cp 49h
001E62 20 0A               B    86    			jr nz,not_lis
001E64 FDCB00B6            B    87    			res il_prefix,(iy)
001E68 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E6C 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E6E FE52                B    91    not_lis		cp 52h
001E70 20 0A               B    92    			jr nz,not_sil
001E72 FDCB00F6            B    93    			set il_prefix,(iy)
001E76 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E7A 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E7C FE5B                B    97    not_sil		cp 5bh
001E7E 20 11               B    98    			jr nz,not_adl_prefix_byte
001E80 FDCB00F6            B    99    			set il_prefix,(iy)
001E84 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E88 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E8C DD23                B   103    			inc ix
001E8E DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E91                     B   108    not_adl_prefix_byte			
                           B   109    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E91 FECB                B   110    			cp 0cbh								001E93 20 08               B   111    			jr nz,not_cb
001E95 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E99 DD23                B   113    			inc ix
001E9B 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E9D FEED                B   116    not_cb		cp 0edh
001E9F 20 08               B   117    			jr nz,not_ed
001EA1 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001EA5 DD23                B   119    			inc ix
001EA7 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001EA9 FEDD                B   122    not_ed		cp 0ddh
001EAB 20 18               B   123    			jr nz,not_dd
001EAD CD E0 20 00         B   124    do_dd		call check_nxt_byte_prefix			001EB1 28 92               B   125    			jr z,dis_instr						001EB3 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001EB7 FECB                B   127    xdcb_query	cp 0cbh								001EB9 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001EBB FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001EBF DD23                B   130    			inc ix								001EC1 DD23                B   131    			inc ix								001EC3 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001EC5 FEFD                B   134    not_dd		cp 0fdh
001EC7 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001EC9 CD E0 20 00         B   136    do_fd		call check_nxt_byte_prefix
001ECD CA 45 1E 00         B   137    			jr z,dis_instr	
001ED1 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001ED5 18 E0               B   139    			jr xdcb_query
                           B   140    
001ED7                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001ED7 DD7E00              B   145    			ld a,(ix)	
001EDA E6C0                B   146    			and 11000000b			; seperate 
001EDC 07                  B   147    			rlca
001EDD 07                  B   148    			rlca
001EDE FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EE1 DD7E00              B   151    			ld a,(ix)
001EE4 E638                B   152    			and 00111000b
001EE6 CB3F                B   153    			srl a
001EE8 CB3F                B   154    			srl a
001EEA CB3F                B   155    			srl a	
001EEC FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EEF DD7E00              B   158    			ld a,(ix)
001EF2 E607                B   159    			and 00000111b
001EF4 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EF7 DD7E00              B   162    			ld a,(ix)
001EFA E630                B   163    			and 00110000b
001EFC CB3F                B   164    			srl a
001EFE CB3F                B   165    			srl a
001F00 CB3F                B   166    			srl a
001F02 CB3F                B   167    			srl a
001F04 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F07 DD7E00              B   170    			ld a,(ix)
001F0A E608                B   171    			and 00001000b
001F0C CB3F                B   172    			srl a
001F0E CB3F                B   173    			srl a
001F10 CB3F                B   174    			srl a
001F12 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F15 CD EE 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F19 78                  B   181    index_table	ld a,b							; a
001F1A B7                  B   182    			or a
001F1B 28 07               B   183    			jr z,parse_instr				; m
001F1D CB7E                B   184    d_filp		bit 7,(hl)						; w
001F1F 23                  B   185    			inc hl							; o
001F20 28 FB               B   186    			jr z,d_filp					
001F22 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001F24 FD21 BC 23 00       B   190    parse_instr	ld iy,opcode_vars
001F29 01000000            B   191    			ld bc,0
001F2D 7E                  B   192    			ld a,(hl)						;ge
001F2E FE80                B   193    			cp 80h
001F30 C8                  B   194    			ret z
001F31 E67F                B   195    			and 7fh
                           B   196    			
001F33 FE26                B   197    			cp '&'							;sy
001F35 20 28               B   198    			jr nz,not_adlsym
001F37 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F3B CA C9 20 00         B   200    			jr z,next_opcode_ascii_char
001F3F 0600                B   201    			ld b,0
001F41 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F45 28 02               B   203    			jr z,naplsb
001F47 CBC0                B   204    			set 0,b
001F49 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F4D 28 02               B   206    			jr z,napmsb
001F4F CBC8                B   207    			set 1,b
001F51 E5                  B   208    napmsb		push hl
001F52 21 1B 29 00         B   209    			ld hl,adl_prefix_list
001F56 CD 19 1F 00         B   210    			call index_table				; r
001F5A E1                  B   211    			pop hl
001F5B C3 C9 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F5F FE5E                B   214    not_adlsym	cp '^'							;sy
001F61 20 0D               B   215    			jr nz,d_not_imm8
001F63 DD23                B   216    			inc ix							;th
001F65 DD7E00              B   217    			ld a,(ix)
001F68 CD 81 23 00         B   218    			call show_hex_byte
001F6C C3 C9 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F70 FE21                B   221    d_not_imm8	cp '!'							;sy
001F72 20 26               B   222    			jr nz,d_not_imm16					001F74 11020000            B   223    			ld de,2
001F78 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F7C 28 08               B   225    			jr z,imm16
001F7E 13                  B   226    			inc de
001F7F DD7E03              B   227    			ld a,(ix+3)
001F82 CD 81 23 00         B   228    			call show_hex_byte
001F86 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F89 CD 81 23 00         B   230    			call show_hex_byte			
001F8D DD7E01              B   231    			ld a,(ix+1)						;th
001F90 CD 81 23 00         B   232    			call show_hex_byte
001F94 DD19                B   233    			add ix,de						;ad
001F96 C3 C9 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F9A FE2F                B   236    d_not_imm16	cp '/'							;sy
001F9C 20 36               B   237    			jr nz,d_not_sb
001F9E FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001FA2 28 05               B   239    			jr z,norm_dbyte
001FA4 DD7EFF              B   240    			ld a,(ix-1)						;if
001FA7 18 05               B   241    			jr xdcb_dbyte
001FA9 DD23                B   242    norm_dbyte	inc ix
001FAB DD7E00              B   243    			ld a,(ix)						;th
001FAE CB7F                B   244    xdcb_dbyte	bit 7,a
001FB0 20 10               B   245    			jr nz,d_sbin					;sh
001FB2 F5                  B   246    			push af
001FB3 3E2B                B   247    			ld a,'+'
001FB5 CD 92 23 00         B   248    			call show_ascii_char
001FB9 F1                  B   249    			pop af
001FBA CD 81 23 00         B   250    			call show_hex_byte
001FBE C3 C9 20 00         B   251    			jp next_opcode_ascii_char
001FC2 F5                  B   252    d_sbin		push af
001FC3 3E2D                B   253    			ld a,'-'
001FC5 CD 92 23 00         B   254    			call show_ascii_char
001FC9 F1                  B   255    			pop af
001FCA ED44                B   256    			neg
001FCC CD 81 23 00         B   257    			call show_hex_byte
001FD0 C3 C9 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FD4 FE64                B   260    d_not_sb	cp 'd'							;sy
001FD6 20 1E               B   261    			jr nz,d_not_pcdip
001FD8 DD23                B   262    			inc ix
001FDA 01000000            B   263    			ld bc,0
001FDE DD7E00              B   264    			ld a,(ix)
001FE1 CB7F                B   265    			bit 7,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FE3 28 01               B   266    			jr z,d_spcd_pos
001FE5 0B                  B   267    			dec bc
001FE6 4F                  B   268    d_spcd_pos	ld c,a
001FE7 03                  B   269    			inc bc
001FE8 DDE5                B   270    			push ix
001FEA DD09                B   271    			add ix,bc
001FEC CD 9E 23 00         B   272    			call show_ix
001FF0 DDE1                B   273    			pop ix
001FF2 C3 C9 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FF6 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FF8 20 16               B   277    			jr nz,d_not_sdig
001FFA 23                  B   278    			inc hl							;th
001FFB 01000000            B   279    			ld bc,0
001FFF 4E                  B   280    			ld c,(hl)
002000 FD21 BC 23 00       B   281    			ld iy,opcode_vars
002005 FD09                B   282    			add iy,bc
002007 FD7E00              B   283    			ld a,(iy)						;a 
00200A C630                B   284    			add a,30h						;co
00200C C3 C5 20 00         B   285    			jp d_output_char
                           B   286    
002010 FE5F                B   287    d_not_sdig	cp '_'
002012 20 12               B   288    			jr nz,d_nhlsubst				; s
002014 E5                  B   289    			push hl
002015 21 F3 28 00         B   290    			ld hl,hl_subs
002019 CD D1 20 00         B   291    hl_subst	call prefix_to_offset
00201D CD 19 1F 00         B   292    			call index_table				; r
002021 E1                  B   293    			pop hl
002022 C3 C9 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002026 FE7C                B   296    d_nhlsubst	cp '|'
002028 20 07               B   297    			jr nz,d_noinvhls
00202A E5                  B   298    			push hl
00202B 21 F9 28 00         B   299    			ld hl,inv_hl_subs
00202F 18 E8               B   300    			jr hl_subst
                           B   301    			
002031 FE68                B   302    d_noinvhls	cp 'h'							;sy
002033 20 07               B   303    			jr nz,d_nhsubst
002035 E5                  B   304    			push hl
002036 21 FF 28 00         B   305    			ld hl,h_subs
00203A 18 DD               B   306    			jr hl_subst
                           B   307    			
00203C FE6C                B   308    d_nhsubst	cp 'l'							;sy
00203E 20 07               B   309    			jr nz,d_nlsubst
002040 E5                  B   310    			push hl
002041 21 06 29 00         B   311    			ld hl,l_subs
002045 18 D2               B   312    			jr hl_subst
                           B   313    			
002047 FE24                B   314    d_nlsubst	cp '$'
002049 20 07               B   315    			jr nz,d_nihlsubst				; s
00204B E5                  B   316    			push hl
00204C 21 0D 29 00         B   317    			ld hl,ind_hl_subs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002050 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002052                     B   321    d_nihlsubst	
                           B   322    
002052 FE7E                B   323    			cp '~'							; s
002054 20 1F               B   324    			jr nz,ntable_r
002056 11 48 28 00         B   325    			ld de,table_r
00205A 23                  B   326    do_table 	inc hl
00205B 01000000            B   327    			ld bc,0							; t
00205F 4E                  B   328    			ld c,(hl)
002060 FD21 BC 23 00       B   329    			ld iy,opcode_vars
002065 FD09                B   330    			add iy,bc
002067 FD4600              B   331    			ld b,(iy)						;in
00206A E5                  B   332    			push hl
00206B EB                  B   333    			ex de,hl
00206C CD 19 1F 00         B   334    			call index_table				; r
002070 E1                  B   335    			pop hl
002071 C3 C9 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002075 11 53 28 00         B   338    ntable_r	ld de,table_r2					; s
002079 FE3D                B   339    			cp '='
00207B 28 DD               B   340    			jr z,do_table
                           B   341    			
00207D 11 5E 28 00         B   342    			ld de,table_rp					; s
002081 FE40                B   343    			cp '@'
002083 28 D5               B   344    			jr z,do_table 
                           B   345    			
002085 11 65 28 00         B   346    			ld de,table_rp2					; s
002089 FE2A                B   347    			cp '*'
00208B 28 CD               B   348    			jr z,do_table
                           B   349    			
00208D 11 CB 28 00         B   350    			ld de,table_rp3					; s
002091 FE3C                B   351    			cp '<'
002093 28 C5               B   352    			jr z,do_table
                           B   353    			
002095 11 D3 28 00         B   354    			ld de,table_rp4					; s
002099 FE7D                B   355    			cp '}'
00209B 28 BD               B   356    			jr z,do_table
                           B   357    			
00209D 11 6D 28 00         B   358    			ld de,table_cc					; s
0020A1 FE23                B   359    			cp '#'
0020A3 28 B5               B   360    			jr z,do_table 
                           B   361    			
0020A5 11 79 28 00         B   362    			ld de,table_alu					; s
0020A9 FE3A                B   363    			cp ':'
0020AB 28 AD               B   364    			jr z,do_table 
                           B   365    			
0020AD 11 A5 28 00         B   366    			ld de,table_rot					; s
0020B1 FE25                B   367    			cp '%'
0020B3 28 A5               B   368    			jr z,do_table 
                           B   369    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020B5 11 E3 28 00         B   370    			ld de,table_rst					; s
0020B9 FE3B                B   371    			cp ';'
0020BB 28 9D               B   372    			jr z,do_table 
                           B   373    
0020BD 11 DB 28 00         B   374    			ld de,table_rp5					; s
0020C1 FE7B                B   375    			cp '{'
0020C3 28 95               B   376    			jr z,do_table 
                           B   377    
0020C5                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0020C5                     B   382    d_output_char
                           B   383    
0020C5 CD 92 23 00         B   384    			call show_ascii_char
                           B   385    
0020C9                     B   386    next_opcode_ascii_char
                           B   387    
0020C9 CB7E                B   388    			bit 7,(hl)						;if
0020CB C0                  B   389    			ret nz
0020CC 23                  B   390    			inc hl
0020CD C3 24 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0020D1                     B   397    prefix_to_offset
                           B   398    
0020D1 0602                B   399    			ld b,2							;se
0020D3 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020D7 C0                  B   401    			ret nz
0020D8 05                  B   402    			dec b
0020D9 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0020DD C0                  B   404    			ret nz
0020DE 05                  B   405    			dec b
0020DF C9                  B   406    			ret
                           B   407    			
                           B   408    			
0020E0                     B   409    check_nxt_byte_prefix			
                           B   410    
0020E0 DD23                B   411    			inc ix
0020E2 DD7E00              B   412    			ld a,(ix)
0020E5 FEDD                B   413    			cp 0ddh
0020E7 C8                  B   414    			ret z
0020E8 FEED                B   415    			cp 0edh
0020EA C8                  B   416    			ret z
0020EB FEFD                B   417    			cp 0fdh
0020ED C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020EE                     B   428    find_instruction_ascii
                           B   429    
0020EE 0600                B   430    			ld b,0						; defau
                           B   431    
0020F0 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020F4 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020F6 21 22 28 00         B   434    			ld hl,ddcb_fdcb_z6		
0020FA FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020FD FD7E 03             B   436    			ld a,(iy+var_z)
002100 FE06                B   437    			cp 6
002102 C8                  B   438    			ret z
002103 21 EA 27 00         B   439    			ld hl,ddcb_fdcb_zn6					002107 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002108                     B   444    not_ddcb_fdcb_inst
                           B   445    
002108 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
00210C 28 08               B   447    			jr z,not_cb_inst
00210E 21 72 25 00         B   448    			ld hl,cb_group		
002112 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
002115 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002116                     B   454    not_cb_inst
                           B   455    
002116 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
00211A CA 3B 22 00         B   457    			jr z,not_ed_inst
                           B   458    
00211E FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
002121 B7                  B   460    			or a
002122 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
002124 FD7E 03             B   464    			ld a,(iy+var_z)				
002127 B7                  B   465    			or a
002128 20 0D               B   466    			jr nz,notedx0z0
00212A 21 99 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
00212E FD7E 02             B   468    			ld a,(iy+var_y)
002131 FE06                B   469    			cp 6
002133 C0                  B   470    			ret nz
002134 0601                B   471    			ld b,1
002136 C9                  B   472    			ret
                           B   473    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002137 FE01                B   474    notedx0z0	cp 1
002139 20 0D               B   475    			jr nz,notedx0z1
00213B 21 AA 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
00213F FD7E 02             B   477    			ld a,(iy+var_y)
002142 FE06                B   478    			cp 6
002144 C0                  B   479    			ret nz
002145 0601                B   480    			ld b,1
002147 C9                  B   481    			ret
                           B   482    
002148 FE02                B   483    notedx0z1	cp 2
00214A 20 05               B   484    			jr nz,notedx0z2
00214C 21 C0 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
002150 C9                  B   486    			ret
                           B   487    
002151 FE03                B   488    notedx0z2	cp 3
002153 20 05               B   489    			jr nz,notedx0z3
002155 21 CC 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002159 C9                  B   491    			ret
                           B   492    			
00215A FE04                B   493    notedx0z3	cp 4
00215C 20 05               B   494    			jr nz,notedx0z4
00215E 21 D8 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002162 C9                  B   496    			ret
                           B   497    
002163 FE06                B   498    notedx0z4	cp 6
002165 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002167 21 E2 25 00         B   500    			ld hl,ed_x0_z6
00216B C9                  B   501    			ret
                           B   502    
00216C FE07                B   503    notedx0z6	cp 7
00216E C2 45 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002172 21 ED 25 00         B   505    			ld hl,ed_x0_z7
002176 FD46 05             B   506    			ld b,(iy+var_q)
002179 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
00217A FE01                B   511    notedx0		cp 1	
00217C 20 68               B   512    			jr nz,ed_xn1
                           B   513    
00217E FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002181 B7                  B   515    			or a
002182 20 0D               B   516    			jr nz,ed_x1_zn0
002184 21 02 26 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002188 FD7E 02             B   518    			ld a,(iy+var_y)
00218B FE06                B   519    			cp 6
00218D C0                  B   520    			ret nz
00218E 0601                B   521    			ld b,1
002190 C9                  B   522    			ret
                           B   523    			
002191 FE01                B   524    ed_x1_zn0	cp 1
002193 20 0D               B   525    			jr nz,ed_x1_zn1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002195 21 12 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002199 FD7E 02             B   527    			ld a,(iy+var_y)
00219C FE06                B   528    			cp 6
00219E C0                  B   529    			ret nz
00219F 0601                B   530    			ld b,1
0021A1 C9                  B   531    			ret
                           B   532    		
0021A2 FE02                B   533    ed_x1_zn1	cp 2
0021A4 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0021A6 21 27 26 00         B   535    			ld hl,ed_x1_z2	
0021AA FD46 05             B   536    			ld b,(iy+var_q)
0021AD C9                  B   537    			ret
                           B   538    
0021AE FE03                B   539    ed_x1_zn2	cp 3
0021B0 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0021B2 21 3D 26 00         B   541    			ld hl,ed_x1_z3	
0021B6 FD46 05             B   542    			ld b,(iy+var_q)
0021B9 C9                  B   543    			ret
                           B   544    			
0021BA FE04                B   545    ed_x1_zn3	cp 4							;z 
0021BC 20 08               B   546    			jr nz,ed_x1_zn4
0021BE 21 52 26 00         B   547    			ld hl,ed_x1_z4
0021C2 FD46 02             B   548    			ld b,(iy+var_y)
0021C5 C9                  B   549    			ret
                           B   550    			
0021C6 FE05                B   551    ed_x1_zn4	cp 5
0021C8 20 08               B   552    			jr nz,ed_x1_zn5
0021CA 21 8A 26 00         B   553    			ld hl,ed_x1_z5					;z 
0021CE FD46 02             B   554    			ld b,(iy+var_y)
0021D1 C9                  B   555    			ret
                           B   556    			
0021D2 FE06                B   557    ed_x1_zn5	cp 6
0021D4 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021D6 21 B9 26 00         B   559    			ld hl,ed_x1_z6
0021DA FD46 02             B   560    			ld b,(iy+var_y)
0021DD C9                  B   561    			ret
                           B   562    			
0021DE 21 DE 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021E2 FD46 02             B   564    			ld b,(iy+var_y)
0021E5 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021E6 FE02                B   569    ed_xn1		cp 2
0021E8 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021EA FD46 02             B   572    			ld b,(iy+var_y)
0021ED FD7E 03             B   573    			ld a,(iy+var_z)
0021F0 B7                  B   574    			or a
0021F1 20 05               B   575    			jr nz,edx2zn0
0021F3 21 02 27 00         B   576    			ld hl,ed_x2_z0					;x=
0021F7 C9                  B   577    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   578    
0021F8 FE01                B   579    edx2zn0		cp 1
0021FA 20 05               B   580    			jr nz,edx2zn1
0021FC 21 1C 27 00         B   581    			ld hl,ed_x2_z1					;x=
002200 C9                  B   582    			ret
                           B   583    
002201 FE02                B   584    edx2zn1		cp 2
002203 20 05               B   585    			jr nz,edx2zn2
002205 21 36 27 00         B   586    			ld hl,ed_x2_z2					;x=
002209 C9                  B   587    			ret
                           B   588    
00220A FE03                B   589    edx2zn2		cp 3
00220C 20 05               B   590    			jr nz,edx2zn3
00220E 21 66 27 00         B   591    			ld hl,ed_x2_z3					;x=
002212 C9                  B   592    			ret
                           B   593    
002213 21 98 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002217 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002218 FE03                B   599    ed_xn2		cp 3
00221A 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
00221C FD46 02             B   602    			ld b,(iy+var_y)
00221F FD7E 03             B   603    			ld a,(iy+var_z)
002222 FE02                B   604    			cp 2
002224 20 05               B   605    			jr nz,edx3zn2
002226 21 CE 27 00         B   606    			ld hl,ed_x3_z2					;x=
00222A C9                  B   607    			ret
00222B FE03                B   608    edx3zn2		cp 3
00222D 20 05               B   609    			jr nz,edx3zn3
00222F 21 DC 27 00         B   610    			ld hl,ed_x3_z3					;x=
002233 C9                  B   611    			ret
                           B   612    
002234                     B   613    edx3zn3
                           B   614    
002234                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
002234                     B   619    invalid_op
002234 21 45 28 00         B   620    			ld hl,bad_opcode				; x
002238 0600                B   621    			ld b,0
00223A C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
00223B FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
00223E B7                  B   629    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00223F C2 D7 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002243 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002246 B7                  B   636    			or a
002247 20 14               B   637    			jr nz,x0_z_not_zero
002249 21 C4 23 00         B   638    			ld hl,x0_z0
00224D FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
002250 47                  B   640    			ld b,a
002251 D604                B   641    			sub 4
002253 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002256 78                  B   643    			ld a,b
002257 FE04                B   644    			cp 4
002259 D8                  B   645    			ret c
00225A 0604                B   646    			ld b,4						;if y >
00225C C9                  B   647    			ret
                           B   648    			
00225D                     B   649    x0_z_not_zero		
                           B   650    			
00225D FE01                B   651    			cp 1
00225F 20 1A               B   652    			jr nz,x0_z_not_one
002261 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002264 FE06                B   654    			cp 6
002266 20 0B               B   655    			jr nz,x0z1yn6
002268 CD 77 23 00         B   656    			call test_ixiy_prefix		;if y=6
00226C 28 05               B   657    			jr z,x0z1yn6				;altern
00226E 21 F7 23 00         B   658    			ld hl,x0_z1_y6
002272 C9                  B   659    			ret
                           B   660    
002273 21 E4 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002277 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
00227A C9                  B   663    			ret 
                           B   664    			
00227B                     B   665    x0_z_not_one
                           B   666    
00227B FE02                B   667    			cp 2
00227D 20 08               B   668    			jr nz,x0_z_not_two
00227F 21 FF 23 00         B   669    			ld hl,x0_z2
002283 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002286 C9                  B   671    			ret
                           B   672    			
002287                     B   673    x0_z_not_two
                           B   674    
002287 FE03                B   675    			cp 3
002289 20 08               B   676    			jr nz,x0_z_not_three
00228B 21 4B 24 00         B   677    			ld hl,x0_z3
00228F FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002292 C9                  B   679    			ret
                           B   680    			
002293                     B   681    x0_z_not_three
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   682    
002293 FE04                B   683    			cp 4
002295 20 05               B   684    			jr nz,x0_z_not_four
002297 21 5B 24 00         B   685    			ld hl,x0_z4					;no ini
00229B C9                  B   686    			ret			
                           B   687    			
00229C                     B   688    x0_z_not_four
                           B   689    
00229C FE05                B   690    			cp 5
00229E 20 05               B   691    			jr nz,x0_z_not_five
0022A0 21 63 24 00         B   692    			ld hl,x0_z5					;no ini
0022A4 C9                  B   693    			ret				
                           B   694    			
0022A5                     B   695    x0_z_not_five
                           B   696    
0022A5 FE06                B   697    			cp 6
0022A7 20 1A               B   698    			jr nz,x0_z_not_six
0022A9 21 6B 24 00         B   699    			ld hl,x0_z6					;normal
0022AD FD7E 02             B   700    			ld a,(iy+var_y)
0022B0 FE07                B   701    			cp 7
0022B2 C0                  B   702    			ret nz
0022B3 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0022B7 20 05               B   704    			jr nz,altx0z6
0022B9 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0022BD C8                  B   706    			ret z	
0022BE 21 74 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0022C2 C9                  B   708    			ret
                           B   709    
                           B   710    
0022C3                     B   711    x0_z_not_six
                           B   712    			
0022C3 21 7C 24 00         B   713    			ld hl,x0_z7					;x=0, z
0022C7 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0022CA CD 77 23 00         B   715    			call test_ixiy_prefix
0022CE C8                  B   716    			ret z
0022CF 21 96 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022D3 FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022D6 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
0022D7 FE01                B   723    x_not_zero	cp 1						; is x 
0022D9 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0022DB 21 A8 24 00         B   726    			ld hl,x1_table				; x=1
0022DF CD 77 23 00         B   727    			call test_ixiy_prefix
0022E3 20 11               B   728    			jr nz,pref_x1
0022E5 FD7E 02             B   729    			ld a,(iy+var_y)
0022E8 FE06                B   730    			cp 6
0022EA C0                  B   731    			ret nz
0022EB FD7E 03             B   732    			ld a,(iy+var_z)
0022EE FE06                B   733    			cp 6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022F0 C0                  B   734    			ret nz
0022F1 21 C6 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022F5 C9                  B   736    			ret
                           B   737    
0022F6 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022F9 FE06                B   739    			cp 6
0022FB 20 05               B   740    			jr nz,x1yn6
0022FD 21 B2 24 00         B   741    			ld hl,x1_y6
002301 C9                  B   742    			ret
                           B   743    			
002302 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
002305 FE06                B   745    			cp 6
002307 C0                  B   746    			ret nz
002308 21 BC 24 00         B   747    			ld hl,x1_z6
00230C C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
00230D FE02                B   752    x_not_one	cp 2						; is x 
00230F 20 05               B   753    			jr nz,x_not_two
002311 21 CA 24 00         B   754    			ld hl,x2_table				; no in
002315 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002316 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002319 B7                  B   760    			or a
00231A 20 05               B   761    			jr nz,x3_z_not_zero
00231C 21 CF 24 00         B   762    			ld hl,x3_z0					; no in
002320 C9                  B   763    			ret
                           B   764    						
002321                     B   765    x3_z_not_zero
                           B   766    
002321 FE01                B   767    			cp 1
002323 20 11               B   768    			jr nz,x3_z_not_one
002325 21 D7 24 00         B   769    			ld hl,x3_z1_q0
002329 FD7E 05             B   770    			ld a,(iy+var_q)
00232C B7                  B   771    			or a
00232D C8                  B   772    			ret z						; no in
00232E 21 DF 24 00         B   773    			ld hl,x3_z1_q1
002332 FD46 04             B   774    			ld b,(iy+var_p)				; index
002335 C9                  B   775    			ret
                           B   776    
002336                     B   777    x3_z_not_one
                           B   778    
002336 FE02                B   779    			cp 2
002338 20 05               B   780    			jr nz,x3_z_not_two
00233A 21 F6 24 00         B   781    			ld hl,x3_z2					;no ini
00233E C9                  B   782    			ret
                           B   783    
00233F                     B   784    x3_z_not_two
                           B   785    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00233F FE03                B   786    			cp 3
002341 20 08               B   787    			jr nz,x3_z_not_three
002343 21 FF 24 00         B   788    			ld hl,x3_z3
002347 FD46 02             B   789    			ld b,(iy+var_y)				;index 
00234A C9                  B   790    			ret
                           B   791    
00234B                     B   792    x3_z_not_three
                           B   793    
00234B FE04                B   794    			cp 4
00234D 20 05               B   795    			jr nz,x3_z_not_four
00234F 21 34 25 00         B   796    			ld hl,x3_z4				;no initial
002353 C9                  B   797    			ret						
                           B   798    
                           B   799    
002354                     B   800    x3_z_not_four
                           B   801    
002354 FE05                B   802    			cp 5
002356 20 11               B   803    			jr nz,x3_z_not_five
002358 21 3F 25 00         B   804    			ld hl,x3_z5_q0
00235C FD7E 05             B   805    			ld a,(iy+var_q)
00235F B7                  B   806    			or a
002360 C8                  B   807    			ret z						;no ind
002361 21 48 25 00         B   808    			ld hl,x3_z5_q1
002365 FD46 04             B   809    			ld b,(iy+var_p)				;else i
002368 C9                  B   810    			ret
                           B   811    
002369                     B   812    x3_z_not_five
                           B   813    
002369 FE06                B   814    			cp 6
00236B 20 05               B   815    			jr nz,x3_z_not_six
00236D 21 66 25 00         B   816    			ld hl,x3_z6					;no ind
002371 C9                  B   817    			ret
                           B   818    
002372                     B   819    x3_z_not_six
                           B   820    
002372 21 6A 25 00         B   821    			ld hl,x3_z7					;x=3, z
002376 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002377                     B   827    test_ixiy_prefix
                           B   828    
002377 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00237B C0                  B   830    			ret nz
00237C FDCB005E            B   831    			bit sub_iy_prefix,(iy)
002380 C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002381                     B   837    show_hex_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   838    
002381 E5                  B   839    			push hl
002382 21 2E 29 00         B   840    			ld hl,output_byte_txt
002386 E5                  B   841    			push hl
002387 CD A5 10 00         B   842    			call hexbyte_to_ascii
00238B E1                  B   843    			pop hl
00238C CD 5A 0F 00         B   844    			call os_print_string
002390 E1                  B   845    			pop hl
002391 C9                  B   846    			ret
                           B   847    			
                           B   848    
002392                     B   849    show_ascii_char
                           B   850    
002392 E5                  B   851    			push hl
002393 21 31 29 00         B   852    			ld hl,output_char_txt
002397 77                  B   853    			ld (hl),a
002398 CD 5A 0F 00         B   854    			call os_print_string
00239C E1                  B   855    			pop hl
00239D C9                  B   856    			ret
                           B   857    		
                           B   858    		
00239E DD22 2B 29 00       B   859    show_ix		ld (d_work_address),ix
0023A3 3A 2D 29 00         B   860    			ld a,(d_work_address+2)
0023A7 CD 81 23 00         B   861    			call show_hex_byte
0023AB 3A 2C 29 00         B   862    			ld a,(d_work_address+1)
0023AF CD 81 23 00         B   863    			call show_hex_byte
0023B3 3A 2B 29 00         B   864    			ld a,(d_work_address)
0023B7 CD 81 23 00         B   865    			call show_hex_byte
0023BB C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0023BC                     B   896    opcode_vars
                           B   897    
0023BC 00                  B   898    prefix_bits_loc	db 0	
0023BD 00                  B   899    var_x_loc		db 0	
0023BE 00                  B   900    var_y_loc		db 0	
0023BF 00                  B   901    var_z_loc		db 0	
0023C0 00                  B   902    var_p_loc		db 0	
0023C1 00                  B   903    var_q_loc		db 0
0023C2 00                  B   904    var_calc_loc	db 0
0023C3 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0023C4 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0023C7 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0023CF A7 
0023D0 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023D7 4A522064 80         B   922    			db 'JR ','d',80h			; y3
0023DC 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023E4 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023EA 2C2180 
0023ED 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023F5 04 80 
0023F7 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023FF 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002407 2CC1 
002409 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
002411 43A9 
002413 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
00241B 2CC1 
00241D 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
002425 45A9 
002427 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
00242F DF 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002430 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002438 A9 
002439 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002441 C1 
002442 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
00244A A9 
                           B   937    
00244B 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002452 80 
002453 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
00245A 80 
                           B   940    			
00245B 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002462 80 
                           B   942    
002463 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
00246A 80 
                           B   944    			
00246B 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002471 2C5E80 
002474 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00247C 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
002480 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002484 524CC1              B   950    			db 'RL','A'+80h			;y=2
002487 5252C1              B   951    			db 'RR','A'+80h			;y=3
00248A 4441C1              B   952    			db 'DA','A'+80h			;y=4
00248D 4350CC              B   953    			db 'CP','L'+80h			;y=5
002490 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002493 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002496 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
00249C 2C2480 
00249F 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
0024A7 80 
                           B   959    		
                           B   960    
                           B   961    
0024A8 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
0024AE 2C7E 03 80 
0024B2 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0024B8 2C3D 03 80 
0024BC 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		0024C2 2C7E 03 80 
                           B   965    
0024C6 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
0024CA 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   973    		
0024CF 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024D6 80 
                           B   975    
0024D7 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024DE 80 
0024DF 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024E4 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024E7 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024ED 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024F5 80 
                           B   981    
0024F6 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024FC 2C2180 
                           B   983    
0024FF 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
002505 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
00250C 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
002514 C1 
002515 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
00251D 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
002525 2C5F80 
002528 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
002530 44C9                B   990    			db 'D','I'+80h			;y = 6
002532 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
002534 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
00253C 2C2180 
                           B   994    
00253F 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002547 80 
002548 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
002550 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002557 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
00255E 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002566 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
00256A 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002571 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002572 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002578 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
00257F 2C7E 03 80 
002583 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
00258A 2C7E 03 80 
00258E 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002595 2C7E 03 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002599 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
00259F 2C285EA9 
0025A3 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0025AA 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0025B2 2C7E 02 80 
0025B6 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0025BE 5FA9 
                           B  1022    
0025C0 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0025C7 2C49582F 80 
0025CC 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025D3 2C49592F 80 
0025D8 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025E0 02 80 
                           B  1026    
0025E2 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025EA 7D 04 80 
                           B  1028    
0025ED 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025F3 2C285FA9 
0025F7 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025FF 3C 04 80 
                           B  1031    
002602 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002607 2C284243 A9 
00260C 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
002612 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
00261A 2C7E 02 80 
00261E 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002626 B0 
                           B  1037    
002627 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		00262F 40 04 80 
002632 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		00263A 40 04 80 
                           B  1040    
00263D 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002645 40 04 80 
002648 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	00264E 2C2821A9 
                           B  1043    
002652 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002655 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00265B 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002663 49592F80 
002667 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00266D 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002675 80 
002676 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00267C 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002684 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
00268A 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
002690 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002696 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
00269E 49582F80 
0026A2 BF                  B  1056    				db '?'+80h					;y=
0026A3 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0026AB 80 
0026AC 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0026B3 BF                  B  1059    				db '?'+80h					;y=
0026B4 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0026B9 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0026BD BF                  B  1064    				db '?'+80h					;y=
0026BE 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0026C2 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0026C6 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0026CE 80 
0026CF 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026D6 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026D9 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026DE 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026E4 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026EA 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026F0 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
0026F6 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026F9 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026FC 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026FF 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002702 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002706 4C444926 80         B  1083    				db 'LDI&',80h					00270B 4C444426 80         B  1084    				db 'LDD&',80h					002710 4C444952 2680       B  1085    				db 'LDIR&',80h					002716 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
00271C BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
002720 43504926 80         B  1089    				db 'CPI&',80h					002725 43504426 80         B  1090    				db 'CPD&',80h					00272A 43504952 2680       B  1091    				db 'CPIR&',80h					002730 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002736 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
00273C 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002742 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002749 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
002750 494E4926 80         B  1098    				db 'INI&',80h		; y4
002755 494E4426 80         B  1099    				db 'IND&',80h		; y5
00275A 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
002760 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002766 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00276C 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002772 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002779 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
002780 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002786 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00278C 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002792 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002798 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
00279E 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
0027A4 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0027AB 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0027B2 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0027B9 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0027C0 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0027C7 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0027CE 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027D5 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0027DC 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027E3 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027EA 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027F0 2C25 02 202480 
0027F6 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027FD 2C2480 
002800 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002806 2C524553 26203E 02 
00280E 2C2480 
002811 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002817 2C534554 26203E 02 
00281F 2C2480 
                           B  1137    
002822 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002827 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		00282E 2C2480 
002831 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002838 2C2480 
00283B 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002842 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002845 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002848 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002850 2480C1 
                           B  1151    
002853 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00285B 2480C1 
                           B  1153    
00285E 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002865 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
00286D 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002875 50C5D0CD 
                           B  1159    	
002879 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002881 44432620 41AC5355 
002889 4226A053 42432041 
002891 26AC 
002893 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
00289B 26A04F52 26A04350 
0028A3 26A0 
                           B  1162    			
0028A5 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0028AD 2680524C 26805252 
0028B5 2680 
0028B7 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0028BF 2680534C 4C268053 
0028C7 524C2680 
                           B  1165    	
0028CB 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0028D3 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0028DB 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028E3 30B0                B  1172    table_rst	db '0','0'+80h
0028E5 30B8                B  1173    			db '0','8'+80h
0028E7 31B0                B  1174    			db '1','0'+80h
0028E9 31B8                B  1175    			db '1','8'+80h
0028EB 32B0                B  1176    			db '2','0'+80h
0028ED 32B8                B  1177    			db '2','8'+80h	
0028EF 33B0                B  1178    			db '3','0'+80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0028F1 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028F3 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028F9 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028FF C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002906 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
00290D 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
002915 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
00291B                     B  1198    adl_prefix_list
                           B  1199    
00291B 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
002923 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
00292B 000000              B  1204    d_work_address	dw24 0
                           B  1205    
00292E 2D2D00              B  1206    output_byte_txt	db "--",0
002931 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
002933 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002936                     B     6    os_cmd_del
                           B     7    	
002936 CD D2 16 00         B     8    				call os_check_volume_format	
00293A C0                  B     9    				ret nz
                           B    10    			
00293B CD 43 29 00         B    11    				call filename_or_bust
                           B    12    				
00293F C3 3A 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B    16    ;----------------------------------------------
                           B    17    			
002943                     B    18    filename_or_bust
                           B    19    			
002943 7E                  B    20    				ld a,(hl)					;is
002944 B7                  B    21    				or a
002945 C0                  B    22    				ret nz
002946 E1                  B    23    				pop hl						;ot
002947 C3 3D 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
00294B                     B     5    os_cmd_dir
                           B     6    
00294B CD D2 16 00         B     7    				call os_check_volume_format	
00294F C0                  B     8    				ret nz
                           B     9    				
002950 CD 2A 2A 00         B    10    				call div_line
002954 CD 29 53 00         B    11    				call fs_get_current_dir_name	002958 D8                  B    12    				ret c
002959 C0                  B    13    				ret nz
00295A CD 5A 0F 00         B    14    				call os_print_string
00295E CD AA 1A 00         B    15    				call fs_get_dir_cluster			002962 7A                  B    16    				ld a,d
002963 B3                  B    17    				or e
002964 20 08               B    18    				jr nz,dcmdnr
002966 CD 14 50 00         B    19    				call fs_get_volume_label
00296A CD 5A 0F 00         B    20    				call os_print_string
00296E CD 02 14 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002972 CD 2A 2A 00         B    23    nrootdir		call div_line
002976 CD 19 4F 00         B    24    				call fs_goto_first_dir_entry
00297A D8                  B    25    				ret c
00297B 20 6F               B    26    				jr nz,os_dlr
00297D AF                  B    27    				xor a
00297E 32 3B 61 00         B    28    				ld (os_linecount),a
                           B    29    				
002982 CD 30 4F 00         B    30    os_dfllp		call fs_get_dir_entry			002986 D8                  B    31    				ret c
002987 20 63               B    32    				jr nz,os_dlr					002989 C5                  B    33    				push bc
00298A CD 5A 0F 00         B    34    				call os_print_string			00298E CD 2D 14 00         B    35    				call os_get_cursor_position		002992 060E                B    36    				ld b,14
002994 CD 0D 14 00         B    37    				call os_set_cursor_position	
002998 C1                  B    38    				pop bc
002999 CB40                B    39    				bit 0,b							00299B 28 06               B    40    				jr z,os_deif		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
00299D 21 37 2A 00         B    41    				ld hl,dir_txt					0029A1 18 32               B    42    				jr os_dpl
                           B    43    				
0029A3 21 2D 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			0029A7 CD 5A 0F 00         B    45    				call os_print_string
0029AB ED53 86 68 00       B    46    				ld (scratch_pad),de
0029B0 79                  B    47    				ld a,c
0029B1 32 89 68 00         B    48    				ld (scratch_pad+3),a
0029B5 21 A6 61 00         B    49    				ld hl,output_line
0029B9 E5                  B    50    				push hl
0029BA ED5B 88 68 00       B    51    				ld de,(scratch_pad+2)
0029BF CD CA 10 00         B    52    				call hexword_to_ascii
0029C3 ED5B 86 68 00       B    53    				ld de,(scratch_pad)
0029C8 CD CA 10 00         B    54    				call hexword_to_ascii
0029CC 3600                B    55    				ld (hl),0
0029CE E1                  B    56    				pop hl
0029CF 0607                B    57    				ld b,7							0029D1 CD 82 10 00         B    58    				call os_skip_leading_ascii_zero
0029D5 CD 5A 0F 00         B    59    os_dpl			call os_print_string
0029D9 CD 02 14 00         B    60    				call os_new_line
                           B    61    				
0029DD CD BD 4F 00         B    62    				call fs_goto_next_dir_entry
0029E1 20 09               B    63    				jr nz,os_dlr					0029E3 CD 00 12 00         B    64    				call os_count_lines
0029E7 3E79                B    65    				ld a,'y'
0029E9 B8                  B    66    				cp b
0029EA 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029EC CD 2A 2A 00         B    69    os_dlr			call div_line					0029F0 CD 4C 49 00         B    70    				call fs_calc_free_space
0029F4 D8                  B    71    				ret c	
0029F5 CD 03 2A 00         B    72    				call show_hlde_decimal
0029F9 21 3D 2A 00         B    73    				ld hl,kb_spare_txt
0029FD CD 5A 0F 00         B    74    				call os_print_string
002A01 AF                  B    75    				xor a
002A02 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
002A03                     B    80    show_hlde_decimal
                           B    81    
002A03 CD 95 12 00         B    82    				call os_hex_to_decimal			002A07 11070000            B    83    				ld de,7
002A0B 19                  B    84    				add hl,de						002A0C 43                  B    85    				ld b,e
002A0D 11 A6 61 00         B    86    				ld de,output_line
002A11 D5                  B    87    				push de
002A12 7E                  B    88    dec2strlp		ld a,(hl)						002A13 B7                  B    89    				or a
002A14 20 03               B    90    				jr nz,foundlnz
002A16 2B                  B    91    				dec hl
002A17 10 F9               B    92    				djnz dec2strlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A19 04                  B    93    foundlnz		inc b
002A1A 7E                  B    94    ndecchar		ld a,(hl)						002A1B C630                B    95    				add a,030h
002A1D 12                  B    96    				ld (de),a
002A1E 13                  B    97    				inc de
002A1F 2B                  B    98    				dec hl
002A20 10 F8               B    99    				djnz ndecchar
002A22 AF                  B   100    				xor a
002A23 12                  B   101    				ld (de),a
002A24 E1                  B   102    				pop hl							002A25 CD 5A 0F 00         B   103    				call os_print_string
002A29 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
002A2A 0E2D                B   108    div_line		ld c,'-'
002A2C 0613                B   109    				ld b,19
002A2E CD 92 1A 00         B   110    				call os_print_multiple_chars
002A32 CD 02 14 00         B   111    				call os_new_line
002A36 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
002A37 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
002A3D 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
002A45 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A47                     B     5    os_cmd_f			
                           B     6    
002A47 CD 98 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A4B CD C1 1C 00         B     9    				call hexword_or_bust			002A4F CA 5D 16 00         B    10    				jp z,os_no_args_error			002A53 7B                  B    11    				ld a,e
002A54 32 52 61 00         B    12    				ld (fillbyte),a
                           B    13    					
002A58 CD 86 1C 00         B    14    				call test_mem_range
002A5C DA 59 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A60 3A 52 61 00         B    17    				ld a,(fillbyte)
002A64 77                  B    18    f_floop			ld (hl),a
002A65 EDA1                B    19    				cpi								002A67 EA 64 2A 00         B    20    				jp pe,f_floop
                           B    21    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002A6B 3E20                B    22    				ld a,020h						002A6D B7                  B    23    				or a
002A6E C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A6F                     B     9    os_cmd_format
                           B    10    
002A6F 7E                  B    11    				ld a,(hl)						002A70 B7                  B    12    				or a
002A71 20 04               B    13    				jr nz,fgotargs					002A73 3E1F                B    14    				ld a,01fh						002A75 B7                  B    15    				or a
002A76 C9                  B    16    				ret
                           B    17    			
002A77                     B    18    fgotargs	
002A77 11 8B 54 00         B    19    				ld de,fs_sought_filename
002A7B CD 72 53 00         B    20    				call fs_clear_filename			002A7F E5                  B    21    				push hl							002A80 CD E3 0F 00         B    22    				call os_next_arg
002A84 20 04               B    23    				jr nz,fgotlab
002A86 21 B7 2B 00         B    24    				ld hl,default_label
002A8A 060B                B    25    fgotlab			ld b,11
002A8C CD 48 12 00         B    26    				call os_copy_ascii_run
002A90 E1                  B    27    				pop hl
                           B    28    				
002A91 3A 57 5F 00         B    29    				ld a,(device_count)				002A95 B7                  B    30    				or a
002A96 28 25               B    31    				jr z,fno_dev
002A98 47                  B    32    				ld b,a
002A99 0E00                B    33    				ld c,0							002A9B DD21 07 60 00       B    34    				ld ix,host_device_hardware_info
002AA0 DD7E00              B    35    fdev_lp			ld a,(ix)						002AA3 CD 7C 1A 00         B    36    				call locate_driver_base			002AA7 D5                  B    37    				push de
002AA8 FDE1                B    38    				pop iy
002AAA ED130C              B    39    				lea de,iy+0ch					002AAD C5                  B    40    				push bc
002AAE 0607                B    41    				ld b,7
002AB0 CD 29 12 00         B    42    				call os_compare_strings
002AB4 C1                  B    43    				pop bc
002AB5 28 0A               B    44    				jr z,format_dev
002AB7 ED3220              B    45    				lea ix,ix+20h					002ABA 0C                  B    46    				inc c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002ABB 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002ABD 3ED0                B    49    fno_dev			ld a,0d0h						002ABF B7                  B    50    				or a
002AC0 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
002AC1 C5                  B    58    format_dev		push bc
002AC2 CD 02 14 00         B    59    				call os_new_line
002AC6 21 88 2B 00         B    60    				ld hl,form_dev_warn1
002ACA CD 39 14 00         B    61    				call os_show_packed_text
002ACE C1                  B    62    				pop bc
                           B    63    				
002ACF 79                  B    64    				ld a,c							002AD0 C630                B    65    				add a,030h
002AD2 32 63 5F 00         B    66    				ld (dev_txt+3),a
002AD6 21 60 5F 00         B    67    				ld hl,dev_txt	
002ADA CD 5A 0F 00         B    68    				call os_print_string			                           B    69    				
002ADE 79                  B    70    				ld a,c
002ADF CD F0 1A 00         B    71    				call dev_to_driver_lookup		002AE3 E5                  B    72    				push hl
002AE4 32 56 5F 00         B    73    				ld (current_driver),a
002AE8 CD 63 1A 00         B    74    				call show_dev_driver_name		002AEC DDE1                B    75    				pop ix
002AEE DD1701              B    76    				ld de,(ix+1)
002AF1 FD21 4E 61 00       B    77    				ld iy,xrr_temp
002AF6 FD1F00              B    78    				ld (iy),de						002AF9 FDCB023E            B    79    				srl (iy+2)
002AFD FDCB011E            B    80    				rr (iy+1)
002B01 FDCB001E            B    81    				rr (iy+0)						002B05 FD1700              B    82    				ld de,(iy)						002B08 CD 03 2A 00         B    83    				call show_hlde_decimal			002B0C 21 C2 2B 00         B    84    				ld hl,kb_txt
002B10 CD 5A 0F 00         B    85    				call os_print_string
002B14 ED2205              B    86    				lea hl,ix+5		
002B17 CD 5A 0F 00         B    87    				call os_print_string			002B1B 3E29                B    88    				ld a,')'
002B1D CD 9C 0F 00         B    89    				call os_print_char
                           B    90    				
002B21 CD 02 14 00         B    91    				call os_new_line
002B25 CD 02 14 00         B    92    				call os_new_line
002B29 21 8F 2B 00         B    93    				ld hl,form_dev_warn2
002B2D CD 7F 2B 00         B    94    				call show_packed_text_and_cr
002B31 CD 67 2B 00         B    95    				call confirm_yes
002B35 20 28               B    96    				jr nz,ab_form
                           B    97    				
002B37 21 99 2B 00         B    98    				ld hl,formatting_txt			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B3B CD 5A 0F 00         B    99    				call os_print_string
                           B   100    				
002B3F CD CA 46 00         B   101    				call fs_format_device_command
002B43 38 10               B   102    				jr c,form_err
002B45 B7                  B   103    				or a
002B46 20 0D               B   104    				jr nz,form_err
                           B   105    			
002B48 21 A9 2B 00         B   106    				ld hl,ok_txt					002B4C CD 5A 0F 00         B   107    				call os_print_string
                           B   108    				
002B50 CD 5C 32 00         B   109    f_end			call os_cmd_remount				002B54 C9                  B   110    				ret
                           B   111    			
002B55                     B   112    form_err
002B55 21 AE 2B 00         B   113    				ld hl,ferr_txt
002B59 CD 5A 0F 00         B   114    				call os_print_string
002B5D 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
002B5F CD 02 14 00         B   121    ab_form			call os_new_line
002B63 3E24                B   122    				ld a,024h						002B65 B7                  B   123    				or a
002B66 C9                  B   124    				ret
                           B   125    				
002B67                     B   126    confirm_yes
                           B   127    			
002B67 21 86 68 00         B   128    				ld hl,scratch_pad
002B6B 1E03                B   129    				ld e,3
002B6D E5                  B   130    				push hl
002B6E CD 2E 11 00         B   131    				call os_user_input
002B72 E1                  B   132    				pop hl
002B73 C0                  B   133    				ret nz
002B74 0603                B   134    				ld b,3
002B76 11 19 5A 00         B   135    				ld de,yes_txt+1
002B7A CD 29 12 00         B   136    				call os_compare_strings
002B7E C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B7F                     B   140    show_packed_text_and_cr
                           B   141    			
002B7F CD 39 14 00         B   142    				call os_show_packed_text
002B83 CD 02 14 00         B   143    				call os_new_line
002B87 C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B88                     B   148    form_dev_warn1
                           B   149    
002B88 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   151    
002B8F                     B   152    form_dev_warn2
                           B   153    
002B8F 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B97 9700 
                           B   155    
002B99                     B   156    formatting_txt
                           B   157    
002B99 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002BA1 74696E67 2E2E2000 
                           B   159    
002BA9 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002BAE 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002BB6 00 
                           B   163    
002BB7                     B   164    default_label	
                           B   165    
002BB7 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002BBF 534B00 
                           B   167    
002BC2 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       0000688A            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BC7 CD 98 1C 00         B     5    os_cmd_h		call get_start_and_end			002BCB 22 4B 61 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002BCF CD 86 1C 00         B     8    				call test_mem_range
002BD3 DA 59 16 00         B     9    				jp c,os_range_error				                           B    10    			
002BD7 AF                  B    11    				xor a
002BD8 32 74 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BDC 2A 4B 61 00         B    14    				ld hl,(find_hexstringascii)
002BE0 0600                B    15    				ld b,0
002BE2 7E                  B    16    h_lfascii		ld a,(hl)						002BE3 B7                  B    17    				or a
002BE4 28 28               B    18    				jr z,h_no_text					002BE6 FE22                B    19    				cp 022h
002BE8 28 03               B    20    				jr z,h_found_quote
002BEA 23                  B    21    				inc hl
002BEB 18 F5               B    22    				jr h_lfascii
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BED 23                  B    23    h_found_quote	inc hl
002BEE 22 4B 61 00         B    24    				ld (find_hexstringascii),hl
002BF2 7E                  B    25    h_fasc_len		ld a,(hl)
002BF3 B7                  B    26    				or a
002BF4 CA 5D 16 00         B    27    				jp z,os_no_args_error			002BF8 FE22                B    28    				cp 022h
002BFA 28 04               B    29    				jr z,h_startas
002BFC 23                  B    30    				inc hl
002BFD 04                  B    31    				inc b
002BFE 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C00 78                  B    34    h_startas		ld a,b
002C01 B7                  B    35    				or a
002C02 CA 5D 16 00         B    36    				jp z,os_no_args_error			002C06 3E01                B    37    				ld a,1
002C08 32 74 2C 00         B    38    				ld (h_ascii_mode),a
002C0C 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C0E 2A 4B 61 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C12 0600                B    43    				ld b,0							002C14 CD C1 1C 00         B    44    cntfbyts		call hexword_or_bust			002C18 28 04               B    45    				jr z,gthexstr
002C1A 04                  B    46    				inc b
002C1B 23                  B    47    				inc hl
002C1C 18 F6               B    48    				jr cntfbyts
002C1E 78                  B    49    gthexstr		ld a,b
002C1F B7                  B    50    				or a
002C20 CA 5D 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002C24                     B    54    h_start_search
                           B    55    	
002C24 DD2A 3F 61 00       B    56    				ld ix,(cmdop_start_address)		002C29 DDE5                B    57    fndloop1		push ix
002C2B FDE1                B    58    				pop iy
002C2D 48                  B    59    				ld c,b							002C2E 2A 4B 61 00         B    60    				ld hl,(find_hexstringascii)
002C32 3A 74 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002C36 B7                  B    62    				or a
002C37 28 08               B    63    				jr z,h_hex
002C39 FD7E00              B    64    				ld a,(iy)
002C3C BE                  B    65    				cp (hl)
002C3D 20 23               B    66    				jr nz,nofmatch
002C3F 18 0A               B    67    				jr h_matched
002C41 CD D9 10 00         B    68    h_hex			call ascii_to_hexword			002C45 FD7E00              B    69    				ld a,(iy)
002C48 BB                  B    70    				cp e
002C49 20 17               B    71    				jr nz,nofmatch
002C4B FD23                B    72    h_matched		inc iy
002C4D 23                  B    73    				inc hl
002C4E 0D                  B    74    				dec c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002C4F 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C51 DDE5                B    77    				push ix							002C53 D1                  B    78    				pop de							002C54 DDE5                B    79    				push ix
002C56 C5                  B    80    				push bc
002C57 CD 3A 13 00         B    81    				call os_show_hex_address
002C5B CD 02 14 00         B    82    				call os_new_line
002C5F C1                  B    83    				pop bc
002C60 DDE1                B    84    				pop ix
                           B    85    				
002C62 DDE5                B    86    nofmatch		push ix
002C64 DD23                B    87    				inc ix
002C66 D1                  B    88    				pop de
002C67 2A 42 61 00         B    89    				ld hl,(cmdop_end_address)
002C6B AF                  B    90    				xor a
002C6C ED52                B    91    				sbc hl,de
002C6E 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C70 3E20                B    94    				ld a,020h						002C72 B7                  B    95    				or a
002C73 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C74 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C75                     B     5    os_cmd_help		
002C75 AF                  B     6    				xor a
002C76 32 3B 61 00         B     7    				ld (os_linecount),a
                           B     8    				
002C7A 21 59 5B 00         B     9    				ld hl,packed_help1
002C7E CD 39 14 00         B    10    show_page		call os_show_packed_text
002C82 E5                  B    11    				push hl
002C83 CD 02 14 00         B    12    				call os_new_line
002C87 E1                  B    13    				pop hl
002C88 23                  B    14    				inc hl						;sk
002C89 7E                  B    15    				ld a,(hl)
002C8A FEFF                B    16    				cp 0ffh						;la
002C8C 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C8E CD 00 12 00         B    19    				call os_count_lines
002C92 78                  B    20    				ld a,b
002C93 FE79                B    21    				cp 'y'
002C95 28 E7               B    22    				jr z,show_page
                           B    23    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002C97                     B    24    last_help_page
002C97 AF                  B    25    				xor a
002C98 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C99                     B     5    os_cmd_gtr
                           B     6    
002C99 CD C1 1C 00         B     7    				call hexword_or_bust			002C9D CA 45 16 00         B     8    				jp z,os_no_start_addr
002CA1 23                  B     9    fndquot1		inc hl
002CA2 7E                  B    10    				ld a,(hl)
002CA3 B7                  B    11    				or a
002CA4 CA 5D 16 00         B    12    				jp z,os_no_args_error
002CA8 FE22                B    13    				cp 022h							002CAA 20 F5               B    14    				jr nz,fndquot1
002CAC 23                  B    15    				inc hl
002CAD E5                  B    16    				push hl
002CAE 7E                  B    17    fndquot2		ld a,(hl)
002CAF 23                  B    18    				inc hl
002CB0 B7                  B    19    				or a
002CB1 28 15               B    20    				jr z,noquot2
002CB3 FE22                B    21    				cp 022h							002CB5 20 F7               B    22    				jr nz,fndquot2
002CB7 E1                  B    23    				pop hl
                           B    24    					
002CB8 7E                  B    25    wmbalp			ld a,(hl)						002CB9 FE22                B    26    				cp 022h
002CBB 28 09               B    27    				jr z,os_gtrdn					002CBD FE7D                B    28    				cp 07dh
002CBF 28 01               B    29    				jr z,skpnasc
002CC1 12                  B    30    				ld (de),a
002CC2 13                  B    31    skpnasc			inc de
002CC3 23                  B    32    				inc hl
002CC4 18 F2               B    33    				jr wmbalp
002CC6 AF                  B    34    os_gtrdn		xor a
002CC7 C9                  B    35    				ret	
                           B    36    				
002CC8 E1                  B    37    noquot2			pop hl							002CC9 3E12                B    38    				ld a,012h
002CCB B7                  B    39    				or a
002CCC C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B     3    ;----------------------------------------------
                           B     4    
002CCD                     B     5    os_cmd_lb
                           B     6    	
002CCD CD D2 16 00         B     7    				call os_check_volume_format	
002CD1 C0                  B     8    				ret nz
                           B     9    				
002CD2 CD 43 29 00         B    10    				call filename_or_bust			002CD6 CD 65 16 00         B    11    				call os_find_file				002CDA C0                  B    12    				ret nz
002CDB ED53 89 68 00       B    13    				ld (filesize_cache),de			002CE0 2A 8E 60 00         B    14    				ld hl,(default_load_addr)
002CE4 22 86 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CE8 2A F8 61 00         B    17    				ld hl,(os_args_loc)
002CEC CD E3 0F 00         B    18    				call os_next_arg
                           B    19    
002CF0 CD C1 1C 00         B    20    				call hexword_or_bust			002CF4 28 05               B    21    				jr z,os_lbnao					002CF6 ED53 86 68 00       B    22    				ld (data_load_addr),de
                           B    23    
002CFB ED5B 86 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002D00 2A 9B 60 00         B    25    				ld hl,(sysram_os_highest)		002D04 2B                  B    26    				dec hl
002D05 AF                  B    27    				xor a
002D06 ED52                B    28    				sbc hl,de
002D08 38 04               B    29    				jr c,os_lbprok
002D0A 3E26                B    30    				ld a,026h						002D0C B7                  B    31    				or a
002D0D C9                  B    32    				ret
                           B    33    				
002D0E 2A 86 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002D12 CD 94 16 00         B    35    				call os_read_bytes_from_file
002D16 C0                  B    36    				ret nz
                           B    37    			
002D17                     B    38    report_bytes_loaded
                           B    39    
002D17 21 2D 56 00         B    40    				ld hl,os_hex_prefix_txt			002D1B CD 5A 0F 00         B    41    				call os_print_string			                           B    42    				
002D1F 11 8B 68 00         B    43    				ld de,filesize_cache+2			002D23 21 A6 61 00         B    44    				ld hl,output_line
002D27 0603                B    45    				ld b,3
002D29 CD 97 10 00         B    46    				call n_hexbytes_to_ascii
002D2D 3600                B    47    				ld (hl),0	
002D2F 0605                B    48    				ld b,5							002D31 CD 70 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002D35 21 F7 5C 00         B    51    				ld hl,bytes_loaded_msg			002D39 CD 39 14 00         B    52    				call os_show_packed_text
                           B    53    				
002D3D 21 8C 56 00         B    54    				ld hl,to_txt					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002D41 CD 5A 0F 00         B    55    				call os_print_string
                           B    56    
002D45 21 2D 56 00         B    57    				ld hl,os_hex_prefix_txt			002D49 CD 5A 0F 00         B    58    				call os_print_string	
                           B    59    
002D4D ED5B 86 68 00       B    60    				ld de,(data_load_addr)			002D52 CD 3A 13 00         B    61    				call os_show_hex_address
                           B    62    
002D56 CD 02 14 00         B    63    				call os_new_line
002D5A AF                  B    64    				xor a
002D5B C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006886            B    69    data_load_addr	equ scratch_pad
       00006889            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D5C CD C1 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D60 28 05               B     8    				jr z,m_no_hex					002D62 ED53 3C 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D67 0610                B    11    m_no_hex		ld b,16							002D69 C5                  B    12    smbllp			push bc							                           B    13    				
002D6A 21 A3 2D 00         B    14    				ld hl,colon_cmd_prefix			002D6E CD 5A 0F 00         B    15    				call os_print_string
002D72 ED5B 3C 61 00       B    16    				ld de,(mem_mon_addr)
002D77 CD 3A 13 00         B    17    				call os_show_hex_address
                           B    18    
002D7B 21 A6 61 00         B    19    				ld hl,output_line
002D7F 0610                B    20    				ld b,bytes_per_line				002D81 3620                B    21    mmbllp			ld (hl),' '
002D83 23                  B    22    				inc hl
002D84 1A                  B    23    				ld a,(de)	
002D85 CD A5 10 00         B    24    				call hexbyte_to_ascii
002D89 13                  B    25    				inc de
002D8A 10 F5               B    26    				djnz mmbllp
                           B    27    
002D8C ED53 3C 61 00       B    28    				ld (mem_mon_addr),de
002D91 360B                B    29    				ld (hl),11
002D93 23                  B    30    				inc hl
002D94 3600                B    31    				ld (hl),0
002D96 21 A6 61 00         B    32    				ld hl,output_line
002D9A CD 5A 0F 00         B    33    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D9E C1                  B    34    				pop bc
002D9F 10 C8               B    35    				djnz smbllp
                           B    36    				
002DA1 AF                  B    37    				xor a
002DA2 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DA3 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DA6                     B     5    os_cmd_md
                           B     6    	
002DA6 CD D2 16 00         B     7    				call os_check_volume_format	
002DAA C0                  B     8    				ret nz
                           B     9    			
002DAB CD 43 29 00         B    10    				call filename_or_bust
                           B    11    				
002DAF C3 12 17 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002DB3                     B     5    os_cmd_r	
002DB3 DD21 A7 60 00       B     6    				ld ix,store_a1					002DB8 21 5D 2E 00         B     7    				ld hl,register_txt
002DBC CD 5A 0F 00         B     8    rcmdloop2		call os_print_string
002DC0 7E                  B     9    rcmdloop		ld a,(hl)
002DC1 FE01                B    10    				cp 1
002DC3 28 0B               B    11    				jr z,showbyte
002DC5 FE02                B    12    				cp 2
002DC7 28 15               B    13    				jr z,showword16
002DC9 FE03                B    14    				cp 3
002DCB 28 2E               B    15    				jr z,showaddr
002DCD 23                  B    16    				inc hl
002DCE 18 F0               B    17    				jr rcmdloop
                           B    18    				
002DD0 DD7E00              B    19    showbyte		ld a,(ix)
002DD3 DD23                B    20    				inc ix
002DD5 DDE5                B    21    				push ix
002DD7 E5                  B    22    				push hl
002DD8 CD 4E 13 00         B    23    				call os_show_hex_byte
002DDC 18 2A               B    24    				jr showreg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B    25    
002DDE DD7E01              B    26    showword16		ld a,(ix+1)
002DE1 DDE5                B    27    				push ix
002DE3 E5                  B    28    				push hl
002DE4 CD 4E 13 00         B    29    				call os_show_hex_byte
002DE8 E1                  B    30    				pop hl
002DE9 DDE1                B    31    				pop ix
002DEB DD7E00              B    32    				ld a,(ix)
002DEE DD23                B    33    				inc ix
002DF0 DD23                B    34    				inc ix
002DF2 DDE5                B    35    				push ix
002DF4 E5                  B    36    				push hl
002DF5 CD 4E 13 00         B    37    				call os_show_hex_byte
002DF9 18 0D               B    38    				jr showreg
                           B    39    
002DFB DD1700              B    40    showaddr		ld de,(ix)
002DFE ED3203              B    41    				lea ix,ix+3
002E01 DDE5                B    42    				push ix
002E03 E5                  B    43    				push hl
002E04 CD 3A 13 00         B    44    				call os_show_hex_address
002E08 E1                  B    45    showreg			pop hl
002E09 DDE1                B    46    				pop ix
002E0B 23                  B    47    				inc hl
002E0C 7E                  B    48    				ld a,(hl)
002E0D B7                  B    49    				or a
002E0E 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E10 CD 02 14 00         B    52    				call os_new_line				002E14 21 C1 2E 00         B    53    				ld hl,flag_txt
002E18 CD 22 13 00         B    54    				call os_copy_to_output_line
002E1C 21 AA 61 00         B    55    				ld hl,output_line+4
002E20 01050000            B    56    				ld bc,5
002E24 3A CA 60 00         B    57    				ld a,(store_f)
002E28 CB77                B    58    				bit 6,a							002E2A 28 02               B    59    				jr z,zfzero
002E2C 3631                B    60    				ld (hl),'1'
002E2E 09                  B    61    zfzero			add hl,bc
002E2F CB47                B    62    				bit 0,a							002E31 28 02               B    63    				jr z,cfzero
002E33 3631                B    64    				ld (hl),'1'
002E35 09                  B    65    cfzero			add hl,bc
002E36 CB7F                B    66    				bit 7,a							002E38 28 02               B    67    				jr z,sfzero
002E3A 364D                B    68    				ld (hl),'M'
002E3C 09                  B    69    sfzero			add hl,bc
002E3D CB57                B    70    				bit 2,a							002E3F 28 02               B    71    				jr z,pfzero
002E41 364F                B    72    				ld (hl),'O'
002E43 09                  B    73    pfzero			add hl,bc
002E44 23                  B    74    				inc hl
002E45 CB67                B    75    				bit 4,a							002E47 28 02               B    76    				jr z,iffzero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E49 3631                B    77    				ld (hl),'1'
002E4B                     B    78    iffzero			
002E4B 01060000            B    79    				ld bc,6
002E4F 09                  B    80    				add hl,bc
002E50 3A CB 60 00         B    81    				ld a,(store_adl)
002E54 C630                B    82    				add a,30h
002E56 77                  B    83    				ld (hl),a
002E57 CD 65 13 00         B    84    				call os_print_output_line
002E5B AF                  B    85    				xor a
002E5C C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E5D 20413D00 01         B    91    register_txt		db ' A=',0,1
002E62 20204243 3D0003     B    92    					db '  BC=',0,3
002E69 20204445 3D0003     B    93    					db '  DE=',0,3
002E70 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E77 0B                  B    96    					db 11
                           B    97    
002E78 27413D00 01         B    98    					db 027h,'A=',0,1
002E7D 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E84 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E8B 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E92 0B                  B   103    					db 11
                           B   104    
002E93 2049583D 0003       B   105    					db ' IX=',0,3
002E99 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002E9F 0B                  B   108    					db 11
                           B   109    					
002EA0 2050433D 0003       B   110    					db ' PC=',0,3
002EA6 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EAD 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002EB4 0B                  B   114    					db 11
                           B   115    					
002EB5 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002EBD 010000 
                           B   117    					
002EC0 0B                  B   118    					db 11
                           B   119    
002EC1 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002EC9 3D302053 463D5020 
002ED1 50563D45 20494646 
002ED9 3D302041 444C3D30 
002EE1 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rd.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EE4                     B     5    os_cmd_rd
                           B     6    
002EE4 CD D2 16 00         B     7    				call os_check_volume_format	
002EE8 C0                  B     8    				ret nz
                           B     9    				
002EE9 CD 43 29 00         B    10    				call filename_or_bust
                           B    11    			
002EED C3 7C 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EF1                     B     5    os_cmd_rn
                           B     6    	
002EF1 CD D2 16 00         B     7    				call os_check_volume_format	
002EF5 C0                  B     8    				ret nz
                           B     9    			
002EF6 CD 43 29 00         B    10    				call filename_or_bust
002EFA E5                  B    11    				push hl
002EFB D1                  B    12    				pop de
002EFC CD E3 0F 00         B    13    				call os_next_arg
002F00 7E                  B    14    				ld a,(hl)						002F01 B7                  B    15    				or a
002F02 20 04               B    16    				jr nz,rn_grfn
002F04 3E1F                B    17    				ld a,01fh						002F06 B7                  B    18    				or a
002F07 C9                  B    19    				ret
                           B    20    
002F08 EB                  B    21    rn_grfn			ex de,hl
002F09 C3 66 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F0D                     B     5    os_cmd_sb
                           B     6    	
002F0D CD D2 16 00         B     7    				call os_check_volume_format		002F11 C0                  B     8    				ret nz
                           B     9    					
002F12 CD 43 29 00         B    10    				call filename_or_bust			002F16 22 8C 68 00         B    11    				ld (sb_save_name_addr),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B    12    				
002F1A 2A F8 61 00         B    13    				ld hl,(os_args_loc)
002F1E CD E3 0F 00         B    14    				call os_next_arg
002F22 CD C1 1C 00         B    15    				call hexword_or_bust			002F26 CA 45 16 00         B    16    				jp z,os_no_start_addr			002F2A ED53 86 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002F2F CD C1 1C 00         B    19    				call hexword_or_bust			002F33 CA 49 16 00         B    20    				jp z,os_no_filesize
002F37 ED53 89 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
002F3C 2A 8C 68 00         B    23    				ld hl,(sb_save_name_addr)		002F40 CD A4 16 00         B    24    				call os_create_file
002F44 28 18               B    25    				jr z,os_sfapp
002F46 FEC9                B    26    				cp 0c9h							002F48 C0                  B    27    				ret nz			
002F49 21 20 5B 00         B    28    				ld hl,save_append_msg			002F4D CD 39 14 00         B    29    				call os_show_packed_text
002F51 CD E7 43 00         B    30    				call os_wait_key_press
002F55 3E79                B    31    				ld a,'y'
002F57 B8                  B    32    				cp b
002F58 28 04               B    33    				jr z,os_sfapp
002F5A 3E2C                B    34    				ld a,2ch						002F5C B7                  B    35    				or a
002F5D C9                  B    36    				ret
                           B    37    			
002F5E 2A 8C 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F62 ED5B 86 68 00       B    39    				ld de,(sb_save_addr)			002F67 ED4B 89 68 00       B    40    				ld bc,(sb_save_length)			002F6C CD BA 16 00         B    41    				call os_write_bytes_to_file
002F70 C0                  B    42    				ret nz	
                           B    43    				
002F71 3E20                B    44    				ld a,020h						002F73 B7                  B    45    				or a
002F74 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006886            B    51    sb_save_addr		equ scratch_pad
       00006889            B    52    sb_save_length		equ scratch_pad+3
       0000688C            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006986            B     6    buffer_addr				 equ os_max_addr		       00006886            B     7    rx_buffer_ptr			 equ scratch_pad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
       00006889            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F75 7E                  B    11    os_cmd_rx		ld a,(hl)						002F76 B7                  B    12    				or a
002F77 CA 3D 16 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F7B 3E3E                B    15    				ld a,'>'						002F7D BE                  B    16    				cp (hl)
002F7E C2 41 30 00         B    17    				jp nz,rx_nrs
002F82 23                  B    18    				inc hl
002F83 3E20                B    19    				ld a,' '
002F85 BE                  B    20    				cp (hl)
002F86 2B                  B    21    				dec hl
002F87 C2 41 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F8B CD D2 16 00         B    24    				call os_check_volume_format		002F8F C0                  B    25    				ret nz		
                           B    26    				
002F90 112A0000            B    27    				ld de,02ah						002F94 ED53 12 5F 00       B    28    				ld (serial_filename),de			002F99 CD 45 31 00         B    29    				call rx_get_header
002F9D C0                  B    30    				ret nz
002F9E CD BA 45 00         B    31    				call s_holdack					                           B    32    				
002FA2 21 26 5F 00         B    33    				ld hl,serial_fileheader			002FA6 CD A4 16 00         B    34    				call os_create_file
002FAA C2 20 30 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002FAE 21 40 5B 00         B    37    				ld hl,ser_recsave_msg
002FB2 CD 39 14 00         B    38    				call os_show_packed_text
                           B    39    				
002FB6 2A 36 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002FBA 22 89 68 00         B    41    				ld (serial_file_length_cache),h
002FBE 21 86 69 00         B    42    				ld hl,buffer_addr
002FC2 22 86 68 00         B    43    				ld (rx_buffer_ptr),hl
002FC6 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002FC8 CD A2 45 00         B    46    rx_lnb			call s_goodack
002FCC CD 4C 45 00         B    47    				call s_getblock
002FD0 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002FD2 F5                  B    50    				push af							002FD3 CD B3 45 00         B    51    				call s_badack					002FD7 21 26 5F 00         B    52    				ld hl,serial_fileheader			002FDB CD 3A 17 00         B    53    				call os_erase_file
002FDF F1                  B    54    				pop af
002FE0 C9                  B    55    				ret
                           B    56    
002FE1 CD BA 45 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FE5 21 86 66 00         B    59    				ld hl,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FE9 ED5B 86 68 00       B    60    				ld de,(rx_buffer_ptr)
002FEE 01000100            B    61    				ld bc,256
002FF2 EDB0                B    62    				ldir
002FF4 ED53 86 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002FF9 2A 36 5F 00         B    65    				ld hl,(serial_fileheader+16)
002FFD 11000100            B    66    				ld de,256
003001 AF                  B    67    				xor a
003002 ED52                B    68    				sbc hl,de
003004 22 36 5F 00         B    69    				ld (serial_fileheader+16),hl
003008 28 1D               B    70    				jr z,rx_lbr
00300A 38 1B               B    71    				jr c,rx_lbr
00300C 10 BA               B    72    				djnz rx_lnb
                           B    73    
00300E 01008000            B    74    				ld bc,buffer_blocks*256
003012 11 86 69 00         B    75    				ld de,buffer_addr
003016 21 26 5F 00         B    76    				ld hl,serial_fileheader
00301A CD BA 16 00         B    77    				call os_write_bytes_to_file
00301E 28 96               B    78    				jr z,rx_rnblk
003020 F5                  B    79    rxwtd_fail		push af
003021 CD B3 45 00         B    80    				call s_badack
003025 F1                  B    81    				pop af
003026 C9                  B    82    				ret
                           B    83    				
003027 CD A2 45 00         B    84    rx_lbr			call s_goodack
00302B ED4B 89 68 00       B    85    				ld bc,(serial_file_length_cache
003030 11 86 69 00         B    86    				ld de,buffer_addr
003034 21 26 5F 00         B    87    				ld hl,serial_fileheader
003038 CD BA 16 00         B    88    				call os_write_bytes_to_file
00303C C0                  B    89    				ret nz	
                           B    90    				
00303D 3E20                B    91    rxtd_done		ld a,020h						00303F B7                  B    92    				or a
003040 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
003041 3E21                B    98    rx_nrs			ld a,'!'						003043 BE                  B    99    				cp (hl)							003044 C2 EF 30 00         B   100    				jr nz,notrxe
003048 23                  B   101    				inc hl
003049 3E20                B   102    				ld a,' '
00304B BE                  B   103    				cp (hl)
00304C 2B                  B   104    				dec hl
00304D C2 EF 30 00         B   105    				jr nz,notrxe
003051 112A0000            B   106    				ld de,02ah						003055 ED53 12 5F 00       B   107    				ld (serial_filename),de			00305A CD 45 31 00         B   108    				call rx_get_header
00305E C0                  B   109    				ret nz
00305F 21 36 5B 00         B   110    				ld hl,ser_rec2_msg
003063 CD 39 14 00         B   111    				call os_show_packed_text
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003067 CD A2 45 00         B   112    				call s_goodack
00306B 3E01                B   113    				ld a,1							00306D 32 25 5F 00         B   114    				ld (serial_timeout),a
003071 CD 4C 45 00         B   115    				call s_getblock					003075 28 07               B   116    				jr z,rxe_fblok
003077 F5                  B   117    rxe_badblock	push af							003078 CD B3 45 00         B   118    				call s_badack					00307C F1                  B   119    				pop af
00307D C9                  B   120    				ret
                           B   121    	
00307E 2A 88 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003082 1150524F            B   123    				ld de,04f5250h					003086 AF                  B   124    				xor a
003087 28 04               B   125    				jr z,rxe_ok
003089 3E1A                B   126    				ld a,1ah						00308B B7                  B   127    				or a
00308C C9                  B   128    				ret
00308D 2A 8B 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003091 22 09 5F 00         B   130    				ld (serial_ez80_address),hl
003095 01000100            B   131    				ld bc,256						003099 DD21 26 5F 00       B   132    				ld ix,serial_fileheader
00309E AF                  B   133    				xor a
00309F DDB612              B   134    				or (ix+18)						0030A2 20 0A               B   135    				jr nz,mtones
0030A4 DDB611              B   136    				or a,(ix+17)					0030A7 20 05               B   137    				jr nz,mtones
0030A9 0600                B   138    				ld b,0
0030AB DD4E10              B   139    				ld c,(ix+16)					0030AE 21 86 66 00         B   140    mtones			ld hl,sector_buffer				0030B2 ED5B 09 5F 00       B   141    				ld de,(serial_ez80_address)		0030B7 EDB0                B   142    				ldir
                           B   143    				
0030B9 D5                  B   144    				push de
0030BA CD A2 45 00         B   145    				call s_goodack		
0030BE DDE1                B   146    				pop ix							0030C0 2A 36 5F 00         B   147    				ld hl,(serial_fileheader+16)	0030C4 11000100            B   148    				ld de,256
0030C8 AF                  B   149    				xor a
0030C9 ED52                B   150    				sbc hl,de						0030CB 28 18               B   151    				jr z,rxe_done
0030CD 38 16               B   152    				jr c,rxe_done
0030CF EB                  B   153    				ex de,hl
0030D0 ED53 36 5F 00       B   154    				ld (serial_fileheader+16),de	0030D5 DD2A 09 5F 00       B   155    				ld ix,(serial_ez80_address)
0030DA 01000100            B   156    				ld bc,256
0030DE DD09                B   157    				add ix,bc
0030E0 CD 0A 45 00         B   158    				call s_gbloop					0030E4 C0                  B   159    				ret nz
0030E5 E1                  B   160    rxe_done		pop hl							0030E6 CD 59 3D 00         B   161    				call enable_button_nmi			0030EA 2A 09 5F 00         B   162    				ld hl,(serial_ez80_address)
0030EE E9                  B   163    				jp (hl)							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   164    				
                           B   165    				
                           B   166    
0030EF CD 8C 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
0030F3 0610                B   169    				ld b,16							0030F5 11 12 5F 00         B   170    				ld de,serial_filename
0030F9 CD 48 12 00         B   171    				call os_copy_ascii_run			0030FD 79                  B   172    				ld a,c
0030FE 32 24 5F 00         B   173    				ld (serial_fn_length),a
003102 CD EF 0F 00         B   174    				call os_scan_for_space
                           B   175    				
003106 CD C1 1C 00         B   176    				call hexword_or_bust			00310A CA 45 16 00         B   177    				jp z,os_no_start_addr			00310E ED53 86 68 00       B   178    				ld (data_load_addr),de			003113 2A 9B 60 00         B   179    				ld hl,(sysram_os_highest)		003117 2B                  B   180    				dec hl
003118 AF                  B   181    				xor a
003119 ED52                B   182    				sbc hl,de
00311B 38 04               B   183    				jr c,os_prok
00311D 3E26                B   184    				ld a,026h						00311F B7                  B   185    				or a
003120 C9                  B   186    				ret
                           B   187    
003121 CD 45 31 00         B   188    os_prok			call rx_get_header
003125 C0                  B   189    				ret nz
                           B   190    
003126 21 36 5B 00         B   191    				ld hl,ser_rec2_msg
00312A CD 39 14 00         B   192    				call os_show_packed_text
                           B   193    	
00312E 2A 86 68 00         B   194    				ld hl,(data_load_addr)			003132 CD F8 44 00         B   195    				call serial_receive_file
003136 C0                  B   196    				ret nz							                           B   197    
003137 ED5B 36 5F 00       B   198    				ld de,(serial_fileheader+16)	00313C ED53 89 68 00       B   199    				ld (filesize_cache),de
003141 C3 17 2D 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
003145                     B   204    rx_get_header
003145 21 32 5B 00         B   205    				ld hl,ser_rec_msg
003149 CD 39 14 00         B   206    				call os_show_packed_text
                           B   207    				
00314D 3E00                B   208    				ld a,0
00314F 32 47 5F 00         B   209    				ld (anim_wait_count),a			003153 3A 47 5F 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
003157 3C                  B   211    				inc a
003158 47                  B   212    				ld b,a
003159 FE06                B   213    				cp 6
00315B 20 07               B   214    				jr nz,notsix
00315D 0E20                B   215    				ld c,' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00315F 0605                B   216    				ld b,5
003161 AF                  B   217    				xor a
003162 18 02               B   218    				jr mcharset
003164 0E2E                B   219    notsix			ld c,'.'
003166 32 47 5F 00         B   220    mcharset		ld (anim_wait_count),a
00316A CD 92 1A 00         B   221    				call os_print_multiple_chars
00316E CD A3 0F 00         B   222    				call home_cursor
                           B   223    				
003172 21 12 5F 00         B   224    				ld hl,serial_filename			003176 3E01                B   225    				ld a,1							003178 CD 5D 44 00         B   226    				call serial_get_header
00317C C8                  B   227    				ret z
00317D FE83                B   228    				cp 083h							00317F C0                  B   229    				ret nz
003180 CD 42 44 00         B   230    				call os_get_key_press
003184 FE76                B   231    				cp 076h
003186 20 CB               B   232    				jr nz,get_hdr_loop
003188 3E80                B   233    				ld a,080h						00318A B7                  B   234    notsto			or a
00318B C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00318C                     B   240    clear_serial_filename
                           B   241    
00318C E5                  B   242    				push hl							00318D 21 12 5F 00         B   243    				ld hl,serial_filename
003191 01100000            B   244    				ld bc,16
003195 AF                  B   245    				xor a
003196 CD C6 15 00         B   246    				call os_bchl_memfill
00319A E1                  B   247    				pop hl
00319B C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00319C 7E                  B     5    os_cmd_tx		ld a,(hl)						00319D B7                  B     6    				or a
00319E CA 3D 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0031A2 E5                  B     9    				push hl							0031A3 21 12 5F 00         B    10    				ld hl,serial_filename
0031A7 01100000            B    11    				ld bc,16
0031AB AF                  B    12    				xor a
0031AC CD C6 15 00         B    13    				call os_bchl_memfill
0031B0 E1                  B    14    				pop hl
                           B    15    			
0031B1 0610                B    16    				ld b,16							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
0031B3 11 12 5F 00         B    17    				ld de,serial_filename
0031B7 CD 48 12 00         B    18    				call os_copy_ascii_run			0031BB 79                  B    19    				ld a,c
0031BC 32 24 5F 00         B    20    				ld (serial_fn_length),a
0031C0 CD EF 0F 00         B    21    				call os_scan_for_space
                           B    22    							
0031C4 CD C1 1C 00         B    23    				call hexword_or_bust			0031C8 CA 45 16 00         B    24    				jp z,os_no_start_addr			0031CC ED53 09 5F 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
0031D1 CD C1 1C 00         B    27    				call hexword_or_bust			0031D5 CA 49 16 00         B    28    				jp z,os_no_filesize
0031D9 ED53 0C 5F 00       B    29    				ld (serial_file_length),de
0031DE 21000000            B    30    				ld hl,0
0031E2 3E07                B    31    				ld a,07h						0031E4 B7                  B    32    				or a
0031E5 ED5A                B    33    				adc hl,de
0031E7 28 1D               B    34    				jr z,s_error
                           B    35    				
0031E9 21 3B 5B 00         B    36    				ld hl,ser_send_msg
0031ED CD 39 14 00         B    37    				call os_show_packed_text
                           B    38    			
0031F1 ED5B 0C 5F 00       B    39    				ld de,(serial_file_length)
0031F6 21 12 5F 00         B    40    				ld hl,serial_filename			0031FA DD2A 09 5F 00       B    41    				ld ix,(serial_ez80_address)
0031FF CD C1 45 00         B    42    				call serial_send_file
003203 C0                  B    43    				ret nz			
                           B    44    			
003204 3E20                B    45    				ld a,020h						003206 B7                  B    46    s_error			or a
003207 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
003208 CD C1 1C 00         B     5    os_cmd_t		call hexword_or_bust			00320C 28 05               B     6    				jr z,t_no_hex					00320E ED53 3C 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003213 0610                B     9    t_no_hex		ld b,16
003215 C5                  B    10    smaalp			push bc
                           B    11    				
003216 21 59 32 00         B    12    				ld hl,gtr_cmd_prefix			00321A CD 5A 0F 00         B    13    				call os_print_string
00321E ED5B 3C 61 00       B    14    				ld de,(mem_mon_addr)
003223 CD 3A 13 00         B    15    				call os_show_hex_address
                           B    16    
003227 21 A6 61 00         B    17    				ld hl,output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
00322B 3620                B    18    				ld (hl),' '
00322D 23                  B    19    				inc hl
00322E 3622                B    20    				ld (hl),022h
003230 0610                B    21    				ld b,16
003232 23                  B    22    mabllp			inc hl
003233 1A                  B    23    				ld a,(de)	
003234 FE20                B    24    				cp 020h
003236 38 04               B    25    				jr c,chchar
003238 FE7F                B    26    				cp 07fh
00323A 38 02               B    27    				jr c,nchchar
00323C 3E7C                B    28    chchar			ld a,07ch
00323E 77                  B    29    nchchar			ld (hl),a
00323F 13                  B    30    				inc de
003240 10 F0               B    31    				djnz mabllp
                           B    32    
003242 ED53 3C 61 00       B    33    				ld (mem_mon_addr),de
003247 23                  B    34    				inc hl
003248 3622                B    35    				ld (hl),022h
00324A 23                  B    36    				inc hl
00324B 360B                B    37    				ld (hl),11
00324D 23                  B    38    				inc hl
00324E 3600                B    39    				ld (hl),0
003250 CD 65 13 00         B    40    				call os_print_output_line
003254 C1                  B    41    				pop bc
003255 10 BE               B    42    				djnz smaalp
003257 AF                  B    43    				xor a
003258 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
003259 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00325C                     B     5    os_cmd_remount
                           B     6    
00325C 3E00                B     7    				ld a,0							00325E CD 77 18 00         B     8    				call os_mount_volumes
003262 CD 02 14 00         B     9    				call os_new_line
003266 AF                  B    10    				xor a
003267 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
                           B     4    
003268                     B     5    os_cmd_vers
                           B     6    
003268 21 2F 56 00         B     7    				ld hl,os_version_txt
00326C CD 5A 0F 00         B     8    				call os_print_string
                           B     9    			
003270 CD 91 40 00         B    10    				call hwsc_get_version
003274 D5                  B    11    				push de
003275 EB                  B    12    				ex de,hl
003276 CD 59 13 00         B    13    				call os_show_hex_word
                           B    14    				
00327A 21 52 56 00         B    15    				ld hl,fwd_slash_txt
00327E CD 5A 0F 00         B    16    				call os_print_string
                           B    17    				
003282 21 3D 56 00         B    18    				ld hl,hw_version_txt
003286 CD 5A 0F 00         B    19    				call os_print_string
00328A D1                  B    20    				pop de
00328B CD 59 13 00         B    21    				call os_show_hex_word
                           B    22    				
00328F CD 02 14 00         B    23    				call os_new_line
003293 CD 02 14 00         B    24    				call os_new_line	
003297 AF                  B    25    				xor a
003298 C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003299 21 0D 62 00         B    22    os_cmd_exec		ld hl,script_flags				00329D CB46                B    23    				bit scr_in_script,(hl)
00329F C2 30 34 00         B    24    				jp nz,script_error
0032A3 E5                  B    25    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0032A4 CD AC 32 00         B    26    				call do_script
0032A8 E1                  B    27    				pop hl
0032A9 CB86                B    28    				res scr_in_script,(hl)
0032AB C9                  B    29    				ret
                           B    30    				
0032AC CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
0032AE 2A F8 61 00         B    33    				ld hl,(os_args_loc)				0032B2 11 25 61 00         B    34    				ld de,script_fn					0032B6 060D                B    35    				ld b,13
0032B8 CD 48 12 00         B    36    				call os_copy_ascii_run
0032BC AF                  B    37    				xor a
0032BD 12                  B    38    				ld (de),a
                           B    39    				
0032BE CD AA 1A 00         B    40    				call fs_get_dir_cluster			0032C2 ED53 04 62 00       B    41    				ld (script_dir),de
                           B    42    				
0032C7 CD D2 16 00         B    43    				call os_check_volume_format		0032CB C0                  B    44    				ret nz
                           B    45    				
0032CC CD FC 33 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
0032D0 3A 6A 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			0032D4 E602                B    52    				and 2
0032D6 28 12               B    53    				jr z,no_quit_script	
0032D8 CD 42 44 00         B    54    				call os_get_key_press
0032DC FE21                B    55    				cp 021h							0032DE 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
0032E0 21 4F 5B 00         B    58    				ld hl,script_aborted_msg
0032E4 CD 39 14 00         B    59    				call os_show_packed_text
0032E8 AF                  B    60    				xor a							0032E9 C9                  B    61    				ret
                           B    62    					
                           B    63    
0032EA CD 0F 34 00         B    64    no_quit_script	call open_script				0032EE C0                  B    65    				ret nz
0032EF CD 3A 34 00         B    66    				call read_script				0032F3 C0                  B    67    				ret nz
0032F4 21 0D 62 00         B    68    				ld hl,script_flags				0032F8 CB5E                B    69    				bit scr_end,(hl)
0032FA 28 02               B    70    				jr z,scr_to_do
0032FC AF                  B    71    scr_done		xor a
0032FD C9                  B    72    				ret
                           B    73    				
0032FE 21 54 61 00         B    74    scr_to_do		ld hl,commandstring				003302 7E                  B    75    				ld a,(hl)
003303 FE5B                B    76    				cp '['
003305 28 1C               B    77    				jr z,exec_scr_next
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    78    
003307 11 97 56 00         B    79    				ld de,if_command_txt			00330B 0603                B    80    				ld b,3
00330D CD 29 12 00         B    81    				call os_compare_strings
003311 28 18               B    82    				jr z,do_exec_if
                           B    83    				
003313 11 9A 56 00         B    84    				ld de,end_command_txt			003317 0604                B    85    				ld b,4
003319 CD 29 12 00         B    86    				call os_compare_strings
00331D 28 DD               B    87    				jr z,scr_done
                           B    88    			
00331F CD 7F 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
003323 21 0D 62 00         B    91    exec_scr_next	ld hl,script_flags
003327 CBCE                B    92    				set scr_find_new_line,(hl)
003329 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
00332B 21 56 61 00         B   104    do_exec_if		ld hl,commandstring+2			00332F CD F8 0F 00         B   105    				call os_scan_for_non_space
003333 CA 30 34 00         B   106    				jr z,script_error				003337 11 0E 62 00         B   107    				ld de,if_name_txt
00333B 0610                B   108    				ld b,max_if_chars
00333D CD 48 12 00         B   109    				call os_copy_ascii_run			003341 AF                  B   110    				xor a
003342 12                  B   111    				ld (de),a
                           B   112    				
003343 CD F8 0F 00         B   113    				call os_scan_for_non_space		003347 CA 30 34 00         B   114    				jr z,script_error
00334B DD21 0D 62 00       B   115    				ld ix,script_flags
003350 DDCB0096            B   116    				res scr_if_condition,(ix)
003354 7E                  B   117    				ld a,(hl)
003355 FE3D                B   118    				cp '='
003357 28 04               B   119    				jr z,if_equals
003359 DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
00335D CD EF 0F 00         B   122    if_equals		call os_scan_for_space			003361 CD F8 0F 00         B   123    				call os_scan_for_non_space		003365 CA 30 34 00         B   124    				jr z,script_error
003369 11 20 62 00         B   125    				ld de,if_value_txt				00336D 0610                B   126    				ld b,max_if_chars
00336F CD 48 12 00         B   127    				call os_copy_ascii_run
003373 AF                  B   128    				xor a
003374 12                  B   129    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   130    				
003375 CD F8 0F 00         B   131    				call os_scan_for_non_space
003379 CA 30 34 00         B   132    				jr z,script_error
00337D 11 32 62 00         B   133    				ld de,if_label_txt				003381 0610                B   134    				ld b,max_if_chars
003383 CD 48 12 00         B   135    				call os_copy_ascii_run			003387 AF                  B   136    				xor a
003388 12                  B   137    				ld (de),a						                           B   138    								
003389 21 0E 62 00         B   139    				ld hl,if_name_txt				00338D CD 70 1B 00         B   140    				call os_get_envar				003391 C2 23 33 00         B   141    				jp nz,exec_scr_next				                           B   142    								
003395 21 20 62 00         B   143    				ld hl,if_value_txt
003399 DD21 0D 62 00       B   144    				ld ix,script_flags
00339E DDCB0056            B   145    				bit scr_if_condition,(ix)
0033A2 20 0A               B   146    				jr nz,if_cond_diff
0033A4 CD 29 12 00         B   147    				call os_compare_strings			0033A8 C2 23 33 00         B   148    				jp nz,exec_scr_next				0033AC 18 08               B   149    				jr if_cond_met
0033AE CD 29 12 00         B   150    if_cond_diff	call os_compare_strings			0033B2 CA 23 33 00         B   151    				jp z,exec_scr_next				                           B   152    
0033B6 CD FC 33 00         B   153    if_cond_met		call new_script					                           B   154    
0033BA CD 0F 34 00         B   155    find_if_label	call open_script				0033BE C0                  B   156    				ret nz
                           B   157    
0033BF CD 3A 34 00         B   158    				call read_script
0033C3 C0                  B   159    				ret nz
0033C4 21 0D 62 00         B   160    				ld hl,script_flags
0033C8 CB5E                B   161    				bit scr_end,(hl)
0033CA C2 FC 32 00         B   162    				jp nz,scr_done
                           B   163    				
0033CE 21 54 61 00         B   164    				ld hl,commandstring				0033D2 7E                  B   165    				ld a,(hl)
0033D3 FE5B                B   166    				cp '['
0033D5 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
0033D7 23                  B   169    if_find_csb		inc hl
0033D8 7E                  B   170    				ld a,(hl)
0033D9 B7                  B   171    				or a
0033DA 28 18               B   172    				jr z,not_a_label				0033DC FE5D                B   173    				cp ']'							0033DE 20 F7               B   174    				jr nz,if_find_csb
0033E0 3600                B   175    				ld (hl),0						0033E2 21 55 61 00         B   176    				ld hl,commandstring+1
0033E6 11 32 62 00         B   177    				ld de,if_label_txt				0033EA 0610                B   178    				ld b,max_if_chars
0033EC CD 29 12 00         B   179    				call os_compare_strings
0033F0 CA 23 33 00         B   180    				jp z,exec_scr_next				                           B   181    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033F4 21 0D 62 00         B   182    not_a_label		ld hl,script_flags
0033F8 CBCE                B   183    				set scr_find_new_line,(hl)		0033FA 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
0033FC E5                  B   188    new_script		push hl
0033FD 21000000            B   189    				ld hl,0
003401 22 07 62 00         B   190    				ld (script_file_offset),hl		003405 21 0D 62 00         B   191    				ld hl,script_flags
003409 CB8E                B   192    				res scr_find_new_line,(hl)		00340B CB9E                B   193    				res scr_end,(hl)
00340D E1                  B   194    				pop hl
00340E C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
00340F CD AA 1A 00         B   199    open_script		call fs_get_dir_cluster			003413 D5                  B   200    				push de
003414 ED5B 04 62 00       B   201    				ld de,(script_dir)				003419 CD B6 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
00341D 21 25 61 00         B   204    				ld hl,script_fn					003421 CD 65 16 00         B   205    				call os_find_file				003425 ED53 0A 62 00       B   206    				ld (script_length),de			00342A D1                  B   207    				pop de
00342B C0                  B   208    				ret nz
00342C 79                  B   209    				ld a,c							00342D B7                  B   210    				or a
00342E 28 04               B   211    				jr z,scr_flok
                           B   212    				
003430 3E8C                B   213    script_error	ld a,08ch
003432 B7                  B   214    				or a
003433 C9                  B   215    				ret
                           B   216    				
003434 CD B6 1A 00         B   217    scr_flok		call fs_update_dir_cluster		003438 AF                  B   218    				xor a
003439 C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
00343A 21 54 61 00         B   224    read_script		ld hl,commandstring				00343E 01500000            B   225    				ld bc,max_buffer_chars			003442 3E20                B   226    				ld a,32
003444 CD C6 15 00         B   227    				call os_bchl_memfill
                           B   228    				
003448 11500000            B   229    				ld de,max_buffer_chars			00344C CD 76 16 00         B   230    				call os_set_load_length
                           B   231    				
003450 AF                  B   232    				xor a
003451 2A 0A 62 00         B   233    				ld hl,(script_length)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003455 ED5B 07 62 00       B   234    				ld de,(script_file_offset)		00345A 37                  B   235    				scf
00345B ED52                B   236    				sbc hl,de						00345D 30 08               B   237    				jr nc,not_eoscr					00345F 21 0D 62 00         B   238    				ld hl,script_flags
003463 CBDE                B   239    				set scr_end,(hl)				003465 AF                  B   240    				xor a
003466 C9                  B   241    				ret
003467 CD 7E 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
00346B 21 54 61 00         B   244    				ld hl,commandstring				00346F CD 94 16 00         B   245    				call os_read_bytes_from_file
003473 B7                  B   246    				or a			
003474 28 03               B   247    				jr z,scr_load_ok
003476 FECC                B   248    				cp 0cch							003478 C0                  B   249    				ret nz							                           B   250    
003479 21 0D 62 00         B   251    scr_load_ok		ld hl,script_flags
00347D CB4E                B   252    				bit scr_find_new_line,(hl)		00347F 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003481 21 54 61 00         B   255    				ld hl,commandstring				003485 0650                B   256    				ld b,max_buffer_chars
003487 7E                  B   257    scr_fcr			ld a,(hl)
003488 FE20                B   258    				cp 32
00348A 38 05               B   259    				jr c,scr_gotclcr
00348C 23                  B   260    				inc hl
00348D 10 F8               B   261    				djnz scr_fcr
00348F AF                  B   262    				xor a
003490 C9                  B   263    				ret
003491 3620                B   264    scr_gotclcr		ld (hl),32						003493 23                  B   265    				inc hl
003494 10 FB               B   266    				djnz scr_gotclcr
003496 AF                  B   267    				xor a
003497 C9                  B   268    				ret
                           B   269    
003498 FD2A 07 62 00       B   270    scr_fnl			ld iy,(script_file_offset)
00349D 21 54 61 00         B   271    				ld hl,commandstring	
0034A1 7E                  B   272    scr_find_cr		ld a,(hl)						0034A2 B7                  B   273    				or a
0034A3 20 07               B   274    				jr nz,scr_neocl					0034A5 FD22 07 62 00       B   275    scr_eocl		ld (script_file_offset),iy
0034AA 18 8E               B   276    				jr read_script				
0034AC FE20                B   277    scr_neocl		cp 20h							0034AE 38 05               B   278    				jr c,scr_got_cr
0034B0 23                  B   279    				inc hl
0034B1 FD23                B   280    				inc iy
0034B3 18 EC               B   281    				jr scr_find_cr
                           B   282    				
0034B5 7E                  B   283    scr_got_cr		ld a,(hl)
0034B6 B7                  B   284    				or a							0034B7 28 EC               B   285    				jr z,scr_eocl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0034B9 FE20                B   286    				cp 20h
0034BB 30 05               B   287    				jr nc,scr_got_ch				0034BD 23                  B   288    				inc hl
0034BE FD23                B   289    				inc iy
0034C0 18 F3               B   290    				jr scr_got_cr
                           B   291    
0034C2 FD22 07 62 00       B   292    scr_got_ch		ld (script_file_offset),iy
0034C7 21 0D 62 00         B   293    				ld hl,script_flags				0034CB CB8E                B   294    				res scr_find_new_line,(hl)
0034CD C3 3A 34 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0034D1                     B     7    os_cmd_ltn
                           B     8    
0034D1 AF                  B     9    				xor a
0034D2 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034D3                     B     5    os_cmd_pen
                           B     6    	
0034D3 0612                B     7    				ld b,18							0034D5 DD21 CD 5E 00       B     8    				ld ix,current_pen
                           B     9    				
0034DA CD C1 1C 00         B    10    chpenlp			call hexword_or_bust			0034DE 28 0D               B    11    				jr z,pendone					0034E0 23                  B    12    				inc hl
0034E1 DD7300              B    13    				ld (ix),e
0034E4 DD7201              B    14    				ld (ix+1),d
0034E7 DD23                B    15    				inc ix
0034E9 DD23                B    16    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
0034EB 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034ED 21 D1 5E 00         B    19    pendone			ld hl,pen_palette				0034F1 CD 60 3E 00         B    20    				call hswc_set_ui_colours
0034F5 AF                  B    21    				xor a
0034F6 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034F7                     B     5    os_cmd_palette
                           B     6    
0034F7 0610                B     7    				ld b,16							0034F9 DD21 D1 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
0034FE 0E00                B    10    				ld c,0
003500 C5                  B    11    chcollp			push bc
003501 CD C1 1C 00         B    12    				call hexword_or_bust			003505 C1                  B    13    				pop bc
003506 28 0E               B    14    				jr z,colrdone					003508 0C                  B    15    				inc c
003509 23                  B    16    				inc hl
00350A DD7300              B    17    				ld (ix),e
00350D DD7201              B    18    				ld (ix+1),d
003510 DD23                B    19    				inc ix
003512 DD23                B    20    				inc ix
003514 10 EA               B    21    				djnz chcollp
                           B    22    			
003516 79                  B    23    colrdone		ld a,c
003517 B7                  B    24    				or a
003518 20 04               B    25    				jr nz,pal_ok
00351A 3E81                B    26    				ld a,81h						00351C B7                  B    27    				or a
00351D C9                  B    28    				ret
00351E 21 D1 5E 00         B    29    pal_ok			ld hl,pen_palette
003522 CD 60 3E 00         B    30    				call hswc_set_ui_colours	
003526 AF                  B    31    				xor a
003527 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
003528                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
003528 CD C0 3B 00         B    15    				call disable_ms_irq
                           B    16    
00352C 21 9A 60 00         B    17    				ld hl,devices_connected
003530 CB8E                B    18    				res 1,(hl)
                           B    19    		
003532 CD D6 41 00         B    20    				call init_mouse
003536 C0                  B    21    				ret nz
                           B    22    			
003537 AF                  B    23    				xor a
003538 32 73 62 00         B    24    				ld (mouse_packet_index),a
00353C 32 74 62 00         B    25    				ld (mouse_buttons),a
003540 21000000            B    26    				ld hl,0
003544 22 75 62 00         B    27    				ld (mouse_disp_x),hl
003548 22 78 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00354C 21800200            B    30    				ld hl,window_width_pixels
003550 11E00100            B    31    				ld de,window_height_pixels
003554 CD 83 14 00         B    32    				call os_set_mouse_window
                           B    33    
003558 CD BA 3B 00         B    34    				call enable_ms_irq
                           B    35    
00355C 21 9A 60 00         B    36    				ld hl,devices_connected
003560 CBCE                B    37    				set 1,(hl)
003562 AF                  B    38    				xor a
003563 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
003564                     B     5    os_cmd_vmode
                           B     6    	
003564 CD C1 1C 00         B     7    				call hexword_or_bust			003568 20 04               B     8    				jr nz,vm_data					00356A 3E81                B     9    				ld a,81h						00356C B7                  B    10    				or a
00356D C9                  B    11    				ret
                           B    12    
00356E 7B                  B    13    vm_data			ld a,e
00356F CD 9F 15 00         B    14    				call os_set_vmode
003573 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003574                     B     5    os_cmd_font
                           B     6    	
003574 CD D2 16 00         B     7    				call os_check_volume_format	
003578 C0                  B     8    				ret nz
                           B     9    				
003579 CD 43 29 00         B    10    				call filename_or_bust			00357D 22 86 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
003581 CD AA 1A 00         B    13    				call fs_get_dir_cluster			003585 ED53 89 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00358A CD 30 17 00         B    16    				call os_root_dir				00358E C0                  B    17    				ret nz
00358F 21 FD 35 00         B    18    				ld hl,fonts_fn
003593 CD 20 17 00         B    19    				call os_change_dir
003597 20 1E               B    20    				jr nz,no_font
                           B    21    				
003599 2A 86 68 00         B    22    				ld hl,(scratch_pad)
00359D CD 65 16 00         B    23    				call os_find_file				0035A1 20 14               B    24    				jr nz,no_font
                           B    25    				
0035A3 11000800            B    26    				ld de,800h
0035A7 CD 76 16 00         B    27    				call os_set_load_length			                           B    28    
0035AB 21000080            B    29    				ld hl,vram_a_addr				0035AF CD 94 16 00         B    30    				call os_read_bytes_from_file
0035B3 CD C3 35 00         B    31    				call convert_font
                           B    32    				
0035B7 F5                  B    33    no_font			push af
0035B8 ED5B 89 68 00       B    34    				ld de,(scratch_pad+3)			0035BD CD B6 1A 00         B    35    				call fs_update_dir_cluster
0035C1 F1                  B    36    				pop af
0035C2 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
0035C3 1EFF                B    42    convert_font	ld e,255						0035C5 01080000            B    43    				ld bc,8
0035C9 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
0035CD CD D8 35 00         B    45    conv_allch		call char_to_font
0035D1 AF                  B    46    				xor a
0035D2 ED42                B    47    				sbc hl,bc
0035D4 1D                  B    48    				dec e
0035D5 20 F6               B    49    				jr nz,conv_allch
0035D7 C9                  B    50    				ret
                           B    51    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
0035D8 E5                  B    57    char_to_font	push hl
0035D9 C5                  B    58    				push bc
0035DA 01400000            B    59    				ld bc,64
0035DE 43                  B    60    				ld b,e
0035DF ED4C                B    61    				mlt bc
0035E1 DD210000 80         B    62    				ld ix,vram_a_addr
0035E6 DD09                B    63    				add ix,bc
0035E8 CD F0 35 00         B    64    				call conv_char
0035EC C1                  B    65    				pop bc
0035ED E1                  B    66    				pop hl
0035EE AF                  B    67    				xor a
0035EF C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
0035F0 0608                B    72    conv_char		ld b,8
0035F2 7E                  B    73    bfontlp1		ld a,(hl)
0035F3 DD7700              B    74    				ld (ix),a
0035F6 23                  B    75    				inc hl
0035F7 ED3208              B    76    				lea ix,ix+8
0035FA 10 F6               B    77    				djnz bfontlp1
0035FC C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
0035FD 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
003603 7E                  B     8    os_cmd_set		ld a,(hl)					; i
003604 B7                  B     9    				or a
003605 28 3B               B    10    				jr z,show_envars
                           B    11    
003607 11 89 68 00         B    12    				ld de,scratch_pad+3			; p
00360B 7E                  B    13    evsalp1			ld a,(hl)
00360C 12                  B    14    				ld (de),a
00360D B7                  B    15    				or a
00360E 28 2E               B    16    				jr z,set_bad_args
003610 FE3D                B    17    				cp '='
003612 28 04               B    18    				jr z,evsadone1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
003614 23                  B    19    				inc hl
003615 13                  B    20    				inc de
003616 18 F3               B    21    				jr evsalp1
003618 AF                  B    22    evsadone1		xor a
003619 12                  B    23    				ld (de),a
00361A 13                  B    24    				inc de
00361B 23                  B    25    				inc hl
00361C ED53 86 68 00       B    26    				ld (scratch_pad),de
                           B    27    
003621 7E                  B    28    evsalp2			ld a,(hl)
003622 12                  B    29    				ld (de),a
003623 FE20                B    30    				cp ' '
003625 28 07               B    31    				jr z,evsadone2
003627 B7                  B    32    				or a
003628 28 14               B    33    				jr z,set_bad_args
00362A 23                  B    34    				inc hl
00362B 13                  B    35    				inc de
00362C 18 F3               B    36    				jr evsalp2
00362E AF                  B    37    evsadone2		xor a
00362F 12                  B    38    				ld (de),a
                           B    39    				
003630 21 89 68 00         B    40    				ld hl,scratch_pad+3
003634 ED5B 86 68 00       B    41    				ld de,(scratch_pad)
003639 CD B0 1B 00         B    42    				call os_set_envar
00363D C9                  B    43    				ret
                           B    44    
00363E 3E82                B    45    set_bad_args	ld a,82h
003640 B7                  B    46    				or a
003641 C9                  B    47    				ret
                           B    48    				
                           B    49    
003642 21 97 62 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003646 7E                  B    52    show_envlp		ld a,(hl)
003647 FEFF                B    53    				cp 0ffh
003649 28 12               B    54    				jr z,set_done
00364B E5                  B    55    				push hl
00364C CD 5A 0F 00         B    56    				call os_print_string
003650 CD 02 14 00         B    57    				call os_new_line
003654 E1                  B    58    				pop hl
                           B    59    				
003655 23                  B    60    set_fnl			inc hl
003656 7E                  B    61    				ld a,(hl)
003657 B7                  B    62    				or a
003658 20 FB               B    63    				jr nz,set_fnl
00365A 23                  B    64    				inc hl
00365B 18 E9               B    65    				jr show_envlp
                           B    66    				
00365D AF                  B    67    set_done		xor a
00365E C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dz.asm
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
00365F FD21 BC 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003664 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
003668 C3 DE 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
00366C 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003670 ED53 FF 36 00       B     6    				ld (aud_per),de
003675 3E40                B     7    				ld a,64
003677 32 01 37 00         B     8    				ld (aud_vol),a
00367B 3E11                B     9    				ld a,11h
00367D 32 02 37 00         B    10    				ld (aud_chans),a
                           B    11    				
003681 CD C1 1C 00         B    12    				call hexword_or_bust			003685 20 06               B    13    				jr nz,alocok					003687 CD A1 43 00         B    14    				call hwsc_disable_audio			00368B AF                  B    15    				xor a
00368C C9                  B    16    				ret
00368D ED53 F3 36 00       B    17    alocok			ld (aud_loc),de
003692 ED53 F9 36 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
003697 CD C1 1C 00         B    20    				call hexword_or_bust
00369B 20 04               B    21    				jr nz,gotaudlen
00369D 3E8D                B    22    missaudpar		ld a,8dh						00369F B7                  B    23    				or a
0036A0 C9                  B    24    				ret				
0036A1 ED53 F6 36 00       B    25    gotaudlen		ld (aud_len),de
0036A6 ED53 FC 36 00       B    26    				ld (aud_len_loop),de
                           B    27    				
0036AB CD C1 1C 00         B    28    				call hexword_or_bust
0036AF 28 33               B    29    				jr z,play_sound
0036B1 7B                  B    30    				ld a,e
0036B2 32 FF 36 00         B    31    				ld (aud_per),a
0036B6 7A                  B    32    				ld a,d
0036B7 32 00 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
0036BB CD C1 1C 00         B    35    				call hexword_or_bust
0036BF 28 23               B    36    				jr z,play_sound
0036C1 7B                  B    37    				ld a,e
0036C2 32 01 37 00         B    38    				ld (aud_vol),a
                           B    39    				
0036C6 CD C1 1C 00         B    40    				call hexword_or_bust
0036CA 28 18               B    41    				jr z,play_sound
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
0036CC 7B                  B    42    				ld a,e
0036CD 32 02 37 00         B    43    				ld (aud_chans),a
                           B    44    				
0036D1 CD C1 1C 00         B    45    				call hexword_or_bust
0036D5 28 0D               B    46    				jr z,play_sound
0036D7 7B                  B    47    				ld a,e
0036D8 B7                  B    48    				or a
0036D9 20 09               B    49    				jr nz,play_sound
0036DB 11010000            B    50    				ld de,1
0036DF ED53 FC 36 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036E4 21 F3 36 00         B    53    play_sound		ld hl,audio_structure
0036E8 3A 02 37 00         B    54    				ld a,(aud_chans)
0036EC 4F                  B    55    				ld c,a
0036ED CD 54 43 00         B    56    				call hwsc_play_audio
0036F1 AF                  B    57    				xor a
0036F2 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
0036F3                     B    63    audio_structure
                           B    64    
0036F3 000000              B    65    aud_loc			dw24 0			;loc
0036F6 000000              B    66    aud_len			dw24 0			;len
0036F9 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
0036FC 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
0036FF FFFF                B    70    aud_per			dw 0ffffh		;per
003701 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003702 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3134    
003703 C9                  A  3135    os_cmd_unused	ret		; <- dummy command, sho
                           A  3136    
                           A  3137    ;----------------------------------------------
                           A  3138    
003704                     A  3139    os_get_mem_high
                           A  3140    
003704 2A 9B 60 00         A  3141    		ld hl,(sysram_os_highest)
003708 ED5B 9E 60 00       A  3142    		ld de,(vram_a_os_highest)
00370D ED4B A1 60 00       A  3143    		ld bc,(vram_b_os_highest)
003712 AF                  A  3144    		xor a
003713 C9                  A  3145    		ret
                           A  3146    
                           A  3147    ;----------------------------------------------
                           A  3148    
003714                     A  3149    test_amoeba_vers
                           A  3150    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003714 CD 91 40 00         A  3151    				call hwsc_get_version			003718 21060100            A  3152    				ld hl,amoeba_version_required-1
00371C AF                  A  3153    				xor a
00371D ED52                A  3154    				sbc hl,de
00371F D8                  A  3155    				ret c
                           A  3156    				
003720 21 B3 56 00         A  3157    				ld hl,hw_warn_txt2
003724 11070100            A  3158    				ld de,amoeba_version_required
003728 CD CA 10 00         A  3159    				call hexword_to_ascii
                           A  3160    				
00372C 21004080            A  3161    				ld hl,vram_a_addr+16384			003730 222010FF            A  3162    				ld (bitmap_parameters),hl		003734 3600                A  3163    				ld (hl),0
003736 E5                  A  3164    				push hl
003737 D1                  A  3165    				pop de
003738 13                  A  3166    				inc de
003739 01002C01            A  3167    				ld bc,320*240
00373D EDB0                A  3168    				ldir
                           A  3169    					
00373F DD2138D1 80         A  3170    				ld ix,vram_a_addr+16384+(320*11
003744 FD21 9E 56 00       A  3171    				ld iy,hw_warn_txt1				003749 FD7E00              A  3172    nextwchar		ld a,(iy)
00374C B7                  A  3173    				or a
00374D 28 3B               A  3174    				jr z,wmsg_done
00374F 21400000            A  3175    				ld hl,64
003753 67                  A  3176    				ld h,a
003754 ED6C                A  3177    				mlt hl
003756 11000080            A  3178    				ld de,vram_a_addr
00375A 19                  A  3179    				add hl,de						00375B 0E08                A  3180    				ld c,8
00375D 7E                  A  3181    wpixlp2			ld a,(hl)
00375E 0608                A  3182    				ld b,8
003760 CB17                A  3183    wpixlp1			rl a
003762 30 06               A  3184    				jr nc,nowpix
003764 DD360001            A  3185    				ld (ix),1
003768 18 04               A  3186    				jr wpixd
00376A DD360000            A  3187    nowpix			ld (ix),0
00376E DD23                A  3188    wpixd			inc ix
003770 10 EE               A  3189    				djnz wpixlp1
003772 11380100            A  3190    				ld de,320-8
003776 DD19                A  3191    				add ix,de
003778 11080000            A  3192    				ld de,8
00377C 19                  A  3193    				add hl,de
00377D 0D                  A  3194    				dec c
00377E 20 DD               A  3195    				jr nz,wpixlp2
                           A  3196    				
003780 1108F6FF            A  3197    				ld de,8-(320*8)
003784 DD19                A  3198    				add ix,de
003786 FD23                A  3199    				inc iy
003788 18 BF               A  3200    				jr nextwchar
                           A  3201    
                           A  3202    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00378A CD CB 41 00         A  3203    wmsg_done		call purge_keyboard
00378E CD 91 3B 00         A  3204    				call set_irq_vector
003792 CD A3 3B 00         A  3205    				call enable_os_irqs
003796 FB                  A  3206    				ei
                           A  3207    
003797 CD 3C 40 00         A  3208    wmsg_loop		call hwsc_wait_vrt			;	                           A  3209    				
00379B 11CC0C00            A  3210    				ld de,ccch
00379F 21 39 61 00         A  3211    				ld hl,cursorflashtimer
0037A3 34                  A  3212    				inc (hl)
0037A4 7E                  A  3213    				ld a,(hl)
0037A5 E640                A  3214    				and 64
0037A7 28 04               A  3215    				jr z,got_wcolour
0037A9 11000000            A  3216    				ld de,000h
0037AD ED530200 FF         A  3217    got_wcolour		ld (hw_palette+2),de
                           A  3218    								
0037B2 CD 42 44 00         A  3219    				call os_get_key_press
0037B6 FE76                A  3220    				cp 76h
0037B8 20 DD               A  3221    				jr nz,wmsg_loop
0037BA C3000000            A  3222    				jp 0
                           A  3223    				
                           A  3224    ;----------------------------------------------
                           A  3225    ; Drivers
                           A  3226    ;----------------------------------------------
                           A  3227    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; is byte is skipped by the send_command routin
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
0037BE C3 D2 37 00         B    76    sd_card_driver	jp sd_initialize			; $
0037C2 C3 F4 37 00         B    77    				jp sd_read_sector			; $
0037C6 C3 FA 37 00         B    78    				jp sd_write_sector			; $
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0037CA 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
0037D2 CD 00 38 00         B    85    sd_initialize	call sd_init_main
0037D6 B7                  B    86    				or a						; i
0037D7 28 05               B    87    				jr z,sd_inok
0037D9 CD 87 3B 00         B    88    				call sd_power_off			; i
0037DD C9                  B    89    				ret
                           B    90    
0037DE CD 8C 3B 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
0037E2 CD 59 39 00         B    93    				call sd_read_cid			; a
0037E6 20 06               B    94    				jr nz,sd_done
0037E8 E5                  B    95    				push hl						; c
0037E9 CD C3 38 00         B    96    				call sd_read_csd
0037ED E1                  B    97    				pop hl
                           B    98    
0037EE CD 6F 3B 00         B    99    sd_done			call sd_deselect_card		; R
0037F2 B7                  B   100    				or a						; I
0037F3 C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
0037F4 CD DD 39 00         B   105    sd_read_sector	call sd_read_sector_main
0037F8 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
0037FA CD 03 3A 00         B   110    sd_write_sector	call sd_write_sector_main
0037FE 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003800 AF                  B   115    sd_init_main	xor a							003801 32 08 3B 00         B   116    				ld (sd_card_info),a			
                           B   117    
003805 CD 87 3B 00         B   118    				call sd_power_off				                           B   119    				
003809 11004000            B   120    				ld de,16384						00380D CD AC 40 00         B   121    				call hwsc_time_delay
                           B   122    							
003811 CD 7B 3B 00         B   123    				call sd_power_on				                           B   124    					
003815 060A                B   125    				ld b,10							003817 CD 8C 3A 00         B   126    sd_ecilp		call sd_send_eight_clocks
00381B 10 FA               B   127    				djnz sd_ecilp
                           B   128    				
00381D 21 DC 3A 00         B   129    				ld hl,CMD0_string				003821 CD A5 3A 00         B   130    				call sd_send_command_string		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003825 FE01                B   131    				cp 01h							003827 28 03               B   132    				jr z,sd_spi_mode_ok
                           B   133    				
003829 3E01                B   134    				ld a,sd_error_spi_mode_failed
00382B C9                  B   135    				ret		
                           B   136    
                           B   137    ; ---- CARD IS IN IDLE MODE -------------------
                           B   138    
00382C 21 E2 3A 00         B   139    sd_spi_mode_ok	ld hl,CMD8_string				003830 CD A5 3A 00         B   140    				call sd_send_command_string
003834 FE01                B   141    				cp 01h
003836 20 52               B   142    				jr nz,sd_sdc_init				                           B   143    
003838 0604                B   144    				ld b,4
00383A CD CD 3A 00         B   145    				call sd_read_bytes_to_sector_bu
00383E 3E01                B   146    				ld a,1
003840 23                  B   147    				inc hl
003841 23                  B   148    				inc hl
003842 BE                  B   149    				cp (hl)							003843 28 03               B   150    				jr z,sd_vrok
003845 3E13                B   151    				ld a,sd_error_vrange_bad
003847 C9                  B   152    				ret				
                           B   153    
003848 3EAA                B   154    sd_vrok			ld a,0aah
00384A 23                  B   155    				inc hl
00384B BE                  B   156    				cp (hl)
00384C 28 03               B   157    				jr z,sd_check_pattern_ok
00384E 3E14                B   158    				ld a,sd_error_check_pattern_bad
003850 C9                  B   159    				ret
                           B   160    				
003851                     B   161    sd_check_pattern_ok
                           B   162    
                           B   163    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   164    	
003851 01401F00            B   165    				ld bc,8000						                           B   166    
003855 3E77                B   167    sdhc_iwl		ld a,CMD55						003857 CD 93 3A 00         B   168    				call sd_send_command_null_args
                           B   169    				
00385B 21 E8 3A 00         B   170    				ld hl,ACMD41HCS_string			00385F CD A5 3A 00         B   171    				call sd_send_command_string
003863 28 0C               B   172    				jr z,sdhc_init_ok				003865 CB57                B   173    				bit 2,a
003867 20 05               B   174    				jr nz,sdhc_if					                           B   175    				
003869 0B                  B   176    				dec bc
00386A 78                  B   177    				ld a,b
00386B B1                  B   178    				or c
00386C 20 E7               B   179    				jr nz,sdhc_iwl
                           B   180    				
00386E 3E12                B   181    sdhc_if			ld a,sd_error_sdhc_init_failed	003870 C9                  B   182    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   183    				
003871                     B   184    sdhc_init_ok
                           B   185    
                           B   186    ;------ SDHC CARD IS INITIALIZED --------------
                           B   187    
003871 3E7A                B   188    				ld a,CMD58						003873 CD 93 3A 00         B   189    				call sd_send_command_null_args
                           B   190    					
003877 0604                B   191    				ld b,4							003879 CD CD 3A 00         B   192    				call sd_read_bytes_to_sector_bu
00387D 7E                  B   193    				ld a,(hl)
00387E E640                B   194    				and 040h						003880 0F                  B   195    				rrca
003881 0F                  B   196    				rrca 
003882 F602                B   197    				or 00000010b				
003884 32 08 3B 00         B   198    				ld (sd_card_info),a				003888 AF                  B   199    				xor a							003889 C9                  B   200    				ret
                           B   201    
                           B   202    	
                           B   203    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   204    
00388A 01401F00            B   205    sd_sdc_init		ld bc,8000						                           B   206    
00388E 3E77                B   207    sd_iwl			ld a,CMD55						003890 CD 93 3A 00         B   208    				call sd_send_command_null_args
                           B   209    
003894 3E69                B   210    				ld a,ACMD41						003896 CD 93 3A 00         B   211    				call sd_send_command_null_args
00389A 28 0C               B   212    				jr z,sd_rdy						                           B   213    				
00389C CB57                B   214    				bit 2,a				
00389E 20 10               B   215    				jr nz,sd_mmc_init				                           B   216    							
0038A0 0B                  B   217    				dec bc
0038A1 78                  B   218    				ld a,b
0038A2 B1                  B   219    				or c
0038A3 20 E9               B   220    				jr nz,sd_iwl
                           B   221    				
0038A5 3E11                B   222    				ld a,sd_error_sd_init_failed	0038A7 C9                  B   223    				ret
                           B   224    				
0038A8 3E01                B   225    sd_rdy			ld a,1
0038AA 32 08 3B 00         B   226    				ld (sd_card_info),a				0038AE AF                  B   227    				xor a							0038AF C9                  B   228    				ret	
                           B   229    
                           B   230    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   231    
0038B0 01401F00            B   232    sd_mmc_init		ld bc,8000						                           B   233    
0038B4 3E41                B   234    sdmmc_iwl		ld a,CMD1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038B6 CD 93 3A 00         B   235    				call sd_send_command_null_args	0038BA C8                  B   236    				ret z							                           B   237    				
0038BB 0B                  B   238    sd_mnrdy		dec bc
0038BC 78                  B   239    				ld a,b
0038BD B1                  B   240    				or c
0038BE 20 F4               B   241    				jr nz,sdmmc_iwl
                           B   242    				
0038C0 3E10                B   243    				ld a,sd_error_mmc_init_failed	0038C2 C9                  B   244    				ret
                           B   245    	
                           B   246    ;----------------------------------------------
                           B   247    
                           B   248    ; Returns BC:DE = Total capacity of card (in se
                           B   249    
0038C3                     B   250    sd_read_csd
                           B   251    				
0038C3 3E49                B   252    				ld a,CMD9						0038C5 CD 93 3A 00         B   253    				call sd_send_command_null_args	0038C9 C2 E9 39 00         B   254    				jp nz,sd_bcr_error				                           B   255    
0038CD CD 77 3A 00         B   256    				call sd_wait_data_token			0038D1 C2 F2 39 00         B   257    				jp nz,sd_dt_timeout	
                           B   258    
0038D5 0612                B   259    sd_id_ok		ld b,18							0038D7 CD CD 3A 00         B   260    				call sd_read_bytes_to_sector_bu
                           B   261    
0038DB DD21 86 66 00       B   262    				ld ix,sector_buffer				0038E0 DDCB0076            B   263    				bit 6,(ix)
0038E4 28 18               B   264    				jr z,sd_csd_v1
                           B   265    
0038E6 DD6E09              B   266    sd_csd_v2		ld l,(ix+9)						0038E9 DD6608              B   267    				ld h,(ix+8)
0038EC 23                  B   268    				inc hl
0038ED 3E0A                B   269    				ld a,10
0038EF 01000000            B   270    				ld bc,0
0038F3 29                  B   271    sd_csd2lp		add hl,hl
0038F4 CB11                B   272    				rl c
0038F6 CB10                B   273    				rl b
0038F8 3D                  B   274    				dec a
0038F9 20 F8               B   275    				jr nz,sd_csd2lp
0038FB EB                  B   276    				ex de,hl						0038FC AF                  B   277    				xor a
0038FD C9                  B   278    				ret
                           B   279    				
0038FE DD7E06              B   280    sd_csd_v1		ld a,(ix+6)						003901 E603                B   281    				and 00000011b
003903 57                  B   282    				ld d,a
003904 DD5E07              B   283    				ld e,(ix+7)
003907 DD7E08              B   284    				ld a,(ix+8)
00390A E6C0                B   285    				and 11000000b
00390C CB27                B   286    				sla a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00390E CB13                B   287    				rl e
003910 CB12                B   288    				rl d
003912 CB27                B   289    				sla a
003914 CB13                B   290    				rl e
003916 CB12                B   291    				rl d							                           B   292    				
003918 DD7E09              B   293    				ld a,(ix+9)
00391B E603                B   294    				and 00000011b
00391D 47                  B   295    				ld b,a
00391E DD7E0A              B   296    				ld a,(ix+10)
003921 E680                B   297    				and 10000000b
003923 CB27                B   298    				sla a
003925 CB10                B   299    				rl b							                           B   300    				
003927 04                  B   301    				inc b
003928 04                  B   302    				inc b
003929 21000000            B   303    				ld hl,0
00392D CB23                B   304    sd_cmsh			sla e
00392F CB12                B   305    				rl d
003931 CB15                B   306    				rl l
003933 CB14                B   307    				rl h
003935 10 F6               B   308    				djnz sd_cmsh					                           B   309    				
003937 DD7E05              B   310    				ld a,(ix+5)
00393A E60F                B   311    				and 00001111b					00393C 28 17               B   312    				jr z,sd_nbls
00393E 47                  B   313    				ld b,a
00393F CB23                B   314    sd_blsh			sla e
003941 CB12                B   315    				rl d
003943 CB15                B   316    				rl l
003945 CB14                B   317    				rl h
003947 10 F6               B   318    				djnz sd_blsh					                           B   319    				
003949 0609                B   320    				ld b,9							00394B CB3C                B   321    sd_cbsec		srl h
00394D CB1D                B   322    				rr l
00394F CB1A                B   323    				rr d
003951 CB1B                B   324    				rr e
003953 10 F6               B   325    				djnz sd_cbsec
                           B   326    
003955 E5                  B   327    sd_nbls			push hl
003956 C1                  B   328    				pop bc							003957 AF                  B   329    				xor a
003958 C9                  B   330    				ret
                           B   331    
                           B   332    ;----------------------------------------------
                           B   333    
003959                     B   334    sd_read_cid
                           B   335    	
                           B   336    ; Returns HL = Pointer to device ID string
                           B   337    
003959 3E4A                B   338    				ld a,CMD10						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00395B CD 93 3A 00         B   339    				call sd_send_command_null_args
00395F C2 E9 39 00         B   340    				jp nz,sd_bcr_error				                           B   341    
003963 CD 77 3A 00         B   342    				call sd_wait_data_token			003967 C2 F2 39 00         B   343    				jp nz,sd_dt_timeout
                           B   344    					
00396B 0612                B   345    				ld b,18
00396D CD CD 3A 00         B   346    				call sd_read_bytes_to_sector_bu
                           B   347    				
003971 21 89 66 00         B   348    				ld hl,sector_buffer+03h			003975 11 A6 66 00         B   349    				ld de,sector_buffer+20h
003979 01050000            B   350    				ld bc,5
00397D 3A 08 3B 00         B   351    				ld a,(sd_card_info)
003981 E60F                B   352    				and 0fh
003983 20 01               B   353    				jr nz,sd_cn5
003985 03                  B   354    				inc bc
003986 EDB0                B   355    sd_cn5			ldir
003988 E5                  B   356    				push hl
003989 D5                  B   357    				push de
00398A 21 EE 3A 00         B   358    				ld hl,sd_vnchars
00398E 01140000            B   359    				ld bc,20
003992 EDB0                B   360    				ldir
003994 D1                  B   361    				pop de
003995 E1                  B   362    				pop hl
003996 13                  B   363    				inc de
003997 13                  B   364    				inc de
003998 7E                  B   365    				ld a,(hl)
003999 CB3F                B   366    				srl a
00399B CB3F                B   367    				srl a
00399D CB3F                B   368    				srl a
00399F CB3F                B   369    				srl a
0039A1 C630                B   370    				add a,30h						0039A3 12                  B   371    				ld (de),a
0039A4 13                  B   372    				inc de
0039A5 13                  B   373    				inc de
0039A6 7E                  B   374    				ld a,(hl)
0039A7 E60F                B   375    				and 0fh
0039A9 C630                B   376    				add a,30h
0039AB 12                  B   377    				ld (de),a						0039AC 13                  B   378    				inc de
0039AD 13                  B   379    				inc de
0039AE 13                  B   380    				inc de
0039AF 13                  B   381    				inc de
0039B0 13                  B   382    				inc de
0039B1 23                  B   383    				inc hl
0039B2 0604                B   384    				ld b,4
0039B4 7E                  B   385    sd_snulp		ld a,(hl)						0039B5 CB3F                B   386    				srl a
0039B7 CB3F                B   387    				srl a
0039B9 CB3F                B   388    				srl a
0039BB CB3F                B   389    				srl a
0039BD C630                B   390    				add a,30h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039BF FE3A                B   391    				cp 3ah
0039C1 38 02               B   392    				jr c,sd_hvl1
0039C3 C607                B   393    				add a,07h
0039C5 12                  B   394    sd_hvl1			ld (de),a
0039C6 13                  B   395    				inc de
0039C7 7E                  B   396    				ld a,(hl)
0039C8 E60F                B   397    				and 0fh
0039CA C630                B   398    				add a,30h
0039CC FE3A                B   399    				cp 3ah
0039CE 38 02               B   400    				jr c,sd_hvl2
0039D0 C607                B   401    				add a,07h
0039D2 12                  B   402    sd_hvl2			ld (de),a
0039D3 13                  B   403    				inc de
0039D4 23                  B   404    				inc hl
0039D5 10 DD               B   405    				djnz sd_snulp
                           B   406    				
0039D7 21 A6 66 00         B   407    				ld hl,sector_buffer+20h			0039DB AF                  B   408    				xor a
0039DC C9                  B   409    				ret
                           B   410    
                           B   411    ;----------------------------------------------
                           B   412    ; SD Card READ SECTOR code begins...
                           B   413    ;----------------------------------------------
                           B   414    	
0039DD                     B   415    sd_read_sector_main
                           B   416    
                           B   417    ; 512 bytes are returned in sector buffer
                           B   418    
0039DD CD 4E 3A 00         B   419    				call sd_set_sector_addr
                           B   420    
0039E1 3E51                B   421    				ld a,CMD17						0039E3 CD A0 3A 00         B   422    				call sd_send_command_current_ar
0039E7 28 03               B   423    				jr z,sd_rscr_ok					0039E9 3E21                B   424    sd_bcr_error	ld a,sd_error_bad_command_respo
0039EB C9                  B   425    				ret
                           B   426    
0039EC CD 77 3A 00         B   427    sd_rscr_ok		call sd_wait_data_token			0039F0 28 03               B   428    				jr z,sd_dt_ok					0039F2 3E22                B   429    sd_dt_timeout	ld a,sd_error_data_token_timeou
0039F4 C9                  B   430    				ret
                           B   431    
0039F5 21 86 66 00         B   432    sd_dt_ok		ld hl,sector_buffer
0039F9 CD 1C 3B 00         B   433    				call sd_read_513_bytes			0039FD CD 14 3B 00         B   434    				call sd_get_byte
                           B   435    				
003A01 AF                  B   436    				xor a							003A02 C9                  B   437    				ret
                           B   438    
                           B   439    ;----------------------------------------------
                           B   440    ; SD Card WRITE SECTOR code begins...
                           B   441    ;----------------------------------------------
                           B   442    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A03                     B   443    sd_write_sector_main
                           B   444    	
003A03 CD 4E 3A 00         B   445    				call sd_set_sector_addr
                           B   446    
003A07 3E58                B   447    				ld a,CMD24						003A09 CD A0 3A 00         B   448    				call sd_send_command_current_ar
003A0D 20 DA               B   449    				jr nz,sd_bcr_error				                           B   450    				
003A0F CD 8C 3A 00         B   451    				call sd_send_eight_clocks		                           B   452    
003A13 3EFE                B   453    				ld a,0feh
003A15 CD 09 3B 00         B   454    				call sd_send_byte				                           B   455    
003A19 21 86 66 00         B   456    				ld hl,sector_buffer
003A1D CD 4D 3B 00         B   457    				call sd_write_512_bytes			003A21 CD 8C 3A 00         B   458    				call sd_send_eight_clocks		003A25 CD 8C 3A 00         B   459    				call sd_send_eight_clocks		                           B   460    		
003A29 CD 14 3B 00         B   461    				call sd_get_byte				003A2D E61F                B   462    				and 1fh
003A2F CB3F                B   463    				srl a
003A31 FE02                B   464    				cp 02h
003A33 28 03               B   465    				jr z,sd_wr_ok
                           B   466    
003A35 3E24                B   467    sd_write_fail	ld a,sd_error_write_failed
003A37 C9                  B   468    				ret
                           B   469    
003A38 01FFFF00            B   470    sd_wr_ok		ld bc,65535						003A3C CD 14 3B 00         B   471    sd_wcbsy		call sd_get_byte				003A40 FEFF                B   472    				cp 0ffh
003A42 20 02               B   473    				jr nz,sd_busy
003A44 AF                  B   474    				xor a							003A45 C9                  B   475    				ret
                           B   476    				
003A46 0B                  B   477    sd_busy			dec bc
003A47 78                  B   478    				ld a,b
003A48 B1                  B   479    				or c
003A49 20 F1               B   480    				jr nz,sd_wcbsy
                           B   481    
003A4B                     B   482    sd_card_busy_timeout
                           B   483    
003A4B 3E23                B   484    				ld a,sd_error_write_timeout
003A4D C9                  B   485    				ret	
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
003A4E                     B   489    sd_set_sector_addr
                           B   490    				
003A4E 21 32 61 00         B   491    				ld hl,sector_lba0
003A52 4E                  B   492    				ld c,(hl)
003A53 23                  B   493    				inc hl
003A54 5E                  B   494    				ld e,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A55 23                  B   495    				inc hl
003A56 56                  B   496    				ld d,(hl)
003A57 23                  B   497    				inc hl
003A58 46                  B   498    				ld b,(hl)					; s
                           B   499    
003A59 3A 08 3B 00         B   500    				ld a,(sd_card_info)
003A5D E610                B   501    				and 10h
003A5F 20 0A               B   502    				jr nz,lbatoargs				; i
003A61 69                  B   503    				ld l,c
003A62 63                  B   504    				ld h,e
003A63 7A                  B   505    				ld a,d						; o
003A64 4029                B   506    				add.sis hl,hl
003A66 8F                  B   507    				adc a,a	
003A67 EB                  B   508    				ex de,hl
003A68 47                  B   509    				ld b,a
003A69 0E00                B   510    				ld c,0
003A6B 21 03 3B 00         B   511    lbatoargs		ld hl,cmd_generic_args
003A6F 70                  B   512    				ld (hl),b
003A70 23                  B   513    				inc hl
003A71 72                  B   514    				ld (hl),d
003A72 23                  B   515    				inc hl
003A73 73                  B   516    				ld (hl),e
003A74 23                  B   517    				inc hl
003A75 71                  B   518    				ld (hl),c
003A76 C9                  B   519    				ret
                           B   520    	
                           B   521    	
                           B   522    ;----------------------------------------------
                           B   523    
003A77                     B   524    sd_wait_data_token
                           B   525    
003A77 C5                  B   526    				push bc
003A78 01401F00            B   527    				ld bc,8000				
003A7C CD 14 3B 00         B   528    sd_wdt			call sd_get_byte			; r
003A80 FEFE                B   529    				cp 0feh
003A82 28 06               B   530    				jr z,sd_gdt
003A84 0B                  B   531    				dec bc
003A85 78                  B   532    				ld a,b
003A86 B1                  B   533    				or c
003A87 20 F3               B   534    				jr nz,sd_wdt
003A89 0C                  B   535    				inc c						; d
003A8A C1                  B   536    sd_gdt			pop bc
003A8B C9                  B   537    				ret
                           B   538    
                           B   539    ;----------------------------------------------
                           B   540    
003A8C                     B   541    sd_send_eight_clocks
                           B   542    
003A8C 3EFF                B   543    				ld a,0ffh
003A8E CD 09 3B 00         B   544    				call sd_send_byte
003A92 C9                  B   545    				ret
                           B   546    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   547    ;----------------------------------------------
                           B   548    
                           B   549    
003A93                     B   550    sd_send_command_null_args
                           B   551    
003A93 21000000            B   552    				ld hl,0
003A97 22 03 3B 00         B   553    				ld (cmd_generic_args),hl
003A9B AF                  B   554    				xor a
003A9C 32 06 3B 00         B   555    				ld (cmd_generic_args+3),a
                           B   556    				
                           B   557    				
                           B   558    	
003AA0                     B   559    sd_send_command_current_args
                           B   560    	
003AA0 21 02 3B 00         B   561    				ld hl,cmd_generic
003AA4 77                  B   562    				ld (hl),a
                           B   563    
                           B   564    
                           B   565    
003AA5                     B   566    sd_send_command_string
                           B   567    
                           B   568    ; set HL = location of 6 byte command string
                           B   569    ; returns command response in A (ZF set if $00)
                           B   570    
                           B   571    
003AA5 CD 67 3B 00         B   572    				call sd_select_card				                           B   573    						
003AA9 CD 8C 3A 00         B   574    				call sd_send_eight_clocks		                           B   575    				
003AAD C5                  B   576    				push bc
003AAE 0606                B   577    				ld b,6
003AB0 7E                  B   578    sd_sclp			ld a,(hl)
003AB1 CD 09 3B 00         B   579    				call sd_send_byte				003AB5 23                  B   580    				inc hl
003AB6 10 F8               B   581    				djnz sd_sclp
003AB8 C1                  B   582    				pop bc
                           B   583    				
003AB9 CD 14 3B 00         B   584    				call sd_get_byte				                           B   585    					
                           B   586    
003ABD                     B   587    sd_wait_valid_response
                           B   588    				
003ABD C5                  B   589    				push bc
003ABE 0600                B   590    				ld b,0
003AC0 CD 14 3B 00         B   591    sd_wncrl		call sd_get_byte				003AC4 CB7F                B   592    				bit 7,a							003AC6 28 02               B   593    				jr z,sd_gcr
003AC8 10 F6               B   594    				djnz sd_wncrl
                           B   595    								
003ACA B7                  B   596    sd_gcr			or a							003ACB C1                  B   597    				pop bc
003ACC C9                  B   598    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   599    				
                           B   600    	
                           B   601    ;----------------------------------------------
                           B   602    
003ACD                     B   603    sd_read_bytes_to_sector_buffer
                           B   604    
003ACD 21 86 66 00         B   605    				ld hl,sector_buffer
                           B   606    	
003AD1                     B   607    sd_read_bytes
                           B   608    
                           B   609    ; set HL to dest address for data
                           B   610    ; set B to number of bytes required  
                           B   611    
003AD1 E5                  B   612    				push hl
003AD2 CD 14 3B 00         B   613    sd_rblp			call sd_get_byte
003AD6 77                  B   614    				ld (hl),a
003AD7 23                  B   615    				inc hl
003AD8 10 F8               B   616    				djnz sd_rblp
003ADA E1                  B   617    				pop hl
003ADB C9                  B   618    				ret
                           B   619    	
                           B   620    ;----------------------------------------------
                           B   621    
                           B   622    ; This data can be placed in ROM:
                           B   623    
003ADC 40000000 0095       B   624    CMD0_string			db 40h,00h,00h,00h,00h,95h
003AE2 48000001 AA87       B   625    CMD8_string			db 48h,00h,00h,01h,aah,87h
003AE8 69400000 0001       B   626    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
003AEE 2076782E 7820534E   B   627    sd_vnchars			db " vx.x SN:00000000 ",0,0
003AF6 3A303030 30303030 
003AFE 30200000 
                           B   628    
                           B   629    
                           B   630    ; The following variables need to be placed in 
                           B   631    
003B02 00                  B   632    cmd_generic			db 00h
003B03 00000000            B   633    cmd_generic_args	db 00h,00h,00h,00h
003B07 01                  B   634    cmd_generic_crc		db 01h
                           B   635    
003B08 00                  B   636    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   637    
                           B   638    
                           B   639    ;==============================================
                           B   640    
                           B   641    ;----------------------------------------------
                           B   642    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
003B09                     C     5    sd_send_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003B09 ED3903              C     9    					out0 (port_sdc_data),a
003B0C 00                  C    10    					nop
003B0D 00                  C    11    					nop
003B0E ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
003B11 20 FB               C    13    					jr nz,sd_wb_loop			003B13 C9                  C    14    					ret
                           C    15    
                           C    16    ;----------------------------------------------
                           C    17    
003B14                     C    18    sd_get_byte
                           C    19    
                           C    20    ; Returns byte read from card in A
                           C    21    
003B14 CD 8C 3A 00         C    22    					call sd_send_eight_clocks
003B18 ED3803              C    23    					in0 a,(port_sdc_data)
003B1B C9                  C    24    					ret
                           C    25    
                           C    26    ;----------------------------------------------
                           C    27    
003B1C                     C    28    sd_read_513_bytes
                           C    29    
                           C    30    ; optimized sector read
                           C    31    ; set hl = dest location for bytes
                           C    32    ; note: The last byte read (CRC) is not put int
                           C    33    
003B1C C5                  C    34    					push bc
003B1D D5                  C    35    					push de
003B1E 1EFF                C    36    					ld e,0ffh
003B20 0600                C    37    					ld b,0						003B22 0E01                C    38    					ld c,port_hw_flags
                           C    39    					
003B24 ED1903              C    40    					out0 (port_sdc_data),e		003B27 00                  C    41    					nop							003B28 00                  C    42    					nop							003B29 ED7410              C    43    sd_wser_loop1		tstio 1<<sdc_serializer_bus
003B2C 20 FB               C    44    					jr nz,sd_wser_loop1			003B2E DB03                C    45    					in a,(port_sdc_data)		                           C    46    					
003B30 ED1903              C    47    sd_512_loop			out0 (port_sdc_data),e		003B33 77                  C    48    					ld (hl),a					003B34 23                  C    49    					inc hl						                           C    50    					
003B35 ED7410              C    51    sd_wser_loop2		tstio 1<<sdc_serializer_bus
003B38 20 FB               C    52    					jr nz,sd_wser_loop2			003B3A DB03                C    53    					in a,(port_sdc_data)		                           C    54    												003B3C ED1903              C    55    					out0 (port_sdc_data),e		003B3F 77                  C    56    					ld (hl),a					003B40 23                  C    57    					inc hl						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    58    					
003B41 ED7410              C    59    sd_wser_loop3		tstio 1<<sdc_serializer_bus
003B44 20 FB               C    60    					jr nz,sd_wser_loop3			003B46 DB03                C    61    					in a,(port_sdc_data)		                           C    62    					
003B48 10 E6               C    63    					djnz sd_512_loop
003B4A D1                  C    64    					pop de
003B4B C1                  C    65    					pop bc
003B4C C9                  C    66    					ret
                           C    67    					
                           C    68    ;----------------------------------------------
                           C    69    					
003B4D                     C    70    sd_write_512_bytes
                           C    71    
                           C    72    ;optimized sector write
                           C    73    ;set hl = source location for bytes
                           C    74    
003B4D 0600                C    75    					ld b,0
003B4F 7E                  C    76    					ld a,(hl)
003B50 ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
003B53 23                  C    78    					inc hl
003B54 7E                  C    79    					ld a,(hl)
003B55 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
003B58 20 FB               C    81    					jr nz,sd_wser_loop4			003B5A ED3903              C    82    					out0 (port_sdc_data),a
003B5D 23                  C    83    					inc hl
003B5E 7E                  C    84    					ld a,(hl)
003B5F ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
003B62 20 FB               C    86    					jr nz,sd_wser_loop5
003B64 10 EA               C    87    					djnz sd_wr512_loop
003B66 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
003B67 F5                  C    95    sd_select_card		push af
003B68 3E02                C    96    					ld a,00h+(1<<sdc_cs)		003B6A ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
003B6D F1                  C    98    					pop af
003B6E C9                  C    99    					ret
                           C   100    
                           C   101    
003B6F F5                  C   102    sd_deselect_card	push af
003B70 3E82                C   103    					ld a,080h+(1<<sdc_cs)		003B72 ED3902              C   104    					out0 (port_sdc_ctrl),a
003B75 CD 8C 3A 00         C   105    					call sd_send_eight_clocks	003B79 F1                  C   106    					pop af
003B7A C9                  C   107    					ret
                           C   108    
                           C   109    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003B7B F5                  C   110    sd_power_on			push af
003B7C 3A040000            C   111    					ld a,(1<<sdc_speed)			003B80 ED3902              C   112    					out0 (port_sdc_ctrl),a		003B83 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
003B85 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
003B87 F5                  C   117    sd_power_off		push af
003B88 3E03                C   118    					ld a,00h+(1<<sdc_power)+(1<
003B8A 18 DE               C   119    					jr sd_wr_sdc_ctrl
                           C   120    
                           C   121    
003B8C F5                  C   122    sd_spi_port_fast	push af
003B8D 3E84                C   123    					ld a,80h+(1<<sdc_speed)		003B8F 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   644    
                           B   645    ;----------------------------------------------
                           A  3229    
                           A  3230    
                           A  3231    ;----------------------------------------------
                           A  3232    ; IO routines
                           A  3233    ;----------------------------------------------
                           A  3234    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003B91                     B     5    set_irq_vector
                           B     6    
003B91 AF                  B     7    				xor a
003B92 ED47                B     8    				ld i,a
003B94 3EC3                B     9    				ld a,c3h						003B96 32320000            B    10    				ld (032h),a	
003B9A 21 CC 3B 00         B    11    				ld hl,int_routine				003B9E 22330000            B    12    				ld (033h),hl
003BA2 C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003BA3 21 9A 60 00         B    17    enable_os_irqs	ld hl,devices_connected			003BA7 CB46                B    18    				bit 0,(hl)
003BA9 C4 B4 3B 00         B    19    				call nz,enable_kb_irq
003BAD CB4E                B    20    				bit 1,(hl)
003BAF C4 BA 3B 00         B    21    				call nz,enable_ms_irq
003BB3 C9                  B    22    				ret
                           B    23    
                           B    24    
003BB4 3E81                B    25    enable_kb_irq	ld a,10000001b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BB6 ED3905              B    26    				out0 (port_irq_ctrl),a			003BB9 C9                  B    27    				ret
                           B    28    
003BBA 3E82                B    29    enable_ms_irq	ld a,10000010b
003BBC ED3905              B    30    				out0 (port_irq_ctrl),a			003BBF C9                  B    31    				ret
                           B    32    
003BC0 3E02                B    33    disable_ms_irq	ld a,00000010b
003BC2 ED3905              B    34    				out0 (port_irq_ctrl),a			003BC5 C9                  B    35    				ret
                           B    36    
003BC6 3E3F                B    37    disable_irqs	ld a,00111111b
003BC8 ED3905              B    38    				out0 (port_irq_ctrl),a			003BCB C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003BCC                     B    44    int_routine
003BCC F5                  B    45    				push af							003BCD ED3807              B    46    				in0 a,(port_ps2_ctrl)			003BD0 CB67                B    47    				bit 4,a
003BD2 C4 E4 3B 00         B    48    				call nz,kb_interrupt_handler
003BD6 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003BD9 CB6F                B    50    				bit 5,a
003BDB C4 86 3C 00         B    51    				call nz,ms_interrupt_handler
003BDF F1                  B    52    				pop af
                           B    53    
003BE0 FB                  B    54    				ei								003BE1 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003BE4                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003BE4 E5                  B    77    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BE5 C5                  B    78    				push bc
                           B    79    				
003BE6 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003BE9 47                  B    81    				ld b,a
                           B    82    
003BEA 3A 68 62 00         B    83    				ld a,(key_release_mode)
003BEE B7                  B    84    				or a
003BEF 28 20               B    85    				jr z,key_pressed
                           B    86    			
003BF1 78                  B    87    				ld a,b							003BF2 FEE0                B    88    				cp 0e0h							003BF4 28 61               B    89    				jr z,kirq_done	
003BF6 FEE1                B    90    				cp 0e1h
003BF8 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003BFA CD 61 3C 00         B    93    				call qualifiers					003BFE 7D                  B    94    				ld a,l
003BFF 2F                  B    95    				cpl
003C00 6F                  B    96    				ld l,a
003C01 3A 6A 62 00         B    97    				ld a,(key_mod_flags)
003C05 A5                  B    98    				and l							003C06 32 6A 62 00         B    99    				ld (key_mod_flags),a
003C0A AF                  B   100    				xor a
003C0B 32 68 62 00         B   101    				ld (key_release_mode),a
003C0F 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003C11 78                  B   105    key_pressed		ld a,b							003C12 FEE0                B   106    				cp 0e0h							003C14 28 41               B   107    				jr z,kirq_done	
003C16 FEE1                B   108    				cp 0e1h
003C18 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003C1A FEF0                B   111    				cp 0f0h							003C1C 20 08               B   112    				jr nz,not_krel
003C1E 3E01                B   113    				ld a,1							003C20 32 68 62 00         B   114    				ld (key_release_mode),a			003C24 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003C26 CD 61 3C 00         B   118    not_krel		call qualifiers					003C2A 3A 6A 62 00         B   119    				ld a,(key_mod_flags)			003C2E B5                  B   120    				or l
003C2F 32 6A 62 00         B   121    				ld (key_mod_flags),a			003C33 68                  B   122    				ld l,b
003C34 01000000            B   123    				ld bc,0
003C38 3A 66 62 00         B   124    				ld a,(key_buf_wr_idx)
003C3C 4F                  B   125    				ld c,a
003C3D 7D                  B   126    				ld a,l
003C3E 21 46 62 00         B   127    				ld hl,scancode_buffer
003C42 09                  B   128    				add hl,bc
003C43 77                  B   129    				ld (hl),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C44 0E10                B   130    				ld c,16
003C46 09                  B   131    				add hl,bc
003C47 3A 6A 62 00         B   132    				ld a,(key_mod_flags)			003C4B 77                  B   133    				ld (hl),a	
003C4C 3A 66 62 00         B   134    				ld a,(key_buf_wr_idx)
003C50 3C                  B   135    				inc a
003C51 E60F                B   136    				and 15
003C53 32 66 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003C57 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003C5A CB67                B   140    				bit 4,a	
003C5C 20 88               B   141    				jr nz,key_loop
                           B   142    
003C5E C1                  B   143    				pop bc
003C5F E1                  B   144    				pop hl
003C60 C9                  B   145    				ret
                           B   146    
                           B   147    
003C61 2E40                B   148    qualifiers		ld l,040h		;apps
003C63 FE2F                B   149    				cp 02fh
003C65 C8                  B   150    				ret z
                           B   151    			
003C66 2E20                B   152    				ld l,020h		;r gui
003C68 FE27                B   153    				cp 027h
003C6A C8                  B   154    				ret z
                           B   155    			
003C6B 2E10                B   156    				ld l,010h		;r shift
003C6D FE59                B   157    				cp 059h
003C6F C8                  B   158    				ret z
                           B   159    			
003C70 2E08                B   160    				ld l,08h		; alt
003C72 FE11                B   161    				cp 011h
003C74 C8                  B   162    				ret z
                           B   163    			
003C75 2E04                B   164    				ld l,04h		; l gui
003C77 FE1F                B   165    				cp 01fh
                           B   166    			
003C79 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003C7B FE14                B   168    				cp 14h
003C7D C8                  B   169    				ret z
                           B   170    			
003C7E 2E01                B   171    				ld l,01h		;l shift
003C80 FE12                B   172    				cp 12h
003C82 C8                  B   173    				ret z
                           B   174    				
003C83 2E00                B   175    				ld l,0
003C85 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C86                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003C86 C5                  B   198    				push bc							003C87 D5                  B   199    				push de							003C88 E5                  B   200    				push hl							                           B   201    							
003C89 11000000            B   202    ms_loop			ld de,0		
003C8D 3A 73 62 00         B   203    				ld a,(mouse_packet_index)		003C91 5F                  B   204    				ld e,a
003C92 21 6F 62 00         B   205    				ld hl,mouse_packet	
003C96 19                  B   206    				add hl,de
003C97 ED3806              B   207    				in0 a,(port_mouse_data)
003C9A 77                  B   208    				ld (hl),a
                           B   209    								
003C9B 21 6E 62 00         B   210    				ld hl,mouse_packet_size
003C9F 1C                  B   211    				inc e							003CA0 7B                  B   212    				ld a,e
003CA1 BE                  B   213    				cp (hl)
003CA2 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003CA4 3A 6F 62 00         B   216    				ld a,(mouse_packet)				003CA8 4F                  B   217    				ld c,a	
003CA9 E607                B   218    				and 0111b
003CAB 32 74 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003CAF 11000000            B   221    				ld de,0							003CB3 CB61                B   222    				bit 4,c
003CB5 28 01               B   223    				jr z,mxsignpos
003CB7 1B                  B   224    				dec de
003CB8 3A 70 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003CBC 5F                  B   226    				ld e,a
003CBD 2A 75 62 00         B   227    				ld hl,(mouse_disp_x)
003CC1 19                  B   228    				add hl,de
003CC2 22 75 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003CC6 11000000            B   231    				ld de,0							003CCA CB69                B   232    				bit 5,c
003CCC 28 01               B   233    				jr z,mysignpos
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003CCE 1B                  B   234    				dec de
003CCF 3A 71 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003CD3 5F                  B   236    				ld e,a
003CD4 2A 78 62 00         B   237    				ld hl,(mouse_disp_y)			003CD8 AF                  B   238    				xor a							003CD9 ED52                B   239    				sbc hl,de
003CDB 22 78 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003CDF 21 72 62 00         B   242    				ld hl,mouse_packet+3			003CE3 3A 7B 62 00         B   243    				ld a,(mouse_wheel)
003CE7 86                  B   244    				add a,(hl)
003CE8 32 7B 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003CEC 3E01                B   247    				ld a,1
003CEE 32 7C 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003CF2 AF                  B   250    				xor a
003CF3 32 73 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003CF7 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003CFA CB6F                B   254    				bit 5,a
003CFC 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003CFE E1                  B   257    				pop hl
003CFF D1                  B   258    				pop de
003D00 C1                  B   259    				pop bc
003D01 C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.03
                           B   264    ;----------------------------------------------
                           B   265    
003D02 F5                  B   266    nmi_routine		push af							003D03 ED3805              B   267    				in0 a,(port_irq_flags)			003D06 CB77                B   268    				bit 6,a							003D08 20 09               B   269    				jr nz,freeze
003D0A 3E20                B   270    				ld a,00100000b					003D0C ED3909              B   271    				out0 (port_clear_flags),a		003D0F F1                  B   272    				pop af
003D10 5BED45              B   273    				retn.l
                           B   274    				
003D13 F1                  B   275    freeze			pop af
003D14 CD 7B 13 00         B   276    				call os_store_CPU_regs
                           B   277    				
003D18 21000000            B   278    				ld hl,0
003D1C 39                  B   279    				add hl,sp
003D1D 7E                  B   280    				ld a,(hl)						003D1E E601                B   281    				and 1
003D20 32 CB 60 00         B   282    				ld (store_adl),a
003D24 20 0A               B   283    				jr nz,adl_freeze
003D26 23                  B   284    				inc hl
003D27 5E                  B   285    				ld e,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003D28 23                  B   286    				inc hl
003D29 56                  B   287    				ld d,(hl)
003D2A CD FE 15 00         B   288    				call mbase_de
003D2E 18 02               B   289    				jr got_pc
                           B   290    				
003D30 33                  B   291    adl_freeze		inc sp
003D31 D1                  B   292    				pop de							003D32 ED53 C1 60 00       B   293    got_pc			ld (store_pc),de				                           B   294    				
003D37 CD 64 3D 00         B   295    				call disable_button_nmi
003D3B 3E40                B   296    				ld a,01000000b
003D3D ED3909              B   297    				out0 (port_clear_flags),a		003D40 3E01                B   298    				ld a,1
003D42 32 98 60 00         B   299    				ld (frozen),a
003D46 C3 56 0A 00         B   300    				jp os_cold_start				                           B   301    
                           B   302    ;----------------------------------------------
                           B   303    
                           B   304    ;nmi_routine
                           B   305    ;
                           B   306    ;				push af							                           B   307    ;				push bc
                           B   308    ;				ld a,0ffh
                           B   309    ;				ld (hw_palette),a
                           B   310    ;				ld b,0
                           B   311    ;nmi_testlp2		djnz nmi_testlp2
                           B   312    ;				ld a,0
                           B   313    ;				ld (hw_palette),a
                           B   314    ;				pop bc
                           B   315    ;				ld a,01100000b
                           B   316    ;				out0 (port_clear_flags)
                           B   317    ;				pop af
                           B   318    ;				retn.l							                           B   319    
                           B   320    ;----------------------------------------------
                           B   321    
003D4A                     B   322    set_nmi_vector
                           B   323    
003D4A 3EC3                B   324    				ld a,0c3h						003D4C 32660000            B   325    				ld (066h),a
003D50 21 02 3D 00         B   326    				ld hl,nmi_routine				003D54 22670000            B   327    				ld (067h),hl
003D58 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
003D59                     B   332    enable_button_nmi
                           B   333    
003D59 3E40                B   334    				ld a,01000000b
003D5B ED3909              B   335    				out0 (port_clear_flags),a		003D5E 3EC0                B   336    				ld a,11000000b					003D60 ED3905              B   337    				out0 (port_irq_ctrl),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003D63 C9                  B   338    				ret
                           B   339    
                           B   340    
003D64                     B   341    disable_button_nmi
                           B   342    
003D64 3E40                B   343    				ld a,01000000b					003D66 ED3905              B   344    				out0 (port_irq_ctrl),a
003D69 C9                  B   345    				ret
                           B   346    
                           B   347    
003D6A                     B   348    disable_all_nmis
                           B   349    
003D6A 3E60                B   350    				ld a,01100000b					003D6C ED3905              B   351    				out0 (port_irq_ctrl),a
003D6F C9                  B   352    				ret
                           B   353    				
                           B   354    ;----------------------------------------------
                           B   355    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003D70                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003D70 C5                  B    10    				push bc
003D71 3A 25 5F 00         B    11    				ld a,(serial_timeout)
003D75 47                  B    12    				ld b,a
003D76 3ECC                B    13    rx_set_timer	ld a,cch
003D78 ED3981              B    14    				out0 (TMR0_RR_L),a				003D7B 3E0C                B    15    				ld a,0ch
003D7D ED3982              B    16    				out0 (TMR0_RR_H),a				003D80 3E03                B    17    				ld a,00000011b					003D82 ED3980              B    18    				out0 (TMR0_CTL),a				003D85 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003D88 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003D8A ED7401              B    22    				tstio 1							003D8D 20 0E               B    23    				jr nz,rx_in_buffer
003D8F AF                  B    24    				xor a
003D90 B0                  B    25    				or b
003D91 28 13               B    26    				jr z,rx_time_out
003D93 0E80                B    27    				ld c,TMR0_CTL	
003D95 ED7480              B    28    				tstio 128						003D98 28 EE               B    29    				jr z,rx_byte_lp		
003D9A 05                  B    30    				dec b
003D9B 18 D9               B    31    				jr rx_set_timer
                           B    32    
003D9D 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003DA1 ED78                B    34    				in a,(bc)						003DA3 C1                  B    35    				pop bc
003DA4 BF                  B    36    				cp a							003DA5 C9                  B    37    				ret
                           B    38    
003DA6 C1                  B    39    rx_time_out		pop bc
003DA7 3E83                B    40    				ld a,083h						003DA9 B7                  B    41    				or a							003DAA C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003DAB                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003DAB C5                  B    52    				push bc
003DAC 0EC5                B    53    				ld c,UART0_LSR					003DAE ED7420              B    54    rs232_swait		tstio 020h						003DB1 28 FB               B    55    				jr z,rs232_swait
003DB3 01C00000            B    56    				ld bc,UART0_THR
003DB7 ED79                B    57    				out (c),a						003DB9 C1                  B    58    				pop bc
003DBA C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003DBB                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003DBB 7A                  B    68    				ld a,d
003DBC CD AB 3D 00         B    69    				call send_serial_byte
003DC0 7B                  B    70    				ld a,e
003DC1 CD AB 3D 00         B    71    				call send_serial_byte
003DC5 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003DC6                     B    76    hwsc_flush_serial_buffer
                           B    77    
003DC6 C5                  B    78    				push bc
003DC7 01C00000            B    79    				ld bc,UART0_RBR
003DCB ED78                B    80    				in a,(bc)						003DCD C1                  B    81    				pop bc
003DCE C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003DCF                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003DCF E603                B    15    				and 3
003DD1 32 F6 5E 00         B    16    				ld (video_doubling),a
003DD5 79                  B    17    				ld a,c
003DD6 32 F7 5E 00         B    18    				ld (charmap_rows),a
003DDA 78                  B    19    				ld a,b
003DDB 32 FA 5E 00         B    20    				ld (charmap_columns),a
003DDF 21000000            B    21    				ld hl,0
003DE3 69                  B    22    				ld l,c
003DE4 60                  B    23    				ld h,b
003DE5 ED6C                B    24    				mlt hl
003DE7 29                  B    25    				add hl,hl
003DE8 22 A4 60 00         B    26    				ld (charmap_size),hl
003DEC 11004080            B    27    				ld de,charmap_addr
003DF0 19                  B    28    				add hl,de
003DF1 22 9E 60 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
003DF5 CD FB 3D 00         B    31    				call os_set_video_hw_regs
003DF9 AF                  B    32    				xor a
003DFA C9                  B    33    				ret
                           B    34    				
                           B    35    
003DFB                     B    36    os_set_video_hw_regs
                           B    37    
003DFB 3A F6 5E 00         B    38    				ld a,(video_doubling)
003DFF CB27                B    39    				sla a
003E01 F618                B    40    				or 00011000b
003E03 320018FF            B    41    				ld (video_control),a			003E07 AF                  B    42    				xor a
003E08 320218FF            B    43    				ld (bgnd_palette_select),a
003E0C 3E63                B    44    				ld a,99
003E0E 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003E12 DD210010 FF         B    47    				ld ix,tilemap_parameters		003E17 21004080            B    48    				ld hl,charmap_addr
003E1B DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003E1E 21020000            B    51    				ld hl,2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E22 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
003E25 21000008            B    54    				ld hl,80000h
003E29 11000000            B    55    				ld de,0
003E2D 3A FA 5E 00         B    56    				ld a,(charmap_columns)
003E31 5F                  B    57    				ld e,a
003E32 AF                  B    58    				xor a
003E33 ED52                B    59    				sbc hl,de
003E35 AF                  B    60    				xor a
003E36 ED52                B    61    				sbc hl,de
003E38 DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003E3B 21000000            B    64    				ld hl,0
003E3F DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003E42 3A FA 5E 00         B    67    				ld a,(charmap_columns)
003E46 3D                  B    68    				dec a
003E47 DD7710              B    69    				ld (ix+10h),a					                           B    70    				
003E4A 3E00                B    71    				ld a,0
003E4C DD7711              B    72    				ld (ix+11h),a					003E4F DD7712              B    73    				ld (ix+12h),a					                           B    74    
003E52 21 D1 5E 00         B    75    				ld hl,pen_palette
003E56 CD 60 3E 00         B    76    				call hswc_set_ui_colours
                           B    77    				
003E5A CD 8B 40 00         B    78    				call hwsc_disable_sprites
                           B    79    				
003E5E AF                  B    80    				xor a							003E5F C9                  B    81    				ret
                           B    82    
                           B    83    ;----------------------------------------------
                           B    84    				
003E60                     B    85    hswc_set_ui_colours
                           B    86    
003E60 110000FF            B    87    				ld de,hw_palette
003E64 01200000            B    88    				ld bc,16*2
003E68 EDB0                B    89    				ldir
003E6A AF                  B    90    				xor a							003E6B C9                  B    91    				ret
                           B    92    
                           B    93    
                           B    94    ;----------------------------------------------
                           B    95    
003E6C                     B    96    hwsc_clear_screen
                           B    97    
003E6C 21004080            B    98    				ld hl,charmap_addr				003E70 3620                B    99    				ld (hl),32						003E72 23                  B   100    				inc hl
003E73 CD 92 3E 00         B   101    				call get_fill_attr
003E77 77                  B   102    				ld (hl),a
003E78 23                  B   103    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E79 EB                  B   104    				ex de,hl
003E7A 21004080            B   105    				ld hl,charmap_addr
003E7E ED4B A4 60 00       B   106    				ld bc,(charmap_size)
003E83 0B                  B   107    				dec bc
003E84 0B                  B   108    				dec bc
003E85 EDB0                B   109    				ldir
                           B   110    				
003E87 01000000            B   111    				ld bc,0
003E8B ED43 36 61 00       B   112    				ld (cursor_y),bc
003E90 AF                  B   113    				xor a							003E91 C9                  B   114    				ret
                           B   115    				
                           B   116    				
003E92 D5                  B   117    get_fill_attr	push de
003E93 3A CD 5E 00         B   118    				ld a,(current_pen)
003E97 E60F                B   119    				and 0fh
003E99 5F                  B   120    				ld e,a
003E9A 3A CF 5E 00         B   121    				ld a,(background_colour)
003E9E 0F                  B   122    				rrca
003E9F 0F                  B   123    				rrca
003EA0 0F                  B   124    				rrca
003EA1 0F                  B   125    				rrca
003EA2 E6F0                B   126    				and 0f0h
003EA4 B3                  B   127    				or e
003EA5 D1                  B   128    				pop de
003EA6 C9                  B   129    				ret
                           B   130    				
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003EA7                     B   134    hwsc_scroll_up	
                           B   135    				
003EA7 C5                  B   136    				push bc
003EA8 D5                  B   137    				push de
003EA9 E5                  B   138    				push hl
                           B   139    
003EAA 2A A4 60 00         B   140    				ld hl,(charmap_size)
003EAE ED5B FA 5E 00       B   141    				ld de,(charmap_columns)
003EB3 AF                  B   142    				xor a
003EB4 ED52                B   143    				sbc hl,de
003EB6 ED52                B   144    				sbc hl,de						003EB8 E5                  B   145    				push hl
003EB9 C1                  B   146    				pop bc							003EBA 21004080            B   147    				ld hl,charmap_addr
003EBE E5                  B   148    				push hl
003EBF 19                  B   149    				add hl,de
003EC0 19                  B   150    				add hl,de
003EC1 D1                  B   151    				pop de
003EC2 EDB0                B   152    				ldir
                           B   153    				
003EC4 EB                  B   154    				ex de,hl						003EC5 E5                  B   155    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003EC6 3620                B   156    				ld (hl),32
003EC8 23                  B   157    				inc hl
003EC9 CD 92 3E 00         B   158    				call get_fill_attr
003ECD 77                  B   159    				ld (hl),a
003ECE 2A FA 5E 00         B   160    				ld hl,(charmap_columns)
003ED2 2B                  B   161    				dec hl
003ED3 29                  B   162    				add hl,hl
003ED4 E5                  B   163    				push hl
003ED5 C1                  B   164    				pop bc
003ED6 E1                  B   165    				pop hl
003ED7 E5                  B   166    				push hl
003ED8 D1                  B   167    				pop de
003ED9 13                  B   168    				inc de
003EDA 13                  B   169    				inc de
003EDB EDB0                B   170    				ldir
                           B   171    				
003EDD E1                  B   172    				pop hl
003EDE D1                  B   173    				pop de
003EDF C1                  B   174    				pop bc
003EE0 AF                  B   175    				xor a							003EE1 C9                  B   176    				ret
                           B   177    
                           B   178    
                           B   179    ;----------------------------------------------
                           B   180    
003EE2                     B   181    hwsc_plot_char
                           B   182    
                           B   183    ; Set:
                           B   184    ; ----
                           B   185    ; A = ascii char
                           B   186    ; B = x character coordinate 
                           B   187    ; C = y character coordinate
                           B   188    
003EE2 E5                  B   189    				push hl							003EE3 D5                  B   190    				push de
003EE4 F5                  B   191    				push af
                           B   192    
003EE5 3A F7 5E 00         B   193    				ld a,(charmap_rows)				003EE9 3D                  B   194    				dec a
003EEA B9                  B   195    				cp c							003EEB 38 08               B   196    				jr c,win_err
003EED 3A FA 5E 00         B   197    				ld a,(charmap_columns)
003EF1 3D                  B   198    				dec a
003EF2 B8                  B   199    				cp b
003EF3 30 07               B   200    				jr nc,win_ok
003EF5 F1                  B   201    win_err			pop af
003EF6 D1                  B   202    				pop de
003EF7 E1                  B   203    				pop hl
003EF8 3E88                B   204    				ld a,88h						003EFA B7                  B   205    				or a
003EFB C9                  B   206    				ret
                           B   207    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003EFC 2A FA 5E 00         B   208    win_ok			ld hl,(charmap_columns)			003F00 61                  B   209    				ld h,c
003F01 ED6C                B   210    				mlt hl
003F03 11000000            B   211    				ld de,0
003F07 58                  B   212    				ld e,b
003F08 19                  B   213    				add hl,de
003F09 29                  B   214    				add hl,hl
003F0A 11004080            B   215    				ld de,charmap_addr
003F0E 19                  B   216    				add hl,de
003F0F F1                  B   217    				pop af
003F10 77                  B   218    				ld (hl),a
003F11 23                  B   219    				inc hl
003F12 3A CD 5E 00         B   220    				ld a,(current_pen)
003F16 77                  B   221    				ld (hl),a
003F17 D1                  B   222    				pop de
003F18 E1                  B   223    				pop hl
003F19 AF                  B   224    				xor a
003F1A C9                  B   225    				ret
                           B   226    				
                           B   227    				
                           B   228    ;----------------------------------------------
                           B   229    
003F1B                     B   230    hwsc_remove_cursor
                           B   231    
003F1B 3A F3 5E 00         B   232    				ld a,(cursor_present)			003F1F B7                  B   233    				or a
003F20 C8                  B   234    				ret z
003F21 ED4B 36 61 00       B   235    				ld bc,(cursor_y)
003F26 CD 89 3F 00         B   236    				call hwsc_get_charmap_addr_xy
003F2A 3A F2 5E 00         B   237    				ld a,(char_under_cursor)
003F2E 77                  B   238    				ld (hl),a
003F2F AF                  B   239    				xor a
003F30 32 F3 5E 00         B   240    				ld (cursor_present),a
003F34 C9                  B   241    				ret
                           B   242    
                           B   243    
003F35                     B   244    hwsc_draw_cursor
                           B   245    								
003F35 3A F3 5E 00         B   246    				ld a,(cursor_present)			003F39 B7                  B   247    				or a
003F3A C0                  B   248    				ret nz
003F3B 3C                  B   249    				inc a
003F3C 32 F3 5E 00         B   250    				ld (cursor_present),a
                           B   251    				
003F40 ED4B 36 61 00       B   252    				ld bc,(cursor_y)
003F45 CD 89 3F 00         B   253    				call hwsc_get_charmap_addr_xy
003F49 7E                  B   254    				ld a,(hl)						003F4A 32 F2 5E 00         B   255    				ld (char_under_cursor),a		003F4E 36FF                B   256    				ld (hl),ffh						                           B   257    				
003F50 11400000            B   258    				ld de,64						003F54 57                  B   259    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F55 ED5C                B   260    				mlt de
003F57 FD210000 80         B   261    				ld iy,vram_a_addr				003F5C FD19                B   262    				add iy,de						                           B   263    				
003F5E 21400000            B   264    				ld hl,64
003F62 3A F5 5E 00         B   265    				ld a,(cursor_image_char)
003F66 67                  B   266    				ld h,a
003F67 ED6C                B   267    				mlt hl
003F69 11000080            B   268    				ld de,vram_a_addr
003F6D 19                  B   269    				add hl,de
                           B   270    				
003F6E DD21C03F 80         B   271    				ld ix,vram_a_addr+03fc0h
003F73 11080000            B   272    				ld de,8
003F77 0608                B   273    				ld b,8
003F79 FD7E00              B   274    cur_loop		ld a,(iy)						003F7C AE                  B   275    				xor (hl)						003F7D DD7700              B   276    				ld (ix),a						003F80 FD19                B   277    				add iy,de
003F82 DD19                B   278    				add ix,de
003F84 19                  B   279    				add hl,de
003F85 10 F2               B   280    				djnz cur_loop
                           B   281    				
003F87 AF                  B   282    				xor a
003F88 C9                  B   283    				ret
                           B   284    				
                           B   285    
                           B   286    ;----------------------------------------------
                           B   287    
003F89                     B   288    hwsc_get_charmap_addr_xy
                           B   289    
                           B   290    ; returns address of charmap in xHL for charact
                           B   291    ; and attrmap in xDE
                           B   292    				
003F89 2A FA 5E 00         B   293    				ld hl,(charmap_columns)			003F8D 61                  B   294    				ld h,c
003F8E ED6C                B   295    				mlt hl
003F90 11000000            B   296    				ld de,0
003F94 58                  B   297    				ld e,b
003F95 19                  B   298    				add hl,de
003F96 29                  B   299    				add hl,hl
003F97 11004080            B   300    				ld de,charmap_addr
003F9B 19                  B   301    				add hl,de
003F9C E5                  B   302    				push hl
003F9D D1                  B   303    				pop de
003F9E 13                  B   304    				inc de
003F9F AF                  B   305    				xor a
003FA0 C9                  B   306    				ret
                           B   307    								
                           B   308    ;----------------------------------------------
                           B   309    
003FA1                     B   310    hwsc_chars_left
                           B   311    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   312    ; moves characters (in character map) on the cu
                           B   313    
003FA1 E5                  B   314    				push hl
003FA2 D5                  B   315    				push de
003FA3 C5                  B   316    				push bc
                           B   317    				
003FA4 2A FA 5E 00         B   318    				ld hl,(charmap_columns)
003FA8 3A 36 61 00         B   319    				ld a,(cursor_y)
003FAC 67                  B   320    				ld h,a
003FAD ED6C                B   321    				mlt hl
003FAF 11000000            B   322    				ld de,0
003FB3 58                  B   323    				ld e,b
003FB4 19                  B   324    				add hl,de
003FB5 29                  B   325    				add hl,hl
003FB6 11004080            B   326    				ld de,charmap_addr
003FBA 19                  B   327    				add hl,de
                           B   328    				
003FBB 3A FA 5E 00         B   329    				ld a,(charmap_columns)
003FBF 90                  B   330    				sub b
003FC0 CB27                B   331    				sla a
003FC2 01000000            B   332    				ld bc,0
003FC6 4F                  B   333    				ld c,a
003FC7 E5                  B   334    				push hl
003FC8 D1                  B   335    				pop de
003FC9 1B                  B   336    				dec de
003FCA 1B                  B   337    				dec de
003FCB EDB0                B   338    				ldir
                           B   339    				
003FCD 3E20                B   340    				ld a,32						;pu
003FCF 12                  B   341    				ld (de),a
003FD0 13                  B   342    				inc de
003FD1 CD 92 3E 00         B   343    				call get_fill_attr
003FD5 12                  B   344    				ld (de),a
                           B   345    				
003FD6 C1                  B   346    				pop bc
003FD7 D1                  B   347    				pop de
003FD8 E1                  B   348    				pop hl
003FD9 C9                  B   349    				ret
                           B   350    
                           B   351    
                           B   352    ;----------------------------------------------
                           B   353    
                           B   354    
003FDA                     B   355    hwsc_chars_right
                           B   356    
                           B   357    ; moves characters on current line right from c
                           B   358    
003FDA C5                  B   359    				push bc
003FDB D5                  B   360    				push de
003FDC E5                  B   361    				push hl
                           B   362    	
003FDD 21 37 61 00         B   363    				ld hl,cursor_x				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FE1 3A FA 5E 00         B   364    				ld a,(charmap_columns)
003FE5 3D                  B   365    				dec a
003FE6 BE                  B   366    				cp (hl)			
003FE7 28 30               B   367    				jr z,chright_end
003FE9 46                  B   368    				ld b,(hl)
                           B   369    				
003FEA 2A FA 5E 00         B   370    				ld hl,(charmap_columns)
003FEE 3A 36 61 00         B   371    				ld a,(cursor_y)
003FF2 3C                  B   372    				inc a							003FF3 67                  B   373    				ld h,a
003FF4 ED6C                B   374    				mlt hl
003FF6 29                  B   375    				add hl,hl
003FF7 11004080            B   376    				ld de,charmap_addr
003FFB 19                  B   377    				add hl,de					
003FFC 2B                  B   378    				dec hl							003FFD E5                  B   379    				push hl
003FFE D1                  B   380    				pop de							003FFF 2B                  B   381    				dec hl
004000 2B                  B   382    				dec hl							004001 3A FA 5E 00         B   383    				ld a,(charmap_columns)
004005 90                  B   384    				sub b
004006 3D                  B   385    				dec a
004007 CB27                B   386    				sla a
004009 01000000            B   387    				ld bc,0
00400D 4F                  B   388    				ld c,a							00400E EDB8                B   389    				lddr
004010 23                  B   390    				inc hl							004011 3620                B   391    				ld (hl),32
004013 23                  B   392    				inc hl
004014 CD 92 3E 00         B   393    				call get_fill_attr
004018 77                  B   394    				ld (hl),a
                           B   395    							
004019 E1                  B   396    chright_end		pop hl	
00401A D1                  B   397    				pop de
00401B C1                  B   398    				pop bc
00401C C9                  B   399    				ret
                           B   400    
                           B   401    ;----------------------------------------------
                           B   402    
                           B   403    
00401D                     B   404    hwsc_charline_to_command_string	
                           B   405    				
                           B   406    				
00401D 2A FA 5E 00         B   407    				ld hl,(charmap_columns)			004021 3A 36 61 00         B   408    				ld a,(cursor_y)
004025 67                  B   409    				ld h,a
004026 ED6C                B   410    				mlt hl
004028 29                  B   411    				add hl,hl
004029 11004080            B   412    				ld de,charmap_addr
00402D 19                  B   413    				add hl,de
00402E 11 54 61 00         B   414    				ld de,commandstring
004032 0650                B   415    				ld b,max_buffer_chars			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004034 7E                  B   416    copy_to_cmdline	ld a,(hl)
004035 12                  B   417    				ld (de),a
004036 13                  B   418    				inc de
004037 23                  B   419    				inc hl
004038 23                  B   420    				inc hl
004039 10 F9               B   421    				djnz copy_to_cmdline
00403B C9                  B   422    				ret
                           B   423    
                           B   424    ;----------------------------------------------
                           B   425    
                           B   426    
00403C C5                  B   427    hwsc_wait_vrt	push bc
                           B   428    
00403D 0E01                B   429    				ld c,1
00403F ED0909              B   430    				out0 (port_clear_flags),c
                           B   431    
004042 0E01                B   432    				ld c,port_hw_flags
004044 ED7420              B   433    ewaitvrtlp1		tstio 1<<vrt
004047 28 FB               B   434    				jr z,ewaitvrtlp1
                           B   435    				
004049 C1                  B   436    				pop bc
00404A BF                  B   437    				cp a							00404B C9                  B   438    				ret
                           B   439    
                           B   440    
                           B   441    ;----------------------------------------------
                           B   442    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
00404C                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
00404C 3E48                B     9    					ld a,01001000b				00404E ED39AA              B    10    					out0 (CS0_CTL),a
004051 3E00                B    11    					ld a,000h					004053 ED39A8              B    12    					out0 (CS0_LBR),a
004056 3EFF                B    13    					ld a,0ffh	
004058 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
00405B 3E58                B    16    					ld a,01011000b
00405D ED39AD              B    17    					out0 (CS1_CTL),a			004060 3E00                B    18    					ld a,0
004062 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004065 3EFF                B    23    					ld a,0ffh
004067 ED399F              B    24    					out0 (PC_DDR),a				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00406A AF                  B    25    					xor a
00406B ED39A0              B    26    					out0 (PC_ALT1),a
00406E ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004071 3EFF                B    29    					ld a,0ffh					004073 ED39A3              B    30    					out0 (PD_DDR),a				004076 AF                  B    31    					xor a	
004077 ED39A4              B    32    					out0 (PD_ALT1),a			00407A 3E0F                B    33    					ld a,00fh				
00407C ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
00407F ED3892              B    38    					in0 a,(TMR_ISS)
004082 E6FC                B    39    					and 11111100b
004084 F601                B    40    					or  00000001b
004086 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
004089 AF                  B    43    					xor a
00408A C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
00408B                     B    49    hwsc_disable_sprites
                           B    50    
00408B AF                  B    51    					xor a
00408C 320118FF            B    52    					ld (sprite_control),a		004090 C9                  B    53    					ret
                           B    54    					
                           B    55    ;----------------------------------------------
                           B    56    
                           B    57    
004091 11000000            B    58    hwsc_get_version	ld de,0
004095 0610                B    59    					ld b,16
004097 78                  B    60    gethwvlp			ld a,b
004098 3D                  B    61    					dec a
004099 ED3908              B    62    					out0 (port_selector),a		00409C DB01                B    63    					in a,(port_hw_flags)		00409E CB27                B    64    					sla a
0040A0 CB13                B    65    					rl e
0040A2 CB12                B    66    					rl d
0040A4 10 F1               B    67    					djnz gethwvlp				                           B    68    									
0040A6 21350000            B    69    					ld hl,prose_version
0040AA BF                  B    70    					cp a						0040AB C9                  B    71    					ret
                           B    72    
                           B    73    
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    ; Timer related 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    77    ;----------------------------------------------
                           B    78    
0040AC                     B    79    hwsc_time_delay
                           B    80    
                           B    81    ; set DE to 32768Hz ticks to wait
                           B    82    
0040AC CD B8 40 00         B    83    					call set_timeout
0040B0 CD C9 40 00         B    84    twaitlp				call test_timeout
0040B4 28 FA               B    85    					jr z,twaitlp
0040B6 AF                  B    86    					xor a						0040B7 C9                  B    87    					ret			
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    
0040B8 7B                  B    91    set_timeout			ld a,e						0040B9 ED3981              B    92    					out0 (TMR0_RR_L),a			0040BC 7A                  B    93    					ld a,d
0040BD ED3982              B    94    					out0 (TMR0_RR_H),a			0040C0 3E03                B    95    					ld a,00000011b				0040C2 ED3980              B    96    					out0 (TMR0_CTL),a			0040C5 ED3880              B    97    					in0 a,(TMR0_CTL)			0040C8 C9                  B    98    					ret
                           B    99    			
0040C9 ED3880              B   100    test_timeout		in0 a,(TMR0_CTL)			0040CC CB7F                B   101    					bit 7,a
0040CE C9                  B   102    					ret
                           B   103    			
                           B   104    ;----------------------------------------------
                           B   105    
0040CF                     B   106    hwsc_read_rtc
0040CF D5                  B   107    					push de
0040D0 C5                  B   108    					push bc
0040D1 0EE0                B   109    hwsc_rtc_rlp		ld c,RTC_SEC
0040D3 0608                B   110    					ld b,8
0040D5 21 91 60 00         B   111    					ld hl,time_data
0040D9 ED92                B   112    					inimr						0040DB 0EE0                B   113    					ld c,RTC_SEC
0040DD 0600                B   114    					ld b,0
0040DF 1E08                B   115    					ld e,8
0040E1 21 91 60 00         B   116    					ld hl,time_data
0040E5 ED78                B   117    timevloop			in a,(bc)					0040E7 BE                  B   118    					cp (hl)						0040E8 20 E7               B   119    					jr nz,hwsc_rtc_rlp			0040EA 23                  B   120    					inc hl
0040EB 0C                  B   121    					inc c
0040EC 1D                  B   122    					dec e
0040ED 20 F6               B   123    					jr nz,timevloop
0040EF 21 91 60 00         B   124    					ld hl,time_data
0040F3 C1                  B   125    					pop bc
0040F4 D1                  B   126    					pop de
0040F5 BF                  B   127    					cp a						0040F6 C9                  B   128    					ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   129    
                           B   130    
0040F7                     B   131    hwsc_write_rtc	
                           B   132    
                           B   133    ; set HL to location of BCD data for RTC: sec/m
                           B   134    
0040F7 E5                  B   135    					push hl
0040F8 C5                  B   136    					push bc
0040F9 3E21                B   137    					ld a,00100001b				0040FB ED39ED              B   138    					out0 (RTC_CTRL),a
0040FE 0EE0                B   139    					ld c,RTC_SEC
004100 0608                B   140    					ld b,8
004102 ED93                B   141    					otimr
004104 3E20                B   142    					ld a,00100000b				004106 ED39ED              B   143    					out0 (RTC_CTRL),a
004109 C1                  B   144    					pop bc
00410A E1                  B   145    					pop hl
00410B BF                  B   146    					cp a						00410C C9                  B   147    					ret	
                           B   148    
                           B   149    
                           B   150    ;----------------------------------------------
                           B   151    ; INIT KEYBOARD ROUTINE 
                           B   152    ;----------------------------------------------
                           B   153    
                           B   154    ; ZF set and A = 0 if all OK, else error code i
                           B   155    
00410D                     B   156    init_keyboard
                           B   157    
00410D 11004000            B   158    			ld de,16384							004111 CD AC 40 00         B   159    			call hwsc_time_delay
004115 F3                  B   160    			di
004116 CD CB 41 00         B   161    			call purge_keyboard
00411A CD 24 41 00         B   162    			call rs_keyboard
00411E FB                  B   163    			ei
00411F D0                  B   164    			ret nc
004120 3E8B                B   165    			ld a,08bh							004122 B7                  B   166    			or a
004123 C9                  B   167    			ret
                           B   168    			
                           B   169    			
004124                     B   170    rs_keyboard
                           B   171    
004124 3EFF                B   172    			ld a,0ffh
004126 CD 43 41 00         B   173    			call write_to_keyboard
00412A 30 04               B   174    			jr nc,kb_connected
00412C 3E8A                B   175    			ld a,08ah							00412E B7                  B   176    			or a
00412F C9                  B   177    			ret
                           B   178    
004130                     B   179    kb_connected
                           B   180    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004130 0605                B   181    			ld b,5
004132 C5                  B   182    kb_initlp	push bc
004133 CD AF 41 00         B   183    			call wait_kb_byte					004137 C1                  B   184    			pop bc
004138 D8                  B   185    			ret c
004139 FEAA                B   186    			cp 0aah
00413B 28 04               B   187    			jr z,kb_postok
00413D 10 F3               B   188    			djnz kb_initlp						00413F 37                  B   189    			scf									004140 C9                  B   190    			ret
                           B   191    			
                           B   192    			
004141 AF                  B   193    kb_postok	xor a
004142 C9                  B   194    			ret
                           B   195    	
                           B   196    	
                           B   197    ;----------------------------------------------
                           B   198    				
004143                     B   199    write_to_keyboard
                           B   200    
                           B   201    ; Put byte to send to keyboard in A
                           B   202    
004143 4F                  B   203    			ld c,a								004144 3E01                B   204    			ld a,01b							004146 ED3907              B   205    			out0 (port_ps2_ctrl),a
                           B   206    
004149 110A0000            B   207    			ld de,10
00414D CD AC 40 00         B   208    			call hwsc_time_delay				                           B   209    
004151 3E03                B   210    			ld a,11b
004153 ED3907              B   211    			out0 (port_ps2_ctrl),a				                           B   212    			
004156 3E02                B   213    			ld a,10b
004158 ED3907              B   214    			out0 (port_ps2_ctrl),a				                           B   215    			
00415B CD 2B 43 00         B   216    			call wait_kb_clk_high
                           B   217    			
00415F 1601                B   218    			ld d,1								004161 0608                B   219    			ld b,8								004163 CD FE 42 00         B   220    kdoloop		call wait_kb_clk_low	
004167 D8                  B   221    			ret c
004168 AF                  B   222    			xor a
004169 CBCF                B   223    			set 1,a
00416B CB41                B   224    			bit 0,c
00416D 28 03               B   225    			jr z,kdbzero
00416F CB8F                B   226    			res 1,a
004171 14                  B   227    			inc d
004172 ED3907              B   228    kdbzero		out0 (port_ps2_ctrl),a				004175 CD 2B 43 00         B   229    			call wait_kb_clk_high
004179 D8                  B   230    			ret c
00417A CB19                B   231    			rr c
00417C 10 E5               B   232    			djnz kdoloop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   233    
00417E CD FE 42 00         B   234    			call wait_kb_clk_low
004182 D8                  B   235    			ret c
004183 AF                  B   236    			xor a
004184 CB42                B   237    			bit 0,d
004186 20 02               B   238    			jr nz,kparone
004188 CBCF                B   239    			set 1,a
00418A ED3907              B   240    kparone		out0 (port_ps2_ctrl),a				00418D CD 2B 43 00         B   241    			call wait_kb_clk_high
004191 D8                  B   242    			ret c
                           B   243    			
004192 CD FE 42 00         B   244    			call wait_kb_clk_low
004196 D8                  B   245    			ret c
004197 AF                  B   246    			xor a
004198 ED3907              B   247    			out0 (port_ps2_ctrl),a				                           B   248    
00419B CD FA 42 00         B   249    			call wait_kb_data_low				00419F D8                  B   250    			ret c
0041A0 CD FE 42 00         B   251    			call wait_kb_clk_low				0041A4 D8                  B   252    			ret c
                           B   253    				
0041A5 CD 27 43 00         B   254    			call wait_kb_data_high				0041A9 D8                  B   255    			ret c
0041AA CD 2B 43 00         B   256    			call wait_kb_clk_high				0041AE C9                  B   257    			ret 
                           B   258    
                           B   259    
                           B   260    ;----------------------------------------------
                           B   261    
                           B   262    
0041AF                     B   263    wait_kb_byte
                           B   264    
0041AF 11008000            B   265    			ld de,8000h
0041B3 CD B8 40 00         B   266    			call set_timeout					                           B   267    
0041B7 ED3807              B   268    wait_kloop	in0 a,(port_ps2_ctrl)
0041BA CB67                B   269    			bit 4,a
0041BC 20 08               B   270    			jr nz,rec_kbyte
                           B   271    			
0041BE CD C9 40 00         B   272    			call test_timeout
0041C2 28 F3               B   273    			jr z,wait_kloop
0041C4 37                  B   274    			scf									0041C5 C9                  B   275    			ret
                           B   276    			
0041C6 ED3802              B   277    rec_kbyte	in0 a,(port_keyboard_data)			0041C9 B7                  B   278    			or a
0041CA C9                  B   279    			ret
                           B   280    
                           B   281    
                           B   282    ;----------------------------------------------
                           B   283    
0041CB                     B   284    purge_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   285    			
0041CB ED3807              B   286    			in0 a,(port_ps2_ctrl)
0041CE CB67                B   287    			bit 4,a
0041D0 C8                  B   288    			ret z
0041D1 ED3802              B   289    			in0 a,(port_keyboard_data)			0041D4 18 F5               B   290    			jr purge_keyboard
                           B   291    
                           B   292    
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    ; INIT MOUSE ROUTINE 
                           B   296    ;----------------------------------------------
                           B   297    
                           B   298    ; ZF set and A = 0 if all OK, else error code i
                           B   299    
0041D6                     B   300    init_mouse		
0041D6 F3                  B   301    			di
0041D7 CD EF 42 00         B   302    			call purge_mouse
0041DB CD E5 41 00         B   303    			call rs_mouse
0041DF FB                  B   304    			ei
0041E0 D0                  B   305    			ret nc
0041E1 3E8B                B   306    			ld a,08bh							0041E3 B7                  B   307    			or a
0041E4 C9                  B   308    			ret
                           B   309    
                           B   310    
0041E5                     B   311    rs_mouse
0041E5 3EFF                B   312    			ld a,0ffh							0041E7 CD 67 42 00         B   313    			call write_to_mouse		
0041EB 30 04               B   314    			jr nc,mouse_connected
0041ED 3E8A                B   315    			ld a,08ah							0041EF B7                  B   316    			or a
0041F0 C9                  B   317    			ret
                           B   318    
                           B   319    
0041F1                     B   320    mouse_connected
                           B   321    
0041F1 0605                B   322    			ld b,5
0041F3 C5                  B   323    ms_initlp	push bc
0041F4 CD D3 42 00         B   324    			call wait_mouse_byte				0041F8 C1                  B   325    			pop bc
0041F9 D8                  B   326    			ret c
0041FA FEAA                B   327    			cp 0aah
0041FC 28 04               B   328    			jr z,ms_postok
0041FE 10 F3               B   329    			djnz ms_initlp
004200 18 43               B   330    			jr bad_mouse
                           B   331    			
004202 CD D3 42 00         B   332    ms_postok	call wait_mouse_byte				004206 D8                  B   333    			ret c
004207 B7                  B   334    			or a
004208 20 3B               B   335    			jr nz,bad_mouse						                           B   336    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00420A 3E03                B   337    			ld a,3
00420C 32 6E 62 00         B   338    			ld (mouse_packet_size),a
                           B   339    
004210 21 48 5F 00         B   340    			ld hl,intellimouse_seq
004214 0606                B   341    			ld b,6
004216 CD 49 42 00         B   342    			call mouse_sequence
00421A D8                  B   343    			ret c
                           B   344    			
00421B 3EF2                B   345    			ld a,0f2h
00421D CD 58 42 00         B   346    			call write_mouse_wait_ack			004221 D8                  B   347    			ret c
004222 CD D3 42 00         B   348    			call wait_mouse_byte				004226 D8                  B   349    			ret c
004227 32 6D 62 00         B   350    			ld (mouse_id),a
00422B B7                  B   351    			or a								00422C 28 0A               B   352    			jr z,standard_mouse
00422E FE03                B   353    			cp 3
004230 20 13               B   354    			jr nz,bad_mouse						004232 3E04                B   355    			ld a,4
004234 32 6E 62 00         B   356    			ld (mouse_packet_size),a
                           B   357    
004238                     B   358    standard_mouse
                           B   359    		
004238 21 4E 5F 00         B   360    			ld hl,mouse_settings_seq
00423C 0606                B   361    			ld b,6
00423E CD 49 42 00         B   362    			call mouse_sequence
004242 D8                  B   363    			ret c
004243 AF                  B   364    			xor a								004244 C9                  B   365    			ret
                           B   366    
                           B   367    
004245 3E89                B   368    bad_mouse	ld a,089h							004247 B7                  B   369    			or a
004248 C9                  B   370    			ret
                           B   371    
                           B   372    
004249                     B   373    mouse_sequence
                           B   374    
004249 7E                  B   375    mseqlp		ld a,(hl)
00424A E5                  B   376    			push hl
00424B C5                  B   377    			push bc
00424C CD 58 42 00         B   378    			call write_mouse_wait_ack
004250 C1                  B   379    			pop bc
004251 E1                  B   380    			pop hl
004252 D8                  B   381    			ret c
004253 23                  B   382    			inc hl
004254 10 F3               B   383    			djnz mseqlp
004256 AF                  B   384    			xor a
004257 C9                  B   385    			ret
                           B   386    
                           B   387    
004258                     B   388    write_mouse_wait_ack
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   389    			
004258 CD 67 42 00         B   390    			call write_to_mouse
00425C D8                  B   391    			ret c
00425D CD D3 42 00         B   392    			call wait_mouse_byte				004261 D8                  B   393    			ret c
004262 FEFA                B   394    			cp 0fah								004264 C8                  B   395    			ret z
004265 37                  B   396    			scf
004266 C9                  B   397    			ret
                           B   398    			
                           B   399    ;----------------------------------------------
                           B   400    				
004267                     B   401    write_to_mouse
                           B   402    
                           B   403    ; Put byte to send to mouse in A
                           B   404    
004267 4F                  B   405    			ld c,a								004268 3E04                B   406    			ld a,0100b							00426A ED3907              B   407    			out0 (port_ps2_ctrl),a
                           B   408    
00426D 110A0000            B   409    			ld de,10
004271 CD AC 40 00         B   410    			call hwsc_time_delay				                           B   411    
004275 3E0C                B   412    			ld a,1100b
004277 ED3907              B   413    			out0 (port_ps2_ctrl),a				                           B   414    			
00427A 3E08                B   415    			ld a,1000b
00427C ED3907              B   416    			out0 (port_ps2_ctrl),a				                           B   417    			
00427F CD 33 43 00         B   418    			call wait_mouse_clk_high
                           B   419    			
004283 1601                B   420    			ld d,1								004285 0608                B   421    			ld b,8								004287 CD 06 43 00         B   422    mdoloop		call wait_mouse_clk_low	
00428B D8                  B   423    			ret c
00428C AF                  B   424    			xor a
00428D CBDF                B   425    			set 3,a
00428F CB41                B   426    			bit 0,c
004291 28 03               B   427    			jr z,mdbzero
004293 CB9F                B   428    			res 3,a
004295 14                  B   429    			inc d
004296 ED3907              B   430    mdbzero		out0 (port_ps2_ctrl),a				004299 CD 33 43 00         B   431    			call wait_mouse_clk_high
00429D D8                  B   432    			ret c
00429E CB19                B   433    			rr c
0042A0 10 E5               B   434    			djnz mdoloop
                           B   435    
0042A2 CD 06 43 00         B   436    			call wait_mouse_clk_low
0042A6 D8                  B   437    			ret c
0042A7 AF                  B   438    			xor a
0042A8 CB42                B   439    			bit 0,d
0042AA 20 02               B   440    			jr nz,parone
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042AC CBDF                B   441    			set 3,a
0042AE ED3907              B   442    parone		out0 (port_ps2_ctrl),a				0042B1 CD 33 43 00         B   443    			call wait_mouse_clk_high
0042B5 D8                  B   444    			ret c
                           B   445    			
0042B6 CD 06 43 00         B   446    			call wait_mouse_clk_low
0042BA D8                  B   447    			ret c
0042BB AF                  B   448    			xor a
0042BC ED3907              B   449    			out0 (port_ps2_ctrl),a				                           B   450    
0042BF CD 02 43 00         B   451    			call wait_mouse_data_low			0042C3 D8                  B   452    			ret c
0042C4 CD 06 43 00         B   453    			call wait_mouse_clk_low				0042C8 D8                  B   454    			ret c
                           B   455    				
0042C9 CD 2F 43 00         B   456    			call wait_mouse_data_high			0042CD D8                  B   457    			ret c
0042CE CD 33 43 00         B   458    			call wait_mouse_clk_high			0042D2 C9                  B   459    			ret 
                           B   460    
                           B   461    ;----------------------------------------------
                           B   462    
                           B   463    
0042D3                     B   464    wait_mouse_byte
                           B   465    
0042D3 11008000            B   466    			ld de,8000h
0042D7 CD B8 40 00         B   467    			call set_timeout					                           B   468    
0042DB ED3807              B   469    wait_mloop	in0 a,(port_ps2_ctrl)
0042DE CB6F                B   470    			bit 5,a
0042E0 20 08               B   471    			jr nz,rec_mbyte
                           B   472    			
0042E2 CD C9 40 00         B   473    			call test_timeout
0042E6 28 F3               B   474    			jr z,wait_mloop
0042E8 37                  B   475    			scf									0042E9 C9                  B   476    			ret
                           B   477    			
0042EA ED3806              B   478    rec_mbyte	in0 a,(port_mouse_data)				0042ED B7                  B   479    			or a
0042EE C9                  B   480    			ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
0042EF                     B   484    purge_mouse
                           B   485    			
0042EF ED3807              B   486    			in0 a,(port_ps2_ctrl)
0042F2 CB6F                B   487    			bit 5,a
0042F4 C8                  B   488    			ret z
0042F5 ED3806              B   489    			in0 a,(port_mouse_data)			; r
0042F8 18 F5               B   490    			jr purge_mouse
                           B   491    
                           B   492    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   493    ;----------------------------------------------
                           B   494    
                           B   495    
0042FA                     B   496    wait_kb_data_low
                           B   497    
0042FA 3E02                B   498    			ld a,2
0042FC 18 0A               B   499    			jr test_lo_ps2
                           B   500    			
0042FE                     B   501    wait_kb_clk_low
                           B   502    
0042FE 3E01                B   503    			ld a,1
004300 18 06               B   504    			jr test_lo_ps2			
                           B   505    
004302                     B   506    wait_mouse_data_low
                           B   507    
004302 3E08                B   508    			ld a,8
004304 18 02               B   509    			jr test_lo_ps2
                           B   510    
004306                     B   511    wait_mouse_clk_low
                           B   512    
004306 3E04                B   513    			ld a,4
                           B   514    
004308 C5                  B   515    test_lo_ps2	push bc
004309 D5                  B   516    			push de
00430A 4F                  B   517    			ld c,a
00430B 11004000            B   518    			ld de,04000h					; a
00430F CD B8 40 00         B   519    			call set_timeout
                           B   520    
004313 CD C9 40 00         B   521    nkb_lw		call test_timeout				; t
004317 28 04               B   522    			jr z,nkb_lnto
004319 D1                  B   523    			pop de
00431A C1                  B   524    			pop bc
00431B 37                  B   525    			scf								; c
00431C C9                  B   526    			ret
00431D ED3807              B   527    nkb_lnto	in0 a,(port_ps2_ctrl)
004320 A1                  B   528    			and c
004321 20 F0               B   529    			jr nz,nkb_lw
                           B   530    					
004323 D1                  B   531    			pop de
004324 C1                  B   532    			pop bc
004325 AF                  B   533    			xor a
004326 C9                  B   534    			ret					
                           B   535    
                           B   536    
                           B   537    
                           B   538    
004327                     B   539    wait_kb_data_high
                           B   540    
004327 3E02                B   541    			ld a,2
004329 18 0A               B   542    			jr test_hi_ps2
                           B   543    			
00432B                     B   544    wait_kb_clk_high
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   545    
00432B 3E01                B   546    			ld a,1
00432D 18 06               B   547    			jr test_hi_ps2
                           B   548    
                           B   549    
00432F                     B   550    wait_mouse_data_high
                           B   551    			
00432F 3E08                B   552    			ld a,8
004331 18 02               B   553    			jr test_hi_ps2
                           B   554    			 
004333                     B   555    wait_mouse_clk_high
                           B   556    
004333 3E04                B   557    			ld a,4
                           B   558    
004335 C5                  B   559    test_hi_ps2	push bc
004336 D5                  B   560    			push de
004337 4F                  B   561    			ld c,a
004338 11004000            B   562    			ld de,04000h					; a
00433C CD B8 40 00         B   563    			call set_timeout
                           B   564    
004340 CD C9 40 00         B   565    nkb_hw		call test_timeout				; t
004344 28 04               B   566    			jr z,nkb_hnto
004346 D1                  B   567    			pop de
004347 C1                  B   568    			pop bc
004348 37                  B   569    			scf								; c
004349 C9                  B   570    			ret
00434A ED3807              B   571    nkb_hnto	in0 a,(port_ps2_ctrl)
00434D A1                  B   572    			and c
00434E 28 F0               B   573    			jr z,nkb_hw
                           B   574    					
004350 D1                  B   575    			pop de
004351 C1                  B   576    			pop bc
004352 AF                  B   577    			xor a							; c
004353 C9                  B   578    			ret
                           B   579    
                           B   580    
                           B   581    ;==============================================
                           B   582    
004354                     B   583    hwsc_play_audio
                           B   584    
                           B   585    ; set HL register to location of an audio data 
                           B   586    
                           B   587    ; 0 - start 
                           B   588    ; 3 - length
                           B   589    ; 6 - loop start
                           B   590    ; 9 - loop length
                           B   591    ; c - frequency constant
                           B   592    ; e - volume
                           B   593    
                           B   594    ; set C register to set channels wave is to pla
                           B   595    
004354 E5                  B   596    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004355 FDE1                B   597    				pop iy
004357 DD210014 FF         B   598    				ld ix,hw_audio_registers
00435C CD 91 43 00         B   599    				call audio_reg_wait				                           B   600    				
004360 0608                B   601    				ld b,8
004362 CB39                B   602    audchanloop		srl c
004364 30 24               B   603    				jr nc,not_this_chan
                           B   604    				
004366 FD1700              B   605    				ld de,(iy)
004369 DD1F00              B   606    				ld (ix),de						                           B   607    
00436C FD1703              B   608    				ld de,(iy+3)
00436F DD1F04              B   609    				ld (ix+04h),de					                           B   610    				
004372 FD170C              B   611    				ld de,(iy+0ch)
004375 DD1F08              B   612    				ld (ix+08h),de					                           B   613    				
004378 FD5E0E              B   614    				ld e,(iy+0eh)
00437B DD1F0C              B   615    				ld (ix+0ch),de					                           B   616    				
00437E FD1706              B   617    				ld de,(iy+6)
004381 DD1F10              B   618    				ld (ix+10h),de					                           B   619    				
004384 FD1709              B   620    				ld de,(iy+9)
004387 DD1F14              B   621    				ld (ix+14h),de					                           B   622    
00438A                     B   623    not_this_chan	
00438A ED3220              B   624    				lea ix,ix+20h			
00438D 10 D3               B   625    				djnz audchanloop
00438F AF                  B   626    				xor a
004390 C9                  B   627    				ret
                           B   628    
                           B   629    
                           B   630    ;----------------------------------------------
                           B   631    
004391                     B   632    audio_reg_wait	
                           B   633    
004391 3E01                B   634    				ld a,1
004393 320314FF            B   635    				ld (hw_audio_registers+3),a		                           B   636    				
004397 ED3801              B   637    wait_audreg		in0 a,(port_hw_flags)			00439A E640                B   638    				and 040h
00439C 28 F9               B   639    				jr z,wait_audreg				00439E AF                  B   640    				xor a
00439F C9                  B   641    				ret
0043A0 C9                  B   642    				ret
                           B   643    
                           B   644    
                           B   645    ;----------------------------------------------
                           B   646    				
                           B   647    				
0043A1                     B   648    hwsc_disable_audio
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   649    
0043A1 AF                  B   650    				xor a
0043A2 320314FF            B   651    				ld (hw_audio_registers+3),a		                           B   652    				
0043A6 DD210014 FF         B   653    				ld ix,hw_audio_registers		0043AB 0608                B   654    				ld b,8
0043AD 11000000            B   655    				ld de,0
0043B1 DD1F0C              B   656    disaud_lp		ld (ix+0ch),de
0043B4 ED3220              B   657    				lea ix,ix+020h
0043B7 10 F8               B   658    				djnz disaud_lp
0043B9 C9                  B   659    				ret
                           B   660    				
                           B   661    ;----------------------------------------------
                           B   662    
0043BA                     B   663    hwsc_get_joysticks
                           B   664    
0043BA ED389E              B   665    				in0 a,(PC_DR)				
0043BD 2F                  B   666    				cpl
0043BE 47                  B   667    				ld b,a
0043BF E60F                B   668    				and 0fh
0043C1 5F                  B   669    				ld e,a
0043C2 78                  B   670    				ld a,b
0043C3 0F                  B   671    				rrca
0043C4 0F                  B   672    				rrca
0043C5 0F                  B   673    				rrca
0043C6 0F                  B   674    				rrca
0043C7 E60F                B   675    				and 0fh
0043C9 57                  B   676    				ld d,a
                           B   677    				
0043CA ED38A2              B   678    				in0 a,(PD_DR)	
0043CD CB67                B   679    				bit 4,a						; f
0043CF 20 02               B   680    				jr nz,noj1b1
0043D1 CBEA                B   681    				set 5,d
                           B   682    
0043D3 CB6F                B   683    noj1b1			bit 5,a						; f
0043D5 20 02               B   684    				jr nz,noj1b0
0043D7 CBE2                B   685    				set 4,d
                           B   686    				
0043D9 CB77                B   687    noj1b0			bit 6,a						; f
0043DB 20 02               B   688    				jr nz,noj0b1
0043DD CBEB                B   689    				set 5,e
                           B   690    
0043DF CB7F                B   691    noj0b1			bit 7,a						; f
0043E1 20 02               B   692    				jr nz,noj0b0
0043E3 CBE3                B   693    				set 4,e
                           B   694    
0043E5 AF                  B   695    noj0b0			xor a
0043E6 C9                  B   696    				ret
                           B   697    				
                           B   698    				
                           B   699    ;----------------------------------------------
                           B   700    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   701    				
                           B   702    				
                           A  3239    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
0043E7                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
0043E7 D5                  B    13    				push de
0043E8 51                  B    14    				ld d,c
0043E9 E5                  B    15    				push hl
                           B    16    				
0043EA CD 54 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		0043EE BE                  B    18    				cp (hl)							0043EF 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
0043F1 01000000            B    21    new_key			ld bc,0							0043F5 4F                  B    22    				ld c,a
0043F6 21 46 62 00         B    23    				ld hl,scancode_buffer	
0043FA 09                  B    24    				add hl,bc
0043FB 7E                  B    25    				ld a,(hl)						                           B    26    
0043FC 0E10                B    27    				ld c,16
0043FE 09                  B    28    				add hl,bc						0043FF 4F                  B    29    				ld c,a							004400 7E                  B    30    				ld a,(hl)						                           B    31    
004401 1E00                B    32    				ld e,0							004403 21 A1 5D 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004407 CB4F                B    35    				bit 1,a
004409 28 04               B    36    				jr z,not_ctrl					00440B 1E60                B    37    				ld e,96							00440D 18 16               B    38    				jr got_keymap					                           B    39    							
00440F CB47                B    40    not_ctrl		bit 0,a
004411 20 04               B    41    				jr nz,shifted
004413 CB67                B    42    				bit 4,a
004415 28 06               B    43    				jr z,not_shifted
004417 21 03 5E 00         B    44    shifted			ld hl,shifted_keymap			00441B 18 08               B    45    				jr got_keymap
                           B    46    				
00441D CB5F                B    47    not_shifted		bit 3,a
00441F 28 04               B    48    				jr z,got_keymap	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004421 21 65 5E 00         B    49    				ld hl,alted_keymap				                           B    50    
004425 79                  B    51    got_keymap		ld a,c							004426 FE62                B    52    				cp 062h
004428 30 07               B    53    				jr nc,gotkdone
00442A 09                  B    54    				add hl,bc						00442B 7E                  B    55    				ld a,(hl)						00442C 93                  B    56    				sub a,e							00442D 30 01               B    57    				jr nc,subkey_ok	
00442F AF                  B    58    				xor a							004430 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004431 3A 67 62 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004435 3C                  B    62    				inc a							004436 E60F                B    63    				and 15
004438 32 67 62 00         B    64    				ld (key_buf_rd_idx),a			00443C 79                  B    65    				ld a,c							00443D E1                  B    66    				pop hl
00443E 4A                  B    67    				ld c,d
00443F D1                  B    68    				pop de
004440 BF                  B    69    				cp a							004441 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004442                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
004442 D5                  B    82    				push de
004443 51                  B    83    				ld d,c
004444 E5                  B    84    				push hl
004445 CD 54 44 00         B    85    				call get_kb_buffer_indexes		004449 BE                  B    86    				cp (hl)							00444A 20 A5               B    87    				jr nz,new_key					00444C 3E81                B    88    				ld a,81h			
00444E 47                  B    89    				ld b,a
00444F B7                  B    90    				or a
004450 E1                  B    91    				pop hl
004451 4A                  B    92    				ld c,d
004452 D1                  B    93    				pop de
004453 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
004454                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004454 21 66 62 00         B   101    				ld hl,key_buf_wr_idx			004458 3A 67 62 00         B   102    				ld a,(key_buf_rd_idx)			00445C C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
00445D                     B    21    serial_get_header
                           B    22    
00445D 32 25 5F 00         B    23    				ld (serial_timeout),a			004461 22 0F 5F 00         B    24    				ld (serial_fn_addr),hl
004465 CD C6 3D 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004469 CD 4C 45 00         B    27    				call s_getblock					00446D 28 0C               B    28    				jr z,s_gbfhok					00446F F5                  B    29    				push af							004470 3A 46 5F 00         B    30    				ld a,(serial_transfer_started)
004474 B7                  B    31    				or a							004475 C4 B3 45 00         B    32    				call nz,s_badack				004479 F1                  B    33    				pop af
00447A C9                  B    34    				ret
                           B    35    	
00447B 21 3A 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			00447F 11 9A 66 00         B    37    				ld de,sector_buffer+20			004483 060C                B    38    				ld b,12
004485 CD 29 12 00         B    39    				call os_compare_strings
004489 20 0F               B    40    				jr nz,s_nfhdr
00448B 06E0                B    41    				ld b,256-32						00448D 21 A6 66 00         B    42    				ld hl,sector_buffer+32
004491 7E                  B    43    s_chdr			ld a,(hl)
004492 23                  B    44    				inc hl
004493 B7                  B    45    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004494 20 04               B    46    				jr nz,s_nfhdr
004496 10 F9               B    47    				djnz s_chdr
004498 18 08               B    48    				jr s_fhcsok
                           B    49    				
00449A CD B3 45 00         B    50    s_nfhdr			call s_badack					00449E 3E85                B    51    				ld a,085h						0044A0 B7                  B    52    				or a
0044A1 C9                  B    53    				ret
                           B    54    		
0044A2 21 96 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			0044A6 11 36 5F 00         B    56    				ld de,serial_fileheader+16
0044AA 01040000            B    57    				ld bc,4
0044AE EDB0                B    58    				ldir
                           B    59    				
0044B0 21 86 66 00         B    60    				ld hl,sector_buffer
0044B4 11 26 5F 00         B    61    				ld de,serial_fileheader			0044B8 0610                B    62    				ld b,16							0044BA 7E                  B    63    s_tuclp			ld a,(hl)						0044BB B7                  B    64    				or a
0044BC 28 0B               B    65    				jr z,s_ffhswz	
0044BE CD 63 12 00         B    66    				call os_uppercasify
0044C2 12                  B    67    				ld (de),a
0044C3 23                  B    68    				inc hl
0044C4 13                  B    69    				inc de
0044C5 10 F3               B    70    				djnz s_tuclp
0044C7 18 04               B    71    				jr s_tucdone
0044C9 12                  B    72    s_ffhswz		ld (de),a
0044CA 13                  B    73    				inc de
0044CB 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
0044CD 2A 0F 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			0044D1 7E                  B    77    				ld a,(hl)
0044D2 FE2A                B    78    				cp '*'
0044D4 28 14               B    79    				jr z,s_rffns					0044D6 11 26 5F 00         B    80    				ld de,serial_fileheader
0044DA 0610                B    81    				ld b,16
0044DC CD 29 12 00         B    82    				call os_compare_strings
0044E0 28 08               B    83    				jr z,s_rffns
0044E2 CD B3 45 00         B    84    s_rfnbad		call s_badack
0044E6 3E87                B    85    				ld a,087h						0044E8 B7                  B    86    				or a
0044E9 C9                  B    87    				ret
                           B    88    				
0044EA DD21 26 5F 00       B    89    s_rffns			ld ix,serial_fileheader			0044EF AF                  B    90    				xor a
0044F0 C9                  B    91    				ret
                           B    92    
0044F1 F5                  B    93    s_fail			push af				
0044F2 CD B3 45 00         B    94    				call s_badack		 
0044F6 F1                  B    95    				pop af
0044F7 C9                  B    96    				ret
                           B    97    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
0044F8                     B   114    serial_receive_file
                           B   115    
0044F8 3E0A                B   116    				ld a,10							0044FA 32 25 5F 00         B   117    				ld (serial_timeout),a
0044FE E5                  B   118    				push hl
0044FF CD A2 45 00         B   119    				call s_goodack					004503 DDE1                B   120    				pop ix							004505 ED5B 36 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
00450A CD 4C 45 00         B   123    s_gbloop		call s_getblock
00450E 20 E1               B   124    				jr nz,s_fail
004510 0E00                B   125    				ld c,0							004512 FD21 86 66 00       B   126    				ld iy,sector_buffer
004517 FD7E00              B   127    s_rfloop		ld a,(iy)
00451A DD7700              B   128    				ld (ix),a						00451D 1B                  B   129    				dec de							00451E 21000000            B   130    				ld hl,0
004522 AF                  B   131    				xor a
004523 ED5A                B   132    				adc hl,de						004525 28 1A               B   133    				jr z,s_rfabr					004527 C5                  B   134    				push bc
004528 01010000            B   135    				ld bc,1
00452C DD09                B   136    				add ix,bc						00452E C1                  B   137    				pop bc
00452F 30 05               B   138    				jr nc,s_nbt
004531 3E84                B   139    				ld a,84h						004533 B7                  B   140    				or a
004534 18 BB               B   141    				jr s_fail
004536 FD23                B   142    s_nbt			inc iy
004538 0D                  B   143    				dec c
004539 20 DC               B   144    				jr nz,s_rfloop
00453B CD A2 45 00         B   145    				call s_goodack					00453F 18 C9               B   146    				jr s_gbloop
                           B   147    			
004541 CD A2 45 00         B   148    s_rfabr			call s_goodack					004545 DD21 26 5F 00       B   149    				ld ix,serial_fileheader			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00454A AF                  B   150    				xor a							00454B C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
00454C                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
00454C AF                  B   159    				xor a
00454D 32 46 5F 00         B   160    				ld (serial_transfer_started),a	004551 E5                  B   161    				push hl							004552 D5                  B   162    				push de
004553 C5                  B   163    				push bc
004554 21 86 66 00         B   164    				ld hl,sector_buffer				004558 0600                B   165    				ld b,0
00455A D9                  B   166    				exx
00455B 21FFFF00            B   167    				ld hl,0ffffh					00455F D9                  B   168    				exx
004560 CD 70 3D 00         B   169    s_lgb			call receive_serial_byte
004564 20 38               B   170    				jr nz,s_gberr					004566 F5                  B   171    				push af
004567 3E01                B   172    				ld a,1
004569 32 46 5F 00         B   173    				ld (serial_transfer_started),a
00456D F1                  B   174    				pop af
00456E 77                  B   175    				ld (hl),a
00456F D9                  B   176    				exx
004570 AC                  B   177    				xor h							004571 67                  B   178    				ld h,a			
004572 0608                B   179    				ld b,8
004574 4029                B   180    rxcrcbyte		add.sis hl,hl					004576 30 08               B   181    				jr nc,rxcrcnext
004578 7C                  B   182    				ld a,h
004579 EE10                B   183    				xor 10h
00457B 67                  B   184    				ld h,a
00457C 7D                  B   185    				ld a,l
00457D EE21                B   186    				xor 21h
00457F 6F                  B   187    				ld l,a
004580 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
004582 D9                  B   189    				exx
004583 23                  B   190    				inc hl
004584 10 DA               B   191    				djnz s_lgb
004586 D9                  B   192    				exx								                           B   193    			
004587 CD 70 3D 00         B   194    				call receive_serial_byte		00458B 20 11               B   195    				jr nz,s_gberr
00458D 4F                  B   196    				ld c,a
00458E CD 70 3D 00         B   197    				call receive_serial_byte
004592 20 0A               B   198    				jr nz,s_gberr		
004594 47                  B   199    				ld b,a
                           B   200    				
004595 AF                  B   201    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004596 52ED42              B   202    				sbc.s hl,bc						004599 28 03               B   203    				jr z,s_gberr
                           B   204    			
00459B 3E86                B   205    				ld a,86h						00459D B7                  B   206    				or a							00459E C1                  B   207    s_gberr			pop bc
00459F D1                  B   208    				pop de
0045A0 E1                  B   209    				pop hl
0045A1 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0045A2 C5                  B   214    s_goodack		push bc
0045A3 014F4B00            B   215    				ld bc,04b4fh					0045A7 79                  B   216    ackbytes		ld a,c
0045A8 CD AB 3D 00         B   217    				call send_serial_byte
0045AC 78                  B   218    				ld a,b
0045AD CD AB 3D 00         B   219    				call send_serial_byte
0045B1 C1                  B   220    				pop bc
0045B2 C9                  B   221    				ret
                           B   222    
0045B3 C5                  B   223    s_badack		push bc
0045B4 01585800            B   224    				ld bc,05858h					0045B8 18 ED               B   225    				jr ackbytes
                           B   226    
0045BA C5                  B   227    s_holdack		push bc
0045BB 01575700            B   228    				ld bc,05757h					0045BF 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
0045C1                     B   249    serial_send_file
                           B   250    			
0045C1 3E01                B   251    				ld a,1							0045C3 32 25 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045C7 DD22 09 5F 00       B   254    				ld (serial_ez80_address),ix
0045CC ED53 36 5F 00       B   255    				ld (serial_fileheader+10h),de	0045D1 E5                  B   256    				push hl
0045D2 21000000            B   257    				ld hl,0
0045D6 AF                  B   258    				xor a
0045D7 ED5A                B   259    				adc hl,de
0045D9 20 05               B   260    				jr nz,s_flok
0045DB E1                  B   261    				pop hl
0045DC 3E81                B   262    				ld a,081h						0045DE B7                  B   263    				or a							0045DF C9                  B   264    				ret
                           B   265    			
0045E0 21 26 5F 00         B   266    s_flok			ld hl,serial_fileheader			0045E4 01100000            B   267    				ld bc,16
0045E8 AF                  B   268    				xor a
0045E9 CD C6 15 00         B   269    				call os_bchl_memfill
0045ED E1                  B   270    				pop hl							0045EE 11 26 5F 00         B   271    				ld de,serial_fileheader
0045F2 0610                B   272    				ld b,16
0045F4 CD 48 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
0045F8 21 3A 5F 00         B   275    				ld hl,serial_header_id			0045FC 11 3A 5F 00         B   276    				ld de,serial_fileheader+014h
004600 010C0000            B   277    				ld bc,12		
004604 EDB0                B   278    				ldir
                           B   279    			
004606 DD21 26 5F 00       B   280    				ld ix,serial_fileheader			00460B 11200000            B   281    				ld de,32
00460F CD 45 46 00         B   282    				call s_makeblock			
004613 C0                  B   283    				ret nz
004614 CD 7D 46 00         B   284    				call s_sendblock
004618 C0                  B   285    				ret nz
004619 CD AA 46 00         B   286    				call s_waitack					00461D C0                  B   287    				ret nz							                           B   288    				
00461E DD2A 09 5F 00       B   289    				ld ix,(serial_ez80_address)
004623 ED5B 36 5F 00       B   290    				ld de,(serial_fileheader+16)	004628 CD 45 46 00         B   291    s_sbloop		call s_makeblock				00462C 38 16               B   292    				jr c,s_rerr
00462E CD 7D 46 00         B   293    				call s_sendblock				004632 38 10               B   294    				jr c,s_rerr	
004634 CD AA 46 00         B   295    				call s_waitack					004638 38 0A               B   296    				jr c,s_rerr
00463A 21000000            B   297    				ld hl,0
00463E AF                  B   298    				xor a
00463F ED5A                B   299    				adc hl,de
004641 20 E5               B   300    				jr nz,s_sbloop					004643 AF                  B   301    				xor a							004644 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004645                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004645 21 86 66 00         B   312    				ld hl,sector_buffer				004649 01000100            B   313    				ld bc,256						00464D AF                  B   314    				xor a							00464E CD C6 15 00         B   315    				call os_bchl_memfill			                           B   316    				
004652 0600                B   317    				ld b,0							004654 FD21 86 66 00       B   318    				ld iy,sector_buffer	
004659 DD7E00              B   319    s_sloop			ld a,(ix)
00465C FD7700              B   320    				ld (iy),a
00465F 1B                  B   321    				dec de							004660 21000000            B   322    				ld hl,0
004664 AF                  B   323    				xor a
004665 ED5A                B   324    				adc hl,de
004667 28 12               B   325    				jr z,s_mbend	
004669 FD23                B   326    				inc iy							00466B C5                  B   327    				push bc
00466C 01010000            B   328    				ld bc,1
004670 DD09                B   329    				add ix,bc						004672 C1                  B   330    				pop bc							004673 20 04               B   331    				jr nz,s_sbok
004675 3E84                B   332    				ld a,84h						004677 B7                  B   333    				or a
004678 C9                  B   334    				ret
004679 10 DE               B   335    s_sbok			djnz s_sloop
00467B AF                  B   336    s_mbend			xor a
00467C C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
00467D                     B   341    s_sendblock
                           B   342    
00467D E5                  B   343    				push hl
00467E D5                  B   344    				push de							00467F C5                  B   345    				push bc				
004680 21 86 66 00         B   346    				ld hl,sector_buffer			
004684 1E00                B   347    				ld e,0
004686 7E                  B   348    s_sblklp		ld a,(hl)
004687 CD AB 3D 00         B   349    				call send_serial_byte
00468B 23                  B   350    				inc hl
00468C 1D                  B   351    				dec e
00468D 20 F7               B   352    				jr nz,s_sblklp
00468F 11 86 66 00         B   353    				ld de,sector_buffer
004693 01000000            B   354    				ld bc,0
004697 CD 6C 15 00         B   355    				call crc_checksum
00469B 7D                  B   356    				ld a,l
00469C CD AB 3D 00         B   357    				call send_serial_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046A0 7C                  B   358    				ld a,h
0046A1 CD AB 3D 00         B   359    				call send_serial_byte
0046A5 AF                  B   360    				xor a
0046A6 C1                  B   361    s_popall		pop bc
0046A7 D1                  B   362    				pop de
0046A8 E1                  B   363    				pop hl
0046A9 C9                  B   364    				ret
                           B   365    	
                           B   366    
0046AA                     B   367    s_waitack
0046AA E5                  B   368    				push hl
0046AB D5                  B   369    				push de
0046AC C5                  B   370    				push bc
0046AD CD 70 3D 00         B   371    				call receive_serial_byte		0046B1 20 F3               B   372    				jr nz,s_popall
0046B3 47                  B   373    				ld b,a
0046B4 CD 70 3D 00         B   374    				call receive_serial_byte
0046B8 20 EC               B   375    				jr nz,s_popall
0046BA 4F                  B   376    				ld c,a
0046BB 264F                B   377    				ld h,'O'
0046BD 2E4B                B   378    				ld l,'K'
0046BF AF                  B   379    				xor a
0046C0 52ED42              B   380    				sbc.s hl,bc						0046C3 28 E1               B   381    				jr z,s_popall					                           B   382    			
0046C5 3E85                B   383    				ld a,085h						0046C7 B7                  B   384    				or a
0046C8 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B     8    ; 0.06 - Fixed "fs_get_volume_label"
                           B     9    ; 0.05 - Fixed format command
                           B    10    ; 0.04 - File system error codes are now in the
                           B    11    ; 0.03 - ADL mode
                           B    12    ; 0.02 - removed references to banks, added 24 
                           B    13    ; 0.01 - first version based on FLOS routines v
                           B    14    ;
                           B    15    ; Known limitations:
                           B    16    ; ------------------
                           B    17    ; If a disk full error is returned during a fil
                           B    18    ; Allows a file to be created in root even if t
                           B    19    ;        
                           B    20    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    21    ;
                           B    22    ; All routines return carry clear / zero flag s
                           B    23    ;
                           B    24    ; If carry set there was a driver error, A = Er
                           B    25    ;
                           B    26    ; If carry clear, Zero flag not set: A= File sy
                           B    27    ;
                           B    28    ;					$c1  - Disk full
                           B    29    ;					$c2  - file not found
                           B    30    ;             	    $c3  - (root) dir table is 
                           B    31    ;					$c4  - directory requested 
                           B    32    ;             	    $c5  - cant delete dir, it 
                           B    33    ;					$c6  - not a file
                           B    34    ;					$c7  - file length is zero
                           B    35    ;              	    $c8  - out of memory
                           B    36    ;					$c9  - filename already exi
                           B    37    ;					$ca  - already at root dire
                           B    38    ;                  	$cb  - directory not found
                           B    39    ;					$cc  - requested bytes beyo
                           B    40    ;					$cd  - invalid filename
                           B    41    ;					$ce  - unknown/incorrect di
                           B    42    ;					$cf  - invalid volume
                           B    43    ;                 	$d0  - device not present	                           B    44    ;					$d1  - directory not found	                           B    45    ;                 	$d2  - end of directory lis
                           B    46    ;                 	$d3  - device does not use 
                           B    47    ;                  	$d4  - cant find volume lab
                           B    48    ;                   $d5  - sector out of range
                           B    49    
                           B    50    ;----------------------------------------------
                           B    51    ; Main routines called by external programs
                           B    52    ;----------------------------------------------
                           B    53    
0046CA                     B    54    fs_format_device_command
                           B    55    
                           B    56    ; Creates a single partition (truncated to 2GB)
                           B    57    
                           B    58    
0046CA 3A 57 5F 00         B    59    				ld a,(device_count)				0046CE 47                  B    60    				ld b,a							0046CF DD21 07 60 00       B    61    				ld ix,host_device_hardware_info
0046D4 3A 56 5F 00         B    62    fdevinfo		ld a,(current_driver)
0046D8 DDBE00              B    63    				cp (ix)
0046DB 28 09               B    64    				jr z,got_dev_info
0046DD ED3220              B    65    				lea ix,ix+32
0046E0 10 F2               B    66    				djnz fdevinfo
0046E2 AF                  B    67    				xor a
0046E3 3ED0                B    68    				ld a,0d0h						0046E5 C9                  B    69    				ret	
                           B    70    	
0046E6 CD 86 51 00         B    71    got_dev_info	call fs_clear_sector_buffer		0046EA 11000000            B    72    				ld de,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0046EE CD DE 47 00         B    73    form_ws			call set_lba_and_write_sector
0046F2 D8                  B    74    				ret c
0046F3 13                  B    75    				inc de
0046F4 7A                  B    76    				ld a,d
0046F5 FE03                B    77    				cp 3
0046F7 20 F5               B    78    				jr nz,form_ws
                           B    79    	
0046F9 21 35 54 00         B    80    				ld hl,bootsector_stub			0046FD 11 86 66 00         B    81    				ld de,sector_buffer				004701 013F0000            B    82    				ld bc,03fh
004705 EDB0                B    83    				ldir
                           B    84    	
004707 DD7E04              B    85    				ld a,(ix+4)						00470A B7                  B    86    				or a
00470B 20 0C               B    87    				jr nz,above_2gb
00470D 2100003F            B    88    				ld hl,3f0000h					004711 DD1701              B    89    				ld de,(ix+1)					004714 AF                  B    90    				xor a			
004715 ED52                B    91    				sbc hl,de						004717 30 08               B    92    				jr nc,lessthan2gb				004719 3E40                B    93    above_2gb		ld a,40h						00471B 1100003F            B    94    				ld de,3f0000h					00471F 18 11               B    95    				jr spcvalok
                           B    96    
004721 DD4E03              B    97    lessthan2gb		ld c,(ix+3)						004724 0C                  B    98    				inc c							004725 3E01                B    99    spc_loop		ld a,1							004727 B9                  B   100    spc_comp		cp c							004728 28 08               B   101    				jr z,spcvalok
00472A 07                  B   102    				rlca
00472B FE80                B   103    				cp 080h							00472D 20 F8               B   104    				jr nz,spc_comp
00472F 0C                  B   105    				inc c			
004730 18 F3               B   106    				jr spc_loop						                           B   107    							
004732 DD21 86 66 00       B   108    spcvalok		ld ix,sector_buffer
004737 DD770D              B   109    				ld (ix+0dh),a					                           B   110    				
00473A CD E3 15 00         B   111    				call os_get_xde_msb				00473E 4F                  B   112    				ld c,a							00473F B7                  B   113    				or a							004740 20 08               B   114    				jr nz,ts_dword					004742 DD7313              B   115    				ld (ix+13h),e					004745 DD7214              B   116    				ld (ix+14h),d
004748 18 07               B   117    				jr ts_done
00474A DD1F20              B   118    ts_dword		ld (ix+20h),de					00474D DD362300            B   119    				ld (ix+23h),0
                           B   120    
004751 EB                  B   121    ts_done			ex de,hl						004752 11000000            B   122    				ld de,0						
004756 DD560D              B   123    				ld d,(ix+0dh)					004759 01000000            B   124    				ld bc,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00475D AF                  B   125    div_tscls		xor a							00475E ED52                B   126    				sbc hl,de
004760 28 05               B   127    				jr z,gotfats
004762 38 03               B   128    				jr c,gotfats	
004764 03                  B   129    				inc bc
004765 18 F6               B   130    				jr div_tscls
004767 03                  B   131    gotfats			inc bc
004768 DD7116              B   132    				ld (ix+16h),c					00476B DD7017              B   133    				ld (ix+17h),b
00476E ED43 85 54 00       B   134    				ld (fs_sectors_per_fat),bc
                           B   135    				
004773 010055AA            B   136    				ld bc,0aa5500h
004777 ED43 83 68 00       B   137    				ld (sector_buffer+1fdh),bc		00477C 11000000            B   138    				ld de,0
004780 CD DE 47 00         B   139    				call set_lba_and_write_sector	004784 D8                  B   140    				ret c
                           B   141    				
004785 21000000            B   142    				ld hl,0
004789 DD6E0E              B   143    				ld l,(ix+0eh)					00478C DD660F              B   144    				ld h,(ix+0fh)
00478F 19                  B   145    				add hl,de
004790 EB                  B   146    				ex de,hl						                           B   147    				
004791 CD 86 51 00         B   148    				call fs_clear_sector_buffer		004795 DD3600FF            B   149    				ld (ix+0),0ffh
004799 DD3601F8            B   150    				ld (ix+1),0f8h
00479D DD3602FF            B   151    				ld (ix+2),0ffh
0047A1 DD3603FF            B   152    				ld (ix+3),0ffh
0047A5 CD DE 47 00         B   153    				call set_lba_and_write_sector	0047A9 D8                  B   154    				ret c
                           B   155    
0047AA 2A 85 54 00         B   156    				ld hl,(fs_sectors_per_fat)	
0047AE 19                  B   157    				add hl,de
0047AF EB                  B   158    				ex de,hl
0047B0 CD DE 47 00         B   159    				call set_lba_and_write_sector 	0047B4 D8                  B   160    				ret c	
                           B   161    				
0047B5 D5                  B   162    				push de							0047B6 CD 86 51 00         B   163    				call fs_clear_sector_buffer
0047BA 21 8B 54 00         B   164    				ld hl,fs_sought_filename
0047BE 11 86 66 00         B   165    				ld de,sector_buffer
0047C2 010B0000            B   166    				ld bc,11
0047C6 EDB0                B   167    				ldir							0047C8 D1                  B   168    				pop de							0047C9 DD360B08            B   169    				ld (ix+0bh),8					0047CD DD361821            B   170    				ld (ix+018h),021h				0047D1 2A 85 54 00         B   171    				ld hl,(fs_sectors_per_fat)		0047D5 19                  B   172    				add hl,de
0047D6 EB                  B   173    				ex de,hl
0047D7 CD DE 47 00         B   174    				call set_lba_and_write_sector	0047DB D8                  B   175    				ret c	
                           B   176    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047DC AF                  B   177    				xor a							0047DD C9                  B   178    				ret
                           B   179    	
                           B   180    
                           B   181    
0047DE                     B   182    set_lba_and_write_sector
                           B   183    
0047DE DDE5                B   184    				push ix
0047E0 DD21 32 61 00       B   185    				ld ix,sector_lba0				0047E5 DD1F00              B   186    				ld (ix),de						0047E8 DD360300            B   187    				ld (ix+3),0
0047EC DDE1                B   188    				pop ix
0047EE CD 19 54 00         B   189    				call fs_write_sector
0047F2 C9                  B   190    				ret
                           B   191    				
                           B   192    				
                           B   193    ;----------------------------------------------
                           B   194    
0047F3                     B   195    fs_get_partition_info
                           B   196    
                           B   197    ; Set A to partition: $00 to $03
                           B   198    ; On return: If A = $00, xHL = Address of reque
                           B   199    ;            If A = $25, A partition table is n
                           B   200    ;            If A = $13, Disk format is bad 
                           B   201    ;            If carry flag set, there was a har
                           B   202    
                           B   203    
0047F3 32 8A 60 00         B   204    				ld (partition_temp),a
                           B   205    				
0047F7 21000000            B   206    				ld hl,0							0047FB 22 32 61 00         B   207    				ld (sector_lba0),hl
0047FF 7D                  B   208    				ld a,l
004800 32 35 61 00         B   209    				ld (sector_lba3),a
004804 CD 00 54 00         B   210    				call fs_read_sector
004808 D8                  B   211    				ret c
                           B   212    			
004809 CD 44 48 00         B   213    				call fs_check_fat_sig			00480D 20 42               B   214    				jr nz,formbad
                           B   215    			
00480F CD 35 48 00         B   216    				call check_fat16_id				004813 28 1C               B   217    				jr z,at_pbs						                           B   218    				
004815 3A 48 68 00         B   219    				ld a,(sector_buffer+01c2h)		004819 E604                B   220    				and 4							00481B 28 34               B   221    				jr z,formbad	
00481D 11000000            B   222    				ld de,0
004821 3A 8A 60 00         B   223    				ld a,(partition_temp)
004825 5F                  B   224    				ld e,a
004826 1610                B   225    				ld d,16
004828 ED5C                B   226    				mlt de
00482A 21 44 68 00         B   227    				ld hl,sector_buffer+01beh
00482E 19                  B   228    				add hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00482F AF                  B   229    				xor a
004830 C9                  B   230    				ret
                           B   231    					
004831 AF                  B   232    at_pbs			xor a
004832 3ED3                B   233    				ld a,0d3h						004834 C9                  B   234    				ret
                           B   235    
                           B   236    
                           B   237    
004835                     B   238    check_fat16_id
                           B   239    		
004835 21 BC 66 00         B   240    				ld hl,sector_buffer+036h		004839 11 56 59 00         B   241    				ld de,fat16_txt			
00483D 0605                B   242    				ld b,5
00483F CD 29 12 00         B   243    				call os_compare_strings
004843 C9                  B   244    				ret
                           B   245    				
                           B   246    ;----------------------------------------------
                           B   247    
                           B   248    
004844                     B   249    fs_check_fat_sig
                           B   250    
004844 2A 84 68 00         B   251    				ld hl,(sector_buffer+01feh)		004848 1155AA00            B   252    				ld de,0aa55h
00484C AF                  B   253    				xor a
00484D 52ED52              B   254    				sbc.s hl,de						004850 C9                  B   255    				ret
                           B   256    			
                           B   257    			
                           B   258    			
004851 AF                  B   259    formbad			xor a
004852 3ECE                B   260    				ld a,0ceh						004854 C9                  B   261    				ret
                           B   262    
                           B   263    ;----------------------------------------------
                           B   264    
                           B   265    
004855                     B   266    fs_check_disk_format
                           B   267    
                           B   268    ; ensures disk is FAT16, sets up constants..
                           B   269    	
004855 C5                  B   270    				push bc
004856 D5                  B   271    				push de
004857 E5                  B   272    				push hl
004858 CD 60 48 00         B   273    				call go_checkf
00485C E1                  B   274    				pop hl
00485D D1                  B   275    				pop de
00485E C1                  B   276    				pop bc
00485F C9                  B   277    				ret
                           B   278    				
004860 CD 27 49 00         B   279    go_checkf		call fs_read_partition_bootsect
004864 D8                  B   280    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004865 B7                  B   281    				or a
004866 C0                  B   282    				ret nz
                           B   283    				
004867 CD 44 48 00         B   284    				call fs_check_fat_sig			00486B 20 E4               B   285    				jr nz,formbad		
                           B   286    			
00486D CD 35 48 00         B   287    				call check_fat16_id				004871 20 DE               B   288    				jr nz,formbad
                           B   289    			
004873 DD21 86 66 00       B   290    				ld ix,sector_buffer
004878 DD270B              B   291    				ld hl,(ix+0bh)					00487B 11000200            B   292    				ld de,512						00487F AF                  B   293    				xor a
004880 52ED52              B   294    				sbc.s hl,de						004883 20 CC               B   295    				jr nz,formbad
                           B   296    			
004885 DD7E0D              B   297    				ld a,(ix+0dh)					004888 32 74 54 00         B   298    				ld (fs_cluster_size),a
00488C CB27                B   299    				sla a
00488E 32 76 54 00         B   300    				ld (fs_bytes_per_cluster+1),a
                           B   301    							
004892 21000000            B   302    				ld hl,0
004896 DD6E0E              B   303    				ld l,(ix+0eh)					004899 DD660F              B   304    				ld h,(ix+0fh)
00489C 22 78 54 00         B   305    				ld (fs_fat1_position),hl		0048A0 11000000            B   306    				ld de,0
0048A4 DD5E16              B   307    				ld e,(ix+16h)					0048A7 DD5617              B   308    				ld d,(ix+17h)
0048AA ED53 85 54 00       B   309    				ld (fs_sectors_per_fat),de
0048AF 19                  B   310    				add hl,de
0048B0 22 7B 54 00         B   311    				ld (fs_fat2_position),hl		0048B4 19                  B   312    				add hl,de
0048B5 22 7E 54 00         B   313    				ld (fs_root_dir_position),hl 	0048B9 EB                  B   314    				ex de,hl
0048BA DD6E11              B   315    				ld l,(ix+11h)					0048BD DD6612              B   316    				ld h,(ix+12h)					0048C0 7C                  B   317    				ld a,h
0048C1 B5                  B   318    				or l
0048C2 28 8D               B   319    				jr z,formbad					0048C4 29                  B   320    				add hl,hl						0048C5 29                  B   321    				add hl,hl						0048C6 29                  B   322    				add hl,hl
0048C7 29                  B   323    				add hl,hl
0048C8 EB                  B   324    				ex de,hl
0048C9 7A                  B   325    				ld a,d
0048CA 32 84 54 00         B   326    				ld (fs_root_dir_sectors),a		0048CE 01000000            B   327    				ld bc,0
0048D2 4A                  B   328    				ld c,d
0048D3 09                  B   329    				add hl,bc				
0048D4 22 81 54 00         B   330    				ld (fs_data_area),hl			                           B   331    												0048D8 21000000            B   332    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048DC 01000000            B   333    				ld bc,0
0048E0 DD4E22              B   334    				ld c,(ix+022h)					0048E3 DD4623              B   335    				ld b,(ix+023h)
0048E6 DD6E13              B   336    				ld l,(ix+013h)					0048E9 DD6614              B   337    				ld h,(ix+014h)
0048EC 7C                  B   338    				ld a,h							0048ED B5                  B   339    				or l
0048EE 20 06               B   340    				jr nz,got_tsfbs
0048F0 DD6E20              B   341    				ld l,(ix+020h)					0048F3 DD6621              B   342    				ld h,(ix+021h)
0048F6 ED5B 81 54 00       B   343    got_tsfbs 		ld de,(fs_data_area)
0048FB AF                  B   344    				xor a							0048FC 52ED52              B   345    				sbc.s hl,de						0048FF 30 02               B   346    				jr nc,nomxcb
004901 520B                B   347    				dec.s bc
004903 3A 74 54 00         B   348    nomxcb			ld a,(fs_cluster_size)
004907 CB3F                B   349    fmaxcl			srl a
004909 28 08               B   350    				jr z,got_cmaxc					00490B CB39                B   351    				srl c				
00490D CB1C                B   352    				rr h
00490F CB1D                B   353    				rr l
004911 18 F4               B   354    				jr fmaxcl
004913 E5                  B   355    got_cmaxc		push hl							004914 11F0FF00            B   356    				ld de,0fff0h
004918 AF                  B   357    				xor a
004919 52ED52              B   358    				sbc.s hl,de						00491C 38 02               B   359    				jr c,cmaxok
00491E E1                  B   360    				pop hl
00491F D5                  B   361    				push de
004920 E1                  B   362    cmaxok			pop hl
004921 22 88 54 00         B   363    				ld (fs_max_data_clusters),hl
004925 AF                  B   364    				xor a
004926 C9                  B   365    				ret				
                           B   366    
                           B   367    ;----------------------------------------------
                           B   368    
004927                     B   369    fs_read_partition_bootsector
                           B   370    
004927 CD E4 1A 00         B   371    				call fs_calc_volume_offset		00492B 21 87 5F 00         B   372    				ld hl,volume_mount_list
00492F 19                  B   373    				add hl,de
004930 7E                  B   374    				ld a,(hl)
004931 B7                  B   375    				or a							004932 20 04               B   376    				jr nz,fs_volpre
004934 AF                  B   377    				xor a
004935 3ECF                B   378    				ld a,cfh						004937 C9                  B   379    				ret
                           B   380    			
004938 11080000            B   381    fs_volpre		ld de,8							00493C 19                  B   382    				add hl,de
00493D 11 32 61 00         B   383    				ld de,sector_lba0
004941 01040000            B   384    				ld bc,4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004945 EDB0                B   385    				ldir
004947 CD 00 54 00         B   386    				call fs_read_sector
00494B C9                  B   387    				ret	
                           B   388    
                           B   389    ;----------------------------------------------
                           B   390    
00494C                     B   391    fs_calc_free_space
                           B   392    
                           B   393    ;returns free space in KB in HL:DE
                           B   394    
00494C ED5B 88 54 00       B   395    				ld de,(fs_max_data_clusters)
004951 13                  B   396    				inc de
004952 13                  B   397    				inc de							004953 D5                  B   398    				push de
004954 DDE1                B   399    				pop ix
                           B   400    			
004956 AF                  B   401    				xor a
004957 32 CD 54 00         B   402    cfs_lp2			ld (fs_working_sector),a
00495B 2A 78 54 00         B   403    				ld hl,(fs_fat1_position)
00495F CD D6 53 00         B   404    				call set_abs_lba_and_read_secto
004963 D8                  B   405    				ret c
                           B   406    				
004964 21 86 66 00         B   407    				ld hl,sector_buffer
004968 0600                B   408    				ld b,0
00496A AF                  B   409    cfs_lp1			xor a
00496B B6                  B   410    				or a,(hl)						00496C 23                  B   411    				inc hl							00496D 20 03               B   412    				jr nz,cfs_ciu					00496F B6                  B   413    				or a,(hl)
004970 28 02               B   414    				jr z,cfs_ddcc
004972 DD2B                B   415    cfs_ciu			dec ix							004974 23                  B   416    cfs_ddcc		inc hl
004975 1B                  B   417    				dec de
004976 7A                  B   418    				ld a,d
004977 B3                  B   419    				or e
004978 28 09               B   420    				jr z,cfs_ok						00497A 10 EE               B   421    				djnz cfs_lp1
00497C 3A CD 54 00         B   422    				ld a,(fs_working_sector)
004980 3C                  B   423    				inc a
004981 18 D4               B   424    				jr cfs_lp2
                           B   425    				
004983 3A 74 54 00         B   426    cfs_ok			ld a,(fs_cluster_size)			004987 CB3F                B   427    cltoslp			srl a
004989 28 04               B   428    				jr z,powdone
00498B DD29                B   429    				add ix,ix
00498D 18 F8               B   430    				jr cltoslp	
00498F FD21 4E 61 00       B   431    powdone			ld iy,xrr_temp
004994 FD3E00              B   432    				ld (iy),ix						004997 FDCB023E            B   433    				srl (iy+2)
00499B FDCB011E            B   434    				rr (iy+1)
00499F FDCB001E            B   435    				rr (iy+0)						0049A3 FD1700              B   436    				ld de,(iy)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049A6 AF                  B   437    				xor a
0049A7 C9                  B   438    				ret
                           B   439    
                           B   440    ;----------------------------------------------
                           B   441    
0049A8                     B   442    fs_change_dir_command
                           B   443    
                           B   444    ; INPUT: HL = directory name ascii (zero/space 
                           B   445    			
                           B   446    			
0049A8 CD 98 51 00         B   447    				call fs_find_filename			0049AC D8                  B   448    				ret c							0049AD FEC2                B   449    				cp 0c2h							0049AF 20 04               B   450    				jr nz,founddir
0049B1 AF                  B   451    				xor a							0049B2 3ED1                B   452    				ld a,0d1h						0049B4 C9                  B   453    				ret
0049B5 AF                  B   454    founddir		xor a							0049B6 3E04                B   455    				ld a,04h						0049B8 DDCB0B66            B   456    				bit 4,(ix+0bh)
0049BC C8                  B   457    				ret z
0049BD 11000000            B   458    				ld de,0
0049C1 DD5E1A              B   459    				ld e,(ix+01ah)
0049C4 DD561B              B   460    				ld d,(ix+01bh)					0049C7 CD B6 1A 00         B   461    				call fs_update_dir_cluster
0049CB AF                  B   462    				xor a
0049CC C9                  B   463    				ret
                           B   464    
                           B   465    
                           B   466    ;----------------------------------------------
                           B   467    	
                           B   468    	
0049CD                     B   469    fs_goto_root_dir_command
                           B   470    
0049CD D5                  B   471    				push de
0049CE 11000000            B   472    				ld de,0
0049D2 CD B6 1A 00         B   473    				call fs_update_dir_cluster
0049D6 D1                  B   474    				pop de
0049D7 AF                  B   475    				xor a
0049D8 C9                  B   476    				ret
                           B   477    
                           B   478    ;----------------------------------------------
                           B   479    	
                           B   480    	
0049D9                     B   481    fs_parent_dir_command
                           B   482    
0049D9 CD AA 1A 00         B   483    				call fs_get_dir_cluster
0049DD 7A                  B   484    				ld a,d
0049DE B3                  B   485    				or e
0049DF 20 03               B   486    				jr nz,pdnaroot
0049E1 3ECA                B   487    				ld a,0cah						0049E3 C9                  B   488    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049E4 212E2E20            B   489    pdnaroot		ld hl,0202e2eh					0049E8 22 8B 54 00         B   490    				ld (fs_sought_filename),hl		0049EC 21 8E 54 00         B   491    				ld hl,fs_sought_filename+3		0049F0 3E20                B   492    				ld a,32
0049F2 01080000            B   493    				ld bc,8
0049F6 CD C6 15 00         B   494    				call os_bchl_memfill
0049FA 18 AC               B   495    				jr fs_change_dir_command
                           B   496    				
                           B   497    		
                           B   498    ;----------------------------------------------
                           B   499    		
0049FC                     B   500    fs_open_file_command
                           B   501    
                           B   502    ; INPUT: xHL = directory name ascii (zero/space
                           B   503    ; OUTPUT: C:xDE  = File length
                           B   504    ;            HL  = Start cluster of file
                           B   505    ;            Internal vars (file pointer reset 
                           B   506    
                           B   507    			
0049FC CD 98 51 00         B   508    				call fs_find_filename			004A00 D8                  B   509    				ret c							004A01 C0                  B   510    				ret nz							                           B   511    								
004A02 3EC6                B   512    				ld a,0c6h						004A04 DDCB0B66            B   513    				bit 4,(ix+0bh)
004A08 C0                  B   514    				ret nz
                           B   515    
004A09 AF                  B   516    				xor a
004A0A 32 E1 54 00         B   517    				ld (fs_filepointer_valid),a		004A0E 21000000            B   518    				ld hl,0
004A12 22 AF 54 00         B   519    				ld (fs_file_pointer),hl			004A16 32 B2 54 00         B   520    				ld (fs_file_pointer+3),a		                           B   521    				
004A1A DD171C              B   522    				ld de,(ix+01ch)
004A1D D5                  B   523    				push de
004A1E E1                  B   524    				pop hl
004A1F DD4E1F              B   525    				ld c,(ix+01fh)					004A22 ED53 B3 54 00       B   526    				ld (fs_file_length),de			004A27 79                  B   527    				ld a,c
004A28 32 B6 54 00         B   528    				ld (fs_file_length+3),a			004A2C B7                  B   529    				or a							004A2D 28 04               B   530    				jr z,fs_dflsm					004A2F 21FFFFFF            B   531    				ld hl,0ffffffh
004A33 22 BB 54 00         B   532    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   533    				
004A37 21000000            B   534    				ld hl,0
004A3B DD6E1A              B   535    				ld l,(ix+01ah)		
004A3E DD661B              B   536    				ld h,(ix+01bh)
004A41 22 BE 54 00         B   537    				ld (fs_file_start_cluster),hl	004A45 AF                  B   538    				xor a
004A46 C9                  B   539    				ret
                           B   540    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   541    	
                           B   542    ;----------------------------------------------
                           B   543    
004A47                     B   544    fs_read_data_command		
                           B   545    
                           B   546    ;*******************************************
                           B   547    ;*** 'fs_open_file' must be called first ***
                           B   548    ;*******************************************
                           B   549    		
004A47 2A BB 54 00         B   550    fs_load			ld hl,(fs_file_transfer_length)
004A4B 11000000            B   551    				ld de,0
004A4F AF                  B   552    				xor a
004A50 ED5A                B   553    				adc hl,de
004A52 20 04               B   554    				jr nz,fs_btrok
004A54 AF                  B   555    fs_fliz			xor a							004A55 3EC7                B   556    				ld a,0c7h						004A57 C9                  B   557    				ret
                           B   558    			 
004A58 2A C4 54 00         B   559    fs_btrok		ld hl,(fs_ez80_address)			004A5C 22 C7 54 00         B   560    				ld (fs_ez80_working_address),hl
                           B   561    			
004A60 2A B3 54 00         B   562    				ld hl,(fs_file_length)			004A64 ED4B AF 54 00       B   563    				ld bc,(fs_file_pointer)			004A69 3A B2 54 00         B   564    				ld a,(fs_file_pointer+3)		004A6D 5F                  B   565    				ld e,a
004A6E 3A B6 54 00         B   566    				ld a,(fs_file_length+3)
004A72 B7                  B   567    				or a							004A73 ED42                B   568    				sbc hl,bc
004A75 9B                  B   569    				sbc a,e
004A76 38 09               B   570    				jr c,fs_fpbad
004A78 01000000            B   571    				ld bc,0
004A7C AF                  B   572    				xor a
004A7D ED4A                B   573    				adc hl,bc
004A7F 20 04               B   574    				jr nz,fs_fpok
004A81 AF                  B   575    fs_fpbad		xor a
004A82 3ECC                B   576    				ld a,0cch						004A84 C9                  B   577    				ret
                           B   578    			
                           B   579    	
004A85 3A E1 54 00         B   580    fs_fpok			ld a,(fs_filepointer_valid)		004A89 B7                  B   581    				or a							004A8A 28 1B               B   582    				jr z,seek_strt
                           B   583    			
004A8C ED5B C7 54 00       B   584    				ld de,(fs_ez80_working_address)
004A91 ED4B E2 54 00       B   585    				ld bc,(fs_sector_pos_cnt)		004A96 C5                  B   586    				push bc
004A97 ED4B CA 54 00       B   587    				ld bc,(fs_in_sector_offset)
004A9C 21 86 68 00         B   588    				ld hl,sector_buffer+0200h		004AA0 AF                  B   589    				xor a
004AA1 ED42                B   590    				sbc hl,bc		
004AA3 C3 33 4B 00         B   591    				jr fs_dadok
                           B   592    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   593    			
004AA7 3E01                B   594    seek_strt		ld a,1
004AA9 32 E1 54 00         B   595    				ld (fs_filepointer_valid),a
004AAD 2A BE 54 00         B   596    				ld hl,(fs_file_start_cluster)	004AB1 22 C1 54 00         B   597    				ld (fs_file_working_cluster),hl
                           B   598    			
004AB5 3A B2 54 00         B   599    				ld a,(fs_file_pointer+3)		004AB9 2A AF 54 00         B   600    				ld hl,(fs_file_pointer)			004ABD ED4B 75 54 00       B   601    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004AC2 AF                  B   602    				xor a
004AC3 ED42                B   603    				sbc hl,bc						004AC5 DE00                B   604    				sbc a,0
004AC7 38 14               B   605    				jr c,fs_fpgbo
004AC9 E5                  B   606    fs_fpgnb		push hl				
004ACA 2A C1 54 00         B   607    				ld hl,(fs_file_working_cluster)
004ACE CD A8 52 00         B   608    				call get_fat_entry_for_cluster
004AD2 30 02               B   609    				jr nc,fs_ghok					004AD4 E1                  B   610    				pop hl
004AD5 C9                  B   611    				ret
004AD6 22 C1 54 00         B   612    fs_ghok			ld (fs_file_working_cluster),hl
004ADA E1                  B   613    				pop hl
004ADB 18 E0               B   614    				jr fs_fpblp
                           B   615    			
004ADD 09                  B   616    fs_fpgbo		add hl,bc						004ADE 4C                  B   617    				ld c,h
004ADF CB39                B   618    				srl c							004AE1 3A 74 54 00         B   619    				ld a,(fs_cluster_size)
004AE5 91                  B   620    				sub c
004AE6 47                  B   621    				ld b,a							004AE7 7C                  B   622    				ld a,h
004AE8 E601                B   623    				and 01h
004AEA 67                  B   624    				ld h,a
004AEB 22 CA 54 00         B   625    				ld (fs_in_sector_offset),hl		                           B   626    				
004AEF 79                  B   627    fs_flns			ld a,c				
004AF0 2A C1 54 00         B   628    				ld hl,(fs_file_working_cluster)
004AF4 CD 7F 53 00         B   629    				call cluster_and_offset_to_lba
004AF8 CD 00 54 00         B   630    				call fs_read_sector				004AFC D8                  B   631    				ret c							                           B   632    			
004AFD C5                  B   633    				push bc							004AFE 11000000            B   634    				ld de,0
004B02 2A CA 54 00         B   635    				ld hl,(fs_in_sector_offset)		004B06 5D                  B   636    				ld e,l
004B07 54                  B   637    				ld d,h
004B08 21000200            B   638    				ld hl,512
004B0C AF                  B   639    				xor a
004B0D ED52                B   640    				sbc hl,de						004B0F 44                  B   641    				ld b,h
004B10 4D                  B   642    				ld c,l							004B11 21 86 66 00         B   643    				ld hl,sector_buffer				004B15 19                  B   644    				add hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B16 ED5B C7 54 00       B   645    				ld de,(fs_ez80_working_address)
004B1B EDA0                B   646    fs_cblp			ldi 							                           B   647    
004B1D 7A                  B   648    				ld a,d							004B1E B3                  B   649    				or e
004B1F 20 0C               B   650    				jr nz,fs_edaok
004B21 ED53 C7 54 00       B   651    				ld (fs_ez80_working_address),de
004B26 3A C9 54 00         B   652    				ld a,(fs_ez80_working_address+2
004B2A B7                  B   653    				or a
004B2B 28 43               B   654    				jr z,fs_mem_error
                           B   655    
004B2D CD 08 53 00         B   656    fs_edaok		call transfer_length_countdown	004B31 28 30               B   657    				jr z,fs_bdld
004B33 78                  B   658    fs_dadok		ld a,b							004B34 B1                  B   659    				or c
004B35 20 E4               B   660    				jr nz,fs_cblp
                           B   661    			
004B37 ED43 CA 54 00       B   662    				ld (fs_in_sector_offset),bc		004B3C ED53 C7 54 00       B   663    				ld (fs_ez80_working_address),de
004B41 C1                  B   664    				pop bc							004B42 0C                  B   665    				inc c							004B43 10 AA               B   666    				djnz fs_flns					                           B   667    			
004B45 2A C1 54 00         B   668    				ld hl,(fs_file_working_cluster)
004B49 CD A8 52 00         B   669    				call get_fat_entry_for_cluster	004B4D D8                  B   670    				ret c							004B4E 22 C1 54 00         B   671    				ld (fs_file_working_cluster),hl
004B52 CD 51 50 00         B   672    				call fs_compare_hl_fff8			004B56 D2 81 4A 00         B   673    				jp nc,fs_fpbad			
004B5A 0E00                B   674    fs_nfbok		ld c,0							004B5C 3A 74 54 00         B   675    				ld a,(fs_cluster_size)	
004B60 47                  B   676    				ld b,a							004B61 18 8C               B   677    				jr fs_flns		
                           B   678    			
004B63 ED43 CA 54 00       B   679    fs_bdld			ld (fs_in_sector_offset),bc		004B68 C1                  B   680    				pop bc							004B69 ED43 E2 54 00       B   681    				ld (fs_sector_pos_cnt),bc
004B6E AF                  B   682    				xor a							004B6F C9                  B   683    				ret
                           B   684    				
004B70 3EC8                B   685    fs_mem_error	ld a,0c8h						004B72 C1                  B   686    fs_flerr		pop bc
004B73 B7                  B   687    				or a							004B74 C9                  B   688    				ret			
                           B   689    			
                           B   690    ;----------------------------------------------
                           B   691    
004B75                     B   692    fs_make_dir_command		
                           B   693    				
004B75 CD 98 51 00         B   694    				call fs_find_filename			004B79 D8                  B   695    				ret c
004B7A FEC2                B   696    				cp 0c2h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B7C 28 04               B   697    				jr z,mdirfnde
004B7E AF                  B   698    				xor a							004B7F 3EC9                B   699    				ld a,0c9h						004B81 C9                  B   700    				ret
                           B   701    			
004B82 CD 5E 50 00         B   702    mdirfnde		call fs_find_free_cluster		004B86 D8                  B   703    				ret c							004B87 C0                  B   704    				ret nz							                           B   705    							
004B88 2A D1 54 00         B   706    				ld hl,(fs_free_cluster)
004B8C 22 D4 54 00         B   707    				ld (fs_new_file_cluster),hl
                           B   708    			
004B90 CD AF 50 00         B   709    				call fs_find_free_dir_entry		004B94 D8                  B   710    				ret c							004B95 C0                  B   711    				ret nz							                           B   712    			
004B96 DDE5                B   713    				push ix							004B98 D1                  B   714    				pop de
004B99 21 8B 54 00         B   715    				ld hl,fs_sought_filename
004B9D 010B0000            B   716    				ld bc,11
004BA1 EDB0                B   717    				ldir
004BA3 AF                  B   718    				xor a							004BA4 0615                B   719    				ld b,21
004BA6 12                  B   720    clrdiren		ld (de),a
004BA7 13                  B   721    				inc de
004BA8 10 FC               B   722    				djnz clrdiren
004BAA DD360B10            B   723    				ld (ix+0bh),010h				004BAE DD361821            B   724    				ld (ix+018h),021h				004BB2 ED5B D4 54 00       B   725    				ld de,(fs_new_file_cluster)
004BB7 DD731A              B   726    				ld (ix+01ah),e					004BBA DD721B              B   727    				ld (ix+01bh),d
004BBD CD 19 54 00         B   728    				call fs_write_sector			004BC1 D8                  B   729    				ret c							                           B   730    				
004BC2 CD 86 51 00         B   731    				call fs_clear_sector_buffer
004BC6 DD21 86 66 00       B   732    				ld ix,sector_buffer				004BCB DD36002E            B   733    				ld (ix+00h),02eh				004BCF DD360120            B   734    				ld (ix+01h),020h
004BD3 DD36202E            B   735    				ld (ix+020h),02eh
004BD7 DD36212E            B   736    				ld (ix+021h),02eh
004BDB DD360B10            B   737    				ld (ix+0bh),010h
004BDF DD362B10            B   738    				ld (ix+02bh),010h
004BE3 ED5B D4 54 00       B   739    				ld de,(fs_new_file_cluster)		004BE8 DD731A              B   740    				ld (ix+01ah),e
004BEB DD721B              B   741    				ld (ix+01bh),d
004BEE CD AA 1A 00         B   742    				call fs_get_dir_cluster			004BF2 DD733A              B   743    				ld (ix+03ah),e
004BF5 DD723B              B   744    				ld (ix+03bh),d
004BF8 DD361821            B   745    				ld (ix+018h),021h				004BFC DD363821            B   746    				ld (ix+038h),021h				004C00 0609                B   747    				ld b,9
004C02 DD360220            B   748    mndelp			ld (ix+002h),32
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C06 DD362220            B   749    				ld (ix+022h),32
004C0A DD23                B   750    				inc ix
004C0C 10 F4               B   751    				djnz mndelp
004C0E 2A D4 54 00         B   752    				ld hl,(fs_new_file_cluster)		004C12 AF                  B   753    				xor a
004C13 CD 7F 53 00         B   754    				call cluster_and_offset_to_lba
004C17 CD 19 54 00         B   755    				call fs_write_sector
004C1B D8                  B   756    				ret c							                           B   757    			
004C1C CD 86 51 00         B   758    				call fs_clear_sector_buffer		004C20 AF                  B   759    				xor a
004C21 3C                  B   760    wroslp			inc a
004C22 32 CD 54 00         B   761    				ld (fs_working_sector),a
004C26 21 74 54 00         B   762    				ld hl,fs_cluster_size
004C2A BE                  B   763    				cp (hl)
004C2B 28 13               B   764    				jr z,allsclr
004C2D 2A D4 54 00         B   765    				ld hl,(fs_new_file_cluster)
004C31 CD 7F 53 00         B   766    				call cluster_and_offset_to_lba
004C35 CD 19 54 00         B   767    				call fs_write_sector
004C39 D8                  B   768    				ret c
004C3A 3A CD 54 00         B   769    				ld a,(fs_working_sector)
004C3E 18 E1               B   770    				jr wroslp
                           B   771    			
004C40 2A D4 54 00         B   772    allsclr			ld hl,(fs_new_file_cluster)		004C44 11FFFF00            B   773    				ld de,0ffffh
004C48 CD D4 52 00         B   774    				call update_fat_entry_for_clust
004C4C AF                  B   775    				xor a
004C4D C9                  B   776    				ret
                           B   777    
                           B   778    
                           B   779    
                           B   780    ;----------------------------------------------
                           B   781    
004C4E                     B   782    fs_delete_dir_command
                           B   783    
004C4E CD 98 51 00         B   784    				call fs_find_filename			004C52 D8                  B   785    				ret c
004C53 28 04               B   786    				jr z,ddc_gotd
004C55 3ED1                B   787    				ld a,0d1h						004C57 B7                  B   788    				or a
004C58 C9                  B   789    				ret
                           B   790    				
004C59 DDCB0B66            B   791    ddc_gotd		bit 4,(ix+0bh)					004C5D 20 04               B   792    				jr nz,okdeldir
004C5F AF                  B   793    				xor a
004C60 3EC4                B   794    				ld a,0c4h						004C62 C9                  B   795    				ret
                           B   796    				
004C63 DD22 D7 54 00       B   797    okdeldir		ld (fs_fname_in_sector_addr),ix
004C68 CD DE 53 00         B   798    				call backup_sector_lba
004C6C DD6E1A              B   799    				ld l,(ix+01ah)					004C6F DD661B              B   800    				ld h,(ix+01bh)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   801    				
004C72 3A 74 54 00         B   802    fs_ddecl		ld a,(fs_cluster_size)
004C76 47                  B   803    				ld b,a							004C77 0E00                B   804    				ld c,0			
004C79 79                  B   805    fs_cne2 		ld a,c
004C7A CD 7F 53 00         B   806    				call cluster_and_offset_to_lba
004C7E CD 00 54 00         B   807    				call fs_read_sector
004C82 D8                  B   808    				ret c							                           B   809    				
004C83 C5                  B   810    				push bc
004C84 0610                B   811    				ld b,16							004C86 DD21 86 66 00       B   812    				ld ix,sector_buffer
004C8B 11200000            B   813    				ld de,020h
004C8F DD7E00              B   814    fs_cne1			ld a,(ix)
004C92 B7                  B   815    				or a
004C93 28 0D               B   816    				jr z,fs_chnde
004C95 FEE5                B   817    				cp 0e5h
004C97 28 09               B   818    				jr z,fs_chnde
004C99 FE2E                B   819    				cp '.'
004C9B 28 05               B   820    				jr z,fs_chnde
004C9D C1                  B   821    				pop bc
004C9E AF                  B   822    				xor a							004C9F 3EC5                B   823    				ld a,0c5h						004CA1 C9                  B   824    				ret
                           B   825    			
004CA2 DD19                B   826    fs_chnde		add ix,de
004CA4 10 E9               B   827    				djnz fs_cne1
004CA6 C1                  B   828    				pop bc
004CA7 0C                  B   829    				inc c
004CA8 10 CF               B   830    				djnz fs_cne2
                           B   831    			
004CAA CD A8 52 00         B   832    				call get_fat_entry_for_cluster	004CAE D8                  B   833    				ret c
004CAF CD 51 50 00         B   834    				call fs_compare_hl_fff8
004CB3 38 BD               B   835    				jr c,fs_ddecl
                           B   836    			
004CB5 CD F3 53 00         B   837    dir_empty		call restore_sector_lba			004CB9 CD 00 54 00         B   838    				call fs_read_sector
004CBD D8                  B   839    				ret c							004CBE 2A D7 54 00         B   840    				ld hl,(fs_fname_in_sector_addr)
004CC2 36E5                B   841    fs_delco		ld (hl),0e5h					004CC4 CD 19 54 00         B   842    				call fs_write_sector
004CC8 D8                  B   843    				ret c
                           B   844    			
004CC9 E5                  B   845    				push hl
004CCA DDE1                B   846    				pop ix
004CCC DD6E1A              B   847    				ld l,(ix+01ah)
004CCF DD661B              B   848    				ld h,(ix+01bh)
004CD2 22 CE 54 00         B   849    				ld (fs_working_cluster),hl
004CD6 7C                  B   850    				ld a,h							004CD7 B5                  B   851    				or l							004CD8 C8                  B   852    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   853    				
004CD9 2A CE 54 00         B   854    clrfatlp		ld hl,(fs_working_cluster)
004CDD CD A8 52 00         B   855    				call get_fat_entry_for_cluster
004CE1 D8                  B   856    				ret c
004CE2 EB                  B   857    				ex de,hl
                           B   858    				
004CE3 2A CE 54 00         B   859    				ld hl,(fs_working_cluster)
004CE7 ED53 CE 54 00       B   860    				ld (fs_working_cluster),de
004CEC 11000000            B   861    				ld de,0
004CF0 CD D4 52 00         B   862    				call update_fat_entry_for_clust
004CF4 D8                  B   863    				ret c
                           B   864    				
004CF5 CD 51 50 00         B   865    				call fs_compare_hl_fff8			004CF9 38 DE               B   866    				jr c,clrfatlp
004CFB AF                  B   867    				xor a
004CFC C9                  B   868    				ret
                           B   869    
                           B   870    
                           B   871    ;----------------------------------------------
                           B   872    
004CFD                     B   873    fs_create_file_command
                           B   874    
                           B   875    ; Note: As per FAT standard, creating a file (0
                           B   876    ; only a directory entry (FAT is only updated w
                           B   877    
004CFD CD 98 51 00         B   878    				call fs_find_filename			004D01 D8                  B   879    				ret c
004D02 FEC2                B   880    				cp 0c2h							004D04 28 04               B   881    				jr z,mfilefnde
004D06 AF                  B   882    				xor a							004D07 3EC9                B   883    				ld a,0c9h						004D09 C9                  B   884    				ret
                           B   885    			
004D0A CD AF 50 00         B   886    mfilefnde		call fs_find_free_dir_entry		004D0E D8                  B   887    				ret c							004D0F C0                  B   888    				ret nz							                           B   889    			
004D10 DDE5                B   890    				push ix							004D12 D1                  B   891    				pop de
004D13 21 8B 54 00         B   892    				ld hl,fs_sought_filename
004D17 010B0000            B   893    				ld bc,11
004D1B EDB0                B   894    				ldir
004D1D AF                  B   895    				xor a							004D1E 0615                B   896    				ld b,21
004D20 12                  B   897    clrfnen			ld (de),a
004D21 13                  B   898    				inc de
004D22 10 FC               B   899    				djnz clrfnen
004D24 DD361821            B   900    				ld (ix+018h),021h				004D28 CD 19 54 00         B   901    				call fs_write_sector			004D2C D8                  B   902    				ret c							004D2D AF                  B   903    				xor a
004D2E C9                  B   904    				ret								Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   905    
                           B   906    
                           B   907    ;----------------------------------------------
                           B   908    
004D2F                     B   909    fs_write_bytes_to_file_command
                           B   910    	
                           B   911    ; *********************************************
                           B   912    ; * set up: fs_file_transfer_length (new data),
                           B   913    ; * before calling                             
                           B   914    ; *********************************************
                           B   915    
                           B   916    				
004D2F ED5B BB 54 00       B   917    				ld de,(fs_file_transfer_length)
004D34 21000000            B   918    				ld hl,0
004D38 AF                  B   919    				xor a
004D39 ED5A                B   920    				adc hl,de
004D3B CA 54 4A 00         B   921    				jp z,fs_fliz					                           B   922    				 
004D3F CD 98 51 00         B   923    				call fs_find_filename			004D43 D8                  B   924    				ret c							004D44 FEC2                B   925    				cp 0c2h				
004D46 C8                  B   926    				ret z							004D47 DDCB0B66            B   927    				bit 4,(ix+0bh)					004D4B 28 04               B   928    				jr z,fs_oknad					004D4D AF                  B   929    				xor a							004D4E 3EC6                B   930    				ld a,0c6h						004D50 C9                  B   931    				ret
                           B   932    
004D51 CD DE 53 00         B   933    fs_oknad		call backup_sector_lba
004D55 DD22 D7 54 00       B   934    				ld (fs_fname_in_sector_addr),ix
                           B   935    
004D5A DD311C              B   936    				ld iy,(ix+01ch)					004D5D DD7E1F              B   937    				ld a,(ix+01fh)
004D60 FD22 B7 54 00       B   938    				ld (fs_existing_file_length),iy
004D65 32 B7 54 00         B   939    				ld (fs_existing_file_length),a
004D69 ED5B BB 54 00       B   940    				ld de,(fs_file_transfer_length)
004D6E FD19                B   941    				add iy,de						004D70 CE00                B   942    				adc a,0
004D72 DD3E1C              B   943    				ld (ix+01ch),iy					004D75 DD771F              B   944    				ld (ix+01fh),a					004D78 30 04               B   945    				jr nc,nfsizeok
004D7A AF                  B   946    				xor a
004D7B 3EC7                B   947    				ld a,0c7h						004D7D C9                  B   948    				ret
                           B   949    
004D7E 11000000            B   950    nfsizeok		ld de,0
004D82 DD5E1A              B   951    				ld e,(ix+01ah)					004D85 DD561B              B   952    				ld d,(ix+01bh)					004D88 ED53 C1 54 00       B   953    				ld (fs_file_working_cluster),de
004D8D CD 19 54 00         B   954    				call fs_write_sector			004D91 D8                  B   955    				ret c
004D92 7A                  B   956    				ld a,d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D93 B3                  B   957    				or e
004D94 20 35               B   958    				jr nz,apenclch	
                           B   959    				
004D96 CD 5E 50 00         B   960    				call fs_find_free_cluster		004D9A D8                  B   961    				ret c
004D9B C0                  B   962    				ret nz
004D9C 2A D1 54 00         B   963    				ld hl,(fs_free_cluster)
004DA0 22 C1 54 00         B   964    				ld (fs_file_working_cluster),hl
004DA4 11FFFF00            B   965    				ld de,0ffffh
004DA8 CD D4 52 00         B   966    				call update_fat_entry_for_clust
004DAC D8                  B   967    				ret c
                           B   968    			
004DAD CD F3 53 00         B   969    				call restore_sector_lba			004DB1 CD 00 54 00         B   970    				call fs_read_sector
004DB5 D8                  B   971    				ret c
004DB6 DD2A D7 54 00       B   972    				ld ix,(fs_fname_in_sector_addr)
004DBB ED5B C1 54 00       B   973    				ld de,(fs_file_working_cluster)
004DC0 DD731A              B   974    				ld (ix+01ah),e
004DC3 DD721B              B   975    				ld (ix+01bh),d
004DC6 CD 19 54 00         B   976    				call fs_write_sector			004DCA D8                  B   977    				ret c
                           B   978    				
                           B   979    					
004DCB 2A C1 54 00         B   980    apenclch		ld hl,(fs_file_working_cluster)
004DCF CD A8 52 00         B   981    				call get_fat_entry_for_cluster
004DD3 D8                  B   982    				ret c
004DD4 CD 51 50 00         B   983    				call fs_compare_hl_fff8
004DD8 30 1C               B   984    				jr nc,atlclif
004DDA 22 C1 54 00         B   985    				ld (fs_file_working_cluster),hl
004DDE 01000000            B   986    				ld bc,0
004DE2 3A 74 54 00         B   987    				ld a,(fs_cluster_size)
004DE6 CB27                B   988    				sla a
004DE8 47                  B   989    				ld b,a
004DE9 2A B7 54 00         B   990    				ld hl,(fs_existing_file_length)
004DED AF                  B   991    				xor a							004DEE ED42                B   992    				sbc hl,bc						004DF0 22 B7 54 00         B   993    				ld (fs_existing_file_length),hl
004DF4 18 D5               B   994    				jr apenclch
                           B   995    				
004DF6 ED4B B7 54 00       B   996    atlclif			ld bc,(fs_existing_file_length)
004DFB CB38                B   997    				srl b				
004DFD 48                  B   998    				ld c,b							004DFE 3A 74 54 00         B   999    				ld a,(fs_cluster_size)
004E02 91                  B  1000    				sub c
004E03 47                  B  1001    				ld b,a							004E04 28 79               B  1002    				jr z,fs_sfncl					                           B  1003    				
004E06 2A C1 54 00         B  1004    				ld hl,(fs_file_working_cluster)
004E0A 79                  B  1005    				ld a,c
004E0B CD 7F 53 00         B  1006    				call cluster_and_offset_to_lba
004E0F CD 00 54 00         B  1007    				call fs_read_sector
004E13 D8                  B  1008    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E14 C5                  B  1009    				push bc							                           B  1010    				
004E15 11000000            B  1011    				ld de,0
004E19 3A B7 54 00         B  1012    				ld a,(fs_existing_file_length)
004E1D 5F                  B  1013    				ld e,a
004E1E 3A B8 54 00         B  1014    				ld a,(fs_existing_file_length+1
004E22 E601                B  1015    				and 1
004E24 57                  B  1016    				ld d,a							004E25 21000200            B  1017    				ld hl,512	
004E29 AF                  B  1018    				xor a
004E2A ED52                B  1019    				sbc hl,de						004E2C E5                  B  1020    				push hl
004E2D C1                  B  1021    				pop bc							004E2E 21 86 66 00         B  1022    				ld hl,sector_buffer
004E32 19                  B  1023    				add hl,de
004E33 EB                  B  1024    				ex de,hl						004E34 7C                  B  1025    				ld a,h			
004E35 B5                  B  1026    				or l
004E36 20 04               B  1027    				jr nz,fs_dcsb					004E38 CD 86 51 00         B  1028    fs_dbfil		call fs_clear_sector_buffer
004E3C 2A C4 54 00         B  1029    fs_dcsb			ld hl,(fs_ez80_address)			004E40 EDA0                B  1030    fs_cbsb			ldi								004E42 7C                  B  1031    				ld a,h							004E43 B5                  B  1032    				or l
004E44 20 0D               B  1033    				jr nz,fs_srcadok
004E46 22 C4 54 00         B  1034    				ld (fs_ez80_address),hl
004E4A 3A C6 54 00         B  1035    				ld a,(fs_ez80_address+2)
004E4E B7                  B  1036    				or a
004E4F CA 70 4B 00         B  1037    				jp z,fs_mem_error
004E53 CD 08 53 00         B  1038    fs_srcadok		call transfer_length_countdown
004E57 28 54               B  1039    				jr z,fs_lbof					004E59 78                  B  1040    fs_sadok		ld a,b							004E5A B1                  B  1041    				or c
004E5B 20 E3               B  1042    				jr nz,fs_cbsb					                           B  1043    
004E5D 22 C4 54 00         B  1044    				ld (fs_ez80_address),hl			004E61 C1                  B  1045    				pop bc							004E62 79                  B  1046    				ld a,c
004E63 2A C1 54 00         B  1047    				ld hl,(fs_file_working_cluster)
004E67 CD 7F 53 00         B  1048    				call cluster_and_offset_to_lba
004E6B CD 19 54 00         B  1049    				call fs_write_sector			004E6F D8                  B  1050    				ret c							004E70 0C                  B  1051    				inc c							004E71 05                  B  1052    				dec b
004E72 28 0B               B  1053    				jr z,fs_sfncl					004E74 C5                  B  1054    fs_sfns			push bc				
004E75 01000200            B  1055    				ld bc,512						004E79 11 86 66 00         B  1056    				ld de,sector_buffer				004E7D 18 B9               B  1057    				jr fs_dbfil						                           B  1058    				
004E7F CD 5E 50 00         B  1059    fs_sfncl		call fs_find_free_cluster		004E83 D8                  B  1060    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E84 C0                  B  1061    				ret nz							004E85 2A C1 54 00         B  1062    				ld hl,(fs_file_working_cluster)
004E89 ED5B D1 54 00       B  1063    				ld de,(fs_free_cluster)
004E8E CD D4 52 00         B  1064    				call update_fat_entry_for_clust
004E92 D8                  B  1065    				ret c
004E93 2A D1 54 00         B  1066    				ld hl,(fs_free_cluster)
004E97 22 C1 54 00         B  1067    				ld (fs_file_working_cluster),hl
004E9B 11FFFF00            B  1068    				ld de,0ffffh
004E9F CD D4 52 00         B  1069    				call update_fat_entry_for_clust
004EA3 D8                  B  1070    				ret c
004EA4 3A 74 54 00         B  1071    				ld a,(fs_cluster_size)
004EA8 47                  B  1072    				ld b,a							004EA9 0E00                B  1073    				ld c,0							004EAB 18 C7               B  1074    				jr fs_sfns						                           B  1075    				
004EAD C1                  B  1076    fs_lbof			pop bc
004EAE 79                  B  1077    				ld a,c							004EAF 2A C1 54 00         B  1078    				ld hl,(fs_file_working_cluster)
004EB3 CD 7F 53 00         B  1079    				call cluster_and_offset_to_lba
004EB7 CD 19 54 00         B  1080    				call fs_write_sector	
004EBB D8                  B  1081    				ret c
004EBC AF                  B  1082    				xor a							004EBD C9                  B  1083    				ret
                           B  1084    
                           B  1085    ;----------------------------------------------
                           B  1086    
004EBE                     B  1087    fs_erase_file_command
                           B  1088    
                           B  1089    
004EBE CD 98 51 00         B  1090    				call fs_find_filename			004EC2 D8                  B  1091    				ret c
004EC3 C0                  B  1092    				ret nz
                           B  1093    				
004EC4 DDCB0B66            B  1094    				bit 4,(ix+0bh)					004EC8 28 04               B  1095    				jr z,okdelf
004ECA AF                  B  1096    				xor a
004ECB 3EC6                B  1097    				ld a,0c6h						004ECD C9                  B  1098    				ret
                           B  1099    				
004ECE DDE5                B  1100    okdelf			push ix
004ED0 E1                  B  1101    				pop hl
004ED1 C3 C2 4C 00         B  1102    				jp fs_delco						                           B  1103    					
                           B  1104    
                           B  1105    ;----------------------------------------------
                           B  1106    
                           B  1107    
004ED5                     B  1108    fs_rename_command
                           B  1109    
004ED5 CD 98 51 00         B  1110    				call fs_find_filename			004ED9 D8                  B  1111    				ret c							004EDA FEC2                B  1112    				cp 0c2h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004EDC 28 04               B  1113    				jr z,fs_nfnok					004EDE AF                  B  1114    				xor a							004EDF 3EC9                B  1115    				ld a,0c9h						004EE1 C9                  B  1116    				ret
                           B  1117    			
004EE2 21 8B 54 00         B  1118    fs_nfnok		ld hl,fs_sought_filename		004EE6 11 A3 54 00         B  1119    				ld de,fs_filename_buffer
004EEA 010B0000            B  1120    				ld bc,11
004EEE EDB0                B  1121    				ldir
004EF0 21 97 54 00         B  1122    				ld hl,fs_alt_filename			004EF4 11 8B 54 00         B  1123    				ld de,fs_sought_filename
004EF8 010B0000            B  1124    				ld bc,11
004EFC EDB0                B  1125    				ldir
004EFE CD 98 51 00         B  1126    				call fs_find_filename			004F02 D8                  B  1127    				ret c
004F03 FEC2                B  1128    				cp 0c2h
004F05 C8                  B  1129    				ret z							                           B  1130    				
004F06 DDE5                B  1131    				push ix
004F08 D1                  B  1132    				pop de
004F09 21 A3 54 00         B  1133    				ld hl,fs_filename_buffer	 	004F0D 010B0000            B  1134    				ld bc,11
004F11 EDB0                B  1135    				ldir							004F13 CD 19 54 00         B  1136    				call fs_write_sector			                           B  1137    				
004F17 AF                  B  1138    fs_rndone		xor a
004F18 C9                  B  1139    				ret
                           B  1140    				
                           B  1141    
                           B  1142    ;----------------------------------------------
                           B  1143    
                           B  1144    
004F19                     B  1145    fs_goto_first_dir_entry
                           B  1146    
004F19 CD AA 1A 00         B  1147    				call fs_get_dir_cluster
004F1D ED53 DA 54 00       B  1148    				ld (fs_dir_entry_cluster),de
004F22 AF                  B  1149    				xor a
004F23 32 E0 54 00         B  1150    				ld (fs_dir_entry_sector),a		004F27 11000000            B  1151    				ld de,0
004F2B ED53 DD 54 00       B  1152    				ld (fs_dir_entry_line_offset),d
                           B  1153    				
                           B  1154    
                           B  1155    
004F30                     B  1156    fs_get_dir_entry
                           B  1157    
                           B  1158    ; No input parameters.
                           B  1159    ;
                           B  1160    ; Returns HL    = Location of null terminated f
                           B  1161    ;         IX:IY = Length of file (if applicable
                           B  1162    ;         B     = File flag (1 = directory, 0 =
                           B  1163    ;         A     = Error code
                           B  1164    ;         Carry = Set if hardware error encount
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1165    
                           B  1166    
004F30 3A E0 54 00         B  1167    				ld a,(fs_dir_entry_sector)		004F34 4F                  B  1168    				ld c,a
004F35 2A DA 54 00         B  1169    				ld hl,(fs_dir_entry_cluster)	004F39 CD 7F 53 00         B  1170    				call cluster_and_offset_to_lba
                           B  1171    			
004F3D 7C                  B  1172    				ld a,h							004F3E B5                  B  1173    				or l							004F3F 20 09               B  1174    				jr nz,nr_read					004F41 2A 7E 54 00         B  1175    				ld hl,(fs_root_dir_position)	004F45 79                  B  1176    				ld a,c
004F46 CD C5 53 00         B  1177    				call set_absolute_lba
                           B  1178    				
004F4A CD 00 54 00         B  1179    nr_read			call fs_read_sector				004F4E D8                  B  1180    				ret c							                           B  1181    				
004F4F ED5B DD 54 00       B  1182    				ld de,(fs_dir_entry_line_offset
004F54 DD21 86 66 00       B  1183    dscan_int_loop	ld ix,sector_buffer
004F59 DD19                B  1184    				add ix,de
004F5B DD7E00              B  1185    ds_int_loop		ld a,(ix)
004F5E B7                  B  1186    				or a							004F5F 28 0E               B  1187    				jr z,fs_dir_entry_free		
004F61 FEE5                B  1188    				cp 0e5h							004F63 28 0A               B  1189    				jr z,fs_dir_entry_free	
004F65 FE05                B  1190    				cp 05h							004F67 28 06               B  1191    				jr z,fs_dir_entry_free	
004F69 DDCB0B5E            B  1192    				bit 3,(ix+0bh)					004F6D 28 0D               B  1193    				jr z,fs_dir_entry_in_use		                           B  1194    
004F6F                     B  1195    fs_dir_entry_free
                           B  1196    
004F6F EB                  B  1197    				ex de,hl
004F70 11200000            B  1198    				ld de,32
004F74 19                  B  1199    				add hl,de
004F75 EB                  B  1200    				ex de,hl
004F76 CB4A                B  1201    				bit 1,d
004F78 28 DA               B  1202    				jr z,dscan_int_loop
004F7A 18 54               B  1203    				jr dscan_new_sect
                           B  1204    
004F7C                     B  1205    fs_dir_entry_in_use
                           B  1206    				
004F7C ED53 DD 54 00       B  1207    				ld (fs_dir_entry_line_offset),d
004F81 DDE5                B  1208    				push ix
004F83 E1                  B  1209    				pop hl
004F84 CD 6F 10 00         B  1210    				call os_clear_output_line
004F88 0608                B  1211    				ld b,8							004F8A 11 A6 61 00         B  1212    				ld de,output_line
004F8E 7E                  B  1213    dcopyn			ld a,(hl)
004F8F FE20                B  1214    				cp ' '							004F91 28 02               B  1215    				jr z,digchar
004F93 12                  B  1216    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F94 13                  B  1217    				inc de
004F95 23                  B  1218    digchar			inc hl
004F96 10 F6               B  1219    				djnz dcopyn
004F98 7E                  B  1220    				ld a,(hl)						004F99 FE20                B  1221    				cp ' '							004F9B 28 0A               B  1222    				jr z,dirnoex
004F9D 3E2E                B  1223    				ld a,'.'						004F9F 12                  B  1224    				ld (de),a
004FA0 13                  B  1225    				inc de	
004FA1 01030000            B  1226    				ld bc,3							004FA5 EDB0                B  1227    				ldir
004FA7 AF                  B  1228    dirnoex			xor a 
004FA8 12                  B  1229    				ld (de),a						                           B  1230    				
004FA9 47                  B  1231    				ld b,a
004FAA DDCB0B66            B  1232    				bit 4,(ix+0bh)					004FAE 28 01               B  1233    				jr z,fs_fniaf		
004FB0 04                  B  1234    				inc b							004FB1 DD171C              B  1235    fs_fniaf		ld de,(ix+01ch)					004FB4 DD4E1F              B  1236    				ld c,(ix+01fh)
004FB7 21 A6 61 00         B  1237    				ld hl,output_line				004FBB AF                  B  1238    				xor a
004FBC C9                  B  1239    				ret
                           B  1240    
                           B  1241    
                           B  1242    
                           B  1243    
004FBD                     B  1244    fs_goto_next_dir_entry
                           B  1245    
004FBD 11200000            B  1246    				ld de,32
004FC1 2A DD 54 00         B  1247    				ld hl,(fs_dir_entry_line_offset
004FC5 19                  B  1248    				add hl,de
004FC6 22 DD 54 00         B  1249    				ld (fs_dir_entry_line_offset),h
004FCA CB4C                B  1250    				bit 1,h
004FCC CA 30 4F 00         B  1251    				jp z,fs_get_dir_entry
                           B  1252    
004FD0 21000000            B  1253    dscan_new_sect	ld hl,0				
004FD4 22 DD 54 00         B  1254    				ld (fs_dir_entry_line_offset),h
                           B  1255    			
004FD8 21 E0 54 00         B  1256    				ld hl,fs_dir_entry_sector
004FDC 34                  B  1257    				inc (hl)						                           B  1258    			
004FDD ED5B DA 54 00       B  1259    				ld de,(fs_dir_entry_cluster)
004FE2 7A                  B  1260    				ld a,d
004FE3 B3                  B  1261    				or e							004FE4 20 0B               B  1262    				jr nz,nonroot2
004FE6 3A 84 54 00         B  1263    				ld a,(fs_root_dir_sectors)
004FEA BE                  B  1264    				cp (hl)
004FEB 28 23               B  1265    				jr z,endofdir			
004FED C3 30 4F 00         B  1266    				jp fs_get_dir_entry
                           B  1267    												004FF1 3A 74 54 00         B  1268    nonroot2		ld a,(fs_cluster_size)		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FF5 BE                  B  1269    				cp (hl)							004FF6 C2 30 4F 00         B  1270    				jp nz,fs_get_dir_entry
004FFA 3600                B  1271    				ld (hl),0						004FFC 2A DA 54 00         B  1272    				ld hl,(fs_dir_entry_cluster)
005000 CD A8 52 00         B  1273    				call get_fat_entry_for_cluster
005004 22 DA 54 00         B  1274    				ld (fs_dir_entry_cluster),hl
005008 CD 51 50 00         B  1275    				call fs_compare_hl_fff8			00500C DA 30 4F 00         B  1276    				jp c,fs_get_dir_entry
                           B  1277    	
005010 3ED2                B  1278    endofdir		ld a,0d2h
005012 B7                  B  1279    				or a							005013 C9                  B  1280    				ret	
                           B  1281    				
                           B  1282    ;----------------------------------------------
                           B  1283    
005014                     B  1284    fs_get_volume_label
                           B  1285    
                           B  1286    
                           B  1287    ; On return HL = volume label
                           B  1288    
                           B  1289    
005014 2A 7E 54 00         B  1290    				ld hl,(fs_root_dir_position)
005018 0E00                B  1291    				ld c,0
00501A AF                  B  1292    gvl_nrsec		xor a
00501B CD D6 53 00         B  1293    				call set_abs_lba_and_read_secto
00501F D8                  B  1294    				ret c
005020 0610                B  1295    				ld b,16							005022 DD21 86 66 00       B  1296    				ld ix,sector_buffer
005027 DD7E0B              B  1297    find_vl			ld a,(ix+0bh)
00502A FE08                B  1298    				cp 08h
00502C 28 1A               B  1299    				jr z,got_label
00502E ED3220              B  1300    				lea ix,ix+32					005031 10 F4               B  1301    				djnz find_vl					005033 23                  B  1302    				inc hl
005034 0C                  B  1303    				inc c
005035 3A 84 54 00         B  1304    				ld a,(fs_root_dir_sectors)		005039 B9                  B  1305    				cp c							00503A 20 DE               B  1306    				jr nz,gvl_nrsec
                           B  1307    			
00503C CD 27 49 00         B  1308    				call fs_read_partition_bootsect
005040 D8                  B  1309    				ret c
005041 B7                  B  1310    				or a
005042 C0                  B  1311    				ret nz
005043 DD21 B1 66 00       B  1312    				ld ix,sector_buffer+02bh
                           B  1313    				
005048 DD360B00            B  1314    got_label		ld (ix+0bh),0					00504C DDE5                B  1315    				push ix
00504E E1                  B  1316    				pop hl
00504F AF                  B  1317    				xor a
005050 C9                  B  1318    				ret
                           B  1319    				
                           B  1320    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1321    ;----------------------------------------------
                           B  1322    ; Internal subroutines
                           B  1323    ;----------------------------------------------
                           B  1324    
005051                     B  1325    fs_compare_hl_fff8
                           B  1326    
                           B  1327    ;INPUT HL = value to compare with fff8
                           B  1328    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1329    	
                           B  1330    	
005051 E5                  B  1331    				push hl
005052 D5                  B  1332    				push de
005053 11F8FF00            B  1333    				ld de,0fff8h			
005057 B7                  B  1334    				or a							005058 52ED52              B  1335    				sbc.s hl,de						00505B D1                  B  1336    				pop de
00505C E1                  B  1337    				pop hl
00505D C9                  B  1338    				ret
                           B  1339    
                           B  1340    ;----------------------------------------------
                           B  1341    
                           B  1342    
00505E                     B  1343    fs_find_free_cluster
                           B  1344    	
00505E DD210000 00         B  1345    				ld ix,0							005063 ED5B 78 54 00       B  1346    				ld de,(fs_fat1_position)		005068 AF                  B  1347    				xor a				
005069 32 CD 54 00         B  1348    fs_ffcl2		ld (fs_working_sector),a	
00506D D5                  B  1349    				push de
00506E E1                  B  1350    				pop hl
00506F 3A CD 54 00         B  1351    				ld a,(fs_working_sector)
005073 CD D6 53 00         B  1352    				call set_abs_lba_and_read_secto
005077 D8                  B  1353    				ret c
005078 21 86 66 00         B  1354    				ld hl,sector_buffer
00507C 0600                B  1355    				ld b,0
00507E 7E                  B  1356    fs_ffcl1		ld a,(hl)						00507F 23                  B  1357    				inc hl
005080 B6                  B  1358    				or (hl)
005081 23                  B  1359    				inc hl
005082 28 14               B  1360    				jr z,fs_gotfc
005084 DD23                B  1361    				inc ix
005086 10 F6               B  1362    				djnz fs_ffcl1
                           B  1363    				
005088 2A 85 54 00         B  1364    				ld hl,(fs_sectors_per_fat)
00508C 3A CD 54 00         B  1365    				ld a,(fs_working_sector)		005090 3C                  B  1366    				inc a				
005091 BD                  B  1367    				cp l		
005092 20 D5               B  1368    				jr nz,fs_ffcl2					005094 3EC1                B  1369    fs_dfull		ld a,c1h						005096 B7                  B  1370    				or a							005097 C9                  B  1371    				ret
                           B  1372    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005098 DDE5                B  1373    fs_gotfc		push ix							00509A E1                  B  1374    				pop hl							00509B 2B                  B  1375    				dec hl							00509C 2B                  B  1376    				dec hl							00509D ED5B 88 54 00       B  1377    				ld de,(fs_max_data_clusters)
0050A2 AF                  B  1378    				xor a
0050A3 52ED52              B  1379    				sbc.s hl,de						0050A6 30 EC               B  1380    				jr nc,fs_dfull
                           B  1381    			
0050A8 DD22 D1 54 00       B  1382    				ld (fs_free_cluster),ix
0050AD AF                  B  1383    				xor a
0050AE C9                  B  1384    				ret
                           B  1385    	
                           B  1386    	
                           B  1387    ;----------------------------------------------
                           B  1388    	
                           B  1389    	
0050AF                     B  1390    fs_find_free_dir_entry
                           B  1391    
                           B  1392    
                           B  1393    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1394    
                           B  1395    			
0050AF CD AA 1A 00         B  1396    				call fs_get_dir_cluster			0050B3 EB                  B  1397    				ex de,hl
0050B4 22 C1 54 00         B  1398    ffenxtclu		ld (fs_file_working_cluster),hl
0050B8 AF                  B  1399    				xor a
0050B9 32 CD 54 00         B  1400    				ld (fs_working_sector),a
                           B  1401    			
0050BD 2A 7E 54 00         B  1402    ffenxtsec		ld hl,(fs_root_dir_position)	0050C1 3A CD 54 00         B  1403    				ld a,(fs_working_sector)
0050C5 CD C5 53 00         B  1404    				call set_absolute_lba
                           B  1405    				
0050C9 CD AA 1A 00         B  1406    				call fs_get_dir_cluster			0050CD 7A                  B  1407    				ld a,d
0050CE B3                  B  1408    				or e
0050CF 28 0C               B  1409    				jr z,at_rootd
0050D1 2A C1 54 00         B  1410    				ld hl,(fs_file_working_cluster)
0050D5 3A CD 54 00         B  1411    				ld a,(fs_working_sector)
0050D9 CD 7F 53 00         B  1412    				call cluster_and_offset_to_lba
                           B  1413    				
0050DD CD 00 54 00         B  1414    at_rootd		call fs_read_sector
0050E1 D8                  B  1415    				ret c
0050E2 0610                B  1416    				ld b,16							0050E4 11200000            B  1417    				ld de,32
0050E8 DD21 86 66 00       B  1418    				ld ix,sector_buffer
0050ED DD7E00              B  1419    scdirfe			ld a,(ix)						0050F0 B7                  B  1420    				or a
0050F1 28 65               B  1421    				jr z,got_fde
0050F3 FEE5                B  1422    				cp 0e5h
0050F5 28 61               B  1423    				jr z,got_fde
0050F7 DD19                B  1424    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050F9 10 F2               B  1425    				djnz scdirfe					                           B  1426    				
0050FB 21 CD 54 00         B  1427    				ld hl,fs_working_sector			0050FF 34                  B  1428    				inc (hl)
                           B  1429    				
005100 CD AA 1A 00         B  1430    				call fs_get_dir_cluster			005104 7A                  B  1431    				ld a,d
005105 B3                  B  1432    				or e
005106 20 0B               B  1433    				jr nz,ffenotroo
005108 3A 84 54 00         B  1434    				ld a,(fs_root_dir_sectors)		00510C BE                  B  1435    				cp (hl)							00510D 20 AE               B  1436    				jr nz,ffenxtsec
00510F AF                  B  1437    fenotfnd		xor a							005110 3EC3                B  1438    				ld a,0c3h						005112 C9                  B  1439    				ret
                           B  1440    			
005113 3A 74 54 00         B  1441    ffenotroo		ld a,(fs_cluster_size)			005117 BE                  B  1442    				cp (hl)
005118 20 A3               B  1443    				jr nz,ffenxtsec
00511A 2A C1 54 00         B  1444    				ld hl,(fs_file_working_cluster)
00511E CD A8 52 00         B  1445    				call get_fat_entry_for_cluster	005122 D8                  B  1446    				ret c
005123 CD 51 50 00         B  1447    				call fs_compare_hl_fff8			005127 38 8B               B  1448    				jr c,ffenxtclu
                           B  1449    			
005129 CD 5E 50 00         B  1450    				call fs_find_free_cluster		00512D D8                  B  1451    				ret c							00512E C0                  B  1452    				ret nz							00512F ED5B D1 54 00       B  1453    				ld de,(fs_free_cluster)
005134 2A C1 54 00         B  1454    				ld hl,(fs_file_working_cluster)
005138 CD D4 52 00         B  1455    				call update_fat_entry_for_clust
00513C D8                  B  1456    				ret c
00513D EB                  B  1457    				ex de,hl						00513E 11FFFF00            B  1458    				ld de,0ffffh
005142 CD D4 52 00         B  1459    				call update_fat_entry_for_clust
005146 D8                  B  1460    				ret c
                           B  1461    			
005147 2A D1 54 00         B  1462    				ld hl,(fs_free_cluster)			00514B CD 5A 51 00         B  1463    				call fs_clear_cluster			00514F D8                  B  1464    				ret c
005150 2A D1 54 00         B  1465    				ld hl,(fs_free_cluster)			005154 C3 B4 50 00         B  1466    				jp ffenxtclu					                           B  1467    			
005158 AF                  B  1468    got_fde			xor a
005159 C9                  B  1469    				ret
                           B  1470    					
                           B  1471    
                           B  1472    ;----------------------------------------------
                           B  1473    
00515A                     B  1474    fs_clear_cluster
                           B  1475    
                           B  1476    ;INPUT HL = cluster to clear
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1477    
00515A 22 CE 54 00         B  1478    				ld (fs_working_cluster),hl
                           B  1479    			
00515E CD 86 51 00         B  1480    				call fs_clear_sector_buffer
                           B  1481    					
005162 AF                  B  1482    				xor a				
005163 32 CD 54 00         B  1483    				ld (fs_working_sector),a		005167 3A CD 54 00         B  1484    wipeclulp		ld a,(fs_working_sector)		00516B 2A CE 54 00         B  1485    				ld hl,(fs_working_cluster)		00516F CD 7F 53 00         B  1486    				call cluster_and_offset_to_lba	005173 CD 19 54 00         B  1487    				call fs_write_sector
005177 D8                  B  1488    				ret c
005178 21 CD 54 00         B  1489    				ld hl,fs_working_sector
00517C 34                  B  1490    				inc (hl)
00517D 3A 74 54 00         B  1491    				ld a,(fs_cluster_size)
005181 BE                  B  1492    				cp (hl)
005182 20 E3               B  1493    				jr nz,wipeclulp
005184 AF                  B  1494    				xor a
005185 C9                  B  1495    				ret
                           B  1496    			
                           B  1497    			
005186                     B  1498    fs_clear_sector_buffer
                           B  1499    			
005186 E5                  B  1500    				push hl
005187 C5                  B  1501    				push bc
005188 21 86 66 00         B  1502    				ld hl,sector_buffer			
00518C 01000200            B  1503    				ld bc,512				
005190 AF                  B  1504    				xor a				
005191 CD C6 15 00         B  1505    				call os_bchl_memfill	
005195 C1                  B  1506    				pop bc
005196 E1                  B  1507    				pop hl
005197 C9                  B  1508    				ret
                           B  1509    				
                           B  1510    
                           B  1511    	
                           B  1512    ;----------------------------------------------
                           B  1513    	
005198                     B  1514    fs_find_filename
                           B  1515    
005198 AF                  B  1516    				xor a
                           B  1517    
005199                     B  1518    fs_search	
                           B  1519    				
005199 32 E8 54 00         B  1520    				ld (fs_search_type),a
                           B  1521    			
                           B  1522    ; OUTPUT IX start of 32 byte dir entry
                           B  1523    			
00519D CD AA 1A 00         B  1524    				call fs_get_dir_cluster
0051A1 ED53 C1 54 00       B  1525    ffnnxtclu		ld (fs_file_working_cluster),de
0051A6 AF                  B  1526    				xor a
0051A7 32 CD 54 00         B  1527    				ld (fs_working_sector),a
                           B  1528    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0051AB 2A 7E 54 00         B  1529    ffnnxtsec		ld hl,(fs_root_dir_position)	0051AF 3A CD 54 00         B  1530    				ld a,(fs_working_sector)
0051B3 CD C5 53 00         B  1531    				call set_absolute_lba
                           B  1532    				
0051B7 CD AA 1A 00         B  1533    				call fs_get_dir_cluster			0051BB 7A                  B  1534    				ld a,d
0051BC B3                  B  1535    				or e
0051BD 28 0C               B  1536    				jr z,at_rootd2
0051BF 2A C1 54 00         B  1537    				ld hl,(fs_file_working_cluster)
0051C3 3A CD 54 00         B  1538    				ld a,(fs_working_sector)
0051C7 CD 7F 53 00         B  1539    				call cluster_and_offset_to_lba	                           B  1540    				
0051CB CD 00 54 00         B  1541    at_rootd2		call fs_read_sector
0051CF D8                  B  1542    				ret c
0051D0 0E10                B  1543    				ld c,16							0051D2 DD21 86 66 00       B  1544    				ld ix,sector_buffer
0051D7 DDE5                B  1545    ndirentr		push ix
0051D9 D1                  B  1546    				pop de
0051DA 3A E8 54 00         B  1547    				ld a,(fs_search_type)
0051DE B7                  B  1548    				or a
0051DF 28 1E               B  1549    				jr z,fs_ststr
                           B  1550    			
0051E1 DD7E00              B  1551    				ld a,(ix)						0051E4 FE80                B  1552    				cp 080h							0051E6 30 35               B  1553    				jr nc,fnnotsame
0051E8 FE20                B  1554    				cp 020h
0051EA 38 31               B  1555    				jr c,fnnotsame
0051EC ED5B E5 54 00       B  1556    				ld de,(fs_stash_dir_block)		0051F1 DD7E1A              B  1557    				ld a,(ix+01ah)
0051F4 BB                  B  1558    				cp e
0051F5 20 26               B  1559    				jr nz,fnnotsame
0051F7 DD7E1B              B  1560    				ld a,(ix+01bh)
0051FA BA                  B  1561    				cp d
0051FB 28 1E               B  1562    				jr z,fs_found
0051FD 18 1E               B  1563    				jr fnnotsame
                           B  1564    				
0051FF FD21 8B 54 00       B  1565    fs_ststr		ld iy,fs_sought_filename		005204 060B                B  1566    				ld b,11							005206 1A                  B  1567    cmpfnlp			ld a,(de)						005207 CD 63 12 00         B  1568    				call os_uppercasify				00520B 6F                  B  1569    				ld l,a
00520C FD7E00              B  1570    				ld a,(iy)
00520F CD 63 12 00         B  1571    				call os_uppercasify
005213 BD                  B  1572    				cp l				
005214 20 07               B  1573    				jr nz,fnnotsame
005216 FD23                B  1574    				inc iy
005218 13                  B  1575    				inc de
005219 10 EB               B  1576    				djnz cmpfnlp
00521B AF                  B  1577    fs_found		xor a							00521C C9                  B  1578    				ret
                           B  1579    			
00521D 11200000            B  1580    fnnotsame		ld de,32						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005221 DD19                B  1581    				add ix,de
005223 0D                  B  1582    				dec c
005224 20 B1               B  1583    				jr nz,ndirentr					                           B  1584    				
005226 21 CD 54 00         B  1585    				ld hl,fs_working_sector			00522A 34                  B  1586    				inc (hl)
                           B  1587    				
00522B CD AA 1A 00         B  1588    				call fs_get_dir_cluster			00522F 7A                  B  1589    				ld a,d
005230 B3                  B  1590    				or e
005231 20 0D               B  1591    				jr nz,notrootdir
005233 3A 84 54 00         B  1592    				ld a,(fs_root_dir_sectors)		005237 BE                  B  1593    				cp (hl)							005238 C2 AB 51 00         B  1594    				jp nz,ffnnxtsec
00523C 3EC2                B  1595    fnnotfnd		ld a,0c2h						00523E B7                  B  1596    				or a
00523F C9                  B  1597    				ret
                           B  1598    			
005240                     B  1599    notrootdir
                           B  1600    				
005240 3A 74 54 00         B  1601    				ld a,(fs_cluster_size)			005244 BE                  B  1602    				cp (hl)
005245 C2 AB 51 00         B  1603    				jp nz,ffnnxtsec
                           B  1604    				
005249 2A C1 54 00         B  1605    				ld hl,(fs_file_working_cluster)
00524D CD A8 52 00         B  1606    				call get_fat_entry_for_cluster
005251 D8                  B  1607    				ret c
005252 CD 51 50 00         B  1608    				call fs_compare_hl_fff8			005256 30 E4               B  1609    				jr nc,fnnotfnd					005258 EB                  B  1610    				ex de,hl						005259 C3 A1 51 00         B  1611    				jp ffnnxtclu					                           B  1612    				
                           B  1613    
                           B  1614    ;----------------------------------------------
                           B  1615    
00525D                     B  1616    fs_hl_to_alt_filename
                           B  1617    
00525D 11 97 54 00         B  1618    				ld de,fs_alt_filename
005261 18 04               B  1619    				jr hltofngo
                           B  1620    
                           B  1621    
005263                     B  1622    fs_hl_to_filename
                           B  1623    
                           B  1624    ;INPUT: HL = address of filename (null / space 
                           B  1625    ;OUTPUT HL = address of first character after f
                           B  1626    ;        C = number of characters in filename
                           B  1627    
005263 11 8B 54 00         B  1628    				ld de,fs_sought_filename
005267 CD 72 53 00         B  1629    hltofngo		call fs_clear_filename			00526B D5                  B  1630    				push de			
00526C DDE1                B  1631    				pop ix							                           B  1632    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00526E 0E00                B  1633    				ld c,0
005270 0608                B  1634    				ld b,8
005272 7E                  B  1635    csfnlp2			ld a,(hl)						005273 B7                  B  1636    				or a
005274 C8                  B  1637    				ret z							005275 FE20                B  1638    				cp 32
005277 C8                  B  1639    				ret z							005278 FE2F                B  1640    				cp 02fh
00527A C8                  B  1641    				ret z							00527B FE2E                B  1642    				cp '.'
00527D 28 16               B  1643    				jr z,dofn_ext					00527F 12                  B  1644    				ld (de),a
005280 13                  B  1645    				inc de
005281 23                  B  1646    				inc hl
005282 0C                  B  1647    				inc c							005283 10 ED               B  1648    				djnz csfnlp2					005285 7E                  B  1649    find_ext		ld a,(hl)
005286 FE2E                B  1650    				cp '.'							005288 28 0B               B  1651    				jr z,dofn_ext	
00528A FE20                B  1652    				cp ' '							00528C C8                  B  1653    				ret z
00528D FE2F                B  1654    				cp 02fh
00528F C8                  B  1655    				ret z
005290 B7                  B  1656    				or a
005291 C8                  B  1657    				ret z
005292 23                  B  1658    				inc hl
005293 18 F0               B  1659    				jr find_ext
                           B  1660    				
005295 23                  B  1661    dofn_ext		inc hl							005296 0603                B  1662    				ld b,3				
005298 7E                  B  1663    fnextlp			ld a,(hl)						005299 B7                  B  1664    				or a
00529A C8                  B  1665    				ret z							00529B FE20                B  1666    				cp 32
00529D C8                  B  1667    				ret z
00529E DD7708              B  1668    				ld (ix+8),a
0052A1 DD23                B  1669    				inc ix
0052A3 23                  B  1670    				inc hl
0052A4 0C                  B  1671    				inc c
0052A5 10 F1               B  1672    				djnz fnextlp
0052A7 C9                  B  1673    				ret
                           B  1674    				
                           B  1675    ;----------------------------------------------
                           B  1676    
                           B  1677    
0052A8                     B  1678    get_fat_entry_for_cluster
                           B  1679    
                           B  1680    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1681    
0052A8 C5                  B  1682    				push bc
0052A9 D5                  B  1683    				push de
0052AA 01000000            B  1684    				ld bc,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052AE 4D                  B  1685    				ld c,l
0052AF 7C                  B  1686    				ld a,h
0052B0 2A 78 54 00         B  1687    				ld hl,(fs_fat1_position)
0052B4 CD D6 53 00         B  1688    				call set_abs_lba_and_read_secto
0052B8 38 17               B  1689    				jr c,hwerr
0052BA DDE5                B  1690    				push ix
0052BC DD21 86 66 00       B  1691    				ld ix,sector_buffer
0052C1 DD09                B  1692    				add ix,bc
0052C3 DD09                B  1693    				add ix,bc
0052C5 21000000            B  1694    				ld hl,0
0052C9 DD6E00              B  1695    				ld l,(ix)
0052CC DD6601              B  1696    				ld h,(ix+1)
0052CF DDE1                B  1697    				pop ix
0052D1 D1                  B  1698    hwerr			pop de
0052D2 C1                  B  1699    				pop bc
0052D3 C9                  B  1700    				ret
                           B  1701    
                           B  1702    
                           B  1703    ;----------------------------------------------
                           B  1704    
                           B  1705    
0052D4                     B  1706    update_fat_entry_for_cluster
                           B  1707    
                           B  1708    ; INPUT: HL = cluster in question
                           B  1709    ;        DE = new value to put in FAT tables
                           B  1710    			
0052D4 C5                  B  1711    				push bc
0052D5 E5                  B  1712    				push hl
0052D6 01000000            B  1713    				ld bc,0
0052DA 4D                  B  1714    				ld c,l
0052DB 7C                  B  1715    				ld a,h
0052DC 2A 78 54 00         B  1716    				ld hl,(fs_fat1_position)		0052E0 CD F4 52 00         B  1717    				call fat_upd
0052E4 38 0B               B  1718    				jr c,fup_end
                           B  1719    			
0052E6 E1                  B  1720    				pop hl
0052E7 E5                  B  1721    				push hl
0052E8 7C                  B  1722    				ld a,h
0052E9 2A 7B 54 00         B  1723    				ld hl,(fs_fat2_position)		0052ED CD F4 52 00         B  1724    				call fat_upd
0052F1 E1                  B  1725    fup_end			pop hl
0052F2 C1                  B  1726    				pop bc
0052F3 C9                  B  1727    				ret
                           B  1728    			
                           B  1729    			
0052F4 CD D6 53 00         B  1730    fat_upd			call set_abs_lba_and_read_secto
0052F8 38 0D               B  1731    				jr c,ufehwerr
0052FA 21 86 66 00         B  1732    				ld hl,sector_buffer
0052FE 09                  B  1733    				add hl,bc
0052FF 09                  B  1734    				add hl,bc
005300 73                  B  1735    				ld (hl),e
005301 23                  B  1736    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005302 72                  B  1737    				ld (hl),d
005303 CD 19 54 00         B  1738    				call fs_write_sector
005307 C9                  B  1739    ufehwerr		ret
                           B  1740    				
                           B  1741    	
                           B  1742    ;----------------------------------------------
                           B  1743    
005308                     B  1744    transfer_length_countdown
                           B  1745    
005308 E5                  B  1746    				push hl							005309 C5                  B  1747    				push bc
                           B  1748    			
00530A 0604                B  1749    				ld b,4
00530C 21 AF 54 00         B  1750    				ld hl,fs_file_pointer			005310 34                  B  1751    fpinclp			inc (hl)
005311 20 03               B  1752    				jr nz,fs_fpino
005313 23                  B  1753    				inc hl
005314 10 FA               B  1754    				djnz fpinclp
                           B  1755    				
005316 2A BB 54 00         B  1756    fs_fpino		ld hl,(fs_file_transfer_length)
00531A 2B                  B  1757    				dec hl
00531B 22 BB 54 00         B  1758    				ld (fs_file_transfer_length),hl
00531F 01000000            B  1759    				ld bc,0
005323 B7                  B  1760    				or a
005324 ED4A                B  1761    				adc hl,bc						                           B  1762    				
005326 C1                  B  1763    				pop bc
005327 E1                  B  1764    				pop hl
005328 C9                  B  1765    				ret
                           B  1766    
                           B  1767    ;----------------------------------------------
                           B  1768    
005329                     B  1769    fs_get_current_dir_name
                           B  1770    
                           B  1771    ;returns current dir name - location at HL
                           B  1772    
005329 CD AA 1A 00         B  1773    				call fs_get_dir_cluster			00532D 7A                  B  1774    				ld a,d
00532E B3                  B  1775    				or e
00532F 20 10               B  1776    				jr nz,fs_dnnr
005331 21 5A 5F 00         B  1777    				ld hl,vol_txt+1					005335 3A 55 5F 00         B  1778    				ld a,(current_volume)
005339 C630                B  1779    				add a,030h
00533B 32 5D 5F 00         B  1780    				ld (vol_txt+4),a
00533F AF                  B  1781    				xor a
005340 C9                  B  1782    				ret
                           B  1783    					
005341 ED53 E5 54 00       B  1784    fs_dnnr			ld (fs_stash_dir_block),de
005346 CD D9 49 00         B  1785    				call fs_parent_dir_command		00534A D8                  B  1786    				ret c
00534B B7                  B  1787    				or a
00534C C0                  B  1788    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00534D 3E01                B  1789    				ld a,1
00534F CD 99 51 00         B  1790    				call fs_search					005353 D8                  B  1791    				ret c
005354 C0                  B  1792    				ret nz
                           B  1793    					
005355 DDE5                B  1794    fs_gdbn			push ix
005357 E1                  B  1795    				pop hl
005358 060B                B  1796    				ld b,11							00535A 7E                  B  1797    ntdirn			ld a,(hl)
00535B FE20                B  1798    				cp ' '
00535D 28 03               B  1799    				jr z,rdirfsp
00535F 23                  B  1800    				inc hl
005360 10 F8               B  1801    rdirnsp			djnz ntdirn
                           B  1802    				
005362 3600                B  1803    rdirfsp			ld (hl),0
005364 DDE5                B  1804    				push ix
005366 ED5B E5 54 00       B  1805    				ld de,(fs_stash_dir_block)
00536B CD B6 1A 00         B  1806    				call fs_update_dir_cluster		00536F E1                  B  1807    				pop hl	
005370 AF                  B  1808    				xor a							005371 C9                  B  1809    				ret
                           B  1810    
                           B  1811    ;----------------------------------------------
                           B  1812    
005372                     B  1813    fs_clear_filename
                           B  1814    
005372 D5                  B  1815    				push de							005373 C5                  B  1816    				push bc
005374 060C                B  1817    				ld b,12
005376 3E20                B  1818    				ld a,' '
005378 12                  B  1819    clrfnlp			ld (de),a
005379 13                  B  1820    				inc de
00537A 10 FC               B  1821    				djnz clrfnlp
00537C C1                  B  1822    				pop bc
00537D D1                  B  1823    				pop de
00537E C9                  B  1824    				ret
                           B  1825    				
                           B  1826    ;----------------------------------------------
                           B  1827    
                           B  1828    
00537F                     B  1829    cluster_and_offset_to_lba
                           B  1830    
                           B  1831    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1832    
00537F C5                  B  1833    				push bc
005380 D5                  B  1834    				push de
005381 E5                  B  1835    				push hl
005382 DDE5                B  1836    				push ix
                           B  1837    
005384 2B                  B  1838    				dec hl							005385 2B                  B  1839    				dec hl							005386 11000000            B  1840    				ld de,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00538A 01000000            B  1841    				ld bc,0
00538E 5F                  B  1842    				ld e,a
00538F 3A 74 54 00         B  1843    				ld a,(fs_cluster_size)			005393 CB3F                B  1844    caotllp			srl a
005395 28 03               B  1845    				jr z,clusdone
005397 29                  B  1846    				add hl,hl						005398 18 F9               B  1847    				jr caotllp
                           B  1848    			
00539A ED4B 81 54 00       B  1849    clusdone		ld bc,(fs_data_area)			00539F 09                  B  1850    				add hl,bc						0053A0 19                  B  1851    				add hl,de						                           B  1852    				
0053A1 E5                  B  1853    add_ptn_offset	push hl							0053A2 CD E4 1A 00         B  1854    				call fs_calc_volume_offset
0053A6 DD21 87 5F 00       B  1855    				ld ix,volume_mount_list
0053AB DD19                B  1856    				add ix,de
0053AD E1                  B  1857    				pop hl
0053AE DD0708              B  1858    				ld bc,(ix+08h)					0053B1 DD7E0B              B  1859    				ld a,(ix+0bh)
0053B4 09                  B  1860    				add hl,bc
0053B5 CE00                B  1861    				adc a,0
0053B7 22 32 61 00         B  1862    				ld (sector_lba0),hl				0053BB 32 35 61 00         B  1863    				ld (sector_lba3),a				                           B  1864    				
0053BF DDE1                B  1865    				pop ix
0053C1 E1                  B  1866    				pop hl
0053C2 D1                  B  1867    				pop de
0053C3 C1                  B  1868    				pop bc
0053C4 C9                  B  1869    				ret
                           B  1870    				
                           B  1871    
                           B  1872    ;----------------------------------------------
                           B  1873    
0053C5                     B  1874    set_absolute_lba
                           B  1875    
                           B  1876    ; set A to sector offset, HL to sectors from st
                           B  1877    
0053C5 C5                  B  1878    				push bc							0053C6 D5                  B  1879    				push de							0053C7 E5                  B  1880    				push hl							0053C8 DDE5                B  1881    				push ix							0053CA 01000000            B  1882    				ld bc,0
0053CE 11000000            B  1883    				ld de,0
0053D2 5F                  B  1884    				ld e,a
0053D3 19                  B  1885    				add hl,de
0053D4 18 CB               B  1886    				jr add_ptn_offset		
                           B  1887    				
                           B  1888    
0053D6                     B  1889    set_abs_lba_and_read_sector
                           B  1890    
0053D6 CD C5 53 00         B  1891    				call set_absolute_lba
0053DA C3 00 54 00         B  1892    				jp fs_read_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1893    				
                           B  1894    ;----------------------------------------------
                           B  1895    
                           B  1896    
0053DE                     B  1897    backup_sector_lba
                           B  1898    
0053DE C5                  B  1899    				push bc
0053DF D5                  B  1900    				push de
0053E0 E5                  B  1901    				push hl
0053E1 21 32 61 00         B  1902    				ld hl,sector_lba0
0053E5 11 E9 54 00         B  1903    				ld de,fs_backed_up_sector_lba0
0053E9 01040000            B  1904    lbabur			ld bc,4
0053ED EDB0                B  1905    				ldir
0053EF E1                  B  1906    				pop hl
0053F0 D1                  B  1907    				pop de
0053F1 C1                  B  1908    				pop bc
0053F2 C9                  B  1909    				ret
                           B  1910    
                           B  1911    
0053F3                     B  1912    restore_sector_lba
                           B  1913    
0053F3 C5                  B  1914    				push bc
0053F4 D5                  B  1915    				push de
0053F5 E5                  B  1916    				push hl
0053F6 21 E9 54 00         B  1917    				ld hl,fs_backed_up_sector_lba0
0053FA 11 32 61 00         B  1918    				ld de,sector_lba0
0053FE 18 E9               B  1919    				jr lbabur	
                           B  1920    					
                           B  1921    ;----------------------------------------------
                           B  1922    
005400                     B  1923    fs_read_sector
                           B  1924    			
005400 C5                  B  1925    				push bc
005401 D5                  B  1926    				push de
005402 E5                  B  1927    				push hl
005403 DDE5                B  1928    				push ix
005405 FDE5                B  1929    				push iy
005407 01040000            B  1930    				ld bc,04h						00540B CD 2A 54 00         B  1931    				call sector_access_redirect
00540F FDE1                B  1932    secaccend		pop iy
005411 DDE1                B  1933    				pop ix
005413 E1                  B  1934    				pop hl
005414 D1                  B  1935    				pop de
005415 C1                  B  1936    				pop bc
005416 C8                  B  1937    				ret z							005417 37                  B  1938    				scf								005418 C9                  B  1939    				ret								                           B  1940    
                           B  1941    
005419                     B  1942    fs_write_sector	
                           B  1943    				
005419 C5                  B  1944    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00541A D5                  B  1945    				push de
00541B E5                  B  1946    				push hl
00541C DDE5                B  1947    				push ix
00541E FDE5                B  1948    				push iy
005420 01080000            B  1949    				ld bc,08h						005424 CD 2A 54 00         B  1950    				call sector_access_redirect
005428 18 E5               B  1951    				jr secaccend
                           B  1952    
                           B  1953    
                           B  1954    
00542A                     B  1955    sector_access_redirect
                           B  1956    
                           B  1957    	
00542A 3A 56 5F 00         B  1958    				ld a,(current_driver)			00542E CD 7C 1A 00         B  1959    				call locate_driver_base			005432 EB                  B  1960    				ex de,hl
005433 09                  B  1961    				add hl,bc						005434 E9                  B  1962    				jp (hl)
                           B  1963    
                           B  1964    ;----------------------------------------------
                           B  1965    	
005435                     B  1966    bootsector_stub
                           B  1967    
005435 EB3C904D 53444F53   B  1968    				db  0EBh,03Ch,090h,04Dh,053h,04
00543D 352E3000 02004000 
005445 02000200 00F8F200   B  1969    				db  002h,000h,002h,000h,000h,0F
00544D 3F00FF00 00000000 
005455 00000000 000029C4   B  1970    				db  000h,000h,000h,000h,000h,00
00545D E636984E 4F204E41 
005465 4D452020 20204641   B  1971    				db  04Dh,045h,020h,020h,020h,02
00546D 54313620 2020C3 
                           B  1972    
                           B  1973    ;----------------------------------------------
                           B  1974    
005474 00                  B  1975    fs_cluster_size				db 0
005475 000000              B  1976    fs_bytes_per_cluster		dw24 0
005478 000000              B  1977    fs_fat1_position			dw24 0		; offse
00547B 000000              B  1978    fs_fat2_position			dw24 0		; offse
00547E 000000              B  1979    fs_root_dir_position		dw24 0		; offse
005481 000000              B  1980    fs_data_area				dw24 0		; offse
005484 00                  B  1981    fs_root_dir_sectors			db 0
                           B  1982    
005485 000000              B  1983    fs_sectors_per_fat			dw24 0
005488 000000              B  1984    fs_max_data_clusters		dw24 0
                           B  1985    
00548B 00 00 00 00 00 00   B  1986    fs_sought_filename			blkb 12,0
005491 00 00 00 00 00 00 
005497 00 00 00 00 00 00   B  1987    fs_alt_filename				blkb 12,0
00549D 00 00 00 00 00 00 
0054A3 00 00 00 00 00 00   B  1988    fs_filename_buffer			blkb 12,0
0054A9 00 00 00 00 00 00 
                           B  1989    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0054AF 00000000            B  1990    fs_file_pointer				dw 0,0		; 32 bi
0054B3 00000000            B  1991    fs_file_length				dw 0,0		; 32 bi
0054B7 00000000            B  1992    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1993    
0054BB 000000              B  1994    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1995    
0054BE 000000              B  1996    fs_file_start_cluster		dw24 0
0054C1 000000              B  1997    fs_file_working_cluster		dw24 0
                           B  1998    
0054C4 000000              B  1999    fs_ez80_address				dw24 0
0054C7 000000              B  2000    fs_ez80_working_address		dw24 0
                           B  2001    
0054CA 000000              B  2002    fs_in_sector_offset			dw24 0
0054CD 00                  B  2003    fs_working_sector			db 0
                           B  2004    
0054CE 000000              B  2005    fs_working_cluster			dw24 0
0054D1 000000              B  2006    fs_free_cluster				dw24 0
0054D4 000000              B  2007    fs_new_file_cluster			dw24 0
                           B  2008    
0054D7 000000              B  2009    fs_fname_in_sector_addr		dw24 0
                           B  2010    
0054DA 000000              B  2011    fs_dir_entry_cluster		dw24 0
0054DD 000000              B  2012    fs_dir_entry_line_offset	dw24 0
0054E0 00                  B  2013    fs_dir_entry_sector			db 0
                           B  2014    
0054E1 00                  B  2015    fs_filepointer_valid		db 0
0054E2 000000              B  2016    fs_sector_pos_cnt			dw24 0
                           B  2017    
0054E5 000000              B  2018    fs_stash_dir_block	 		dw24 0
                           B  2019    
0054E8 00                  B  2020    fs_search_type				db 0
                           B  2021    
0054E9 00000000            B  2022    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2023    
                           B  2024    ;----------------------------------------------
                           B  2025    
                           A  3243    
                           A  3244    ;----------------------------------------------
                           A  3245    ; OS Data 
                           A  3246    ;----------------------------------------------
                           A  3247    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
0054ED                     B     9    kernal_table
                           B    10    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0054ED 761800              B    11    	dw24 ext_mount_volumes			;00		
0054F0 1C1800              B    12    	dw24 os_get_device_info			;01		
0054F3 D21600              B    13    	dw24 os_check_volume_format		;02		
0054F6 051B00              B    14    	dw24 ext_change_volume			;03		
0054F9 2F1800              B    15    	dw24 os_get_volume_info			;04		
0054FC DC1600              B    16    	dw24 ext_format					;05		
0054FF 0E1700              B    17    	dw24 ext_make_dir				;06		
005502 1C1700              B    18    	dw24 ext_change_dir				;07		
005505 2A1700              B    19    	dw24 os_parent_dir				;08		
005508 301700              B    20    	dw24 os_root_dir				;09		
00550B 781700              B    21    	dw24 ext_delete_dir				;0a		
00550E 611600              B    22    	dw24 ext_find_file				;0b		
005511 7D1600              B    23    	dw24 ext_set_file_pointer		;0c		
005514 761600              B    24    	dw24 os_set_load_length			;0d		
005517 901600              B    25    	dw24 ext_read_bytes_from_file	;0e		
00551A 361700              B    26    	dw24 ext_erase_file				;0f		
00551D 5E1700              B    27    	dw24 ext_rename_file			;10		
005520 A01600              B    28    	dw24 ext_create_file			;11		
005523 B21600              B    29    	dw24 ext_write_bytes_to_file	;12		
005526 D31A00              B    30    	dw24 fs_get_total_sectors		;13		
005529 441700              B    31    	dw24 os_goto_first_dir_entry	;14		 
00552C 4A1700              B    32    	dw24 os_get_dir_entry			;15		
00552F 501700              B    33    	dw24 os_goto_next_dir_entry		;16		
005532 881700              B    34    	dw24 ext_read_sector			;17		
005535 B61700              B    35    	dw24 ext_write_sector			;18		
005538 411B00              B    36    	dw24 ext_file_sector_list		;19		
00553B AA1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
00553E B61A00              B    38    	dw24 fs_update_dir_cluster		;1b		
005541 561700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005544 E74300              B    41    	dw24 os_wait_key_press			;1d		
005547 424400              B    42    	dw24 os_get_key_press			;1e		
00554A 881500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
00554D 3D1800              B    45    	dw24 ext_serial_get_header		;20		
005550 4A1800              B    46    	dw24 ext_serial_receive_file	;21		 
005553 531800              B    47    	dw24 ext_serial_send_file		;22		 
005556 651800              B    48    	dw24 ext_serial_tx				;23		
005559 6C1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
00555C 4F0F00              B    51    	dw24 ext_print_string			;25		
00555F 6C3E00              B    52    	dw24 hwsc_clear_screen			;26		
005562 3C4000              B    53    	dw24 hwsc_wait_vrt				;27		
005565 0D1400              B    54    	dw24 os_set_cursor_position		;28		
005568 A51A00              B    55    	dw24 ext_plot_char				;29		
00556B CE1500              B    56    	dw24 ext_set_pen				;2a		
00556E DB1500              B    57    	dw24 ext_background_colours		;2b		
005571 353F00              B    58    	dw24 hwsc_draw_cursor			;2c		
005574 D51500              B    59    	dw24 os_get_pen					;2d		
005577 A73E00              B    60    	dw24 hwsc_scroll_up				;2e		
00557A FB3D00              B    61    	dw24 os_set_video_hw_regs		;2f		
00557D 8E1500              B    62    	dw24 os_get_vmode				;30			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005580 893F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005583 2D1400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005586 A81B00              B    66    	dw24 ext_set_envar				;33		
005589 6C1B00              B    67    	dw24 ext_get_envar				;34		
00558C 021C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
00558F 831400              B    70    	dw24 os_set_mouse_window		;36		
005592 C91400              B    71    	dw24 os_get_mouse_position		;37		
005595 A01400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005598 AC4000              B    74    	dw24 hwsc_time_delay			;39		
00559B 211200              B    75    	dw24 ext_compare_strings		;3a		
00559E A01000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
0055A1 D51000              B    77    	dw24 ext_ascii_to_hexword		;3c		
0055A4 2A1100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
0055A7 914000              B    80    	dw24 hwsc_get_version			;3e		
0055AA F71300              B    81    	dw24 os_dont_store_registers	;3f		
0055AD 033700              B    82    	dw24 os_cmd_unused				;40 		0055B0 CF4000              B    83    	dw24 hwsc_read_rtc				;41     
0055B3 F74000              B    84    	dw24 hwsc_write_rtc				;42		 
0055B6 531C00              B    85    	dw24 os_get_keymap_location		;43		 
0055B9 043700              B    86    	dw24 os_get_mem_high			;44
0055BC 591C00              B    87    	dw24 ext_play_audio				;45
0055BF A14300              B    88    	dw24 hwsc_disable_audio			;46
0055C2 BA4300              B    89    	dw24 hwsc_get_joysticks			;47
0055C5 9E1500              B    90    	dw24 ext_set_vmode				;48
0055C8 DC0F00              B    91    	dw24 ext_set_cursor_image		;49
0055CB 1B3F00              B    92    	dw24 hwsc_remove_cursor			;4a
0055CE D83500              B    93    	dw24 char_to_font				;4b
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    ; Non-packed Text Strings
                           B    97    ;----------------------------------------------
                           B    98    
0055D1 50524F53 4520666F   B    99    welcome_message			db "PROSE for EZ80P by 
0055D9 7220455A 38305020 
0055E1 62792050 68696C20 
0055E9 52757374 6F6E2032 
0055F1 3031310B 0B 
0055F6 53595354 454D2052   B   100    						db "SYSTEM RAM free abo
0055FE 414D2066 72656520 
005606 61626F76 653A2024 
00560E 00 
00560F 44726976 65733A0B   B   101    storage_txt				db "Drives:",11,0
005617 00 
005618 434F4D4D 414E4453   B   102    os_dos_cmds_txt			db "COMMANDS",0
005620 00 
005621 53544152 5455502E   B   103    startup_script_fn		db "STARTUP.SCR",0
005629 53435200 
00562D 2400                B   104    os_hex_prefix_txt		db "$",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00562F 4F532056 65727369   B   105    os_version_txt			db "OS Version: $",0	005637 6F6E3A20 2400 
00563D 414D4F45 42412048   B   106    hw_version_txt			db "AMOEBA HW Version: 
005645 57205665 7273696F 
00564D 6E3A2024 00 
005652 202F2000            B   107    fwd_slash_txt			db " / ",0
005656 4C6F6164 696E672E   B   108    loading_txt				db "Loading..",11,0
00565E 2E0B00 
005661 53617669 6E672E2E   B   109    saving_txt				db "Saving..",11,0
005669 0B00 
00566B 2E657A70 20         B   110    ezp_extension_txt		db ".ezp",32
005670 0B4D6F72 653F0B0B   B   111    os_more_txt				db 11,"More?",11,11,0
005678 00 
005679 52656769 73746572   B   112    nmi_freeze_txt			db "Register Dump:"
005681 2044756D 703A 
005687 0B0B00              B   113    crlfx2_txt				db 11,11,0
00568A 7800                B   114    rep_char_txt			db "x",0
00568C 20746F20 00         B   115    to_txt					db " to ",0
005691 4552524F 5200       B   116    error_txt				db "ERROR",0
005697 494620              B   117    if_command_txt			db "IF "
00569A 454E4420            B   118    end_command_txt			db "END "
00569E 4F532052 45515549   B   119    hw_warn_txt1			db "OS REQUIRES AMOEBA 
0056A6 52455320 414D4F45 
0056AE 42412056 3A 
0056B3 2D2D2D2D 00         B   120    hw_warn_txt2			db "----",0
                           B   121    
                           B   122    ;----------------------------------------------
                           B   123    ; Packed text section
                           B   124    ;----------------------------------------------
                           B   125    
0056B8 00444542 5547       B   126    dictionary				db 0,"DEBUG"			0056BE 002D2D2D 2D2D       B   127    						db 0,"-----"			0056C4 00494F              B   128    						db 0,"IO"				0056C7 002D2D              B   129    						db 0,"--"				0056CA 004D4953 43         B   130    						db 0,"MISC"				0056CF 002D2D2D 2D         B   131    						db 0,"----"				0056D4 00616464 72         B   132    						db 0,"addr"				0056D9 0050524F 5345       B   133    						db 0,"PROSE"			0056DF 00612062 2063       B   134    						db 0,"a b c"			0056E5 00416464 72657373   B   135    						db 0,"Address"			0056ED 00427974 6573       B   136    						db 0,"Bytes"			0056F3 00457865 63757461   B   137    						db 0,"Executable"		0056FB 626C65 
0056FE 0048756E 74         B   138    						db 0,"Hunt"				005703 0046696C 6C         B   139    						db 0,"Fill"				005708 00476F74 6F         B   140    						db 0,"Goto"				                           B   141    						
00570D 0053686F 77         B   142    						db 0,"Show"				005712 00435055            B   143    						db 0,"CPU"				005716 00526567 69737465   B   144    						db 0,"Registers"		00571E 7273 
005720 004173              B   145    						db 0,"As"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005723 00415343 4949       B   146    						db 0,"ASCII"			005729 00436C65 6172       B   147    						db 0,"Clear"			00572F 00536372 65656E     B   148    						db 0,"Screen"			005736 00446973 61737365   B   149    						db 0,"Disassemble"		00573E 6D626C65 
005742 00537769 746368     B   150    						db 0,"Switch"			005749 00436F70 79         B   151    						db 0,"Copy"				00574E 00446576 696365     B   152    						db 0,"Device"			005755 00436861 6E6765     B   153    						db 0,"Change"			00575C 00447269 7665       B   154    						db 0,"Drive"			005762 00446972            B   155    						db 0,"Dir"				005766 002F                B   156    						db 0,"/"				005768 00666E              B   157    						db 0,"fn"				                           B   158    						
00576B 0044656C 657465     B   159    						db 0,"Delete"			005772 0046696C 65         B   160    						db 0,"File"				005777 00496E66 6F         B   161    						db 0,"Info"				00577C 00564F4C 783A       B   162    						db 0,"VOLx:"			005782 004D616B 65         B   163    						db 0,"Make"				005787 0052656D 6F756E74   B   164    						db 0,"Remount"			00578F 00537461 7274       B   165    						db 0,"Start"			005795 00576172 6E696E67   B   166    						db 0,"Warning!"			00579D 21 
00579E 00416C6C            B   167    						db 0,"All"				0057A2 0052656D 6F7665     B   168    						db 0,"Remove"			0057A9 0052656E 616D65     B   169    						db 0,"Rename"			0057B0 004F72              B   170    						db 0,"Or"				0057B3 00526563 65697665   B   171    						db 0,"Receive"			0057BB 00536176 65         B   172    						db 0,"Save"				0057C0 00547261 6E736D69   B   173    						db 0,"Transmit"			0057C8 74 
0057C9 004C6F61 64         B   174    						db 0,"Load"				                           B   175    						
0057CE 004F532F 4857       B   176    						db 0,"OS/HW"			0057D4 00566572 73696F6E   B   177    						db 0,"Version"			0057DC 005B7065 6E207061   B   178    						db 0,"[pen paper]"		0057E4 7065725D 
0057E8 803A                B   179    						db 80h,":"				0057EA 813E                B   180    						db 81h,">"				0057EC 82534F55 4E44       B   181    						db 82h,"SOUND"			0057F2 00566F6C 756D6573   B   182    						db 0,"Volumes"			0057FA 8343                B   183    						db 83h,"C"				0057FC 844344              B   184    						db 84h,"CD"				0057FF 85434C53            B   185    						db 85h,"CLS"			005803 8650454E            B   186    						db 86h,"PEN"			005807 8744                B   187    						db 87h,"D"				005809 8844454C            B   188    						db 88h,"DEL"			00580D 89444952            B   189    						db 89h,"DIR"			005811 8A48                B   190    						db 8ah,"H"				005813 8B46                B   191    						db 8bh,"F"				                           B   192    						
005815 004F6E              B   193    						db 0,"On"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005818 8C464F52 4D4154     B   194    						db 8ch,"FORMAT"			00581F 0047                B   195    						db 0,"G"				005821 8D4C42              B   196    						db 8dh,"LB"				005824 8E4D                B   197    						db 8eh,"M"				005826 8F4D4F55 4E54       B   198    						db 8fh,"MOUNT"			00582C 004265              B   199    						db 0,"Be"				00582F 9052                B   200    						db 90h,"R"				005831 915244              B   201    						db 91h,"RD"				005834 92524E              B   202    						db 92h,"RN"				005837 935258              B   203    						db 93h,"RX"				00583A 945342              B   204    						db 94h,"SB"				00583D 9554                B   205    						db 95h,"T"				00583F 965458              B   206    						db 96h,"TX"				005842 97564552 53         B   207    						db 97h,"VERS"			005847 00577269 7465       B   208    						db 0,"Write"			                           B   209    						
00584D 004D656D            B   210    						db 0,"Mem"				005851 00227478 7422       B   211    						db 0,22h,"txt",22h		005857 0057696C 6C         B   212    						db 0,"Will"				00585C 00526174 65         B   213    						db 0,"Rate"				005861 0061                B   214    						db 0,"a"				005863 00507265 70         B   215    						db 0,"Prep"				005868 984D44              B   216    						db 98h,"MD"				00586B 00447269 766573     B   217    						db 0,"Drives"			005872 006F6C64 666E       B   218    						db 0,"oldfn"			005878 006E6577 666E       B   219    						db 0,"newfn"			00587E 006C656E            B   220    						db 0,"len"				005882 00436F6C 6F757273   B   221    						db 0,"Colours"			00588A 993F                B   222    						db 99h,"?"				00588C 00436F6D 6D616E64   B   223    						db 0,"Commands"			005894 73 
005895 0020                B   224    						db 0," "				005897 002D                B   225    						db 0,"-"				                           B   226    						
005899 00566F6C 756D65     B   227    						db 0,"Volume"			0058A0 0046756C 6C         B   228    						db 0,"Full"				0058A5 004E6F74            B   229    						db 0,"Not"				0058A9 00466F75 6E64       B   230    						db 0,"Found"			0058AF 004C656E 677468     B   231    						db 0,"Length"			0058B6 005A6572 6F         B   232    						db 0,"Zero"				0058BB 004F7574            B   233    						db 0,"Out"				0058BF 004F66              B   234    						db 0,"Of"				0058C2 0052616E 6765       B   235    						db 0,"Range"			0058C8 00416C72 65616479   B   236    						db 0,"Already"			0058D0 00457869 737473     B   237    						db 0,"Exists"			0058D7 004174              B   238    						db 0,"At"				0058DA 00526F6F 74         B   239    						db 0,"Root"				0058DF 004D6973 6D617463   B   240    						db 0,"Mismatch"			0058E7 68 
0058E8 00526571 75657374   B   241    						db 0,"Request"			0058F0 00446174 61         B   242    						db 0,"Data"				                           B   243    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058F5 00454F46            B   244    						db 0,"EOF"				0058F9 00416674 6572       B   245    						db 0,"After"			0058FF 00556E6B 6E6F776E   B   246    						db 0,"Unknown"			005907 00436F6D 6D616E64   B   247    						db 0,"Command"			00590F 00426164            B   248    						db 0,"Bad"				005913 00486578            B   249    						db 0,"Hex"				005917 004E6F              B   250    						db 0,"No"				00591A 0041626F 72746564   B   251    						db 0,"Aborted"			005922 00507265 73656E74   B   252    						db 0,"Present"			00592A 00436865 636B7375   B   253    						db 0,"Checksum"			005932 6D 
005933 004C6F61 646564     B   254    						db 0,"Loaded"			00593A 00436F6D 6D73       B   255    						db 0,"Comms"			005940 00457272 6F72       B   256    						db 0,"Error"			005946 00417267 756D656E   B   257    						db 0,"Arguments"		00594E 7473 
005950 004C6F73 74         B   258    						db 0,"Lost"				                           B   259    						
005955 00                  B   260    						db 0
005956 46415431 36         B   261    fat16_txt				db "FAT16"				                           B   262    
00595B 00536572 69616C     B   263    						db 0,"Serial"			005962 0054696D 65         B   264    						db 0,"Time"				005967 00466F6E 74         B   265    						db 0,"Font"				00596C 00546F6F            B   266    						db 0,"Too"				005970 004C6F6E 67         B   267    						db 0,"Long"				005975 00446573 74696E61   B   268    						db 0,"Destination"		00597D 74696F6E 
005981 0053656C 65637465   B   269    						db 0,"Selected"			005989 64 
00598A 00496E76 616C6964   B   270    						db 0,"Invalid"			005992 004D6973 73696E67   B   271    						db 0,"Missing"			00599A 004F4B              B   272    						db 0,"OK"				00599D 004F53              B   273    						db 0,"OS"				0059A0 0050726F 74656374   B   274    						db 0,"Protected"		0059A8 6564 
0059AA 0041                B   275    						db 0,"A"				0059AC 004973              B   276    						db 0,"Is"				0059AF 00456D70 7479       B   277    						db 0,"Empty"			0059B5 00456E64            B   278    						db 0,"End"				                           B   279    						
0059B9 0024                B   280    						db 0,"$"
0059BB 7878                B   281    hex_byte_txt			db "xx"					                           B   282    						
0059BD 00417070 656E64     B   283    						db 0,"Append"			0059C4 003F                B   284    						db 0,"?"				0059C6 0024                B   285    						db 0,"$"				0059C8 00417761 6974696E   B   286    						db 0,"Awaiting"			0059D0 67 
0059D1 00526563 65697669   B   287    						db 0,"Receiving"		0059D9 6E67 
0059DB 0053656E 64696E67   B   288    						db 0,"Sending"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0059E3 000B                B   289    						db 0,11					0059E5 002E2E              B   290    						db 0,".."				0059E8 004E616D 65         B   291    						db 0,"Name"				0059ED 00204279 746573     B   292    						db 0," Bytes"			0059F4 00507265 7373       B   293    						db 0,"Press"			0059FA 00416E79            B   294    						db 0,"Any"				0059FE 004B6579            B   295    						db 0,"Key"				005A02 00456E74 6572       B   296    						db 0,"Enter"			005A08 9A455845 43         B   297    						db 9ah,"EXEC"			                           B   298    				
005A0D 0052756E            B   299    						db 0,"Run"				005A11 00536372 697074     B   300    						db 0,"Script"			005A18 00594553            B   301    yes_txt					db 0,"YES" 				005A1C 00546F              B   302    						db 0,"To"				005A1F 00536574            B   303    						db 0,"Set"				005A23 00436F6E 74696E75   B   304    						db 0,"Continue"			005A2B 65 
005A2C 004E6F6E 65         B   305    						db 0,"None"				005A31 00447269 766572     B   306    						db 0,"Driver"			005A38 9B3C                B   307    						db 9bh,"<"				005A3A 004E6577 6572       B   308    						db 0,"Newer"			005A40 00526571 75697265   B   309    						db 0,"Required"			005A48 64 
005A49 00465047 4120636F   B   310    						db 0,"FPGA config"		005A51 6E666967 
005A55 00556E63 68616E67   B   311    						db 0,"Unchanged"		005A5D 6564 
005A5F 006C6F63 206C656E   B   312    						db 0,"loc len [per vol 
005A67 205B7065 7220766F 
005A6F 6C206368 616E7320 
005A77 6C6F6F70 3F5D20 
005A7E 9C50414C 45545445   B   313    						db 9ch,"PALETTE"		005A86 0070616C 65747465   B   314    						db 0,"palette"			                           B   315    						
005A8E 9D4D4F55 5345       B   316    						db 9dh,"MOUSE"			005A94 00456E61 626C65     B   317    						db 0,"Enable"			005A9B 004B6579 626F6172   B   318    						db 0,"Keyboard"			005AA3 64 
005AA4 00446574 65637465   B   319    						db 0,"Detected"			005AAC 64 
005AAD 004D6F75 7365       B   320    						db 0,"Mouse"			005AB3 00536563 746F72     B   321    						db 0,"Sector"			005ABA 00496E63 6F727265   B   322    						db 0,"Incorrect"		005AC2 6374 
005AC4 9E564D4F 4445       B   323    						db 9eh,"VMODE"			005ACA 00566964 656F       B   324    						db 0,"Video"			005AD0 004D6F64 65         B   325    						db 0,"Mode"				005AD5 9F464F4E 54         B   326    						db 9fh,"FONT"			005ADA 00416E64            B   327    						db 0,"And"				005ADE 00536176 696E67     B   328    						db 0,"Saving"			005AE5 00556E73 7570706F   B   329    						db 0,"Unsupported"		005AED 72746564 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005AF1 A0534554            B   330    						db 0a0h,"SET"			005AF5 005B7661 723D7374   B   331    						db 0,"[var=string]"		005AFD 72696E67 5D 
                           B   332    
005B02 00456E76 6172       B   333    						db 0,"Envar"			005B08 A1445A              B   334    						db 0a1h,"DZ"			005B0B 0041444C            B   335    						db 0,"ADL"				005B0F 005A3830            B   336    						db 0,"Z80"				005B13 00506C61 79         B   337    						db 0,"Play"				005B18 00417564 696F       B   338    						db 0,"Audio"			                           B   339    						
005B1E 0001                B   340    						db 0,1					                           B   341    
                           B   342    
                           B   343    
                           B   344    
                           B   345    
005B20 2199696A 5F916F92   B   346    save_append_msg			db 021h,099h,069h,06ah,
005B28 9700 
005B2A 2F0A9300            B   347    os_loadaddress_msg 		db 02fh,00ah,093h,0		005B2E 21649300            B   348    os_filesize_msg			db 021h,064h,093h,0		005B32 94219700            B   349    ser_rec_msg				db 094h,021h,097h,0		005B36 956F9897 00         B   350    ser_rec2_msg			db 095h,06fh,098h,097h,
005B3B 966F9897 00         B   351    ser_send_msg			db 096h,06fh,098h,097h,
005B40 9521BBBC 989700     B   352    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005B47 A77C9097 00         B   353    hw_err_msg				db 0a7h,07ch,090h,097h,
005B4C 607C00              B   354    disk_err_msg			db 060h,07ch,0			005B4F A1779797 00         B   355    script_aborted_msg		db 0a1h,077h,097h,097h,
005B54 76B2B397 00         B   356    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   357    
005B59 9700                B   358    packed_help1				db 097h,0
005B5B 0100                B   359    							db 001h,0			005B5D 0200                B   360    							db 002h,0			005B5F 3307095F 4F500B00   B   361    							db 033h,007h,009h,0
005B67 3407515F 4F1400     B   362    							db 034h,007h,051h,0
005B6E 37070707 5F195000   B   363    							db 037h,007h,007h,0
005B76 3B075FC2 1700       B   364    							db 03bh,007h,05fh,0
005B7C C1075FC3 1700       B   365    							db 0c1h,007h,05fh,0
005B82 3F070754 5F0E5000   B   366    							db 03fh,007h,007h,0
005B8A 42075F0F 0A00       B   367    							db 042h,007h,05fh,0
005B90 3E070709 5F0D5000   B   368    							db 03eh,007h,007h,0
005B98 44075F10 500B00     B   369    							db 044h,007h,05fh,0
005B9F 475F1011 1200       B   370    							db 047h,05fh,010h,0
005BA5 4C075F10 50131400   B   371    							db 04ch,007h,05fh,0
                           B   372    	
005BAD 9700                B   373    							db 097h,0
005BAF 0300                B   374    							db 003h,0			005BB1 0400                B   375    							db 004h,0			005BB3 38231E1D 5F1B601E   B   376    							db 038h,023h,01eh,0
005BBB 1D00 
005BBD 3C1F5F20 2100       B   377    							db 03ch,01fh,05fh,0
005BC3 3D5F101D 00         B   378    							db 03dh,05fh,010h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005BC8 411A995F 551C00     B   379    							db 041h,01ah,099h,0
005BCF 431F075F 2F2100     B   380    							db 043h,01fh,007h,0
005BD6 561D5F24 1D00       B   381    							db 056h,01dh,05fh,0
005BDC 455F2557 00         B   382    							db 045h,05fh,025h,0
005BE1 481D5F29 1D00       B   383    							db 048h,01dh,05fh,0
005BE7 4958595F 2A2100     B   384    							db 049h,058h,059h,0
005BEE 4A1F075F 2C2100     B   385    							db 04ah,01fh,007h,0
005BF5 4B1F075A 5F2D2100   B   386    							db 04bh,01fh,007h,0
005BFD 4D1F075A 5F2E2100   B   387    							db 04dh,01fh,007h,0
005C05 235F1860 00         B   388    							db 023h,05fh,018h,0
                           B   389    
005C0A 9700                B   390    							db 097h,0
005C0C 0500                B   391    							db 005h,0			005C0E 0600                B   392    							db 006h,0			005C10 395F1516 00         B   393    							db 039h,05fh,015h,0
005C15 9F1F5FA0 A100       B   394    							db 09fh,01fh,05fh,0
005C1B BA1F5F1B 8200       B   395    							db 0bah,01fh,05fh,0
005C21 B05FB1B0 A700       B   396    							db 0b0h,05fh,0b1h,0
005C27 AE095F1B AF00       B   397    							db 0aeh,09h,05fh,01
005C2D 3A325F1B 5B00       B   398    							db 03ah,032h,05fh,0
005C33 BEBF5FA4 C000       B   399    							db 0beh,0bfh,05fh,0
005C39 35AD5FC4 5013C500   B   400    							db 035h,0adh,05fh,0
005C41 4E5F1030 3100       B   401    							db 04eh,05fh,010h,0
005C47 B7095F1B B8B900     B   402    							db 0b7h,09h,5fh,01b
005C4E 5C5F105D 00         B   403    							db 05ch,05fh,010h,0
005C53 9700                B   404    							db 097h,0
005C55 FF                  B   405    							db 0ffh
                           B   406    
                           B   407    
                           B   408    
                           B   409    
005C56 BB1D00              B   410    os_cmd_locs					dw24 os_cmd_colon	005C59 992C00              B   411    							dw24 os_cmd_gtr		005C5C 6C3600              B   412    							dw24 os_cmd_sound	005C5F 621C00              B   413    							dw24 os_cmd_c		005C62 CF1C00              B   414    							dw24 os_cmd_cd		005C65 B51D00              B   415    							dw24 os_cmd_cls		005C68 D33400              B   416    							dw24 os_cmd_pen		005C6B D51D00              B   417    							dw24 os_cmd_d		                           B   418    					
005C6E 362900              B   419    							dw24 os_cmd_del		005C71 4B2900              B   420    							dw24 os_cmd_dir		005C74 C72B00              B   421    							dw24 os_cmd_h		005C77 472A00              B   422    							dw24 os_cmd_f		005C7A 6F2A00              B   423    							dw24 os_cmd_format	005C7D CD2C00              B   424    							dw24 os_cmd_lb		005C80 5C2D00              B   425    							dw24 os_cmd_m		005C83 5C3200              B   426    							dw24 os_cmd_remount
                           B   427    
005C86 B32D00              B   428    							dw24 os_cmd_r		005C89 E42E00              B   429    							dw24 os_cmd_rd		005C8C F12E00              B   430    							dw24 os_cmd_rn		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C8F 752F00              B   431    							dw24 os_cmd_rx		005C92 0D2F00              B   432    							dw24 os_cmd_sb		005C95 083200              B   433    							dw24 os_cmd_t		005C98 9C3100              B   434    							dw24 os_cmd_tx		005C9B 683200              B   435    							dw24 os_cmd_vers	                           B   436    							
005C9E A62D00              B   437    							dw24 os_cmd_md		005CA1 752C00              B   438    							dw24 os_cmd_help	005CA4 993200              B   439    							dw24 os_cmd_exec	005CA7 D13400              B   440    							dw24 os_cmd_ltn		005CAA F73400              B   441    							dw24 os_cmd_palette
005CAD 283500              B   442    							dw24 os_cmd_mouse	005CB0 643500              B   443    							dw24 os_cmd_vmode	005CB3 743500              B   444    							dw24 os_cmd_font	                           B   445    							
005CB6 033600              B   446    							dw24 os_cmd_set		005CB9 5F3600              B   447    							dw24 os_cmd_dz		                           B   448    							
                           B   449    								
005CBC 00                  B   450    packed_msg_list				db 0				                           B   451    		
005CBD 606100              B   452    							db 060h,061h,0		005CC0 21626300            B   453    							db 021h,062h,063h,0
005CC4 1D6100              B   454    							db 01dh,061h,0		005CC7 628C1D00            B   455    							db 062h,08ch,01dh,0
005CCB 1D8D628E 00         B   456    							db 01dh,08dh,062h,0
005CD0 628C2100            B   457    							db 062h,08ch,021h,0
005CD4 21648D65 00         B   458    							db 021h,064h,08dh,0
005CD9 0A666768 00         B   459    							db 00ah,066h,067h,0
005CDE 2199696A 00         B   460    							db 021h,099h,069h,0
005CE3 696B6C00            B   461    							db 069h,06bh,06ch,0
                           B   462    					
005CE7 727300              B   463    							db 072h,073h,0		005CEA 877500              B   464    							db 087h,075h,0		005CED 76219900            B   465    							db 076h,021h,099h,0
                           B   466    					
005CF1 87B500              B   467    							db 087h,0b5h,0		005CF4 797400              B   468    							db 079h,074h,0		005CF7 9A7A00              B   469    bytes_loaded_msg			db 09ah,07ah,0		005CFA 7B7C00              B   470    							db 07bh,07ch,0		005CFD 747D00              B   471    							db 074h,07dh,0		                           B   472    
005D00 627F00              B   473    format_err_msg				db 062h,07fh,0		                           B   474    
005D03 816600              B   475    							db 081h,066h,0		005D06 21998384 00         B   476    							db 021h,099h,083h,0
005D0B 76260A00            B   477    							db 076h,026h,00ah,0
005D0F 76216400            B   478    							db 076h,021h,064h,0
005D13 2D7700              B   479    							db 02dh,077h,0		005D16 2D7C6B85 00         B   480    							db 02dh,07ch,06bh,0
005D1B 628C080C 00         B   481    							db 062h,08ch,08h,0c
005D20 A9316708 AA00       B   482    							db 0a9h,031h,067h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D26 768F0A00            B   483    							db 076h,08fh,00ah,0
005D2A 76850A00            B   484    							db 076h,085h,00ah,0
                           B   485    					
005D2E 746800              B   486    							db 074h,068h,0		005D31 887D00              B   487    							db 088h,07dh,0		005D34 8900                B   488    ok_msg						db 089h,0			                           B   489    					
005D36 876000              B   490    							db 087h,060h,0		005D39 1A627800            B   491    							db 01ah,062h,078h,0
                           B   492    					
005D3D 1D626300            B   493    							db 01dh,062h,063h,0
005D41 7700                B   494    							db 077h,0			                           B   495    					
005D43 21996D00            B   496    							db 021h,099h,06dh,0
005D47 8A508B00            B   497    							db 08ah,050h,08bh,0
005D4B 6F71706E 00         B   498    							db 06fh,071h,070h,0
005D50 763600              B   499    no_vols_msg					db 076h,036h,0		005D53 97A66300            B   500    none_found_msg				db 097h,0a6h,063h,0
                           B   501    							
005D57 B62100              B   502    							db 0b6h,021h,0		005D5A A9316708 AA00       B   503    							db 0a9h,031h,067h,0
005D60 21AC00              B   504    							db 021h,0ach,0		                           B   505    							
005D63 766F00              B   506    							db 076h,06fh,0		005D66 746F00              B   507    							db 074h,06fh,0		005D69 66676800            B   508    							db 066h,067h,068h,0
005D6D BD1A00              B   509    							db 0bdh,01ah,0		005D70 1A62B300            B   510    							db 01ah,062h,0b3h,0
005D74 1A7C00              B   511    							db 01ah,07ch,0		005D77 A17C00              B   512    							db 0a1h,07ch,0		                           B   513    							
005D7A FF                  B   514    							db 0ffh				                           B   515    
                           B   516    ;----------------------------------------------
                           B   517    
005D7B                     B   518    kernal_error_code_translation
                           B   519    
005D7B 242D2E14 08110F2A   B   520    					db 24h,2dh,2eh,14h, 08h,11h
005D83 2F303132 331F 
                           B   521    					
005D89                     B   522    fs_error_code_translation
                           B   523    
005D89 00010203 04050607   B   524    					db 00h,01h,02h,03h,04h,05h,
005D91 08090A0B 0C0D1321 
005D99 22232425 260E0000   B   525    					db 22h,23h,24h,25h,26h,0eh,
                           B   526    
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    ; Scancode to ASCII keymaps
                           B   530    ;----------------------------------------------
                           B   531    
                           C     0    include	'UK_keymap.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005DA1                     C     1    keymap:
005DA1 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005DA9 00000000 00006000 
005DB1 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005DB9 00007A73 61773200 
005DC1 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005DC9 00207666 74723500 
005DD1 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005DD9 00006D6A 75373800 
005DE1 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005DE9 002E2F6C 3B702D00 
005DF1 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005DF9 0000005D 00230000 
005E01 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005E09 00000000 00000000 
005E11 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005E19 21000000 5A534157 
005E21 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005E29 A3000020 56465452 
005E31 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005E39 5E000000 4D4A5526 
005E41 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005E49 2800003E 3F4C3A50 
005E51 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005E59 00000000 007D007E 
005E61 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005E69 00000000 00000000 
005E71 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005E79 00000000 00000000 
005E81 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005E89 00000000 00000000 
005E91 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005E99 00000000 00000000 
005EA1 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005EA9 00000000 00000000 
005EB1 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005EB9 00000000 00000000 
005EC1 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   533    
       00005DA1            B   534    unshifted_keymap equ keymap+00h
       00005E03            B   535    shifted_keymap   equ keymap+62h
       00005E65            B   536    alted_keymap	 equ keymap+c4h
                           B   537    	
                           B   538    ;----------------------------------------------
                           B   539    
005EC7 00                  B   540    ui_index				db 0				; u
005EC8 00                  B   541    ui_maxchars				db 0				; "
005EC9 000000              B   542    ui_string_addr			dw24 0				; "
                           B   543    
                           B   544    ;----------------------------------------------
                           B   545    ; OS Display parameters
                           B   546    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   547    
005ECC 00                  B   548    video_mode				db 0
005ECD 0700                B   549    current_pen				dw 07h				; C
005ECF 0000                B   550    background_colour		dw 00h				; F
                           B   551    
005ED1 00000F00 000F0F0F   B   552    pen_palette				dw 0000h,000fh,0f00h,0f
005ED9 F000FF00 F00FFF0F 
005EE1 55059909 CC0C710F   B   553    						dw 0555h,0999h,0ccch,0f
005EE9 7F00F80D 40088C03 
                           B   554    
005EF1 00                  B   555    plotchar_colour			db 0				; c
                           B   556    
005EF2 00                  B   557    char_under_cursor		db 0			
005EF3 00                  B   558    cursor_present			db 0				; 1
005EF4 00                  B   559    overwrite_mode			db 0
005EF5 00                  B   560    cursor_image_char		db 0
                           B   561    
                           B   562    ;----------------------------------------------
                           B   563    
005EF6                     B   564    display_parameters
                           B   565    
005EF6 00                  B   566    video_doubling			db 0
005EF7 000000              B   567    charmap_rows			dw24 0					005EFA 000000              B   568    charmap_columns			dw24 0				
                           B   569    
                           B   570    ;----------------------------------------------
                           B   571    
005EFD                     B   572    vmode_parameter_list
                           B   573    
005EFD 00503C              B   574    				db 00b, 80,60	; vmode 0 (vide
005F00 01501E              B   575    				db 01b, 80,30	; vmode 1
005F03 02283C              B   576    				db 10b, 40,60	; vmode 2	
005F06 03281E              B   577    				db 11b, 40,30	; vmode 3
                           B   578    				
                           B   579    ;==============================================
                           B   580    ;  Serial Routine Data
                           B   581    ;==============================================
                           B   582    
005F09 000000              B   583    serial_ez80_address		dw24 0
005F0C 000000              B   584    serial_file_length		dw24 0
005F0F 000000              B   585    serial_fn_addr			dw24 0
005F12 00 00 00 00 00 00   B   586    serial_filename			blkb 18,0		
005F18 00 00 00 00 00 00 
005F1E 00 00 00 00 00 00 
005F24 00                  B   587    serial_fn_length		db 0
005F25 00                  B   588    serial_timeout			db 0
                           B   589    
005F26 00 00 00 00 00 00   B   590    serial_fileheader		blkb 20,0
005F2C 00 00 00 00 00 00 
005F32 00 00 00 00 00 00 
005F38 00 00 
005F3A 5A383050 2E464845   B   591    serial_header_id		db "Z80P.FHEADER"		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F42 41444552 
005F46 00                  B   592    serial_transfer_started	db 0
                           B   593    
005F47 00                  B   594    anim_wait_count			db 0
                           B   595    
                           B   596    ;==============================================
                           B   597    
005F48 F3C8                B   598    intellimouse_seq	db 0f3h,200
005F4A F364                B   599    					db 0f3h,100
005F4C F350                B   600    					db 0f3h,80
                           B   601    
005F4E E803                B   602    mouse_settings_seq	db 0e8h,default_resolution
005F50 E6                  B   603    					db default_scaling
005F51 F364                B   604    					db 0f3h,default_sample_rate
005F53 F4                  B   605    					db 0f4h
                           B   606    					
                           B   607    ;----------------------------------------------
                           B   608    ; FILE SYSTEM RELATED VARIABLES
                           B   609    ;----------------------------------------------
                           B   610    
005F54 00                  B   611    boot_drive			db 0
                           B   612    
005F55 00                  B   613    current_volume		db 0
                           B   614    	
005F56 00                  B   615    current_driver		db 0			;normally u
                           B   616    
005F57 00                  B   617    device_count		db 0			;IE: the nu
                           B   618    
005F58 00                  B   619    volume_count		db 0
                           B   620    				
005F59 20564F4C 303A00     B   621    vol_txt				db " VOL0:",0	;space pref
005F60 44455630 3A00       B   622    dev_txt				db "DEV0:",0
                           B   623    
005F66 000000              B   624    sector_rd_wr_addr	dw24 0
                           B   625    
                           B   626    ;==============================================
                           B   627    
                           B   628    ; Add storage device drivers here, end with 0
                           B   629    
005F69 BE3700              B   630    driver_table		dw24 sd_card_driver	;Device
005F6C 000000              B   631    					dw24 0				;last d
                           B   632    
                           B   633    ; Each driver's code should have a header in th
                           B   634    ; ---------------------------------------------
                           B   635    ; $0    = JP to get ID routin
                           B   636    ; $4    = JP to read sector routine
                           B   637    ; $8    = JP to write sector routinee
                           B   638    ; $c    = ASCII name of device type (null termi
                           B   639    ;==============================================
                           B   640    
005F6F                     B   641    volume_dir_clusters
                           B   642    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F6F 00 00 00 00 00 00   B   643    					blkb max_volumes*3,0
005F75 00 00 00 00 00 00 
005F7B 00 00 00 00 00 00 
005F81 00 00 00 00 00 00 
                           B   644    	
005F87                     B   645    volume_mount_list
                           B   646    
005F87 00 00 00 00 00 00   B   647    					blkb max_volumes*16,0
005F8D 00 00 00 00 00 00 
005F93 00 00 00 00 00 00 
005F99 00 00 00 00 00 00 
005F9F 00 00 00 00 00 00 
005FA5 00 00 00 00 00 00 
005FAB 00 00 00 00 00 00 
005FB1 00 00 00 00 00 00 
005FB7 00 00 00 00 00 00 
005FBD 00 00 00 00 00 00 
005FC3 00 00 00 00 00 00 
005FC9 00 00 00 00 00 00 
005FCF 00 00 00 00 00 00 
005FD5 00 00 00 00 00 00 
005FDB 00 00 00 00 00 00 
005FE1 00 00 00 00 00 00 
005FE7 00 00 00 00 00 00 
005FED 00 00 00 00 00 00 
005FF3 00 00 00 00 00 00 
005FF9 00 00 00 00 00 00 
005FFF 00 00 00 00 00 00 
006005 00 00 
                           B   648    
                           B   649    ; Each entry is 16 bytes in the form:
                           B   650    
                           B   651    ; OFFSETS
                           B   652    ; -------
                           B   653    ; $00 - Volume is present (0/1)
                           B   654    ; $01 - Volume's host driver number (1 byte)	                           B   655    ; $02 - [reserved]
                           B   656    ; $03 - [reserved]
                           B   657    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   658    ; $07 - Partition number on host drive (0/1/2/3
                           B   659    ; $08 - Offset in sectors from MBR to partition
                           B   660    ; $0c - [reserved]
                           B   661    ; $0d - [reserved]	
                           B   662    ; $0e - [reserved]
                           B   663    ; $0f - [reserved]
                           B   664    
                           B   665    ;==============================================
                           B   666    
006007                     B   667    host_device_hardware_info
                           B   668    
006007 00 00 00 00 00 00   B   669    					blkb 32*4,0
00600D 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006013 00 00 00 00 00 00 
006019 00 00 00 00 00 00 
00601F 00 00 00 00 00 00 
006025 00 00 00 00 00 00 
00602B 00 00 00 00 00 00 
006031 00 00 00 00 00 00 
006037 00 00 00 00 00 00 
00603D 00 00 00 00 00 00 
006043 00 00 00 00 00 00 
006049 00 00 00 00 00 00 
00604F 00 00 00 00 00 00 
006055 00 00 00 00 00 00 
00605B 00 00 00 00 00 00 
006061 00 00 00 00 00 00 
006067 00 00 00 00 00 00 
00606D 00 00 00 00 00 00 
006073 00 00 00 00 00 00 
006079 00 00 00 00 00 00 
00607F 00 00 00 00 00 00 
006085 00 00 
                           B   670    
                           B   671    ; Each entry is 32 bytes..
                           B   672    ;
                           B   673    ; OFFSETS
                           B   674    ; -------
                           B   675    ; $00 - Device driver number
                           B   676    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   677    ; $05 - Zero terminated hardware name (22 ASCII
                           B   678    ; (remaining bytes to $1F currently unused)
                           B   679    
                           B   680    ;----------------------------------------------
                           B   681    
006087 000000              B   682    dhwn_temp_pointer		dw24 0
                           B   683    
00608A 00                  B   684    partition_temp			db 0
00608B 00                  B   685    vols_on_device_temp		db 0
00608C 00                  B   686    sys_driver_backup		db 0
00608D 00                  B   687    os_quiet_mode			db 0
                           B   688    
00608E 866900              B   689    default_load_addr		dw24 os_max_addr
                           B   690    
                           B   691    ;----------------------------------------------
                           B   692    
006091 00 00 00 00 00 00   B   693    time_data				blkb	7,0
006097 00 
                           B   694    
006098 00                  B   695    frozen					db 0
006099 01                  B   696    first_run				db 1
00609A 01                  B   697    devices_connected		db 1					                           B   698    
                           B   699    ;----------------------------------------------
                           B   700    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00609B 866900              B   701    sysram_os_highest		dw24 os_max_addr
00609E 000080              B   702    vram_a_os_highest		dw24 vram_a_addr
0060A1 0000C0              B   703    vram_b_os_highest		dw24 vram_b_addr
                           B   704    
0060A4 000000              B   705    charmap_size			dw24 0
                           B   706    
                           B   707    ;----------------------------------------------
                           B   708    
0060A7 00                  B   709    store_a1				db 0		
0060A8 000000              B   710    store_bc1				dw24 0
0060AB 000000              B   711    store_de1				dw24 0
0060AE 000000              B   712    store_hl1				dw24 0
0060B1 00                  B   713    store_a2				db 0
0060B2 000000              B   714    store_bc2				dw24 0
0060B5 000000              B   715    store_de2				dw24 0
0060B8 000000              B   716    store_hl2				dw24 0
0060BB 000000              B   717    store_ix				dw24 0
0060BE 000000              B   718    store_iy				dw24 0
0060C1 000000              B   719    store_pc				dw24 0		;only relev
0060C4 000000              B   720    store_spl				dw24 0
0060C7 0000                B   721    store_sps				dw 0
0060C9 00                  B   722    store_mbase				db 0
0060CA 00                  B   723    store_f	 				db 0
0060CB 00                  B   724    store_adl				db 0
                           B   725    
                           B   726    ;----------------------------------------------
0060CC                     B   727    os_variables
                           B   728    ;----------------------------------------------
                           B   729    
0060CC 000000              B   730    kernal_ix_cache			dw24 0
                           B   731    
0060CF 00                  B   732    store_registers			db 0
0060D0 000000              B   733    com_start_addr			dw24 0
                           B   734    
0060D3 00 00 00 00 00 00   B   735    temp_string				blkb max_buffer_chars+2
0060D9 00 00 00 00 00 00 
0060DF 00 00 00 00 00 00 
0060E5 00 00 00 00 00 00 
0060EB 00 00 00 00 00 00 
0060F1 00 00 00 00 00 00 
0060F7 00 00 00 00 00 00 
0060FD 00 00 00 00 00 00 
006103 00 00 00 00 00 00 
006109 00 00 00 00 00 00 
00610F 00 00 00 00 00 00 
006115 00 00 00 00 00 00 
00611B 00 00 00 00 00 00 
006121 00 00 00 00 
006125 00 00 00 00 00 00   B   736    script_fn				blkb 13,0
00612B 00 00 00 00 00 00 
006131 00 
                           B   737    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006132 00                  B   738    sector_lba0				db 0			; keep 
006133 00                  B   739    sector_lba1				db 0
006134 00                  B   740    sector_lba2				db 0
006135 00                  B   741    sector_lba3				db 0
                           B   742    
                           B   743    ;----------------------------------------------
                           B   744    
006136 000000              B   745    cursor_pos				dw24 0			; 3rd b
                           B   746    
       00006136            B   747    cursor_y 				equ cursor_pos
       00006137            B   748    cursor_x 				equ cursor_pos+1
                           B   749    						
006139 00                  B   750    cursorflashtimer		db 0
00613A 00                  B   751    cursor_status			db 0
00613B 00                  B   752    os_linecount			db 0
                           B   753    		
00613C 000000              B   754    mem_mon_addr			dw24 0
00613F 000000              B   755    cmdop_start_address		dw24 0
006142 000000              B   756    cmdop_end_address		dw24 0
006145 000000              B   757    copy_dest_address		dw24 0
006148 000000              B   758    hex_address				dw24 0
                           B   759    
00614B 000000              B   760    find_hexstringascii 	dw24 0
00614E 000000              B   761    xrr_temp				dw24 0
006151 00                  B   762    temphex					db 0
006152 00                  B   763    fillbyte				db 0 
006153 00                  B   764    ui_im_cache				db 0
                           B   765    
006154 00 00 00 00 00 00   B   766    commandstring			blkb max_buffer_chars+2
00615A 00 00 00 00 00 00 
006160 00 00 00 00 00 00 
006166 00 00 00 00 00 00 
00616C 00 00 00 00 00 00 
006172 00 00 00 00 00 00 
006178 00 00 00 00 00 00 
00617E 00 00 00 00 00 00 
006184 00 00 00 00 00 00 
00618A 00 00 00 00 00 00 
006190 00 00 00 00 00 00 
006196 00 00 00 00 00 00 
00619C 00 00 00 00 00 00 
0061A2 00 00 00 00 
0061A6 00 00 00 00 00 00   B   767    output_line				blkb max_buffer_chars+2
0061AC 00 00 00 00 00 00 
0061B2 00 00 00 00 00 00 
0061B8 00 00 00 00 00 00 
0061BE 00 00 00 00 00 00 
0061C4 00 00 00 00 00 00 
0061CA 00 00 00 00 00 00 
0061D0 00 00 00 00 00 00 
0061D6 00 00 00 00 00 00 
0061DC 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0061E2 00 00 00 00 00 00 
0061E8 00 00 00 00 00 00 
0061EE 00 00 00 00 00 00 
0061F4 00 00 00 00 
                           B   768    				
0061F8 000000              B   769    os_args_loc				dw24 0
0061FB 000000              B   770    os_args_pos_cache		dw24 0
                           B   771    
0061FE 000000              B   772    os_dir_block_cache  	dw24 0
006201 000000              B   773    os_extcmd_jmp_addr		dw24 0
                           B   774    
                           B   775    
006204 000000              B   776    script_dir				dw24 0
006207 000000              B   777    script_file_offset		dw24 0
00620A 000000              B   778    script_length			dw24 0
                           B   779    
00620D 00                  B   780    script_flags			db 0
                           B   781    
00620E 00 00 00 00 00 00   B   782    if_name_txt				blkb max_if_chars+2,0
006214 00 00 00 00 00 00 
00621A 00 00 00 00 00 00 
006220 00 00 00 00 00 00   B   783    if_value_txt			blkb max_if_chars+2,0
006226 00 00 00 00 00 00 
00622C 00 00 00 00 00 00 
006232 00 00 00 00 00 00   B   784    if_label_txt			blkb max_if_chars+2,0
006238 00 00 00 00 00 00 
00623E 00 00 00 00 00 00 
                           B   785    
                           B   786    
006244 0000                B   787    char_to_print			db 0,0	; zero terminat
                           B   788    
                           B   789    ;----------------------------------------------
                           B   790    ; Keyboard buffer and registers
                           B   791    ;----------------------------------------------
                           B   792    
006246 00 00 00 00 00 00   B   793    scancode_buffer			blkb 32,0
00624C 00 00 00 00 00 00 
006252 00 00 00 00 00 00 
006258 00 00 00 00 00 00 
00625E 00 00 00 00 00 00 
006264 00 00 
                           B   794    
006266 00                  B   795    key_buf_wr_idx			db 0
006267 00                  B   796    key_buf_rd_idx			db 0
006268 00                  B   797    key_release_mode		db 0		
006269 00                  B   798    not_currently_used		db 0
00626A 00                  B   799    key_mod_flags			db 0
00626B 00                  B   800    current_scancode		db 0
00626C 00                  B   801    current_asciicode		db 0
                           B   802    
                           B   803    ;----------------------------------------------
                           B   804    ; Mouse related registers
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   805    ;----------------------------------------------
                           B   806    
00626D 00                  B   807    mouse_id				db 0
00626E 00                  B   808    mouse_packet_size		db 0
                           B   809    
00626F 00 00 00 00         B   810    mouse_packet			blkb 4,0			; t
006273 00                  B   811    mouse_packet_index		db 0				;
006274 00                  B   812    mouse_buttons			db 0				;
006275 000000              B   813    mouse_disp_x			dw24 0				; c
006278 000000              B   814    mouse_disp_y			dw24 0				; c
00627B 00                  B   815    mouse_wheel				db 0				; m
00627C 00                  B   816    mouse_updated			db 0
                           B   817    
00627D 000000              B   818    mouse_window_size_x		dw24 0				; t
006280 000000              B   819    mouse_window_size_y		dw24 0
006283 000000              B   820    mouse_abs_x				dw24 0
006286 000000              B   821    mouse_abs_y				dw24 0
006289 000000              B   822    mouse_disp_x_old		dw24 0
00628C 000000              B   823    mouse_disp_y_old		dw24 0
00628F 000000              B   824    mouse_disp_x_buffer		dw24 0
006292 000000              B   825    mouse_disp_y_buffer		dw24 0
006295 00                  B   826    mouse_new_window		db 0
                           B   827    
                           B   828    ;----------------------------------------------
       00006136            B   829    first_os_var			equ cursor_y
006296 00                  B   830    last_os_var				db 0
                           B   831    ;----------------------------------------------
                           B   832    
                           B   833    ;==============================================
                           B   834    ; Environment variables
                           B   835    ;==============================================
                           B   836    
006297 4552524F 523D3030   B   837    envar_list				db "ERROR=00",0
00629F 00 
0062A0 FF                  B   838    first_ext_ev_entry		db 0ffh
0062A1 00 00 00 00 00 00   B   839    						blkb envar_buffer_size,
0062A7 00 00 00 00 00 00 
0062AD 00 00 00 00 00 00 
0062B3 00 00 00 00 00 00 
0062B9 00 00 00 00 00 00 
0062BF 00 00 00 00 00 00 
0062C5 00 00 00 00 00 00 
0062CB 00 00 00 00 00 00 
0062D1 00 00 00 00 00 00 
0062D7 00 00 00 00 00 00 
0062DD 00 00 00 00 00 00 
0062E3 00 00 00 00 00 00 
0062E9 00 00 00 00 00 00 
0062EF 00 00 00 00 00 00 
0062F5 00 00 00 00 00 00 
0062FB 00 00 00 00 00 00 
006301 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006307 00 00 00 00 00 00 
00630D 00 00 00 00 00 00 
006313 00 00 00 00 00 00 
006319 00 00 00 00 00 00 
00631F 00 00 00 00 00 00 
006325 00 00 00 00 00 00 
00632B 00 00 00 00 00 00 
006331 00 00 00 00 00 00 
006337 00 00 00 00 00 00 
00633D 00 00 00 00 00 00 
006343 00 00 00 00 00 00 
006349 00 00 00 00 00 00 
00634F 00 00 00 00 00 00 
006355 00 00 00 00 00 00 
00635B 00 00 00 00 00 00 
006361 00 00 00 00 00 00 
006367 00 00 00 00 00 00 
00636D 00 00 00 00 00 00 
006373 00 00 00 00 00 00 
006379 00 00 00 00 00 00 
00637F 00 00 00 00 00 00 
006385 00 00 00 00 00 00 
00638B 00 00 00 00 00 00 
006391 00 00 00 00 00 00 
006397 00 00 00 00 00 00 
00639D 00 00 00 00 
                           B   840    
0063A1 A06200              B   841    envar_top_loc			dw24 first_ext_ev_entry
                           B   842    
                           B   843    ;==============================================
                           B   844    
                           B     0    	include		'phil_font_packed.asm'			0063A4                     B     1    packed_font_start
0063A4 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
0063AC 3C3C1800 181800EE 
0063B4 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
0063BC 6CFE6C6C 00187EE0 
0063C4 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
0063CC 3870E6C6 0078ECEC 
0063D4 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
0063DC 01000518 30016003 
0063E4 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
0063EC 18300010 5438FE38 
0063F4 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
0063FC 18010007 38387001 
006404 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
00640C 0000060E 1C3870E0 
006414 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
00641C 00387801 38047C00 
006424 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
00642C FE0C180C 0ECE7C00 
006434 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
00643C FEE0FC01 0E03FC00 
006444 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
00644C FE060C18 01380300 
006454 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
00645C 7C01CE03 7E0E7C01 
006464 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
00646C 00033030 00303060 
006474 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
00647C 00037E00 7E010003 
006484 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
00648C 7CEE0E3C 38003800 
006494 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
00649C 7CE6E6FE 01E60300 
0064A4 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
0064AC 7CE601E0 03E67C00 
0064B4 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
0064BC E0F8E0E0 FE00FEE0 
0064C4 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
0064CC E0EEE6E6 7C0001E6 
0064D4 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
0064DC 38057C00 7E011C04 
0064E4 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
0064EC E6030001 E006FE00 
0064F4 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
0064FC E6F6FEFE EEE6E600 
006504 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
00650C E603FCE0 E0007C01 
006514 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
00651C E603FCE6 E6007CEE 
006524 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
00652C 38060001 E6067C00 
006534 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
00653C 04D6FE6C 00E6E66C 
006544 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
00654C 7E06FC00 FE0E1C38 
006554 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
00655C 3C00C0E0 70381C0E 
006564 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
00656C 10386CC6 01000BFE 
006574 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
00657C E67E0000 E0E0FCE6 
006584 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
00658C 037C0000 06067EE6 
006594 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
00659C E07C0000 3E70FC01 
0065A4 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
0065AC 7E067C00 E0E0FC01 
0065B4 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
0065BC 387C0000 1C00011C 
0065C4 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
0065CC EE000078 0138047C 
0065D4 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
0065DC 010003FC 01E60401 
0065E4 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
0065EC 0003FCE6 E6FCE0E0 
0065F4 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
0065FC 0000DCE6 01E00301 
006604 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
00660C 00387E01 38031E01 
006614 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
00661C 0301E603 6C380100 
006624 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
00662C 03E67C38 7CE60100 
006634 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
00663C 00FE1C38 70FE003C 
006644 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
00664C 18070078 18180C18 
006654 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
00665C 0501FE07 0100FF01 
006664 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
00666C BC010029 7CC6BAA2 
006674 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
00667C 060100FF 0100FF01 
006684 009C                B    48                    db 000h,09Ch
006686                     B    49    packed_font_end
                           A  3250    
006686 00 00 00 00 00 00   A  3251    sector_buffer	blkb 512,0
00668C 00 00 00 00 00 00 
006692 00 00 00 00 00 00 
006698 00 00 00 00 00 00 
00669E 00 00 00 00 00 00 
0066A4 00 00 00 00 00 00 
0066AA 00 00 00 00 00 00 
0066B0 00 00 00 00 00 00 
0066B6 00 00 00 00 00 00 
0066BC 00 00 00 00 00 00 
0066C2 00 00 00 00 00 00 
0066C8 00 00 00 00 00 00 
0066CE 00 00 00 00 00 00 
0066D4 00 00 00 00 00 00 
0066DA 00 00 00 00 00 00 
0066E0 00 00 00 00 00 00 
0066E6 00 00 00 00 00 00 
0066EC 00 00 00 00 00 00 
0066F2 00 00 00 00 00 00 
0066F8 00 00 00 00 00 00 
0066FE 00 00 00 00 00 00 
006704 00 00 00 00 00 00 
00670A 00 00 00 00 00 00 
006710 00 00 00 00 00 00 
006716 00 00 00 00 00 00 
00671C 00 00 00 00 00 00 
006722 00 00 00 00 00 00 
006728 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00672E 00 00 00 00 00 00 
006734 00 00 00 00 00 00 
00673A 00 00 00 00 00 00 
006740 00 00 00 00 00 00 
006746 00 00 00 00 00 00 
00674C 00 00 00 00 00 00 
006752 00 00 00 00 00 00 
006758 00 00 00 00 00 00 
00675E 00 00 00 00 00 00 
006764 00 00 00 00 00 00 
00676A 00 00 00 00 00 00 
006770 00 00 00 00 00 00 
006776 00 00 00 00 00 00 
00677C 00 00 00 00 00 00 
006782 00 00 00 00 00 00 
006788 00 00 00 00 00 00 
00678E 00 00 00 00 00 00 
006794 00 00 00 00 00 00 
00679A 00 00 00 00 00 00 
0067A0 00 00 00 00 00 00 
0067A6 00 00 00 00 00 00 
0067AC 00 00 00 00 00 00 
0067B2 00 00 00 00 00 00 
0067B8 00 00 00 00 00 00 
0067BE 00 00 00 00 00 00 
0067C4 00 00 00 00 00 00 
0067CA 00 00 00 00 00 00 
0067D0 00 00 00 00 00 00 
0067D6 00 00 00 00 00 00 
0067DC 00 00 00 00 00 00 
0067E2 00 00 00 00 00 00 
0067E8 00 00 00 00 00 00 
0067EE 00 00 00 00 00 00 
0067F4 00 00 00 00 00 00 
0067FA 00 00 00 00 00 00 
006800 00 00 00 00 00 00 
006806 00 00 00 00 00 00 
00680C 00 00 00 00 00 00 
006812 00 00 00 00 00 00 
006818 00 00 00 00 00 00 
00681E 00 00 00 00 00 00 
006824 00 00 00 00 00 00 
00682A 00 00 00 00 00 00 
006830 00 00 00 00 00 00 
006836 00 00 00 00 00 00 
00683C 00 00 00 00 00 00 
006842 00 00 00 00 00 00 
006848 00 00 00 00 00 00 
00684E 00 00 00 00 00 00 
006854 00 00 00 00 00 00 
00685A 00 00 00 00 00 00 
006860 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006866 00 00 00 00 00 00 
00686C 00 00 00 00 00 00 
006872 00 00 00 00 00 00 
006878 00 00 00 00 00 00 
00687E 00 00 00 00 00 00 
006884 00 00 
                           A  3252    
006886 00 00 00 00 00 00   A  3253    scratch_pad		blkb 256,0
00688C 00 00 00 00 00 00 
006892 00 00 00 00 00 00 
006898 00 00 00 00 00 00 
00689E 00 00 00 00 00 00 
0068A4 00 00 00 00 00 00 
0068AA 00 00 00 00 00 00 
0068B0 00 00 00 00 00 00 
0068B6 00 00 00 00 00 00 
0068BC 00 00 00 00 00 00 
0068C2 00 00 00 00 00 00 
0068C8 00 00 00 00 00 00 
0068CE 00 00 00 00 00 00 
0068D4 00 00 00 00 00 00 
0068DA 00 00 00 00 00 00 
0068E0 00 00 00 00 00 00 
0068E6 00 00 00 00 00 00 
0068EC 00 00 00 00 00 00 
0068F2 00 00 00 00 00 00 
0068F8 00 00 00 00 00 00 
0068FE 00 00 00 00 00 00 
006904 00 00 00 00 00 00 
00690A 00 00 00 00 00 00 
006910 00 00 00 00 00 00 
006916 00 00 00 00 00 00 
00691C 00 00 00 00 00 00 
006922 00 00 00 00 00 00 
006928 00 00 00 00 00 00 
00692E 00 00 00 00 00 00 
006934 00 00 00 00 00 00 
00693A 00 00 00 00 00 00 
006940 00 00 00 00 00 00 
006946 00 00 00 00 00 00 
00694C 00 00 00 00 00 00 
006952 00 00 00 00 00 00 
006958 00 00 00 00 00 00 
00695E 00 00 00 00 00 00 
006964 00 00 00 00 00 00 
00696A 00 00 00 00 00 00 
006970 00 00 00 00 00 00 
006976 00 00 00 00 00 00 
00697C 00 00 00 00 00 00 
006982 00 00 00 00 
                           A  3254    
                           A  3255    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     16:48:10     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3256    	
006986 00                  A  3257    os_max_addr		db 0							                           A  3258    	
                           A  3259    
                           A  3260    ;==============================================
                           A  3261    
                           A  3262    				end	
                           A  3263    				
                           A  3264    ;==============================================
                           A  3265    	


Errors: 0
Warnings: 0
Lines Assembled: 12572
