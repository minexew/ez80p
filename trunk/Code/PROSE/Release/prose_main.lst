Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000005            B    12    port_irq_flags			equ 005h
       00000006            B    13    port_nmi_ack			equ 006h
       00000007            B    14    port_ps2_ctrl			equ 007h
       00000008            B    15    port_selector			equ 008h
       00000006            B    16    port_mouse_data			equ 006h
       00000009            B    17    port_clear_flags		equ 009h
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
                           B    48    
                           B    49    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000035            A    14    prose_version			equ 35h
       00000107            A    15    amoeba_version_required	equ 107h
                           A    16    
       00000A00            A    17    os_location			 	equ 0a00h
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
                           A    35    			
000A10 C3 4E 0A 00         A    36    				jp os_first_run					000A14 C3 E3 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
                           A    42    
000A20                     A    43    prose_kernal
                           A    44    
                           A    45    ; External apps can call kernal routines by doi
                           A    46    ; Set A to kernal routine number required (see 
                           A    47    ; (this routine is always located at os_locatio
                           A    48    
000A20 D9                  A    49    				exx
000A21 DD22 EC 60 00       A    50    				ld (kernal_ix_cache),ix
000A26 DD21 10 55 00       A    51    				ld ix,kernal_table				000A2B 11030000            A    52    				ld de,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F 57                  A    53    				ld d,a
000A30 ED5C                A    54    				mlt de
000A32 DD19                A    55    				add ix,de						000A34 DD3700              A    56    				ld ix,(ix)						                           A    57    				
000A37 E3                  A    58    				ex (sp),hl
000A38 7D                  A    59    				ld a,l							000A39 E601                A    60    				and 1							000A3B E3                  A    61    				ex (sp),hl
000A3C D9                  A    62    				exx
000A3D FDE5                A    63    				push iy
000A3F CD 4C 0A 00         A    64    				call kr_jump					000A43 FDE1                A    65    				pop iy							000A45 DD2A EC 60 00       A    66    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    67    				ret.l							                           A    68    				
000A4C DDE9                A    69    kr_jump			jp (ix)							                           A    70    						
                           A    71    ;----------------------------------------------
                           A    72    
                           A    73    ; *******************
                           A    74    ; *   START UP OS   *
                           A    75    ; *******************
                           A    76    
000A4E                     A    77    os_first_run
                           A    78    	
000A4E B7                  A    79    				or a							000A4F 20 05               A    80    				jr nz,os_cold_start		
000A51 78                  A    81    				ld a,b
000A52 32 7A 5F 00         A    82    				ld (boot_drive),a				                           A    83    
000A56                     A    84    os_cold_start
000A56 ED7D                A    85    				stmix							000A58 F3                  A    86    				di								000A59 ED5E                A    87    				im 2							000A5B AF                  A    88    				xor a
000A5C ED6D                A    89    				ld MB,a							000A5E 4031FFFF            A    90    				ld.sis sp,0ffffh				000A62 31FFFF07            A    91    				ld sp,sys_mem_top				                           A    92    
000A66 CD E9 3B 00         A    93    				call disable_irqs
000A6A CD 8D 3D 00         A    94    				call disable_all_nmis
                           A    95    				
000A6E 3A B9 60 00         A    96    				ld a,(first_run)				000A72 B7                  A    97    				or a
000A73 28 11               A    98    				jr z,dont_resetkb
000A75 CD 30 41 00         A    99    				call init_keyboard
000A79 28 06               A   100    				jr z,kb_ok
000A7B 21 BA 60 00         A   101    				ld hl,devices_connected
000A7F CB86                A   102    				res 0,(hl)
000A81 AF                  A   103    kb_ok			xor a
000A82 32 B9 60 00         A   104    				ld (first_run),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A86                     A   105    dont_resetkb
                           A   106    				
000A86 21 C4 63 00         A   107    				ld hl,packed_font_start
000A8A 11000080            A   108    				ld de,vram_a_addr
000A8E 01 E2 02 00         A   109    				ld bc,packed_font_end-packed_fo
000A92 CD 11 16 00         A   110    				call unpack_rle
000A96 CD D5 35 00         A   111    				call convert_font
                           A   112    
000A9A CD 26 37 00         A   113    				call test_amoeba_vers
                           A   114    				
000A9E 21 EC 60 00         A   115    				ld hl,os_variables				000AA2 01 CA 01 00         A   116    				ld bc,last_os_var-os_variables
000AA6 AF                  A   117    				xor a
000AA7 CD C6 15 00         A   118    				call os_bchl_memfill
                           A   119    	
000AAB CD 6F 40 00         A   120    				call hwsc_default_hw_settings
000AAF CD C4 43 00         A   121    				call hwsc_disable_audio
                           A   122    				
000AB3 3A F2 5E 00         A   123    				ld a,(video_mode)
000AB7 CD 9F 15 00         A   124    				call os_set_vmode				                           A   125    				
000ABB 21 F7 55 00         A   126    				ld hl,welcome_message			000ABF CD 5A 0F 00         A   127    				call os_print_string
                           A   128    				
000AC3 CD 16 37 00         A   129    				call os_get_mem_high			000AC7 EB                  A   130    				ex de,hl
000AC8 CD 3A 13 00         A   131    				call os_show_hex_address
                           A   132    
000ACC CD 02 14 00         A   133    				call os_new_line
000AD0 CD 02 14 00         A   134    				call os_new_line
000AD4 CD 7A 32 00         A   135    				call os_cmd_vers				000AD8 CD 6E 32 00         A   136    				call os_cmd_remount				                           A   137    
000ADC CD 02 14 00         A   138    				call os_new_line				                           A   139    
000AE0 CD EE 41 00         A   140    				call purge_keyboard
                           A   141    				
000AE4 CD B4 3B 00         A   142    				call set_irq_vector
000AE8 CD C6 3B 00         A   143    				call enable_os_irqs
000AEC FB                  A   144    				ei
000AED CD 6D 3D 00         A   145    				call set_nmi_vector
                           A   146    				
000AF1 21 BA 60 00         A   147    				ld hl,devices_connected			000AF5 CB46                A   148    				bit 0,(hl)
000AF7 20 08               A   149    				jr nz,kb_present
000AF9 21 7A 5B 00         A   150    				ld hl,no_keyboard_msg
000AFD CD 39 14 00         A   151    				call os_show_packed_text
000B01                     A   152    kb_present				
000B01 21 47 56 00         A   153    				ld hl,startup_script_fn
000B05 22 18 62 00         A   154    				ld (os_args_loc),hl
000B09 CD AB 32 00         A   155    				call os_cmd_exec				                           A   156    									
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0D 3A B8 60 00         A   157    				ld a,(frozen)					000B11 B7                  A   158    				or a
000B12 28 11               A   159    				jr z,os_main_loop
000B14 AF                  A   160    				xor a
000B15 32 B8 60 00         A   161    				ld (frozen),a
000B19 21 9F 56 00         A   162    				ld hl,nmi_freeze_txt
000B1D CD 5A 0F 00         A   163    				call os_print_string
000B21 CD C5 2D 00         A   164    				call os_cmd_r
                           A   165    				
                           A   166    
                           A   167    ;==============================================
                           A   168    
000B25 CD 5F 40 00         A   169    os_main_loop	call hwsc_wait_vrt				                           A   170    
000B29 CD AB 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B2D CD 65 44 00         A   173    				call os_get_key_press
000B31 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B33 32 8B 62 00         A   176    				ld (current_scancode),a
000B37 78                  A   177    				ld a,b
000B38 32 8C 62 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B3C CD 3E 3F 00         A   180    				call hwsc_remove_cursor
000B40 3E18                A   181    				ld a,24							000B42 32 59 61 00         A   182    				ld (cursorflashtimer),a			000B46 AF                  A   183    				xor a
000B47 32 5A 61 00         A   184    				ld (cursor_status),a
                           A   185    				
000B4B 3A 8B 62 00         A   186    				ld a,(current_scancode)			000B4F FE70                A   187    				cp 70h
000B51 20 0C               A   188    				jr nz,os_notins
000B53 3A 1A 5F 00         A   189     				ld a,(overwrite_mode)
000B57 EE01                A   190    				xor 1
000B59 32 1A 5F 00         A   191    				ld (overwrite_mode),a
000B5D 18 C6               A   192    				jr os_main_loop
                           A   193    
000B5F FE6C                A   194    os_notins		cp 6ch
000B61 20 07               A   195    				jr nz,not_homekey
000B63 AF                  A   196    				xor a
000B64 32 57 61 00         A   197    				ld (cursor_x),a
000B68 18 BB               A   198    				jr os_main_loop
                           A   199    								
000B6A FE69                A   200    not_homekey		cp 69h
000B6C 20 24               A   201    				jr nz,not_endkey
000B6E 3A 56 61 00         A   202    				ld a,(cursor_y)					000B72 4F                  A   203    				ld c,a
000B73 3A 20 5F 00         A   204    				ld a,(charmap_columns)
000B77 47                  A   205    				ld b,a
000B78 05                  A   206    fendloop		dec b
000B79 CD AC 3F 00         A   207    				call hwsc_get_charmap_addr_xy
000B7D 7E                  A   208    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B7E FE20                A   209    				cp 20h
000B80 28 F6               A   210    				jr z,fendloop
000B82 04                  A   211    				inc b
000B83 3A 20 5F 00         A   212    				ld a,(charmap_columns)
000B87 B8                  A   213    				cp b
000B88 20 01               A   214    				jr nz,endxposok
000B8A 05                  A   215    				dec b
000B8B 78                  A   216    endxposok		ld a,b
000B8C 32 57 61 00         A   217    				ld (cursor_x),a
000B90 18 93               A   218    				jr os_main_loop
                           A   219    
000B92 21 57 61 00         A   220    not_endkey		ld hl,cursor_x					000B96 FE6B                A   221    				cp 06bh			
000B98 20 10               A   222    				jr nz,os_ntlft
000B9A 35                  A   223    				dec (hl)
000B9B 7E                  A   224    				ld a,(hl)
000B9C FEFF                A   225    				cp 0ffh	
000B9E 20 85               A   226    				jr nz,os_main_loop
000BA0 3A 20 5F 00         A   227    				ld a,(charmap_columns)
000BA4 3D                  A   228    				dec a
000BA5 77                  A   229    				ld (hl),a						000BA6 C3 25 0B 00         A   230    				jr os_main_loop
                           A   231    
000BAA FE74                A   232    os_ntlft		cp 074h							000BAC 20 10               A   233    				jr nz,os_ntrig
000BAE 34                  A   234    				inc (hl)
000BAF 3A 20 5F 00         A   235    				ld a,(charmap_columns)
000BB3 BE                  A   236    				cp (hl)
000BB4 C2 25 0B 00         A   237    				jr nz,os_main_loop
000BB8 3600                A   238    				ld (hl),0						000BBA C3 25 0B 00         A   239    				jr os_main_loop
                           A   240    
000BBE 21 56 61 00         A   241    os_ntrig		ld hl,cursor_y
000BC2 FE75                A   242    				cp 075h							000BC4 20 0D               A   243    				jr nz,os_ntup
000BC6 35                  A   244    				dec (hl)
000BC7 CB7E                A   245    				bit 7,(hl)
000BC9 CA 25 0B 00         A   246    				jr z,os_main_loop
000BCD 3600                A   247    				ld (hl),0						000BCF C3 25 0B 00         A   248    				jr os_main_loop
                           A   249    
000BD3 FE72                A   250    os_ntup			cp 072h
000BD5 20 14               A   251    				jr nz,os_ntdwn					000BD7 34                  A   252    				inc (hl)
000BD8 3A 1D 5F 00         A   253    				ld a,(charmap_rows)
000BDC BE                  A   254    				cp (hl)
000BDD C2 25 0B 00         A   255    				jr nz,os_main_loop
000BE1 3D                  A   256    				dec a
000BE2 77                  A   257    				ld (hl),a						000BE3 CD CA 3E 00         A   258    				call hwsc_scroll_up
000BE7 C3 25 0B 00         A   259    				jr os_main_loop
                           A   260    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BEB FE71                A   261    os_ntdwn		cp 071h							000BED 20 08               A   262    				jr nz,os_nodel		
000BEF 3A 57 61 00         A   263    				ld a,(cursor_x)					000BF3 47                  A   264    				ld b,a
000BF4 04                  A   265    				inc b
000BF5 18 13               A   266    				jr os_chrbk
                           A   267    
000BF7 FE66                A   268    os_nodel		cp 066h							000BF9 20 17               A   269    				jr nz,os_nbksp
000BFB 3A 57 61 00         A   270    				ld a,(cursor_x)					000BFF B7                  A   271    				or a							000C00 CA 25 0B 00         A   272    				jp z,os_main_loop
000C04 47                  A   273    				ld b,a
000C05 3D                  A   274    				dec a
000C06 32 57 61 00         A   275    				ld (cursor_x),a					000C0A CD C4 3F 00         A   276    os_chrbk		call hwsc_chars_left			000C0E C3 25 0B 00         A   277    				jp os_main_loop
                           A   278    
000C12 FE5A                A   279    os_nbksp		cp 05ah							000C14 CA 5C 0C 00         A   280    				jp z,os_enter_pressed
                           A   281    	
000C18 3A 8C 62 00         A   282    				ld a,(current_asciicode)		000C1C FE20                A   283    				cp 32							000C1E 38 38               A   284    				jr c,os_nvdun					                           A   285    
000C20 FE7B                A   286    				cp 07bh							000C22 30 12               A   287    				jr nc,os_gtcha					000C24 FE61                A   288    				cp 061h
000C26 38 04               A   289    				jr c,os_ntupc
000C28 D620                A   290    				sub 020h
000C2A 18 0A               A   291    				jr os_gtcha
000C2C FE5B                A   292    os_ntupc		cp 05bh
000C2E 30 06               A   293    				jr nc,os_gtcha
000C30 FE41                A   294    				cp 041h
000C32 38 02               A   295    				jr c,os_gtcha
000C34 C620                A   296    				add a,020h
000C36 57                  A   297    os_gtcha		ld d,a							000C37 3A 1A 5F 00         A   298    				ld a,(overwrite_mode)			000C3B B7                  A   299    				or a
000C3C CC FD 3F 00         A   300    				call z,hwsc_chars_right
                           A   301    				
000C40 ED4B 56 61 00       A   302    os_schi			ld bc,(cursor_pos)				000C45 7A                  A   303    				ld a,d							000C46 CD 05 3F 00         A   304    				call hwsc_plot_char		
000C4A 21 57 61 00         A   305    				ld hl,cursor_x					000C4E 34                  A   306    				inc (hl)
000C4F 3A 20 5F 00         A   307    				ld a,(charmap_columns)
000C53 BE                  A   308    				cp (hl)							000C54 20 02               A   309    				jr nz,os_nvdun
000C56 3600                A   310    				ld (hl),0
                           A   311    
000C58 C3 25 0B 00         A   312    os_nvdun		jp os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   313    	
                           A   314    
                           A   315    ;----------------------------------------------
                           A   316    
000C5C                     A   317    os_enter_pressed
                           A   318    	
000C5C CD 40 40 00         A   319    				call hwsc_charline_to_command_s
                           A   320    
000C60 AF                  A   321    				xor a
000C61 32 57 61 00         A   322    				ld (cursor_x),a					000C65 21 56 61 00         A   323    				ld hl,cursor_y					000C69 34                  A   324    				inc (hl)
000C6A 3A 1D 5F 00         A   325    				ld a,(charmap_rows)
000C6E BE                  A   326    				cp (hl)
000C6F 20 06               A   327    				jr nz,os_esdok
000C71 3D                  A   328    				dec a
000C72 77                  A   329    				ld (hl),a
000C73 CD CA 3E 00         A   330    				call hwsc_scroll_up
                           A   331    
000C77 CD 7F 0C 00         A   332    os_esdok		call os_parse_cmd_chk_ps		                           A   333    
000C7B C3 25 0B 00         A   334    post_csb		jp os_main_loop
                           A   335    
                           A   336    	
                           A   337    ;----------------------------------------------
                           A   338    
                           A   339    
000C7F                     A   340    os_parse_cmd_chk_ps
                           A   341    
000C7F CD 92 0C 00         A   342    				call os_parse_command_line
000C83 FEFE                A   343    				cp 0feh							000C85 C0                  A   344    				ret nz
000C86 01500000            A   345    				ld bc,max_buffer_chars			000C8A 11 74 61 00         A   346    				ld de,commandstring				000C8E EDB0                A   347    				ldir
000C90 18 ED               A   348    				jr os_parse_cmd_chk_ps
                           A   349    
                           A   350    	
                           A   351    ;----------------------------------------------
                           A   352    	
000C92                     A   353    os_parse_command_line
                           A   354    
000C92 3E01                A   355    				ld a,1
000C94 32 EF 60 00         A   356    				ld (store_registers),a			                           A   357    
000C98 21 74 61 00         A   358    				ld hl,commandstring				000C9C 0650                A   359    				ld b,max_buffer_chars			000C9E CD F8 0F 00         A   360    				call os_scan_for_non_space		000CA2 B7                  A   361    				or a							000CA3 C8                  A   362    				ret z
000CA4 11 DD 56 00         A   363    				ld de,dictionary-1				000CA8 D5                  A   364    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CA9 D1                  A   365    compcstr		pop de
000CAA E5                  A   366    				push hl
000CAB FDE1                A   367    				pop iy
000CAD 13                  A   368    notacmd			inc de
000CAE 1A                  A   369    				ld a,(de)
000CAF FE01                A   370    				cp 1							000CB1 CA 4B 0D 00         A   371    				jp z,os_no_kernal_command_found
000CB5 CB7F                A   372    				bit 7,a
000CB7 28 F4               A   373    				jr z,notacmd					000CB9 E67F                A   374    				and 07fh
000CBB 4F                  A   375    				ld c,a							000CBC D5                  A   376    				push de
000CBD 13                  A   377    cmdnscan		inc de
000CBE FD7E00              A   378    				ld a,(iy)						000CC1 CD 63 12 00         A   379    				call os_uppercasify
000CC5 47                  A   380    				ld b,a
000CC6 1A                  A   381    				ld a,(de)						000CC7 B8                  A   382    				cp b
000CC8 FD23                A   383    				inc iy
000CCA 28 F1               A   384    				jr z,cmdnscan					000CCC 1A                  A   385    nomatch			ld a,(de)						000CCD B7                  A   386    				or a
000CCE 28 04               A   387    				jr z,posmatch					000CD0 CB7F                A   388    				bit 7,a			
000CD2 28 D5               A   389    				jr z,compcstr					000CD4 FD7EFF              A   390    posmatch		ld a,(iy-1)						000CD7 FE20                A   391    				cp 32
000CD9 20 CE               A   392    				jr nz,compcstr					                           A   393    	
000CDB D1                  A   394    				pop de				
000CDC FDE5                A   395    				push iy							000CDE E1                  A   396    				pop hl
000CDF CD F8 0F 00         A   397    				call os_scan_for_non_space
000CE3 22 18 62 00         A   398    				ld (os_args_loc),hl				                           A   399    	
000CE7 21 7C 5C 00         A   400    				ld hl,os_cmd_locs
000CEB 11030000            A   401    				ld de,3
000CEF 51                  A   402    				ld d,c
000CF0 ED5C                A   403    				mlt de							000CF2 19                  A   404    				add hl,de
000CF3 ED37                A   405    				ld ix,(hl)						                           A   406    
000CF5 2A 18 62 00         A   407    				ld hl,(os_args_loc)				000CF9 CD 2D 0F 00         A   408    				call os_run_command				                           A   409    
000CFD C8                  A   410    				ret z							000CFE B7                  A   411    				or a
000CFF 20 13               A   412    				jr nz,show_erm
000D01 78                  A   413    os_hwe1			ld a,b							000D02 21 E1 59 00         A   414    os_hwerr		ld hl,hex_byte_txt		
000D06 CD A5 10 00         A   415    				call hexbyte_to_ascii	
000D0A 21 6D 5B 00         A   416    				ld hl,hw_err_msg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D0E CD 39 14 00         A   417    				call os_show_packed_text
000D12 AF                  A   418    				xor a
000D13 C9                  A   419    				ret
                           A   420    
000D14 01000000            A   421    show_erm		ld bc,0							000D18 4F                  A   422    				ld c,a
000D19 D680                A   423    				sub 080h						000D1B 38 11               A   424    				jr c,no_trans					000D1D 21 A1 5D 00         A   425    				ld hl,kernal_error_code_transla
000D21 CB77                A   426    				bit 6,a							000D23 28 06               A   427    				jr z,not_fs_err					000D25 21 AF 5D 00         A   428    				ld hl,fs_error_code_translation
000D29 D640                A   429    				sub 040h
000D2B 4F                  A   430    not_fs_err		ld c,a
000D2C 09                  A   431    				add hl,bc
000D2D 4E                  A   432    				ld c,(hl)
000D2E 0600                A   433    no_trans		ld b,0
000D30 21 E2 5C 00         A   434    				ld hl,packed_msg_list
000D34 7E                  A   435    findmsg			ld a,(hl)
000D35 FEFF                A   436    				cp 0ffh
000D37 C8                  A   437    				ret z							000D38 23                  A   438    				inc hl
000D39 B7                  A   439    				or a
000D3A 20 F8               A   440    				jr nz,findmsg					000D3C 04                  A   441    				inc b
000D3D 79                  A   442    				ld a,c							000D3E B8                  A   443    				cp b
000D3F 20 F3               A   444    				jr nz,findmsg
000D41 CD 39 14 00         A   445    				call os_show_packed_text
000D45 CD 02 14 00         A   446    				call os_new_line
000D49 AF                  A   447    				xor a
000D4A C9                  A   448    				ret
                           A   449    	
                           A   450    
000D4B                     A   451    os_no_kernal_command_found
                           A   452    
000D4B 3E30                A   453    				ld a,030h						000D4D 32 83 5F 00         A   454    fvolcmd			ld (vol_txt+4),a				000D51 F5                  A   455    				push af			
000D52 11 80 5F 00         A   456    				ld de,vol_txt+1		
000D56 0605                A   457    				ld b,5			
000D58 CD 29 12 00         A   458    				call os_compare_strings	
000D5C 28 08               A   459    				jr z,gotvolcmd		
000D5E F1                  A   460    				pop af				
000D5F 3C                  A   461    				inc a			
000D60 FE38                A   462    				cp 030h+max_volumes		
000D62 20 E9               A   463    				jr nz,fvolcmd		
000D64 18 0B               A   464    				jr novolcmd		
000D66 F1                  A   465    gotvolcmd		pop af
000D67 D630                A   466    				sub 030h
000D69 CD 06 1B 00         A   467    				call os_change_volume
000D6D C3 12 0F 00         A   468    				jp extcmderf					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   469    		
                           A   470    
                           A   471    
000D71 7E                  A   472    novolcmd		ld a,(hl)						000D72 FE47                A   473    				cp 'G'							000D74 20 29               A   474    				jr nz,not_g_cmd					000D76 23                  A   475    				inc hl
000D77 7E                  A   476    				ld a,(hl)
000D78 2B                  A   477    				dec hl
000D79 FE20                A   478    				cp ' '
000D7B 20 22               A   479    				jr nz,not_g_cmd
000D7D 23                  A   480    				inc hl
000D7E CD F8 0F 00         A   481    				call os_scan_for_non_space
000D82 22 18 62 00         A   482    				ld (os_args_loc),hl				000D86 B7                  A   483    				or a
000D87 20 04               A   484    				jr nz,gotgargs
000D89 3E1F                A   485    				ld a,01fh						000D8B 18 87               A   486    				jr show_erm
000D8D CD E4 10 00         A   487    gotgargs		call ascii_to_hex_no_scan		000D91 B7                  A   488    				or a
000D92 20 80               A   489    				jr nz,show_erm
000D94 CD 7C 3D 00         A   490    				call enable_button_nmi			000D98 D5                  A   491    				push de
000D99 DDE1                A   492    				pop ix			
000D9B C3 2D 0F 00         A   493    				jp os_run_command				                           A   494    				
                           A   495    				
                           A   496    
000D9F 22 18 62 00         A   497    not_g_cmd		ld (os_args_loc),hl				000DA3 22 1B 62 00         A   498    				ld (os_args_pos_cache),hl
000DA7 CD 2C 10 00         A   499    				call os_args_to_fn_append_ezp	                           A   500    	
000DAB CD 37 0F 00         A   501    				call cache_dir_block			                           A   502    
000DAF CD 78 48 00         A   503    				call fs_check_disk_format		000DB3 38 3C               A   504    				jr c,os_ndfxc
000DB5 B7                  A   505    				or a							000DB6 20 39               A   506    				jr nz,os_ndfxc
                           A   507    	
000DB8 CD 1F 4A 00         A   508    				call fs_open_file_command		000DBC DA 02 0D 00         A   509    				jp c,os_hwerr			 		000DC0 B7                  A   510    				or a
000DC1 28 38               A   511    				jr z,os_gecmd					                           A   512    
000DC3 CD F0 49 00         A   513    				call fs_goto_root_dir_command	000DC7 21 3E 56 00         A   514    				ld hl,os_dos_cmds_txt
000DCB CD 86 52 00         A   515    				call fs_hl_to_filename
000DCF CD CB 49 00         A   516    				call fs_change_dir_command		000DD3 DA 02 0D 00         A   517    				jp c,os_hwerr
000DD7 B7                  A   518    				or a
000DD8 20 17               A   519    				jr nz,os_ndfxc					                           A   520    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DDA 2A 1B 62 00         A   521    				ld hl,(os_args_pos_cache)		000DDE 22 18 62 00         A   522    				ld (os_args_loc),hl
000DE2 CD 2C 10 00         A   523    				call os_args_to_fn_append_ezp	000DE6 CD 1F 4A 00         A   524    				call fs_open_file_command		000DEA DA 02 0D 00         A   525    				jp c,os_hwerr
000DEE B7                  A   526    				or a
000DEF 28 0A               A   527    				jr z,os_gecmd
000DF1 CD 43 0F 00         A   528    os_ndfxc		call restore_dir_block			000DF5 3E0B                A   529    				ld a,0bh						000DF7 C3 14 0D 00         A   530    				jp show_erm
                           A   531    
000DFB 2A 18 62 00         A   532    os_gecmd		ld hl,(os_args_loc)				000DFF CD F8 0F 00         A   533    				call os_scan_for_non_space		000E03 22 18 62 00         A   534    				ld (os_args_loc),hl
                           A   535    
000E07 11100000            A   536    				ld de,16
000E0B CD 76 16 00         A   537    				call os_set_load_length			000E0F 21 A6 68 00         A   538    				ld hl,scratch_pad
000E13 22 E7 54 00         A   539    				ld (fs_ez80_address),hl
000E17 CD 6A 4A 00         A   540    				call fs_read_data_command
000E1B DA 02 0D 00         A   541    				jp c,os_hwerr					000E1F B7                  A   542    				or a
000E20 C2 14 0D 00         A   543    				jp nz,show_erm					000E24 2A A8 68 00         A   544    				ld hl,(scratch_pad+2)
000E28 1150524F            A   545    				ld de,04f5250h					000E2C AF                  A   546    				xor a	
000E2D ED52                A   547    				sbc hl,de
000E2F 28 0A               A   548    				jr z,loc_header
000E31 CD 43 0F 00         A   549    				call restore_dir_block			000E35 3E1A                A   550    				ld a,01ah						000E37 C3 14 0D 00         A   551    				jp show_erm						                           A   552    				
000E3B 3A B5 68 00         A   553    loc_header		ld a,(scratch_pad+15)			000E3F 32 EB 60 00         A   554    				ld (store_adl),a			
000E43 CD 1F 4A 00         A   555    				call fs_open_file_command		000E47 DA 02 0D 00         A   556    				jp c,os_hwerr
000E4B B7                  A   557    				or a	
000E4C 20 A3               A   558    				jr nz,os_ndfxc
000E4E 2A AB 68 00         A   559    				ld hl,(scratch_pad+5)			000E52 22 E7 54 00         A   560    				ld (fs_ez80_address),hl
000E56 ED5B BB 60 00       A   561    				ld de,(sysram_os_highest)
000E5B AF                  A   562    				xor a
000E5C E5                  A   563    				push hl
000E5D ED52                A   564    				sbc hl,de
000E5F E1                  A   565    				pop hl
000E60 30 0A               A   566    				jr nc,osmemok
000E62 CD 43 0F 00         A   567    				call restore_dir_block			000E66 3E26                A   568    				ld a,026h
000E68 C3 14 0D 00         A   569    				jp show_erm
                           A   570    
000E6C ED5B B1 68 00       A   571    osmemok			ld de,(scratch_pad+11)			000E71 7B                  A   572    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E72 B2                  A   573    				or d
000E73 28 14               A   574    				jr z,noprov_spec				000E75 21350000            A   575    				ld hl,prose_version
000E79 AF                  A   576    				xor a
000E7A 40ED52              A   577    				sbc.sis hl,de					000E7D 30 0A               A   578    				jr nc,noprov_spec
000E7F CD 43 0F 00         A   579    				call restore_dir_block
000E83 3E1B                A   580    				ld a,01bh						000E85 C3 14 0D 00         A   581    				jp show_erm
                           A   582    				
000E89 CD B4 40 00         A   583    noprov_spec		call hwsc_get_version			000E8D 2A B3 68 00         A   584    				ld hl,(scratch_pad+13)			000E91 EB                  A   585    				ex de,hl						000E92 7B                  A   586    				ld a,e
000E93 B2                  A   587    				or d
000E94 28 10               A   588    				jr z,nohwv_spec					000E96 AF                  A   589    				xor a
000E97 40ED52              A   590    				sbc.sis hl,de					000E9A 30 0A               A   591    				jr nc,nohwv_spec
000E9C CD 43 0F 00         A   592    				call restore_dir_block
000EA0 3E2B                A   593    				ld a,02bh						000EA2 C3 14 0D 00         A   594    				jp show_erm
                           A   595    
000EA6 ED5B AE 68 00       A   596    nohwv_spec		ld de,(scratch_pad+8)			000EAB 3A B0 68 00         A   597    				ld a,(scratch_pad+10)			000EAF B2                  A   598    				or d
000EB0 B3                  A   599    				or e
000EB1 28 04               A   600    				jr z,readcode					000EB3 CD 76 16 00         A   601    				call os_set_load_length			                           A   602    		
000EB7 2A AB 68 00         A   603    readcode		ld hl,(scratch_pad+5)
000EBB 22 21 62 00         A   604    				ld (os_extcmd_jmp_addr),hl		000EBF CD 6A 4A 00         A   605    				call fs_read_data_command
000EC3 F5                  A   606    				push af
000EC4 CD 43 0F 00         A   607    				call restore_dir_block			000EC8 F1                  A   608    				pop af
000EC9 DA 02 0D 00         A   609    				jp c,os_hwerr					000ECD B7                  A   610    				or a
000ECE C2 14 0D 00         A   611    				jp nz,show_erm					                           A   612    	
000ED2 CD 7C 3D 00         A   613    				call enable_button_nmi			000ED6 DD2A 21 62 00       A   614    				ld ix,(os_extcmd_jmp_addr)		000EDB 2A 18 62 00         A   615    				ld hl,(os_args_loc)				000EDF C3 2D 0F 00         A   616    				jp os_run_command				                           A   617    
000EE3 F5                  A   618    extcmd_return	push af							000EE4 CD 6F 40 00         A   619    				call hwsc_default_hw_settings	000EE8 3A EF 60 00         A   620    				ld a,(store_registers)
000EEC B7                  A   621    				or a
000EED 28 06               A   622    				jr z,skp_strg
000EEF F1                  A   623    				pop af
000EF0 CD 7B 13 00         A   624    				call os_store_CPU_regs			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EF4 F5                  A   625    				push af
000EF5 F1                  A   626    skp_strg		pop af
                           A   627    
000EF6 F5                  A   628    cntuasr			push af
000EF7 21 A6 68 00         A   629    				ld hl,scratch_pad				000EFB CD A5 10 00         A   630    				call hexbyte_to_ascii
000EFF 3600                A   631    				ld (hl),0
000F01 11 A6 68 00         A   632    				ld de,scratch_pad
000F05 21 B7 56 00         A   633    				ld hl,error_txt
000F09 CD BA 1B 00         A   634    				call os_set_envar
000F0D CD 87 3D 00         A   635    				call disable_button_nmi			000F11 F1                  A   636    				pop af
000F12 28 12               A   637    extcmderf		jr z,not_errc					000F14 B7                  A   638    				or a
000F15 CA 01 0D 00         A   639    				jp z,os_hwe1					000F19 FEFF                A   640    				cp 0ffh							000F1B CA 56 0A 00         A   641    				jp z,os_cold_start
000F1F FEFE                A   642    				cp 0feh							000F21 C8                  A   643    				ret z
000F22 C3 14 0D 00         A   644    				jp show_erm						000F26 FEFF                A   645    not_errc		cp 0ffh							000F28 CA 56 0A 00         A   646    				jp z,os_cold_start
000F2C C9                  A   647    				ret
                           A   648    				
                           A   649    ;----------------------------------------------
                           A   650    
000F2D                     A   651    os_run_command									000F2D ED3906              A   652    				out0 (port_nmi_ack),a			000F30 DD22 F0 60 00       A   653    				ld (com_start_addr),ix			000F35 DDE9                A   654    				jp (ix)							                           A   655    
                           A   656    ;----------------------------------------------
                           A   657    
000F37                     A   658    cache_dir_block
                           A   659    
                           A   660    	
000F37 D5                  A   661    				push de
000F38 CD AA 1A 00         A   662    				call fs_get_dir_cluster	
000F3C ED53 1E 62 00       A   663    				ld (os_dir_block_cache),de
000F41 D1                  A   664    				pop de	
000F42 C9                  A   665    				ret
                           A   666    		
                           A   667    
000F43                     A   668    restore_dir_block
                           A   669    
000F43 D5                  A   670    				push de
000F44 ED5B 1E 62 00       A   671    				ld de,(os_dir_block_cache)
000F49 CD B6 1A 00         A   672    				call fs_update_dir_cluster
000F4D D1                  A   673    				pop de
000F4E C9                  A   674    				ret
                           A   675    		
                           A   676    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   677    ; Routines called by command line
                           A   678    ;==============================================
                           A   679    
                           A   680    ; Set:-
                           A   681    ; HL to address of string
                           A   682    ; c = y
                           A   683    ; b = x
                           A   684    
000F4F                     A   685    ext_print_string
                           A   686    
000F4F CC ED 15 00         A   687    				call z,mbase_hl
000F53 18 05               A   688    				jr os_print_string
                           A   689    
000F55                     A   690    os_print_string_cond
                           A   691    
000F55 CD 5D 1A 00         A   692    				call test_quiet_mode
000F59 C0                  A   693    				ret nz
                           A   694    
000F5A                     A   695    os_print_string
                           A   696    
000F5A D5                  A   697    				push de
000F5B C5                  A   698    				push bc
000F5C ED4B 56 61 00       A   699    				ld bc,(cursor_pos)				000F61 7E                  A   700    prstr_lp		ld a,(hl)
000F62 23                  A   701    				inc hl
000F63 B7                  A   702    				or a
000F64 20 09               A   703    				jr nz,prstr_ne
000F66 ED43 56 61 00       A   704    				ld (cursor_pos),bc
000F6B C1                  A   705    				pop bc
000F6C D1                  A   706    				pop de
000F6D AF                  A   707    				xor a							000F6E C9                  A   708    				ret
                           A   709    
000F6F FE0D                A   710    prstr_ne		cp 13
000F71 20 04               A   711    				jr nz,not_cr
000F73 0600                A   712    				ld b,0
000F75 18 EA               A   713    				jr prstr_lp
000F77 FE0A                A   714    not_cr			cp 10
000F79 28 12               A   715    				jr z,line_feed				
000F7B FE0B                A   716    				cp 11
000F7D 28 0C               A   717    				jr z,next_line
000F7F CD 05 3F 00         A   718    				call hwsc_plot_char
000F83 04                  A   719    				inc b
000F84 3A 20 5F 00         A   720    				ld a,(charmap_columns)
000F88 B8                  A   721    				cp b
000F89 20 D6               A   722    				jr nz,prstr_lp
000F8B 0600                A   723    next_line		ld b,0
000F8D 0C                  A   724    line_feed		inc c
000F8E 3A 1D 5F 00         A   725    				ld a,(charmap_rows)
000F92 B9                  A   726    				cp c
000F93 20 CC               A   727    				jr nz,prstr_lp
000F95 0D                  A   728    				dec c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F96 CD CA 3E 00         A   729    				call hwsc_scroll_up
000F9A 18 C5               A   730    				jr prstr_lp
                           A   731    
                           A   732    ;----------------------------------------------
                           A   733    
000F9C 21 64 62 00         A   734    os_print_char	ld hl,char_to_print
000FA0 77                  A   735    				ld (hl),a
000FA1 18 B7               A   736    				jr os_print_string
                           A   737    
                           A   738    ;----------------------------------------------
                           A   739    
000FA3 F5                  A   740    home_cursor		push af
000FA4 AF                  A   741    				xor a
000FA5 32 57 61 00         A   742    				ld (cursor_x),a
000FA9 F1                  A   743    				pop af
000FAA C9                  A   744    				ret
                           A   745    				
                           A   746    ;----------------------------------------------
                           A   747    
000FAB                     A   748    os_cursor_flash
                           A   749    
000FAB 21 59 61 00         A   750    				ld hl,cursorflashtimer
000FAF 34                  A   751    				inc (hl)
000FB0 7E                  A   752    				ld a,(hl)
000FB1 FE19                A   753    				cp 25
000FB3 C0                  A   754    				ret nz
000FB4 3600                A   755    				ld (hl),0
000FB6 3A 5A 61 00         A   756    				ld a,(cursor_status)
000FBA EE01                A   757    				xor 1
000FBC 32 5A 61 00         A   758    				ld (cursor_status),a
000FC0 28 15               A   759    				jr z,no_cursor
000FC2 3E5F                A   760    				ld a,05fh
000FC4 21 1A 5F 00         A   761    				ld hl,overwrite_mode
000FC8 CB46                A   762    				bit 0,(hl)
000FCA 28 02               A   763    				jr z,cursor_selected
000FCC 3E7F                A   764    				ld a,07fh
                           A   765    				
000FCE CD DD 0F 00         A   766    cursor_selected	call os_set_cursor_image
000FD2 CD 58 3F 00         A   767    				call hwsc_draw_cursor			000FD6 C9                  A   768    				ret
                           A   769    
000FD7 CD 3E 3F 00         A   770    no_cursor		call hwsc_remove_cursor
000FDB C9                  A   771    				ret
                           A   772    
                           A   773    
                           A   774    ;----------------------------------------------
                           A   775    
000FDC                     A   776    ext_set_cursor_image
                           A   777    
000FDC 7B                  A   778    				ld a,e
                           A   779    				
000FDD                     A   780    os_set_cursor_image
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   781    			
000FDD 32 1B 5F 00         A   782    				ld (cursor_image_char),a
000FE1 BF                  A   783    				cp a
000FE2 C9                  A   784    				ret
                           A   785    
                           A   786    ;----------------------------------------------
                           A   787    
000FE3                     A   788    os_next_arg
                           A   789    
000FE3 CD EF 0F 00         A   790    				call os_scan_for_space
000FE7 B7                  A   791    				or a
000FE8 C8                  A   792    				ret z
000FE9 CD F8 0F 00         A   793    				call os_scan_for_non_space
000FED B7                  A   794    				or a
000FEE C9                  A   795    				ret
                           A   796    
                           A   797    
                           A   798    ;----------------------------------------------
                           A   799    	
                           A   800    
000FEF                     A   801    os_scan_for_space
                           A   802    
000FEF 7E                  A   803    os_sfspl 		ld a,(hl)						000FF0 B7                  A   804    				or a							000FF1 C8                  A   805    				ret z
000FF2 FE20                A   806    				cp ' '
000FF4 C8                  A   807    				ret z
000FF5 23                  A   808    				inc hl
000FF6 18 F7               A   809    				jr os_sfspl
                           A   810    	
                           A   811    
                           A   812    ;----------------------------------------------
                           A   813    	
                           A   814    
000FF8                     A   815    os_scan_for_non_space
                           A   816    
000FF8 2B                  A   817    				dec hl							000FF9 23                  A   818    os_nsplp		inc hl			
000FFA 7E                  A   819    				ld a,(hl)			
000FFB B7                  A   820    				or a			
000FFC C8                  A   821    				ret z							000FFD FE20                A   822    				cp ' '
000FFF 28 F8               A   823    				jr z,os_nsplp
001001 C9                  A   824    				ret
                           A   825    	
                           A   826    	
                           A   827    ;----------------------------------------------
                           A   828    
001002                     A   829    os_args_to_alt_filename
                           A   830    
001002 CD 5C 10 00         A   831    				call os_atfn_pre				001006 C8                  A   832    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001007 CD 80 52 00         A   833    				call fs_hl_to_alt_filename
00100B 18 09               A   834    				jr os_atfrl
                           A   835    	
                           A   836    	
                           A   837    	
                           A   838    		
00100D                     A   839    os_args_to_filename
                           A   840    
00100D CD 5C 10 00         A   841    				call os_atfn_pre				001011 C8                  A   842    				ret z
001012 CD 86 52 00         A   843    				call fs_hl_to_filename	
                           A   844    
001016 7E                  A   845    os_atfrl		ld a,(hl)						001017 B7                  A   846    				or a							001018 28 0B               A   847    				jr z,os_cfne
00101A FE20                A   848    				cp 32
00101C 28 07               A   849    				jr z,os_cfne
00101E FE2F                A   850    				cp 02fh
001020 28 03               A   851    				jr z,os_cfne
001022 23                  A   852    				inc hl
001023 18 F1               A   853    				jr os_atfrl	
001025 22 18 62 00         A   854    os_cfne			ld (os_args_loc),hl				001029 79                  A   855    				ld a,c			
00102A B7                  A   856    				or a							00102B C9                  A   857    				ret
                           A   858    
                           A   859    
                           A   860    
                           A   861    
00102C                     A   862    os_args_to_fn_append_ezp
                           A   863    
                           A   864    	
00102C CD 5C 10 00         A   865    				call os_atfn_pre				001030 C8                  A   866    				ret z
001031 11 F3 60 00         A   867    				ld de,temp_string
001035 7E                  A   868    ccmdtlp			ld a,(hl)						001036 B7                  A   869    				or a
001037 28 0D               A   870    				jr z,goteocmd
001039 FE20                A   871    				cp ' '
00103B 28 09               A   872    				jr z,goteocmd
00103D FE2E                A   873    				cp '.'
00103F 28 05               A   874    				jr z,goteocmd
001041 12                  A   875    				ld (de),a
001042 13                  A   876    				inc de
001043 23                  A   877    				inc hl
001044 18 EF               A   878    				jr ccmdtlp
                           A   879    	
001046 E5                  A   880    goteocmd		push hl
001047 21 91 56 00         A   881    				ld hl,ezp_extension_txt
00104B 01050000            A   882    				ld bc,5
00104F EDB0                A   883    				ldir 
001051 21 F3 60 00         A   884    				ld hl,temp_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001055 CD 86 52 00         A   885    				call fs_hl_to_filename
001059 E1                  A   886    				pop hl
00105A 18 BA               A   887    				jr os_atfrl
                           A   888    	
                           A   889    
                           A   890    
                           A   891    
00105C                     A   892    os_atfn_pre
                           A   893    
00105C 2A 18 62 00         A   894    				ld hl,(os_args_loc)				001060 CD F8 0F 00         A   895    				call os_scan_for_non_space
001064 B7                  A   896    				or a
001065 C8                  A   897    				ret z
001066 7E                  A   898    				ld a,(hl)
001067 FE2F                A   899    				cp 02fh							001069 20 01               A   900    				jr nz,notfsl1
00106B 23                  A   901    				inc hl
00106C AF                  A   902    notfsl1			xor a
00106D 3C                  A   903    				inc a
00106E C9                  A   904    				ret
                           A   905    
                           A   906    
                           A   907    ;--------- Number <-> String functions --------
                           A   908    
                           A   909    
00106F                     A   910    os_clear_output_line
                           A   911    
00106F C5                  A   912    				push bc
001070 E5                  A   913    				push hl			
001071 21 C6 61 00         A   914    				ld hl,output_line
001075 01500000            A   915    				ld bc,max_buffer_chars
001079 3E20                A   916    				ld a,32
00107B CD C6 15 00         A   917    				call os_bchl_memfill
00107F E1                  A   918    				pop hl
001080 C1                  A   919    				pop bc
001081 C9                  A   920    				ret
                           A   921    	
                           A   922    	
                           A   923    	
001082                     A   924    os_skip_leading_ascii_zeros
                           A   925    
001082 7E                  A   926    slazlp			ld a,(hl)						001083 FE30                A   927    				cp '0'							001085 C0                  A   928    				ret nz
001086 23                  A   929    				inc hl
001087 10 F9               A   930    				djnz slazlp
001089 C9                  A   931    				ret
                           A   932    	
                           A   933    
                           A   934    
00108A                     A   935    os_leading_ascii_zeros_to_spaces
                           A   936    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00108A E5                  A   937    				push hl
00108B 7E                  A   938    clazlp			ld a,(hl)						00108C FE30                A   939    				cp '0'							00108E 20 05               A   940    				jr nz,claze	
001090 3620                A   941    				ld (hl),' '
001092 23                  A   942    				inc hl
001093 10 F6               A   943    				djnz clazlp
001095 E1                  A   944    claze			pop hl
001096 C9                  A   945    				ret
                           A   946    	
                           A   947    
                           A   948    
                           A   949    		
001097                     A   950    n_hexbytes_to_ascii
                           A   951    
001097 1A                  A   952    				ld a,(de)						001098 CD A5 10 00         A   953    				call hexbyte_to_ascii			00109C 1B                  A   954    				dec de
00109D 10 F8               A   955    				djnz n_hexbytes_to_ascii
00109F C9                  A   956    				ret
                           A   957    			
                           A   958    			
                           A   959    
0010A0                     A   960    ext_hexbyte_to_ascii
                           A   961    
0010A0 CC ED 15 00         A   962    				call z,mbase_hl
0010A4 7B                  A   963    				ld a,e
                           A   964    
0010A5                     A   965    hexbyte_to_ascii
                           A   966    
0010A5 C5                  A   967    				push bc
0010A6 47                  A   968    				ld b,a							0010A7 CB3F                A   969    				srl a							0010A9 CB3F                A   970    				srl a
0010AB CB3F                A   971    				srl a
0010AD CB3F                A   972    				srl a
0010AF CD C1 10 00         A   973    				call hxdigconv
0010B3 77                  A   974    				ld (hl),a
0010B4 23                  A   975    				inc hl
0010B5 78                  A   976    				ld a,b
0010B6 E60F                A   977    				and 0fh
0010B8 CD C1 10 00         A   978    				call hxdigconv
0010BC 77                  A   979    				ld (hl),a
0010BD 23                  A   980    				inc hl
0010BE C1                  A   981    				pop bc
0010BF AF                  A   982    				xor a							0010C0 C9                  A   983    				ret
                           A   984    				
0010C1 C630                A   985    hxdigconv		add a,030h
0010C3 FE3A                A   986    				cp 03ah
0010C5 38 02               A   987    				jr c,hxdone
0010C7 C607                A   988    				add a,7
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010C9 C9                  A   989    hxdone			ret
                           A   990    
                           A   991    
                           A   992    
                           A   993    
0010CA                     A   994    hexword_to_ascii	
                           A   995    
0010CA 7A                  A   996    				ld a,d							0010CB CD A5 10 00         A   997    				call hexbyte_to_ascii
0010CF 7B                  A   998    				ld a,e
0010D0 CD A5 10 00         A   999    				call hexbyte_to_ascii
0010D4 C9                  A  1000    				ret
                           A  1001    	
                           A  1002    
                           A  1003    
                           A  1004    
0010D5                     A  1005    ext_ascii_to_hexword
                           A  1006    		
0010D5 CC ED 15 00         A  1007    				call z,mbase_hl
                           A  1008    
0010D9                     A  1009    ascii_to_hexword
                           A  1010    	
0010D9 CD F8 0F 00         A  1011    				call os_scan_for_non_space		0010DD B7                  A  1012    				or a
0010DE 20 04               A  1013    				jr nz,ascii_to_hex_no_scan
0010E0 3E81                A  1014    				ld a,081h						0010E2 B7                  A  1015    				or a
0010E3 C9                  A  1016    				ret	
                           A  1017    
                           A  1018    	
0010E4                     A  1019    ascii_to_hex_no_scan
                           A  1020    
0010E4 DDE5                A  1021    				push ix
0010E6 C5                  A  1022    				push bc
0010E7 DD210000 00         A  1023    				ld ix,0
0010EC 0606                A  1024    				ld b,6							0010EE CD 1A 11 00         A  1025    athlp			call ascii_to_hex_digit
0010F2 FEF0                A  1026    				cp 0f0h							0010F4 28 17               A  1027    				jr z,athend
0010F6 FED0                A  1028    				cp 0d0h
0010F8 28 13               A  1029    				jr z,athend						0010FA FE10                A  1030    				cp 16
0010FC 30 17               A  1031    				jr nc,badhex					0010FE DD29                A  1032    				add ix,ix						001100 DD29                A  1033    				add ix,ix
001102 DD29                A  1034    				add ix,ix
001104 DD29                A  1035    				add ix,ix
001106 DDB5                A  1036    				or a,ixl
001108 DD6F                A  1037    				ld ixl,a
00110A 23                  A  1038    				inc hl
00110B 10 E1               A  1039    				djnz athlp
00110D DDE5                A  1040    athend			push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00110F D1                  A  1041    				pop de
001110 AF                  A  1042    				xor a
001111 C1                  A  1043    ath_quit		pop bc
001112 DDE1                A  1044    				pop ix							001114 C9                  A  1045    				ret
                           A  1046    		
001115 3E82                A  1047    badhex			ld a,82h						001117 B7                  A  1048    				or a
001118 18 F7               A  1049    				jr ath_quit
                           A  1050    				
                           A  1051    	
                           A  1052    		
00111A                     A  1053    ascii_to_hex_digit
                           A  1054    
00111A 7E                  A  1055    				ld a,(hl)						00111B FE61                A  1056    				cp 061h
00111D 38 02               A  1057    				jr c,hc_uppercase
00111F D620                A  1058    				sub 020h						001121 D63A                A  1059    hc_uppercase	sub 03ah						001123 38 02               A  1060    				jr c,zeronine
001125 C6F9                A  1061    				add a,0f9h
001127 C60A                A  1062    zeronine		add a,0ah
001129 C9                  A  1063    				ret
                           A  1064    
                           A  1065    
                           A  1066    ;--------- Text Input / Non-numeric string func
                           A  1067    
                           A  1068    ; Waits for user to enter a string of character
                           A  1069    ; Before calling, set:  HL = destination of str
                           A  1070    ;                        E = max number of char
                           A  1071    ; Returns:   A  = number of characters in enter
                           A  1072    
                           A  1073    
00112A                     A  1074    ext_user_input
00112A CC ED 15 00         A  1075    				call z,mbase_hl
                           A  1076    				
00112E                     A  1077    os_user_input
00112E AF                  A  1078    				xor a
00112F 32 ED 5E 00         A  1079    				ld (ui_index),a
001133 22 EF 5E 00         A  1080    				ld (ui_string_addr),hl
001137 7B                  A  1081    				ld a,e
001138 32 EE 5E 00         A  1082    				ld (ui_maxchars),a
                           A  1083    				
00113C 3A 1A 5F 00         A  1084    				ld a,(overwrite_mode)
001140 32 73 61 00         A  1085    				ld (ui_im_cache),a
001144 AF                  A  1086    				xor a
001145 32 1A 5F 00         A  1087    				ld (overwrite_mode),a			                           A  1088    				
001149 CD 58 3F 00         A  1089    ui_loop			call hwsc_draw_cursor			00114D CD 0A 44 00         A  1090    				call os_wait_key_press			001151 32 8B 62 00         A  1091    				ld (current_scancode),a
001155 78                  A  1092    				ld a,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001156 32 8C 62 00         A  1093    				ld (current_asciicode),a		00115A CD 3E 3F 00         A  1094    				call hwsc_remove_cursor
                           A  1095    	
00115E 3A 8B 62 00         A  1096    				ld a,(current_scancode)
001162 FE66                A  1097    				cp 066h							001164 20 1F               A  1098    				jr nz,os_nuibs
001166 3A ED 5E 00         A  1099    				ld a,(ui_index)
00116A B7                  A  1100    				or a
00116B 28 DC               A  1101    				jr z,ui_loop					00116D 21 57 61 00         A  1102    				ld hl,cursor_x					001171 35                  A  1103    				dec (hl)						001172 46                  A  1104    os_uixok		ld b,(hl)		
001173 3A 56 61 00         A  1105    				ld a,(cursor_y)
001177 4F                  A  1106    				ld c,a
001178 3E20                A  1107    				ld a,32
00117A CD 05 3F 00         A  1108    				call hwsc_plot_char
00117E 21 ED 5E 00         A  1109    				ld hl,ui_index
001182 35                  A  1110    				dec (hl)						001183 18 C4               A  1111    				jr ui_loop
                           A  1112    
001185 FE76                A  1113    os_nuibs		cp 076h							001187 28 6B               A  1114    				jr z,ui_aborted
001189 FE5A                A  1115    				cp 05ah							00118B 28 46               A  1116    				jr z,ui_enter_pressed
                           A  1117    	
00118D 3A ED 5E 00         A  1118    				ld a,(ui_index)					001191 21 EE 5E 00         A  1119    				ld hl,ui_maxchars
001195 BE                  A  1120    				cp (hl)
001196 28 B1               A  1121    				jr z,ui_loop	
                           A  1122    
001198 3A 8C 62 00         A  1123    				ld a,(current_asciicode)		00119C FE20                A  1124    				cp 32							00119E 38 A9               A  1125    				jr c,ui_loop					                           A  1126    
0011A0 57                  A  1127    ui_gtcha		ld d,a
0011A1 2A EF 5E 00         A  1128    				ld hl,(ui_string_addr)
0011A5 3A ED 5E 00         A  1129    				ld a,(ui_index)
0011A9 01000000            A  1130    				ld bc,0
0011AD 4F                  A  1131    				ld c,a
0011AE 09                  A  1132    				add hl,bc
0011AF 72                  A  1133    				ld (hl),d						0011B0 3C                  A  1134    				inc a
0011B1 32 ED 5E 00         A  1135    				ld (ui_index),a					                           A  1136    				
0011B5 ED4B 56 61 00       A  1137    				ld bc,(cursor_y)				0011BA 7A                  A  1138    				ld a,d
0011BB CD 05 3F 00         A  1139    				call hwsc_plot_char		
0011BF 21 57 61 00         A  1140    				ld hl,cursor_x					0011C3 34                  A  1141    				inc (hl)
0011C4 3A 20 5F 00         A  1142    				ld a,(charmap_columns)			0011C8 BE                  A  1143    				cp (hl)
0011C9 C2 49 11 00         A  1144    				jp nz,ui_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011CD 3600                A  1145    				ld (hl),0
0011CF C3 49 11 00         A  1146    				jp ui_loop
                           A  1147    
0011D3                     A  1148    ui_enter_pressed
                           A  1149    				
0011D3 3A 73 61 00         A  1150    				ld a,(ui_im_cache)				0011D7 32 1A 5F 00         A  1151    				ld (overwrite_mode),a
0011DB 3A ED 5E 00         A  1152    				ld a,(ui_index)					0011DF B7                  A  1153    				or a
0011E0 20 04               A  1154    				jr nz,ui_data
0011E2 3E81                A  1155    				ld a,081h						0011E4 B7                  A  1156    				or a
0011E5 C9                  A  1157    				ret
0011E6 2A EF 5E 00         A  1158    ui_data			ld hl,(ui_string_addr)
0011EA 11000000            A  1159    				ld de,0
0011EE 5F                  A  1160    				ld e,a
0011EF 19                  A  1161    				add hl,de
0011F0 3600                A  1162    				ld (hl),0						0011F2 BF                  A  1163    				cp a							0011F3 C9                  A  1164    				ret
                           A  1165    
0011F4 3A 73 61 00         A  1166    ui_aborted		ld a,(ui_im_cache)				0011F8 32 1A 5F 00         A  1167    				ld (overwrite_mode),a
0011FC 3E80                A  1168    				ld a,080h						0011FE B7                  A  1169    				or a							0011FF C9                  A  1170    				ret
                           A  1171    		
                           A  1172    ;----------------------------------------------
                           A  1173    	
001200                     A  1174    os_count_lines
                           A  1175    
001200 E5                  A  1176    				push hl							001201 0679                A  1177    				ld b,'y'						001203 21 5B 61 00         A  1178    				ld hl,os_linecount			
001207 34                  A  1179    				inc (hl)						001208 3A 1D 5F 00         A  1180    				ld a,(charmap_rows)
00120C D604                A  1181    				sub 4
00120E BE                  A  1182    				cp (hl)
00120F 20 0E               A  1183    				jr nz,os_nntpo
001211 3600                A  1184    				ld (hl),0
001213 21 96 56 00         A  1185    				ld hl,os_more_txt
001217 CD 5A 0F 00         A  1186    				call os_print_string
00121B CD 0A 44 00         A  1187    				call os_wait_key_press	
00121F E1                  A  1188    os_nntpo		pop hl
001220 C9                  A  1189    				ret
                           A  1190    
                           A  1191    ;----------------------------------------------
                           A  1192    
001221                     A  1193    ext_compare_strings
                           A  1194    	
001221 CC ED 15 00         A  1195    				call z,mbase_hl
001225 CC FE 15 00         A  1196    				call z,mbase_de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1197    				
001229                     A  1198    os_compare_strings
                           A  1199    
                           A  1200    ; both strings at HL/DE should be zero terminat
                           A  1201    ; compare will fail if string lengths are diffe
                           A  1202    ; unless count (B) is reached first
                           A  1203    ; Case is ignored
                           A  1204    ; Zero flag set on return if same
                           A  1205    
001229 E5                  A  1206    				push hl							00122A D5                  A  1207    				push de							00122B 1A                  A  1208    ocslp			ld a,(de)						00122C B7                  A  1209    				or a
00122D 28 0C               A  1210    				jr z,ocsbt
00122F CD 6C 12 00         A  1211    				call case_insensitive_compare	001233 20 0E               A  1212    				jr nz,ocs_diff
001235 13                  A  1213    				inc de
001236 23                  A  1214    				inc hl
001237 10 F2               A  1215    				djnz ocslp
001239 18 04               A  1216    				jr ocs_same
00123B 1A                  A  1217    ocsbt			ld a,(de)						00123C B6                  A  1218    				or (hl)
00123D 20 04               A  1219    				jr nz,ocs_diff
00123F D1                  A  1220    ocs_same		pop de
001240 E1                  A  1221    				pop hl
001241 AF                  A  1222    				xor a							001242 C9                  A  1223    				ret
001243 D1                  A  1224    ocs_diff		pop de
001244 E1                  A  1225    				pop hl
001245 AF                  A  1226    				xor a							001246 3C                  A  1227    				inc a
001247 C9                  A  1228    				ret
                           A  1229    
                           A  1230    
                           A  1231    ;----------------------------------------------
                           A  1232    
001248                     A  1233    os_copy_ascii_run
                           A  1234    
                           A  1235    ;INPUT HL = source ($00 or $20 terminates)
                           A  1236    ;      DE = dest
                           A  1237    ;       b = max chars
                           A  1238    
                           A  1239    ;OUTPUT HL/DE = end of runs
                           A  1240    ;           c = char count
                           A  1241    	
001248 0E00                A  1242    				ld c,0
00124A 7E                  A  1243    cpyar_lp		ld a,(hl)
00124B B7                  A  1244    				or a
00124C C8                  A  1245    				ret z
00124D FE20                A  1246    				cp 32
00124F C8                  A  1247    				ret z
001250 12                  A  1248    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001251 23                  A  1249    				inc hl
001252 13                  A  1250    				inc de
001253 0C                  A  1251    				inc c
001254 10 F4               A  1252    				djnz cpyar_lp
001256 C9                  A  1253    				ret
                           A  1254    
                           A  1255    ;----------------------------------------------
                           A  1256    
001257                     A  1257    uppercasify_string
                           A  1258    
                           A  1259    ; Set HL to string location ($00 quits)
                           A  1260    ; Set B to max number of chars
                           A  1261    
001257 7E                  A  1262    				ld a,(hl)
001258 B7                  A  1263    				or a
001259 C8                  A  1264    				ret z
00125A CD 63 12 00         A  1265    				call os_uppercasify
00125E 77                  A  1266    				ld (hl),a
00125F 23                  A  1267    				inc hl
001260 10 F5               A  1268    				djnz uppercasify_string	
001262 C9                  A  1269    				ret
                           A  1270    	
                           A  1271    
001263                     A  1272    os_uppercasify
                           A  1273    
                           A  1274    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1275    
001263 FE61                A  1276    				cp 061h			
001265 D8                  A  1277    				ret c
001266 FE7B                A  1278    				cp 07bh
001268 D0                  A  1279    				ret nc
001269 D620                A  1280    				sub 020h				
00126B C9                  A  1281    				ret
                           A  1282    
                           A  1283    ;----------------------------------------------
                           A  1284    
00126C                     A  1285    case_insensitive_compare
                           A  1286    
                           A  1287    ; compares A with (HL) disregarding the case of
                           A  1288    ; Zero flag set if the characters are the same
                           A  1289    ; all registers are preserved.
                           A  1290    
00126C C5                  A  1291    				push bc					
00126D 4F                  A  1292    				ld c,a
                           A  1293    
00126E CD 63 12 00         A  1294    				call os_uppercasify				001272 47                  A  1295    				ld b,a
001273 7E                  A  1296    				ld a,(hl)
001274 CD 63 12 00         A  1297    				call os_uppercasify
001278 B8                  A  1298    				cp b
                           A  1299    
001279 79                  A  1300    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00127A C1                  A  1301    				pop bc
00127B C9                  A  1302    				ret
                           A  1303    
                           A  1304    ;----------------------------------------------
                           A  1305    
00127C                     A  1306    os_decimal_add
                           A  1307    
                           A  1308    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1309    
00127C C5                  A  1310    				push bc
00127D 0E00                A  1311    				ld c,0
00127F 1A                  A  1312    decdlp			ld a,(de)
001280 86                  A  1313    				add a,(hl)
001281 81                  A  1314    				add a,c
001282 FE0A                A  1315    				cp 10
001284 38 0B               A  1316    				jr c,daddnc
001286 D60A                A  1317    				sub 10
001288 0E01                A  1318    				ld c,1
00128A 12                  A  1319    decnclp			ld (de),a
00128B 23                  A  1320    				inc hl
00128C 13                  A  1321    				inc de
00128D 10 F0               A  1322    				djnz decdlp
00128F C1                  A  1323    				pop bc
001290 C9                  A  1324    				ret
001291 0E00                A  1325    daddnc			ld c,0
001293 18 F5               A  1326    				jr decnclp
                           A  1327    	
                           A  1328    ;----------------------------------------------
                           A  1329    
001295                     A  1330    os_hex_to_decimal
                           A  1331    
                           A  1332    ; INPUT xDE hex longword
                           A  1333    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1334    
       000068A6            A  1335    hex_to_convert		equ scratch_pad
       000068A9            A  1336    decimal_digits		equ scratch_pad+3
       000068B1            A  1337    decimal_add_digits	equ scratch_pad+3+8
                           A  1338    
001295 ED53 A6 68 00       A  1339    				ld (hex_to_convert),de
                           A  1340    		
00129A 21 B1 68 00         A  1341    				ld hl,decimal_add_digits
00129E E5                  A  1342    				push hl
00129F 11 A9 68 00         A  1343    				ld de,decimal_digits
0012A3 AF                  A  1344    				xor a
0012A4 0608                A  1345    				ld b,8
0012A6 12                  A  1346    setupdec		ld (de),a
0012A7 77                  A  1347    				ld (hl),a
0012A8 23                  A  1348    				inc hl
0012A9 13                  A  1349    				inc de
0012AA 10 FA               A  1350    				djnz setupdec
0012AC E1                  A  1351    				pop hl
0012AD 3601                A  1352    				ld (hl),1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1353    	
0012AF 21 A6 68 00         A  1354    				ld hl,hex_to_convert
0012B3 0603                A  1355    				ld b,3
0012B5 C5                  A  1356    decconvlp		push bc
0012B6 7E                  A  1357    				ld a,(hl)
0012B7 CD D5 12 00         A  1358    				call decadder
0012BB CD EE 12 00         A  1359    				call decaddx16
0012BF 7E                  A  1360    				ld a,(hl)
0012C0 0F                  A  1361    				rrca
0012C1 0F                  A  1362    				rrca
0012C2 0F                  A  1363    				rrca
0012C3 0F                  A  1364    				rrca
0012C4 CD D5 12 00         A  1365    				call decadder
0012C8 CD EE 12 00         A  1366    				call decaddx16
0012CC C1                  A  1367    				pop bc
0012CD 23                  A  1368    				inc hl
0012CE 10 E5               A  1369    				djnz decconvlp
0012D0 21 A9 68 00         A  1370    				ld hl,decimal_digits
0012D4 C9                  A  1371    				ret
                           A  1372    
                           A  1373    
                           A  1374    
0012D5 E60F                A  1375    decadder		and 15
0012D7 C8                  A  1376    				ret z
0012D8 47                  A  1377    				ld b,a
0012D9 E5                  A  1378    				push hl
0012DA C5                  A  1379    daddlp			push bc
0012DB 11 A9 68 00         A  1380    				ld de,decimal_digits
0012DF 21 B1 68 00         A  1381    				ld hl,decimal_add_digits
0012E3 0608                A  1382    				ld b,8
0012E5 CD 7C 12 00         A  1383    				call os_decimal_add
0012E9 C1                  A  1384    				pop bc
0012EA 10 EE               A  1385    				djnz daddlp	
0012EC E1                  A  1386    				pop hl
0012ED C9                  A  1387    				ret
                           A  1388    			
                           A  1389    				
0012EE E5                  A  1390    decaddx16		push hl
0012EF 0604                A  1391    				ld b,4							0012F1 C5                  A  1392    x16loop			push bc
0012F2 11 B1 68 00         A  1393    				ld de,decimal_add_digits
0012F6 21 B1 68 00         A  1394    				ld hl,decimal_add_digits
0012FA 0608                A  1395    				ld b,8
0012FC CD 7C 12 00         A  1396    				call os_decimal_add
001300 C1                  A  1397    				pop bc
001301 10 EE               A  1398    				djnz x16loop	
001303 E1                  A  1399    				pop hl
001304 C9                  A  1400    				ret
                           A  1401    	
                           A  1402    	
                           A  1403    ;----------------------------------------------
                           A  1404    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001305                     A  1405    os_show_decimal
                           A  1406    
001305 11 C6 61 00         A  1407    				ld de,output_line				001309 01090000            A  1408    				ld bc,9
00130D 09                  A  1409    				add hl,bc
00130E 060A                A  1410    				ld b,10
001310 7E                  A  1411    shdeclp			ld a,(hl)
001311 B7                  A  1412    				or a
001312 28 04               A  1413    				jr z,dnodigit
001314 C630                A  1414    				add a,030h
001316 12                  A  1415    				ld (de),a
001317 13                  A  1416    				inc de
001318 2B                  A  1417    dnodigit		dec hl
001319 10 F5               A  1418    				djnz shdeclp
00131B AF                  A  1419    				xor a
00131C 12                  A  1420    				ld (de),a
00131D CD 65 13 00         A  1421    				call os_print_output_line
001321 C9                  A  1422    				ret
                           A  1423    				
                           A  1424    ;----------------------------------------------
                           A  1425    		
001322                     A  1426    os_copy_to_output_line
                           A  1427    	
001322 D5                  A  1428    				push de
001323 C5                  A  1429    				push bc
001324 11 C6 61 00         A  1430    				ld de,output_line				001328 01510000            A  1431    				ld bc,max_buffer_chars+1		00132C EDA0                A  1432    os_cloll		ldi
00132E 7E                  A  1433    				ld a,(hl)
00132F B7                  A  1434    				or a
001330 28 04               A  1435    				jr z,os_clold
001332 78                  A  1436    				ld a,b
001333 B1                  A  1437    				or c
001334 20 F6               A  1438    				jr nz,os_cloll
001336 12                  A  1439    os_clold		ld (de),a
001337 C1                  A  1440    				pop bc
001338 D1                  A  1441    				pop de
001339 C9                  A  1442    				ret
                           A  1443    
                           A  1444    
                           A  1445    ;----------------------------------------------
                           A  1446    
00133A                     A  1447    os_show_hex_address
                           A  1448    
00133A E5                  A  1449    				push hl							00133B 21 C6 61 00         A  1450    				ld hl,output_line
00133F ED53 68 61 00       A  1451    				ld (hex_address),de
001344 3A 6A 61 00         A  1452    				ld a,(hex_address+2)
001348 CD A5 10 00         A  1453    				call hexbyte_to_ascii
00134C 18 10               A  1454    				jr shw_nt
                           A  1455    				
                           A  1456    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00134E                     A  1457    os_show_hex_byte
                           A  1458    
00134E E5                  A  1459    				push hl							00134F 21 C6 61 00         A  1460    				ld hl,output_line
001353 CD A5 10 00         A  1461    				call hexbyte_to_ascii
001357 18 09               A  1462    				jr shb_nt
                           A  1463    
                           A  1464    
                           A  1465    
001359                     A  1466    os_show_hex_word
                           A  1467    
001359 E5                  A  1468    				push hl							00135A 21 C6 61 00         A  1469    				ld hl,output_line
00135E CD CA 10 00         A  1470    shw_nt			call hexword_to_ascii
001362 3600                A  1471    shb_nt			ld (hl),0
001364 E1                  A  1472    				pop hl
                           A  1473    
                           A  1474    	
                           A  1475    
001365                     A  1476    os_print_output_line
                           A  1477    
001365 E5                  A  1478    				push hl
001366 21 C6 61 00         A  1479    				ld hl,output_line
00136A CD 5A 0F 00         A  1480    cproline		call os_print_string
00136E E1                  A  1481    				pop hl
00136F C9                  A  1482    				ret
                           A  1483    
                           A  1484    
                           A  1485    
001370                     A  1486    os_print_output_line_skip_zeroes
                           A  1487    
001370 E5                  A  1488    				push hl
001371 21 C6 61 00         A  1489    				ld hl,output_line
001375 CD 82 10 00         A  1490    				call os_skip_leading_ascii_zero
001379 18 EF               A  1491    				jr cproline
                           A  1492    				
                           A  1493    		
                           A  1494    ;----------------------------------------------
                           A  1495    
00137B                     A  1496    os_store_CPU_regs
                           A  1497    
00137B F3                  A  1498    				di								                           A  1499    
00137C 33                  A  1500    				inc sp							00137D 33                  A  1501    				inc sp
00137E 33                  A  1502    				inc sp
00137F ED73 E4 60 00       A  1503    				ld (store_spl),sp
001384 3B                  A  1504    				dec sp							001385 3B                  A  1505    				dec sp
001386 3B                  A  1506    				dec sp
                           A  1507    				
001387 F5                  A  1508    				push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001388 32 C7 60 00         A  1509    				ld (store_a1),a					00138C 08                  A  1510    				ex af,af'
00138D 32 D1 60 00         A  1511    				ld (store_a2),a
001391 08                  A  1512    				ex af,af'
001392 ED43 C8 60 00       A  1513    				ld (store_bc1),bc		
001397 ED53 CB 60 00       A  1514    				ld (store_de1),de
00139C 22 CE 60 00         A  1515    				ld (store_hl1),hl
0013A0 D9                  A  1516    				exx
0013A1 ED43 D2 60 00       A  1517    				ld (store_bc2),bc
0013A6 ED53 D5 60 00       A  1518    				ld (store_de2),de
0013AB 22 D8 60 00         A  1519    				ld (store_hl2),hl
0013AF D9                  A  1520    				exx
0013B0 DD22 DB 60 00       A  1521    				ld (store_ix),ix
0013B5 FD22 DE 60 00       A  1522    				ld (store_iy),iy
                           A  1523    				
0013BA ED6E                A  1524    			    ld a,MB
0013BC 32 E9 60 00         A  1525    				ld (store_mbase),a
                           A  1526    								
0013C0 C5                  A  1527    				push bc
0013C1 0600                A  1528    				ld b,0
0013C3 20 02               A  1529    				jr nz,zfstzero					0013C5 CBF0                A  1530    				set 6,b
                           A  1531    
0013C7 30 02               A  1532    zfstzero		jr nc,cfstzero					0013C9 CBC0                A  1533    				set 0,b
                           A  1534    
0013CB F2 D1 13 00         A  1535    cfstzero		jp p,sfstzero					0013CF CBF8                A  1536    				set 7,b
                           A  1537    
0013D1 EA D7 13 00         A  1538    sfstzero		jp pe,pfstzero					0013D5 CBD0                A  1539    				set 2,b
                           A  1540    
0013D7 ED57                A  1541    pfstzero		ld a,i			
0013D9 EA DF 13 00         A  1542    				jp pe,ifstzero					0013DD CBE0                A  1543    				set 4,b
                           A  1544    
0013DF 78                  A  1545    ifstzero		ld a,b
0013E0 32 EA 60 00         A  1546    				ld (store_f),a
                           A  1547    				
0013E4 3E00                A  1548    				ld a,os_location/65536			0013E6 ED6D                A  1549    				ld MB,a							0013E8 40ED73 E7 60        A  1550    				ld.sis (store_sps),sp
0013ED 3A E9 60 00         A  1551    				ld a,(store_mbase)				0013F1 ED6D                A  1552    				ld MB,a
                           A  1553    				
0013F3 C1                  A  1554    				pop bc
0013F4 F1                  A  1555    				pop af
0013F5 FB                  A  1556    				ei
0013F6 C9                  A  1557    				ret
                           A  1558    
                           A  1559    
                           A  1560    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013F7                     A  1561    os_dont_store_registers
                           A  1562    
0013F7 AF                  A  1563    				xor a
0013F8 32 EF 60 00         A  1564    				ld (store_registers),a			0013FC C9                  A  1565    				ret
                           A  1566    	
                           A  1567    	
                           A  1568    ;----------------------------------------------
                           A  1569    
0013FD                     A  1570    os_new_line_cond
                           A  1571    
0013FD CD 5D 1A 00         A  1572    				call test_quiet_mode
001401 C0                  A  1573    				ret nz
                           A  1574    
                           A  1575    	
001402                     A  1576    os_new_line
                           A  1577    
001402 E5                  A  1578    				push hl
001403 21 AE 56 00         A  1579    				ld hl,crlfx2_txt+1
001407 CD 5A 0F 00         A  1580    				call os_print_string
00140B E1                  A  1581    				pop hl
00140C C9                  A  1582    				ret
                           A  1583    				
                           A  1584    ;----------------------------------------------
                           A  1585    
00140D                     A  1586    os_set_cursor_position
                           A  1587    				
                           A  1588    												00140D 3A 1D 5F 00         A  1589    				ld a,(charmap_rows)				001411 3D                  A  1590    				dec a							001412 B9                  A  1591    				cp c
001413 38 14               A  1592    				jr c,badpos
001415 79                  A  1593    				ld a,c
001416 32 56 61 00         A  1594    				ld (cursor_y),a
                           A  1595    				
00141A 3A 20 5F 00         A  1596    				ld a,(charmap_columns)
00141E 3D                  A  1597    				dec a
00141F B8                  A  1598    				cp b
001420 38 07               A  1599    				jr c,badpos
001422 78                  A  1600    				ld a,b
001423 32 57 61 00         A  1601    				ld (cursor_x),a
001427 AF                  A  1602    				xor a
001428 C9                  A  1603    				ret				
                           A  1604    
001429 3E88                A  1605    badpos			ld a,88h						00142B B7                  A  1606    				or a
00142C C9                  A  1607    				ret
                           A  1608    
                           A  1609    
                           A  1610    					
                           A  1611    	
                           A  1612    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00142D                     A  1613    os_get_cursor_position
                           A  1614    
00142D ED4B 56 61 00       A  1615    				ld bc,(cursor_pos)				001432 BF                  A  1616    				cp a							001433 C9                  A  1617    				ret
                           A  1618    
                           A  1619    
                           A  1620    ;----------------------------------------------
                           A  1621    
001434                     A  1622    os_show_packed_text_cond
                           A  1623    
001434 CD 5D 1A 00         A  1624    				call test_quiet_mode
001438 C0                  A  1625    				ret nz
                           A  1626    
                           A  1627    	
001439                     A  1628    os_show_packed_text
                           A  1629    
                           A  1630    ; Construct sentence from internal dictionary u
                           A  1631    	
001439 C5                  A  1632    				push bc
00143A D5                  A  1633    				push de
00143B DDE5                A  1634    				push ix
00143D DD21 C6 61 00       A  1635    				ld ix,output_line
001442 7E                  A  1636    readpind		ld a,(hl)
001443 B7                  A  1637    				or a
001444 20 10               A  1638    				jr nz,getword					001446 DD2B                A  1639    				dec ix							001448 DD7700              A  1640    				ld (ix),a						                           A  1641    			
00144B E5                  A  1642    				push hl
00144C CD 65 13 00         A  1643    				call os_print_output_line
001450 E1                  A  1644    				pop hl
                           A  1645    			
001451 DDE1                A  1646    				pop ix
001453 D1                  A  1647    				pop de
001454 C1                  A  1648    				pop bc
001455 C9                  A  1649    				ret
                           A  1650    				
001456 11 DD 56 00         A  1651    getword			ld de,dictionary-1
00145A 0E00                A  1652    				ld c,0
00145C 13                  A  1653    dictloop		inc de
00145D 1A                  A  1654    				ld a,(de)
00145E B7                  A  1655    				or a							00145F 28 04               A  1656    				jr z,faword
001461 CB7F                A  1657    				bit 7,a							001463 28 F7               A  1658    				jr z,dictloop	
                           A  1659    			
001465 0C                  A  1660    faword			inc c							001466 79                  A  1661    				ld a,c
001467 BE                  A  1662    				cp (hl)
001468 20 F2               A  1663    				jr nz,dictloop
00146A 13                  A  1664    copytol			inc de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00146B 1A                  A  1665    				ld a,(de)
00146C B7                  A  1666    				or a
00146D 28 0B               A  1667    				jr z,eoword						00146F CB7F                A  1668    				bit 7,a
001471 20 07               A  1669    				jr nz,eoword
001473 DD7700              A  1670    				ld (ix),a						001476 DD23                A  1671    				inc ix
001478 18 F0               A  1672    				jr copytol
00147A DD360020            A  1673    eoword			ld (ix),32						00147E DD23                A  1674    				inc ix
001480 23                  A  1675    				inc hl
001481 18 BF               A  1676    				jr readpind
                           A  1677    
                           A  1678    
                           A  1679    		
                           A  1680    ;--------- Mouse functions --------------------
                           A  1681    
001483                     A  1682    os_set_mouse_window
                           A  1683    
                           A  1684    ; Set: HL/DE = window size mouse pointer is to 
                           A  1685    	
001483 22 9D 62 00         A  1686    				ld (mouse_window_size_x),hl	 
001487 ED53 A0 62 00       A  1687    				ld (mouse_window_size_y),de
00148C 21000000            A  1688    				ld hl,0
001490 22 A3 62 00         A  1689    				ld (mouse_abs_x),hl
001494 22 A6 62 00         A  1690    				ld (mouse_abs_y),hl
001498 3E01                A  1691    				ld a,1
00149A 32 B5 62 00         A  1692    				ld (mouse_new_window),a
00149E AF                  A  1693    				xor a
00149F C9                  A  1694    				ret
                           A  1695    				
                           A  1696    			
0014A0                     A  1697    os_get_mouse_motion
                           A  1698    			
                           A  1699    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1700    ;          ZF = Not set: Mouse driver not initi
                           A  1701    			
0014A0 3A BA 60 00         A  1702    				ld a,(devices_connected)
0014A4 E602                A  1703    				and 2
0014A6 EE02                A  1704    				xor 2
0014A8 C0                  A  1705    				ret nz
0014A9 AF                  A  1706    ms_reread		xor a
0014AA 32 9C 62 00         A  1707    				ld (mouse_updated),a
0014AE 2A 95 62 00         A  1708    				ld hl,(mouse_disp_x)			0014B2 ED5B 98 62 00       A  1709    				ld de,(mouse_disp_y)
0014B7 3A 9C 62 00         A  1710    				ld a,(mouse_updated)			0014BB B7                  A  1711    				or a
0014BC 20 EB               A  1712    				jr nz,ms_reread
0014BE AF                  A  1713    mouse_end		xor a
0014BF 3A 9B 62 00         A  1714    				ld a,(mouse_wheel)
0014C3 47                  A  1715    				ld b,a
0014C4 3A 94 62 00         A  1716    				ld a,(mouse_buttons)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C8 C9                  A  1717    				ret
                           A  1718    			
                           A  1719    			
0014C9                     A  1720    os_get_mouse_position
                           A  1721    
                           A  1722    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1723    ;          ZF = Not set: Mouse driver not initi
                           A  1724    				
0014C9 CD A0 14 00         A  1725    				call os_get_mouse_motion
0014CD C0                  A  1726    				ret nz
0014CE 22 AF 62 00         A  1727    				ld (mouse_disp_x_buffer),hl
0014D2 ED53 B2 62 00       A  1728    				ld (mouse_disp_y_buffer),de
0014D7 3A B5 62 00         A  1729    				ld a,(mouse_new_window)
0014DB B7                  A  1730    				or a
0014DC 20 6C               A  1731    				jr nz,ms_nmw
                           A  1732    
0014DE ED5B A9 62 00       A  1733    				ld de,(mouse_disp_x_old)
0014E3 AF                  A  1734    				xor a
0014E4 ED52                A  1735    				sbc hl,de
0014E6 EB                  A  1736    				ex de,hl
0014E7 2A A3 62 00         A  1737    				ld hl,(mouse_abs_x)
0014EB 19                  A  1738    				add hl,de
0014EC E5                  A  1739    				push hl
0014ED C1                  A  1740    				pop bc
0014EE DD210000 80         A  1741    				ld ix,800000h					0014F3 DD09                A  1742    				add ix,bc
0014F5 30 06               A  1743    				jr nc,ms_x_ok1
0014F7 01000000            A  1744    				ld bc,0
0014FB 18 10               A  1745    				jr ms_x_ok2
0014FD ED5B 9D 62 00       A  1746    ms_x_ok1		ld de,(mouse_window_size_x)
001502 AF                  A  1747    				xor a
001503 ED52                A  1748    				sbc hl,de
001505 38 06               A  1749    				jr c,ms_x_ok2
001507 ED4B 9D 62 00       A  1750    				ld bc,(mouse_window_size_x)		00150C 0B                  A  1751    				dec bc
00150D ED43 A3 62 00       A  1752    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1753    					
001512 2A B2 62 00         A  1754    				ld hl,(mouse_disp_y_buffer)
001516 ED5B AC 62 00       A  1755    				ld de,(mouse_disp_y_old)
00151B AF                  A  1756    				xor a
00151C ED52                A  1757    				sbc hl,de
00151E EB                  A  1758    				ex de,hl
00151F 2A A6 62 00         A  1759    				ld hl,(mouse_abs_y)
001523 19                  A  1760    				add hl,de
001524 E5                  A  1761    				push hl
001525 C1                  A  1762    				pop bc
001526 DD210000 80         A  1763    				ld ix,800000h					00152B DD09                A  1764    				add ix,bc
00152D 30 06               A  1765    				jr nc,ms_y_ok1
00152F 01000000            A  1766    				ld bc,0
001533 18 10               A  1767    				jr ms_y_ok2
001535 ED5B A0 62 00       A  1768    ms_y_ok1		ld de,(mouse_window_size_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00153A AF                  A  1769    				xor a
00153B ED52                A  1770    				sbc hl,de
00153D 38 06               A  1771    				jr c,ms_y_ok2
00153F ED4B A0 62 00       A  1772    				ld bc,(mouse_window_size_y)		001544 0B                  A  1773    				dec bc
001545 ED43 A6 62 00       A  1774    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1775    
                           A  1776    				
00154A 2A AF 62 00         A  1777    ms_nmw			ld hl,(mouse_disp_x_buffer)
00154E 22 A9 62 00         A  1778    				ld (mouse_disp_x_old),hl
001552 2A B2 62 00         A  1779    				ld hl,(mouse_disp_y_buffer)
001556 22 AC 62 00         A  1780    				ld (mouse_disp_y_old),hl
                           A  1781    				
00155A 2A A3 62 00         A  1782    				ld hl,(mouse_abs_x)
00155E ED5B A6 62 00       A  1783    				ld de,(mouse_abs_y)
                           A  1784    				
001563 AF                  A  1785    				xor a
001564 32 B5 62 00         A  1786    				ld (mouse_new_window),a
001568 C3 BE 14 00         A  1787    				jp mouse_end
                           A  1788    				
                           A  1789    	
                           A  1790    ;==============================================
                           A  1791    ;----- General Subroutines --------------------
                           A  1792    ;==============================================
                           A  1793    
                           A  1794    ; .--------------.
                           A  1795    ; ! CRC Checksum !
                           A  1796    ; '--------------'
                           A  1797    
                           A  1798    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1799    
00156C                     A  1800    crc_checksum
                           A  1801    
00156C 21FFFF00            A  1802    				ld hl,0ffffh		
001570 1A                  A  1803    crcloop			ld a,(de)			
001571 AC                  A  1804    				xor h			
001572 67                  A  1805    				ld h,a			
001573 0608                A  1806    				ld b,8
001575 4029                A  1807    crcbyte			add.sis hl,hl					001577 30 08               A  1808    				jr nc,crcnext
001579 7C                  A  1809    				ld a,h
00157A EE10                A  1810    				xor 10h
00157C 67                  A  1811    				ld h,a
00157D 7D                  A  1812    				ld a,l
00157E EE21                A  1813    				xor 21h
001580 6F                  A  1814    				ld l,a
001581 10 F2               A  1815    crcnext			djnz crcbyte
001583 13                  A  1816    				inc de
001584 0D                  A  1817    				dec c
001585 20 E9               A  1818    				jr nz,crcloop
001587 C9                  A  1819    				ret
                           A  1820    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1821    
                           A  1822    ;----------------------------------------------
                           A  1823    
001588                     A  1824    os_get_key_mod_flags
                           A  1825    
001588 3A 8A 62 00         A  1826    				ld a,(key_mod_flags)
00158C BF                  A  1827    				cp a							00158D C9                  A  1828    				ret
                           A  1829    
                           A  1830    ;----------------------------------------------
                           A  1831    
00158E                     A  1832    os_get_vmode
                           A  1833    			
00158E 3A 1D 5F 00         A  1834    				ld a,(charmap_rows)
001592 4F                  A  1835    				ld c,a
001593 3A 20 5F 00         A  1836    				ld a,(charmap_columns)
001597 47                  A  1837    				ld b,a
001598 3A F2 5E 00         A  1838    				ld a,(video_mode)
00159C BF                  A  1839    				cp a						; Z
00159D C9                  A  1840    				ret
                           A  1841    
                           A  1842    ;----------------------------------------------
                           A  1843    
00159E 7B                  A  1844    ext_set_vmode	ld a,e
                           A  1845    
00159F FE04                A  1846    os_set_vmode	cp 4
0015A1 38 04               A  1847    				jr c,vm_range_ok
0015A3 3E88                A  1848    				ld a,88h					;ou
0015A5 B7                  A  1849    				or a
0015A6 C9                  A  1850    				ret
                           A  1851    				
0015A7 32 F2 5E 00         A  1852    vm_range_ok		ld (video_mode),a
0015AB 21030000            A  1853    				ld hl,3
0015AF 67                  A  1854    				ld h,a
0015B0 ED6C                A  1855    				mlt hl
0015B2 11 23 5F 00         A  1856    				ld de,vmode_parameter_list
0015B6 19                  A  1857    				add hl,de
0015B7 7E                  A  1858    				ld a,(hl)
0015B8 23                  A  1859    				inc hl
0015B9 46                  A  1860    				ld b,(hl)
0015BA 23                  A  1861    				inc hl
0015BB 4E                  A  1862    				ld c,(hl)
0015BC CD F2 3D 00         A  1863    				call set_charmap_parameters
                           A  1864    				
0015C0 CD 8F 3E 00         A  1865    				call hwsc_clear_screen
                           A  1866    
0015C4 AF                  A  1867    				xor a				
0015C5 C9                  A  1868    				ret
                           A  1869    
                           A  1870    
                           A  1871    ;----------------------------------------------
                           A  1872    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015C6                     A  1873    os_bchl_memfill
                           A  1874    
                           A  1875    ; fill memory from xHL with A. Count in xBC.
                           A  1876    		
0015C6 77                  A  1877    mf_loop			ld (hl),a
0015C7 EDA1                A  1878    				cpi								0015C9 EA C6 15 00         A  1879    				jp pe,mf_loop
0015CD C9                  A  1880    				ret
                           A  1881    	
                           A  1882    ;----------------------------------------------
                           A  1883    
0015CE 7B                  A  1884    ext_set_pen		ld a,e
                           A  1885    
0015CF 32 F3 5E 00         A  1886    os_set_pen		ld (current_pen),a
0015D3 BF                  A  1887    				cp a							0015D4 C9                  A  1888    				ret
                           A  1889    
                           A  1890    ;----------------------------------------------
                           A  1891    	
0015D5 3A F3 5E 00         A  1892    os_get_pen		ld a,(current_pen)
0015D9 BF                  A  1893    				cp a							0015DA C9                  A  1894    				ret	
                           A  1895    
                           A  1896    ;----------------------------------------------
                           A  1897    
0015DB                     A  1898    ext_background_colours
                           A  1899    				
0015DB CC ED 15 00         A  1900    				call z,mbase_hl
0015DF C3 83 3E 00         A  1901    				jp hswc_set_ui_colours
                           A  1902    				
                           A  1903    				
                           A  1904    ;----------------------------------------------
                           A  1905    
0015E3                     A  1906    os_get_xde_msb	
                           A  1907    			
0015E3 ED53 6E 61 00       A  1908    				ld (xrr_temp),de				0015E8 3A 70 61 00         A  1909    				ld a,(xrr_temp+2)
0015EC C9                  A  1910    				ret
                           A  1911    
                           A  1912    ;----------------------------------------------
                           A  1913    
0015ED F5                  A  1914    mbase_hl		push af
0015EE 22 6E 61 00         A  1915    				ld (xrr_temp),hl				0015F2 ED6E                A  1916    				ld a,MB
0015F4 32 70 61 00         A  1917    				ld (xrr_temp+2),a
0015F8 2A 6E 61 00         A  1918    				ld hl,(xrr_temp)
0015FC F1                  A  1919    				pop af
0015FD C9                  A  1920    				ret
                           A  1921    				
0015FE F5                  A  1922    mbase_de		push af
0015FF ED53 6E 61 00       A  1923    				ld (xrr_temp),de				001604 ED6E                A  1924    				ld a,MB
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001606 32 70 61 00         A  1925    				ld (xrr_temp+2),a
00160A ED5B 6E 61 00       A  1926    				ld de,(xrr_temp)
00160F F1                  A  1927    				pop af
001610 C9                  A  1928    				ret
                           A  1929    
                           A  1930    
                           A  1931    ;----------------------------------------------
                           A  1932    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1933    ;----------------------------------------------
                           A  1934    
001611                     A  1935    unpack_rle
                           A  1936    
                           A  1937    ;set xHL = source address of packed file
                           A  1938    ;set xDE = destination address for unpacked dat
                           A  1939    ;set xBC = length of packed file
                           A  1940    
001611 E5                  A  1941    			push hl	
001612 DDE1                A  1942    			pop ix
001614 0B                  A  1943    			dec bc								001615 23                  A  1944    			inc hl
001616 DD7E00              A  1945    unp_gtok	ld a,(ix)							001619 BE                  A  1946    unp_next	cp (hl)								00161A 28 07               A  1947    			jr z,unp_brun						00161C EDA0                A  1948    			ldi									00161E EA 19 16 00         A  1949    			jp pe,unp_next						001622 C9                  A  1950    			ret
                           A  1951    	
001623 C5                  A  1952    unp_brun	push bc								001624 23                  A  1953    			inc hl		
001625 7E                  A  1954    			ld a,(hl)							001626 23                  A  1955    			inc hl		
001627 46                  A  1956    			ld b,(hl)							001628 23                  A  1957    			inc hl
                           A  1958    	
001629 12                  A  1959    unp_rllp	ld (de),a							00162A 13                  A  1960    			inc de			
00162B 10 FC               A  1961    			djnz unp_rllp
                           A  1962    	
00162D C1                  A  1963    			pop bc	
00162E 0B                  A  1964    			dec bc								00162F 0B                  A  1965    			dec bc
001630 0B                  A  1966    			dec bc
001631 E5                  A  1967    			push hl								001632 21000000            A  1968    			ld hl,0
001636 B7                  A  1969    			or a
001637 ED4A                A  1970    			adc hl,bc
001639 E1                  A  1971    			pop hl
00163A 20 DA               A  1972    			jr nz,unp_gtok
00163C C9                  A  1973    			ret	
                           A  1974    	
                           A  1975    ;----------------------------------------------
                           A  1976    ; Commonly called error messages - gets message
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1977    ;----------------------------------------------
                           A  1978    
                           A  1979    
00163D 3E0D                A  1980    os_no_fn_error		ld a,0dh
00163F B7                  A  1981    					or a
001640 C9                  A  1982    					ret
                           A  1983    			
001641 3E15                A  1984    os_fn_too_long		ld a,15h
001643 B7                  A  1985    					or a
001644 C9                  A  1986    					ret
                           A  1987    				
001645 3E16                A  1988    os_no_start_addr	ld a,16h
001647 B7                  A  1989    					or a
001648 C9                  A  1990    					ret
                           A  1991    			
001649 3E17                A  1992    os_no_filesize		ld a,17h
00164B B7                  A  1993    					or a
00164C C9                  A  1994    					ret
                           A  1995    			
00164D 3E18                A  1996    os_abort_save		ld a,18h
00164F B7                  A  1997    					or a
001650 C9                  A  1998    					ret
                           A  1999    			
001651 3E1C                A  2000    os_no_e_addr_error	ld a,1ch
001653 B7                  A  2001    					or a
001654 C9                  A  2002    					ret
                           A  2003    			
001655 3E1D                A  2004    os_no_d_addr_error	ld a,1dh
001657 B7                  A  2005    					or a
001658 C9                  A  2006    					ret
                           A  2007    				
001659 3E1E                A  2008    os_range_error		ld a,1eh
00165B B7                  A  2009    					or a
00165C C9                  A  2010    					ret
                           A  2011    			
00165D 3E1F                A  2012    os_no_args_error	ld a,1fh
00165F B7                  A  2013    					or a
001660 C9                  A  2014    					ret	
                           A  2015    
                           A  2016    ;----------------------------------------------
                           A  2017    
                           A  2018    ; Set xHL to address of zero terminated filenam
                           A  2019    ; RETURNS:	C:xDE  = File length
                           A  2020    ;    		HL     = Start cluster of file
                           A  2021    
001661 CC ED 15 00         A  2022    ext_find_file	call z,mbase_hl
                           A  2023    
001665 CD 86 52 00         A  2024    os_find_file	call fs_hl_to_filename
001669 CD 1F 4A 00         A  2025    				call fs_open_file_command		00166D 38 02               A  2026    				jr c,os_fferr					00166F B7                  A  2027    				or a							001670 C9                  A  2028    				ret 		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2029    								
001671 47                  A  2030    os_fferr		ld b,a							001672 AF                  A  2031    				xor a			
001673 4F                  A  2032    				ld c,a
001674 0C                  A  2033    				inc c							001675 C9                  A  2034    				ret	
                           A  2035    
                           A  2036    ;----------------------------------------------
                           A  2037    
001676                     A  2038    os_set_load_length
                           A  2039    
001676 ED53 DE 54 00       A  2040    				ld (fs_file_transfer_length),de
00167B BF                  A  2041    				cp a							00167C C9                  A  2042    				ret
                           A  2043    				
                           A  2044    ;----------------------------------------------
                           A  2045    
00167D                     A  2046    ext_set_file_pointer
                           A  2047    
00167D 79                  A  2048    				ld a,c
                           A  2049    				
00167E                     A  2050    os_set_file_pointer
                           A  2051    
                           A  2052    ; Moves the 'start of file' pointer allowing ra
                           A  2053    ; Note: File pointer is reset by opening a file
                           A  2054    ; by normal read function.
                           A  2055    
00167E ED53 D2 54 00       A  2056    				ld (fs_file_pointer),de			001683 32 D5 54 00         A  2057    				ld (fs_file_pointer+3),a
001687 F5                  A  2058    				push af
001688 AF                  A  2059    				xor a
001689 32 04 55 00         A  2060    				ld (fs_filepointer_valid),a		00168D F1                  A  2061    				pop af
00168E BF                  A  2062    				cp a							00168F C9                  A  2063    				ret
                           A  2064    				
                           A  2065    ;----------------------------------------------
                           A  2066    
                           A  2067    ; set xHL = load address 
                           A  2068    ; (Before calling this routine, call os_find_fi
                           A  2069    
001690                     A  2070    ext_read_bytes_from_file
                           A  2071    
001690 CC ED 15 00         A  2072    				call z,mbase_hl					                           A  2073    				
001694                     A  2074    os_read_bytes_from_file
                           A  2075    
001694 22 E7 54 00         A  2076    				ld (fs_ez80_address),hl			001698 CD 6A 4A 00         A  2077    				call fs_read_data_command
00169C 38 D3               A  2078    				jr c,os_fferr
00169E B7                  A  2079    				or a
00169F C9                  A  2080    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2081    
                           A  2082    ;----------------------------------------------
                           A  2083    
                           A  2084    ; Before calling, set xHL = address of zero ter
                           A  2085    
0016A0 CC ED 15 00         A  2086    ext_create_file	call z,mbase_hl
                           A  2087    
0016A4 CD 86 52 00         A  2088    os_create_file	call fs_hl_to_filename
0016A8 CD 20 4D 00         A  2089    				call fs_create_file_command		0016AC DA 71 16 00         A  2090    				jp c,os_fferr					0016B0 B7                  A  2091    				or a
0016B1 C9                  A  2092    				ret
                           A  2093    
                           A  2094    ;----------------------------------------------
                           A  2095    
0016B2                     A  2096    ext_write_bytes_to_file
                           A  2097    
0016B2 CC ED 15 00         A  2098    				call z,mbase_hl
0016B6 CC FE 15 00         A  2099    				call z,mbase_de
                           A  2100    
0016BA                     A  2101    os_write_bytes_to_file
                           A  2102    
                           A  2103    ; Before calling, set..
                           A  2104    
                           A  2105    ; xDE   = address to save data from
                           A  2106    ; xBC   = number of bytes to save
                           A  2107    ; xHL   = address of null-terminated ascii name
                           A  2108    
                           A  2109    ; On return:
                           A  2110    
                           A  2111    ; If zero flag NOT set, there was an error.
                           A  2112    ; If   A = $00, b = hardware error code
                           A  2113    ; Else A = File system error code
                           A  2114    
                           A  2115    ; NOTE:
                           A  2116    ; Will return 'file not found' if the file has 
                           A  2117    				
0016BA ED43 DE 54 00       A  2118    				ld (fs_file_transfer_length),bc
0016BF ED53 E7 54 00       A  2119    				ld (fs_ez80_address),de	 	
0016C4 CD 86 52 00         A  2120    				call fs_hl_to_filename
0016C8 CD 52 4D 00         A  2121    				call fs_write_bytes_to_file_com
0016CC DA 71 16 00         A  2122    				jp c,os_fferr
0016D0 B7                  A  2123    				or a
0016D1 C9                  A  2124    				ret
                           A  2125    		
                           A  2126    		
                           A  2127    ;----------------------------------------------
                           A  2128    	
                           A  2129    
0016D2                     A  2130    os_check_volume_format
                           A  2131    
0016D2 CD 78 48 00         A  2132    				call fs_check_disk_format
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016D6 DA 71 16 00         A  2133    os_rffsc		jp c,os_fferr
0016DA B7                  A  2134    				or a
0016DB C9                  A  2135    				ret
                           A  2136    
                           A  2137    ;----------------------------------------------
                           A  2138    
                           A  2139    
0016DC 7B                  A  2140    ext_format		ld a,e
0016DD CC ED 15 00         A  2141    				call z,mbase_hl					                           A  2142    
0016E1 E5                  A  2143    os_format		push hl							0016E2 CD F0 1A 00         A  2144    				call dev_to_driver_lookup
0016E6 E1                  A  2145    				pop hl
0016E7 38 04               A  2146    				jr c,sdevok
0016E9 3ED0                A  2147    				ld a,0d0h						0016EB B7                  A  2148    				or a
0016EC C9                  A  2149    				ret
                           A  2150    
0016ED F5                  A  2151    sdevok			push af				
0016EE 11 AE 54 00         A  2152    				ld de,fs_sought_filename
0016F2 CD 95 53 00         A  2153    				call fs_clear_filename
0016F6 060B                A  2154    				ld b,11
0016F8 CD 48 12 00         A  2155    				call os_copy_ascii_run
0016FC F1                  A  2156    				pop af
                           A  2157    				
0016FD 21 7C 5F 00         A  2158    				ld hl,current_driver
001701 46                  A  2159    				ld b,(hl)
001702 77                  A  2160    				ld (hl),a
001703 C5                  A  2161    				push bc
001704 E5                  A  2162    				push hl
001705 CD ED 46 00         A  2163    				call fs_format_device_command
001709 E1                  A  2164    				pop hl
00170A C1                  A  2165    				pop bc
00170B 70                  A  2166    				ld (hl),b
00170C 18 C8               A  2167    				jr os_rffsc
                           A  2168    
                           A  2169    
                           A  2170    ;----------------------------------------------
                           A  2171    
                           A  2172    
00170E CC ED 15 00         A  2173    ext_make_dir	call z,mbase_hl					                           A  2174    
001712 CD 86 52 00         A  2175    os_make_dir		call fs_hl_to_filename
001716 CD 98 4B 00         A  2176    				call fs_make_dir_command
00171A 18 BA               A  2177    				jr os_rffsc
                           A  2178    
                           A  2179    
                           A  2180    ;----------------------------------------------
                           A  2181    
                           A  2182    
00171C CC ED 15 00         A  2183    ext_change_dir	call z,mbase_hl					                           A  2184    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001720 CD 86 52 00         A  2185    os_change_dir	call fs_hl_to_filename
001724 CD CB 49 00         A  2186    				call fs_change_dir_command
001728 18 AC               A  2187    				jr os_rffsc
                           A  2188    				
                           A  2189    	
                           A  2190    ;----------------------------------------------
                           A  2191    	
                           A  2192    	
00172A CD FC 49 00         A  2193    os_parent_dir	call fs_parent_dir_command
00172E 18 A6               A  2194    				jr os_rffsc
                           A  2195    				
                           A  2196    
                           A  2197    ;----------------------------------------------
                           A  2198    
                           A  2199    	
001730 CD F0 49 00         A  2200    os_root_dir		call fs_goto_root_dir_command
001734 18 A0               A  2201    				jr os_rffsc
                           A  2202    
                           A  2203    
                           A  2204    ;----------------------------------------------
                           A  2205    
                           A  2206    
001736 CC ED 15 00         A  2207    ext_erase_file	call z,mbase_hl					                           A  2208    
00173A CD 86 52 00         A  2209    os_erase_file	call fs_hl_to_filename
00173E CD E1 4E 00         A  2210    				call fs_erase_file_command
001742 18 92               A  2211    				jr os_rffsc
                           A  2212    	
                           A  2213    
                           A  2214    ;----------------------------------------------
                           A  2215    
                           A  2216    
001744                     A  2217    os_goto_first_dir_entry	
                           A  2218    
001744 CD 3C 4F 00         A  2219    				call fs_goto_first_dir_entry
001748 18 8C               A  2220    				jr os_rffsc
                           A  2221    
                           A  2222    
                           A  2223    ;----------------------------------------------
                           A  2224    
                           A  2225    
00174A                     A  2226    os_get_dir_entry		
                           A  2227    
00174A CD 53 4F 00         A  2228    				call fs_get_dir_entry	
00174E 18 86               A  2229    				jr os_rffsc
                           A  2230    
                           A  2231    
                           A  2232    ;----------------------------------------------
                           A  2233    
                           A  2234    
001750                     A  2235    os_goto_next_dir_entry	
                           A  2236    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001750 CD E0 4F 00         A  2237    				call fs_goto_next_dir_entry	
001754 18 80               A  2238    				jr os_rffsc
                           A  2239    
                           A  2240    
                           A  2241    ;----------------------------------------------
                           A  2242    
                           A  2243    
001756                     A  2244    os_get_current_dir_name
                           A  2245    
001756 CD 4C 53 00         A  2246    				call fs_get_current_dir_name
00175A C3 D6 16 00         A  2247    				jr os_rffsc
                           A  2248    				
                           A  2249    
                           A  2250    ;----------------------------------------------
                           A  2251    
                           A  2252    
00175E CC ED 15 00         A  2253    ext_rename_file	call z,mbase_hl
001762 CC FE 15 00         A  2254    				call z,mbase_de
                           A  2255    
001766 D5                  A  2256    os_rename_file	push de
001767 CD 80 52 00         A  2257    				call fs_hl_to_alt_filename		00176B E1                  A  2258    				pop hl				
00176C CD 86 52 00         A  2259    				call fs_hl_to_filename	
001770 CD F8 4E 00         A  2260    				call fs_rename_command
001774 C3 D6 16 00         A  2261    				jr os_rffsc
                           A  2262    				
                           A  2263    
                           A  2264    ;----------------------------------------------
                           A  2265    
                           A  2266    
001778 CC ED 15 00         A  2267    ext_delete_dir	call z,mbase_hl					                           A  2268    
00177C CD 86 52 00         A  2269    os_delete_dir	call fs_hl_to_filename
001780 CD 71 4C 00         A  2270    				call fs_delete_dir_command
001784 C3 D6 16 00         A  2271    				jp os_rffsc
                           A  2272    	
                           A  2273    	
                           A  2274    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2275    
                           A  2276    
001788                     A  2277    ext_read_sector
001788 CD D3 17 00         A  2278    				call ext_sector_access_preamble
00178C C0                  A  2279    				ret nz
00178D 32 7C 5F 00         A  2280    				ld (current_driver),a
001791 CD 23 54 00         A  2281    				call fs_read_sector
001795 20 11               A  2282    				jr nz,sect_done
001797 38 0F               A  2283    				jr c,sect_done
001799 21 A6 66 00         A  2284    				ld hl,sector_buffer
00179D ED5B 8C 5F 00       A  2285    				ld de,(sector_rd_wr_addr)
0017A2 01000200            A  2286    				ld bc,512
0017A6 EDB0                A  2287    				ldir			
0017A8 F5                  A  2288    sect_done		push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017A9 3A AC 60 00         A  2289    				ld a,(sys_driver_backup)		0017AD 32 7C 5F 00         A  2290    				ld (current_driver),a
0017B1 F1                  A  2291    				pop af
0017B2 C3 D6 16 00         A  2292    				jp os_rffsc
                           A  2293    				
                           A  2294    
0017B6                     A  2295    ext_write_sector
                           A  2296    			
0017B6 CD D3 17 00         A  2297    				call ext_sector_access_preamble
0017BA C0                  A  2298    				ret nz
0017BB 32 7C 5F 00         A  2299    				ld (current_driver),a
0017BF 2A 8C 5F 00         A  2300    				ld hl,(sector_rd_wr_addr)
0017C3 11 A6 66 00         A  2301    				ld de,sector_buffer
0017C7 01000200            A  2302    				ld bc,512
0017CB EDB0                A  2303    				ldir			
0017CD CD 3C 54 00         A  2304    				call fs_write_sector
0017D1 18 D5               A  2305    				jr sect_done
                           A  2306    
                           A  2307    
0017D3                     A  2308    ext_sector_access_preamble
                           A  2309    
0017D3 CC ED 15 00         A  2310    				call z,mbase_hl
0017D7 22 8C 5F 00         A  2311    				ld (sector_rd_wr_addr),hl
                           A  2312    				
0017DB 78                  A  2313    				ld a,b
0017DC F5                  A  2314    				push af							0017DD DD21 52 61 00       A  2315    				ld ix,sector_lba0
0017E2 DD1F00              A  2316    				ld (ix),de						0017E5 DD7103              A  2317    				ld (ix+3),c
0017E8 CD F0 1A 00         A  2318    				call dev_to_driver_lookup		0017EC E5                  A  2319    				push hl
0017ED DDE1                A  2320    				pop ix
0017EF 2A 52 61 00         A  2321    				ld hl,(sector_lba0)				0017F3 3A 55 61 00         A  2322    				ld a,(sector_lba3)				0017F7 DD0701              A  2323    				ld bc,(ix+1)					0017FA B7                  A  2324    				or a							0017FB ED42                A  2325    				sbc hl,bc
0017FD DD9E04              A  2326    				sbc a,(ix+4)
001800 38 05               A  2327    				jr c,range_ok
001802 F1                  A  2328    				pop af
001803 3ED5                A  2329    				ld a,0d5h						001805 B7                  A  2330    				or a							001806 C9                  A  2331    				ret
                           A  2332    	
001807 3A 7C 5F 00         A  2333    range_ok		ld a,(current_driver)
00180B 32 AC 60 00         A  2334    				ld (sys_driver_backup),a
00180F F1                  A  2335    				pop af							001810 CD F0 1A 00         A  2336    				call dev_to_driver_lookup
001814 30 02               A  2337    				jr nc,bad_dev
001816 BF                  A  2338    os_null			cp a							001817 C9                  A  2339    				ret
                           A  2340    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001818 3ED0                A  2341    bad_dev			ld a,0d0h						00181A B7                  A  2342    				or a							00181B C9                  A  2343    				ret	
                           A  2344    			
                           A  2345    
                           A  2346    ;----------------------------------------------
                           A  2347    
                           A  2348    
00181C                     A  2349    os_get_device_info
                           A  2350    
00181C 21 27 60 00         A  2351    				ld hl,host_device_hardware_info
001820 11 A5 3B 00         A  2352    				ld de,driver_table
001824 3A 7D 5F 00         A  2353    				ld a,(device_count)
001828 47                  A  2354    				ld b,a
001829 3A 7C 5F 00         A  2355    				ld a,(current_driver)
00182D BF                  A  2356    				cp a
00182E C9                  A  2357    				ret
                           A  2358    
                           A  2359    
                           A  2360    
                           A  2361    
00182F                     A  2362    os_get_volume_info
                           A  2363    
00182F 21 A7 5F 00         A  2364    				ld hl,volume_mount_list	
001833 3A 7E 5F 00         A  2365    				ld a,(volume_count)
001837 47                  A  2366    				ld b,a
001838 3A 7B 5F 00         A  2367    				ld a,(current_volume)
00183C C9                  A  2368    				ret
                           A  2369    				
                           A  2370    		
                           A  2371    ;----------------------------------------------
                           A  2372    
                           A  2373    
00183D                     A  2374    ext_serial_get_header
                           A  2375    
00183D CC ED 15 00         A  2376    				call z,mbase_hl
001841 7B                  A  2377    				ld a,e
001842 CD 80 44 00         A  2378    				call serial_get_header
001846 DDE5                A  2379    				push ix
001848 D1                  A  2380    				pop de
001849 C9                  A  2381    				ret
                           A  2382    				
                           A  2383    				
00184A                     A  2384    ext_serial_receive_file
                           A  2385    				
00184A CC ED 15 00         A  2386    				call z,mbase_hl
00184E CD 1B 45 00         A  2387    				call serial_receive_file
001852 C9                  A  2388    				ret
                           A  2389    				
                           A  2390    	
001853                     A  2391    ext_serial_send_file
                           A  2392    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001853 CC ED 15 00         A  2393    				call z,mbase_hl					001857 CC FE 15 00         A  2394    				call z,mbase_de					00185B D5                  A  2395    				push de	
00185C DDE1                A  2396    				pop ix							00185E C5                  A  2397    				push bc							00185F D1                  A  2398    				pop de							001860 CD E4 45 00         A  2399    				call serial_send_file
001864 C9                  A  2400    				ret
                           A  2401    
                           A  2402    
001865                     A  2403    ext_serial_tx
001865 7B                  A  2404    				ld a,e
001866 CD CE 3D 00         A  2405    				call send_serial_byte
00186A AF                  A  2406    				xor a							00186B C9                  A  2407    				ret
                           A  2408    
                           A  2409    
00186C                     A  2410    ext_serial_rx
00186C 7B                  A  2411    				ld a,e
00186D 32 4B 5F 00         A  2412    				ld (serial_timeout),a
001871 CD 93 3D 00         A  2413    				call receive_serial_byte
001875 C9                  A  2414    				ret
                           A  2415    				
                           A  2416    
                           A  2417    ;----------------------------------------------
                           A  2418    
001876                     A  2419    ext_mount_volumes
                           A  2420    
001876 7B                  A  2421    				ld a,e
                           A  2422    
001877                     A  2423    os_mount_volumes
                           A  2424    				
001877 32 AD 60 00         A  2425    				ld (os_quiet_mode),a			                           A  2426    				
00187B 21 35 56 00         A  2427    				ld hl,storage_txt
00187F CD 55 0F 00         A  2428    				call os_print_string_cond
001883 CD AB 18 00         A  2429    				call mount_go
001887 AF                  A  2430    				xor a
001888 32 7B 5F 00         A  2431    tvloop			ld (current_volume),a
00188C CD 06 1B 00         A  2432    				call os_change_volume			001890 C8                  A  2433    				ret z							001891 3A 7B 5F 00         A  2434    				ld a,(current_volume)			001895 3C                  A  2435    				inc a
001896 FE08                A  2436    				cp max_volumes
001898 20 EE               A  2437    				jr nz,tvloop
00189A 3A 7D 5F 00         A  2438    				ld a,(device_count)
00189E B7                  A  2439    				or a
00189F 20 08               A  2440    				jr nz,mfsdevs
0018A1 21 79 5D 00         A  2441    				ld hl,none_found_msg
0018A5 CD 34 14 00         A  2442    				call os_show_packed_text_cond
0018A9 AF                  A  2443    mfsdevs			xor a
0018AA C9                  A  2444    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2445    
                           A  2446    
                           A  2447    
0018AB 21 A7 5F 00         A  2448    mount_go		ld hl,volume_mount_list			0018AF 01800000            A  2449    				ld bc,max_volumes*16
0018B3 AF                  A  2450    clrdl_lp		xor a
0018B4 CD C6 15 00         A  2451    				call os_bchl_memfill
                           A  2452    								
0018B8 21 8F 5F 00         A  2453    				ld hl,volume_dir_clusters		0018BC 01180000            A  2454    				ld bc,max_volumes*3		
0018C0 AF                  A  2455    				xor a	
0018C1 CD C6 15 00         A  2456    				call os_bchl_memfill	
                           A  2457    			
0018C5 11 27 60 00         A  2458    				ld de,host_device_hardware_info
0018C9 ED53 A7 60 00       A  2459    				ld (dhwn_temp_pointer),de
                           A  2460    				
0018CE FD21 A7 5F 00       A  2461    				ld iy,volume_mount_list
0018D3 AF                  A  2462    				xor a
0018D4 32 7E 5F 00         A  2463    				ld (volume_count),a
0018D8 32 7D 5F 00         A  2464    				ld (device_count),a
0018DC 32 7C 5F 00         A  2465    mnt_loop		ld (current_driver),a			0018E0 CD 7C 1A 00         A  2466    				call locate_driver_base			0018E4 21000000            A  2467    				ld hl,0
0018E8 AF                  A  2468    				xor a
0018E9 ED5A                A  2469    				adc hl,de
0018EB C8                  A  2470    				ret z							0018EC EB                  A  2471    				ex de,hl						0018ED FDE5                A  2472    				push iy
0018EF CD 00 19 00         A  2473    				call find_dev					0018F3 FDE1                A  2474    				pop iy							0018F5 CC 01 19 00         A  2475    				call z,got_dev		
0018F9 3A 7C 5F 00         A  2476    nxt_drv			ld a,(current_driver)			0018FD 3C                  A  2477    				inc a
0018FE 18 DC               A  2478    				jr mnt_loop
                           A  2479    
                           A  2480    				
001900 E9                  A  2481    find_dev		jp (hl)
                           A  2482    			
                           A  2483    			
001901 E5                  A  2484    got_dev			push hl							001902 D5                  A  2485    				push de							001903 C5                  A  2486    				push bc
001904 CD FD 13 00         A  2487    				call os_new_line_cond			001908 015B0100            A  2488    				ld bc,015bh
00190C CD 8D 1A 00         A  2489    				call os_print_multiple_chars_co
001910 3A 7C 5F 00         A  2490    				ld a,(current_driver)
001914 CD 7C 1A 00         A  2491    				call locate_driver_base
001918 210C0000            A  2492    				ld hl,0ch
00191C 19                  A  2493    				add hl,de
00191D CD 55 0F 00         A  2494    				call os_print_string_cond		001921 015D0100            A  2495    				ld bc,015dh
001925 CD 8D 1A 00         A  2496    				call os_print_multiple_chars_co
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001929 C1                  A  2497    				pop bc
00192A D1                  A  2498    				pop de
00192B AF                  A  2499    				xor a
00192C 32 AB 60 00         A  2500    				ld (vols_on_device_temp),a
                           A  2501    				
001930 21 7D 5F 00         A  2502    				ld hl,device_count
001934 34                  A  2503    				inc (hl)						001935 3A 7C 5F 00         A  2504    				ld a,(current_driver)
001939 2A A7 60 00         A  2505    				ld hl,(dhwn_temp_pointer)	
00193D 77                  A  2506    				ld (hl),a
00193E 23                  A  2507    				inc hl
00193F 73                  A  2508    				ld (hl),e						001940 FD7304              A  2509    				ld (iy+4),e						001943 23                  A  2510    				inc hl							001944 72                  A  2511    				ld (hl),d
001945 FD7205              A  2512    				ld (iy+5),d
001948 23                  A  2513    				inc hl
001949 71                  A  2514    				ld (hl),c			
00194A FD7106              A  2515    				ld (iy+6),c
00194D 23                  A  2516    				inc hl
00194E 70                  A  2517    				ld (hl),b						00194F 23                  A  2518    				inc hl
001950 D1                  A  2519    				pop de
001951 EB                  A  2520    				ex de,hl
001952 01160000            A  2521    				ld bc,22
001956 EDB0                A  2522    				ldir							001958 AF                  A  2523    				xor a
001959 0605                A  2524    				ld b,5		
00195B 12                  A  2525    clrrode			ld (de),a						00195C 13                  A  2526    				inc de
00195D 10 FC               A  2527    				djnz clrrode
00195F ED53 A7 60 00       A  2528    				ld (dhwn_temp_pointer),de		                           A  2529    					
001964 AF                  A  2530    				xor a							001965 FDE5                A  2531    fnxtpart		push iy
001967 CD 16 48 00         A  2532    				call fs_get_partition_info
00196B FDE1                A  2533    				pop iy
00196D 38 31               A  2534    				jr c,nxt_dev					00196F FECE                A  2535    				cp 0ceh							001971 28 2D               A  2536    				jr z,nxt_dev
001973 F5                  A  2537    				push af
001974 FD360001            A  2538    				ld (iy),1						001978 3A 7C 5F 00         A  2539    				ld a,(current_driver)
00197C FD7701              A  2540    				ld (iy+1),a						00197F 3A AA 60 00         A  2541    				ld a,(partition_temp)	
001983 FD7707              A  2542    				ld (iy+7),a						001986 F1                  A  2543    				pop af
001987 B7                  A  2544    				or a
001988 28 35               A  2545    				jr z,dev_mbr
00198A AF                  A  2546    				xor a
00198B FD7708              A  2547    				ld (iy+8),a						00198E FD7709              A  2548    				ld (iy+9),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001991 FD770A              A  2549    				ld (iy+10),a					001994 FD770B              A  2550    				ld (iy+11),a
001997 CD 0B 1A 00         A  2551    				call show_vol_info
00199B CD FC 19 00         A  2552    				call test_max_vol
00199F C8                  A  2553    				ret z							                           A  2554    			
0019A0 3A AB 60 00         A  2555    nxt_dev			ld a,(vols_on_device_temp)		0019A4 B7                  A  2556    				or a
0019A5 C0                  A  2557    				ret nz		
0019A6 CD 5D 1A 00         A  2558    				call test_quiet_mode
0019AA 20 06               A  2559    				jr nz,skp_cu
0019AC 3E0A                A  2560    				ld a,10
0019AE 32 57 61 00         A  2561    				ld (cursor_x),a
0019B2 21 76 5D 00         A  2562    skp_cu			ld hl,no_vols_msg				0019B6 CD 34 14 00         A  2563    				call os_show_packed_text_cond
0019BA CD FD 13 00         A  2564    				call os_new_line_cond
0019BE C9                  A  2565    				ret
                           A  2566    				
                           A  2567    			
0019BF 11040000            A  2568    dev_mbr			ld de,4
0019C3 19                  A  2569    				add hl,de
0019C4 7E                  A  2570    				ld a,(hl)						0019C5 B7                  A  2571    				or a
0019C6 C8                  A  2572    				ret z							0019C7 19                  A  2573    				add hl,de
                           A  2574    				
0019C8 FDE5                A  2575    				push iy
0019CA 0604                A  2576    				ld b,4
0019CC 7E                  A  2577    sfmbrlp			ld a,(hl)						0019CD FD7708              A  2578    				ld (iy+8),a
0019D0 23                  A  2579    				inc hl
0019D1 FD23                A  2580    				inc iy
0019D3 10 F7               A  2581    				djnz sfmbrlp
0019D5 FDE1                A  2582    				pop iy
0019D7 FDE5                A  2583    				push iy
0019D9 0603                A  2584    				ld b,3	
0019DB 7E                  A  2585    nsivlp			ld a,(hl)
0019DC FD7704              A  2586    				ld (iy+4),a						0019DF 23                  A  2587    				inc hl
0019E0 FD23                A  2588    				inc iy
0019E2 10 F7               A  2589    				djnz nsivlp
0019E4 FDE1                A  2590    				pop iy
                           A  2591    				
0019E6 CD 0B 1A 00         A  2592    				call show_vol_info
0019EA CD FC 19 00         A  2593    				call test_max_vol	
0019EE C8                  A  2594    				ret z							0019EF 3A AA 60 00         A  2595    				ld a,(partition_temp)
0019F3 3C                  A  2596    				inc a
0019F4 FE04                A  2597    				cp 4							0019F6 C2 65 19 00         A  2598    				jp nz,fnxtpart
0019FA 18 A4               A  2599    				jr nxt_dev
                           A  2600    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2601    
0019FC                     A  2602    test_max_vol
                           A  2603    			
0019FC 11100000            A  2604    				ld de,16
001A00 FD19                A  2605    				add iy,de			
001A02 21 7E 5F 00         A  2606    				ld hl,volume_count
001A06 34                  A  2607    				inc (hl)
001A07 7E                  A  2608    				ld a,(hl)
001A08 FE08                A  2609    				cp max_volumes
001A0A C9                  A  2610    				ret
                           A  2611    			
                           A  2612    			
001A0B                     A  2613    show_vol_info
                           A  2614    				
001A0B CD 5D 1A 00         A  2615    				call test_quiet_mode
001A0F 20 06               A  2616    				jr nz,skp_cm2
001A11 3E09                A  2617    				ld a,9			
001A13 32 57 61 00         A  2618    				ld (cursor_x),a
001A17 3A 7E 5F 00         A  2619    skp_cm2			ld a,(volume_count)
001A1B F5                  A  2620    				push af
001A1C C630                A  2621    				add a,30h		
001A1E 32 83 5F 00         A  2622    				ld (vol_txt+4),a	
001A22 21 7F 5F 00         A  2623    				ld hl,vol_txt
001A26 CD 55 0F 00         A  2624    				call os_print_string_cond		001A2A 21 AB 60 00         A  2625    				ld hl,vols_on_device_temp
001A2E CBC6                A  2626    				set 0,(hl)						                           A  2627    			
001A30 F1                  A  2628    				pop af
001A31 FDE5                A  2629    				push iy
001A33 CD 06 1B 00         A  2630    				call os_change_volume			001A37 28 0A               A  2631    				jr z,vform_ok					001A39 21 26 5D 00         A  2632    svi_fe			ld hl,format_err_msg		
001A3D CD 34 14 00         A  2633    svi_pem			call os_show_packed_text_cond	001A41 18 0D               A  2634    				jr skpsvl
                           A  2635    			
001A43 CD 37 50 00         A  2636    vform_ok		call fs_get_volume_label
001A47 38 0E               A  2637    				jr c,svi_hwe
001A49 B7                  A  2638    				or a
001A4A 20 ED               A  2639    				jr nz,svi_fe
001A4C CD 55 0F 00         A  2640    				call os_print_string_cond		                           A  2641    			
001A50 CD FD 13 00         A  2642    skpsvl			call os_new_line_cond
001A54 FDE1                A  2643    				pop iy
001A56 C9                  A  2644    				ret
                           A  2645    				
001A57 21 72 5B 00         A  2646    svi_hwe			ld hl,disk_err_msg
001A5B 18 E0               A  2647    				jr svi_pem
                           A  2648    			
                           A  2649    			
001A5D                     A  2650    test_quiet_mode
                           A  2651    			
001A5D 3A AD 60 00         A  2652    				ld a,(os_quiet_mode)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A61 B7                  A  2653    				or a
001A62 C9                  A  2654    				ret
                           A  2655    
                           A  2656    ;----------------------------------------------
                           A  2657    
                           A  2658    
001A63                     A  2659    show_dev_driver_name
                           A  2660    	
                           A  2661    	
001A63 CD 7C 1A 00         A  2662    				call locate_driver_base			001A67 EB                  A  2663    				ex de,hl
001A68 110C0000            A  2664    				ld de,0ch
001A6C 19                  A  2665    				add hl,de
001A6D CD 5A 0F 00         A  2666    				call os_print_string			001A71 C5                  A  2667    				push bc
001A72 01200100            A  2668    				ld bc,0120h
001A76 CD 92 1A 00         A  2669    				call os_print_multiple_chars	001A7A C1                  A  2670    				pop bc
001A7B C9                  A  2671    				ret
                           A  2672    
                           A  2673    
001A7C                     A  2674    locate_driver_base
                           A  2675    
001A7C E5                  A  2676    				push hl							001A7D 11030000            A  2677    				ld de,3							001A81 57                  A  2678    				ld d,a
001A82 ED5C                A  2679    				mlt de
001A84 21 A5 3B 00         A  2680    				ld hl,driver_table
001A88 19                  A  2681    				add hl,de
001A89 ED17                A  2682    				ld de,(hl)
001A8B E1                  A  2683    				pop hl
001A8C C9                  A  2684    				ret
                           A  2685    				
                           A  2686    		
                           A  2687    ;----------------------------------------------
                           A  2688    
001A8D                     A  2689    os_print_multiple_chars_cond
                           A  2690    
001A8D CD 5D 1A 00         A  2691    				call test_quiet_mode
001A91 C0                  A  2692    				ret nz
                           A  2693    			
001A92                     A  2694    os_print_multiple_chars
                           A  2695    
                           A  2696    ;c = char
                           A  2697    ;b = count
001A92 C5                  A  2698    				push bc
001A93 E5                  A  2699    				push hl
001A94 79                  A  2700    				ld a,c
001A95 21 B0 56 00         A  2701    				ld hl,rep_char_txt
001A99 77                  A  2702    				ld (hl),a
001A9A E5                  A  2703    pmch_lp			push hl
001A9B CD 5A 0F 00         A  2704    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A9F E1                  A  2705    				pop hl
001AA0 10 F8               A  2706    				djnz pmch_lp
001AA2 E1                  A  2707    				pop hl
001AA3 C1                  A  2708    				pop bc
001AA4 C9                  A  2709    				ret
                           A  2710    
                           A  2711    ;----------------------------------------------
                           A  2712    
                           A  2713    
001AA5 7B                  A  2714    ext_plot_char	ld a,e
001AA6 C3 05 3F 00         A  2715    				jp hwsc_plot_char
                           A  2716    				
                           A  2717    
                           A  2718    ;----------------------------------------------
                           A  2719    ; Some file system related routines 
                           A  2720    ;----------------------------------------------
                           A  2721    
                           A  2722    
001AAA                     A  2723    fs_get_dir_cluster
                           A  2724    
                           A  2725    
001AAA F5                  A  2726    				push af							001AAB E5                  A  2727    				push hl			
001AAC CD C2 1A 00         A  2728    				call fs_get_dir_cluster_address
001AB0 ED17                A  2729    				ld de,(hl)
001AB2 E1                  A  2730    dclopdone		pop hl
001AB3 F1                  A  2731    				pop af
001AB4 BF                  A  2732    				cp a							001AB5 C9                  A  2733    				ret
                           A  2734    				
                           A  2735    
                           A  2736    
                           A  2737    
                           A  2738    
001AB6                     A  2739    fs_update_dir_cluster
                           A  2740    
001AB6 F5                  A  2741    				push af							001AB7 E5                  A  2742    				push hl			
001AB8 D5                  A  2743    				push de			
001AB9 CD C2 1A 00         A  2744    				call fs_get_dir_cluster_address
001ABD D1                  A  2745    				pop de
001ABE ED1F                A  2746    				ld (hl),de
001AC0 18 F0               A  2747    				jr dclopdone
                           A  2748    			
                           A  2749    
                           A  2750    
                           A  2751    
                           A  2752    
001AC2                     A  2753    fs_get_dir_cluster_address
                           A  2754    
001AC2 21 8F 5F 00         A  2755    				ld hl,volume_dir_clusters		001AC6 3A 7B 5F 00         A  2756    				ld a,(current_volume)	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001ACA 11030000            A  2757    				ld de,3
001ACE 57                  A  2758    				ld d,a
001ACF ED5C                A  2759    				mlt de
001AD1 19                  A  2760    				add hl,de
001AD2 C9                  A  2761    				ret
                           A  2762    				
                           A  2763    	
                           A  2764    
                           A  2765    	
                           A  2766    	
001AD3                     A  2767    fs_get_total_sectors
                           A  2768    
                           A  2769    
001AD3 F5                  A  2770    				push af
001AD4 E5                  A  2771    				push hl							001AD5 CD E4 1A 00         A  2772    				call fs_calc_volume_offset	
001AD9 21 AB 5F 00         A  2773    				ld hl,volume_mount_list+4
001ADD 19                  A  2774    				add hl,de
001ADE ED17                A  2775    				ld de,(hl)
001AE0 E1                  A  2776    				pop hl
001AE1 F1                  A  2777    				pop af
001AE2 BF                  A  2778    				cp a							001AE3 C9                  A  2779    				ret
                           A  2780    
                           A  2781    
                           A  2782    
                           A  2783    
                           A  2784    
001AE4                     A  2785    fs_calc_volume_offset
                           A  2786    
001AE4 3A 7B 5F 00         A  2787    				ld a,(current_volume)			001AE8 11100000            A  2788    calc_vol		ld de,16
001AEC 57                  A  2789    				ld d,a
001AED ED5C                A  2790    				mlt de
001AEF C9                  A  2791    				ret
                           A  2792    
                           A  2793    
                           A  2794    
                           A  2795    
                           A  2796    
001AF0                     A  2797    dev_to_driver_lookup
                           A  2798    
001AF0 21 7D 5F 00         A  2799    				ld hl,device_count				001AF4 BE                  A  2800    				cp (hl)							001AF5 D0                  A  2801    				ret nc
001AF6 11200000            A  2802    				ld de,32						001AFA 57                  A  2803    				ld d,a
001AFB ED5C                A  2804    				mlt de
001AFD 21 27 60 00         A  2805    				ld hl,host_device_hardware_info
001B01 19                  A  2806    				add hl,de
001B02 7E                  A  2807    				ld a,(hl)
001B03 37                  A  2808    				scf
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B04 C9                  A  2809    				ret
                           A  2810    				
                           A  2811    
                           A  2812    
001B05                     A  2813    ext_change_volume
                           A  2814    
001B05 7B                  A  2815    				ld a,e
                           A  2816    
001B06                     A  2817    os_change_volume
                           A  2818    
001B06 47                  A  2819    				ld b,a							001B07 FE08                A  2820    				cp max_volumes		
001B09 30 23               A  2821    				jr nc,fs_ccv2					                           A  2822    			
001B0B 3A 7B 5F 00         A  2823    				ld a,(current_volume)			001B0F F5                  A  2824    				push af
001B10 78                  A  2825    				ld a,b
001B11 32 7B 5F 00         A  2826    				ld (current_volume),a			001B15 CD 32 1B 00         A  2827    				call fs_set_driver_for_volume	                           A  2828    				
001B19 CD 78 48 00         A  2829    				call fs_check_disk_format		001B1D 38 06               A  2830    				jr c,fs_cant_chg_vols	
001B1F B7                  A  2831    				or a
001B20 20 03               A  2832    				jr nz,fs_cant_chg_vols
001B22 F1                  A  2833    				pop af							001B23 AF                  A  2834    				xor a							001B24 C9                  A  2835    				ret
                           A  2836    
                           A  2837    
001B25                     A  2838    fs_cant_chg_vols
                           A  2839    			
001B25 F1                  A  2840    				pop af
001B26 32 7B 5F 00         A  2841    				ld (current_volume),a			001B2A CD 32 1B 00         A  2842    				call fs_set_driver_for_volume	                           A  2843    				
001B2E 3ECF                A  2844    fs_ccv2			ld a,0cfh						001B30 B7                  A  2845    				or a
001B31 C9                  A  2846    				ret
                           A  2847    					
                           A  2848    	
001B32                     A  2849    fs_set_driver_for_volume
                           A  2850    
001B32 CD E4 1A 00         A  2851    				call fs_calc_volume_offset		001B36 21 A8 5F 00         A  2852    				ld hl,volume_mount_list+1
001B3A 19                  A  2853    				add hl,de
001B3B 7E                  A  2854    				ld a,(hl)
001B3C 32 7C 5F 00         A  2855    				ld (current_driver),a
001B40 C9                  A  2856    				ret
                           A  2857    
                           A  2858    
                           A  2859    ;----------------------------------------------
                           A  2860    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B41                     A  2861    ext_file_sector_list
                           A  2862    
                           A  2863    ;Input HL = cluster, E = sector offset
                           A  2864    
                           A  2865    ;Output HL = new cluster, E = new sector number
                           A  2866    ;       IX = address of LBA0 LSB of sector (int
                           A  2867    
                           A  2868    				
001B41 3A 97 54 00         A  2869    				ld a,(fs_cluster_size)
001B45 BB                  A  2870    				cp e
001B46 20 0A               A  2871    				jr nz,fsl_sc
001B48 CD CB 52 00         A  2872    				call get_fat_entry_for_cluster
001B4C DA 71 16 00         A  2873    				jp c,os_fferr
001B50 1E00                A  2874    				ld e,0
001B52 CD A2 53 00         A  2875    fsl_sc			call cluster_and_offset_to_lba
001B56 1C                  A  2876    				inc e
001B57 01 52 61 00         A  2877    fsl_done		ld bc,sector_lba0
001B5B BF                  A  2878    				cp a							001B5C C9                  A  2879    				ret
                           A  2880    
                           A  2881    ;----------------------------------------------
                           A  2882    
001B5D                     A  2883    os_get_disk_sector_ptr
                           A  2884     
001B5D 21 52 61 00         A  2885    				ld hl,sector_lba0
001B61 11 A6 66 00         A  2886    				ld de,sector_buffer
001B65 BF                  A  2887    				cp a
001B66 C9                  A  2888    				ret
                           A  2889    				
                           A  2890    ;----------------------------------------------
                           A  2891    
                           A  2892    
001B67 E5                  A  2893    os_count_chars	push hl							001B68 01000000            A  2894    				ld bc,0
001B6C 7E                  A  2895    cch_lp			ld a,(hl)
001B6D B7                  A  2896    				or a
001B6E 28 04               A  2897    				jr z,cch_end
001B70 23                  A  2898    				inc hl
001B71 03                  A  2899    				inc bc
001B72 18 F8               A  2900    				jr cch_lp
001B74 E1                  A  2901    cch_end			pop hl
001B75 C9                  A  2902    				ret
                           A  2903    				
                           A  2904    			
                           A  2905    ;----------------------------------------------
                           A  2906    ; Environment variable code V0.01
                           A  2907    ;----------------------------------------------
                           A  2908    
       00000100            A  2909    envar_buffer_size equ 256
                           A  2910    
                           A  2911    ;----------------------------------------------
                           A  2912    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B76                     A  2913    ext_get_envar
001B76 CC ED 15 00         A  2914    				call z,mbase_hl
                           A  2915    
001B7A                     A  2916    os_get_envar
                           A  2917    
                           A  2918    ;Set: 		HL = name of required variable
                           A  2919    ;Returns:	ZF Set: DE = address of variable's 
                           A  2920    ;        	ZF Not Set: Couldn't find variable
                           A  2921    				
001B7A DD21 B6 62 00       A  2922    				ld ix,envar_list-1
001B7F CD 67 1B 00         A  2923    env_fname		call os_count_chars				001B83 78                  A  2924    				ld a,b
001B84 B1                  A  2925    				or c
001B85 28 27               A  2926    				jr z,env_bad
                           A  2927    								
001B87 ED1201              A  2928    env_cname		lea de,ix+1
001B8A 1A                  A  2929    				ld a,(de)
001B8B FEFF                A  2930    				cp 0ffh
001B8D 28 1F               A  2931    				jr z,env_bad
001B8F C5                  A  2932    				push bc
001B90 41                  A  2933    				ld b,c
001B91 CD 29 12 00         A  2934    				call os_compare_strings
001B95 C1                  A  2935    				pop bc
001B96 20 06               A  2936    				jr nz,env_nomatch
001B98 03                  A  2937    				inc bc							001B99 EB                  A  2938    				ex de,hl
001B9A 09                  A  2939    				add hl,bc
001B9B EB                  A  2940    				ex de,hl						001B9C AF                  A  2941    				xor a
001B9D C9                  A  2942    				ret			
                           A  2943    				
001B9E DD23                A  2944    env_nomatch		inc ix							001BA0 CD 46 1C 00         A  2945    				call check_envar_bounds
001BA4 20 08               A  2946    				jr nz,env_bad
001BA6 DD7E00              A  2947    				ld a,(ix)
001BA9 B7                  A  2948    				or a
001BAA 28 DB               A  2949    				jr z,env_cname
001BAC 18 F0               A  2950    				jr env_nomatch
                           A  2951    
001BAE 3E82                A  2952    env_bad			ld a,82h						001BB0 B7                  A  2953    				or a
001BB1 C9                  A  2954    				ret	
                           A  2955    				
                           A  2956    ;----------------------------------------------
                           A  2957    
001BB2                     A  2958    ext_set_envar
                           A  2959    
                           A  2960    ;HL = addr of variable name (zero terminated)
                           A  2961    ;DE = addr of data for variable (zero terminate
                           A  2962    
                           A  2963    ;Returns:
                           A  2964    ;ZF = Set: OK
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2965    ;ZF = Not Set: No enough space for new variable
                           A  2966    		
001BB2 CC ED 15 00         A  2967    				call z,mbase_hl
001BB6 CC FE 15 00         A  2968    				call z,mbase_de
                           A  2969    
001BBA 7E                  A  2970    os_set_envar	ld a,(hl)						001BBB B7                  A  2971    				or a
001BBC 28 F0               A  2972    				jr z,env_bad
001BBE 1A                  A  2973    				ld a,(de)
001BBF B7                  A  2974    				or a
001BC0 28 EC               A  2975    				jr z,env_bad
                           A  2976    
001BC2 E5                  A  2977    				push hl
001BC3 D5                  A  2978    				push de
001BC4 CD 10 1C 00         A  2979    				call os_delete_envar			001BC8 D1                  A  2980    				pop de
001BC9 E1                  A  2981    				pop hl
                           A  2982    				
001BCA DD2A C1 63 00       A  2983    				ld ix,(envar_top_loc)			001BCF CD 46 1C 00         A  2984    env_enlp		call check_envar_bounds
001BD3 20 D9               A  2985    				jr nz,env_bad
001BD5 7E                  A  2986    				ld a,(hl)						001BD6 DD7700              A  2987    				ld (ix),a
001BD9 B7                  A  2988    				or a
001BDA 28 05               A  2989    				jr z,env_ndone
001BDC 23                  A  2990    				inc hl
001BDD DD23                A  2991    				inc ix
001BDF 18 EE               A  2992    				jr env_enlp
                           A  2993    				
001BE1 CD 46 1C 00         A  2994    env_ndone		call check_envar_bounds			001BE5 20 C7               A  2995    				jr nz,env_bad
001BE7 DD36003D            A  2996    				ld (ix),'='
001BEB DD23                A  2997    				inc ix
                           A  2998    
001BED CD 46 1C 00         A  2999    env_evlp		call check_envar_bounds			001BF1 20 BB               A  3000    				jr nz,env_bad
001BF3 1A                  A  3001    				ld a,(de)
001BF4 DD7700              A  3002    				ld (ix),a
001BF7 B7                  A  3003    				or a
001BF8 28 05               A  3004    				jr z,env_vdone
001BFA 13                  A  3005    				inc de
001BFB DD23                A  3006    				inc ix
001BFD 18 EE               A  3007    				jr env_evlp
                           A  3008    
001BFF DD23                A  3009    env_vdone		inc ix
001C01 DD3600FF            A  3010    				ld (ix),0ffh
001C05 DD22 C1 63 00       A  3011    				ld (envar_top_loc),ix			001C0A AF                  A  3012    				xor a
001C0B C9                  A  3013    				ret
                           A  3014    
                           A  3015    	
                           A  3016    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3017    
001C0C                     A  3018    ext_delete_envar
                           A  3019    
001C0C CC ED 15 00         A  3020    				call z,mbase_hl
                           A  3021    
001C10                     A  3022    os_delete_envar
                           A  3023    
                           A  3024    ;HL = name of required variable (null terminate
                           A  3025    ;ZF = Set: OK
                           A  3026    ;ZF = Not Set: Didnt find named variable
                           A  3027    
                           A  3028    
001C10 CD 7A 1B 00         A  3029    				call os_get_envar				001C14 C0                  A  3030    				ret nz
                           A  3031    				
001C15 D5                  A  3032    				push de
001C16 E1                  A  3033    				pop hl
001C17 AF                  A  3034    				xor a
001C18 ED42                A  3035    				sbc hl,bc						                           A  3036    				
001C1A 13                  A  3037    env_fnxt		inc de							001C1B D5                  A  3038    				push de
001C1C DDE1                A  3039    				pop ix
001C1E CD 46 1C 00         A  3040    				call check_envar_bounds
001C22 20 8A               A  3041    				jr nz,env_bad
001C24 1A                  A  3042    				ld a,(de)
001C25 B7                  A  3043    				or a
001C26 20 F2               A  3044    				jr nz,env_fnxt
                           A  3045    
001C28 13                  A  3046    env_gnxt		inc de							001C29 EB                  A  3047    				ex de,hl
001C2A 7E                  A  3048    env_collp		ld a,(hl)
001C2B 12                  A  3049    				ld (de),a						001C2C FEFF                A  3050    				cp 0ffh
001C2E 28 0F               A  3051    				jr z,env_clspd					001C30 E5                  A  3052    				push hl
001C31 DDE1                A  3053    				pop ix
001C33 CD 46 1C 00         A  3054    				call check_envar_bounds
001C37 C2 AE 1B 00         A  3055    				jr nz,env_bad
001C3B 23                  A  3056    				inc hl
001C3C 13                  A  3057    				inc de
001C3D 18 EB               A  3058    				jr env_collp
                           A  3059    
001C3F ED53 C1 63 00       A  3060    env_clspd		ld (envar_top_loc),de			001C44 AF                  A  3061    				xor a
001C45 C9                  A  3062    				ret
                           A  3063    				
                           A  3064    ;----------------------------------------------
                           A  3065    
001C46                     A  3066    check_envar_bounds
                           A  3067    
001C46 C5                  A  3068    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C47 E5                  A  3069    				push hl
001C48 DDE5                A  3070    				push ix
001C4A E1                  A  3071    				pop hl
001C4B 01 B8 63 00         A  3072    				ld bc,1+(envar_list+envar_buffe
001C4F AF                  A  3073    				xor a
001C50 ED42                A  3074    				sbc hl,bc
001C52 38 05               A  3075    				jr c,env_bok
001C54 AF                  A  3076    				xor a
001C55 3C                  A  3077    				inc a
001C56 E1                  A  3078    				pop hl
001C57 C1                  A  3079    				pop bc
001C58 C9                  A  3080    				ret
                           A  3081    
001C59 AF                  A  3082    env_bok			xor a
001C5A E1                  A  3083    				pop hl
001C5B C1                  A  3084    				pop bc
001C5C C9                  A  3085    				ret
                           A  3086    						
                           A  3087    ;----------------------------------------------
                           A  3088    
001C5D                     A  3089    os_get_keymap_location
                           A  3090    
001C5D 21 C7 5D 00         A  3091    				ld hl,unshifted_keymap
001C61 BF                  A  3092    				cp a							001C62 C9                  A  3093    				ret
                           A  3094    
                           A  3095    
                           A  3096    ;----------------------------------------------
                           A  3097    
                           A  3098    
001C63 CC ED 15 00         A  3099    ext_play_audio	call z,mbase_hl
                           A  3100    				
001C67 CD 77 43 00         A  3101    os_play_audio	call hwsc_play_audio
001C6B C9                  A  3102    				ret
                           A  3103    				
                           A  3104    				
                           A  3105    ;==============================================
                           A  3106    ; Internal OS command routines
                           A  3107    ;==============================================
                           A  3108    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C6C                     B     5    os_cmd_c
                           B     6    
001C6C CD A2 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C70 CD CB 1C 00         B     9    				call hexword_or_bust			001C74 CA 55 16 00         B    10    				jp z,os_no_d_addr_error
001C78 ED53 65 61 00       B    11    				ld (copy_dest_address),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    12    						
001C7D CD 90 1C 00         B    13    				call test_mem_range				001C81 DA 59 16 00         B    14    				jp c,os_range_error				001C85 ED5B 65 61 00       B    15    				ld de,(copy_dest_address)
001C8A EDB0                B    16    				ldir
                           B    17    
001C8C 3E20                B    18    copy_done		ld a,020h						001C8E B7                  B    19    				or a
001C8F C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C90                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C90 2A 62 61 00         B    33    				ld hl,(cmdop_end_address)	
001C94 ED4B 5F 61 00       B    34    				ld bc,(cmdop_start_address)
001C99 C5                  B    35    				push bc
001C9A AF                  B    36    				xor a
001C9B ED42                B    37    				sbc hl,bc
001C9D E5                  B    38    				push hl
001C9E C1                  B    39    				pop bc
001C9F 03                  B    40    				inc bc
001CA0 E1                  B    41    				pop hl
001CA1 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001CA2                     B    46    get_start_and_end
                           B    47    			
001CA2 CD D9 10 00         B    48    				call ascii_to_hexword			001CA6 ED53 5F 61 00       B    49    				ld (cmdop_start_address),de
001CAB 23                  B    50    				inc hl
001CAC 28 09               B    51    				jr z,st_addrok
001CAE E1                  B    52    				pop hl							001CAF FE82                B    53    				cp 82h							001CB1 28 02               B    54    				jr z,c_badhex
001CB3 3E16                B    55    				ld a,016h						001CB5 B7                  B    56    c_badhex		or a
001CB6 C9                  B    57    				ret
                           B    58    				
001CB7 CD D9 10 00         B    59    st_addrok		call ascii_to_hexword			001CBB ED53 62 61 00       B    60    				ld (cmdop_end_address),de
001CC0 23                  B    61    				inc hl
001CC1 B7                  B    62    				or a
001CC2 C8                  B    63    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001CC3 E1                  B    64    				pop hl							001CC4 FE82                B    65    				cp 82h							001CC6 28 ED               B    66    				jr z,c_badhex
001CC8 3E1C                B    67    				ld a,01ch						001CCA C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001CCB                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001CCB CD D9 10 00         B    79    				call ascii_to_hexword		
001CCF FE82                B    80    				cp 82h
001CD1 20 03               B    81    				jr nz,hex_good
001CD3 E1                  B    82    				pop hl						; r
001CD4 B7                  B    83    				or a	
001CD5 C9                  B    84    				ret			 
001CD6 FE81                B    85    hex_good		cp 081h						; n
001CD8 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CD9                     B     5    os_cmd_cd	
                           B     6    
001CD9 CD D2 16 00         B     7    				call os_check_volume_format	
001CDD C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001CDE 7E                  B    11    				ld a,(hl)						001CDF B7                  B    12    				or a				
001CE0 CA 87 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001CE4 7E                  B    16    				ld a,(hl)						001CE5 23                  B    17    				inc hl
001CE6 46                  B    18    				ld b,(hl)
001CE7 2B                  B    19    				dec hl
001CE8 FE2E                B    20    				cp '.'			
001CEA 20 08               B    21    				jr nz,cd_nual
001CEC B8                  B    22    				cp b
001CED 20 05               B    23    				jr nz,cd_nual
001CEF CD 2A 17 00         B    24    				call os_parent_dir	
001CF3 C9                  B    25    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B    26    			
                           B    27    			
001CF4 FE2F                B    28    cd_nual			cp 02fh			
001CF6 20 05               B    29    				jr nz,cd_nogor					001CF8 CD 30 17 00         B    30    				call os_root_dir	
001CFC C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CFD FE25                B    34    cd_nogor		cp '%'							001CFF 20 1F               B    35    				jr nz,cd_no_assign
001D01 CD 7A 1B 00         B    36    				call os_get_envar
001D05 28 04               B    37    				jr z,cd_evok
001D07 3ED1                B    38    				ld a,0d1h						001D09 B7                  B    39    				or a
001D0A C9                  B    40    				ret
001D0B 11000000            B    41    cd_evok			ld de,0
001D0F 5E                  B    42    				ld e,(hl)
001D10 23                  B    43    				inc hl
001D11 56                  B    44    				ld d,(hl)
001D12 23                  B    45    				inc hl
001D13 7E                  B    46    				ld a,(hl)
001D14 D5                  B    47    				push de
001D15 CD 06 1B 00         B    48    				call os_change_volume
001D19 D1                  B    49    				pop de
001D1A C0                  B    50    				ret nz
001D1B CD B6 1A 00         B    51    				call fs_update_dir_cluster
001D1F C9                  B    52    				ret
                           B    53    				
                           B    54    				
001D20                     B    55    cd_no_assign
                           B    56    			
001D20 3A 7B 5F 00         B    57    				ld a,(current_volume)
001D24 32 A9 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001D28 E5                  B    60    				push hl
001D29 DDE1                B    61    				pop ix
001D2B DD7E04              B    62    				ld a,(ix+4)
001D2E FE3A                B    63    				cp ':'							001D30 20 25               B    64    				jr nz,cd_nchvol
001D32 11 80 5F 00         B    65    				ld de,vol_txt+1
001D36 0603                B    66    				ld b,3
001D38 CD 29 12 00         B    67    				call os_compare_strings
001D3C 20 19               B    68    				jr nz,cd_nchvol
001D3E 11050000            B    69    				ld de,5
001D42 19                  B    70    				add hl,de
001D43 22 18 62 00         B    71    				ld (os_args_loc),hl				001D47 DD7E03              B    72    				ld a,(ix+3)						001D4A D630                B    73    				sub 030h
001D4C CD 06 1B 00         B    74    				call os_change_volume
001D50 C0                  B    75    				ret nz							001D51 CD 30 17 00         B    76    				call os_root_dir				001D55 18 11               B    77    				jr cd_mol						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B    78    				
                           B    79    			
001D57 CD AA 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D5B ED53 A6 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D60 E5                  B    83    cd_mollp		push hl
001D61 CD 20 17 00         B    84    				call os_change_dir				001D65 E1                  B    85    				pop hl
001D66 20 0A               B    86    				jr nz,cd_dcherr
001D68 7E                  B    87    cd_mol			ld a,(hl)						001D69 23                  B    88    				inc hl
001D6A B7                  B    89    				or a
001D6B C8                  B    90    				ret z
001D6C FE2F                B    91    				cp 02fh
001D6E 28 F0               B    92    				jr z,cd_mollp
001D70 18 F6               B    93    				jr cd_mol
                           B    94    					
001D72                     B    95    cd_dcherr	
                           B    96    			
001D72 F5                  B    97    				push af							001D73 ED5B A6 68 00       B    98    				ld de,(original_dir_cd_cmd)
001D78 CD B6 1A 00         B    99    				call fs_update_dir_cluster
001D7C 3A A9 68 00         B   100    				ld a,(original_vol_cd_cmd)
001D80 CD 06 1B 00         B   101    				call os_change_volume	
001D84 F1                  B   102    				pop af
001D85 B7                  B   103    				or a
001D86 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D87                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D87 0610                B   113    				ld b,max_dirs
001D89 0E00                B   114    				ld c,0
001D8B C5                  B   115    lp1				push bc
001D8C CD AA 1A 00         B   116    				call fs_get_dir_cluster
001D90 C1                  B   117    				pop bc
001D91 D5                  B   118    				push de
001D92 0C                  B   119    				inc c
001D93 C5                  B   120    				push bc
001D94 CD 2A 17 00         B   121    				call os_parent_dir
001D98 C1                  B   122    				pop bc
001D99 20 02               B   123    				jr nz,shdir_lp
001D9B 10 EE               B   124    				djnz lp1
                           B   125    				
001D9D D1                  B   126    shdir_lp		pop de
001D9E C5                  B   127    				push bc
001D9F CD B6 1A 00         B   128    				call fs_update_dir_cluster
001DA3 CD 56 17 00         B   129    				call os_get_current_dir_name
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001DA7 CD 5A 0F 00         B   130    				call os_print_string
001DAB 21 BD 1D 00         B   131    				ld hl,cd_fwdslash_txt
001DAF CD 5A 0F 00         B   132    				call os_print_string
001DB3 C1                  B   133    				pop bc
001DB4 0D                  B   134    				dec c
001DB5 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001DB7 CD 02 14 00         B   137    				call os_new_line	
001DBB AF                  B   138    				xor a
001DBC C9                  B   139    				ret
                           B   140    			
001DBD 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       000068A6            B   145    original_dir_cd_cmd		equ scratch_pad 
       000068A9            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DBF                     B     5    os_cmd_cls
                           B     6    
001DBF CD 8F 3E 00         B     7    				call hwsc_clear_screen
001DC3 AF                  B     8    				xor a
001DC4 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001DC5                     B     5    os_cmd_colon
                           B     6    	
001DC5 CD CB 1C 00         B     7    				call hexword_or_bust			001DC9 CA 45 16 00         B     8    				jp z,os_no_start_addr			001DCD D5                  B     9    				push de
001DCE DDE1                B    10    				pop ix							                           B    11    			
001DD0 CD CB 1C 00         B    12    wmblp			call hexword_or_bust			001DD4 28 07               B    13    				jr z,os_ccmdn
001DD6 DD7300              B    14    				ld (ix),e						001DD9 DD23                B    15    				inc ix
001DDB 18 F3               B    16    				jr wmblp
                           B    17    
001DDD AF                  B    18    os_ccmdn		xor a
001DDE C9                  B    19    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001DDF FD21 C6 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DE4 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DE8 CD CB 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DEC 28 05               B    10    				jr z,d_no_hex					001DEE ED53 3D 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001DF3 3A 1D 5F 00         B    13    d_no_hex		ld a,(charmap_rows)				001DF7 D602                B    14    				sub a,2
001DF9 47                  B    15    				ld b,a
001DFA C5                  B    16    dis_loop		push bc
                           B    17    				
001DFB DD2A 3D 29 00       B    18    				ld ix,(dis_addr)				001E00 CD A8 23 00         B    19    				call show_ix					001E04 3E20                B    20    				ld a,' '
001E06 CD 9C 23 00         B    21    				call show_ascii_char
                           B    22    
001E0A FD21 C6 23 00       B    23    				ld iy,prefix_bits_loc
001E0F FD360000            B    24    				ld (iy),0						001E13 CD 4F 1E 00         B    25    				call dis_instr					001E17 DD23                B    26    				inc ix							                           B    27    				
001E19 3E1A                B    28    				ld a,26							001E1B 32 57 61 00         B    29    				ld (cursor_pos+1),a				001E1F ED4B 3D 29 00       B    30    				ld bc,(dis_addr)
001E24 DD22 3D 29 00       B    31    				ld (dis_addr),ix				001E29 DDE5                B    32    				push ix
001E2B E1                  B    33    				pop hl
001E2C AF                  B    34    				xor a
001E2D ED42                B    35    				sbc hl,bc						001E2F 7D                  B    36    				ld a,l
001E30 E607                B    37    				and 7
001E32 6F                  B    38    				ld l,a
001E33 0A                  B    39    shexoplp		ld a,(bc)						001E34 CD 8B 23 00         B    40    				call show_hex_byte
001E38 3E20                B    41    				ld a,' '
001E3A CD 9C 23 00         B    42    				call show_ascii_char
001E3E 03                  B    43    				inc bc
001E3F 2D                  B    44    				dec l
001E40 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E42 CD 02 14 00         B    47    				call os_new_line
001E46 C1                  B    48    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E47 10 B1               B    49    				djnz dis_loop
                           B    50    
001E49 CD 02 14 00         B    51    				call os_new_line
001E4D AF                  B    52    				xor a
001E4E C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E4F DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E52 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E56 28 04               B    73    			jr z,z80_list					; T
001E58 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E5C                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E5C FE40                B    79    			cp 40h
001E5E 20 0A               B    80    			jr nz,not_sis
001E60 FDCB00B6            B    81    			res il_prefix,(iy)
001E64 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E68 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E6A FE49                B    85    not_sis		cp 49h
001E6C 20 0A               B    86    			jr nz,not_lis
001E6E FDCB00B6            B    87    			res il_prefix,(iy)
001E72 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E76 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E78 FE52                B    91    not_lis		cp 52h
001E7A 20 0A               B    92    			jr nz,not_sil
001E7C FDCB00F6            B    93    			set il_prefix,(iy)
001E80 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E84 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E86 FE5B                B    97    not_sil		cp 5bh
001E88 20 11               B    98    			jr nz,not_adl_prefix_byte
001E8A FDCB00F6            B    99    			set il_prefix,(iy)
001E8E FDCB00EE            B   100    			set dot_l_prefix,(iy)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   101    			
001E92 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E96 DD23                B   103    			inc ix
001E98 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E9B                     B   108    not_adl_prefix_byte			
                           B   109    			
001E9B FECB                B   110    			cp 0cbh								001E9D 20 08               B   111    			jr nz,not_cb
001E9F FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001EA3 DD23                B   113    			inc ix
001EA5 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001EA7 FEED                B   116    not_cb		cp 0edh
001EA9 20 08               B   117    			jr nz,not_ed
001EAB FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001EAF DD23                B   119    			inc ix
001EB1 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001EB3 FEDD                B   122    not_ed		cp 0ddh
001EB5 20 18               B   123    			jr nz,not_dd
001EB7 CD EA 20 00         B   124    do_dd		call check_nxt_byte_prefix			001EBB 28 92               B   125    			jr z,dis_instr						001EBD FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001EC1 FECB                B   127    xdcb_query	cp 0cbh								001EC3 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001EC5 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001EC9 DD23                B   130    			inc ix								001ECB DD23                B   131    			inc ix								001ECD 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001ECF FEFD                B   134    not_dd		cp 0fdh
001ED1 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001ED3 CD EA 20 00         B   136    do_fd		call check_nxt_byte_prefix
001ED7 CA 4F 1E 00         B   137    			jr z,dis_instr	
001EDB FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001EDF 18 E0               B   139    			jr xdcb_query
                           B   140    
001EE1                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001EE1 DD7E00              B   145    			ld a,(ix)	
001EE4 E6C0                B   146    			and 11000000b			; seperate 
001EE6 07                  B   147    			rlca
001EE7 07                  B   148    			rlca
001EE8 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EEB DD7E00              B   151    			ld a,(ix)
001EEE E638                B   152    			and 00111000b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EF0 CB3F                B   153    			srl a
001EF2 CB3F                B   154    			srl a
001EF4 CB3F                B   155    			srl a	
001EF6 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EF9 DD7E00              B   158    			ld a,(ix)
001EFC E607                B   159    			and 00000111b
001EFE FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001F01 DD7E00              B   162    			ld a,(ix)
001F04 E630                B   163    			and 00110000b
001F06 CB3F                B   164    			srl a
001F08 CB3F                B   165    			srl a
001F0A CB3F                B   166    			srl a
001F0C CB3F                B   167    			srl a
001F0E FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F11 DD7E00              B   170    			ld a,(ix)
001F14 E608                B   171    			and 00001000b
001F16 CB3F                B   172    			srl a
001F18 CB3F                B   173    			srl a
001F1A CB3F                B   174    			srl a
001F1C FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F1F CD F8 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F23 78                  B   181    index_table	ld a,b							; a
001F24 B7                  B   182    			or a
001F25 28 07               B   183    			jr z,parse_instr				; m
001F27 CB7E                B   184    d_filp		bit 7,(hl)						; w
001F29 23                  B   185    			inc hl							; o
001F2A 28 FB               B   186    			jr z,d_filp					
001F2C 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001F2E FD21 C6 23 00       B   190    parse_instr	ld iy,opcode_vars
001F33 01000000            B   191    			ld bc,0
001F37 7E                  B   192    			ld a,(hl)						;ge
001F38 FE80                B   193    			cp 80h
001F3A C8                  B   194    			ret z
001F3B E67F                B   195    			and 7fh
                           B   196    			
001F3D FE26                B   197    			cp '&'							;sy
001F3F 20 28               B   198    			jr nz,not_adlsym
001F41 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F45 CA D3 20 00         B   200    			jr z,next_opcode_ascii_char
001F49 0600                B   201    			ld b,0
001F4B FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F4F 28 02               B   203    			jr z,naplsb
001F51 CBC0                B   204    			set 0,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F53 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F57 28 02               B   206    			jr z,napmsb
001F59 CBC8                B   207    			set 1,b
001F5B E5                  B   208    napmsb		push hl
001F5C 21 25 29 00         B   209    			ld hl,adl_prefix_list
001F60 CD 23 1F 00         B   210    			call index_table				; r
001F64 E1                  B   211    			pop hl
001F65 C3 D3 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F69 FE5E                B   214    not_adlsym	cp '^'							;sy
001F6B 20 0D               B   215    			jr nz,d_not_imm8
001F6D DD23                B   216    			inc ix							;th
001F6F DD7E00              B   217    			ld a,(ix)
001F72 CD 8B 23 00         B   218    			call show_hex_byte
001F76 C3 D3 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F7A FE21                B   221    d_not_imm8	cp '!'							;sy
001F7C 20 26               B   222    			jr nz,d_not_imm16					001F7E 11020000            B   223    			ld de,2
001F82 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F86 28 08               B   225    			jr z,imm16
001F88 13                  B   226    			inc de
001F89 DD7E03              B   227    			ld a,(ix+3)
001F8C CD 8B 23 00         B   228    			call show_hex_byte
001F90 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F93 CD 8B 23 00         B   230    			call show_hex_byte			
001F97 DD7E01              B   231    			ld a,(ix+1)						;th
001F9A CD 8B 23 00         B   232    			call show_hex_byte
001F9E DD19                B   233    			add ix,de						;ad
001FA0 C3 D3 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001FA4 FE2F                B   236    d_not_imm16	cp '/'							;sy
001FA6 20 36               B   237    			jr nz,d_not_sb
001FA8 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001FAC 28 05               B   239    			jr z,norm_dbyte
001FAE DD7EFF              B   240    			ld a,(ix-1)						;if
001FB1 18 05               B   241    			jr xdcb_dbyte
001FB3 DD23                B   242    norm_dbyte	inc ix
001FB5 DD7E00              B   243    			ld a,(ix)						;th
001FB8 CB7F                B   244    xdcb_dbyte	bit 7,a
001FBA 20 10               B   245    			jr nz,d_sbin					;sh
001FBC F5                  B   246    			push af
001FBD 3E2B                B   247    			ld a,'+'
001FBF CD 9C 23 00         B   248    			call show_ascii_char
001FC3 F1                  B   249    			pop af
001FC4 CD 8B 23 00         B   250    			call show_hex_byte
001FC8 C3 D3 20 00         B   251    			jp next_opcode_ascii_char
001FCC F5                  B   252    d_sbin		push af
001FCD 3E2D                B   253    			ld a,'-'
001FCF CD 9C 23 00         B   254    			call show_ascii_char
001FD3 F1                  B   255    			pop af
001FD4 ED44                B   256    			neg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FD6 CD 8B 23 00         B   257    			call show_hex_byte
001FDA C3 D3 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FDE FE64                B   260    d_not_sb	cp 'd'							;sy
001FE0 20 1E               B   261    			jr nz,d_not_pcdip
001FE2 DD23                B   262    			inc ix
001FE4 01000000            B   263    			ld bc,0
001FE8 DD7E00              B   264    			ld a,(ix)
001FEB CB7F                B   265    			bit 7,a
001FED 28 01               B   266    			jr z,d_spcd_pos
001FEF 0B                  B   267    			dec bc
001FF0 4F                  B   268    d_spcd_pos	ld c,a
001FF1 03                  B   269    			inc bc
001FF2 DDE5                B   270    			push ix
001FF4 DD09                B   271    			add ix,bc
001FF6 CD A8 23 00         B   272    			call show_ix
001FFA DDE1                B   273    			pop ix
001FFC C3 D3 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
002000 FE3E                B   276    d_not_pcdip	cp '>'							;sy
002002 20 16               B   277    			jr nz,d_not_sdig
002004 23                  B   278    			inc hl							;th
002005 01000000            B   279    			ld bc,0
002009 4E                  B   280    			ld c,(hl)
00200A FD21 C6 23 00       B   281    			ld iy,opcode_vars
00200F FD09                B   282    			add iy,bc
002011 FD7E00              B   283    			ld a,(iy)						;a 
002014 C630                B   284    			add a,30h						;co
002016 C3 CF 20 00         B   285    			jp d_output_char
                           B   286    
00201A FE5F                B   287    d_not_sdig	cp '_'
00201C 20 12               B   288    			jr nz,d_nhlsubst				; s
00201E E5                  B   289    			push hl
00201F 21 FD 28 00         B   290    			ld hl,hl_subs
002023 CD DB 20 00         B   291    hl_subst	call prefix_to_offset
002027 CD 23 1F 00         B   292    			call index_table				; r
00202B E1                  B   293    			pop hl
00202C C3 D3 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002030 FE7C                B   296    d_nhlsubst	cp '|'
002032 20 07               B   297    			jr nz,d_noinvhls
002034 E5                  B   298    			push hl
002035 21 03 29 00         B   299    			ld hl,inv_hl_subs
002039 18 E8               B   300    			jr hl_subst
                           B   301    			
00203B FE68                B   302    d_noinvhls	cp 'h'							;sy
00203D 20 07               B   303    			jr nz,d_nhsubst
00203F E5                  B   304    			push hl
002040 21 09 29 00         B   305    			ld hl,h_subs
002044 18 DD               B   306    			jr hl_subst
                           B   307    			
002046 FE6C                B   308    d_nhsubst	cp 'l'							;sy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002048 20 07               B   309    			jr nz,d_nlsubst
00204A E5                  B   310    			push hl
00204B 21 10 29 00         B   311    			ld hl,l_subs
00204F 18 D2               B   312    			jr hl_subst
                           B   313    			
002051 FE24                B   314    d_nlsubst	cp '$'
002053 20 07               B   315    			jr nz,d_nihlsubst				; s
002055 E5                  B   316    			push hl
002056 21 17 29 00         B   317    			ld hl,ind_hl_subs
00205A 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
00205C                     B   321    d_nihlsubst	
                           B   322    
00205C FE7E                B   323    			cp '~'							; s
00205E 20 1F               B   324    			jr nz,ntable_r
002060 11 52 28 00         B   325    			ld de,table_r
002064 23                  B   326    do_table 	inc hl
002065 01000000            B   327    			ld bc,0							; t
002069 4E                  B   328    			ld c,(hl)
00206A FD21 C6 23 00       B   329    			ld iy,opcode_vars
00206F FD09                B   330    			add iy,bc
002071 FD4600              B   331    			ld b,(iy)						;in
002074 E5                  B   332    			push hl
002075 EB                  B   333    			ex de,hl
002076 CD 23 1F 00         B   334    			call index_table				; r
00207A E1                  B   335    			pop hl
00207B C3 D3 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
00207F 11 5D 28 00         B   338    ntable_r	ld de,table_r2					; s
002083 FE3D                B   339    			cp '='
002085 28 DD               B   340    			jr z,do_table
                           B   341    			
002087 11 68 28 00         B   342    			ld de,table_rp					; s
00208B FE40                B   343    			cp '@'
00208D 28 D5               B   344    			jr z,do_table 
                           B   345    			
00208F 11 6F 28 00         B   346    			ld de,table_rp2					; s
002093 FE2A                B   347    			cp '*'
002095 28 CD               B   348    			jr z,do_table
                           B   349    			
002097 11 D5 28 00         B   350    			ld de,table_rp3					; s
00209B FE3C                B   351    			cp '<'
00209D 28 C5               B   352    			jr z,do_table
                           B   353    			
00209F 11 DD 28 00         B   354    			ld de,table_rp4					; s
0020A3 FE7D                B   355    			cp '}'
0020A5 28 BD               B   356    			jr z,do_table
                           B   357    			
0020A7 11 77 28 00         B   358    			ld de,table_cc					; s
0020AB FE23                B   359    			cp '#'
0020AD 28 B5               B   360    			jr z,do_table 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   361    			
0020AF 11 83 28 00         B   362    			ld de,table_alu					; s
0020B3 FE3A                B   363    			cp ':'
0020B5 28 AD               B   364    			jr z,do_table 
                           B   365    			
0020B7 11 AF 28 00         B   366    			ld de,table_rot					; s
0020BB FE25                B   367    			cp '%'
0020BD 28 A5               B   368    			jr z,do_table 
                           B   369    			
0020BF 11 ED 28 00         B   370    			ld de,table_rst					; s
0020C3 FE3B                B   371    			cp ';'
0020C5 28 9D               B   372    			jr z,do_table 
                           B   373    
0020C7 11 E5 28 00         B   374    			ld de,table_rp5					; s
0020CB FE7B                B   375    			cp '{'
0020CD 28 95               B   376    			jr z,do_table 
                           B   377    
0020CF                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0020CF                     B   382    d_output_char
                           B   383    
0020CF CD 9C 23 00         B   384    			call show_ascii_char
                           B   385    
0020D3                     B   386    next_opcode_ascii_char
                           B   387    
0020D3 CB7E                B   388    			bit 7,(hl)						;if
0020D5 C0                  B   389    			ret nz
0020D6 23                  B   390    			inc hl
0020D7 C3 2E 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0020DB                     B   397    prefix_to_offset
                           B   398    
0020DB 0602                B   399    			ld b,2							;se
0020DD FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020E1 C0                  B   401    			ret nz
0020E2 05                  B   402    			dec b
0020E3 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0020E7 C0                  B   404    			ret nz
0020E8 05                  B   405    			dec b
0020E9 C9                  B   406    			ret
                           B   407    			
                           B   408    			
0020EA                     B   409    check_nxt_byte_prefix			
                           B   410    
0020EA DD23                B   411    			inc ix
0020EC DD7E00              B   412    			ld a,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020EF FEDD                B   413    			cp 0ddh
0020F1 C8                  B   414    			ret z
0020F2 FEED                B   415    			cp 0edh
0020F4 C8                  B   416    			ret z
0020F5 FEFD                B   417    			cp 0fdh
0020F7 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020F8                     B   428    find_instruction_ascii
                           B   429    
0020F8 0600                B   430    			ld b,0						; defau
                           B   431    
0020FA FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020FE 28 12               B   433    			jr z,not_ddcb_fdcb_inst
002100 21 2C 28 00         B   434    			ld hl,ddcb_fdcb_z6		
002104 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
002107 FD7E 03             B   436    			ld a,(iy+var_z)
00210A FE06                B   437    			cp 6
00210C C8                  B   438    			ret z
00210D 21 F4 27 00         B   439    			ld hl,ddcb_fdcb_zn6					002111 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002112                     B   444    not_ddcb_fdcb_inst
                           B   445    
002112 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
002116 28 08               B   447    			jr z,not_cb_inst
002118 21 7C 25 00         B   448    			ld hl,cb_group		
00211C FD46 01             B   449    			ld b,(iy+var_x)				; x is 
00211F C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002120                     B   454    not_cb_inst
                           B   455    
002120 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
002124 CA 45 22 00         B   457    			jr z,not_ed_inst
                           B   458    
002128 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
00212B B7                  B   460    			or a
00212C 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
00212E FD7E 03             B   464    			ld a,(iy+var_z)				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002131 B7                  B   465    			or a
002132 20 0D               B   466    			jr nz,notedx0z0
002134 21 A3 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
002138 FD7E 02             B   468    			ld a,(iy+var_y)
00213B FE06                B   469    			cp 6
00213D C0                  B   470    			ret nz
00213E 0601                B   471    			ld b,1
002140 C9                  B   472    			ret
                           B   473    
002141 FE01                B   474    notedx0z0	cp 1
002143 20 0D               B   475    			jr nz,notedx0z1
002145 21 B4 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
002149 FD7E 02             B   477    			ld a,(iy+var_y)
00214C FE06                B   478    			cp 6
00214E C0                  B   479    			ret nz
00214F 0601                B   480    			ld b,1
002151 C9                  B   481    			ret
                           B   482    
002152 FE02                B   483    notedx0z1	cp 2
002154 20 05               B   484    			jr nz,notedx0z2
002156 21 CA 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
00215A C9                  B   486    			ret
                           B   487    
00215B FE03                B   488    notedx0z2	cp 3
00215D 20 05               B   489    			jr nz,notedx0z3
00215F 21 D6 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002163 C9                  B   491    			ret
                           B   492    			
002164 FE04                B   493    notedx0z3	cp 4
002166 20 05               B   494    			jr nz,notedx0z4
002168 21 E2 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
00216C C9                  B   496    			ret
                           B   497    
00216D FE06                B   498    notedx0z4	cp 6
00216F 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002171 21 EC 25 00         B   500    			ld hl,ed_x0_z6
002175 C9                  B   501    			ret
                           B   502    
002176 FE07                B   503    notedx0z6	cp 7
002178 C2 4F 28 00         B   504    			jr nz,bad_opcode			;x0 / z
00217C 21 F7 25 00         B   505    			ld hl,ed_x0_z7
002180 FD46 05             B   506    			ld b,(iy+var_q)
002183 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002184 FE01                B   511    notedx0		cp 1	
002186 20 68               B   512    			jr nz,ed_xn1
                           B   513    
002188 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
00218B B7                  B   515    			or a
00218C 20 0D               B   516    			jr nz,ed_x1_zn0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00218E 21 0C 26 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002192 FD7E 02             B   518    			ld a,(iy+var_y)
002195 FE06                B   519    			cp 6
002197 C0                  B   520    			ret nz
002198 0601                B   521    			ld b,1
00219A C9                  B   522    			ret
                           B   523    			
00219B FE01                B   524    ed_x1_zn0	cp 1
00219D 20 0D               B   525    			jr nz,ed_x1_zn1
00219F 21 1C 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
0021A3 FD7E 02             B   527    			ld a,(iy+var_y)
0021A6 FE06                B   528    			cp 6
0021A8 C0                  B   529    			ret nz
0021A9 0601                B   530    			ld b,1
0021AB C9                  B   531    			ret
                           B   532    		
0021AC FE02                B   533    ed_x1_zn1	cp 2
0021AE 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0021B0 21 31 26 00         B   535    			ld hl,ed_x1_z2	
0021B4 FD46 05             B   536    			ld b,(iy+var_q)
0021B7 C9                  B   537    			ret
                           B   538    
0021B8 FE03                B   539    ed_x1_zn2	cp 3
0021BA 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0021BC 21 47 26 00         B   541    			ld hl,ed_x1_z3	
0021C0 FD46 05             B   542    			ld b,(iy+var_q)
0021C3 C9                  B   543    			ret
                           B   544    			
0021C4 FE04                B   545    ed_x1_zn3	cp 4							;z 
0021C6 20 08               B   546    			jr nz,ed_x1_zn4
0021C8 21 5C 26 00         B   547    			ld hl,ed_x1_z4
0021CC FD46 02             B   548    			ld b,(iy+var_y)
0021CF C9                  B   549    			ret
                           B   550    			
0021D0 FE05                B   551    ed_x1_zn4	cp 5
0021D2 20 08               B   552    			jr nz,ed_x1_zn5
0021D4 21 94 26 00         B   553    			ld hl,ed_x1_z5					;z 
0021D8 FD46 02             B   554    			ld b,(iy+var_y)
0021DB C9                  B   555    			ret
                           B   556    			
0021DC FE06                B   557    ed_x1_zn5	cp 6
0021DE 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021E0 21 C3 26 00         B   559    			ld hl,ed_x1_z6
0021E4 FD46 02             B   560    			ld b,(iy+var_y)
0021E7 C9                  B   561    			ret
                           B   562    			
0021E8 21 E8 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021EC FD46 02             B   564    			ld b,(iy+var_y)
0021EF C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021F0 FE02                B   569    ed_xn1		cp 2
0021F2 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021F4 FD46 02             B   572    			ld b,(iy+var_y)
0021F7 FD7E 03             B   573    			ld a,(iy+var_z)
0021FA B7                  B   574    			or a
0021FB 20 05               B   575    			jr nz,edx2zn0
0021FD 21 0C 27 00         B   576    			ld hl,ed_x2_z0					;x=
002201 C9                  B   577    			ret
                           B   578    
002202 FE01                B   579    edx2zn0		cp 1
002204 20 05               B   580    			jr nz,edx2zn1
002206 21 26 27 00         B   581    			ld hl,ed_x2_z1					;x=
00220A C9                  B   582    			ret
                           B   583    
00220B FE02                B   584    edx2zn1		cp 2
00220D 20 05               B   585    			jr nz,edx2zn2
00220F 21 40 27 00         B   586    			ld hl,ed_x2_z2					;x=
002213 C9                  B   587    			ret
                           B   588    
002214 FE03                B   589    edx2zn2		cp 3
002216 20 05               B   590    			jr nz,edx2zn3
002218 21 70 27 00         B   591    			ld hl,ed_x2_z3					;x=
00221C C9                  B   592    			ret
                           B   593    
00221D 21 A2 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002221 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002222 FE03                B   599    ed_xn2		cp 3
002224 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
002226 FD46 02             B   602    			ld b,(iy+var_y)
002229 FD7E 03             B   603    			ld a,(iy+var_z)
00222C FE02                B   604    			cp 2
00222E 20 05               B   605    			jr nz,edx3zn2
002230 21 D8 27 00         B   606    			ld hl,ed_x3_z2					;x=
002234 C9                  B   607    			ret
002235 FE03                B   608    edx3zn2		cp 3
002237 20 05               B   609    			jr nz,edx3zn3
002239 21 E6 27 00         B   610    			ld hl,ed_x3_z3					;x=
00223D C9                  B   611    			ret
                           B   612    
00223E                     B   613    edx3zn3
                           B   614    
00223E                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
00223E                     B   619    invalid_op
00223E 21 4F 28 00         B   620    			ld hl,bad_opcode				; x
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002242 0600                B   621    			ld b,0
002244 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
002245 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
002248 B7                  B   629    			or a
002249 C2 E1 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
00224D FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002250 B7                  B   636    			or a
002251 20 14               B   637    			jr nz,x0_z_not_zero
002253 21 CE 23 00         B   638    			ld hl,x0_z0
002257 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
00225A 47                  B   640    			ld b,a
00225B D604                B   641    			sub 4
00225D FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002260 78                  B   643    			ld a,b
002261 FE04                B   644    			cp 4
002263 D8                  B   645    			ret c
002264 0604                B   646    			ld b,4						;if y >
002266 C9                  B   647    			ret
                           B   648    			
002267                     B   649    x0_z_not_zero		
                           B   650    			
002267 FE01                B   651    			cp 1
002269 20 1A               B   652    			jr nz,x0_z_not_one
00226B FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
00226E FE06                B   654    			cp 6
002270 20 0B               B   655    			jr nz,x0z1yn6
002272 CD 81 23 00         B   656    			call test_ixiy_prefix		;if y=6
002276 28 05               B   657    			jr z,x0z1yn6				;altern
002278 21 01 24 00         B   658    			ld hl,x0_z1_y6
00227C C9                  B   659    			ret
                           B   660    
00227D 21 EE 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002281 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002284 C9                  B   663    			ret 
                           B   664    			
002285                     B   665    x0_z_not_one
                           B   666    
002285 FE02                B   667    			cp 2
002287 20 08               B   668    			jr nz,x0_z_not_two
002289 21 09 24 00         B   669    			ld hl,x0_z2
00228D FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002290 C9                  B   671    			ret
                           B   672    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002291                     B   673    x0_z_not_two
                           B   674    
002291 FE03                B   675    			cp 3
002293 20 08               B   676    			jr nz,x0_z_not_three
002295 21 55 24 00         B   677    			ld hl,x0_z3
002299 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
00229C C9                  B   679    			ret
                           B   680    			
00229D                     B   681    x0_z_not_three
                           B   682    
00229D FE04                B   683    			cp 4
00229F 20 05               B   684    			jr nz,x0_z_not_four
0022A1 21 65 24 00         B   685    			ld hl,x0_z4					;no ini
0022A5 C9                  B   686    			ret			
                           B   687    			
0022A6                     B   688    x0_z_not_four
                           B   689    
0022A6 FE05                B   690    			cp 5
0022A8 20 05               B   691    			jr nz,x0_z_not_five
0022AA 21 6D 24 00         B   692    			ld hl,x0_z5					;no ini
0022AE C9                  B   693    			ret				
                           B   694    			
0022AF                     B   695    x0_z_not_five
                           B   696    
0022AF FE06                B   697    			cp 6
0022B1 20 1A               B   698    			jr nz,x0_z_not_six
0022B3 21 75 24 00         B   699    			ld hl,x0_z6					;normal
0022B7 FD7E 02             B   700    			ld a,(iy+var_y)
0022BA FE07                B   701    			cp 7
0022BC C0                  B   702    			ret nz
0022BD FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0022C1 20 05               B   704    			jr nz,altx0z6
0022C3 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0022C7 C8                  B   706    			ret z	
0022C8 21 7E 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0022CC C9                  B   708    			ret
                           B   709    
                           B   710    
0022CD                     B   711    x0_z_not_six
                           B   712    			
0022CD 21 86 24 00         B   713    			ld hl,x0_z7					;x=0, z
0022D1 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0022D4 CD 81 23 00         B   715    			call test_ixiy_prefix
0022D8 C8                  B   716    			ret z
0022D9 21 A0 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022DD FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022E0 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
0022E1 FE01                B   723    x_not_zero	cp 1						; is x 
0022E3 20 32               B   724    			jr nz,x_not_one
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   725    			
0022E5 21 B2 24 00         B   726    			ld hl,x1_table				; x=1
0022E9 CD 81 23 00         B   727    			call test_ixiy_prefix
0022ED 20 11               B   728    			jr nz,pref_x1
0022EF FD7E 02             B   729    			ld a,(iy+var_y)
0022F2 FE06                B   730    			cp 6
0022F4 C0                  B   731    			ret nz
0022F5 FD7E 03             B   732    			ld a,(iy+var_z)
0022F8 FE06                B   733    			cp 6
0022FA C0                  B   734    			ret nz
0022FB 21 D0 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022FF C9                  B   736    			ret
                           B   737    
002300 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
002303 FE06                B   739    			cp 6
002305 20 05               B   740    			jr nz,x1yn6
002307 21 BC 24 00         B   741    			ld hl,x1_y6
00230B C9                  B   742    			ret
                           B   743    			
00230C FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
00230F FE06                B   745    			cp 6
002311 C0                  B   746    			ret nz
002312 21 C6 24 00         B   747    			ld hl,x1_z6
002316 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
002317 FE02                B   752    x_not_one	cp 2						; is x 
002319 20 05               B   753    			jr nz,x_not_two
00231B 21 D4 24 00         B   754    			ld hl,x2_table				; no in
00231F C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002320 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002323 B7                  B   760    			or a
002324 20 05               B   761    			jr nz,x3_z_not_zero
002326 21 D9 24 00         B   762    			ld hl,x3_z0					; no in
00232A C9                  B   763    			ret
                           B   764    						
00232B                     B   765    x3_z_not_zero
                           B   766    
00232B FE01                B   767    			cp 1
00232D 20 11               B   768    			jr nz,x3_z_not_one
00232F 21 E1 24 00         B   769    			ld hl,x3_z1_q0
002333 FD7E 05             B   770    			ld a,(iy+var_q)
002336 B7                  B   771    			or a
002337 C8                  B   772    			ret z						; no in
002338 21 E9 24 00         B   773    			ld hl,x3_z1_q1
00233C FD46 04             B   774    			ld b,(iy+var_p)				; index
00233F C9                  B   775    			ret
                           B   776    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002340                     B   777    x3_z_not_one
                           B   778    
002340 FE02                B   779    			cp 2
002342 20 05               B   780    			jr nz,x3_z_not_two
002344 21 00 25 00         B   781    			ld hl,x3_z2					;no ini
002348 C9                  B   782    			ret
                           B   783    
002349                     B   784    x3_z_not_two
                           B   785    
002349 FE03                B   786    			cp 3
00234B 20 08               B   787    			jr nz,x3_z_not_three
00234D 21 09 25 00         B   788    			ld hl,x3_z3
002351 FD46 02             B   789    			ld b,(iy+var_y)				;index 
002354 C9                  B   790    			ret
                           B   791    
002355                     B   792    x3_z_not_three
                           B   793    
002355 FE04                B   794    			cp 4
002357 20 05               B   795    			jr nz,x3_z_not_four
002359 21 3E 25 00         B   796    			ld hl,x3_z4				;no initial
00235D C9                  B   797    			ret						
                           B   798    
                           B   799    
00235E                     B   800    x3_z_not_four
                           B   801    
00235E FE05                B   802    			cp 5
002360 20 11               B   803    			jr nz,x3_z_not_five
002362 21 49 25 00         B   804    			ld hl,x3_z5_q0
002366 FD7E 05             B   805    			ld a,(iy+var_q)
002369 B7                  B   806    			or a
00236A C8                  B   807    			ret z						;no ind
00236B 21 52 25 00         B   808    			ld hl,x3_z5_q1
00236F FD46 04             B   809    			ld b,(iy+var_p)				;else i
002372 C9                  B   810    			ret
                           B   811    
002373                     B   812    x3_z_not_five
                           B   813    
002373 FE06                B   814    			cp 6
002375 20 05               B   815    			jr nz,x3_z_not_six
002377 21 70 25 00         B   816    			ld hl,x3_z6					;no ind
00237B C9                  B   817    			ret
                           B   818    
00237C                     B   819    x3_z_not_six
                           B   820    
00237C 21 74 25 00         B   821    			ld hl,x3_z7					;x=3, z
002380 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002381                     B   827    test_ixiy_prefix
                           B   828    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002381 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002385 C0                  B   830    			ret nz
002386 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00238A C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
00238B                     B   837    show_hex_byte
                           B   838    
00238B E5                  B   839    			push hl
00238C 21 38 29 00         B   840    			ld hl,output_byte_txt
002390 E5                  B   841    			push hl
002391 CD A5 10 00         B   842    			call hexbyte_to_ascii
002395 E1                  B   843    			pop hl
002396 CD 5A 0F 00         B   844    			call os_print_string
00239A E1                  B   845    			pop hl
00239B C9                  B   846    			ret
                           B   847    			
                           B   848    
00239C                     B   849    show_ascii_char
                           B   850    
00239C E5                  B   851    			push hl
00239D 21 3B 29 00         B   852    			ld hl,output_char_txt
0023A1 77                  B   853    			ld (hl),a
0023A2 CD 5A 0F 00         B   854    			call os_print_string
0023A6 E1                  B   855    			pop hl
0023A7 C9                  B   856    			ret
                           B   857    		
                           B   858    		
0023A8 DD22 35 29 00       B   859    show_ix		ld (d_work_address),ix
0023AD 3A 37 29 00         B   860    			ld a,(d_work_address+2)
0023B1 CD 8B 23 00         B   861    			call show_hex_byte
0023B5 3A 36 29 00         B   862    			ld a,(d_work_address+1)
0023B9 CD 8B 23 00         B   863    			call show_hex_byte
0023BD 3A 35 29 00         B   864    			ld a,(d_work_address)
0023C1 CD 8B 23 00         B   865    			call show_hex_byte
0023C5 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0023C6                     B   896    opcode_vars
                           B   897    
0023C6 00                  B   898    prefix_bits_loc	db 0	
0023C7 00                  B   899    var_x_loc		db 0	
0023C8 00                  B   900    var_y_loc		db 0	
0023C9 00                  B   901    var_z_loc		db 0	
0023CA 00                  B   902    var_p_loc		db 0	
0023CB 00                  B   903    var_q_loc		db 0
0023CC 00                  B   904    var_calc_loc	db 0
0023CD 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0023CE 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0023D1 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0023D9 A7 
0023DA 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023E1 4A522064 80         B   922    			db 'JR ','d',80h			; y3
0023E6 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023EE 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023F4 2C2180 
0023F7 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023FF 04 80 
002401 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
002409 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002411 2CC1 
002413 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
00241B 43A9 
00241D 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
002425 2CC1 
002427 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
00242F 45A9 
002431 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
002439 DF 
00243A 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002442 A9 
002443 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
00244B C1 
00244C 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
002454 A9 
                           B   937    
002455 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
00245C 80 
00245D 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002464 80 
                           B   940    			
002465 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
00246C 80 
                           B   942    
00246D 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002474 80 
                           B   944    			
002475 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
00247B 2C5E80 
00247E 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
002486 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00248A 525243C1            B   949    			db 'RRC','A'+80h		;y=1
00248E 524CC1              B   950    			db 'RL','A'+80h			;y=2
002491 5252C1              B   951    			db 'RR','A'+80h			;y=3
002494 4441C1              B   952    			db 'DA','A'+80h			;y=4
002497 4350CC              B   953    			db 'CP','L'+80h			;y=5
00249A 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
00249D 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
0024A0 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
0024A6 2C2480 
0024A9 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
0024B1 80 
                           B   959    		
                           B   960    
                           B   961    
0024B2 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
0024B8 2C7E 03 80 
0024BC 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0024C2 2C3D 03 80 
0024C6 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024CC 2C7E 03 80 
                           B   965    
0024D0 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
0024D4 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
0024D9 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024E0 80 
                           B   975    
0024E1 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024E8 80 
0024E9 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024EE 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024F1 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024F7 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024FF 80 
                           B   981    
002500 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
002506 2C2180 
                           B   983    
002509 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
00250F 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
002516 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
00251E C1 
00251F 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
002527 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
00252F 2C5F80 
002532 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
00253A 44C9                B   990    			db 'D','I'+80h			;y = 6
00253C 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
00253E 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
002546 2C2180 
                           B   994    
002549 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002551 80 
002552 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
00255A 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002561 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
002568 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002570 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002574 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
00257B 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1007    
                           B  1008    
00257C 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002582 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002589 2C7E 03 80 
00258D 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002594 2C7E 03 80 
002598 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
00259F 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
0025A3 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
0025A9 2C285EA9 
0025AD 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0025B4 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0025BC 2C7E 02 80 
0025C0 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0025C8 5FA9 
                           B  1022    
0025CA 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0025D1 2C49582F 80 
0025D6 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025DD 2C49592F 80 
0025E2 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025EA 02 80 
                           B  1026    
0025EC 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025F4 7D 04 80 
                           B  1028    
0025F7 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025FD 2C285FA9 
002601 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		002609 3C 04 80 
                           B  1031    
00260C 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002611 2C284243 A9 
002616 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
00261C 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
002624 2C7E 02 80 
002628 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002630 B0 
                           B  1037    
002631 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		002639 40 04 80 
00263C 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		002644 40 04 80 
                           B  1040    
002647 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00264F 40 04 80 
002652 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	002658 2C2821A9 
                           B  1043    
00265C 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
00265F 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
002665 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			00266D 49592F80 
002671 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
002677 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
00267F 80 
002680 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
002686 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
00268E 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002694 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00269A 52455449 2680       B  1054    				db 'RETI&',80h				;y=
0026A0 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
0026A8 49582F80 
0026AC BF                  B  1056    				db '?'+80h					;y=
0026AD 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0026B5 80 
0026B6 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0026BD BF                  B  1059    				db '?'+80h					;y=
0026BE 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0026C3 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0026C7 BF                  B  1064    				db '?'+80h					;y=
0026C8 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0026CC 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0026D0 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0026D8 80 
0026D9 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026E0 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026E3 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026E8 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026EE 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026F4 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026FA 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
002700 5252C4              B  1076    				db 'RR','D'+80h				;y=
002703 524CC4              B  1077    				db 'RL','D'+80h				;y=
002706 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
002709 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
00270C BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002710 4C444926 80         B  1083    				db 'LDI&',80h					002715 4C444426 80         B  1084    				db 'LDD&',80h					00271A 4C444952 2680       B  1085    				db 'LDIR&',80h					002720 4C444452 2680       B  1086    				db 'LDDR&',80h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1087    
002726 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
00272A 43504926 80         B  1089    				db 'CPI&',80h					00272F 43504426 80         B  1090    				db 'CPD&',80h					002734 43504952 2680       B  1091    				db 'CPIR&',80h					00273A 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002740 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
002746 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
00274C 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002753 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
00275A 494E4926 80         B  1098    				db 'INI&',80h		; y4
00275F 494E4426 80         B  1099    				db 'IND&',80h		; y5
002764 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
00276A 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002770 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
002776 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
00277C 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002783 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00278A 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002790 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
002796 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
00279C 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
0027A2 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
0027A8 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
0027AE 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0027B5 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0027BC 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0027C3 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0027CA 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0027D1 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0027D8 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027DF 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0027E6 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027ED 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027F4 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027FA 2C25 02 202480 
002800 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		002807 2C2480 
00280A 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002810 2C524553 26203E 02 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002818 2C2480 
00281B 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002821 2C534554 26203E 02 
002829 2C2480 
                           B  1137    
00282C 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002831 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		002838 2C2480 
00283B 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		002842 2C2480 
002845 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		00284C 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
00284F 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002852 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00285A 2480C1 
                           B  1151    
00285D C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002865 2480C1 
                           B  1153    
002868 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
00286F 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002877 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
00287F 50C5D0CD 
                           B  1159    	
002883 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
00288B 44432620 41AC5355 
002893 4226A053 42432041 
00289B 26AC 
00289D 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
0028A5 26A04F52 26A04350 
0028AD 26A0 
                           B  1162    			
0028AF 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0028B7 2680524C 26805252 
0028BF 2680 
0028C1 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0028C9 2680534C 4C268053 
0028D1 524C2680 
                           B  1165    	
0028D5 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0028DD 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0028E5 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028ED 30B0                B  1172    table_rst	db '0','0'+80h
0028EF 30B8                B  1173    			db '0','8'+80h
0028F1 31B0                B  1174    			db '1','0'+80h
0028F3 31B8                B  1175    			db '1','8'+80h
0028F5 32B0                B  1176    			db '2','0'+80h
0028F7 32B8                B  1177    			db '2','8'+80h	
0028F9 33B0                B  1178    			db '3','0'+80h
0028FB 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028FD 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
002903 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
002909 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002910 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
002917 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
00291F A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
002925                     B  1198    adl_prefix_list
                           B  1199    
002925 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
00292D 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
002935 000000              B  1204    d_work_address	dw24 0
                           B  1205    
002938 2D2D00              B  1206    output_byte_txt	db "--",0
00293B 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
00293D 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002940                     B     6    os_cmd_del
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B     7    	
002940 CD D2 16 00         B     8    				call os_check_volume_format	
002944 C0                  B     9    				ret nz
                           B    10    			
002945 CD 4D 29 00         B    11    				call filename_or_bust
                           B    12    				
002949 C3 3A 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
00294D                     B    18    filename_or_bust
                           B    19    			
00294D 7E                  B    20    				ld a,(hl)					;is
00294E B7                  B    21    				or a
00294F C0                  B    22    				ret nz
002950 E1                  B    23    				pop hl						;ot
002951 C3 3D 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
002955                     B     5    os_cmd_dir
                           B     6    
002955 CD D2 16 00         B     7    				call os_check_volume_format	
002959 C0                  B     8    				ret nz
                           B     9    				
00295A CD 34 2A 00         B    10    				call div_line
00295E CD 4C 53 00         B    11    				call fs_get_current_dir_name	002962 D8                  B    12    				ret c
002963 C0                  B    13    				ret nz
002964 CD 5A 0F 00         B    14    				call os_print_string
002968 CD AA 1A 00         B    15    				call fs_get_dir_cluster			00296C 7A                  B    16    				ld a,d
00296D B3                  B    17    				or e
00296E 20 08               B    18    				jr nz,dcmdnr
002970 CD 37 50 00         B    19    				call fs_get_volume_label
002974 CD 5A 0F 00         B    20    				call os_print_string
002978 CD 02 14 00         B    21    dcmdnr			call os_new_line
                           B    22    				
00297C CD 34 2A 00         B    23    nrootdir		call div_line
002980 CD 3C 4F 00         B    24    				call fs_goto_first_dir_entry
002984 D8                  B    25    				ret c
002985 20 6F               B    26    				jr nz,os_dlr
002987 AF                  B    27    				xor a
002988 32 5B 61 00         B    28    				ld (os_linecount),a
                           B    29    				
00298C CD 53 4F 00         B    30    os_dfllp		call fs_get_dir_entry			002990 D8                  B    31    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002991 20 63               B    32    				jr nz,os_dlr					002993 C5                  B    33    				push bc
002994 CD 5A 0F 00         B    34    				call os_print_string			002998 CD 2D 14 00         B    35    				call os_get_cursor_position		00299C 060E                B    36    				ld b,14
00299E CD 0D 14 00         B    37    				call os_set_cursor_position	
0029A2 C1                  B    38    				pop bc
0029A3 CB40                B    39    				bit 0,b							0029A5 28 06               B    40    				jr z,os_deif		
0029A7 21 41 2A 00         B    41    				ld hl,dir_txt					0029AB 18 32               B    42    				jr os_dpl
                           B    43    				
0029AD 21 53 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			0029B1 CD 5A 0F 00         B    45    				call os_print_string
0029B5 ED53 A6 68 00       B    46    				ld (scratch_pad),de
0029BA 79                  B    47    				ld a,c
0029BB 32 A9 68 00         B    48    				ld (scratch_pad+3),a
0029BF 21 C6 61 00         B    49    				ld hl,output_line
0029C3 E5                  B    50    				push hl
0029C4 ED5B A8 68 00       B    51    				ld de,(scratch_pad+2)
0029C9 CD CA 10 00         B    52    				call hexword_to_ascii
0029CD ED5B A6 68 00       B    53    				ld de,(scratch_pad)
0029D2 CD CA 10 00         B    54    				call hexword_to_ascii
0029D6 3600                B    55    				ld (hl),0
0029D8 E1                  B    56    				pop hl
0029D9 0607                B    57    				ld b,7							0029DB CD 82 10 00         B    58    				call os_skip_leading_ascii_zero
0029DF CD 5A 0F 00         B    59    os_dpl			call os_print_string
0029E3 CD 02 14 00         B    60    				call os_new_line
                           B    61    				
0029E7 CD E0 4F 00         B    62    				call fs_goto_next_dir_entry
0029EB 20 09               B    63    				jr nz,os_dlr					0029ED CD 00 12 00         B    64    				call os_count_lines
0029F1 3E79                B    65    				ld a,'y'
0029F3 B8                  B    66    				cp b
0029F4 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029F6 CD 34 2A 00         B    69    os_dlr			call div_line					0029FA CD 6F 49 00         B    70    				call fs_calc_free_space
0029FE D8                  B    71    				ret c	
0029FF CD 0D 2A 00         B    72    				call show_hlde_decimal
002A03 21 47 2A 00         B    73    				ld hl,kb_spare_txt
002A07 CD 5A 0F 00         B    74    				call os_print_string
002A0B AF                  B    75    				xor a
002A0C C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
002A0D                     B    80    show_hlde_decimal
                           B    81    
002A0D CD 95 12 00         B    82    				call os_hex_to_decimal			002A11 11070000            B    83    				ld de,7
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A15 19                  B    84    				add hl,de						002A16 43                  B    85    				ld b,e
002A17 11 C6 61 00         B    86    				ld de,output_line
002A1B D5                  B    87    				push de
002A1C 7E                  B    88    dec2strlp		ld a,(hl)						002A1D B7                  B    89    				or a
002A1E 20 03               B    90    				jr nz,foundlnz
002A20 2B                  B    91    				dec hl
002A21 10 F9               B    92    				djnz dec2strlp
002A23 04                  B    93    foundlnz		inc b
002A24 7E                  B    94    ndecchar		ld a,(hl)						002A25 C630                B    95    				add a,030h
002A27 12                  B    96    				ld (de),a
002A28 13                  B    97    				inc de
002A29 2B                  B    98    				dec hl
002A2A 10 F8               B    99    				djnz ndecchar
002A2C AF                  B   100    				xor a
002A2D 12                  B   101    				ld (de),a
002A2E E1                  B   102    				pop hl							002A2F CD 5A 0F 00         B   103    				call os_print_string
002A33 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
002A34 0E2D                B   108    div_line		ld c,'-'
002A36 0613                B   109    				ld b,19
002A38 CD 92 1A 00         B   110    				call os_print_multiple_chars
002A3C CD 02 14 00         B   111    				call os_new_line
002A40 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
002A41 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
002A47 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
002A4F 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A51                     B     5    os_cmd_f			
                           B     6    
002A51 CD A2 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A55 CD CB 1C 00         B     9    				call hexword_or_bust			002A59 CA 5D 16 00         B    10    				jp z,os_no_args_error			002A5D 7B                  B    11    				ld a,e
002A5E 32 72 61 00         B    12    				ld (fillbyte),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
                           B    13    					
002A62 CD 90 1C 00         B    14    				call test_mem_range
002A66 DA 59 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A6A 3A 72 61 00         B    17    				ld a,(fillbyte)
002A6E 77                  B    18    f_floop			ld (hl),a
002A6F EDA1                B    19    				cpi								002A71 EA 6E 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A75 3E20                B    22    				ld a,020h						002A77 B7                  B    23    				or a
002A78 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A79                     B     9    os_cmd_format
                           B    10    
002A79 7E                  B    11    				ld a,(hl)						002A7A B7                  B    12    				or a
002A7B 20 04               B    13    				jr nz,fgotargs					002A7D 3E1F                B    14    				ld a,01fh						002A7F B7                  B    15    				or a
002A80 C9                  B    16    				ret
                           B    17    			
002A81 E5                  B    18    fgotargs		push hl
002A82 3E01                B    19    				ld a,1							002A84 CD 77 18 00         B    20    				call os_mount_volumes			002A88 E1                  B    21    				pop hl
                           B    22    				
002A89 11 AE 54 00         B    23    				ld de,fs_sought_filename
002A8D CD 95 53 00         B    24    				call fs_clear_filename			002A91 E5                  B    25    				push hl							002A92 CD E3 0F 00         B    26    				call os_next_arg
002A96 20 04               B    27    				jr nz,fgotlab
002A98 21 C9 2B 00         B    28    				ld hl,default_label
002A9C 060B                B    29    fgotlab			ld b,11
002A9E CD 48 12 00         B    30    				call os_copy_ascii_run
002AA2 E1                  B    31    				pop hl
                           B    32    				
002AA3 3A 7D 5F 00         B    33    				ld a,(device_count)				002AA7 B7                  B    34    				or a
002AA8 28 25               B    35    				jr z,fno_dev
002AAA 47                  B    36    				ld b,a
002AAB 0E00                B    37    				ld c,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AAD DD21 27 60 00       B    38    				ld ix,host_device_hardware_info
002AB2 DD7E00              B    39    fdev_lp			ld a,(ix)						002AB5 CD 7C 1A 00         B    40    				call locate_driver_base			002AB9 D5                  B    41    				push de
002ABA FDE1                B    42    				pop iy
002ABC ED130C              B    43    				lea de,iy+0ch					002ABF C5                  B    44    				push bc
002AC0 0607                B    45    				ld b,7
002AC2 CD 29 12 00         B    46    				call os_compare_strings
002AC6 C1                  B    47    				pop bc
002AC7 28 0A               B    48    				jr z,format_dev
002AC9 ED3220              B    49    				lea ix,ix+20h					002ACC 0C                  B    50    				inc c
002ACD 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002ACF 3ED0                B    53    fno_dev			ld a,0d0h						002AD1 B7                  B    54    				or a
002AD2 C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002AD3 C5                  B    62    format_dev		push bc
002AD4 CD 02 14 00         B    63    				call os_new_line
002AD8 21 9A 2B 00         B    64    				ld hl,form_dev_warn1
002ADC CD 39 14 00         B    65    				call os_show_packed_text
002AE0 C1                  B    66    				pop bc
                           B    67    				
002AE1 79                  B    68    				ld a,c							002AE2 C630                B    69    				add a,030h
002AE4 32 89 5F 00         B    70    				ld (dev_txt+3),a
002AE8 21 86 5F 00         B    71    				ld hl,dev_txt	
002AEC CD 5A 0F 00         B    72    				call os_print_string			                           B    73    				
002AF0 79                  B    74    				ld a,c
002AF1 CD F0 1A 00         B    75    				call dev_to_driver_lookup		002AF5 E5                  B    76    				push hl
002AF6 32 7C 5F 00         B    77    				ld (current_driver),a
002AFA CD 63 1A 00         B    78    				call show_dev_driver_name		002AFE DDE1                B    79    				pop ix
002B00 DD1701              B    80    				ld de,(ix+1)
002B03 FD21 6E 61 00       B    81    				ld iy,xrr_temp
002B08 FD1F00              B    82    				ld (iy),de						002B0B FDCB023E            B    83    				srl (iy+2)
002B0F FDCB011E            B    84    				rr (iy+1)
002B13 FDCB001E            B    85    				rr (iy+0)						002B17 FD1700              B    86    				ld de,(iy)						002B1A CD 0D 2A 00         B    87    				call show_hlde_decimal			002B1E 21 D4 2B 00         B    88    				ld hl,kb_txt
002B22 CD 5A 0F 00         B    89    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B26 ED2205              B    90    				lea hl,ix+5		
002B29 CD 5A 0F 00         B    91    				call os_print_string			002B2D 3E29                B    92    				ld a,')'
002B2F CD 9C 0F 00         B    93    				call os_print_char
                           B    94    				
002B33 CD 02 14 00         B    95    				call os_new_line
002B37 CD 02 14 00         B    96    				call os_new_line
002B3B 21 A1 2B 00         B    97    				ld hl,form_dev_warn2
002B3F CD 91 2B 00         B    98    				call show_packed_text_and_cr
002B43 CD 79 2B 00         B    99    				call confirm_yes
002B47 20 28               B   100    				jr nz,ab_form
                           B   101    				
002B49 21 AB 2B 00         B   102    				ld hl,formatting_txt			002B4D CD 5A 0F 00         B   103    				call os_print_string
                           B   104    				
002B51 CD ED 46 00         B   105    				call fs_format_device_command
002B55 38 10               B   106    				jr c,form_err
002B57 B7                  B   107    				or a
002B58 20 0D               B   108    				jr nz,form_err
                           B   109    			
002B5A 21 BB 2B 00         B   110    				ld hl,ok_txt					002B5E CD 5A 0F 00         B   111    				call os_print_string
                           B   112    				
002B62 CD 6E 32 00         B   113    f_end			call os_cmd_remount				002B66 C9                  B   114    				ret
                           B   115    			
002B67                     B   116    form_err
002B67 21 C0 2B 00         B   117    				ld hl,ferr_txt
002B6B CD 5A 0F 00         B   118    				call os_print_string
002B6F 18 F1               B   119    				jr f_end
                           B   120    				
                           B   121    				
                           B   122    ;----------------------------------------------
                           B   123    				
                           B   124    				
002B71 CD 02 14 00         B   125    ab_form			call os_new_line
002B75 3E24                B   126    				ld a,024h						002B77 B7                  B   127    				or a
002B78 C9                  B   128    				ret
                           B   129    				
002B79                     B   130    confirm_yes
                           B   131    			
002B79 21 A6 68 00         B   132    				ld hl,scratch_pad
002B7D 1E03                B   133    				ld e,3
002B7F E5                  B   134    				push hl
002B80 CD 2E 11 00         B   135    				call os_user_input
002B84 E1                  B   136    				pop hl
002B85 C0                  B   137    				ret nz
002B86 0603                B   138    				ld b,3
002B88 11 3F 5A 00         B   139    				ld de,yes_txt+1
002B8C CD 29 12 00         B   140    				call os_compare_strings
002B90 C9                  B   141    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   142    			
                           B   143    			
002B91                     B   144    show_packed_text_and_cr
                           B   145    			
002B91 CD 39 14 00         B   146    				call os_show_packed_text
002B95 CD 02 14 00         B   147    				call os_new_line
002B99 C9                  B   148    				ret
                           B   149    			
                           B   150    ;----------------------------------------------
                           B   151    
002B9A                     B   152    form_dev_warn1
                           B   153    
002B9A 27283640 979700     B   154    				db 027h,028h,036h,040h,097h,097
                           B   155    
002BA1                     B   156    form_dev_warn2
                           B   157    
002BA1 52467E98 9EA2A3A5   B   158    				db 052h,046h,07eh,098h,09eh,0a2
002BA9 9700 
                           B   159    
002BAB                     B   160    formatting_txt
                           B   161    
002BAB 0B0B466F 726D6174   B   162    				db 11,11,'Formatting.. ',0
002BB3 74696E67 2E2E2000 
                           B   163    
002BBB 4F4B0B0B 00         B   164    ok_txt			db 'OK',11,11,0
                           B   165    
002BC0 4552524F 52210B0B   B   166    ferr_txt		db 'ERROR!',11,11,0
002BC8 00 
                           B   167    
002BC9                     B   168    default_label	
                           B   169    
002BC9 50524F53 455F4449   B   170    				db 'PROSE_DISK',0
002BD1 534B00 
                           B   171    
002BD4 4B422028 00         B   172    kb_txt			db 'KB (',0
                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
       000068AA            B   176    fs_drive_sel_cache		equ scratch_pad+4		                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BD9 CD A2 1C 00         B     5    os_cmd_h		call get_start_and_end			002BDD 22 6B 61 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002BE1 CD 90 1C 00         B     8    				call test_mem_range
002BE5 DA 59 16 00         B     9    				jp c,os_range_error				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B    10    			
002BE9 AF                  B    11    				xor a
002BEA 32 86 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BEE 2A 6B 61 00         B    14    				ld hl,(find_hexstringascii)
002BF2 0600                B    15    				ld b,0
002BF4 7E                  B    16    h_lfascii		ld a,(hl)						002BF5 B7                  B    17    				or a
002BF6 28 28               B    18    				jr z,h_no_text					002BF8 FE22                B    19    				cp 022h
002BFA 28 03               B    20    				jr z,h_found_quote
002BFC 23                  B    21    				inc hl
002BFD 18 F5               B    22    				jr h_lfascii
002BFF 23                  B    23    h_found_quote	inc hl
002C00 22 6B 61 00         B    24    				ld (find_hexstringascii),hl
002C04 7E                  B    25    h_fasc_len		ld a,(hl)
002C05 B7                  B    26    				or a
002C06 CA 5D 16 00         B    27    				jp z,os_no_args_error			002C0A FE22                B    28    				cp 022h
002C0C 28 04               B    29    				jr z,h_startas
002C0E 23                  B    30    				inc hl
002C0F 04                  B    31    				inc b
002C10 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C12 78                  B    34    h_startas		ld a,b
002C13 B7                  B    35    				or a
002C14 CA 5D 16 00         B    36    				jp z,os_no_args_error			002C18 3E01                B    37    				ld a,1
002C1A 32 86 2C 00         B    38    				ld (h_ascii_mode),a
002C1E 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C20 2A 6B 61 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C24 0600                B    43    				ld b,0							002C26 CD CB 1C 00         B    44    cntfbyts		call hexword_or_bust			002C2A 28 04               B    45    				jr z,gthexstr
002C2C 04                  B    46    				inc b
002C2D 23                  B    47    				inc hl
002C2E 18 F6               B    48    				jr cntfbyts
002C30 78                  B    49    gthexstr		ld a,b
002C31 B7                  B    50    				or a
002C32 CA 5D 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002C36                     B    54    h_start_search
                           B    55    	
002C36 DD2A 5F 61 00       B    56    				ld ix,(cmdop_start_address)		002C3B DDE5                B    57    fndloop1		push ix
002C3D FDE1                B    58    				pop iy
002C3F 48                  B    59    				ld c,b							002C40 2A 6B 61 00         B    60    				ld hl,(find_hexstringascii)
002C44 3A 86 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002C48 B7                  B    62    				or a
002C49 28 08               B    63    				jr z,h_hex
002C4B FD7E00              B    64    				ld a,(iy)
002C4E BE                  B    65    				cp (hl)
002C4F 20 23               B    66    				jr nz,nofmatch
002C51 18 0A               B    67    				jr h_matched
002C53 CD D9 10 00         B    68    h_hex			call ascii_to_hexword			002C57 FD7E00              B    69    				ld a,(iy)
002C5A BB                  B    70    				cp e
002C5B 20 17               B    71    				jr nz,nofmatch
002C5D FD23                B    72    h_matched		inc iy
002C5F 23                  B    73    				inc hl
002C60 0D                  B    74    				dec c
002C61 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C63 DDE5                B    77    				push ix							002C65 D1                  B    78    				pop de							002C66 DDE5                B    79    				push ix
002C68 C5                  B    80    				push bc
002C69 CD 3A 13 00         B    81    				call os_show_hex_address
002C6D CD 02 14 00         B    82    				call os_new_line
002C71 C1                  B    83    				pop bc
002C72 DDE1                B    84    				pop ix
                           B    85    				
002C74 DDE5                B    86    nofmatch		push ix
002C76 DD23                B    87    				inc ix
002C78 D1                  B    88    				pop de
002C79 2A 62 61 00         B    89    				ld hl,(cmdop_end_address)
002C7D AF                  B    90    				xor a
002C7E ED52                B    91    				sbc hl,de
002C80 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C82 3E20                B    94    				ld a,020h						002C84 B7                  B    95    				or a
002C85 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C86 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C87                     B     5    os_cmd_help		
002C87 AF                  B     6    				xor a
002C88 32 5B 61 00         B     7    				ld (os_linecount),a
                           B     8    				
002C8C 21 7F 5B 00         B     9    				ld hl,packed_help1
002C90 CD 39 14 00         B    10    show_page		call os_show_packed_text
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002C94 E5                  B    11    				push hl
002C95 CD 02 14 00         B    12    				call os_new_line
002C99 E1                  B    13    				pop hl
002C9A 23                  B    14    				inc hl						;sk
002C9B 7E                  B    15    				ld a,(hl)
002C9C FEFF                B    16    				cp 0ffh						;la
002C9E 28 09               B    17    				jr z,last_help_page
                           B    18    				
002CA0 CD 00 12 00         B    19    				call os_count_lines
002CA4 78                  B    20    				ld a,b
002CA5 FE79                B    21    				cp 'y'
002CA7 28 E7               B    22    				jr z,show_page
                           B    23    
002CA9                     B    24    last_help_page
002CA9 AF                  B    25    				xor a
002CAA C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002CAB                     B     5    os_cmd_gtr
                           B     6    
002CAB CD CB 1C 00         B     7    				call hexword_or_bust			002CAF CA 45 16 00         B     8    				jp z,os_no_start_addr
002CB3 23                  B     9    fndquot1		inc hl
002CB4 7E                  B    10    				ld a,(hl)
002CB5 B7                  B    11    				or a
002CB6 CA 5D 16 00         B    12    				jp z,os_no_args_error
002CBA FE22                B    13    				cp 022h							002CBC 20 F5               B    14    				jr nz,fndquot1
002CBE 23                  B    15    				inc hl
002CBF E5                  B    16    				push hl
002CC0 7E                  B    17    fndquot2		ld a,(hl)
002CC1 23                  B    18    				inc hl
002CC2 B7                  B    19    				or a
002CC3 28 15               B    20    				jr z,noquot2
002CC5 FE22                B    21    				cp 022h							002CC7 20 F7               B    22    				jr nz,fndquot2
002CC9 E1                  B    23    				pop hl
                           B    24    					
002CCA 7E                  B    25    wmbalp			ld a,(hl)						002CCB FE22                B    26    				cp 022h
002CCD 28 09               B    27    				jr z,os_gtrdn					002CCF FE7D                B    28    				cp 07dh
002CD1 28 01               B    29    				jr z,skpnasc
002CD3 12                  B    30    				ld (de),a
002CD4 13                  B    31    skpnasc			inc de
002CD5 23                  B    32    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002CD6 18 F2               B    33    				jr wmbalp
002CD8 AF                  B    34    os_gtrdn		xor a
002CD9 C9                  B    35    				ret	
                           B    36    				
002CDA E1                  B    37    noquot2			pop hl							002CDB 3E12                B    38    				ld a,012h
002CDD B7                  B    39    				or a
002CDE C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002CDF                     B     5    os_cmd_lb
                           B     6    	
002CDF CD D2 16 00         B     7    				call os_check_volume_format	
002CE3 C0                  B     8    				ret nz
                           B     9    				
002CE4 CD 4D 29 00         B    10    				call filename_or_bust			002CE8 CD 65 16 00         B    11    				call os_find_file				002CEC C0                  B    12    				ret nz
002CED ED53 A9 68 00       B    13    				ld (filesize_cache),de			002CF2 2A AE 60 00         B    14    				ld hl,(default_load_addr)
002CF6 22 A6 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CFA 2A 18 62 00         B    17    				ld hl,(os_args_loc)
002CFE CD E3 0F 00         B    18    				call os_next_arg
                           B    19    
002D02 CD CB 1C 00         B    20    				call hexword_or_bust			002D06 28 05               B    21    				jr z,os_lbnao					002D08 ED53 A6 68 00       B    22    				ld (data_load_addr),de
                           B    23    
002D0D ED5B A6 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002D12 2A BB 60 00         B    25    				ld hl,(sysram_os_highest)		002D16 2B                  B    26    				dec hl
002D17 AF                  B    27    				xor a
002D18 ED52                B    28    				sbc hl,de
002D1A 38 04               B    29    				jr c,os_lbprok
002D1C 3E26                B    30    				ld a,026h						002D1E B7                  B    31    				or a
002D1F C9                  B    32    				ret
                           B    33    				
002D20 2A A6 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002D24 CD 94 16 00         B    35    				call os_read_bytes_from_file
002D28 C0                  B    36    				ret nz
                           B    37    			
002D29                     B    38    report_bytes_loaded
                           B    39    
002D29 21 53 56 00         B    40    				ld hl,os_hex_prefix_txt			002D2D CD 5A 0F 00         B    41    				call os_print_string			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    42    				
002D31 11 AB 68 00         B    43    				ld de,filesize_cache+2			002D35 21 C6 61 00         B    44    				ld hl,output_line
002D39 0603                B    45    				ld b,3
002D3B CD 97 10 00         B    46    				call n_hexbytes_to_ascii
002D3F 3600                B    47    				ld (hl),0	
002D41 0605                B    48    				ld b,5							002D43 CD 70 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002D47 21 1D 5D 00         B    51    				ld hl,bytes_loaded_msg			002D4B CD 39 14 00         B    52    				call os_show_packed_text
                           B    53    				
002D4F 21 B2 56 00         B    54    				ld hl,to_txt					002D53 CD 5A 0F 00         B    55    				call os_print_string
                           B    56    
002D57 21 53 56 00         B    57    				ld hl,os_hex_prefix_txt			002D5B CD 5A 0F 00         B    58    				call os_print_string	
                           B    59    
002D5F ED5B A6 68 00       B    60    				ld de,(data_load_addr)			002D64 CD 3A 13 00         B    61    				call os_show_hex_address
                           B    62    
002D68 CD 02 14 00         B    63    				call os_new_line
002D6C AF                  B    64    				xor a
002D6D C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       000068A6            B    69    data_load_addr	equ scratch_pad
       000068A9            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D6E CD CB 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D72 28 05               B     8    				jr z,m_no_hex					002D74 ED53 5C 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D79 0610                B    11    m_no_hex		ld b,16							002D7B C5                  B    12    smbllp			push bc							                           B    13    				
002D7C 21 B5 2D 00         B    14    				ld hl,colon_cmd_prefix			002D80 CD 5A 0F 00         B    15    				call os_print_string
002D84 ED5B 5C 61 00       B    16    				ld de,(mem_mon_addr)
002D89 CD 3A 13 00         B    17    				call os_show_hex_address
                           B    18    
002D8D 21 C6 61 00         B    19    				ld hl,output_line
002D91 0610                B    20    				ld b,bytes_per_line				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D93 3620                B    21    mmbllp			ld (hl),' '
002D95 23                  B    22    				inc hl
002D96 1A                  B    23    				ld a,(de)	
002D97 CD A5 10 00         B    24    				call hexbyte_to_ascii
002D9B 13                  B    25    				inc de
002D9C 10 F5               B    26    				djnz mmbllp
                           B    27    
002D9E ED53 5C 61 00       B    28    				ld (mem_mon_addr),de
002DA3 360B                B    29    				ld (hl),11
002DA5 23                  B    30    				inc hl
002DA6 3600                B    31    				ld (hl),0
002DA8 21 C6 61 00         B    32    				ld hl,output_line
002DAC CD 5A 0F 00         B    33    				call os_print_string
002DB0 C1                  B    34    				pop bc
002DB1 10 C8               B    35    				djnz smbllp
                           B    36    				
002DB3 AF                  B    37    				xor a
002DB4 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DB5 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DB8                     B     5    os_cmd_md
                           B     6    	
002DB8 CD D2 16 00         B     7    				call os_check_volume_format	
002DBC C0                  B     8    				ret nz
                           B     9    			
002DBD CD 4D 29 00         B    10    				call filename_or_bust
                           B    11    				
002DC1 C3 12 17 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002DC5                     B     5    os_cmd_r	
002DC5 DD21 C7 60 00       B     6    				ld ix,store_a1					002DCA 21 6F 2E 00         B     7    				ld hl,register_txt
002DCE CD 5A 0F 00         B     8    rcmdloop2		call os_print_string
002DD2 7E                  B     9    rcmdloop		ld a,(hl)
002DD3 FE01                B    10    				cp 1
002DD5 28 0B               B    11    				jr z,showbyte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DD7 FE02                B    12    				cp 2
002DD9 28 15               B    13    				jr z,showword16
002DDB FE03                B    14    				cp 3
002DDD 28 2E               B    15    				jr z,showaddr
002DDF 23                  B    16    				inc hl
002DE0 18 F0               B    17    				jr rcmdloop
                           B    18    				
002DE2 DD7E00              B    19    showbyte		ld a,(ix)
002DE5 DD23                B    20    				inc ix
002DE7 DDE5                B    21    				push ix
002DE9 E5                  B    22    				push hl
002DEA CD 4E 13 00         B    23    				call os_show_hex_byte
002DEE 18 2A               B    24    				jr showreg
                           B    25    
002DF0 DD7E01              B    26    showword16		ld a,(ix+1)
002DF3 DDE5                B    27    				push ix
002DF5 E5                  B    28    				push hl
002DF6 CD 4E 13 00         B    29    				call os_show_hex_byte
002DFA E1                  B    30    				pop hl
002DFB DDE1                B    31    				pop ix
002DFD DD7E00              B    32    				ld a,(ix)
002E00 DD23                B    33    				inc ix
002E02 DD23                B    34    				inc ix
002E04 DDE5                B    35    				push ix
002E06 E5                  B    36    				push hl
002E07 CD 4E 13 00         B    37    				call os_show_hex_byte
002E0B 18 0D               B    38    				jr showreg
                           B    39    
002E0D DD1700              B    40    showaddr		ld de,(ix)
002E10 ED3203              B    41    				lea ix,ix+3
002E13 DDE5                B    42    				push ix
002E15 E5                  B    43    				push hl
002E16 CD 3A 13 00         B    44    				call os_show_hex_address
002E1A E1                  B    45    showreg			pop hl
002E1B DDE1                B    46    				pop ix
002E1D 23                  B    47    				inc hl
002E1E 7E                  B    48    				ld a,(hl)
002E1F B7                  B    49    				or a
002E20 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E22 CD 02 14 00         B    52    				call os_new_line				002E26 21 D3 2E 00         B    53    				ld hl,flag_txt
002E2A CD 22 13 00         B    54    				call os_copy_to_output_line
002E2E 21 CA 61 00         B    55    				ld hl,output_line+4
002E32 01050000            B    56    				ld bc,5
002E36 3A EA 60 00         B    57    				ld a,(store_f)
002E3A CB77                B    58    				bit 6,a							002E3C 28 02               B    59    				jr z,zfzero
002E3E 3631                B    60    				ld (hl),'1'
002E40 09                  B    61    zfzero			add hl,bc
002E41 CB47                B    62    				bit 0,a							002E43 28 02               B    63    				jr z,cfzero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E45 3631                B    64    				ld (hl),'1'
002E47 09                  B    65    cfzero			add hl,bc
002E48 CB7F                B    66    				bit 7,a							002E4A 28 02               B    67    				jr z,sfzero
002E4C 364D                B    68    				ld (hl),'M'
002E4E 09                  B    69    sfzero			add hl,bc
002E4F CB57                B    70    				bit 2,a							002E51 28 02               B    71    				jr z,pfzero
002E53 364F                B    72    				ld (hl),'O'
002E55 09                  B    73    pfzero			add hl,bc
002E56 23                  B    74    				inc hl
002E57 CB67                B    75    				bit 4,a							002E59 28 02               B    76    				jr z,iffzero
002E5B 3631                B    77    				ld (hl),'1'
002E5D                     B    78    iffzero			
002E5D 01060000            B    79    				ld bc,6
002E61 09                  B    80    				add hl,bc
002E62 3A EB 60 00         B    81    				ld a,(store_adl)
002E66 C630                B    82    				add a,30h
002E68 77                  B    83    				ld (hl),a
002E69 CD 65 13 00         B    84    				call os_print_output_line
002E6D AF                  B    85    				xor a
002E6E C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E6F 20413D00 01         B    91    register_txt		db ' A=',0,1
002E74 20204243 3D0003     B    92    					db '  BC=',0,3
002E7B 20204445 3D0003     B    93    					db '  DE=',0,3
002E82 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E89 0B                  B    96    					db 11
                           B    97    
002E8A 27413D00 01         B    98    					db 027h,'A=',0,1
002E8F 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E96 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E9D 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002EA4 0B                  B   103    					db 11
                           B   104    
002EA5 2049583D 0003       B   105    					db ' IX=',0,3
002EAB 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002EB1 0B                  B   108    					db 11
                           B   109    					
002EB2 2050433D 0003       B   110    					db ' PC=',0,3
002EB8 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EBF 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002EC6 0B                  B   114    					db 11
                           B   115    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002EC7 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002ECF 010000 
                           B   117    					
002ED2 0B                  B   118    					db 11
                           B   119    
002ED3 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002EDB 3D302053 463D5020 
002EE3 50563D45 20494646 
002EEB 3D302041 444C3D30 
002EF3 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EF6                     B     5    os_cmd_rd
                           B     6    
002EF6 CD D2 16 00         B     7    				call os_check_volume_format	
002EFA C0                  B     8    				ret nz
                           B     9    				
002EFB CD 4D 29 00         B    10    				call filename_or_bust
                           B    11    			
002EFF C3 7C 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002F03                     B     5    os_cmd_rn
                           B     6    	
002F03 CD D2 16 00         B     7    				call os_check_volume_format	
002F07 C0                  B     8    				ret nz
                           B     9    			
002F08 CD 4D 29 00         B    10    				call filename_or_bust
002F0C E5                  B    11    				push hl
002F0D D1                  B    12    				pop de
002F0E CD E3 0F 00         B    13    				call os_next_arg
002F12 7E                  B    14    				ld a,(hl)						002F13 B7                  B    15    				or a
002F14 20 04               B    16    				jr nz,rn_grfn
002F16 3E1F                B    17    				ld a,01fh						002F18 B7                  B    18    				or a
002F19 C9                  B    19    				ret
                           B    20    
002F1A EB                  B    21    rn_grfn			ex de,hl
002F1B C3 66 17 00         B    22    				jp os_rename_file				                           B    23    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F1F                     B     5    os_cmd_sb
                           B     6    	
002F1F CD D2 16 00         B     7    				call os_check_volume_format		002F23 C0                  B     8    				ret nz
                           B     9    					
002F24 CD 4D 29 00         B    10    				call filename_or_bust			002F28 22 AC 68 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002F2C 2A 18 62 00         B    13    				ld hl,(os_args_loc)
002F30 CD E3 0F 00         B    14    				call os_next_arg
002F34 CD CB 1C 00         B    15    				call hexword_or_bust			002F38 CA 45 16 00         B    16    				jp z,os_no_start_addr			002F3C ED53 A6 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002F41 CD CB 1C 00         B    19    				call hexword_or_bust			002F45 CA 49 16 00         B    20    				jp z,os_no_filesize
002F49 ED53 A9 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
002F4E 2A AC 68 00         B    23    				ld hl,(sb_save_name_addr)		002F52 CD A4 16 00         B    24    				call os_create_file
002F56 28 18               B    25    				jr z,os_sfapp
002F58 FEC9                B    26    				cp 0c9h							002F5A C0                  B    27    				ret nz			
002F5B 21 46 5B 00         B    28    				ld hl,save_append_msg			002F5F CD 39 14 00         B    29    				call os_show_packed_text
002F63 CD 0A 44 00         B    30    				call os_wait_key_press
002F67 3E79                B    31    				ld a,'y'
002F69 B8                  B    32    				cp b
002F6A 28 04               B    33    				jr z,os_sfapp
002F6C 3E2C                B    34    				ld a,2ch						002F6E B7                  B    35    				or a
002F6F C9                  B    36    				ret
                           B    37    			
002F70 2A AC 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F74 ED5B A6 68 00       B    39    				ld de,(sb_save_addr)			002F79 ED4B A9 68 00       B    40    				ld bc,(sb_save_length)			002F7E CD BA 16 00         B    41    				call os_write_bytes_to_file
002F82 C0                  B    42    				ret nz	
                           B    43    				
002F83 3E20                B    44    				ld a,020h						002F85 B7                  B    45    				or a
002F86 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
       000068A6            B    51    sb_save_addr		equ scratch_pad
       000068A9            B    52    sb_save_length		equ scratch_pad+3
       000068AC            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       000069A6            B     6    buffer_addr				 equ os_max_addr		       000068A6            B     7    rx_buffer_ptr			 equ scratch_pad
       000068A9            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F87 7E                  B    11    os_cmd_rx		ld a,(hl)						002F88 B7                  B    12    				or a
002F89 CA 3D 16 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F8D 3E3E                B    15    				ld a,'>'						002F8F BE                  B    16    				cp (hl)
002F90 C2 53 30 00         B    17    				jp nz,rx_nrs
002F94 23                  B    18    				inc hl
002F95 3E20                B    19    				ld a,' '
002F97 BE                  B    20    				cp (hl)
002F98 2B                  B    21    				dec hl
002F99 C2 53 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F9D CD D2 16 00         B    24    				call os_check_volume_format		002FA1 C0                  B    25    				ret nz		
                           B    26    				
002FA2 112A0000            B    27    				ld de,02ah						002FA6 ED53 38 5F 00       B    28    				ld (serial_filename),de			002FAB CD 57 31 00         B    29    				call rx_get_header
002FAF C0                  B    30    				ret nz
002FB0 CD DD 45 00         B    31    				call s_holdack					                           B    32    				
002FB4 21 4C 5F 00         B    33    				ld hl,serial_fileheader			002FB8 CD A4 16 00         B    34    				call os_create_file
002FBC C2 32 30 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002FC0 21 66 5B 00         B    37    				ld hl,ser_recsave_msg
002FC4 CD 39 14 00         B    38    				call os_show_packed_text
                           B    39    				
002FC8 2A 5C 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002FCC 22 A9 68 00         B    41    				ld (serial_file_length_cache),h
002FD0 21 A6 69 00         B    42    				ld hl,buffer_addr
002FD4 22 A6 68 00         B    43    				ld (rx_buffer_ptr),hl
002FD8 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002FDA CD C5 45 00         B    46    rx_lnb			call s_goodack
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FDE CD 6F 45 00         B    47    				call s_getblock
002FE2 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002FE4 F5                  B    50    				push af							002FE5 CD D6 45 00         B    51    				call s_badack					002FE9 21 4C 5F 00         B    52    				ld hl,serial_fileheader			002FED CD 3A 17 00         B    53    				call os_erase_file
002FF1 F1                  B    54    				pop af
002FF2 C9                  B    55    				ret
                           B    56    
002FF3 CD DD 45 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FF7 21 A6 66 00         B    59    				ld hl,sector_buffer
002FFB ED5B A6 68 00       B    60    				ld de,(rx_buffer_ptr)
003000 01000100            B    61    				ld bc,256
003004 EDB0                B    62    				ldir
003006 ED53 A6 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
00300B 2A 5C 5F 00         B    65    				ld hl,(serial_fileheader+16)
00300F 11000100            B    66    				ld de,256
003013 AF                  B    67    				xor a
003014 ED52                B    68    				sbc hl,de
003016 22 5C 5F 00         B    69    				ld (serial_fileheader+16),hl
00301A 28 1D               B    70    				jr z,rx_lbr
00301C 38 1B               B    71    				jr c,rx_lbr
00301E 10 BA               B    72    				djnz rx_lnb
                           B    73    
003020 01008000            B    74    				ld bc,buffer_blocks*256
003024 11 A6 69 00         B    75    				ld de,buffer_addr
003028 21 4C 5F 00         B    76    				ld hl,serial_fileheader
00302C CD BA 16 00         B    77    				call os_write_bytes_to_file
003030 28 96               B    78    				jr z,rx_rnblk
003032 F5                  B    79    rxwtd_fail		push af
003033 CD D6 45 00         B    80    				call s_badack
003037 F1                  B    81    				pop af
003038 C9                  B    82    				ret
                           B    83    				
003039 CD C5 45 00         B    84    rx_lbr			call s_goodack
00303D ED4B A9 68 00       B    85    				ld bc,(serial_file_length_cache
003042 11 A6 69 00         B    86    				ld de,buffer_addr
003046 21 4C 5F 00         B    87    				ld hl,serial_fileheader
00304A CD BA 16 00         B    88    				call os_write_bytes_to_file
00304E C0                  B    89    				ret nz	
                           B    90    				
00304F 3E20                B    91    rxtd_done		ld a,020h						003051 B7                  B    92    				or a
003052 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
003053 3E21                B    98    rx_nrs			ld a,'!'						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003055 BE                  B    99    				cp (hl)							003056 C2 01 31 00         B   100    				jr nz,notrxe
00305A 23                  B   101    				inc hl
00305B 3E20                B   102    				ld a,' '
00305D BE                  B   103    				cp (hl)
00305E 2B                  B   104    				dec hl
00305F C2 01 31 00         B   105    				jr nz,notrxe
003063 112A0000            B   106    				ld de,02ah						003067 ED53 38 5F 00       B   107    				ld (serial_filename),de			00306C CD 57 31 00         B   108    				call rx_get_header
003070 C0                  B   109    				ret nz
003071 21 5C 5B 00         B   110    				ld hl,ser_rec2_msg
003075 CD 39 14 00         B   111    				call os_show_packed_text
003079 CD C5 45 00         B   112    				call s_goodack
00307D 3E01                B   113    				ld a,1							00307F 32 4B 5F 00         B   114    				ld (serial_timeout),a
003083 CD 6F 45 00         B   115    				call s_getblock					003087 28 07               B   116    				jr z,rxe_fblok
003089 F5                  B   117    rxe_badblock	push af							00308A CD D6 45 00         B   118    				call s_badack					00308E F1                  B   119    				pop af
00308F C9                  B   120    				ret
                           B   121    	
003090 2A A8 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003094 1150524F            B   123    				ld de,04f5250h					003098 AF                  B   124    				xor a
003099 28 04               B   125    				jr z,rxe_ok
00309B 3E1A                B   126    				ld a,1ah						00309D B7                  B   127    				or a
00309E C9                  B   128    				ret
00309F 2A AB 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			0030A3 22 2F 5F 00         B   130    				ld (serial_ez80_address),hl
0030A7 01000100            B   131    				ld bc,256						0030AB DD21 4C 5F 00       B   132    				ld ix,serial_fileheader
0030B0 AF                  B   133    				xor a
0030B1 DDB612              B   134    				or (ix+18)						0030B4 20 0A               B   135    				jr nz,mtones
0030B6 DDB611              B   136    				or a,(ix+17)					0030B9 20 05               B   137    				jr nz,mtones
0030BB 0600                B   138    				ld b,0
0030BD DD4E10              B   139    				ld c,(ix+16)					0030C0 21 A6 66 00         B   140    mtones			ld hl,sector_buffer				0030C4 ED5B 2F 5F 00       B   141    				ld de,(serial_ez80_address)		0030C9 EDB0                B   142    				ldir
                           B   143    				
0030CB D5                  B   144    				push de
0030CC CD C5 45 00         B   145    				call s_goodack		
0030D0 DDE1                B   146    				pop ix							0030D2 2A 5C 5F 00         B   147    				ld hl,(serial_fileheader+16)	0030D6 11000100            B   148    				ld de,256
0030DA AF                  B   149    				xor a
0030DB ED52                B   150    				sbc hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030DD 28 18               B   151    				jr z,rxe_done
0030DF 38 16               B   152    				jr c,rxe_done
0030E1 EB                  B   153    				ex de,hl
0030E2 ED53 5C 5F 00       B   154    				ld (serial_fileheader+16),de	0030E7 DD2A 2F 5F 00       B   155    				ld ix,(serial_ez80_address)
0030EC 01000100            B   156    				ld bc,256
0030F0 DD09                B   157    				add ix,bc
0030F2 CD 2D 45 00         B   158    				call s_gbloop					0030F6 C0                  B   159    				ret nz
0030F7 E1                  B   160    rxe_done		pop hl							0030F8 CD 7C 3D 00         B   161    				call enable_button_nmi			0030FC 2A 2F 5F 00         B   162    				ld hl,(serial_ez80_address)
003100 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
003101 CD 9E 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
003105 0610                B   169    				ld b,16							003107 11 38 5F 00         B   170    				ld de,serial_filename
00310B CD 48 12 00         B   171    				call os_copy_ascii_run			00310F 79                  B   172    				ld a,c
003110 32 4A 5F 00         B   173    				ld (serial_fn_length),a
003114 CD EF 0F 00         B   174    				call os_scan_for_space
                           B   175    				
003118 CD CB 1C 00         B   176    				call hexword_or_bust			00311C CA 45 16 00         B   177    				jp z,os_no_start_addr			003120 ED53 A6 68 00       B   178    				ld (data_load_addr),de			003125 2A BB 60 00         B   179    				ld hl,(sysram_os_highest)		003129 2B                  B   180    				dec hl
00312A AF                  B   181    				xor a
00312B ED52                B   182    				sbc hl,de
00312D 38 04               B   183    				jr c,os_prok
00312F 3E26                B   184    				ld a,026h						003131 B7                  B   185    				or a
003132 C9                  B   186    				ret
                           B   187    
003133 CD 57 31 00         B   188    os_prok			call rx_get_header
003137 C0                  B   189    				ret nz
                           B   190    
003138 21 5C 5B 00         B   191    				ld hl,ser_rec2_msg
00313C CD 39 14 00         B   192    				call os_show_packed_text
                           B   193    	
003140 2A A6 68 00         B   194    				ld hl,(data_load_addr)			003144 CD 1B 45 00         B   195    				call serial_receive_file
003148 C0                  B   196    				ret nz							                           B   197    
003149 ED5B 5C 5F 00       B   198    				ld de,(serial_fileheader+16)	00314E ED53 A9 68 00       B   199    				ld (filesize_cache),de
003153 C3 29 2D 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   203    
003157                     B   204    rx_get_header
003157 21 58 5B 00         B   205    				ld hl,ser_rec_msg
00315B CD 39 14 00         B   206    				call os_show_packed_text
                           B   207    				
00315F 3E00                B   208    				ld a,0
003161 32 6D 5F 00         B   209    				ld (anim_wait_count),a			003165 3A 6D 5F 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
003169 3C                  B   211    				inc a
00316A 47                  B   212    				ld b,a
00316B FE06                B   213    				cp 6
00316D 20 07               B   214    				jr nz,notsix
00316F 0E20                B   215    				ld c,' '
003171 0605                B   216    				ld b,5
003173 AF                  B   217    				xor a
003174 18 02               B   218    				jr mcharset
003176 0E2E                B   219    notsix			ld c,'.'
003178 32 6D 5F 00         B   220    mcharset		ld (anim_wait_count),a
00317C CD 92 1A 00         B   221    				call os_print_multiple_chars
003180 CD A3 0F 00         B   222    				call home_cursor
                           B   223    				
003184 21 38 5F 00         B   224    				ld hl,serial_filename			003188 3E01                B   225    				ld a,1							00318A CD 80 44 00         B   226    				call serial_get_header
00318E C8                  B   227    				ret z
00318F FE83                B   228    				cp 083h							003191 C0                  B   229    				ret nz
003192 CD 65 44 00         B   230    				call os_get_key_press
003196 FE76                B   231    				cp 076h
003198 20 CB               B   232    				jr nz,get_hdr_loop
00319A 3E80                B   233    				ld a,080h						00319C B7                  B   234    notsto			or a
00319D C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00319E                     B   240    clear_serial_filename
                           B   241    
00319E E5                  B   242    				push hl							00319F 21 38 5F 00         B   243    				ld hl,serial_filename
0031A3 01100000            B   244    				ld bc,16
0031A7 AF                  B   245    				xor a
0031A8 CD C6 15 00         B   246    				call os_bchl_memfill
0031AC E1                  B   247    				pop hl
0031AD C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
                           B     4    
0031AE 7E                  B     5    os_cmd_tx		ld a,(hl)						0031AF B7                  B     6    				or a
0031B0 CA 3D 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0031B4 E5                  B     9    				push hl							0031B5 21 38 5F 00         B    10    				ld hl,serial_filename
0031B9 01100000            B    11    				ld bc,16
0031BD AF                  B    12    				xor a
0031BE CD C6 15 00         B    13    				call os_bchl_memfill
0031C2 E1                  B    14    				pop hl
                           B    15    			
0031C3 0610                B    16    				ld b,16							0031C5 11 38 5F 00         B    17    				ld de,serial_filename
0031C9 CD 48 12 00         B    18    				call os_copy_ascii_run			0031CD 79                  B    19    				ld a,c
0031CE 32 4A 5F 00         B    20    				ld (serial_fn_length),a
0031D2 CD EF 0F 00         B    21    				call os_scan_for_space
                           B    22    							
0031D6 CD CB 1C 00         B    23    				call hexword_or_bust			0031DA CA 45 16 00         B    24    				jp z,os_no_start_addr			0031DE ED53 2F 5F 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
0031E3 CD CB 1C 00         B    27    				call hexword_or_bust			0031E7 CA 49 16 00         B    28    				jp z,os_no_filesize
0031EB ED53 32 5F 00       B    29    				ld (serial_file_length),de
0031F0 21000000            B    30    				ld hl,0
0031F4 3E07                B    31    				ld a,07h						0031F6 B7                  B    32    				or a
0031F7 ED5A                B    33    				adc hl,de
0031F9 28 1D               B    34    				jr z,s_error
                           B    35    				
0031FB 21 61 5B 00         B    36    				ld hl,ser_send_msg
0031FF CD 39 14 00         B    37    				call os_show_packed_text
                           B    38    			
003203 ED5B 32 5F 00       B    39    				ld de,(serial_file_length)
003208 21 38 5F 00         B    40    				ld hl,serial_filename			00320C DD2A 2F 5F 00       B    41    				ld ix,(serial_ez80_address)
003211 CD E4 45 00         B    42    				call serial_send_file
003215 C0                  B    43    				ret nz			
                           B    44    			
003216 3E20                B    45    				ld a,020h						003218 B7                  B    46    s_error			or a
003219 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
00321A CD CB 1C 00         B     5    os_cmd_t		call hexword_or_bust			00321E 28 05               B     6    				jr z,t_no_hex					003220 ED53 5C 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003225 0610                B     9    t_no_hex		ld b,16
003227 C5                  B    10    smaalp			push bc
                           B    11    				
003228 21 6B 32 00         B    12    				ld hl,gtr_cmd_prefix			00322C CD 5A 0F 00         B    13    				call os_print_string
003230 ED5B 5C 61 00       B    14    				ld de,(mem_mon_addr)
003235 CD 3A 13 00         B    15    				call os_show_hex_address
                           B    16    
003239 21 C6 61 00         B    17    				ld hl,output_line
00323D 3620                B    18    				ld (hl),' '
00323F 23                  B    19    				inc hl
003240 3622                B    20    				ld (hl),022h
003242 0610                B    21    				ld b,16
003244 23                  B    22    mabllp			inc hl
003245 1A                  B    23    				ld a,(de)	
003246 FE20                B    24    				cp 020h
003248 38 04               B    25    				jr c,chchar
00324A FE7F                B    26    				cp 07fh
00324C 38 02               B    27    				jr c,nchchar
00324E 3E7C                B    28    chchar			ld a,07ch
003250 77                  B    29    nchchar			ld (hl),a
003251 13                  B    30    				inc de
003252 10 F0               B    31    				djnz mabllp
                           B    32    
003254 ED53 5C 61 00       B    33    				ld (mem_mon_addr),de
003259 23                  B    34    				inc hl
00325A 3622                B    35    				ld (hl),022h
00325C 23                  B    36    				inc hl
00325D 360B                B    37    				ld (hl),11
00325F 23                  B    38    				inc hl
003260 3600                B    39    				ld (hl),0
003262 CD 65 13 00         B    40    				call os_print_output_line
003266 C1                  B    41    				pop bc
003267 10 BE               B    42    				djnz smaalp
003269 AF                  B    43    				xor a
00326A C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
00326B 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00326E                     B     5    os_cmd_remount
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mount.asm
                           B     6    
00326E 3E00                B     7    				ld a,0							003270 CD 77 18 00         B     8    				call os_mount_volumes
003274 CD 02 14 00         B     9    				call os_new_line
003278 AF                  B    10    				xor a
003279 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
00327A                     B     5    os_cmd_vers
                           B     6    
00327A 21 55 56 00         B     7    				ld hl,os_version_txt
00327E CD 5A 0F 00         B     8    				call os_print_string
                           B     9    			
003282 CD B4 40 00         B    10    				call hwsc_get_version
003286 D5                  B    11    				push de
003287 EB                  B    12    				ex de,hl
003288 CD 59 13 00         B    13    				call os_show_hex_word
                           B    14    				
00328C 21 78 56 00         B    15    				ld hl,fwd_slash_txt
003290 CD 5A 0F 00         B    16    				call os_print_string
                           B    17    				
003294 21 63 56 00         B    18    				ld hl,hw_version_txt
003298 CD 5A 0F 00         B    19    				call os_print_string
00329C D1                  B    20    				pop de
00329D CD 59 13 00         B    21    				call os_show_hex_word
                           B    22    				
0032A1 CD 02 14 00         B    23    				call os_new_line
0032A5 CD 02 14 00         B    24    				call os_new_line	
0032A9 AF                  B    25    				xor a
0032AA C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
0032AB 21 2D 62 00         B    22    os_cmd_exec		ld hl,script_flags				0032AF CB46                B    23    				bit scr_in_script,(hl)
0032B1 C2 42 34 00         B    24    				jp nz,script_error
0032B5 E5                  B    25    				push hl
0032B6 CD BE 32 00         B    26    				call do_script
0032BA E1                  B    27    				pop hl
0032BB CB86                B    28    				res scr_in_script,(hl)
0032BD C9                  B    29    				ret
                           B    30    				
0032BE CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
0032C0 2A 18 62 00         B    33    				ld hl,(os_args_loc)				0032C4 11 45 61 00         B    34    				ld de,script_fn					0032C8 060D                B    35    				ld b,13
0032CA CD 48 12 00         B    36    				call os_copy_ascii_run
0032CE AF                  B    37    				xor a
0032CF 12                  B    38    				ld (de),a
                           B    39    				
0032D0 CD AA 1A 00         B    40    				call fs_get_dir_cluster			0032D4 ED53 24 62 00       B    41    				ld (script_dir),de
                           B    42    				
0032D9 CD D2 16 00         B    43    				call os_check_volume_format		0032DD C0                  B    44    				ret nz
                           B    45    				
0032DE CD 0E 34 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
0032E2 3A 8A 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			0032E6 E602                B    52    				and 2
0032E8 28 12               B    53    				jr z,no_quit_script	
0032EA CD 65 44 00         B    54    				call os_get_key_press
0032EE FE21                B    55    				cp 021h							0032F0 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
0032F2 21 75 5B 00         B    58    				ld hl,script_aborted_msg
0032F6 CD 39 14 00         B    59    				call os_show_packed_text
0032FA AF                  B    60    				xor a							0032FB C9                  B    61    				ret
                           B    62    					
                           B    63    
0032FC CD 21 34 00         B    64    no_quit_script	call open_script				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003300 C0                  B    65    				ret nz
003301 CD 4C 34 00         B    66    				call read_script				003305 C0                  B    67    				ret nz
003306 21 2D 62 00         B    68    				ld hl,script_flags				00330A CB5E                B    69    				bit scr_end,(hl)
00330C 28 02               B    70    				jr z,scr_to_do
00330E AF                  B    71    scr_done		xor a
00330F C9                  B    72    				ret
                           B    73    				
003310 21 74 61 00         B    74    scr_to_do		ld hl,commandstring				003314 7E                  B    75    				ld a,(hl)
003315 FE5B                B    76    				cp '['
003317 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
003319 11 BD 56 00         B    79    				ld de,if_command_txt			00331D 0603                B    80    				ld b,3
00331F CD 29 12 00         B    81    				call os_compare_strings
003323 28 18               B    82    				jr z,do_exec_if
                           B    83    				
003325 11 C0 56 00         B    84    				ld de,end_command_txt			003329 0604                B    85    				ld b,4
00332B CD 29 12 00         B    86    				call os_compare_strings
00332F 28 DD               B    87    				jr z,scr_done
                           B    88    			
003331 CD 7F 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
003335 21 2D 62 00         B    91    exec_scr_next	ld hl,script_flags
003339 CBCE                B    92    				set scr_find_new_line,(hl)
00333B 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
00333D 21 76 61 00         B   104    do_exec_if		ld hl,commandstring+2			003341 CD F8 0F 00         B   105    				call os_scan_for_non_space
003345 CA 42 34 00         B   106    				jr z,script_error				003349 11 2E 62 00         B   107    				ld de,if_name_txt
00334D 0610                B   108    				ld b,max_if_chars
00334F CD 48 12 00         B   109    				call os_copy_ascii_run			003353 AF                  B   110    				xor a
003354 12                  B   111    				ld (de),a
                           B   112    				
003355 CD F8 0F 00         B   113    				call os_scan_for_non_space		003359 CA 42 34 00         B   114    				jr z,script_error
00335D DD21 2D 62 00       B   115    				ld ix,script_flags
003362 DDCB0096            B   116    				res scr_if_condition,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003366 7E                  B   117    				ld a,(hl)
003367 FE3D                B   118    				cp '='
003369 28 04               B   119    				jr z,if_equals
00336B DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
00336F CD EF 0F 00         B   122    if_equals		call os_scan_for_space			003373 CD F8 0F 00         B   123    				call os_scan_for_non_space		003377 CA 42 34 00         B   124    				jr z,script_error
00337B 11 40 62 00         B   125    				ld de,if_value_txt				00337F 0610                B   126    				ld b,max_if_chars
003381 CD 48 12 00         B   127    				call os_copy_ascii_run
003385 AF                  B   128    				xor a
003386 12                  B   129    				ld (de),a
                           B   130    				
003387 CD F8 0F 00         B   131    				call os_scan_for_non_space
00338B CA 42 34 00         B   132    				jr z,script_error
00338F 11 52 62 00         B   133    				ld de,if_label_txt				003393 0610                B   134    				ld b,max_if_chars
003395 CD 48 12 00         B   135    				call os_copy_ascii_run			003399 AF                  B   136    				xor a
00339A 12                  B   137    				ld (de),a						                           B   138    								
00339B 21 2E 62 00         B   139    				ld hl,if_name_txt				00339F CD 7A 1B 00         B   140    				call os_get_envar				0033A3 C2 35 33 00         B   141    				jp nz,exec_scr_next				                           B   142    								
0033A7 21 40 62 00         B   143    				ld hl,if_value_txt
0033AB DD21 2D 62 00       B   144    				ld ix,script_flags
0033B0 DDCB0056            B   145    				bit scr_if_condition,(ix)
0033B4 20 0A               B   146    				jr nz,if_cond_diff
0033B6 CD 29 12 00         B   147    				call os_compare_strings			0033BA C2 35 33 00         B   148    				jp nz,exec_scr_next				0033BE 18 08               B   149    				jr if_cond_met
0033C0 CD 29 12 00         B   150    if_cond_diff	call os_compare_strings			0033C4 CA 35 33 00         B   151    				jp z,exec_scr_next				                           B   152    
0033C8 CD 0E 34 00         B   153    if_cond_met		call new_script					                           B   154    
0033CC CD 21 34 00         B   155    find_if_label	call open_script				0033D0 C0                  B   156    				ret nz
                           B   157    
0033D1 CD 4C 34 00         B   158    				call read_script
0033D5 C0                  B   159    				ret nz
0033D6 21 2D 62 00         B   160    				ld hl,script_flags
0033DA CB5E                B   161    				bit scr_end,(hl)
0033DC C2 0E 33 00         B   162    				jp nz,scr_done
                           B   163    				
0033E0 21 74 61 00         B   164    				ld hl,commandstring				0033E4 7E                  B   165    				ld a,(hl)
0033E5 FE5B                B   166    				cp '['
0033E7 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033E9 23                  B   169    if_find_csb		inc hl
0033EA 7E                  B   170    				ld a,(hl)
0033EB B7                  B   171    				or a
0033EC 28 18               B   172    				jr z,not_a_label				0033EE FE5D                B   173    				cp ']'							0033F0 20 F7               B   174    				jr nz,if_find_csb
0033F2 3600                B   175    				ld (hl),0						0033F4 21 75 61 00         B   176    				ld hl,commandstring+1
0033F8 11 52 62 00         B   177    				ld de,if_label_txt				0033FC 0610                B   178    				ld b,max_if_chars
0033FE CD 29 12 00         B   179    				call os_compare_strings
003402 CA 35 33 00         B   180    				jp z,exec_scr_next				                           B   181    
003406 21 2D 62 00         B   182    not_a_label		ld hl,script_flags
00340A CBCE                B   183    				set scr_find_new_line,(hl)		00340C 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
00340E E5                  B   188    new_script		push hl
00340F 21000000            B   189    				ld hl,0
003413 22 27 62 00         B   190    				ld (script_file_offset),hl		003417 21 2D 62 00         B   191    				ld hl,script_flags
00341B CB8E                B   192    				res scr_find_new_line,(hl)		00341D CB9E                B   193    				res scr_end,(hl)
00341F E1                  B   194    				pop hl
003420 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
003421 CD AA 1A 00         B   199    open_script		call fs_get_dir_cluster			003425 D5                  B   200    				push de
003426 ED5B 24 62 00       B   201    				ld de,(script_dir)				00342B CD B6 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
00342F 21 45 61 00         B   204    				ld hl,script_fn					003433 CD 65 16 00         B   205    				call os_find_file				003437 ED53 2A 62 00       B   206    				ld (script_length),de			00343C D1                  B   207    				pop de
00343D C0                  B   208    				ret nz
00343E 79                  B   209    				ld a,c							00343F B7                  B   210    				or a
003440 28 04               B   211    				jr z,scr_flok
                           B   212    				
003442 3E8C                B   213    script_error	ld a,08ch
003444 B7                  B   214    				or a
003445 C9                  B   215    				ret
                           B   216    				
003446 CD B6 1A 00         B   217    scr_flok		call fs_update_dir_cluster		00344A AF                  B   218    				xor a
00344B C9                  B   219    				ret
                           B   220    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
00344C 21 74 61 00         B   224    read_script		ld hl,commandstring				003450 01500000            B   225    				ld bc,max_buffer_chars			003454 3E20                B   226    				ld a,32
003456 CD C6 15 00         B   227    				call os_bchl_memfill
                           B   228    				
00345A 11500000            B   229    				ld de,max_buffer_chars			00345E CD 76 16 00         B   230    				call os_set_load_length
                           B   231    				
003462 AF                  B   232    				xor a
003463 2A 2A 62 00         B   233    				ld hl,(script_length)
003467 ED5B 27 62 00       B   234    				ld de,(script_file_offset)		00346C 37                  B   235    				scf
00346D ED52                B   236    				sbc hl,de						00346F 30 08               B   237    				jr nc,not_eoscr					003471 21 2D 62 00         B   238    				ld hl,script_flags
003475 CBDE                B   239    				set scr_end,(hl)				003477 AF                  B   240    				xor a
003478 C9                  B   241    				ret
003479 CD 7E 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
00347D 21 74 61 00         B   244    				ld hl,commandstring				003481 CD 94 16 00         B   245    				call os_read_bytes_from_file
003485 B7                  B   246    				or a			
003486 28 03               B   247    				jr z,scr_load_ok
003488 FECC                B   248    				cp 0cch							00348A C0                  B   249    				ret nz							                           B   250    
00348B 21 2D 62 00         B   251    scr_load_ok		ld hl,script_flags
00348F CB4E                B   252    				bit scr_find_new_line,(hl)		003491 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003493 21 74 61 00         B   255    				ld hl,commandstring				003497 0650                B   256    				ld b,max_buffer_chars
003499 7E                  B   257    scr_fcr			ld a,(hl)
00349A FE20                B   258    				cp 32
00349C 38 05               B   259    				jr c,scr_gotclcr
00349E 23                  B   260    				inc hl
00349F 10 F8               B   261    				djnz scr_fcr
0034A1 AF                  B   262    				xor a
0034A2 C9                  B   263    				ret
0034A3 3620                B   264    scr_gotclcr		ld (hl),32						0034A5 23                  B   265    				inc hl
0034A6 10 FB               B   266    				djnz scr_gotclcr
0034A8 AF                  B   267    				xor a
0034A9 C9                  B   268    				ret
                           B   269    
0034AA FD2A 27 62 00       B   270    scr_fnl			ld iy,(script_file_offset)
0034AF 21 74 61 00         B   271    				ld hl,commandstring	
0034B3 7E                  B   272    scr_find_cr		ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0034B4 B7                  B   273    				or a
0034B5 20 07               B   274    				jr nz,scr_neocl					0034B7 FD22 27 62 00       B   275    scr_eocl		ld (script_file_offset),iy
0034BC 18 8E               B   276    				jr read_script				
0034BE FE20                B   277    scr_neocl		cp 20h							0034C0 38 05               B   278    				jr c,scr_got_cr
0034C2 23                  B   279    				inc hl
0034C3 FD23                B   280    				inc iy
0034C5 18 EC               B   281    				jr scr_find_cr
                           B   282    				
0034C7 7E                  B   283    scr_got_cr		ld a,(hl)
0034C8 B7                  B   284    				or a							0034C9 28 EC               B   285    				jr z,scr_eocl					0034CB FE20                B   286    				cp 20h
0034CD 30 05               B   287    				jr nc,scr_got_ch				0034CF 23                  B   288    				inc hl
0034D0 FD23                B   289    				inc iy
0034D2 18 F3               B   290    				jr scr_got_cr
                           B   291    
0034D4 FD22 27 62 00       B   292    scr_got_ch		ld (script_file_offset),iy
0034D9 21 2D 62 00         B   293    				ld hl,script_flags				0034DD CB8E                B   294    				res scr_find_new_line,(hl)
0034DF C3 4C 34 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0034E3                     B     7    os_cmd_ltn
                           B     8    
0034E3 AF                  B     9    				xor a
0034E4 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
                           B     4    
0034E5                     B     5    os_cmd_pen
                           B     6    	
0034E5 0612                B     7    				ld b,18							0034E7 DD21 F3 5E 00       B     8    				ld ix,current_pen
                           B     9    				
0034EC CD CB 1C 00         B    10    chpenlp			call hexword_or_bust			0034F0 28 0D               B    11    				jr z,pendone					0034F2 23                  B    12    				inc hl
0034F3 DD7300              B    13    				ld (ix),e
0034F6 DD7201              B    14    				ld (ix+1),d
0034F9 DD23                B    15    				inc ix
0034FB DD23                B    16    				inc ix
0034FD 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034FF 21 F7 5E 00         B    19    pendone			ld hl,pen_palette				003503 CD 83 3E 00         B    20    				call hswc_set_ui_colours
003507 AF                  B    21    				xor a
003508 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003509                     B     5    os_cmd_palette
                           B     6    
003509 0610                B     7    				ld b,16							00350B DD21 F7 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
003510 0E00                B    10    				ld c,0
003512 C5                  B    11    chcollp			push bc
003513 CD CB 1C 00         B    12    				call hexword_or_bust			003517 C1                  B    13    				pop bc
003518 28 0E               B    14    				jr z,colrdone					00351A 0C                  B    15    				inc c
00351B 23                  B    16    				inc hl
00351C DD7300              B    17    				ld (ix),e
00351F DD7201              B    18    				ld (ix+1),d
003522 DD23                B    19    				inc ix
003524 DD23                B    20    				inc ix
003526 10 EA               B    21    				djnz chcollp
                           B    22    			
003528 79                  B    23    colrdone		ld a,c
003529 B7                  B    24    				or a
00352A 20 04               B    25    				jr nz,pal_ok
00352C 3E81                B    26    				ld a,81h						00352E B7                  B    27    				or a
00352F C9                  B    28    				ret
003530 21 F7 5E 00         B    29    pal_ok			ld hl,pen_palette
003534 CD 83 3E 00         B    30    				call hswc_set_ui_colours	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
003538 AF                  B    31    				xor a
003539 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
00353A                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
00353A CD E3 3B 00         B    15    				call disable_ms_irq
                           B    16    
00353E 21 BA 60 00         B    17    				ld hl,devices_connected
003542 CB8E                B    18    				res 1,(hl)
                           B    19    		
003544 CD F9 41 00         B    20    				call init_mouse
003548 C0                  B    21    				ret nz
                           B    22    			
003549 AF                  B    23    				xor a
00354A 32 93 62 00         B    24    				ld (mouse_packet_index),a
00354E 32 94 62 00         B    25    				ld (mouse_buttons),a
003552 21000000            B    26    				ld hl,0
003556 22 95 62 00         B    27    				ld (mouse_disp_x),hl
00355A 22 98 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00355E 21800200            B    30    				ld hl,window_width_pixels
003562 11E00100            B    31    				ld de,window_height_pixels
003566 CD 83 14 00         B    32    				call os_set_mouse_window
                           B    33    
00356A CD DD 3B 00         B    34    				call enable_ms_irq
                           B    35    
00356E 21 BA 60 00         B    36    				ld hl,devices_connected
003572 CBCE                B    37    				set 1,(hl)
003574 AF                  B    38    				xor a
003575 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
003576                     B     5    os_cmd_vmode
                           B     6    	
003576 CD CB 1C 00         B     7    				call hexword_or_bust			00357A 20 04               B     8    				jr nz,vm_data					00357C 3E81                B     9    				ld a,81h						00357E B7                  B    10    				or a
00357F C9                  B    11    				ret
                           B    12    
003580 7B                  B    13    vm_data			ld a,e
003581 CD 9F 15 00         B    14    				call os_set_vmode
003585 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003586                     B     5    os_cmd_font
                           B     6    	
003586 CD D2 16 00         B     7    				call os_check_volume_format	
00358A C0                  B     8    				ret nz
                           B     9    				
00358B CD 4D 29 00         B    10    				call filename_or_bust			00358F 22 A6 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
003593 CD AA 1A 00         B    13    				call fs_get_dir_cluster			003597 ED53 A9 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00359C CD 30 17 00         B    16    				call os_root_dir				0035A0 C0                  B    17    				ret nz
0035A1 21 0F 36 00         B    18    				ld hl,fonts_fn
0035A5 CD 20 17 00         B    19    				call os_change_dir
0035A9 20 1E               B    20    				jr nz,no_font
                           B    21    				
0035AB 2A A6 68 00         B    22    				ld hl,(scratch_pad)
0035AF CD 65 16 00         B    23    				call os_find_file				0035B3 20 14               B    24    				jr nz,no_font
                           B    25    				
0035B5 11000800            B    26    				ld de,800h
0035B9 CD 76 16 00         B    27    				call os_set_load_length			                           B    28    
0035BD 21000080            B    29    				ld hl,vram_a_addr				0035C1 CD 94 16 00         B    30    				call os_read_bytes_from_file
0035C5 CD D5 35 00         B    31    				call convert_font
                           B    32    				
0035C9 F5                  B    33    no_font			push af
0035CA ED5B A9 68 00       B    34    				ld de,(scratch_pad+3)			0035CF CD B6 1A 00         B    35    				call fs_update_dir_cluster
0035D3 F1                  B    36    				pop af
0035D4 C9                  B    37    				ret
                           B    38    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
0035D5 1EFF                B    42    convert_font	ld e,255						0035D7 01080000            B    43    				ld bc,8
0035DB 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
0035DF CD EA 35 00         B    45    conv_allch		call char_to_font
0035E3 AF                  B    46    				xor a
0035E4 ED42                B    47    				sbc hl,bc
0035E6 1D                  B    48    				dec e
0035E7 20 F6               B    49    				jr nz,conv_allch
0035E9 C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
0035EA E5                  B    57    char_to_font	push hl
0035EB C5                  B    58    				push bc
0035EC 01400000            B    59    				ld bc,64
0035F0 43                  B    60    				ld b,e
0035F1 ED4C                B    61    				mlt bc
0035F3 DD210000 80         B    62    				ld ix,vram_a_addr
0035F8 DD09                B    63    				add ix,bc
0035FA CD 02 36 00         B    64    				call conv_char
0035FE C1                  B    65    				pop bc
0035FF E1                  B    66    				pop hl
003600 AF                  B    67    				xor a
003601 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
003602 0608                B    72    conv_char		ld b,8
003604 7E                  B    73    bfontlp1		ld a,(hl)
003605 DD7700              B    74    				ld (ix),a
003608 23                  B    75    				inc hl
003609 ED3208              B    76    				lea ix,ix+8
00360C 10 F6               B    77    				djnz bfontlp1
00360E C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
00360F 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B     6    ;----------------------------------------------
                           B     7    
003615 7E                  B     8    os_cmd_set		ld a,(hl)					; i
003616 B7                  B     9    				or a
003617 28 3B               B    10    				jr z,show_envars
                           B    11    
003619 11 A9 68 00         B    12    				ld de,scratch_pad+3			; p
00361D 7E                  B    13    evsalp1			ld a,(hl)
00361E 12                  B    14    				ld (de),a
00361F B7                  B    15    				or a
003620 28 2E               B    16    				jr z,set_bad_args
003622 FE3D                B    17    				cp '='
003624 28 04               B    18    				jr z,evsadone1
003626 23                  B    19    				inc hl
003627 13                  B    20    				inc de
003628 18 F3               B    21    				jr evsalp1
00362A AF                  B    22    evsadone1		xor a
00362B 12                  B    23    				ld (de),a
00362C 13                  B    24    				inc de
00362D 23                  B    25    				inc hl
00362E ED53 A6 68 00       B    26    				ld (scratch_pad),de
                           B    27    
003633 7E                  B    28    evsalp2			ld a,(hl)
003634 12                  B    29    				ld (de),a
003635 FE20                B    30    				cp ' '
003637 28 07               B    31    				jr z,evsadone2
003639 B7                  B    32    				or a
00363A 28 14               B    33    				jr z,set_bad_args
00363C 23                  B    34    				inc hl
00363D 13                  B    35    				inc de
00363E 18 F3               B    36    				jr evsalp2
003640 AF                  B    37    evsadone2		xor a
003641 12                  B    38    				ld (de),a
                           B    39    				
003642 21 A9 68 00         B    40    				ld hl,scratch_pad+3
003646 ED5B A6 68 00       B    41    				ld de,(scratch_pad)
00364B CD BA 1B 00         B    42    				call os_set_envar
00364F C9                  B    43    				ret
                           B    44    
003650 3E82                B    45    set_bad_args	ld a,82h
003652 B7                  B    46    				or a
003653 C9                  B    47    				ret
                           B    48    				
                           B    49    
003654 21 B7 62 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003658 7E                  B    52    show_envlp		ld a,(hl)
003659 FEFF                B    53    				cp 0ffh
00365B 28 12               B    54    				jr z,set_done
00365D E5                  B    55    				push hl
00365E CD 5A 0F 00         B    56    				call os_print_string
003662 CD 02 14 00         B    57    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
003666 E1                  B    58    				pop hl
                           B    59    				
003667 23                  B    60    set_fnl			inc hl
003668 7E                  B    61    				ld a,(hl)
003669 B7                  B    62    				or a
00366A 20 FB               B    63    				jr nz,set_fnl
00366C 23                  B    64    				inc hl
00366D 18 E9               B    65    				jr show_envlp
                           B    66    				
00366F AF                  B    67    set_done		xor a
003670 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003671 FD21 C6 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003676 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00367A C3 E8 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
00367E 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003682 ED53 11 37 00       B     6    				ld (aud_per),de
003687 3E40                B     7    				ld a,64
003689 32 13 37 00         B     8    				ld (aud_vol),a
00368D 3E11                B     9    				ld a,11h
00368F 32 14 37 00         B    10    				ld (aud_chans),a
                           B    11    				
003693 CD CB 1C 00         B    12    				call hexword_or_bust			003697 20 06               B    13    				jr nz,alocok					003699 CD C4 43 00         B    14    				call hwsc_disable_audio			00369D AF                  B    15    				xor a
00369E C9                  B    16    				ret
00369F ED53 05 37 00       B    17    alocok			ld (aud_loc),de
0036A4 ED53 0B 37 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
0036A9 CD CB 1C 00         B    20    				call hexword_or_bust
0036AD 20 04               B    21    				jr nz,gotaudlen
0036AF 3E8D                B    22    missaudpar		ld a,8dh						0036B1 B7                  B    23    				or a
0036B2 C9                  B    24    				ret				
0036B3 ED53 08 37 00       B    25    gotaudlen		ld (aud_len),de
0036B8 ED53 0E 37 00       B    26    				ld (aud_len_loop),de
                           B    27    				
0036BD CD CB 1C 00         B    28    				call hexword_or_bust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
0036C1 28 33               B    29    				jr z,play_sound
0036C3 7B                  B    30    				ld a,e
0036C4 32 11 37 00         B    31    				ld (aud_per),a
0036C8 7A                  B    32    				ld a,d
0036C9 32 12 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
0036CD CD CB 1C 00         B    35    				call hexword_or_bust
0036D1 28 23               B    36    				jr z,play_sound
0036D3 7B                  B    37    				ld a,e
0036D4 32 13 37 00         B    38    				ld (aud_vol),a
                           B    39    				
0036D8 CD CB 1C 00         B    40    				call hexword_or_bust
0036DC 28 18               B    41    				jr z,play_sound
0036DE 7B                  B    42    				ld a,e
0036DF 32 14 37 00         B    43    				ld (aud_chans),a
                           B    44    				
0036E3 CD CB 1C 00         B    45    				call hexword_or_bust
0036E7 28 0D               B    46    				jr z,play_sound
0036E9 7B                  B    47    				ld a,e
0036EA B7                  B    48    				or a
0036EB 20 09               B    49    				jr nz,play_sound
0036ED 11010000            B    50    				ld de,1
0036F1 ED53 0E 37 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036F6 21 05 37 00         B    53    play_sound		ld hl,audio_structure
0036FA 3A 14 37 00         B    54    				ld a,(aud_chans)
0036FE 4F                  B    55    				ld c,a
0036FF CD 77 43 00         B    56    				call hwsc_play_audio
003703 AF                  B    57    				xor a
003704 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003705                     B    63    audio_structure
                           B    64    
003705 000000              B    65    aud_loc			dw24 0			;loc
003708 000000              B    66    aud_len			dw24 0			;len
00370B 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
00370E 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
003711 FFFF                B    70    aud_per			dw 0ffffh		;per
003713 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003714 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3143    
003715 C9                  A  3144    os_cmd_unused	ret		; <- dummy command, sho
                           A  3145    
                           A  3146    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3147    
003716                     A  3148    os_get_mem_high
                           A  3149    
003716 2A BB 60 00         A  3150    		ld hl,(sysram_os_highest)
00371A ED5B BE 60 00       A  3151    		ld de,(vram_a_os_highest)
00371F ED4B C1 60 00       A  3152    		ld bc,(vram_b_os_highest)
003724 AF                  A  3153    		xor a
003725 C9                  A  3154    		ret
                           A  3155    
                           A  3156    ;----------------------------------------------
                           A  3157    
003726                     A  3158    test_amoeba_vers
                           A  3159    
003726 CD B4 40 00         A  3160    				call hwsc_get_version			00372A 21060100            A  3161    				ld hl,amoeba_version_required-1
00372E AF                  A  3162    				xor a
00372F ED52                A  3163    				sbc hl,de
003731 D8                  A  3164    				ret c
                           A  3165    				
003732 21 D9 56 00         A  3166    				ld hl,hw_warn_txt2
003736 11070100            A  3167    				ld de,amoeba_version_required
00373A CD CA 10 00         A  3168    				call hexword_to_ascii
                           A  3169    				
00373E 21004080            A  3170    				ld hl,vram_a_addr+16384			003742 222010FF            A  3171    				ld (bitmap_parameters),hl		003746 3600                A  3172    				ld (hl),0
003748 E5                  A  3173    				push hl
003749 D1                  A  3174    				pop de
00374A 13                  A  3175    				inc de
00374B 01002C01            A  3176    				ld bc,320*240
00374F EDB0                A  3177    				ldir
                           A  3178    					
003751 DD2138D1 80         A  3179    				ld ix,vram_a_addr+16384+(320*11
003756 FD21 C4 56 00       A  3180    				ld iy,hw_warn_txt1				00375B FD7E00              A  3181    nextwchar		ld a,(iy)
00375E B7                  A  3182    				or a
00375F 28 3B               A  3183    				jr z,wmsg_done
003761 21400000            A  3184    				ld hl,64
003765 67                  A  3185    				ld h,a
003766 ED6C                A  3186    				mlt hl
003768 11000080            A  3187    				ld de,vram_a_addr
00376C 19                  A  3188    				add hl,de						00376D 0E08                A  3189    				ld c,8
00376F 7E                  A  3190    wpixlp2			ld a,(hl)
003770 0608                A  3191    				ld b,8
003772 CB17                A  3192    wpixlp1			rl a
003774 30 06               A  3193    				jr nc,nowpix
003776 DD360001            A  3194    				ld (ix),1
00377A 18 04               A  3195    				jr wpixd
00377C DD360000            A  3196    nowpix			ld (ix),0
003780 DD23                A  3197    wpixd			inc ix
003782 10 EE               A  3198    				djnz wpixlp1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003784 11380100            A  3199    				ld de,320-8
003788 DD19                A  3200    				add ix,de
00378A 11080000            A  3201    				ld de,8
00378E 19                  A  3202    				add hl,de
00378F 0D                  A  3203    				dec c
003790 20 DD               A  3204    				jr nz,wpixlp2
                           A  3205    				
003792 1108F6FF            A  3206    				ld de,8-(320*8)
003796 DD19                A  3207    				add ix,de
003798 FD23                A  3208    				inc iy
00379A 18 BF               A  3209    				jr nextwchar
                           A  3210    
                           A  3211    
00379C CD EE 41 00         A  3212    wmsg_done		call purge_keyboard
0037A0 CD B4 3B 00         A  3213    				call set_irq_vector
0037A4 CD C6 3B 00         A  3214    				call enable_os_irqs
0037A8 FB                  A  3215    				ei
                           A  3216    
0037A9 CD 5F 40 00         A  3217    wmsg_loop		call hwsc_wait_vrt			;	                           A  3218    				
0037AD 11CC0C00            A  3219    				ld de,ccch
0037B1 21 59 61 00         A  3220    				ld hl,cursorflashtimer
0037B5 34                  A  3221    				inc (hl)
0037B6 7E                  A  3222    				ld a,(hl)
0037B7 E640                A  3223    				and 64
0037B9 28 04               A  3224    				jr z,got_wcolour
0037BB 11000000            A  3225    				ld de,000h
0037BF ED530200 FF         A  3226    got_wcolour		ld (hw_palette+2),de
                           A  3227    								
0037C4 CD 65 44 00         A  3228    				call os_get_key_press
0037C8 FE76                A  3229    				cp 76h
0037CA 20 DD               A  3230    				jr nz,wmsg_loop
0037CC C3000000            A  3231    				jp 0
                           A  3232    				
                           A  3233    ;----------------------------------------------
                           A  3234    ; Storage Device Drivers
                           A  3235    ;----------------------------------------------
                           A  3236    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
0037D0 C3 E4 37 00         B    76    sd_card_driver	jp sd_initialize			; $
0037D4 C3 06 38 00         B    77    				jp sd_read_sector			; $
0037D8 C3 0C 38 00         B    78    				jp sd_write_sector			; $
0037DC 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
0037E4 CD 12 38 00         B    85    sd_initialize	call sd_init_main
0037E8 B7                  B    86    				or a						; i
0037E9 28 05               B    87    				jr z,sd_inok
0037EB CD 9B 3B 00         B    88    				call sd_power_off			; i
0037EF C9                  B    89    				ret
                           B    90    
0037F0 CD A0 3B 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
0037F4 CD 6C 39 00         B    93    				call sd_read_cid			; a
0037F8 20 06               B    94    				jr nz,sd_done
0037FA E5                  B    95    				push hl						; c
0037FB CD D5 38 00         B    96    				call sd_read_csd
0037FF E1                  B    97    				pop hl
                           B    98    
003800 CD 83 3B 00         B    99    sd_done			call sd_deselect_card		; R
003804 B7                  B   100    				or a						; I
003805 C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
003806 CD F0 39 00         B   105    sd_read_sector	call sd_read_sector_main
00380A 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
00380C CD 16 3A 00         B   110    sd_write_sector	call sd_write_sector_main
003810 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003812 AF                  B   115    sd_init_main	xor a							003813 32 1A 3B 00         B   116    				ld (sd_card_info),a			
                           B   117    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003817 CD 9B 3B 00         B   118    				call sd_power_off				                           B   119    				
00381B 11004000            B   120    				ld de,16384						00381F CD CF 40 00         B   121    				call hwsc_time_delay
                           B   122    							
003823 CD 8F 3B 00         B   123    				call sd_power_on				                           B   124    					
003827 060A                B   125    				ld b,10							003829 CD 9F 3A 00         B   126    sd_ecilp		call sd_send_eight_clocks
00382D 10 FA               B   127    				djnz sd_ecilp
                           B   128    				
00382F 21 EE 3A 00         B   129    				ld hl,CMD0_string				003833 CD B7 3A 00         B   130    				call sd_send_command_string		003837 FE01                B   131    				cp 01h							003839 28 03               B   132    				jr z,sd_spi_mode_ok
                           B   133    				
00383B 3E01                B   134    				ld a,sd_error_spi_mode_failed
00383D C9                  B   135    				ret		
                           B   136    
                           B   137    ; ---- CARD IS IN IDLE MODE -------------------
                           B   138    
00383E 21 F4 3A 00         B   139    sd_spi_mode_ok	ld hl,CMD8_string				003842 CD B7 3A 00         B   140    				call sd_send_command_string
003846 FE01                B   141    				cp 01h
003848 20 52               B   142    				jr nz,sd_sdc_init				                           B   143    
00384A 0604                B   144    				ld b,4
00384C CD DF 3A 00         B   145    				call sd_read_bytes_to_sector_bu
003850 3E01                B   146    				ld a,1
003852 23                  B   147    				inc hl
003853 23                  B   148    				inc hl
003854 BE                  B   149    				cp (hl)							003855 28 03               B   150    				jr z,sd_vrok
003857 3E13                B   151    				ld a,sd_error_vrange_bad
003859 C9                  B   152    				ret				
                           B   153    
00385A 3EAA                B   154    sd_vrok			ld a,0aah
00385C 23                  B   155    				inc hl
00385D BE                  B   156    				cp (hl)
00385E 28 03               B   157    				jr z,sd_check_pattern_ok
003860 3E14                B   158    				ld a,sd_error_check_pattern_bad
003862 C9                  B   159    				ret
                           B   160    				
003863                     B   161    sd_check_pattern_ok
                           B   162    
                           B   163    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   164    	
003863 01401F00            B   165    				ld bc,8000						                           B   166    
003867 3E77                B   167    sdhc_iwl		ld a,CMD55						003869 CD A6 3A 00         B   168    				call sd_send_command_null_args
                           B   169    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00386D 21 FA 3A 00         B   170    				ld hl,ACMD41HCS_string			003871 CD B7 3A 00         B   171    				call sd_send_command_string
003875 28 0C               B   172    				jr z,sdhc_init_ok				003877 CB57                B   173    				bit 2,a
003879 20 05               B   174    				jr nz,sdhc_if					                           B   175    				
00387B 0B                  B   176    				dec bc
00387C 78                  B   177    				ld a,b
00387D B1                  B   178    				or c
00387E 20 E7               B   179    				jr nz,sdhc_iwl
                           B   180    				
003880 3E12                B   181    sdhc_if			ld a,sd_error_sdhc_init_failed	003882 C9                  B   182    				ret
                           B   183    				
003883                     B   184    sdhc_init_ok
                           B   185    
                           B   186    ;------ SDHC CARD IS INITIALIZED --------------
                           B   187    
003883 3E7A                B   188    				ld a,CMD58						003885 CD A6 3A 00         B   189    				call sd_send_command_null_args
                           B   190    					
003889 0604                B   191    				ld b,4							00388B CD DF 3A 00         B   192    				call sd_read_bytes_to_sector_bu
00388F 7E                  B   193    				ld a,(hl)
003890 E640                B   194    				and 040h						003892 0F                  B   195    				rrca
003893 0F                  B   196    				rrca 
003894 F602                B   197    				or 00000010b				
003896 32 1A 3B 00         B   198    				ld (sd_card_info),a				00389A AF                  B   199    				xor a							00389B C9                  B   200    				ret
                           B   201    
                           B   202    	
                           B   203    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   204    
00389C 01401F00            B   205    sd_sdc_init		ld bc,8000						                           B   206    
0038A0 3E77                B   207    sd_iwl			ld a,CMD55						0038A2 CD A6 3A 00         B   208    				call sd_send_command_null_args
                           B   209    
0038A6 3E69                B   210    				ld a,ACMD41						0038A8 CD A6 3A 00         B   211    				call sd_send_command_null_args
0038AC 28 0C               B   212    				jr z,sd_rdy						                           B   213    				
0038AE CB57                B   214    				bit 2,a				
0038B0 20 10               B   215    				jr nz,sd_mmc_init				                           B   216    							
0038B2 0B                  B   217    				dec bc
0038B3 78                  B   218    				ld a,b
0038B4 B1                  B   219    				or c
0038B5 20 E9               B   220    				jr nz,sd_iwl
                           B   221    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038B7 3E11                B   222    				ld a,sd_error_sd_init_failed	0038B9 C9                  B   223    				ret
                           B   224    				
0038BA 3E01                B   225    sd_rdy			ld a,1
0038BC 32 1A 3B 00         B   226    				ld (sd_card_info),a				0038C0 AF                  B   227    				xor a							0038C1 C9                  B   228    				ret	
                           B   229    
                           B   230    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   231    
0038C2 01401F00            B   232    sd_mmc_init		ld bc,8000						                           B   233    
0038C6 3E41                B   234    sdmmc_iwl		ld a,CMD1
0038C8 CD A6 3A 00         B   235    				call sd_send_command_null_args	0038CC C8                  B   236    				ret z							                           B   237    				
0038CD 0B                  B   238    sd_mnrdy		dec bc
0038CE 78                  B   239    				ld a,b
0038CF B1                  B   240    				or c
0038D0 20 F4               B   241    				jr nz,sdmmc_iwl
                           B   242    				
0038D2 3E10                B   243    				ld a,sd_error_mmc_init_failed	0038D4 C9                  B   244    				ret
                           B   245    	
                           B   246    ;----------------------------------------------
                           B   247    
                           B   248    ; Returns BC:DE = Total capacity of card (in se
                           B   249    
0038D5                     B   250    sd_read_csd
                           B   251    				
0038D5 3E49                B   252    				ld a,CMD9						0038D7 CD A6 3A 00         B   253    				call sd_send_command_null_args	0038DB C2 FC 39 00         B   254    				jp nz,sd_bcr_error				                           B   255    
0038DF CD 8A 3A 00         B   256    				call sd_wait_data_token			0038E3 C2 05 3A 00         B   257    				jp nz,sd_dt_timeout	
                           B   258    
0038E7 0612                B   259    sd_id_ok		ld b,18							0038E9 CD DF 3A 00         B   260    				call sd_read_bytes_to_sector_bu
                           B   261    
0038ED DD21 A6 66 00       B   262    				ld ix,sector_buffer				0038F2 DDCB0076            B   263    				bit 6,(ix)
0038F6 28 19               B   264    				jr z,sd_csd_v1
                           B   265    
0038F8 DD6E09              B   266    sd_csd_v2		ld l,(ix+9)						0038FB DD6608              B   267    				ld h,(ix+8)
0038FE 23                  B   268    				inc hl
0038FF 3E0A                B   269    				ld a,10
003901 01000000            B   270    				ld bc,0
003905 4029                B   271    sd_csd2lp		add.sis hl,hl
003907 CB11                B   272    				rl c
003909 CB10                B   273    				rl b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00390B 3D                  B   274    				dec a
00390C 20 F7               B   275    				jr nz,sd_csd2lp
00390E EB                  B   276    				ex de,hl						00390F AF                  B   277    				xor a
003910 C9                  B   278    				ret
                           B   279    				
003911 DD7E06              B   280    sd_csd_v1		ld a,(ix+6)						003914 E603                B   281    				and 00000011b
003916 57                  B   282    				ld d,a
003917 DD5E07              B   283    				ld e,(ix+7)
00391A DD7E08              B   284    				ld a,(ix+8)
00391D E6C0                B   285    				and 11000000b
00391F CB27                B   286    				sla a
003921 CB13                B   287    				rl e
003923 CB12                B   288    				rl d
003925 CB27                B   289    				sla a
003927 CB13                B   290    				rl e
003929 CB12                B   291    				rl d							                           B   292    				
00392B DD7E09              B   293    				ld a,(ix+9)
00392E E603                B   294    				and 00000011b
003930 47                  B   295    				ld b,a
003931 DD7E0A              B   296    				ld a,(ix+10)
003934 E680                B   297    				and 10000000b
003936 CB27                B   298    				sla a
003938 CB10                B   299    				rl b							                           B   300    				
00393A 04                  B   301    				inc b
00393B 04                  B   302    				inc b
00393C 21000000            B   303    				ld hl,0
003940 CB23                B   304    sd_cmsh			sla e
003942 CB12                B   305    				rl d
003944 CB15                B   306    				rl l
003946 CB14                B   307    				rl h
003948 10 F6               B   308    				djnz sd_cmsh					                           B   309    				
00394A DD7E05              B   310    				ld a,(ix+5)
00394D E60F                B   311    				and 00001111b					00394F 28 17               B   312    				jr z,sd_nbls
003951 47                  B   313    				ld b,a
003952 CB23                B   314    sd_blsh			sla e
003954 CB12                B   315    				rl d
003956 CB15                B   316    				rl l
003958 CB14                B   317    				rl h
00395A 10 F6               B   318    				djnz sd_blsh					                           B   319    				
00395C 0609                B   320    				ld b,9							00395E CB3C                B   321    sd_cbsec		srl h
003960 CB1D                B   322    				rr l
003962 CB1A                B   323    				rr d
003964 CB1B                B   324    				rr e
003966 10 F6               B   325    				djnz sd_cbsec
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   326    
003968 E5                  B   327    sd_nbls			push hl
003969 C1                  B   328    				pop bc							00396A AF                  B   329    				xor a
00396B C9                  B   330    				ret
                           B   331    
                           B   332    ;----------------------------------------------
                           B   333    
00396C                     B   334    sd_read_cid
                           B   335    	
                           B   336    ; Returns HL = Pointer to device ID string
                           B   337    
00396C 3E4A                B   338    				ld a,CMD10						00396E CD A6 3A 00         B   339    				call sd_send_command_null_args
003972 C2 FC 39 00         B   340    				jp nz,sd_bcr_error				                           B   341    
003976 CD 8A 3A 00         B   342    				call sd_wait_data_token			00397A C2 05 3A 00         B   343    				jp nz,sd_dt_timeout
                           B   344    					
00397E 0612                B   345    				ld b,18
003980 CD DF 3A 00         B   346    				call sd_read_bytes_to_sector_bu
                           B   347    				
003984 21 A9 66 00         B   348    				ld hl,sector_buffer+03h			003988 11 C6 66 00         B   349    				ld de,sector_buffer+20h
00398C 01050000            B   350    				ld bc,5
003990 3A 1A 3B 00         B   351    				ld a,(sd_card_info)
003994 E60F                B   352    				and 0fh
003996 20 01               B   353    				jr nz,sd_cn5
003998 03                  B   354    				inc bc
003999 EDB0                B   355    sd_cn5			ldir
00399B E5                  B   356    				push hl
00399C D5                  B   357    				push de
00399D 21 00 3B 00         B   358    				ld hl,sd_vnchars
0039A1 01140000            B   359    				ld bc,20
0039A5 EDB0                B   360    				ldir
0039A7 D1                  B   361    				pop de
0039A8 E1                  B   362    				pop hl
0039A9 13                  B   363    				inc de
0039AA 13                  B   364    				inc de
0039AB 7E                  B   365    				ld a,(hl)
0039AC CB3F                B   366    				srl a
0039AE CB3F                B   367    				srl a
0039B0 CB3F                B   368    				srl a
0039B2 CB3F                B   369    				srl a
0039B4 C630                B   370    				add a,30h						0039B6 12                  B   371    				ld (de),a
0039B7 13                  B   372    				inc de
0039B8 13                  B   373    				inc de
0039B9 7E                  B   374    				ld a,(hl)
0039BA E60F                B   375    				and 0fh
0039BC C630                B   376    				add a,30h
0039BE 12                  B   377    				ld (de),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039BF 13                  B   378    				inc de
0039C0 13                  B   379    				inc de
0039C1 13                  B   380    				inc de
0039C2 13                  B   381    				inc de
0039C3 13                  B   382    				inc de
0039C4 23                  B   383    				inc hl
0039C5 0604                B   384    				ld b,4
0039C7 7E                  B   385    sd_snulp		ld a,(hl)						0039C8 CB3F                B   386    				srl a
0039CA CB3F                B   387    				srl a
0039CC CB3F                B   388    				srl a
0039CE CB3F                B   389    				srl a
0039D0 C630                B   390    				add a,30h
0039D2 FE3A                B   391    				cp 3ah
0039D4 38 02               B   392    				jr c,sd_hvl1
0039D6 C607                B   393    				add a,07h
0039D8 12                  B   394    sd_hvl1			ld (de),a
0039D9 13                  B   395    				inc de
0039DA 7E                  B   396    				ld a,(hl)
0039DB E60F                B   397    				and 0fh
0039DD C630                B   398    				add a,30h
0039DF FE3A                B   399    				cp 3ah
0039E1 38 02               B   400    				jr c,sd_hvl2
0039E3 C607                B   401    				add a,07h
0039E5 12                  B   402    sd_hvl2			ld (de),a
0039E6 13                  B   403    				inc de
0039E7 23                  B   404    				inc hl
0039E8 10 DD               B   405    				djnz sd_snulp
                           B   406    				
0039EA 21 C6 66 00         B   407    				ld hl,sector_buffer+20h			0039EE AF                  B   408    				xor a
0039EF C9                  B   409    				ret
                           B   410    
                           B   411    ;----------------------------------------------
                           B   412    ; SD Card READ SECTOR code begins...
                           B   413    ;----------------------------------------------
                           B   414    	
0039F0                     B   415    sd_read_sector_main
                           B   416    
                           B   417    ; 512 bytes are returned in sector buffer
                           B   418    
0039F0 CD 61 3A 00         B   419    				call sd_set_sector_addr
                           B   420    
0039F4 3E51                B   421    				ld a,CMD17						0039F6 CD B2 3A 00         B   422    				call sd_send_command_current_ar
0039FA 28 03               B   423    				jr z,sd_rscr_ok					0039FC 3E21                B   424    sd_bcr_error	ld a,sd_error_bad_command_respo
0039FE C9                  B   425    				ret
                           B   426    
0039FF CD 8A 3A 00         B   427    sd_rscr_ok		call sd_wait_data_token			003A03 28 03               B   428    				jr z,sd_dt_ok					003A05 3E22                B   429    sd_dt_timeout	ld a,sd_error_data_token_timeou
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A07 C9                  B   430    				ret
                           B   431    
003A08 21 A6 66 00         B   432    sd_dt_ok		ld hl,sector_buffer
003A0C CD 30 3B 00         B   433    				call sd_read_513_bytes			003A10 CD 28 3B 00         B   434    				call sd_get_byte
                           B   435    				
003A14 AF                  B   436    				xor a							003A15 C9                  B   437    				ret
                           B   438    
                           B   439    ;----------------------------------------------
                           B   440    ; SD Card WRITE SECTOR code begins...
                           B   441    ;----------------------------------------------
                           B   442    
003A16                     B   443    sd_write_sector_main
                           B   444    	
003A16 CD 61 3A 00         B   445    				call sd_set_sector_addr
                           B   446    
003A1A 3E58                B   447    				ld a,CMD24						003A1C CD B2 3A 00         B   448    				call sd_send_command_current_ar
003A20 20 DA               B   449    				jr nz,sd_bcr_error				                           B   450    				
003A22 CD 9F 3A 00         B   451    				call sd_send_eight_clocks		                           B   452    
003A26 3EFE                B   453    				ld a,0feh
003A28 CD 1B 3B 00         B   454    				call sd_send_byte				                           B   455    
003A2C 21 A6 66 00         B   456    				ld hl,sector_buffer
003A30 CD 5F 3B 00         B   457    				call sd_write_512_bytes			003A34 CD 9F 3A 00         B   458    				call sd_send_eight_clocks		003A38 CD 9F 3A 00         B   459    				call sd_send_eight_clocks		                           B   460    		
003A3C CD 28 3B 00         B   461    				call sd_get_byte				003A40 E61F                B   462    				and 1fh
003A42 CB3F                B   463    				srl a
003A44 FE02                B   464    				cp 02h
003A46 28 03               B   465    				jr z,sd_wr_ok
                           B   466    
003A48 3E24                B   467    sd_write_fail	ld a,sd_error_write_failed
003A4A C9                  B   468    				ret
                           B   469    
003A4B 01FFFF00            B   470    sd_wr_ok		ld bc,65535						003A4F CD 28 3B 00         B   471    sd_wcbsy		call sd_get_byte				003A53 FEFF                B   472    				cp 0ffh
003A55 20 02               B   473    				jr nz,sd_busy
003A57 AF                  B   474    				xor a							003A58 C9                  B   475    				ret
                           B   476    				
003A59 0B                  B   477    sd_busy			dec bc
003A5A 78                  B   478    				ld a,b
003A5B B1                  B   479    				or c
003A5C 20 F1               B   480    				jr nz,sd_wcbsy
                           B   481    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A5E                     B   482    sd_card_busy_timeout
                           B   483    
003A5E 3E23                B   484    				ld a,sd_error_write_timeout
003A60 C9                  B   485    				ret	
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
003A61                     B   489    sd_set_sector_addr
                           B   490    				
003A61 21 52 61 00         B   491    				ld hl,sector_lba0
003A65 4E                  B   492    				ld c,(hl)
003A66 23                  B   493    				inc hl
003A67 5E                  B   494    				ld e,(hl)
003A68 23                  B   495    				inc hl
003A69 56                  B   496    				ld d,(hl)
003A6A 23                  B   497    				inc hl
003A6B 46                  B   498    				ld b,(hl)					; s
                           B   499    
003A6C 3A 1A 3B 00         B   500    				ld a,(sd_card_info)
003A70 E610                B   501    				and 10h
003A72 20 0A               B   502    				jr nz,lbatoargs				; i
003A74 69                  B   503    				ld l,c
003A75 63                  B   504    				ld h,e
003A76 7A                  B   505    				ld a,d						; o
003A77 4029                B   506    				add.sis hl,hl
003A79 8F                  B   507    				adc a,a	
003A7A EB                  B   508    				ex de,hl
003A7B 47                  B   509    				ld b,a
003A7C 0E00                B   510    				ld c,0
003A7E 21 15 3B 00         B   511    lbatoargs		ld hl,cmd_generic_args
003A82 70                  B   512    				ld (hl),b
003A83 23                  B   513    				inc hl
003A84 72                  B   514    				ld (hl),d
003A85 23                  B   515    				inc hl
003A86 73                  B   516    				ld (hl),e
003A87 23                  B   517    				inc hl
003A88 71                  B   518    				ld (hl),c
003A89 C9                  B   519    				ret
                           B   520    	
                           B   521    	
                           B   522    ;----------------------------------------------
                           B   523    
003A8A                     B   524    sd_wait_data_token
                           B   525    
003A8A C5                  B   526    				push bc
003A8B 01401F00            B   527    				ld bc,8000				
003A8F CD 28 3B 00         B   528    sd_wdt			call sd_get_byte			; r
003A93 FEFE                B   529    				cp 0feh
003A95 28 06               B   530    				jr z,sd_gdt
003A97 0B                  B   531    				dec bc
003A98 78                  B   532    				ld a,b
003A99 B1                  B   533    				or c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A9A 20 F3               B   534    				jr nz,sd_wdt
003A9C 0C                  B   535    				inc c						; d
003A9D C1                  B   536    sd_gdt			pop bc
003A9E C9                  B   537    				ret
                           B   538    
                           B   539    ;----------------------------------------------
                           B   540    
003A9F                     B   541    sd_send_eight_clocks
                           B   542    
003A9F 3EFF                B   543    				ld a,0ffh
003AA1 CD 1B 3B 00         B   544    				call sd_send_byte
003AA5 C9                  B   545    				ret
                           B   546    
                           B   547    ;----------------------------------------------
                           B   548    
                           B   549    
003AA6                     B   550    sd_send_command_null_args
                           B   551    
003AA6 21000000            B   552    				ld hl,0
003AAA 22 15 3B 00         B   553    				ld (cmd_generic_args),hl	; c
003AAE 22 16 3B 00         B   554    				ld (cmd_generic_args+1),hl	
                           B   555    				
                           B   556    				
                           B   557    	
003AB2                     B   558    sd_send_command_current_args
                           B   559    	
003AB2 21 14 3B 00         B   560    				ld hl,cmd_generic
003AB6 77                  B   561    				ld (hl),a
                           B   562    
                           B   563    
                           B   564    
003AB7                     B   565    sd_send_command_string
                           B   566    
                           B   567    ; set HL = location of 6 byte command string
                           B   568    ; returns command response in A (ZF set if $00)
                           B   569    
                           B   570    
003AB7 CD 7B 3B 00         B   571    				call sd_select_card				                           B   572    						
003ABB CD 9F 3A 00         B   573    				call sd_send_eight_clocks		                           B   574    				
003ABF C5                  B   575    				push bc
003AC0 0606                B   576    				ld b,6
003AC2 7E                  B   577    sd_sclp			ld a,(hl)
003AC3 CD 1B 3B 00         B   578    				call sd_send_byte				003AC7 23                  B   579    				inc hl
003AC8 10 F8               B   580    				djnz sd_sclp
003ACA C1                  B   581    				pop bc
                           B   582    				
003ACB CD 28 3B 00         B   583    				call sd_get_byte				                           B   584    					
                           B   585    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003ACF                     B   586    sd_wait_valid_response
                           B   587    				
003ACF C5                  B   588    				push bc
003AD0 0600                B   589    				ld b,0
003AD2 CD 28 3B 00         B   590    sd_wncrl		call sd_get_byte				003AD6 CB7F                B   591    				bit 7,a							003AD8 28 02               B   592    				jr z,sd_gcr
003ADA 10 F6               B   593    				djnz sd_wncrl
                           B   594    								
003ADC B7                  B   595    sd_gcr			or a							003ADD C1                  B   596    				pop bc
003ADE C9                  B   597    				ret
                           B   598    				
                           B   599    	
                           B   600    ;----------------------------------------------
                           B   601    
003ADF                     B   602    sd_read_bytes_to_sector_buffer
                           B   603    
003ADF 21 A6 66 00         B   604    				ld hl,sector_buffer
                           B   605    	
003AE3                     B   606    sd_read_bytes
                           B   607    
                           B   608    ; set HL to dest address for data
                           B   609    ; set B to number of bytes required  
                           B   610    
003AE3 E5                  B   611    				push hl
003AE4 CD 28 3B 00         B   612    sd_rblp			call sd_get_byte
003AE8 77                  B   613    				ld (hl),a
003AE9 23                  B   614    				inc hl
003AEA 10 F8               B   615    				djnz sd_rblp
003AEC E1                  B   616    				pop hl
003AED C9                  B   617    				ret
                           B   618    	
                           B   619    ;----------------------------------------------
                           B   620    
                           B   621    ; This data can be placed in ROM:
                           B   622    
003AEE 40000000 0095       B   623    CMD0_string			db 40h,00h,00h,00h,00h,95h
003AF4 48000001 AA87       B   624    CMD8_string			db 48h,00h,00h,01h,aah,87h
003AFA 69400000 0001       B   625    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
003B00 2076782E 7820534E   B   626    sd_vnchars			db " vx.x SN:00000000 ",0,0
003B08 3A303030 30303030 
003B10 30200000 
                           B   627    
                           B   628    
                           B   629    ; The following variables need to be placed in 
                           B   630    
003B14 00                  B   631    cmd_generic			db 00h
003B15 00000000            B   632    cmd_generic_args	db 00h,00h,00h,00h
003B19 01                  B   633    cmd_generic_crc		db 01h
                           B   634    
003B1A 00                  B   635    sd_card_info		db 0	; Bit [4] = CCS (bl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   636    
                           B   637    
                           B   638    ;==============================================
                           B   639    
                           B   640    ;----------------------------------------------
                           B   641    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
003B1B                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003B1B ED3903              C     9    					out0 (port_sdc_data),a
003B1E C5                  C    10    					push bc
003B1F 0E01                C    11    					ld c,port_hw_flags
003B21 ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
003B24 20 FB               C    13    					jr nz,sd_wb_loop			003B26 C1                  C    14    					pop bc
003B27 C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
003B28                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
003B28 CD 9F 3A 00         C    23    					call sd_send_eight_clocks
003B2C ED3803              C    24    					in0 a,(port_sdc_data)
003B2F C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
003B30                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
003B30 C5                  C    35    					push bc
003B31 D5                  C    36    					push de
003B32 1EFF                C    37    					ld e,0ffh
003B34 ED1903              C    38    					out0 (port_sdc_data),e		003B37 0E01                C    39    					ld c,port_hw_flags			003B39 0600                C    40    					ld b,0						                           C    41    
003B3B ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
003B3E 20 FB               C    43    					jr nz,sd_wser_loop1			003B40 DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003B42 ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		003B45 77                  C    47    					ld (hl),a					003B46 23                  C    48    					inc hl						                           C    49    					
003B47 ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
003B4A 20 FB               C    51    					jr nz,sd_wser_loop2			003B4C DB03                C    52    					in a,(port_sdc_data)		                           C    53    												003B4E ED1903              C    54    					out0 (port_sdc_data),e		003B51 77                  C    55    					ld (hl),a					003B52 23                  C    56    					inc hl						                           C    57    					
003B53 ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
003B56 20 FB               C    59    					jr nz,sd_wser_loop3			003B58 DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
003B5A 10 E6               C    62    					djnz sd_512_loop
003B5C D1                  C    63    					pop de
003B5D C1                  C    64    					pop bc
003B5E C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
003B5F                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
003B5F 0E01                C    74    					ld c,port_hw_flags			003B61 0600                C    75    					ld b,0						003B63 7E                  C    76    					ld a,(hl)
003B64 ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
003B67 23                  C    78    					inc hl
003B68 7E                  C    79    					ld a,(hl)
003B69 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
003B6C 20 FB               C    81    					jr nz,sd_wser_loop4			003B6E ED3903              C    82    					out0 (port_sdc_data),a
003B71 23                  C    83    					inc hl
003B72 7E                  C    84    					ld a,(hl)
003B73 ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
003B76 20 FB               C    86    					jr nz,sd_wser_loop5
003B78 10 EA               C    87    					djnz sd_wr512_loop
003B7A C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
003B7B F5                  C    95    sd_select_card		push af
003B7C 3E02                C    96    					ld a,00h+(1<<sdc_cs)		003B7E ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003B81 F1                  C    98    					pop af
003B82 C9                  C    99    					ret
                           C   100    
                           C   101    
003B83 F5                  C   102    sd_deselect_card	push af
003B84 3E82                C   103    					ld a,080h+(1<<sdc_cs)		003B86 ED3902              C   104    					out0 (port_sdc_ctrl),a
003B89 CD 9F 3A 00         C   105    					call sd_send_eight_clocks	003B8D F1                  C   106    					pop af
003B8E C9                  C   107    					ret
                           C   108    
                           C   109    
003B8F F5                  C   110    sd_power_on			push af
003B90 3A040000            C   111    					ld a,(1<<sdc_speed)			003B94 ED3902              C   112    					out0 (port_sdc_ctrl),a		003B97 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
003B99 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
003B9B F5                  C   117    sd_power_off		push af
003B9C 3E01                C   118    					ld a,00h+(1<<sdc_power)		003B9E 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
003BA0 F5                  C   122    sd_spi_port_fast	push af
003BA1 3E84                C   123    					ld a,80h+(1<<sdc_speed)		003BA3 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   643    
                           B   644    ;----------------------------------------------
                           A  3238    	
                           A  3239    ; Additional storage device driver source can b
                           A  3240    ; Also add the driver's PROSE header address la
                           A  3241    
003BA5 D03700              A  3242    driver_table		dw24 sd_card_driver	; Stora
003BA8 000000              A  3243    					dw24 0 				; Stora
003BAB 000000              A  3244    					dw24 0				; Stora
003BAE 000000              A  3245    					dw24 0				; Stora
                           A  3246    					
003BB1 000000              A  3247    					dw24 0				; Essen
                           A  3248    					
                           A  3249    ;----------------------------------------------
                           A  3250    ; IO routines
                           A  3251    ;----------------------------------------------
                           A  3252    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BB4                     B     5    set_irq_vector
                           B     6    
003BB4 AF                  B     7    				xor a
003BB5 ED47                B     8    				ld i,a
003BB7 3EC3                B     9    				ld a,c3h						003BB9 32320000            B    10    				ld (032h),a	
003BBD 21 EF 3B 00         B    11    				ld hl,int_routine				003BC1 22330000            B    12    				ld (033h),hl
003BC5 C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003BC6 21 BA 60 00         B    17    enable_os_irqs	ld hl,devices_connected			003BCA CB46                B    18    				bit 0,(hl)
003BCC C4 D7 3B 00         B    19    				call nz,enable_kb_irq
003BD0 CB4E                B    20    				bit 1,(hl)
003BD2 C4 DD 3B 00         B    21    				call nz,enable_ms_irq
003BD6 C9                  B    22    				ret
                           B    23    
                           B    24    
003BD7 3E81                B    25    enable_kb_irq	ld a,10000001b
003BD9 ED3905              B    26    				out0 (port_irq_ctrl),a			003BDC C9                  B    27    				ret
                           B    28    
003BDD 3E82                B    29    enable_ms_irq	ld a,10000010b
003BDF ED3905              B    30    				out0 (port_irq_ctrl),a			003BE2 C9                  B    31    				ret
                           B    32    
003BE3 3E02                B    33    disable_ms_irq	ld a,00000010b
003BE5 ED3905              B    34    				out0 (port_irq_ctrl),a			003BE8 C9                  B    35    				ret
                           B    36    
003BE9 3E3F                B    37    disable_irqs	ld a,00111111b
003BEB ED3905              B    38    				out0 (port_irq_ctrl),a			003BEE C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003BEF                     B    44    int_routine
003BEF F5                  B    45    				push af							003BF0 ED3807              B    46    				in0 a,(port_ps2_ctrl)			003BF3 CB67                B    47    				bit 4,a
003BF5 C4 07 3C 00         B    48    				call nz,kb_interrupt_handler
003BF9 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003BFC CB6F                B    50    				bit 5,a
003BFE C4 A9 3C 00         B    51    				call nz,ms_interrupt_handler
003C02 F1                  B    52    				pop af
                           B    53    
003C03 FB                  B    54    				ei								003C04 5BED4D              B    55    				reti.l							                           B    56    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003C07                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003C07 E5                  B    77    				push hl							003C08 C5                  B    78    				push bc
                           B    79    				
003C09 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003C0C 47                  B    81    				ld b,a
                           B    82    
003C0D 3A 88 62 00         B    83    				ld a,(key_release_mode)
003C11 B7                  B    84    				or a
003C12 28 20               B    85    				jr z,key_pressed
                           B    86    			
003C14 78                  B    87    				ld a,b							003C15 FEE0                B    88    				cp 0e0h							003C17 28 61               B    89    				jr z,kirq_done	
003C19 FEE1                B    90    				cp 0e1h
003C1B 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003C1D CD 84 3C 00         B    93    				call qualifiers					003C21 7D                  B    94    				ld a,l
003C22 2F                  B    95    				cpl
003C23 6F                  B    96    				ld l,a
003C24 3A 8A 62 00         B    97    				ld a,(key_mod_flags)
003C28 A5                  B    98    				and l							003C29 32 8A 62 00         B    99    				ld (key_mod_flags),a
003C2D AF                  B   100    				xor a
003C2E 32 88 62 00         B   101    				ld (key_release_mode),a
003C32 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003C34 78                  B   105    key_pressed		ld a,b							003C35 FEE0                B   106    				cp 0e0h							003C37 28 41               B   107    				jr z,kirq_done	
003C39 FEE1                B   108    				cp 0e1h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C3B 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003C3D FEF0                B   111    				cp 0f0h							003C3F 20 08               B   112    				jr nz,not_krel
003C41 3E01                B   113    				ld a,1							003C43 32 88 62 00         B   114    				ld (key_release_mode),a			003C47 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003C49 CD 84 3C 00         B   118    not_krel		call qualifiers					003C4D 3A 8A 62 00         B   119    				ld a,(key_mod_flags)			003C51 B5                  B   120    				or l
003C52 32 8A 62 00         B   121    				ld (key_mod_flags),a			003C56 68                  B   122    				ld l,b
003C57 01000000            B   123    				ld bc,0
003C5B 3A 86 62 00         B   124    				ld a,(key_buf_wr_idx)
003C5F 4F                  B   125    				ld c,a
003C60 7D                  B   126    				ld a,l
003C61 21 66 62 00         B   127    				ld hl,scancode_buffer
003C65 09                  B   128    				add hl,bc
003C66 77                  B   129    				ld (hl),a						003C67 0E10                B   130    				ld c,16
003C69 09                  B   131    				add hl,bc
003C6A 3A 8A 62 00         B   132    				ld a,(key_mod_flags)			003C6E 77                  B   133    				ld (hl),a	
003C6F 3A 86 62 00         B   134    				ld a,(key_buf_wr_idx)
003C73 3C                  B   135    				inc a
003C74 E60F                B   136    				and 15
003C76 32 86 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003C7A ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003C7D CB67                B   140    				bit 4,a	
003C7F 20 88               B   141    				jr nz,key_loop
                           B   142    
003C81 C1                  B   143    				pop bc
003C82 E1                  B   144    				pop hl
003C83 C9                  B   145    				ret
                           B   146    
                           B   147    
003C84 2E40                B   148    qualifiers		ld l,040h		;apps
003C86 FE2F                B   149    				cp 02fh
003C88 C8                  B   150    				ret z
                           B   151    			
003C89 2E20                B   152    				ld l,020h		;r gui
003C8B FE27                B   153    				cp 027h
003C8D C8                  B   154    				ret z
                           B   155    			
003C8E 2E10                B   156    				ld l,010h		;r shift
003C90 FE59                B   157    				cp 059h
003C92 C8                  B   158    				ret z
                           B   159    			
003C93 2E08                B   160    				ld l,08h		; alt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C95 FE11                B   161    				cp 011h
003C97 C8                  B   162    				ret z
                           B   163    			
003C98 2E04                B   164    				ld l,04h		; l gui
003C9A FE1F                B   165    				cp 01fh
                           B   166    			
003C9C 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003C9E FE14                B   168    				cp 14h
003CA0 C8                  B   169    				ret z
                           B   170    			
003CA1 2E01                B   171    				ld l,01h		;l shift
003CA3 FE12                B   172    				cp 12h
003CA5 C8                  B   173    				ret z
                           B   174    				
003CA6 2E00                B   175    				ld l,0
003CA8 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003CA9                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003CA9 C5                  B   198    				push bc							003CAA D5                  B   199    				push de							003CAB E5                  B   200    				push hl							                           B   201    							
003CAC 11000000            B   202    ms_loop			ld de,0		
003CB0 3A 93 62 00         B   203    				ld a,(mouse_packet_index)		003CB4 5F                  B   204    				ld e,a
003CB5 21 8F 62 00         B   205    				ld hl,mouse_packet	
003CB9 19                  B   206    				add hl,de
003CBA ED3806              B   207    				in0 a,(port_mouse_data)
003CBD 77                  B   208    				ld (hl),a
                           B   209    								
003CBE 21 8E 62 00         B   210    				ld hl,mouse_packet_size
003CC2 1C                  B   211    				inc e							003CC3 7B                  B   212    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003CC4 BE                  B   213    				cp (hl)
003CC5 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003CC7 3A 8F 62 00         B   216    				ld a,(mouse_packet)				003CCB 4F                  B   217    				ld c,a	
003CCC E607                B   218    				and 0111b
003CCE 32 94 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003CD2 11000000            B   221    				ld de,0							003CD6 CB61                B   222    				bit 4,c
003CD8 28 01               B   223    				jr z,mxsignpos
003CDA 1B                  B   224    				dec de
003CDB 3A 90 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003CDF 5F                  B   226    				ld e,a
003CE0 2A 95 62 00         B   227    				ld hl,(mouse_disp_x)
003CE4 19                  B   228    				add hl,de
003CE5 22 95 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003CE9 11000000            B   231    				ld de,0							003CED CB69                B   232    				bit 5,c
003CEF 28 01               B   233    				jr z,mysignpos
003CF1 1B                  B   234    				dec de
003CF2 3A 91 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003CF6 5F                  B   236    				ld e,a
003CF7 2A 98 62 00         B   237    				ld hl,(mouse_disp_y)			003CFB AF                  B   238    				xor a							003CFC ED52                B   239    				sbc hl,de
003CFE 22 98 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003D02 21 92 62 00         B   242    				ld hl,mouse_packet+3			003D06 3A 9B 62 00         B   243    				ld a,(mouse_wheel)
003D0A 86                  B   244    				add a,(hl)
003D0B 32 9B 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003D0F 3E01                B   247    				ld a,1
003D11 32 9C 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003D15 AF                  B   250    				xor a
003D16 32 93 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003D1A ED3807              B   253    				in0 a,(port_ps2_ctrl)			003D1D CB6F                B   254    				bit 5,a
003D1F 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003D21 E1                  B   257    				pop hl
003D22 D1                  B   258    				pop de
003D23 C1                  B   259    				pop bc
003D24 C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.03
                           B   264    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   265    
003D25 F5                  B   266    nmi_routine		push af							003D26 ED3805              B   267    				in0 a,(port_irq_flags)			003D29 CB77                B   268    				bit 6,a							003D2B 20 09               B   269    				jr nz,freeze
003D2D 3E20                B   270    				ld a,00100000b					003D2F ED3909              B   271    				out0 (port_clear_flags),a		003D32 F1                  B   272    				pop af
003D33 5BED45              B   273    				retn.l
                           B   274    				
003D36 F1                  B   275    freeze			pop af
003D37 CD 7B 13 00         B   276    				call os_store_CPU_regs
                           B   277    				
003D3B 21000000            B   278    				ld hl,0
003D3F 39                  B   279    				add hl,sp
003D40 7E                  B   280    				ld a,(hl)						003D41 E601                B   281    				and 1
003D43 32 EB 60 00         B   282    				ld (store_adl),a
003D47 20 0A               B   283    				jr nz,adl_freeze
003D49 23                  B   284    				inc hl
003D4A 5E                  B   285    				ld e,(hl)						003D4B 23                  B   286    				inc hl
003D4C 56                  B   287    				ld d,(hl)
003D4D CD FE 15 00         B   288    				call mbase_de
003D51 18 02               B   289    				jr got_pc
                           B   290    				
003D53 33                  B   291    adl_freeze		inc sp
003D54 D1                  B   292    				pop de							003D55 ED53 E1 60 00       B   293    got_pc			ld (store_pc),de				                           B   294    				
003D5A CD 87 3D 00         B   295    				call disable_button_nmi
003D5E 3E40                B   296    				ld a,01000000b
003D60 ED3909              B   297    				out0 (port_clear_flags),a		003D63 3E01                B   298    				ld a,1
003D65 32 B8 60 00         B   299    				ld (frozen),a
003D69 C3 56 0A 00         B   300    				jp os_cold_start				                           B   301    
                           B   302    ;----------------------------------------------
                           B   303    
                           B   304    ;nmi_routine
                           B   305    ;
                           B   306    ;				push af							                           B   307    ;				push bc
                           B   308    ;				ld a,0ffh
                           B   309    ;				ld (hw_palette),a
                           B   310    ;				ld b,0
                           B   311    ;nmi_testlp2		djnz nmi_testlp2
                           B   312    ;				ld a,0
                           B   313    ;				ld (hw_palette),a
                           B   314    ;				pop bc
                           B   315    ;				ld a,01100000b
                           B   316    ;				out0 (port_clear_flags)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   317    ;				pop af
                           B   318    ;				retn.l							                           B   319    
                           B   320    ;----------------------------------------------
                           B   321    
003D6D                     B   322    set_nmi_vector
                           B   323    
003D6D 3EC3                B   324    				ld a,0c3h						003D6F 32660000            B   325    				ld (066h),a
003D73 21 25 3D 00         B   326    				ld hl,nmi_routine				003D77 22670000            B   327    				ld (067h),hl
003D7B C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
003D7C                     B   332    enable_button_nmi
                           B   333    
003D7C 3E40                B   334    				ld a,01000000b
003D7E ED3909              B   335    				out0 (port_clear_flags),a		003D81 3EC0                B   336    				ld a,11000000b					003D83 ED3905              B   337    				out0 (port_irq_ctrl),a			003D86 C9                  B   338    				ret
                           B   339    
                           B   340    
003D87                     B   341    disable_button_nmi
                           B   342    
003D87 3E40                B   343    				ld a,01000000b					003D89 ED3905              B   344    				out0 (port_irq_ctrl),a
003D8C C9                  B   345    				ret
                           B   346    
                           B   347    
003D8D                     B   348    disable_all_nmis
                           B   349    
003D8D 3E60                B   350    				ld a,01100000b					003D8F ED3905              B   351    				out0 (port_irq_ctrl),a
003D92 C9                  B   352    				ret
                           B   353    				
                           B   354    ;----------------------------------------------
                           B   355    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003D93                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003D93 C5                  B    10    				push bc
003D94 3A 4B 5F 00         B    11    				ld a,(serial_timeout)
003D98 47                  B    12    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003D99 3ECC                B    13    rx_set_timer	ld a,cch
003D9B ED3981              B    14    				out0 (TMR0_RR_L),a				003D9E 3E0C                B    15    				ld a,0ch
003DA0 ED3982              B    16    				out0 (TMR0_RR_H),a				003DA3 3E03                B    17    				ld a,00000011b					003DA5 ED3980              B    18    				out0 (TMR0_CTL),a				003DA8 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003DAB 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003DAD ED7401              B    22    				tstio 1							003DB0 20 0E               B    23    				jr nz,rx_in_buffer
003DB2 AF                  B    24    				xor a
003DB3 B0                  B    25    				or b
003DB4 28 13               B    26    				jr z,rx_time_out
003DB6 0E80                B    27    				ld c,TMR0_CTL	
003DB8 ED7480              B    28    				tstio 128						003DBB 28 EE               B    29    				jr z,rx_byte_lp		
003DBD 05                  B    30    				dec b
003DBE 18 D9               B    31    				jr rx_set_timer
                           B    32    
003DC0 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003DC4 ED78                B    34    				in a,(bc)						003DC6 C1                  B    35    				pop bc
003DC7 BF                  B    36    				cp a							003DC8 C9                  B    37    				ret
                           B    38    
003DC9 C1                  B    39    rx_time_out		pop bc
003DCA 3E83                B    40    				ld a,083h						003DCC B7                  B    41    				or a							003DCD C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003DCE                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003DCE C5                  B    52    				push bc
003DCF 0EC5                B    53    				ld c,UART0_LSR					003DD1 ED7420              B    54    rs232_swait		tstio 020h						003DD4 28 FB               B    55    				jr z,rs232_swait
003DD6 01C00000            B    56    				ld bc,UART0_THR
003DDA ED79                B    57    				out (c),a						003DDC C1                  B    58    				pop bc
003DDD C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003DDE                     B    63    send_serial_bytes
                           B    64    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003DDE 7A                  B    68    				ld a,d
003DDF CD CE 3D 00         B    69    				call send_serial_byte
003DE3 7B                  B    70    				ld a,e
003DE4 CD CE 3D 00         B    71    				call send_serial_byte
003DE8 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003DE9                     B    76    hwsc_flush_serial_buffer
                           B    77    
003DE9 C5                  B    78    				push bc
003DEA 01C00000            B    79    				ld bc,UART0_RBR
003DEE ED78                B    80    				in a,(bc)						003DF0 C1                  B    81    				pop bc
003DF1 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003DF2                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003DF2 E603                B    15    				and 3
003DF4 32 1C 5F 00         B    16    				ld (video_doubling),a
003DF8 79                  B    17    				ld a,c
003DF9 32 1D 5F 00         B    18    				ld (charmap_rows),a
003DFD 78                  B    19    				ld a,b
003DFE 32 20 5F 00         B    20    				ld (charmap_columns),a
003E02 21000000            B    21    				ld hl,0
003E06 69                  B    22    				ld l,c
003E07 60                  B    23    				ld h,b
003E08 ED6C                B    24    				mlt hl
003E0A 29                  B    25    				add hl,hl
003E0B 22 C4 60 00         B    26    				ld (charmap_size),hl
003E0F 11004080            B    27    				ld de,charmap_addr
003E13 19                  B    28    				add hl,de
003E14 22 BE 60 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E18 CD 1E 3E 00         B    31    				call os_set_video_hw_regs
003E1C AF                  B    32    				xor a
003E1D C9                  B    33    				ret
                           B    34    				
                           B    35    
003E1E                     B    36    os_set_video_hw_regs
                           B    37    
003E1E 3A 1C 5F 00         B    38    				ld a,(video_doubling)
003E22 CB27                B    39    				sla a
003E24 F618                B    40    				or 00011000b
003E26 320018FF            B    41    				ld (video_control),a			003E2A AF                  B    42    				xor a
003E2B 320218FF            B    43    				ld (bgnd_palette_select),a
003E2F 3E63                B    44    				ld a,99
003E31 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003E35 DD210010 FF         B    47    				ld ix,tilemap_parameters		003E3A 21004080            B    48    				ld hl,charmap_addr
003E3E DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003E41 21020000            B    51    				ld hl,2
003E45 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
003E48 21000008            B    54    				ld hl,80000h
003E4C 11000000            B    55    				ld de,0
003E50 3A 20 5F 00         B    56    				ld a,(charmap_columns)
003E54 5F                  B    57    				ld e,a
003E55 AF                  B    58    				xor a
003E56 ED52                B    59    				sbc hl,de
003E58 AF                  B    60    				xor a
003E59 ED52                B    61    				sbc hl,de
003E5B DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003E5E 21000000            B    64    				ld hl,0
003E62 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003E65 3A 20 5F 00         B    67    				ld a,(charmap_columns)
003E69 3D                  B    68    				dec a
003E6A DD7710              B    69    				ld (ix+10h),a					                           B    70    				
003E6D 3E00                B    71    				ld a,0
003E6F DD7711              B    72    				ld (ix+11h),a					003E72 DD7712              B    73    				ld (ix+12h),a					                           B    74    
003E75 21 F7 5E 00         B    75    				ld hl,pen_palette
003E79 CD 83 3E 00         B    76    				call hswc_set_ui_colours
                           B    77    				
003E7D CD AE 40 00         B    78    				call hwsc_disable_sprites
                           B    79    				
003E81 AF                  B    80    				xor a							003E82 C9                  B    81    				ret
                           B    82    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    83    ;----------------------------------------------
                           B    84    				
003E83                     B    85    hswc_set_ui_colours
                           B    86    
003E83 110000FF            B    87    				ld de,hw_palette
003E87 01200000            B    88    				ld bc,16*2
003E8B EDB0                B    89    				ldir
003E8D AF                  B    90    				xor a							003E8E C9                  B    91    				ret
                           B    92    
                           B    93    
                           B    94    ;----------------------------------------------
                           B    95    
003E8F                     B    96    hwsc_clear_screen
                           B    97    
003E8F 21004080            B    98    				ld hl,charmap_addr				003E93 3620                B    99    				ld (hl),32						003E95 23                  B   100    				inc hl
003E96 CD B5 3E 00         B   101    				call get_fill_attr
003E9A 77                  B   102    				ld (hl),a
003E9B 23                  B   103    				inc hl
003E9C EB                  B   104    				ex de,hl
003E9D 21004080            B   105    				ld hl,charmap_addr
003EA1 ED4B C4 60 00       B   106    				ld bc,(charmap_size)
003EA6 0B                  B   107    				dec bc
003EA7 0B                  B   108    				dec bc
003EA8 EDB0                B   109    				ldir
                           B   110    				
003EAA 01000000            B   111    				ld bc,0
003EAE ED43 56 61 00       B   112    				ld (cursor_y),bc
003EB3 AF                  B   113    				xor a							003EB4 C9                  B   114    				ret
                           B   115    				
                           B   116    				
003EB5 D5                  B   117    get_fill_attr	push de
003EB6 3A F3 5E 00         B   118    				ld a,(current_pen)
003EBA E60F                B   119    				and 0fh
003EBC 5F                  B   120    				ld e,a
003EBD 3A F5 5E 00         B   121    				ld a,(background_colour)
003EC1 0F                  B   122    				rrca
003EC2 0F                  B   123    				rrca
003EC3 0F                  B   124    				rrca
003EC4 0F                  B   125    				rrca
003EC5 E6F0                B   126    				and 0f0h
003EC7 B3                  B   127    				or e
003EC8 D1                  B   128    				pop de
003EC9 C9                  B   129    				ret
                           B   130    				
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003ECA                     B   134    hwsc_scroll_up	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   135    				
003ECA C5                  B   136    				push bc
003ECB D5                  B   137    				push de
003ECC E5                  B   138    				push hl
                           B   139    
003ECD 2A C4 60 00         B   140    				ld hl,(charmap_size)
003ED1 ED5B 20 5F 00       B   141    				ld de,(charmap_columns)
003ED6 AF                  B   142    				xor a
003ED7 ED52                B   143    				sbc hl,de
003ED9 ED52                B   144    				sbc hl,de						003EDB E5                  B   145    				push hl
003EDC C1                  B   146    				pop bc							003EDD 21004080            B   147    				ld hl,charmap_addr
003EE1 E5                  B   148    				push hl
003EE2 19                  B   149    				add hl,de
003EE3 19                  B   150    				add hl,de
003EE4 D1                  B   151    				pop de
003EE5 EDB0                B   152    				ldir
                           B   153    				
003EE7 EB                  B   154    				ex de,hl						003EE8 E5                  B   155    				push hl
003EE9 3620                B   156    				ld (hl),32
003EEB 23                  B   157    				inc hl
003EEC CD B5 3E 00         B   158    				call get_fill_attr
003EF0 77                  B   159    				ld (hl),a
003EF1 2A 20 5F 00         B   160    				ld hl,(charmap_columns)
003EF5 2B                  B   161    				dec hl
003EF6 29                  B   162    				add hl,hl
003EF7 E5                  B   163    				push hl
003EF8 C1                  B   164    				pop bc
003EF9 E1                  B   165    				pop hl
003EFA E5                  B   166    				push hl
003EFB D1                  B   167    				pop de
003EFC 13                  B   168    				inc de
003EFD 13                  B   169    				inc de
003EFE EDB0                B   170    				ldir
                           B   171    				
003F00 E1                  B   172    				pop hl
003F01 D1                  B   173    				pop de
003F02 C1                  B   174    				pop bc
003F03 AF                  B   175    				xor a							003F04 C9                  B   176    				ret
                           B   177    
                           B   178    
                           B   179    ;----------------------------------------------
                           B   180    
003F05                     B   181    hwsc_plot_char
                           B   182    
                           B   183    ; Set:
                           B   184    ; ----
                           B   185    ; A = ascii char
                           B   186    ; B = x character coordinate 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   187    ; C = y character coordinate
                           B   188    
003F05 E5                  B   189    				push hl							003F06 D5                  B   190    				push de
003F07 F5                  B   191    				push af
                           B   192    
003F08 3A 1D 5F 00         B   193    				ld a,(charmap_rows)				003F0C 3D                  B   194    				dec a
003F0D B9                  B   195    				cp c							003F0E 38 08               B   196    				jr c,win_err
003F10 3A 20 5F 00         B   197    				ld a,(charmap_columns)
003F14 3D                  B   198    				dec a
003F15 B8                  B   199    				cp b
003F16 30 07               B   200    				jr nc,win_ok
003F18 F1                  B   201    win_err			pop af
003F19 D1                  B   202    				pop de
003F1A E1                  B   203    				pop hl
003F1B 3E88                B   204    				ld a,88h						003F1D B7                  B   205    				or a
003F1E C9                  B   206    				ret
                           B   207    				
003F1F 2A 20 5F 00         B   208    win_ok			ld hl,(charmap_columns)			003F23 61                  B   209    				ld h,c
003F24 ED6C                B   210    				mlt hl
003F26 11000000            B   211    				ld de,0
003F2A 58                  B   212    				ld e,b
003F2B 19                  B   213    				add hl,de
003F2C 29                  B   214    				add hl,hl
003F2D 11004080            B   215    				ld de,charmap_addr
003F31 19                  B   216    				add hl,de
003F32 F1                  B   217    				pop af
003F33 77                  B   218    				ld (hl),a
003F34 23                  B   219    				inc hl
003F35 3A F3 5E 00         B   220    				ld a,(current_pen)
003F39 77                  B   221    				ld (hl),a
003F3A D1                  B   222    				pop de
003F3B E1                  B   223    				pop hl
003F3C AF                  B   224    				xor a
003F3D C9                  B   225    				ret
                           B   226    				
                           B   227    				
                           B   228    ;----------------------------------------------
                           B   229    
003F3E                     B   230    hwsc_remove_cursor
                           B   231    
003F3E 3A 19 5F 00         B   232    				ld a,(cursor_present)			003F42 B7                  B   233    				or a
003F43 C8                  B   234    				ret z
003F44 ED4B 56 61 00       B   235    				ld bc,(cursor_y)
003F49 CD AC 3F 00         B   236    				call hwsc_get_charmap_addr_xy
003F4D 3A 18 5F 00         B   237    				ld a,(char_under_cursor)
003F51 77                  B   238    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F52 AF                  B   239    				xor a
003F53 32 19 5F 00         B   240    				ld (cursor_present),a
003F57 C9                  B   241    				ret
                           B   242    
                           B   243    
003F58                     B   244    hwsc_draw_cursor
                           B   245    								
003F58 3A 19 5F 00         B   246    				ld a,(cursor_present)			003F5C B7                  B   247    				or a
003F5D C0                  B   248    				ret nz
003F5E 3C                  B   249    				inc a
003F5F 32 19 5F 00         B   250    				ld (cursor_present),a
                           B   251    				
003F63 ED4B 56 61 00       B   252    				ld bc,(cursor_y)
003F68 CD AC 3F 00         B   253    				call hwsc_get_charmap_addr_xy
003F6C 7E                  B   254    				ld a,(hl)						003F6D 32 18 5F 00         B   255    				ld (char_under_cursor),a		003F71 36FF                B   256    				ld (hl),ffh						                           B   257    				
003F73 11400000            B   258    				ld de,64						003F77 57                  B   259    				ld d,a
003F78 ED5C                B   260    				mlt de
003F7A FD210000 80         B   261    				ld iy,vram_a_addr				003F7F FD19                B   262    				add iy,de						                           B   263    				
003F81 21400000            B   264    				ld hl,64
003F85 3A 1B 5F 00         B   265    				ld a,(cursor_image_char)
003F89 67                  B   266    				ld h,a
003F8A ED6C                B   267    				mlt hl
003F8C 11000080            B   268    				ld de,vram_a_addr
003F90 19                  B   269    				add hl,de
                           B   270    				
003F91 DD21C03F 80         B   271    				ld ix,vram_a_addr+03fc0h
003F96 11080000            B   272    				ld de,8
003F9A 0608                B   273    				ld b,8
003F9C FD7E00              B   274    cur_loop		ld a,(iy)						003F9F AE                  B   275    				xor (hl)						003FA0 DD7700              B   276    				ld (ix),a						003FA3 FD19                B   277    				add iy,de
003FA5 DD19                B   278    				add ix,de
003FA7 19                  B   279    				add hl,de
003FA8 10 F2               B   280    				djnz cur_loop
                           B   281    				
003FAA AF                  B   282    				xor a
003FAB C9                  B   283    				ret
                           B   284    				
                           B   285    
                           B   286    ;----------------------------------------------
                           B   287    
003FAC                     B   288    hwsc_get_charmap_addr_xy
                           B   289    
                           B   290    ; returns address of charmap in xHL for charact
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   291    ; and attrmap in xDE
                           B   292    				
003FAC 2A 20 5F 00         B   293    				ld hl,(charmap_columns)			003FB0 61                  B   294    				ld h,c
003FB1 ED6C                B   295    				mlt hl
003FB3 11000000            B   296    				ld de,0
003FB7 58                  B   297    				ld e,b
003FB8 19                  B   298    				add hl,de
003FB9 29                  B   299    				add hl,hl
003FBA 11004080            B   300    				ld de,charmap_addr
003FBE 19                  B   301    				add hl,de
003FBF E5                  B   302    				push hl
003FC0 D1                  B   303    				pop de
003FC1 13                  B   304    				inc de
003FC2 AF                  B   305    				xor a
003FC3 C9                  B   306    				ret
                           B   307    								
                           B   308    ;----------------------------------------------
                           B   309    
003FC4                     B   310    hwsc_chars_left
                           B   311    
                           B   312    ; moves characters (in character map) on the cu
                           B   313    
003FC4 E5                  B   314    				push hl
003FC5 D5                  B   315    				push de
003FC6 C5                  B   316    				push bc
                           B   317    				
003FC7 2A 20 5F 00         B   318    				ld hl,(charmap_columns)
003FCB 3A 56 61 00         B   319    				ld a,(cursor_y)
003FCF 67                  B   320    				ld h,a
003FD0 ED6C                B   321    				mlt hl
003FD2 11000000            B   322    				ld de,0
003FD6 58                  B   323    				ld e,b
003FD7 19                  B   324    				add hl,de
003FD8 29                  B   325    				add hl,hl
003FD9 11004080            B   326    				ld de,charmap_addr
003FDD 19                  B   327    				add hl,de
                           B   328    				
003FDE 3A 20 5F 00         B   329    				ld a,(charmap_columns)
003FE2 90                  B   330    				sub b
003FE3 CB27                B   331    				sla a
003FE5 01000000            B   332    				ld bc,0
003FE9 4F                  B   333    				ld c,a
003FEA E5                  B   334    				push hl
003FEB D1                  B   335    				pop de
003FEC 1B                  B   336    				dec de
003FED 1B                  B   337    				dec de
003FEE EDB0                B   338    				ldir
                           B   339    				
003FF0 3E20                B   340    				ld a,32						;pu
003FF2 12                  B   341    				ld (de),a
003FF3 13                  B   342    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FF4 CD B5 3E 00         B   343    				call get_fill_attr
003FF8 12                  B   344    				ld (de),a
                           B   345    				
003FF9 C1                  B   346    				pop bc
003FFA D1                  B   347    				pop de
003FFB E1                  B   348    				pop hl
003FFC C9                  B   349    				ret
                           B   350    
                           B   351    
                           B   352    ;----------------------------------------------
                           B   353    
                           B   354    
003FFD                     B   355    hwsc_chars_right
                           B   356    
                           B   357    ; moves characters on current line right from c
                           B   358    
003FFD C5                  B   359    				push bc
003FFE D5                  B   360    				push de
003FFF E5                  B   361    				push hl
                           B   362    	
004000 21 57 61 00         B   363    				ld hl,cursor_x				
004004 3A 20 5F 00         B   364    				ld a,(charmap_columns)
004008 3D                  B   365    				dec a
004009 BE                  B   366    				cp (hl)			
00400A 28 30               B   367    				jr z,chright_end
00400C 46                  B   368    				ld b,(hl)
                           B   369    				
00400D 2A 20 5F 00         B   370    				ld hl,(charmap_columns)
004011 3A 56 61 00         B   371    				ld a,(cursor_y)
004015 3C                  B   372    				inc a							004016 67                  B   373    				ld h,a
004017 ED6C                B   374    				mlt hl
004019 29                  B   375    				add hl,hl
00401A 11004080            B   376    				ld de,charmap_addr
00401E 19                  B   377    				add hl,de					
00401F 2B                  B   378    				dec hl							004020 E5                  B   379    				push hl
004021 D1                  B   380    				pop de							004022 2B                  B   381    				dec hl
004023 2B                  B   382    				dec hl							004024 3A 20 5F 00         B   383    				ld a,(charmap_columns)
004028 90                  B   384    				sub b
004029 3D                  B   385    				dec a
00402A CB27                B   386    				sla a
00402C 01000000            B   387    				ld bc,0
004030 4F                  B   388    				ld c,a							004031 EDB8                B   389    				lddr
004033 23                  B   390    				inc hl							004034 3620                B   391    				ld (hl),32
004036 23                  B   392    				inc hl
004037 CD B5 3E 00         B   393    				call get_fill_attr
00403B 77                  B   394    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   395    							
00403C E1                  B   396    chright_end		pop hl	
00403D D1                  B   397    				pop de
00403E C1                  B   398    				pop bc
00403F C9                  B   399    				ret
                           B   400    
                           B   401    ;----------------------------------------------
                           B   402    
                           B   403    
004040                     B   404    hwsc_charline_to_command_string	
                           B   405    				
                           B   406    				
004040 2A 20 5F 00         B   407    				ld hl,(charmap_columns)			004044 3A 56 61 00         B   408    				ld a,(cursor_y)
004048 67                  B   409    				ld h,a
004049 ED6C                B   410    				mlt hl
00404B 29                  B   411    				add hl,hl
00404C 11004080            B   412    				ld de,charmap_addr
004050 19                  B   413    				add hl,de
004051 11 74 61 00         B   414    				ld de,commandstring
004055 0650                B   415    				ld b,max_buffer_chars			004057 7E                  B   416    copy_to_cmdline	ld a,(hl)
004058 12                  B   417    				ld (de),a
004059 13                  B   418    				inc de
00405A 23                  B   419    				inc hl
00405B 23                  B   420    				inc hl
00405C 10 F9               B   421    				djnz copy_to_cmdline
00405E C9                  B   422    				ret
                           B   423    
                           B   424    ;----------------------------------------------
                           B   425    
                           B   426    
00405F C5                  B   427    hwsc_wait_vrt	push bc
                           B   428    
004060 0E01                B   429    				ld c,1
004062 ED0909              B   430    				out0 (port_clear_flags),c
                           B   431    
004065 0E01                B   432    				ld c,port_hw_flags
004067 ED7420              B   433    ewaitvrtlp1		tstio 1<<vrt
00406A 28 FB               B   434    				jr z,ewaitvrtlp1
                           B   435    				
00406C C1                  B   436    				pop bc
00406D BF                  B   437    				cp a							00406E C9                  B   438    				ret
                           B   439    
                           B   440    
                           B   441    ;----------------------------------------------
                           B   442    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B     4    
00406F                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
00406F 3E48                B     9    					ld a,01001000b				004071 ED39AA              B    10    					out0 (CS0_CTL),a
004074 3E00                B    11    					ld a,000h					004076 ED39A8              B    12    					out0 (CS0_LBR),a
004079 3EFF                B    13    					ld a,0ffh	
00407B ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
00407E 3E58                B    16    					ld a,01011000b
004080 ED39AD              B    17    					out0 (CS1_CTL),a			004083 3E00                B    18    					ld a,0
004085 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004088 3EFF                B    23    					ld a,0ffh
00408A ED399F              B    24    					out0 (PC_DDR),a				00408D AF                  B    25    					xor a
00408E ED39A0              B    26    					out0 (PC_ALT1),a
004091 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004094 3EFF                B    29    					ld a,0ffh					004096 ED39A3              B    30    					out0 (PD_DDR),a				004099 AF                  B    31    					xor a	
00409A ED39A4              B    32    					out0 (PD_ALT1),a			00409D 3E0F                B    33    					ld a,00fh				
00409F ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0040A2 ED3892              B    38    					in0 a,(TMR_ISS)
0040A5 E6FC                B    39    					and 11111100b
0040A7 F601                B    40    					or  00000001b
0040A9 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
0040AC AF                  B    43    					xor a
0040AD C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
0040AE                     B    49    hwsc_disable_sprites
                           B    50    
0040AE AF                  B    51    					xor a
0040AF 320118FF            B    52    					ld (sprite_control),a		0040B3 C9                  B    53    					ret
                           B    54    					
                           B    55    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    56    
                           B    57    
0040B4 11000000            B    58    hwsc_get_version	ld de,0
0040B8 0610                B    59    					ld b,16
0040BA 78                  B    60    gethwvlp			ld a,b
0040BB 3D                  B    61    					dec a
0040BC ED3908              B    62    					out0 (port_selector),a		0040BF DB01                B    63    					in a,(port_hw_flags)		0040C1 CB27                B    64    					sla a
0040C3 CB13                B    65    					rl e
0040C5 CB12                B    66    					rl d
0040C7 10 F1               B    67    					djnz gethwvlp				                           B    68    									
0040C9 21350000            B    69    					ld hl,prose_version
0040CD BF                  B    70    					cp a						0040CE C9                  B    71    					ret
                           B    72    
                           B    73    
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    ; Timer related 
                           B    77    ;----------------------------------------------
                           B    78    
0040CF                     B    79    hwsc_time_delay
                           B    80    
                           B    81    ; set DE to 32768Hz ticks to wait
                           B    82    
0040CF CD DB 40 00         B    83    					call set_timeout
0040D3 CD EC 40 00         B    84    twaitlp				call test_timeout
0040D7 28 FA               B    85    					jr z,twaitlp
0040D9 AF                  B    86    					xor a						0040DA C9                  B    87    					ret			
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    
0040DB 7B                  B    91    set_timeout			ld a,e						0040DC ED3981              B    92    					out0 (TMR0_RR_L),a			0040DF 7A                  B    93    					ld a,d
0040E0 ED3982              B    94    					out0 (TMR0_RR_H),a			0040E3 3E03                B    95    					ld a,00000011b				0040E5 ED3980              B    96    					out0 (TMR0_CTL),a			0040E8 ED3880              B    97    					in0 a,(TMR0_CTL)			0040EB C9                  B    98    					ret
                           B    99    			
0040EC ED3880              B   100    test_timeout		in0 a,(TMR0_CTL)			0040EF CB7F                B   101    					bit 7,a
0040F1 C9                  B   102    					ret
                           B   103    			
                           B   104    ;----------------------------------------------
                           B   105    
0040F2                     B   106    hwsc_read_rtc
0040F2 D5                  B   107    					push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040F3 C5                  B   108    					push bc
0040F4 0EE0                B   109    hwsc_rtc_rlp		ld c,RTC_SEC
0040F6 0608                B   110    					ld b,8
0040F8 21 B1 60 00         B   111    					ld hl,time_data
0040FC ED92                B   112    					inimr						0040FE 0EE0                B   113    					ld c,RTC_SEC
004100 0600                B   114    					ld b,0
004102 1E08                B   115    					ld e,8
004104 21 B1 60 00         B   116    					ld hl,time_data
004108 ED78                B   117    timevloop			in a,(bc)					00410A BE                  B   118    					cp (hl)						00410B 20 E7               B   119    					jr nz,hwsc_rtc_rlp			00410D 23                  B   120    					inc hl
00410E 0C                  B   121    					inc c
00410F 1D                  B   122    					dec e
004110 20 F6               B   123    					jr nz,timevloop
004112 21 B1 60 00         B   124    					ld hl,time_data
004116 C1                  B   125    					pop bc
004117 D1                  B   126    					pop de
004118 BF                  B   127    					cp a						004119 C9                  B   128    					ret
                           B   129    
                           B   130    
00411A                     B   131    hwsc_write_rtc	
                           B   132    
                           B   133    ; set HL to location of BCD data for RTC: sec/m
                           B   134    
00411A E5                  B   135    					push hl
00411B C5                  B   136    					push bc
00411C 3E21                B   137    					ld a,00100001b				00411E ED39ED              B   138    					out0 (RTC_CTRL),a
004121 0EE0                B   139    					ld c,RTC_SEC
004123 0608                B   140    					ld b,8
004125 ED93                B   141    					otimr
004127 3E20                B   142    					ld a,00100000b				004129 ED39ED              B   143    					out0 (RTC_CTRL),a
00412C C1                  B   144    					pop bc
00412D E1                  B   145    					pop hl
00412E BF                  B   146    					cp a						00412F C9                  B   147    					ret	
                           B   148    
                           B   149    
                           B   150    ;----------------------------------------------
                           B   151    ; INIT KEYBOARD ROUTINE 
                           B   152    ;----------------------------------------------
                           B   153    
                           B   154    ; ZF set and A = 0 if all OK, else error code i
                           B   155    
004130                     B   156    init_keyboard
                           B   157    
004130 11004000            B   158    			ld de,16384							004134 CD CF 40 00         B   159    			call hwsc_time_delay
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004138 F3                  B   160    			di
004139 CD EE 41 00         B   161    			call purge_keyboard
00413D CD 47 41 00         B   162    			call rs_keyboard
004141 FB                  B   163    			ei
004142 D0                  B   164    			ret nc
004143 3E8B                B   165    			ld a,08bh							004145 B7                  B   166    			or a
004146 C9                  B   167    			ret
                           B   168    			
                           B   169    			
004147                     B   170    rs_keyboard
                           B   171    
004147 3EFF                B   172    			ld a,0ffh
004149 CD 66 41 00         B   173    			call write_to_keyboard
00414D 30 04               B   174    			jr nc,kb_connected
00414F 3E8A                B   175    			ld a,08ah							004151 B7                  B   176    			or a
004152 C9                  B   177    			ret
                           B   178    
004153                     B   179    kb_connected
                           B   180    			
004153 0605                B   181    			ld b,5
004155 C5                  B   182    kb_initlp	push bc
004156 CD D2 41 00         B   183    			call wait_kb_byte					00415A C1                  B   184    			pop bc
00415B D8                  B   185    			ret c
00415C FEAA                B   186    			cp 0aah
00415E 28 04               B   187    			jr z,kb_postok
004160 10 F3               B   188    			djnz kb_initlp						004162 37                  B   189    			scf									004163 C9                  B   190    			ret
                           B   191    			
                           B   192    			
004164 AF                  B   193    kb_postok	xor a
004165 C9                  B   194    			ret
                           B   195    	
                           B   196    	
                           B   197    ;----------------------------------------------
                           B   198    				
004166                     B   199    write_to_keyboard
                           B   200    
                           B   201    ; Put byte to send to keyboard in A
                           B   202    
004166 4F                  B   203    			ld c,a								004167 3E01                B   204    			ld a,01b							004169 ED3907              B   205    			out0 (port_ps2_ctrl),a
                           B   206    
00416C 110A0000            B   207    			ld de,10
004170 CD CF 40 00         B   208    			call hwsc_time_delay				                           B   209    
004174 3E03                B   210    			ld a,11b
004176 ED3907              B   211    			out0 (port_ps2_ctrl),a				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   212    			
004179 3E02                B   213    			ld a,10b
00417B ED3907              B   214    			out0 (port_ps2_ctrl),a				                           B   215    			
00417E CD 4E 43 00         B   216    			call wait_kb_clk_high
                           B   217    			
004182 1601                B   218    			ld d,1								004184 0608                B   219    			ld b,8								004186 CD 21 43 00         B   220    kdoloop		call wait_kb_clk_low	
00418A D8                  B   221    			ret c
00418B AF                  B   222    			xor a
00418C CBCF                B   223    			set 1,a
00418E CB41                B   224    			bit 0,c
004190 28 03               B   225    			jr z,kdbzero
004192 CB8F                B   226    			res 1,a
004194 14                  B   227    			inc d
004195 ED3907              B   228    kdbzero		out0 (port_ps2_ctrl),a				004198 CD 4E 43 00         B   229    			call wait_kb_clk_high
00419C D8                  B   230    			ret c
00419D CB19                B   231    			rr c
00419F 10 E5               B   232    			djnz kdoloop
                           B   233    
0041A1 CD 21 43 00         B   234    			call wait_kb_clk_low
0041A5 D8                  B   235    			ret c
0041A6 AF                  B   236    			xor a
0041A7 CB42                B   237    			bit 0,d
0041A9 20 02               B   238    			jr nz,kparone
0041AB CBCF                B   239    			set 1,a
0041AD ED3907              B   240    kparone		out0 (port_ps2_ctrl),a				0041B0 CD 4E 43 00         B   241    			call wait_kb_clk_high
0041B4 D8                  B   242    			ret c
                           B   243    			
0041B5 CD 21 43 00         B   244    			call wait_kb_clk_low
0041B9 D8                  B   245    			ret c
0041BA AF                  B   246    			xor a
0041BB ED3907              B   247    			out0 (port_ps2_ctrl),a				                           B   248    
0041BE CD 1D 43 00         B   249    			call wait_kb_data_low				0041C2 D8                  B   250    			ret c
0041C3 CD 21 43 00         B   251    			call wait_kb_clk_low				0041C7 D8                  B   252    			ret c
                           B   253    				
0041C8 CD 4A 43 00         B   254    			call wait_kb_data_high				0041CC D8                  B   255    			ret c
0041CD CD 4E 43 00         B   256    			call wait_kb_clk_high				0041D1 C9                  B   257    			ret 
                           B   258    
                           B   259    
                           B   260    ;----------------------------------------------
                           B   261    
                           B   262    
0041D2                     B   263    wait_kb_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   264    
0041D2 11008000            B   265    			ld de,8000h
0041D6 CD DB 40 00         B   266    			call set_timeout					                           B   267    
0041DA ED3807              B   268    wait_kloop	in0 a,(port_ps2_ctrl)
0041DD CB67                B   269    			bit 4,a
0041DF 20 08               B   270    			jr nz,rec_kbyte
                           B   271    			
0041E1 CD EC 40 00         B   272    			call test_timeout
0041E5 28 F3               B   273    			jr z,wait_kloop
0041E7 37                  B   274    			scf									0041E8 C9                  B   275    			ret
                           B   276    			
0041E9 ED3802              B   277    rec_kbyte	in0 a,(port_keyboard_data)			0041EC B7                  B   278    			or a
0041ED C9                  B   279    			ret
                           B   280    
                           B   281    
                           B   282    ;----------------------------------------------
                           B   283    
0041EE                     B   284    purge_keyboard
                           B   285    			
0041EE ED3807              B   286    			in0 a,(port_ps2_ctrl)
0041F1 CB67                B   287    			bit 4,a
0041F3 C8                  B   288    			ret z
0041F4 ED3802              B   289    			in0 a,(port_keyboard_data)			0041F7 18 F5               B   290    			jr purge_keyboard
                           B   291    
                           B   292    
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    ; INIT MOUSE ROUTINE 
                           B   296    ;----------------------------------------------
                           B   297    
                           B   298    ; ZF set and A = 0 if all OK, else error code i
                           B   299    
0041F9                     B   300    init_mouse		
0041F9 F3                  B   301    			di
0041FA CD 12 43 00         B   302    			call purge_mouse
0041FE CD 08 42 00         B   303    			call rs_mouse
004202 FB                  B   304    			ei
004203 D0                  B   305    			ret nc
004204 3E8B                B   306    			ld a,08bh							004206 B7                  B   307    			or a
004207 C9                  B   308    			ret
                           B   309    
                           B   310    
004208                     B   311    rs_mouse
004208 3EFF                B   312    			ld a,0ffh							00420A CD 8A 42 00         B   313    			call write_to_mouse		
00420E 30 04               B   314    			jr nc,mouse_connected
004210 3E8A                B   315    			ld a,08ah							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004212 B7                  B   316    			or a
004213 C9                  B   317    			ret
                           B   318    
                           B   319    
004214                     B   320    mouse_connected
                           B   321    
004214 0605                B   322    			ld b,5
004216 C5                  B   323    ms_initlp	push bc
004217 CD F6 42 00         B   324    			call wait_mouse_byte				00421B C1                  B   325    			pop bc
00421C D8                  B   326    			ret c
00421D FEAA                B   327    			cp 0aah
00421F 28 04               B   328    			jr z,ms_postok
004221 10 F3               B   329    			djnz ms_initlp
004223 18 43               B   330    			jr bad_mouse
                           B   331    			
004225 CD F6 42 00         B   332    ms_postok	call wait_mouse_byte				004229 D8                  B   333    			ret c
00422A B7                  B   334    			or a
00422B 20 3B               B   335    			jr nz,bad_mouse						                           B   336    			
00422D 3E03                B   337    			ld a,3
00422F 32 8E 62 00         B   338    			ld (mouse_packet_size),a
                           B   339    
004233 21 6E 5F 00         B   340    			ld hl,intellimouse_seq
004237 0606                B   341    			ld b,6
004239 CD 6C 42 00         B   342    			call mouse_sequence
00423D D8                  B   343    			ret c
                           B   344    			
00423E 3EF2                B   345    			ld a,0f2h
004240 CD 7B 42 00         B   346    			call write_mouse_wait_ack			004244 D8                  B   347    			ret c
004245 CD F6 42 00         B   348    			call wait_mouse_byte				004249 D8                  B   349    			ret c
00424A 32 8D 62 00         B   350    			ld (mouse_id),a
00424E B7                  B   351    			or a								00424F 28 0A               B   352    			jr z,standard_mouse
004251 FE03                B   353    			cp 3
004253 20 13               B   354    			jr nz,bad_mouse						004255 3E04                B   355    			ld a,4
004257 32 8E 62 00         B   356    			ld (mouse_packet_size),a
                           B   357    
00425B                     B   358    standard_mouse
                           B   359    		
00425B 21 74 5F 00         B   360    			ld hl,mouse_settings_seq
00425F 0606                B   361    			ld b,6
004261 CD 6C 42 00         B   362    			call mouse_sequence
004265 D8                  B   363    			ret c
004266 AF                  B   364    			xor a								004267 C9                  B   365    			ret
                           B   366    
                           B   367    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004268 3E89                B   368    bad_mouse	ld a,089h							00426A B7                  B   369    			or a
00426B C9                  B   370    			ret
                           B   371    
                           B   372    
00426C                     B   373    mouse_sequence
                           B   374    
00426C 7E                  B   375    mseqlp		ld a,(hl)
00426D E5                  B   376    			push hl
00426E C5                  B   377    			push bc
00426F CD 7B 42 00         B   378    			call write_mouse_wait_ack
004273 C1                  B   379    			pop bc
004274 E1                  B   380    			pop hl
004275 D8                  B   381    			ret c
004276 23                  B   382    			inc hl
004277 10 F3               B   383    			djnz mseqlp
004279 AF                  B   384    			xor a
00427A C9                  B   385    			ret
                           B   386    
                           B   387    
00427B                     B   388    write_mouse_wait_ack
                           B   389    			
00427B CD 8A 42 00         B   390    			call write_to_mouse
00427F D8                  B   391    			ret c
004280 CD F6 42 00         B   392    			call wait_mouse_byte				004284 D8                  B   393    			ret c
004285 FEFA                B   394    			cp 0fah								004287 C8                  B   395    			ret z
004288 37                  B   396    			scf
004289 C9                  B   397    			ret
                           B   398    			
                           B   399    ;----------------------------------------------
                           B   400    				
00428A                     B   401    write_to_mouse
                           B   402    
                           B   403    ; Put byte to send to mouse in A
                           B   404    
00428A 4F                  B   405    			ld c,a								00428B 3E04                B   406    			ld a,0100b							00428D ED3907              B   407    			out0 (port_ps2_ctrl),a
                           B   408    
004290 110A0000            B   409    			ld de,10
004294 CD CF 40 00         B   410    			call hwsc_time_delay				                           B   411    
004298 3E0C                B   412    			ld a,1100b
00429A ED3907              B   413    			out0 (port_ps2_ctrl),a				                           B   414    			
00429D 3E08                B   415    			ld a,1000b
00429F ED3907              B   416    			out0 (port_ps2_ctrl),a				                           B   417    			
0042A2 CD 56 43 00         B   418    			call wait_mouse_clk_high
                           B   419    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042A6 1601                B   420    			ld d,1								0042A8 0608                B   421    			ld b,8								0042AA CD 29 43 00         B   422    mdoloop		call wait_mouse_clk_low	
0042AE D8                  B   423    			ret c
0042AF AF                  B   424    			xor a
0042B0 CBDF                B   425    			set 3,a
0042B2 CB41                B   426    			bit 0,c
0042B4 28 03               B   427    			jr z,mdbzero
0042B6 CB9F                B   428    			res 3,a
0042B8 14                  B   429    			inc d
0042B9 ED3907              B   430    mdbzero		out0 (port_ps2_ctrl),a				0042BC CD 56 43 00         B   431    			call wait_mouse_clk_high
0042C0 D8                  B   432    			ret c
0042C1 CB19                B   433    			rr c
0042C3 10 E5               B   434    			djnz mdoloop
                           B   435    
0042C5 CD 29 43 00         B   436    			call wait_mouse_clk_low
0042C9 D8                  B   437    			ret c
0042CA AF                  B   438    			xor a
0042CB CB42                B   439    			bit 0,d
0042CD 20 02               B   440    			jr nz,parone
0042CF CBDF                B   441    			set 3,a
0042D1 ED3907              B   442    parone		out0 (port_ps2_ctrl),a				0042D4 CD 56 43 00         B   443    			call wait_mouse_clk_high
0042D8 D8                  B   444    			ret c
                           B   445    			
0042D9 CD 29 43 00         B   446    			call wait_mouse_clk_low
0042DD D8                  B   447    			ret c
0042DE AF                  B   448    			xor a
0042DF ED3907              B   449    			out0 (port_ps2_ctrl),a				                           B   450    
0042E2 CD 25 43 00         B   451    			call wait_mouse_data_low			0042E6 D8                  B   452    			ret c
0042E7 CD 29 43 00         B   453    			call wait_mouse_clk_low				0042EB D8                  B   454    			ret c
                           B   455    				
0042EC CD 52 43 00         B   456    			call wait_mouse_data_high			0042F0 D8                  B   457    			ret c
0042F1 CD 56 43 00         B   458    			call wait_mouse_clk_high			0042F5 C9                  B   459    			ret 
                           B   460    
                           B   461    ;----------------------------------------------
                           B   462    
                           B   463    
0042F6                     B   464    wait_mouse_byte
                           B   465    
0042F6 11008000            B   466    			ld de,8000h
0042FA CD DB 40 00         B   467    			call set_timeout					                           B   468    
0042FE ED3807              B   469    wait_mloop	in0 a,(port_ps2_ctrl)
004301 CB6F                B   470    			bit 5,a
004303 20 08               B   471    			jr nz,rec_mbyte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   472    			
004305 CD EC 40 00         B   473    			call test_timeout
004309 28 F3               B   474    			jr z,wait_mloop
00430B 37                  B   475    			scf									00430C C9                  B   476    			ret
                           B   477    			
00430D ED3806              B   478    rec_mbyte	in0 a,(port_mouse_data)				004310 B7                  B   479    			or a
004311 C9                  B   480    			ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
004312                     B   484    purge_mouse
                           B   485    			
004312 ED3807              B   486    			in0 a,(port_ps2_ctrl)
004315 CB6F                B   487    			bit 5,a
004317 C8                  B   488    			ret z
004318 ED3806              B   489    			in0 a,(port_mouse_data)			; r
00431B 18 F5               B   490    			jr purge_mouse
                           B   491    
                           B   492    
                           B   493    ;----------------------------------------------
                           B   494    
                           B   495    
00431D                     B   496    wait_kb_data_low
                           B   497    
00431D 3E02                B   498    			ld a,2
00431F 18 0A               B   499    			jr test_lo_ps2
                           B   500    			
004321                     B   501    wait_kb_clk_low
                           B   502    
004321 3E01                B   503    			ld a,1
004323 18 06               B   504    			jr test_lo_ps2			
                           B   505    
004325                     B   506    wait_mouse_data_low
                           B   507    
004325 3E08                B   508    			ld a,8
004327 18 02               B   509    			jr test_lo_ps2
                           B   510    
004329                     B   511    wait_mouse_clk_low
                           B   512    
004329 3E04                B   513    			ld a,4
                           B   514    
00432B C5                  B   515    test_lo_ps2	push bc
00432C D5                  B   516    			push de
00432D 4F                  B   517    			ld c,a
00432E 11004000            B   518    			ld de,04000h					; a
004332 CD DB 40 00         B   519    			call set_timeout
                           B   520    
004336 CD EC 40 00         B   521    nkb_lw		call test_timeout				; t
00433A 28 04               B   522    			jr z,nkb_lnto
00433C D1                  B   523    			pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00433D C1                  B   524    			pop bc
00433E 37                  B   525    			scf								; c
00433F C9                  B   526    			ret
004340 ED3807              B   527    nkb_lnto	in0 a,(port_ps2_ctrl)
004343 A1                  B   528    			and c
004344 20 F0               B   529    			jr nz,nkb_lw
                           B   530    					
004346 D1                  B   531    			pop de
004347 C1                  B   532    			pop bc
004348 AF                  B   533    			xor a
004349 C9                  B   534    			ret					
                           B   535    
                           B   536    
                           B   537    
                           B   538    
00434A                     B   539    wait_kb_data_high
                           B   540    
00434A 3E02                B   541    			ld a,2
00434C 18 0A               B   542    			jr test_hi_ps2
                           B   543    			
00434E                     B   544    wait_kb_clk_high
                           B   545    
00434E 3E01                B   546    			ld a,1
004350 18 06               B   547    			jr test_hi_ps2
                           B   548    
                           B   549    
004352                     B   550    wait_mouse_data_high
                           B   551    			
004352 3E08                B   552    			ld a,8
004354 18 02               B   553    			jr test_hi_ps2
                           B   554    			 
004356                     B   555    wait_mouse_clk_high
                           B   556    
004356 3E04                B   557    			ld a,4
                           B   558    
004358 C5                  B   559    test_hi_ps2	push bc
004359 D5                  B   560    			push de
00435A 4F                  B   561    			ld c,a
00435B 11004000            B   562    			ld de,04000h					; a
00435F CD DB 40 00         B   563    			call set_timeout
                           B   564    
004363 CD EC 40 00         B   565    nkb_hw		call test_timeout				; t
004367 28 04               B   566    			jr z,nkb_hnto
004369 D1                  B   567    			pop de
00436A C1                  B   568    			pop bc
00436B 37                  B   569    			scf								; c
00436C C9                  B   570    			ret
00436D ED3807              B   571    nkb_hnto	in0 a,(port_ps2_ctrl)
004370 A1                  B   572    			and c
004371 28 F0               B   573    			jr z,nkb_hw
                           B   574    					
004373 D1                  B   575    			pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004374 C1                  B   576    			pop bc
004375 AF                  B   577    			xor a							; c
004376 C9                  B   578    			ret
                           B   579    
                           B   580    
                           B   581    ;==============================================
                           B   582    
004377                     B   583    hwsc_play_audio
                           B   584    
                           B   585    ; set HL register to location of an audio data 
                           B   586    
                           B   587    ; 0 - start 
                           B   588    ; 3 - length
                           B   589    ; 6 - loop start
                           B   590    ; 9 - loop length
                           B   591    ; c - frequency constant
                           B   592    ; e - volume
                           B   593    
                           B   594    ; set C register to set channels wave is to pla
                           B   595    
004377 E5                  B   596    				push hl
004378 FDE1                B   597    				pop iy
00437A DD210014 FF         B   598    				ld ix,hw_audio_registers
00437F CD B4 43 00         B   599    				call audio_reg_wait				                           B   600    				
004383 0608                B   601    				ld b,8
004385 CB39                B   602    audchanloop		srl c
004387 30 24               B   603    				jr nc,not_this_chan
                           B   604    				
004389 FD1700              B   605    				ld de,(iy)
00438C DD1F00              B   606    				ld (ix),de						                           B   607    
00438F FD1703              B   608    				ld de,(iy+3)
004392 DD1F04              B   609    				ld (ix+04h),de					                           B   610    				
004395 FD170C              B   611    				ld de,(iy+0ch)
004398 DD1F08              B   612    				ld (ix+08h),de					                           B   613    				
00439B FD5E0E              B   614    				ld e,(iy+0eh)
00439E DD1F0C              B   615    				ld (ix+0ch),de					                           B   616    				
0043A1 FD1706              B   617    				ld de,(iy+6)
0043A4 DD1F10              B   618    				ld (ix+10h),de					                           B   619    				
0043A7 FD1709              B   620    				ld de,(iy+9)
0043AA DD1F14              B   621    				ld (ix+14h),de					                           B   622    
0043AD                     B   623    not_this_chan	
0043AD ED3220              B   624    				lea ix,ix+20h			
0043B0 10 D3               B   625    				djnz audchanloop
0043B2 AF                  B   626    				xor a
0043B3 C9                  B   627    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   628    
                           B   629    
                           B   630    ;----------------------------------------------
                           B   631    
0043B4                     B   632    audio_reg_wait	
                           B   633    
0043B4 3E01                B   634    				ld a,1
0043B6 320314FF            B   635    				ld (hw_audio_registers+3),a		                           B   636    				
0043BA ED3801              B   637    wait_audreg		in0 a,(port_hw_flags)			0043BD E640                B   638    				and 040h
0043BF 28 F9               B   639    				jr z,wait_audreg				0043C1 AF                  B   640    				xor a
0043C2 C9                  B   641    				ret
0043C3 C9                  B   642    				ret
                           B   643    
                           B   644    
                           B   645    ;----------------------------------------------
                           B   646    				
                           B   647    				
0043C4                     B   648    hwsc_disable_audio
                           B   649    
0043C4 AF                  B   650    				xor a
0043C5 320314FF            B   651    				ld (hw_audio_registers+3),a		                           B   652    				
0043C9 DD210014 FF         B   653    				ld ix,hw_audio_registers		0043CE 0608                B   654    				ld b,8
0043D0 11000000            B   655    				ld de,0
0043D4 DD1F0C              B   656    disaud_lp		ld (ix+0ch),de
0043D7 ED3220              B   657    				lea ix,ix+020h
0043DA 10 F8               B   658    				djnz disaud_lp
0043DC C9                  B   659    				ret
                           B   660    				
                           B   661    ;----------------------------------------------
                           B   662    
0043DD                     B   663    hwsc_get_joysticks
                           B   664    
0043DD ED389E              B   665    				in0 a,(PC_DR)				
0043E0 2F                  B   666    				cpl
0043E1 47                  B   667    				ld b,a
0043E2 E60F                B   668    				and 0fh
0043E4 5F                  B   669    				ld e,a
0043E5 78                  B   670    				ld a,b
0043E6 0F                  B   671    				rrca
0043E7 0F                  B   672    				rrca
0043E8 0F                  B   673    				rrca
0043E9 0F                  B   674    				rrca
0043EA E60F                B   675    				and 0fh
0043EC 57                  B   676    				ld d,a
                           B   677    				
0043ED ED38A2              B   678    				in0 a,(PD_DR)	
0043F0 CB67                B   679    				bit 4,a						; f
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043F2 20 02               B   680    				jr nz,noj1b1
0043F4 CBEA                B   681    				set 5,d
                           B   682    
0043F6 CB6F                B   683    noj1b1			bit 5,a						; f
0043F8 20 02               B   684    				jr nz,noj1b0
0043FA CBE2                B   685    				set 4,d
                           B   686    				
0043FC CB77                B   687    noj1b0			bit 6,a						; f
0043FE 20 02               B   688    				jr nz,noj0b1
004400 CBEB                B   689    				set 5,e
                           B   690    
004402 CB7F                B   691    noj0b1			bit 7,a						; f
004404 20 02               B   692    				jr nz,noj0b0
004406 CBE3                B   693    				set 4,e
                           B   694    
004408 AF                  B   695    noj0b0			xor a
004409 C9                  B   696    				ret
                           B   697    				
                           B   698    				
                           B   699    ;----------------------------------------------
                           B   700    			
                           B   701    				
                           B   702    				
                           A  3257    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
00440A                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
00440A D5                  B    13    				push de
00440B 51                  B    14    				ld d,c
00440C E5                  B    15    				push hl
                           B    16    				
00440D CD 77 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004411 BE                  B    18    				cp (hl)							004412 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004414 01000000            B    21    new_key			ld bc,0							004418 4F                  B    22    				ld c,a
004419 21 66 62 00         B    23    				ld hl,scancode_buffer	
00441D 09                  B    24    				add hl,bc
00441E 7E                  B    25    				ld a,(hl)						                           B    26    
00441F 0E10                B    27    				ld c,16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004421 09                  B    28    				add hl,bc						004422 4F                  B    29    				ld c,a							004423 7E                  B    30    				ld a,(hl)						                           B    31    
004424 1E00                B    32    				ld e,0							004426 21 C7 5D 00         B    33    				ld hl,unshifted_keymap			                           B    34    
00442A CB4F                B    35    				bit 1,a
00442C 28 04               B    36    				jr z,not_ctrl					00442E 1E60                B    37    				ld e,96							004430 18 16               B    38    				jr got_keymap					                           B    39    							
004432 CB47                B    40    not_ctrl		bit 0,a
004434 20 04               B    41    				jr nz,shifted
004436 CB67                B    42    				bit 4,a
004438 28 06               B    43    				jr z,not_shifted
00443A 21 29 5E 00         B    44    shifted			ld hl,shifted_keymap			00443E 18 08               B    45    				jr got_keymap
                           B    46    				
004440 CB5F                B    47    not_shifted		bit 3,a
004442 28 04               B    48    				jr z,got_keymap	
004444 21 8B 5E 00         B    49    				ld hl,alted_keymap				                           B    50    
004448 79                  B    51    got_keymap		ld a,c							004449 FE62                B    52    				cp 062h
00444B 30 07               B    53    				jr nc,gotkdone
00444D 09                  B    54    				add hl,bc						00444E 7E                  B    55    				ld a,(hl)						00444F 93                  B    56    				sub a,e							004450 30 01               B    57    				jr nc,subkey_ok	
004452 AF                  B    58    				xor a							004453 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004454 3A 87 62 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004458 3C                  B    62    				inc a							004459 E60F                B    63    				and 15
00445B 32 87 62 00         B    64    				ld (key_buf_rd_idx),a			00445F 79                  B    65    				ld a,c							004460 E1                  B    66    				pop hl
004461 4A                  B    67    				ld c,d
004462 D1                  B    68    				pop de
004463 BF                  B    69    				cp a							004464 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004465                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    80    			
                           B    81    			
004465 D5                  B    82    				push de
004466 51                  B    83    				ld d,c
004467 E5                  B    84    				push hl
004468 CD 77 44 00         B    85    				call get_kb_buffer_indexes		00446C BE                  B    86    				cp (hl)							00446D 20 A5               B    87    				jr nz,new_key					00446F 3E81                B    88    				ld a,81h			
004471 47                  B    89    				ld b,a
004472 B7                  B    90    				or a
004473 E1                  B    91    				pop hl
004474 4A                  B    92    				ld c,d
004475 D1                  B    93    				pop de
004476 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
004477                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
004477 21 86 62 00         B   101    				ld hl,key_buf_wr_idx			00447B 3A 87 62 00         B   102    				ld a,(key_buf_rd_idx)			00447F C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004480                     B    21    serial_get_header
                           B    22    
004480 32 4B 5F 00         B    23    				ld (serial_timeout),a			004484 22 35 5F 00         B    24    				ld (serial_fn_addr),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004488 CD E9 3D 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
00448C CD 6F 45 00         B    27    				call s_getblock					004490 28 0C               B    28    				jr z,s_gbfhok					004492 F5                  B    29    				push af							004493 3A 6C 5F 00         B    30    				ld a,(serial_transfer_started)
004497 B7                  B    31    				or a							004498 C4 D6 45 00         B    32    				call nz,s_badack				00449C F1                  B    33    				pop af
00449D C9                  B    34    				ret
                           B    35    	
00449E 21 60 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			0044A2 11 BA 66 00         B    37    				ld de,sector_buffer+20			0044A6 060C                B    38    				ld b,12
0044A8 CD 29 12 00         B    39    				call os_compare_strings
0044AC 20 0F               B    40    				jr nz,s_nfhdr
0044AE 06E0                B    41    				ld b,256-32						0044B0 21 C6 66 00         B    42    				ld hl,sector_buffer+32
0044B4 7E                  B    43    s_chdr			ld a,(hl)
0044B5 23                  B    44    				inc hl
0044B6 B7                  B    45    				or a
0044B7 20 04               B    46    				jr nz,s_nfhdr
0044B9 10 F9               B    47    				djnz s_chdr
0044BB 18 08               B    48    				jr s_fhcsok
                           B    49    				
0044BD CD D6 45 00         B    50    s_nfhdr			call s_badack					0044C1 3E85                B    51    				ld a,085h						0044C3 B7                  B    52    				or a
0044C4 C9                  B    53    				ret
                           B    54    		
0044C5 21 B6 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			0044C9 11 5C 5F 00         B    56    				ld de,serial_fileheader+16
0044CD 01040000            B    57    				ld bc,4
0044D1 EDB0                B    58    				ldir
                           B    59    				
0044D3 21 A6 66 00         B    60    				ld hl,sector_buffer
0044D7 11 4C 5F 00         B    61    				ld de,serial_fileheader			0044DB 0610                B    62    				ld b,16							0044DD 7E                  B    63    s_tuclp			ld a,(hl)						0044DE B7                  B    64    				or a
0044DF 28 0B               B    65    				jr z,s_ffhswz	
0044E1 CD 63 12 00         B    66    				call os_uppercasify
0044E5 12                  B    67    				ld (de),a
0044E6 23                  B    68    				inc hl
0044E7 13                  B    69    				inc de
0044E8 10 F3               B    70    				djnz s_tuclp
0044EA 18 04               B    71    				jr s_tucdone
0044EC 12                  B    72    s_ffhswz		ld (de),a
0044ED 13                  B    73    				inc de
0044EE 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
0044F0 2A 35 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044F4 7E                  B    77    				ld a,(hl)
0044F5 FE2A                B    78    				cp '*'
0044F7 28 14               B    79    				jr z,s_rffns					0044F9 11 4C 5F 00         B    80    				ld de,serial_fileheader
0044FD 0610                B    81    				ld b,16
0044FF CD 29 12 00         B    82    				call os_compare_strings
004503 28 08               B    83    				jr z,s_rffns
004505 CD D6 45 00         B    84    s_rfnbad		call s_badack
004509 3E87                B    85    				ld a,087h						00450B B7                  B    86    				or a
00450C C9                  B    87    				ret
                           B    88    				
00450D DD21 4C 5F 00       B    89    s_rffns			ld ix,serial_fileheader			004512 AF                  B    90    				xor a
004513 C9                  B    91    				ret
                           B    92    
004514 F5                  B    93    s_fail			push af				
004515 CD D6 45 00         B    94    				call s_badack		 
004519 F1                  B    95    				pop af
00451A C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
00451B                     B   114    serial_receive_file
                           B   115    
00451B 3E0A                B   116    				ld a,10							00451D 32 4B 5F 00         B   117    				ld (serial_timeout),a
004521 E5                  B   118    				push hl
004522 CD C5 45 00         B   119    				call s_goodack					004526 DDE1                B   120    				pop ix							004528 ED5B 5C 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
00452D CD 6F 45 00         B   123    s_gbloop		call s_getblock
004531 20 E1               B   124    				jr nz,s_fail
004533 0E00                B   125    				ld c,0							004535 FD21 A6 66 00       B   126    				ld iy,sector_buffer
00453A FD7E00              B   127    s_rfloop		ld a,(iy)
00453D DD7700              B   128    				ld (ix),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004540 1B                  B   129    				dec de							004541 21000000            B   130    				ld hl,0
004545 AF                  B   131    				xor a
004546 ED5A                B   132    				adc hl,de						004548 28 1A               B   133    				jr z,s_rfabr					00454A C5                  B   134    				push bc
00454B 01010000            B   135    				ld bc,1
00454F DD09                B   136    				add ix,bc						004551 C1                  B   137    				pop bc
004552 30 05               B   138    				jr nc,s_nbt
004554 3E84                B   139    				ld a,84h						004556 B7                  B   140    				or a
004557 18 BB               B   141    				jr s_fail
004559 FD23                B   142    s_nbt			inc iy
00455B 0D                  B   143    				dec c
00455C 20 DC               B   144    				jr nz,s_rfloop
00455E CD C5 45 00         B   145    				call s_goodack					004562 18 C9               B   146    				jr s_gbloop
                           B   147    			
004564 CD C5 45 00         B   148    s_rfabr			call s_goodack					004568 DD21 4C 5F 00       B   149    				ld ix,serial_fileheader			00456D AF                  B   150    				xor a							00456E C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
00456F                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
00456F AF                  B   159    				xor a
004570 32 6C 5F 00         B   160    				ld (serial_transfer_started),a	004574 E5                  B   161    				push hl							004575 D5                  B   162    				push de
004576 C5                  B   163    				push bc
004577 21 A6 66 00         B   164    				ld hl,sector_buffer				00457B 0600                B   165    				ld b,0
00457D D9                  B   166    				exx
00457E 21FFFF00            B   167    				ld hl,0ffffh					004582 D9                  B   168    				exx
004583 CD 93 3D 00         B   169    s_lgb			call receive_serial_byte
004587 20 38               B   170    				jr nz,s_gberr					004589 F5                  B   171    				push af
00458A 3E01                B   172    				ld a,1
00458C 32 6C 5F 00         B   173    				ld (serial_transfer_started),a
004590 F1                  B   174    				pop af
004591 77                  B   175    				ld (hl),a
004592 D9                  B   176    				exx
004593 AC                  B   177    				xor h							004594 67                  B   178    				ld h,a			
004595 0608                B   179    				ld b,8
004597 4029                B   180    rxcrcbyte		add.sis hl,hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004599 30 08               B   181    				jr nc,rxcrcnext
00459B 7C                  B   182    				ld a,h
00459C EE10                B   183    				xor 10h
00459E 67                  B   184    				ld h,a
00459F 7D                  B   185    				ld a,l
0045A0 EE21                B   186    				xor 21h
0045A2 6F                  B   187    				ld l,a
0045A3 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0045A5 D9                  B   189    				exx
0045A6 23                  B   190    				inc hl
0045A7 10 DA               B   191    				djnz s_lgb
0045A9 D9                  B   192    				exx								                           B   193    			
0045AA CD 93 3D 00         B   194    				call receive_serial_byte		0045AE 20 11               B   195    				jr nz,s_gberr
0045B0 4F                  B   196    				ld c,a
0045B1 CD 93 3D 00         B   197    				call receive_serial_byte
0045B5 20 0A               B   198    				jr nz,s_gberr		
0045B7 47                  B   199    				ld b,a
                           B   200    				
0045B8 AF                  B   201    				xor a							0045B9 52ED42              B   202    				sbc.s hl,bc						0045BC 28 03               B   203    				jr z,s_gberr
                           B   204    			
0045BE 3E86                B   205    				ld a,86h						0045C0 B7                  B   206    				or a							0045C1 C1                  B   207    s_gberr			pop bc
0045C2 D1                  B   208    				pop de
0045C3 E1                  B   209    				pop hl
0045C4 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0045C5 C5                  B   214    s_goodack		push bc
0045C6 014F4B00            B   215    				ld bc,04b4fh					0045CA 79                  B   216    ackbytes		ld a,c
0045CB CD CE 3D 00         B   217    				call send_serial_byte
0045CF 78                  B   218    				ld a,b
0045D0 CD CE 3D 00         B   219    				call send_serial_byte
0045D4 C1                  B   220    				pop bc
0045D5 C9                  B   221    				ret
                           B   222    
0045D6 C5                  B   223    s_badack		push bc
0045D7 01585800            B   224    				ld bc,05858h					0045DB 18 ED               B   225    				jr ackbytes
                           B   226    
0045DD C5                  B   227    s_holdack		push bc
0045DE 01575700            B   228    				ld bc,05757h					0045E2 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
0045E4                     B   249    serial_send_file
                           B   250    			
0045E4 3E01                B   251    				ld a,1							0045E6 32 4B 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
0045EA DD22 2F 5F 00       B   254    				ld (serial_ez80_address),ix
0045EF ED53 5C 5F 00       B   255    				ld (serial_fileheader+10h),de	0045F4 E5                  B   256    				push hl
0045F5 21000000            B   257    				ld hl,0
0045F9 AF                  B   258    				xor a
0045FA ED5A                B   259    				adc hl,de
0045FC 20 05               B   260    				jr nz,s_flok
0045FE E1                  B   261    				pop hl
0045FF 3E81                B   262    				ld a,081h						004601 B7                  B   263    				or a							004602 C9                  B   264    				ret
                           B   265    			
004603 21 4C 5F 00         B   266    s_flok			ld hl,serial_fileheader			004607 01100000            B   267    				ld bc,16
00460B AF                  B   268    				xor a
00460C CD C6 15 00         B   269    				call os_bchl_memfill
004610 E1                  B   270    				pop hl							004611 11 4C 5F 00         B   271    				ld de,serial_fileheader
004615 0610                B   272    				ld b,16
004617 CD 48 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
00461B 21 60 5F 00         B   275    				ld hl,serial_header_id			00461F 11 60 5F 00         B   276    				ld de,serial_fileheader+014h
004623 010C0000            B   277    				ld bc,12		
004627 EDB0                B   278    				ldir
                           B   279    			
004629 DD21 4C 5F 00       B   280    				ld ix,serial_fileheader			00462E 11200000            B   281    				ld de,32
004632 CD 68 46 00         B   282    				call s_makeblock			
004636 C0                  B   283    				ret nz
004637 CD A0 46 00         B   284    				call s_sendblock
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00463B C0                  B   285    				ret nz
00463C CD CD 46 00         B   286    				call s_waitack					004640 C0                  B   287    				ret nz							                           B   288    				
004641 DD2A 2F 5F 00       B   289    				ld ix,(serial_ez80_address)
004646 ED5B 5C 5F 00       B   290    				ld de,(serial_fileheader+16)	00464B CD 68 46 00         B   291    s_sbloop		call s_makeblock				00464F 38 16               B   292    				jr c,s_rerr
004651 CD A0 46 00         B   293    				call s_sendblock				004655 38 10               B   294    				jr c,s_rerr	
004657 CD CD 46 00         B   295    				call s_waitack					00465B 38 0A               B   296    				jr c,s_rerr
00465D 21000000            B   297    				ld hl,0
004661 AF                  B   298    				xor a
004662 ED5A                B   299    				adc hl,de
004664 20 E5               B   300    				jr nz,s_sbloop					004666 AF                  B   301    				xor a							004667 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
004668                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004668 21 A6 66 00         B   312    				ld hl,sector_buffer				00466C 01000100            B   313    				ld bc,256						004670 AF                  B   314    				xor a							004671 CD C6 15 00         B   315    				call os_bchl_memfill			                           B   316    				
004675 0600                B   317    				ld b,0							004677 FD21 A6 66 00       B   318    				ld iy,sector_buffer	
00467C DD7E00              B   319    s_sloop			ld a,(ix)
00467F FD7700              B   320    				ld (iy),a
004682 1B                  B   321    				dec de							004683 21000000            B   322    				ld hl,0
004687 AF                  B   323    				xor a
004688 ED5A                B   324    				adc hl,de
00468A 28 12               B   325    				jr z,s_mbend	
00468C FD23                B   326    				inc iy							00468E C5                  B   327    				push bc
00468F 01010000            B   328    				ld bc,1
004693 DD09                B   329    				add ix,bc						004695 C1                  B   330    				pop bc							004696 20 04               B   331    				jr nz,s_sbok
004698 3E84                B   332    				ld a,84h						00469A B7                  B   333    				or a
00469B C9                  B   334    				ret
00469C 10 DE               B   335    s_sbok			djnz s_sloop
00469E AF                  B   336    s_mbend			xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00469F C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0046A0                     B   341    s_sendblock
                           B   342    
0046A0 E5                  B   343    				push hl
0046A1 D5                  B   344    				push de							0046A2 C5                  B   345    				push bc				
0046A3 21 A6 66 00         B   346    				ld hl,sector_buffer			
0046A7 1E00                B   347    				ld e,0
0046A9 7E                  B   348    s_sblklp		ld a,(hl)
0046AA CD CE 3D 00         B   349    				call send_serial_byte
0046AE 23                  B   350    				inc hl
0046AF 1D                  B   351    				dec e
0046B0 20 F7               B   352    				jr nz,s_sblklp
0046B2 11 A6 66 00         B   353    				ld de,sector_buffer
0046B6 01000000            B   354    				ld bc,0
0046BA CD 6C 15 00         B   355    				call crc_checksum
0046BE 7D                  B   356    				ld a,l
0046BF CD CE 3D 00         B   357    				call send_serial_byte
0046C3 7C                  B   358    				ld a,h
0046C4 CD CE 3D 00         B   359    				call send_serial_byte
0046C8 AF                  B   360    				xor a
0046C9 C1                  B   361    s_popall		pop bc
0046CA D1                  B   362    				pop de
0046CB E1                  B   363    				pop hl
0046CC C9                  B   364    				ret
                           B   365    	
                           B   366    
0046CD                     B   367    s_waitack
0046CD E5                  B   368    				push hl
0046CE D5                  B   369    				push de
0046CF C5                  B   370    				push bc
0046D0 CD 93 3D 00         B   371    				call receive_serial_byte		0046D4 20 F3               B   372    				jr nz,s_popall
0046D6 47                  B   373    				ld b,a
0046D7 CD 93 3D 00         B   374    				call receive_serial_byte
0046DB 20 EC               B   375    				jr nz,s_popall
0046DD 4F                  B   376    				ld c,a
0046DE 264F                B   377    				ld h,'O'
0046E0 2E4B                B   378    				ld l,'K'
0046E2 AF                  B   379    				xor a
0046E3 52ED42              B   380    				sbc.s hl,bc						0046E6 28 E1               B   381    				jr z,s_popall					                           B   382    			
0046E8 3E85                B   383    				ld a,085h						0046EA B7                  B   384    				or a
0046EB 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B     8    ; 0.06 - Fixed "fs_get_volume_label"
                           B     9    ; 0.05 - Fixed format command
                           B    10    ; 0.04 - File system error codes are now in the
                           B    11    ; 0.03 - ADL mode
                           B    12    ; 0.02 - removed references to banks, added 24 
                           B    13    ; 0.01 - first version based on FLOS routines v
                           B    14    ;
                           B    15    ; Known limitations:
                           B    16    ; ------------------
                           B    17    ; If a disk full error is returned during a fil
                           B    18    ; Allows a file to be created in root even if t
                           B    19    ;        
                           B    20    ;----------------------------------------------
                           B    21    ;
                           B    22    ; All routines return carry clear / zero flag s
                           B    23    ;
                           B    24    ; If carry set there was a driver error, A = Er
                           B    25    ;
                           B    26    ; If carry clear, Zero flag not set: A= File sy
                           B    27    ;
                           B    28    ;					$c1  - Disk full
                           B    29    ;					$c2  - file not found
                           B    30    ;             	    $c3  - (root) dir table is 
                           B    31    ;					$c4  - directory requested 
                           B    32    ;             	    $c5  - cant delete dir, it 
                           B    33    ;					$c6  - not a file
                           B    34    ;					$c7  - file length is zero
                           B    35    ;              	    $c8  - out of memory
                           B    36    ;					$c9  - filename already exi
                           B    37    ;					$ca  - already at root dire
                           B    38    ;                  	$cb  - directory not found
                           B    39    ;					$cc  - requested bytes beyo
                           B    40    ;					$cd  - invalid filename
                           B    41    ;					$ce  - unknown/incorrect di
                           B    42    ;					$cf  - invalid volume
                           B    43    ;                 	$d0  - device not present	                           B    44    ;					$d1  - directory not found	                           B    45    ;                 	$d2  - end of directory lis
                           B    46    ;                 	$d3  - device does not use 
                           B    47    ;                  	$d4  - cant find volume lab
                           B    48    ;                   $d5  - sector out of range
                           B    49    
                           B    50    ;----------------------------------------------
                           B    51    ; Main routines called by external programs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    52    ;----------------------------------------------
                           B    53    
0046ED                     B    54    fs_format_device_command
                           B    55    
                           B    56    ; Creates a single partition (truncated to 2GB)
                           B    57    
                           B    58    
0046ED 3A 7D 5F 00         B    59    				ld a,(device_count)				0046F1 47                  B    60    				ld b,a							0046F2 DD21 27 60 00       B    61    				ld ix,host_device_hardware_info
0046F7 3A 7C 5F 00         B    62    fdevinfo		ld a,(current_driver)
0046FB DDBE00              B    63    				cp (ix)
0046FE 28 09               B    64    				jr z,got_dev_info
004700 ED3220              B    65    				lea ix,ix+32
004703 10 F2               B    66    				djnz fdevinfo
004705 AF                  B    67    				xor a
004706 3ED0                B    68    				ld a,0d0h						004708 C9                  B    69    				ret	
                           B    70    	
004709 CD A9 51 00         B    71    got_dev_info	call fs_clear_sector_buffer		00470D 11000000            B    72    				ld de,0							004711 CD 01 48 00         B    73    form_ws			call set_lba_and_write_sector
004715 D8                  B    74    				ret c
004716 13                  B    75    				inc de
004717 7A                  B    76    				ld a,d
004718 FE03                B    77    				cp 3
00471A 20 F5               B    78    				jr nz,form_ws
                           B    79    	
00471C 21 58 54 00         B    80    				ld hl,bootsector_stub			004720 11 A6 66 00         B    81    				ld de,sector_buffer				004724 013F0000            B    82    				ld bc,03fh
004728 EDB0                B    83    				ldir
                           B    84    	
00472A DD7E04              B    85    				ld a,(ix+4)						00472D B7                  B    86    				or a
00472E 20 0C               B    87    				jr nz,above_2gb
004730 2100003F            B    88    				ld hl,3f0000h					004734 DD1701              B    89    				ld de,(ix+1)					004737 AF                  B    90    				xor a			
004738 ED52                B    91    				sbc hl,de						00473A 30 08               B    92    				jr nc,lessthan2gb				00473C 3E40                B    93    above_2gb		ld a,40h						00473E 1100003F            B    94    				ld de,3f0000h					004742 18 11               B    95    				jr spcvalok
                           B    96    
004744 DD4E03              B    97    lessthan2gb		ld c,(ix+3)						004747 0C                  B    98    				inc c							004748 3E01                B    99    spc_loop		ld a,1							00474A B9                  B   100    spc_comp		cp c							00474B 28 08               B   101    				jr z,spcvalok
00474D 07                  B   102    				rlca
00474E FE80                B   103    				cp 080h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004750 20 F8               B   104    				jr nz,spc_comp
004752 0C                  B   105    				inc c			
004753 18 F3               B   106    				jr spc_loop						                           B   107    							
004755 DD21 A6 66 00       B   108    spcvalok		ld ix,sector_buffer
00475A DD770D              B   109    				ld (ix+0dh),a					                           B   110    				
00475D CD E3 15 00         B   111    				call os_get_xde_msb				004761 4F                  B   112    				ld c,a							004762 B7                  B   113    				or a							004763 20 08               B   114    				jr nz,ts_dword					004765 DD7313              B   115    				ld (ix+13h),e					004768 DD7214              B   116    				ld (ix+14h),d
00476B 18 07               B   117    				jr ts_done
00476D DD1F20              B   118    ts_dword		ld (ix+20h),de					004770 DD362300            B   119    				ld (ix+23h),0
                           B   120    
004774 EB                  B   121    ts_done			ex de,hl						004775 11000000            B   122    				ld de,0						
004779 DD560D              B   123    				ld d,(ix+0dh)					00477C 01000000            B   124    				ld bc,0							004780 AF                  B   125    div_tscls		xor a							004781 ED52                B   126    				sbc hl,de
004783 28 05               B   127    				jr z,gotfats
004785 38 03               B   128    				jr c,gotfats	
004787 03                  B   129    				inc bc
004788 18 F6               B   130    				jr div_tscls
00478A 03                  B   131    gotfats			inc bc
00478B DD7116              B   132    				ld (ix+16h),c					00478E DD7017              B   133    				ld (ix+17h),b
004791 ED43 A8 54 00       B   134    				ld (fs_sectors_per_fat),bc
                           B   135    				
004796 010055AA            B   136    				ld bc,0aa5500h
00479A ED43 A3 68 00       B   137    				ld (sector_buffer+1fdh),bc		00479F 11000000            B   138    				ld de,0
0047A3 CD 01 48 00         B   139    				call set_lba_and_write_sector	0047A7 D8                  B   140    				ret c
                           B   141    				
0047A8 21000000            B   142    				ld hl,0
0047AC DD6E0E              B   143    				ld l,(ix+0eh)					0047AF DD660F              B   144    				ld h,(ix+0fh)
0047B2 19                  B   145    				add hl,de
0047B3 EB                  B   146    				ex de,hl						                           B   147    				
0047B4 CD A9 51 00         B   148    				call fs_clear_sector_buffer		0047B8 DD3600FF            B   149    				ld (ix+0),0ffh
0047BC DD3601F8            B   150    				ld (ix+1),0f8h
0047C0 DD3602FF            B   151    				ld (ix+2),0ffh
0047C4 DD3603FF            B   152    				ld (ix+3),0ffh
0047C8 CD 01 48 00         B   153    				call set_lba_and_write_sector	0047CC D8                  B   154    				ret c
                           B   155    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047CD 2A A8 54 00         B   156    				ld hl,(fs_sectors_per_fat)	
0047D1 19                  B   157    				add hl,de
0047D2 EB                  B   158    				ex de,hl
0047D3 CD 01 48 00         B   159    				call set_lba_and_write_sector 	0047D7 D8                  B   160    				ret c	
                           B   161    				
0047D8 D5                  B   162    				push de							0047D9 CD A9 51 00         B   163    				call fs_clear_sector_buffer
0047DD 21 AE 54 00         B   164    				ld hl,fs_sought_filename
0047E1 11 A6 66 00         B   165    				ld de,sector_buffer
0047E5 010B0000            B   166    				ld bc,11
0047E9 EDB0                B   167    				ldir							0047EB D1                  B   168    				pop de							0047EC DD360B08            B   169    				ld (ix+0bh),8					0047F0 DD361821            B   170    				ld (ix+018h),021h				0047F4 2A A8 54 00         B   171    				ld hl,(fs_sectors_per_fat)		0047F8 19                  B   172    				add hl,de
0047F9 EB                  B   173    				ex de,hl
0047FA CD 01 48 00         B   174    				call set_lba_and_write_sector	0047FE D8                  B   175    				ret c	
                           B   176    			
0047FF AF                  B   177    				xor a							004800 C9                  B   178    				ret
                           B   179    	
                           B   180    
                           B   181    
004801                     B   182    set_lba_and_write_sector
                           B   183    
004801 DDE5                B   184    				push ix
004803 DD21 52 61 00       B   185    				ld ix,sector_lba0				004808 DD1F00              B   186    				ld (ix),de						00480B DD360300            B   187    				ld (ix+3),0
00480F DDE1                B   188    				pop ix
004811 CD 3C 54 00         B   189    				call fs_write_sector
004815 C9                  B   190    				ret
                           B   191    				
                           B   192    				
                           B   193    ;----------------------------------------------
                           B   194    
004816                     B   195    fs_get_partition_info
                           B   196    
                           B   197    ; Set A to partition: $00 to $03
                           B   198    ; On return: If A = $00, xHL = Address of reque
                           B   199    ;            If A = $25, A partition table is n
                           B   200    ;            If A = $13, Disk format is bad 
                           B   201    ;            If carry flag set, there was a har
                           B   202    
                           B   203    
004816 32 AA 60 00         B   204    				ld (partition_temp),a
                           B   205    				
00481A 21000000            B   206    				ld hl,0							00481E 22 52 61 00         B   207    				ld (sector_lba0),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004822 7D                  B   208    				ld a,l
004823 32 55 61 00         B   209    				ld (sector_lba3),a
004827 CD 23 54 00         B   210    				call fs_read_sector
00482B D8                  B   211    				ret c
                           B   212    			
00482C CD 67 48 00         B   213    				call fs_check_fat_sig			004830 20 42               B   214    				jr nz,formbad
                           B   215    			
004832 CD 58 48 00         B   216    				call check_fat16_id				004836 28 1C               B   217    				jr z,at_pbs						                           B   218    				
004838 3A 68 68 00         B   219    				ld a,(sector_buffer+01c2h)		00483C E604                B   220    				and 4							00483E 28 34               B   221    				jr z,formbad	
004840 11000000            B   222    				ld de,0
004844 3A AA 60 00         B   223    				ld a,(partition_temp)
004848 5F                  B   224    				ld e,a
004849 1610                B   225    				ld d,16
00484B ED5C                B   226    				mlt de
00484D 21 64 68 00         B   227    				ld hl,sector_buffer+01beh
004851 19                  B   228    				add hl,de						004852 AF                  B   229    				xor a
004853 C9                  B   230    				ret
                           B   231    					
004854 AF                  B   232    at_pbs			xor a
004855 3ED3                B   233    				ld a,0d3h						004857 C9                  B   234    				ret
                           B   235    
                           B   236    
                           B   237    
004858                     B   238    check_fat16_id
                           B   239    		
004858 21 DC 66 00         B   240    				ld hl,sector_buffer+036h		00485C 11 7C 59 00         B   241    				ld de,fat16_txt			
004860 0605                B   242    				ld b,5
004862 CD 29 12 00         B   243    				call os_compare_strings
004866 C9                  B   244    				ret
                           B   245    				
                           B   246    ;----------------------------------------------
                           B   247    
                           B   248    
004867                     B   249    fs_check_fat_sig
                           B   250    
004867 2A A4 68 00         B   251    				ld hl,(sector_buffer+01feh)		00486B 1155AA00            B   252    				ld de,0aa55h
00486F AF                  B   253    				xor a
004870 52ED52              B   254    				sbc.s hl,de						004873 C9                  B   255    				ret
                           B   256    			
                           B   257    			
                           B   258    			
004874 AF                  B   259    formbad			xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004875 3ECE                B   260    				ld a,0ceh						004877 C9                  B   261    				ret
                           B   262    
                           B   263    ;----------------------------------------------
                           B   264    
                           B   265    
004878                     B   266    fs_check_disk_format
                           B   267    
                           B   268    ; ensures disk is FAT16, sets up constants..
                           B   269    	
004878 C5                  B   270    				push bc
004879 D5                  B   271    				push de
00487A E5                  B   272    				push hl
00487B CD 83 48 00         B   273    				call go_checkf
00487F E1                  B   274    				pop hl
004880 D1                  B   275    				pop de
004881 C1                  B   276    				pop bc
004882 C9                  B   277    				ret
                           B   278    				
004883 CD 4A 49 00         B   279    go_checkf		call fs_read_partition_bootsect
004887 D8                  B   280    				ret c
004888 B7                  B   281    				or a
004889 C0                  B   282    				ret nz
                           B   283    				
00488A CD 67 48 00         B   284    				call fs_check_fat_sig			00488E 20 E4               B   285    				jr nz,formbad		
                           B   286    			
004890 CD 58 48 00         B   287    				call check_fat16_id				004894 20 DE               B   288    				jr nz,formbad
                           B   289    			
004896 DD21 A6 66 00       B   290    				ld ix,sector_buffer
00489B DD270B              B   291    				ld hl,(ix+0bh)					00489E 11000200            B   292    				ld de,512						0048A2 AF                  B   293    				xor a
0048A3 52ED52              B   294    				sbc.s hl,de						0048A6 20 CC               B   295    				jr nz,formbad
                           B   296    			
0048A8 DD7E0D              B   297    				ld a,(ix+0dh)					0048AB 32 97 54 00         B   298    				ld (fs_cluster_size),a
0048AF CB27                B   299    				sla a
0048B1 32 99 54 00         B   300    				ld (fs_bytes_per_cluster+1),a
                           B   301    							
0048B5 21000000            B   302    				ld hl,0
0048B9 DD6E0E              B   303    				ld l,(ix+0eh)					0048BC DD660F              B   304    				ld h,(ix+0fh)
0048BF 22 9B 54 00         B   305    				ld (fs_fat1_position),hl		0048C3 11000000            B   306    				ld de,0
0048C7 DD5E16              B   307    				ld e,(ix+16h)					0048CA DD5617              B   308    				ld d,(ix+17h)
0048CD ED53 A8 54 00       B   309    				ld (fs_sectors_per_fat),de
0048D2 19                  B   310    				add hl,de
0048D3 22 9E 54 00         B   311    				ld (fs_fat2_position),hl		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048D7 19                  B   312    				add hl,de
0048D8 22 A1 54 00         B   313    				ld (fs_root_dir_position),hl 	0048DC EB                  B   314    				ex de,hl
0048DD DD6E11              B   315    				ld l,(ix+11h)					0048E0 DD6612              B   316    				ld h,(ix+12h)					0048E3 7C                  B   317    				ld a,h
0048E4 B5                  B   318    				or l
0048E5 28 8D               B   319    				jr z,formbad					0048E7 29                  B   320    				add hl,hl						0048E8 29                  B   321    				add hl,hl						0048E9 29                  B   322    				add hl,hl
0048EA 29                  B   323    				add hl,hl
0048EB EB                  B   324    				ex de,hl
0048EC 7A                  B   325    				ld a,d
0048ED 32 A7 54 00         B   326    				ld (fs_root_dir_sectors),a		0048F1 01000000            B   327    				ld bc,0
0048F5 4A                  B   328    				ld c,d
0048F6 09                  B   329    				add hl,bc				
0048F7 22 A4 54 00         B   330    				ld (fs_data_area),hl			                           B   331    												0048FB 21000000            B   332    				ld hl,0
0048FF 01000000            B   333    				ld bc,0
004903 DD4E22              B   334    				ld c,(ix+022h)					004906 DD4623              B   335    				ld b,(ix+023h)
004909 DD6E13              B   336    				ld l,(ix+013h)					00490C DD6614              B   337    				ld h,(ix+014h)
00490F 7C                  B   338    				ld a,h							004910 B5                  B   339    				or l
004911 20 06               B   340    				jr nz,got_tsfbs
004913 DD6E20              B   341    				ld l,(ix+020h)					004916 DD6621              B   342    				ld h,(ix+021h)
004919 ED5B A4 54 00       B   343    got_tsfbs 		ld de,(fs_data_area)
00491E AF                  B   344    				xor a							00491F 52ED52              B   345    				sbc.s hl,de						004922 30 02               B   346    				jr nc,nomxcb
004924 520B                B   347    				dec.s bc
004926 3A 97 54 00         B   348    nomxcb			ld a,(fs_cluster_size)
00492A CB3F                B   349    fmaxcl			srl a
00492C 28 08               B   350    				jr z,got_cmaxc					00492E CB39                B   351    				srl c				
004930 CB1C                B   352    				rr h
004932 CB1D                B   353    				rr l
004934 18 F4               B   354    				jr fmaxcl
004936 E5                  B   355    got_cmaxc		push hl							004937 11F0FF00            B   356    				ld de,0fff0h
00493B AF                  B   357    				xor a
00493C 52ED52              B   358    				sbc.s hl,de						00493F 38 02               B   359    				jr c,cmaxok
004941 E1                  B   360    				pop hl
004942 D5                  B   361    				push de
004943 E1                  B   362    cmaxok			pop hl
004944 22 AB 54 00         B   363    				ld (fs_max_data_clusters),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004948 AF                  B   364    				xor a
004949 C9                  B   365    				ret				
                           B   366    
                           B   367    ;----------------------------------------------
                           B   368    
00494A                     B   369    fs_read_partition_bootsector
                           B   370    
00494A CD E4 1A 00         B   371    				call fs_calc_volume_offset		00494E 21 A7 5F 00         B   372    				ld hl,volume_mount_list
004952 19                  B   373    				add hl,de
004953 7E                  B   374    				ld a,(hl)
004954 B7                  B   375    				or a							004955 20 04               B   376    				jr nz,fs_volpre
004957 AF                  B   377    				xor a
004958 3ECF                B   378    				ld a,cfh						00495A C9                  B   379    				ret
                           B   380    			
00495B 11080000            B   381    fs_volpre		ld de,8							00495F 19                  B   382    				add hl,de
004960 11 52 61 00         B   383    				ld de,sector_lba0
004964 01040000            B   384    				ld bc,4
004968 EDB0                B   385    				ldir
00496A CD 23 54 00         B   386    				call fs_read_sector
00496E C9                  B   387    				ret	
                           B   388    
                           B   389    ;----------------------------------------------
                           B   390    
00496F                     B   391    fs_calc_free_space
                           B   392    
                           B   393    ;returns free space in KB in HL:DE
                           B   394    
00496F ED5B AB 54 00       B   395    				ld de,(fs_max_data_clusters)
004974 13                  B   396    				inc de
004975 13                  B   397    				inc de							004976 D5                  B   398    				push de
004977 DDE1                B   399    				pop ix
                           B   400    			
004979 AF                  B   401    				xor a
00497A 32 F0 54 00         B   402    cfs_lp2			ld (fs_working_sector),a
00497E 2A 9B 54 00         B   403    				ld hl,(fs_fat1_position)
004982 CD F9 53 00         B   404    				call set_abs_lba_and_read_secto
004986 D8                  B   405    				ret c
                           B   406    				
004987 21 A6 66 00         B   407    				ld hl,sector_buffer
00498B 0600                B   408    				ld b,0
00498D AF                  B   409    cfs_lp1			xor a
00498E B6                  B   410    				or a,(hl)						00498F 23                  B   411    				inc hl							004990 20 03               B   412    				jr nz,cfs_ciu					004992 B6                  B   413    				or a,(hl)
004993 28 02               B   414    				jr z,cfs_ddcc
004995 DD2B                B   415    cfs_ciu			dec ix							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004997 23                  B   416    cfs_ddcc		inc hl
004998 1B                  B   417    				dec de
004999 7A                  B   418    				ld a,d
00499A B3                  B   419    				or e
00499B 28 09               B   420    				jr z,cfs_ok						00499D 10 EE               B   421    				djnz cfs_lp1
00499F 3A F0 54 00         B   422    				ld a,(fs_working_sector)
0049A3 3C                  B   423    				inc a
0049A4 18 D4               B   424    				jr cfs_lp2
                           B   425    				
0049A6 3A 97 54 00         B   426    cfs_ok			ld a,(fs_cluster_size)			0049AA CB3F                B   427    cltoslp			srl a
0049AC 28 04               B   428    				jr z,powdone
0049AE DD29                B   429    				add ix,ix
0049B0 18 F8               B   430    				jr cltoslp	
0049B2 FD21 6E 61 00       B   431    powdone			ld iy,xrr_temp
0049B7 FD3E00              B   432    				ld (iy),ix						0049BA FDCB023E            B   433    				srl (iy+2)
0049BE FDCB011E            B   434    				rr (iy+1)
0049C2 FDCB001E            B   435    				rr (iy+0)						0049C6 FD1700              B   436    				ld de,(iy)						0049C9 AF                  B   437    				xor a
0049CA C9                  B   438    				ret
                           B   439    
                           B   440    ;----------------------------------------------
                           B   441    
0049CB                     B   442    fs_change_dir_command
                           B   443    
                           B   444    ; INPUT: HL = directory name ascii (zero/space 
                           B   445    			
                           B   446    			
0049CB CD BB 51 00         B   447    				call fs_find_filename			0049CF D8                  B   448    				ret c							0049D0 FEC2                B   449    				cp 0c2h							0049D2 20 04               B   450    				jr nz,founddir
0049D4 AF                  B   451    				xor a							0049D5 3ED1                B   452    				ld a,0d1h						0049D7 C9                  B   453    				ret
0049D8 AF                  B   454    founddir		xor a							0049D9 3E04                B   455    				ld a,04h						0049DB DDCB0B66            B   456    				bit 4,(ix+0bh)
0049DF C8                  B   457    				ret z
0049E0 11000000            B   458    				ld de,0
0049E4 DD5E1A              B   459    				ld e,(ix+01ah)
0049E7 DD561B              B   460    				ld d,(ix+01bh)					0049EA CD B6 1A 00         B   461    				call fs_update_dir_cluster
0049EE AF                  B   462    				xor a
0049EF C9                  B   463    				ret
                           B   464    
                           B   465    
                           B   466    ;----------------------------------------------
                           B   467    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   468    	
0049F0                     B   469    fs_goto_root_dir_command
                           B   470    
0049F0 D5                  B   471    				push de
0049F1 11000000            B   472    				ld de,0
0049F5 CD B6 1A 00         B   473    				call fs_update_dir_cluster
0049F9 D1                  B   474    				pop de
0049FA AF                  B   475    				xor a
0049FB C9                  B   476    				ret
                           B   477    
                           B   478    ;----------------------------------------------
                           B   479    	
                           B   480    	
0049FC                     B   481    fs_parent_dir_command
                           B   482    
0049FC CD AA 1A 00         B   483    				call fs_get_dir_cluster
004A00 7A                  B   484    				ld a,d
004A01 B3                  B   485    				or e
004A02 20 03               B   486    				jr nz,pdnaroot
004A04 3ECA                B   487    				ld a,0cah						004A06 C9                  B   488    				ret
004A07 212E2E20            B   489    pdnaroot		ld hl,0202e2eh					004A0B 22 AE 54 00         B   490    				ld (fs_sought_filename),hl		004A0F 21 B1 54 00         B   491    				ld hl,fs_sought_filename+3		004A13 3E20                B   492    				ld a,32
004A15 01080000            B   493    				ld bc,8
004A19 CD C6 15 00         B   494    				call os_bchl_memfill
004A1D 18 AC               B   495    				jr fs_change_dir_command
                           B   496    				
                           B   497    		
                           B   498    ;----------------------------------------------
                           B   499    		
004A1F                     B   500    fs_open_file_command
                           B   501    
                           B   502    ; INPUT: xHL = directory name ascii (zero/space
                           B   503    ; OUTPUT: C:xDE  = File length
                           B   504    ;            HL  = Start cluster of file
                           B   505    ;            Internal vars (file pointer reset 
                           B   506    
                           B   507    			
004A1F CD BB 51 00         B   508    				call fs_find_filename			004A23 D8                  B   509    				ret c							004A24 C0                  B   510    				ret nz							                           B   511    								
004A25 3EC6                B   512    				ld a,0c6h						004A27 DDCB0B66            B   513    				bit 4,(ix+0bh)
004A2B C0                  B   514    				ret nz
                           B   515    
004A2C AF                  B   516    				xor a
004A2D 32 04 55 00         B   517    				ld (fs_filepointer_valid),a		004A31 21000000            B   518    				ld hl,0
004A35 22 D2 54 00         B   519    				ld (fs_file_pointer),hl			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A39 32 D5 54 00         B   520    				ld (fs_file_pointer+3),a		                           B   521    				
004A3D DD171C              B   522    				ld de,(ix+01ch)
004A40 D5                  B   523    				push de
004A41 E1                  B   524    				pop hl
004A42 DD4E1F              B   525    				ld c,(ix+01fh)					004A45 ED53 D6 54 00       B   526    				ld (fs_file_length),de			004A4A 79                  B   527    				ld a,c
004A4B 32 D9 54 00         B   528    				ld (fs_file_length+3),a			004A4F B7                  B   529    				or a							004A50 28 04               B   530    				jr z,fs_dflsm					004A52 21FFFFFF            B   531    				ld hl,0ffffffh
004A56 22 DE 54 00         B   532    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   533    				
004A5A 21000000            B   534    				ld hl,0
004A5E DD6E1A              B   535    				ld l,(ix+01ah)		
004A61 DD661B              B   536    				ld h,(ix+01bh)
004A64 22 E1 54 00         B   537    				ld (fs_file_start_cluster),hl	004A68 AF                  B   538    				xor a
004A69 C9                  B   539    				ret
                           B   540    
                           B   541    	
                           B   542    ;----------------------------------------------
                           B   543    
004A6A                     B   544    fs_read_data_command		
                           B   545    
                           B   546    ;*******************************************
                           B   547    ;*** 'fs_open_file' must be called first ***
                           B   548    ;*******************************************
                           B   549    		
004A6A 2A DE 54 00         B   550    fs_load			ld hl,(fs_file_transfer_length)
004A6E 11000000            B   551    				ld de,0
004A72 AF                  B   552    				xor a
004A73 ED5A                B   553    				adc hl,de
004A75 20 04               B   554    				jr nz,fs_btrok
004A77 AF                  B   555    fs_fliz			xor a							004A78 3EC7                B   556    				ld a,0c7h						004A7A C9                  B   557    				ret
                           B   558    			 
004A7B 2A E7 54 00         B   559    fs_btrok		ld hl,(fs_ez80_address)			004A7F 22 EA 54 00         B   560    				ld (fs_ez80_working_address),hl
                           B   561    			
004A83 2A D6 54 00         B   562    				ld hl,(fs_file_length)			004A87 ED4B D2 54 00       B   563    				ld bc,(fs_file_pointer)			004A8C 3A D5 54 00         B   564    				ld a,(fs_file_pointer+3)		004A90 5F                  B   565    				ld e,a
004A91 3A D9 54 00         B   566    				ld a,(fs_file_length+3)
004A95 B7                  B   567    				or a							004A96 ED42                B   568    				sbc hl,bc
004A98 9B                  B   569    				sbc a,e
004A99 38 09               B   570    				jr c,fs_fpbad
004A9B 01000000            B   571    				ld bc,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A9F AF                  B   572    				xor a
004AA0 ED4A                B   573    				adc hl,bc
004AA2 20 04               B   574    				jr nz,fs_fpok
004AA4 AF                  B   575    fs_fpbad		xor a
004AA5 3ECC                B   576    				ld a,0cch						004AA7 C9                  B   577    				ret
                           B   578    			
                           B   579    	
004AA8 3A 04 55 00         B   580    fs_fpok			ld a,(fs_filepointer_valid)		004AAC B7                  B   581    				or a							004AAD 28 1B               B   582    				jr z,seek_strt
                           B   583    			
004AAF ED5B EA 54 00       B   584    				ld de,(fs_ez80_working_address)
004AB4 ED4B 05 55 00       B   585    				ld bc,(fs_sector_pos_cnt)		004AB9 C5                  B   586    				push bc
004ABA ED4B ED 54 00       B   587    				ld bc,(fs_in_sector_offset)
004ABF 21 A6 68 00         B   588    				ld hl,sector_buffer+0200h		004AC3 AF                  B   589    				xor a
004AC4 ED42                B   590    				sbc hl,bc		
004AC6 C3 56 4B 00         B   591    				jr fs_dadok
                           B   592    				
                           B   593    			
004ACA 3E01                B   594    seek_strt		ld a,1
004ACC 32 04 55 00         B   595    				ld (fs_filepointer_valid),a
004AD0 2A E1 54 00         B   596    				ld hl,(fs_file_start_cluster)	004AD4 22 E4 54 00         B   597    				ld (fs_file_working_cluster),hl
                           B   598    			
004AD8 3A D5 54 00         B   599    				ld a,(fs_file_pointer+3)		004ADC 2A D2 54 00         B   600    				ld hl,(fs_file_pointer)			004AE0 ED4B 98 54 00       B   601    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004AE5 AF                  B   602    				xor a
004AE6 ED42                B   603    				sbc hl,bc						004AE8 DE00                B   604    				sbc a,0
004AEA 38 14               B   605    				jr c,fs_fpgbo
004AEC E5                  B   606    fs_fpgnb		push hl				
004AED 2A E4 54 00         B   607    				ld hl,(fs_file_working_cluster)
004AF1 CD CB 52 00         B   608    				call get_fat_entry_for_cluster
004AF5 30 02               B   609    				jr nc,fs_ghok					004AF7 E1                  B   610    				pop hl
004AF8 C9                  B   611    				ret
004AF9 22 E4 54 00         B   612    fs_ghok			ld (fs_file_working_cluster),hl
004AFD E1                  B   613    				pop hl
004AFE 18 E0               B   614    				jr fs_fpblp
                           B   615    			
004B00 09                  B   616    fs_fpgbo		add hl,bc						004B01 4C                  B   617    				ld c,h
004B02 CB39                B   618    				srl c							004B04 3A 97 54 00         B   619    				ld a,(fs_cluster_size)
004B08 91                  B   620    				sub c
004B09 47                  B   621    				ld b,a							004B0A 7C                  B   622    				ld a,h
004B0B E601                B   623    				and 01h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B0D 67                  B   624    				ld h,a
004B0E 22 ED 54 00         B   625    				ld (fs_in_sector_offset),hl		                           B   626    				
004B12 79                  B   627    fs_flns			ld a,c				
004B13 2A E4 54 00         B   628    				ld hl,(fs_file_working_cluster)
004B17 CD A2 53 00         B   629    				call cluster_and_offset_to_lba
004B1B CD 23 54 00         B   630    				call fs_read_sector				004B1F D8                  B   631    				ret c							                           B   632    			
004B20 C5                  B   633    				push bc							004B21 11000000            B   634    				ld de,0
004B25 2A ED 54 00         B   635    				ld hl,(fs_in_sector_offset)		004B29 5D                  B   636    				ld e,l
004B2A 54                  B   637    				ld d,h
004B2B 21000200            B   638    				ld hl,512
004B2F AF                  B   639    				xor a
004B30 ED52                B   640    				sbc hl,de						004B32 44                  B   641    				ld b,h
004B33 4D                  B   642    				ld c,l							004B34 21 A6 66 00         B   643    				ld hl,sector_buffer				004B38 19                  B   644    				add hl,de						004B39 ED5B EA 54 00       B   645    				ld de,(fs_ez80_working_address)
004B3E EDA0                B   646    fs_cblp			ldi 							                           B   647    
004B40 7A                  B   648    				ld a,d							004B41 B3                  B   649    				or e
004B42 20 0C               B   650    				jr nz,fs_edaok
004B44 ED53 EA 54 00       B   651    				ld (fs_ez80_working_address),de
004B49 3A EC 54 00         B   652    				ld a,(fs_ez80_working_address+2
004B4D B7                  B   653    				or a
004B4E 28 43               B   654    				jr z,fs_mem_error
                           B   655    
004B50 CD 2B 53 00         B   656    fs_edaok		call transfer_length_countdown	004B54 28 30               B   657    				jr z,fs_bdld
004B56 78                  B   658    fs_dadok		ld a,b							004B57 B1                  B   659    				or c
004B58 20 E4               B   660    				jr nz,fs_cblp
                           B   661    			
004B5A ED43 ED 54 00       B   662    				ld (fs_in_sector_offset),bc		004B5F ED53 EA 54 00       B   663    				ld (fs_ez80_working_address),de
004B64 C1                  B   664    				pop bc							004B65 0C                  B   665    				inc c							004B66 10 AA               B   666    				djnz fs_flns					                           B   667    			
004B68 2A E4 54 00         B   668    				ld hl,(fs_file_working_cluster)
004B6C CD CB 52 00         B   669    				call get_fat_entry_for_cluster	004B70 D8                  B   670    				ret c							004B71 22 E4 54 00         B   671    				ld (fs_file_working_cluster),hl
004B75 CD 74 50 00         B   672    				call fs_compare_hl_fff8			004B79 D2 A4 4A 00         B   673    				jp nc,fs_fpbad			
004B7D 0E00                B   674    fs_nfbok		ld c,0							004B7F 3A 97 54 00         B   675    				ld a,(fs_cluster_size)	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B83 47                  B   676    				ld b,a							004B84 18 8C               B   677    				jr fs_flns		
                           B   678    			
004B86 ED43 ED 54 00       B   679    fs_bdld			ld (fs_in_sector_offset),bc		004B8B C1                  B   680    				pop bc							004B8C ED43 05 55 00       B   681    				ld (fs_sector_pos_cnt),bc
004B91 AF                  B   682    				xor a							004B92 C9                  B   683    				ret
                           B   684    				
004B93 3EC8                B   685    fs_mem_error	ld a,0c8h						004B95 C1                  B   686    fs_flerr		pop bc
004B96 B7                  B   687    				or a							004B97 C9                  B   688    				ret			
                           B   689    			
                           B   690    ;----------------------------------------------
                           B   691    
004B98                     B   692    fs_make_dir_command		
                           B   693    				
004B98 CD BB 51 00         B   694    				call fs_find_filename			004B9C D8                  B   695    				ret c
004B9D FEC2                B   696    				cp 0c2h							004B9F 28 04               B   697    				jr z,mdirfnde
004BA1 AF                  B   698    				xor a							004BA2 3EC9                B   699    				ld a,0c9h						004BA4 C9                  B   700    				ret
                           B   701    			
004BA5 CD 81 50 00         B   702    mdirfnde		call fs_find_free_cluster		004BA9 D8                  B   703    				ret c							004BAA C0                  B   704    				ret nz							                           B   705    							
004BAB 2A F4 54 00         B   706    				ld hl,(fs_free_cluster)
004BAF 22 F7 54 00         B   707    				ld (fs_new_file_cluster),hl
                           B   708    			
004BB3 CD D2 50 00         B   709    				call fs_find_free_dir_entry		004BB7 D8                  B   710    				ret c							004BB8 C0                  B   711    				ret nz							                           B   712    			
004BB9 DDE5                B   713    				push ix							004BBB D1                  B   714    				pop de
004BBC 21 AE 54 00         B   715    				ld hl,fs_sought_filename
004BC0 010B0000            B   716    				ld bc,11
004BC4 EDB0                B   717    				ldir
004BC6 AF                  B   718    				xor a							004BC7 0615                B   719    				ld b,21
004BC9 12                  B   720    clrdiren		ld (de),a
004BCA 13                  B   721    				inc de
004BCB 10 FC               B   722    				djnz clrdiren
004BCD DD360B10            B   723    				ld (ix+0bh),010h				004BD1 DD361821            B   724    				ld (ix+018h),021h				004BD5 ED5B F7 54 00       B   725    				ld de,(fs_new_file_cluster)
004BDA DD731A              B   726    				ld (ix+01ah),e					004BDD DD721B              B   727    				ld (ix+01bh),d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BE0 CD 3C 54 00         B   728    				call fs_write_sector			004BE4 D8                  B   729    				ret c							                           B   730    				
004BE5 CD A9 51 00         B   731    				call fs_clear_sector_buffer
004BE9 DD21 A6 66 00       B   732    				ld ix,sector_buffer				004BEE DD36002E            B   733    				ld (ix+00h),02eh				004BF2 DD360120            B   734    				ld (ix+01h),020h
004BF6 DD36202E            B   735    				ld (ix+020h),02eh
004BFA DD36212E            B   736    				ld (ix+021h),02eh
004BFE DD360B10            B   737    				ld (ix+0bh),010h
004C02 DD362B10            B   738    				ld (ix+02bh),010h
004C06 ED5B F7 54 00       B   739    				ld de,(fs_new_file_cluster)		004C0B DD731A              B   740    				ld (ix+01ah),e
004C0E DD721B              B   741    				ld (ix+01bh),d
004C11 CD AA 1A 00         B   742    				call fs_get_dir_cluster			004C15 DD733A              B   743    				ld (ix+03ah),e
004C18 DD723B              B   744    				ld (ix+03bh),d
004C1B DD361821            B   745    				ld (ix+018h),021h				004C1F DD363821            B   746    				ld (ix+038h),021h				004C23 0609                B   747    				ld b,9
004C25 DD360220            B   748    mndelp			ld (ix+002h),32
004C29 DD362220            B   749    				ld (ix+022h),32
004C2D DD23                B   750    				inc ix
004C2F 10 F4               B   751    				djnz mndelp
004C31 2A F7 54 00         B   752    				ld hl,(fs_new_file_cluster)		004C35 AF                  B   753    				xor a
004C36 CD A2 53 00         B   754    				call cluster_and_offset_to_lba
004C3A CD 3C 54 00         B   755    				call fs_write_sector
004C3E D8                  B   756    				ret c							                           B   757    			
004C3F CD A9 51 00         B   758    				call fs_clear_sector_buffer		004C43 AF                  B   759    				xor a
004C44 3C                  B   760    wroslp			inc a
004C45 32 F0 54 00         B   761    				ld (fs_working_sector),a
004C49 21 97 54 00         B   762    				ld hl,fs_cluster_size
004C4D BE                  B   763    				cp (hl)
004C4E 28 13               B   764    				jr z,allsclr
004C50 2A F7 54 00         B   765    				ld hl,(fs_new_file_cluster)
004C54 CD A2 53 00         B   766    				call cluster_and_offset_to_lba
004C58 CD 3C 54 00         B   767    				call fs_write_sector
004C5C D8                  B   768    				ret c
004C5D 3A F0 54 00         B   769    				ld a,(fs_working_sector)
004C61 18 E1               B   770    				jr wroslp
                           B   771    			
004C63 2A F7 54 00         B   772    allsclr			ld hl,(fs_new_file_cluster)		004C67 11FFFF00            B   773    				ld de,0ffffh
004C6B CD F7 52 00         B   774    				call update_fat_entry_for_clust
004C6F AF                  B   775    				xor a
004C70 C9                  B   776    				ret
                           B   777    
                           B   778    
                           B   779    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   780    ;----------------------------------------------
                           B   781    
004C71                     B   782    fs_delete_dir_command
                           B   783    
004C71 CD BB 51 00         B   784    				call fs_find_filename			004C75 D8                  B   785    				ret c
004C76 28 04               B   786    				jr z,ddc_gotd
004C78 3ED1                B   787    				ld a,0d1h						004C7A B7                  B   788    				or a
004C7B C9                  B   789    				ret
                           B   790    				
004C7C DDCB0B66            B   791    ddc_gotd		bit 4,(ix+0bh)					004C80 20 04               B   792    				jr nz,okdeldir
004C82 AF                  B   793    				xor a
004C83 3EC4                B   794    				ld a,0c4h						004C85 C9                  B   795    				ret
                           B   796    				
004C86 DD22 FA 54 00       B   797    okdeldir		ld (fs_fname_in_sector_addr),ix
004C8B CD 01 54 00         B   798    				call backup_sector_lba
004C8F DD6E1A              B   799    				ld l,(ix+01ah)					004C92 DD661B              B   800    				ld h,(ix+01bh)
                           B   801    				
004C95 3A 97 54 00         B   802    fs_ddecl		ld a,(fs_cluster_size)
004C99 47                  B   803    				ld b,a							004C9A 0E00                B   804    				ld c,0			
004C9C 79                  B   805    fs_cne2 		ld a,c
004C9D CD A2 53 00         B   806    				call cluster_and_offset_to_lba
004CA1 CD 23 54 00         B   807    				call fs_read_sector
004CA5 D8                  B   808    				ret c							                           B   809    				
004CA6 C5                  B   810    				push bc
004CA7 0610                B   811    				ld b,16							004CA9 DD21 A6 66 00       B   812    				ld ix,sector_buffer
004CAE 11200000            B   813    				ld de,020h
004CB2 DD7E00              B   814    fs_cne1			ld a,(ix)
004CB5 B7                  B   815    				or a
004CB6 28 0D               B   816    				jr z,fs_chnde
004CB8 FEE5                B   817    				cp 0e5h
004CBA 28 09               B   818    				jr z,fs_chnde
004CBC FE2E                B   819    				cp '.'
004CBE 28 05               B   820    				jr z,fs_chnde
004CC0 C1                  B   821    				pop bc
004CC1 AF                  B   822    				xor a							004CC2 3EC5                B   823    				ld a,0c5h						004CC4 C9                  B   824    				ret
                           B   825    			
004CC5 DD19                B   826    fs_chnde		add ix,de
004CC7 10 E9               B   827    				djnz fs_cne1
004CC9 C1                  B   828    				pop bc
004CCA 0C                  B   829    				inc c
004CCB 10 CF               B   830    				djnz fs_cne2
                           B   831    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CCD CD CB 52 00         B   832    				call get_fat_entry_for_cluster	004CD1 D8                  B   833    				ret c
004CD2 CD 74 50 00         B   834    				call fs_compare_hl_fff8
004CD6 38 BD               B   835    				jr c,fs_ddecl
                           B   836    			
004CD8 CD 16 54 00         B   837    dir_empty		call restore_sector_lba			004CDC CD 23 54 00         B   838    				call fs_read_sector
004CE0 D8                  B   839    				ret c							004CE1 2A FA 54 00         B   840    				ld hl,(fs_fname_in_sector_addr)
004CE5 36E5                B   841    fs_delco		ld (hl),0e5h					004CE7 CD 3C 54 00         B   842    				call fs_write_sector
004CEB D8                  B   843    				ret c
                           B   844    			
004CEC E5                  B   845    				push hl
004CED DDE1                B   846    				pop ix
004CEF DD6E1A              B   847    				ld l,(ix+01ah)
004CF2 DD661B              B   848    				ld h,(ix+01bh)
004CF5 22 F1 54 00         B   849    				ld (fs_working_cluster),hl
004CF9 7C                  B   850    				ld a,h							004CFA B5                  B   851    				or l							004CFB C8                  B   852    				ret z							                           B   853    				
004CFC 2A F1 54 00         B   854    clrfatlp		ld hl,(fs_working_cluster)
004D00 CD CB 52 00         B   855    				call get_fat_entry_for_cluster
004D04 D8                  B   856    				ret c
004D05 EB                  B   857    				ex de,hl
                           B   858    				
004D06 2A F1 54 00         B   859    				ld hl,(fs_working_cluster)
004D0A ED53 F1 54 00       B   860    				ld (fs_working_cluster),de
004D0F 11000000            B   861    				ld de,0
004D13 CD F7 52 00         B   862    				call update_fat_entry_for_clust
004D17 D8                  B   863    				ret c
                           B   864    				
004D18 CD 74 50 00         B   865    				call fs_compare_hl_fff8			004D1C 38 DE               B   866    				jr c,clrfatlp
004D1E AF                  B   867    				xor a
004D1F C9                  B   868    				ret
                           B   869    
                           B   870    
                           B   871    ;----------------------------------------------
                           B   872    
004D20                     B   873    fs_create_file_command
                           B   874    
                           B   875    ; Note: As per FAT standard, creating a file (0
                           B   876    ; only a directory entry (FAT is only updated w
                           B   877    
004D20 CD BB 51 00         B   878    				call fs_find_filename			004D24 D8                  B   879    				ret c
004D25 FEC2                B   880    				cp 0c2h							004D27 28 04               B   881    				jr z,mfilefnde
004D29 AF                  B   882    				xor a							004D2A 3EC9                B   883    				ld a,0c9h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D2C C9                  B   884    				ret
                           B   885    			
004D2D CD D2 50 00         B   886    mfilefnde		call fs_find_free_dir_entry		004D31 D8                  B   887    				ret c							004D32 C0                  B   888    				ret nz							                           B   889    			
004D33 DDE5                B   890    				push ix							004D35 D1                  B   891    				pop de
004D36 21 AE 54 00         B   892    				ld hl,fs_sought_filename
004D3A 010B0000            B   893    				ld bc,11
004D3E EDB0                B   894    				ldir
004D40 AF                  B   895    				xor a							004D41 0615                B   896    				ld b,21
004D43 12                  B   897    clrfnen			ld (de),a
004D44 13                  B   898    				inc de
004D45 10 FC               B   899    				djnz clrfnen
004D47 DD361821            B   900    				ld (ix+018h),021h				004D4B CD 3C 54 00         B   901    				call fs_write_sector			004D4F D8                  B   902    				ret c							004D50 AF                  B   903    				xor a
004D51 C9                  B   904    				ret								                           B   905    
                           B   906    
                           B   907    ;----------------------------------------------
                           B   908    
004D52                     B   909    fs_write_bytes_to_file_command
                           B   910    	
                           B   911    ; *********************************************
                           B   912    ; * set up: fs_file_transfer_length (new data),
                           B   913    ; * before calling                             
                           B   914    ; *********************************************
                           B   915    
                           B   916    				
004D52 ED5B DE 54 00       B   917    				ld de,(fs_file_transfer_length)
004D57 21000000            B   918    				ld hl,0
004D5B AF                  B   919    				xor a
004D5C ED5A                B   920    				adc hl,de
004D5E CA 77 4A 00         B   921    				jp z,fs_fliz					                           B   922    				 
004D62 CD BB 51 00         B   923    				call fs_find_filename			004D66 D8                  B   924    				ret c							004D67 FEC2                B   925    				cp 0c2h				
004D69 C8                  B   926    				ret z							004D6A DDCB0B66            B   927    				bit 4,(ix+0bh)					004D6E 28 04               B   928    				jr z,fs_oknad					004D70 AF                  B   929    				xor a							004D71 3EC6                B   930    				ld a,0c6h						004D73 C9                  B   931    				ret
                           B   932    
004D74 CD 01 54 00         B   933    fs_oknad		call backup_sector_lba
004D78 DD22 FA 54 00       B   934    				ld (fs_fname_in_sector_addr),ix
                           B   935    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D7D DD311C              B   936    				ld iy,(ix+01ch)					004D80 DD7E1F              B   937    				ld a,(ix+01fh)
004D83 FD22 DA 54 00       B   938    				ld (fs_existing_file_length),iy
004D88 32 DA 54 00         B   939    				ld (fs_existing_file_length),a
004D8C ED5B DE 54 00       B   940    				ld de,(fs_file_transfer_length)
004D91 FD19                B   941    				add iy,de						004D93 CE00                B   942    				adc a,0
004D95 DD3E1C              B   943    				ld (ix+01ch),iy					004D98 DD771F              B   944    				ld (ix+01fh),a					004D9B 30 04               B   945    				jr nc,nfsizeok
004D9D AF                  B   946    				xor a
004D9E 3EC7                B   947    				ld a,0c7h						004DA0 C9                  B   948    				ret
                           B   949    
004DA1 11000000            B   950    nfsizeok		ld de,0
004DA5 DD5E1A              B   951    				ld e,(ix+01ah)					004DA8 DD561B              B   952    				ld d,(ix+01bh)					004DAB ED53 E4 54 00       B   953    				ld (fs_file_working_cluster),de
004DB0 CD 3C 54 00         B   954    				call fs_write_sector			004DB4 D8                  B   955    				ret c
004DB5 7A                  B   956    				ld a,d
004DB6 B3                  B   957    				or e
004DB7 20 35               B   958    				jr nz,apenclch	
                           B   959    				
004DB9 CD 81 50 00         B   960    				call fs_find_free_cluster		004DBD D8                  B   961    				ret c
004DBE C0                  B   962    				ret nz
004DBF 2A F4 54 00         B   963    				ld hl,(fs_free_cluster)
004DC3 22 E4 54 00         B   964    				ld (fs_file_working_cluster),hl
004DC7 11FFFF00            B   965    				ld de,0ffffh
004DCB CD F7 52 00         B   966    				call update_fat_entry_for_clust
004DCF D8                  B   967    				ret c
                           B   968    			
004DD0 CD 16 54 00         B   969    				call restore_sector_lba			004DD4 CD 23 54 00         B   970    				call fs_read_sector
004DD8 D8                  B   971    				ret c
004DD9 DD2A FA 54 00       B   972    				ld ix,(fs_fname_in_sector_addr)
004DDE ED5B E4 54 00       B   973    				ld de,(fs_file_working_cluster)
004DE3 DD731A              B   974    				ld (ix+01ah),e
004DE6 DD721B              B   975    				ld (ix+01bh),d
004DE9 CD 3C 54 00         B   976    				call fs_write_sector			004DED D8                  B   977    				ret c
                           B   978    				
                           B   979    					
004DEE 2A E4 54 00         B   980    apenclch		ld hl,(fs_file_working_cluster)
004DF2 CD CB 52 00         B   981    				call get_fat_entry_for_cluster
004DF6 D8                  B   982    				ret c
004DF7 CD 74 50 00         B   983    				call fs_compare_hl_fff8
004DFB 30 1C               B   984    				jr nc,atlclif
004DFD 22 E4 54 00         B   985    				ld (fs_file_working_cluster),hl
004E01 01000000            B   986    				ld bc,0
004E05 3A 97 54 00         B   987    				ld a,(fs_cluster_size)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E09 CB27                B   988    				sla a
004E0B 47                  B   989    				ld b,a
004E0C 2A DA 54 00         B   990    				ld hl,(fs_existing_file_length)
004E10 AF                  B   991    				xor a							004E11 ED42                B   992    				sbc hl,bc						004E13 22 DA 54 00         B   993    				ld (fs_existing_file_length),hl
004E17 18 D5               B   994    				jr apenclch
                           B   995    				
004E19 ED4B DA 54 00       B   996    atlclif			ld bc,(fs_existing_file_length)
004E1E CB38                B   997    				srl b				
004E20 48                  B   998    				ld c,b							004E21 3A 97 54 00         B   999    				ld a,(fs_cluster_size)
004E25 91                  B  1000    				sub c
004E26 47                  B  1001    				ld b,a							004E27 28 79               B  1002    				jr z,fs_sfncl					                           B  1003    				
004E29 2A E4 54 00         B  1004    				ld hl,(fs_file_working_cluster)
004E2D 79                  B  1005    				ld a,c
004E2E CD A2 53 00         B  1006    				call cluster_and_offset_to_lba
004E32 CD 23 54 00         B  1007    				call fs_read_sector
004E36 D8                  B  1008    				ret c
004E37 C5                  B  1009    				push bc							                           B  1010    				
004E38 11000000            B  1011    				ld de,0
004E3C 3A DA 54 00         B  1012    				ld a,(fs_existing_file_length)
004E40 5F                  B  1013    				ld e,a
004E41 3A DB 54 00         B  1014    				ld a,(fs_existing_file_length+1
004E45 E601                B  1015    				and 1
004E47 57                  B  1016    				ld d,a							004E48 21000200            B  1017    				ld hl,512	
004E4C AF                  B  1018    				xor a
004E4D ED52                B  1019    				sbc hl,de						004E4F E5                  B  1020    				push hl
004E50 C1                  B  1021    				pop bc							004E51 21 A6 66 00         B  1022    				ld hl,sector_buffer
004E55 19                  B  1023    				add hl,de
004E56 EB                  B  1024    				ex de,hl						004E57 7C                  B  1025    				ld a,h			
004E58 B5                  B  1026    				or l
004E59 20 04               B  1027    				jr nz,fs_dcsb					004E5B CD A9 51 00         B  1028    fs_dbfil		call fs_clear_sector_buffer
004E5F 2A E7 54 00         B  1029    fs_dcsb			ld hl,(fs_ez80_address)			004E63 EDA0                B  1030    fs_cbsb			ldi								004E65 7C                  B  1031    				ld a,h							004E66 B5                  B  1032    				or l
004E67 20 0D               B  1033    				jr nz,fs_srcadok
004E69 22 E7 54 00         B  1034    				ld (fs_ez80_address),hl
004E6D 3A E9 54 00         B  1035    				ld a,(fs_ez80_address+2)
004E71 B7                  B  1036    				or a
004E72 CA 93 4B 00         B  1037    				jp z,fs_mem_error
004E76 CD 2B 53 00         B  1038    fs_srcadok		call transfer_length_countdown
004E7A 28 54               B  1039    				jr z,fs_lbof					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E7C 78                  B  1040    fs_sadok		ld a,b							004E7D B1                  B  1041    				or c
004E7E 20 E3               B  1042    				jr nz,fs_cbsb					                           B  1043    
004E80 22 E7 54 00         B  1044    				ld (fs_ez80_address),hl			004E84 C1                  B  1045    				pop bc							004E85 79                  B  1046    				ld a,c
004E86 2A E4 54 00         B  1047    				ld hl,(fs_file_working_cluster)
004E8A CD A2 53 00         B  1048    				call cluster_and_offset_to_lba
004E8E CD 3C 54 00         B  1049    				call fs_write_sector			004E92 D8                  B  1050    				ret c							004E93 0C                  B  1051    				inc c							004E94 05                  B  1052    				dec b
004E95 28 0B               B  1053    				jr z,fs_sfncl					004E97 C5                  B  1054    fs_sfns			push bc				
004E98 01000200            B  1055    				ld bc,512						004E9C 11 A6 66 00         B  1056    				ld de,sector_buffer				004EA0 18 B9               B  1057    				jr fs_dbfil						                           B  1058    				
004EA2 CD 81 50 00         B  1059    fs_sfncl		call fs_find_free_cluster		004EA6 D8                  B  1060    				ret c							004EA7 C0                  B  1061    				ret nz							004EA8 2A E4 54 00         B  1062    				ld hl,(fs_file_working_cluster)
004EAC ED5B F4 54 00       B  1063    				ld de,(fs_free_cluster)
004EB1 CD F7 52 00         B  1064    				call update_fat_entry_for_clust
004EB5 D8                  B  1065    				ret c
004EB6 2A F4 54 00         B  1066    				ld hl,(fs_free_cluster)
004EBA 22 E4 54 00         B  1067    				ld (fs_file_working_cluster),hl
004EBE 11FFFF00            B  1068    				ld de,0ffffh
004EC2 CD F7 52 00         B  1069    				call update_fat_entry_for_clust
004EC6 D8                  B  1070    				ret c
004EC7 3A 97 54 00         B  1071    				ld a,(fs_cluster_size)
004ECB 47                  B  1072    				ld b,a							004ECC 0E00                B  1073    				ld c,0							004ECE 18 C7               B  1074    				jr fs_sfns						                           B  1075    				
004ED0 C1                  B  1076    fs_lbof			pop bc
004ED1 79                  B  1077    				ld a,c							004ED2 2A E4 54 00         B  1078    				ld hl,(fs_file_working_cluster)
004ED6 CD A2 53 00         B  1079    				call cluster_and_offset_to_lba
004EDA CD 3C 54 00         B  1080    				call fs_write_sector	
004EDE D8                  B  1081    				ret c
004EDF AF                  B  1082    				xor a							004EE0 C9                  B  1083    				ret
                           B  1084    
                           B  1085    ;----------------------------------------------
                           B  1086    
004EE1                     B  1087    fs_erase_file_command
                           B  1088    
                           B  1089    
004EE1 CD BB 51 00         B  1090    				call fs_find_filename			004EE5 D8                  B  1091    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004EE6 C0                  B  1092    				ret nz
                           B  1093    				
004EE7 DDCB0B66            B  1094    				bit 4,(ix+0bh)					004EEB 28 04               B  1095    				jr z,okdelf
004EED AF                  B  1096    				xor a
004EEE 3EC6                B  1097    				ld a,0c6h						004EF0 C9                  B  1098    				ret
                           B  1099    				
004EF1 DDE5                B  1100    okdelf			push ix
004EF3 E1                  B  1101    				pop hl
004EF4 C3 E5 4C 00         B  1102    				jp fs_delco						                           B  1103    					
                           B  1104    
                           B  1105    ;----------------------------------------------
                           B  1106    
                           B  1107    
004EF8                     B  1108    fs_rename_command
                           B  1109    
004EF8 CD BB 51 00         B  1110    				call fs_find_filename			004EFC D8                  B  1111    				ret c							004EFD FEC2                B  1112    				cp 0c2h							004EFF 28 04               B  1113    				jr z,fs_nfnok					004F01 AF                  B  1114    				xor a							004F02 3EC9                B  1115    				ld a,0c9h						004F04 C9                  B  1116    				ret
                           B  1117    			
004F05 21 AE 54 00         B  1118    fs_nfnok		ld hl,fs_sought_filename		004F09 11 C6 54 00         B  1119    				ld de,fs_filename_buffer
004F0D 010B0000            B  1120    				ld bc,11
004F11 EDB0                B  1121    				ldir
004F13 21 BA 54 00         B  1122    				ld hl,fs_alt_filename			004F17 11 AE 54 00         B  1123    				ld de,fs_sought_filename
004F1B 010B0000            B  1124    				ld bc,11
004F1F EDB0                B  1125    				ldir
004F21 CD BB 51 00         B  1126    				call fs_find_filename			004F25 D8                  B  1127    				ret c
004F26 FEC2                B  1128    				cp 0c2h
004F28 C8                  B  1129    				ret z							                           B  1130    				
004F29 DDE5                B  1131    				push ix
004F2B D1                  B  1132    				pop de
004F2C 21 C6 54 00         B  1133    				ld hl,fs_filename_buffer	 	004F30 010B0000            B  1134    				ld bc,11
004F34 EDB0                B  1135    				ldir							004F36 CD 3C 54 00         B  1136    				call fs_write_sector			                           B  1137    				
004F3A AF                  B  1138    fs_rndone		xor a
004F3B C9                  B  1139    				ret
                           B  1140    				
                           B  1141    
                           B  1142    ;----------------------------------------------
                           B  1143    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1144    
004F3C                     B  1145    fs_goto_first_dir_entry
                           B  1146    
004F3C CD AA 1A 00         B  1147    				call fs_get_dir_cluster
004F40 ED53 FD 54 00       B  1148    				ld (fs_dir_entry_cluster),de
004F45 AF                  B  1149    				xor a
004F46 32 03 55 00         B  1150    				ld (fs_dir_entry_sector),a		004F4A 11000000            B  1151    				ld de,0
004F4E ED53 00 55 00       B  1152    				ld (fs_dir_entry_line_offset),d
                           B  1153    				
                           B  1154    
                           B  1155    
004F53                     B  1156    fs_get_dir_entry
                           B  1157    
                           B  1158    ; No input parameters.
                           B  1159    ;
                           B  1160    ; Returns HL    = Location of null terminated f
                           B  1161    ;         IX:IY = Length of file (if applicable
                           B  1162    ;         B     = File flag (1 = directory, 0 =
                           B  1163    ;         A     = Error code
                           B  1164    ;         Carry = Set if hardware error encount
                           B  1165    
                           B  1166    
004F53 3A 03 55 00         B  1167    				ld a,(fs_dir_entry_sector)		004F57 4F                  B  1168    				ld c,a
004F58 2A FD 54 00         B  1169    				ld hl,(fs_dir_entry_cluster)	004F5C CD A2 53 00         B  1170    				call cluster_and_offset_to_lba
                           B  1171    			
004F60 7C                  B  1172    				ld a,h							004F61 B5                  B  1173    				or l							004F62 20 09               B  1174    				jr nz,nr_read					004F64 2A A1 54 00         B  1175    				ld hl,(fs_root_dir_position)	004F68 79                  B  1176    				ld a,c
004F69 CD E8 53 00         B  1177    				call set_absolute_lba
                           B  1178    				
004F6D CD 23 54 00         B  1179    nr_read			call fs_read_sector				004F71 D8                  B  1180    				ret c							                           B  1181    				
004F72 ED5B 00 55 00       B  1182    				ld de,(fs_dir_entry_line_offset
004F77 DD21 A6 66 00       B  1183    dscan_int_loop	ld ix,sector_buffer
004F7C DD19                B  1184    				add ix,de
004F7E DD7E00              B  1185    ds_int_loop		ld a,(ix)
004F81 B7                  B  1186    				or a							004F82 28 0E               B  1187    				jr z,fs_dir_entry_free		
004F84 FEE5                B  1188    				cp 0e5h							004F86 28 0A               B  1189    				jr z,fs_dir_entry_free	
004F88 FE05                B  1190    				cp 05h							004F8A 28 06               B  1191    				jr z,fs_dir_entry_free	
004F8C DDCB0B5E            B  1192    				bit 3,(ix+0bh)					004F90 28 0D               B  1193    				jr z,fs_dir_entry_in_use		                           B  1194    
004F92                     B  1195    fs_dir_entry_free
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1196    
004F92 EB                  B  1197    				ex de,hl
004F93 11200000            B  1198    				ld de,32
004F97 19                  B  1199    				add hl,de
004F98 EB                  B  1200    				ex de,hl
004F99 CB4A                B  1201    				bit 1,d
004F9B 28 DA               B  1202    				jr z,dscan_int_loop
004F9D 18 54               B  1203    				jr dscan_new_sect
                           B  1204    
004F9F                     B  1205    fs_dir_entry_in_use
                           B  1206    				
004F9F ED53 00 55 00       B  1207    				ld (fs_dir_entry_line_offset),d
004FA4 DDE5                B  1208    				push ix
004FA6 E1                  B  1209    				pop hl
004FA7 CD 6F 10 00         B  1210    				call os_clear_output_line
004FAB 0608                B  1211    				ld b,8							004FAD 11 C6 61 00         B  1212    				ld de,output_line
004FB1 7E                  B  1213    dcopyn			ld a,(hl)
004FB2 FE20                B  1214    				cp ' '							004FB4 28 02               B  1215    				jr z,digchar
004FB6 12                  B  1216    				ld (de),a
004FB7 13                  B  1217    				inc de
004FB8 23                  B  1218    digchar			inc hl
004FB9 10 F6               B  1219    				djnz dcopyn
004FBB 7E                  B  1220    				ld a,(hl)						004FBC FE20                B  1221    				cp ' '							004FBE 28 0A               B  1222    				jr z,dirnoex
004FC0 3E2E                B  1223    				ld a,'.'						004FC2 12                  B  1224    				ld (de),a
004FC3 13                  B  1225    				inc de	
004FC4 01030000            B  1226    				ld bc,3							004FC8 EDB0                B  1227    				ldir
004FCA AF                  B  1228    dirnoex			xor a 
004FCB 12                  B  1229    				ld (de),a						                           B  1230    				
004FCC 47                  B  1231    				ld b,a
004FCD DDCB0B66            B  1232    				bit 4,(ix+0bh)					004FD1 28 01               B  1233    				jr z,fs_fniaf		
004FD3 04                  B  1234    				inc b							004FD4 DD171C              B  1235    fs_fniaf		ld de,(ix+01ch)					004FD7 DD4E1F              B  1236    				ld c,(ix+01fh)
004FDA 21 C6 61 00         B  1237    				ld hl,output_line				004FDE AF                  B  1238    				xor a
004FDF C9                  B  1239    				ret
                           B  1240    
                           B  1241    
                           B  1242    
                           B  1243    
004FE0                     B  1244    fs_goto_next_dir_entry
                           B  1245    
004FE0 11200000            B  1246    				ld de,32
004FE4 2A 00 55 00         B  1247    				ld hl,(fs_dir_entry_line_offset
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FE8 19                  B  1248    				add hl,de
004FE9 22 00 55 00         B  1249    				ld (fs_dir_entry_line_offset),h
004FED CB4C                B  1250    				bit 1,h
004FEF CA 53 4F 00         B  1251    				jp z,fs_get_dir_entry
                           B  1252    
004FF3 21000000            B  1253    dscan_new_sect	ld hl,0				
004FF7 22 00 55 00         B  1254    				ld (fs_dir_entry_line_offset),h
                           B  1255    			
004FFB 21 03 55 00         B  1256    				ld hl,fs_dir_entry_sector
004FFF 34                  B  1257    				inc (hl)						                           B  1258    			
005000 ED5B FD 54 00       B  1259    				ld de,(fs_dir_entry_cluster)
005005 7A                  B  1260    				ld a,d
005006 B3                  B  1261    				or e							005007 20 0B               B  1262    				jr nz,nonroot2
005009 3A A7 54 00         B  1263    				ld a,(fs_root_dir_sectors)
00500D BE                  B  1264    				cp (hl)
00500E 28 23               B  1265    				jr z,endofdir			
005010 C3 53 4F 00         B  1266    				jp fs_get_dir_entry
                           B  1267    												005014 3A 97 54 00         B  1268    nonroot2		ld a,(fs_cluster_size)		
005018 BE                  B  1269    				cp (hl)							005019 C2 53 4F 00         B  1270    				jp nz,fs_get_dir_entry
00501D 3600                B  1271    				ld (hl),0						00501F 2A FD 54 00         B  1272    				ld hl,(fs_dir_entry_cluster)
005023 CD CB 52 00         B  1273    				call get_fat_entry_for_cluster
005027 22 FD 54 00         B  1274    				ld (fs_dir_entry_cluster),hl
00502B CD 74 50 00         B  1275    				call fs_compare_hl_fff8			00502F DA 53 4F 00         B  1276    				jp c,fs_get_dir_entry
                           B  1277    	
005033 3ED2                B  1278    endofdir		ld a,0d2h
005035 B7                  B  1279    				or a							005036 C9                  B  1280    				ret	
                           B  1281    				
                           B  1282    ;----------------------------------------------
                           B  1283    
005037                     B  1284    fs_get_volume_label
                           B  1285    
                           B  1286    
                           B  1287    ; On return HL = volume label
                           B  1288    
                           B  1289    
005037 2A A1 54 00         B  1290    				ld hl,(fs_root_dir_position)
00503B 0E00                B  1291    				ld c,0
00503D AF                  B  1292    gvl_nrsec		xor a
00503E CD F9 53 00         B  1293    				call set_abs_lba_and_read_secto
005042 D8                  B  1294    				ret c
005043 0610                B  1295    				ld b,16							005045 DD21 A6 66 00       B  1296    				ld ix,sector_buffer
00504A DD7E0B              B  1297    find_vl			ld a,(ix+0bh)
00504D FE08                B  1298    				cp 08h
00504F 28 1A               B  1299    				jr z,got_label
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005051 ED3220              B  1300    				lea ix,ix+32					005054 10 F4               B  1301    				djnz find_vl					005056 23                  B  1302    				inc hl
005057 0C                  B  1303    				inc c
005058 3A A7 54 00         B  1304    				ld a,(fs_root_dir_sectors)		00505C B9                  B  1305    				cp c							00505D 20 DE               B  1306    				jr nz,gvl_nrsec
                           B  1307    			
00505F CD 4A 49 00         B  1308    				call fs_read_partition_bootsect
005063 D8                  B  1309    				ret c
005064 B7                  B  1310    				or a
005065 C0                  B  1311    				ret nz
005066 DD21 D1 66 00       B  1312    				ld ix,sector_buffer+02bh
                           B  1313    				
00506B DD360B00            B  1314    got_label		ld (ix+0bh),0					00506F DDE5                B  1315    				push ix
005071 E1                  B  1316    				pop hl
005072 AF                  B  1317    				xor a
005073 C9                  B  1318    				ret
                           B  1319    				
                           B  1320    				
                           B  1321    ;----------------------------------------------
                           B  1322    ; Internal subroutines
                           B  1323    ;----------------------------------------------
                           B  1324    
005074                     B  1325    fs_compare_hl_fff8
                           B  1326    
                           B  1327    ;INPUT HL = value to compare with fff8
                           B  1328    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1329    	
                           B  1330    	
005074 E5                  B  1331    				push hl
005075 D5                  B  1332    				push de
005076 11F8FF00            B  1333    				ld de,0fff8h			
00507A B7                  B  1334    				or a							00507B 52ED52              B  1335    				sbc.s hl,de						00507E D1                  B  1336    				pop de
00507F E1                  B  1337    				pop hl
005080 C9                  B  1338    				ret
                           B  1339    
                           B  1340    ;----------------------------------------------
                           B  1341    
                           B  1342    
005081                     B  1343    fs_find_free_cluster
                           B  1344    	
005081 DD210000 00         B  1345    				ld ix,0							005086 ED5B 9B 54 00       B  1346    				ld de,(fs_fat1_position)		00508B AF                  B  1347    				xor a				
00508C 32 F0 54 00         B  1348    fs_ffcl2		ld (fs_working_sector),a	
005090 D5                  B  1349    				push de
005091 E1                  B  1350    				pop hl
005092 3A F0 54 00         B  1351    				ld a,(fs_working_sector)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005096 CD F9 53 00         B  1352    				call set_abs_lba_and_read_secto
00509A D8                  B  1353    				ret c
00509B 21 A6 66 00         B  1354    				ld hl,sector_buffer
00509F 0600                B  1355    				ld b,0
0050A1 7E                  B  1356    fs_ffcl1		ld a,(hl)						0050A2 23                  B  1357    				inc hl
0050A3 B6                  B  1358    				or (hl)
0050A4 23                  B  1359    				inc hl
0050A5 28 14               B  1360    				jr z,fs_gotfc
0050A7 DD23                B  1361    				inc ix
0050A9 10 F6               B  1362    				djnz fs_ffcl1
                           B  1363    				
0050AB 2A A8 54 00         B  1364    				ld hl,(fs_sectors_per_fat)
0050AF 3A F0 54 00         B  1365    				ld a,(fs_working_sector)		0050B3 3C                  B  1366    				inc a				
0050B4 BD                  B  1367    				cp l		
0050B5 20 D5               B  1368    				jr nz,fs_ffcl2					0050B7 3EC1                B  1369    fs_dfull		ld a,c1h						0050B9 B7                  B  1370    				or a							0050BA C9                  B  1371    				ret
                           B  1372    			
0050BB DDE5                B  1373    fs_gotfc		push ix							0050BD E1                  B  1374    				pop hl							0050BE 2B                  B  1375    				dec hl							0050BF 2B                  B  1376    				dec hl							0050C0 ED5B AB 54 00       B  1377    				ld de,(fs_max_data_clusters)
0050C5 AF                  B  1378    				xor a
0050C6 52ED52              B  1379    				sbc.s hl,de						0050C9 30 EC               B  1380    				jr nc,fs_dfull
                           B  1381    			
0050CB DD22 F4 54 00       B  1382    				ld (fs_free_cluster),ix
0050D0 AF                  B  1383    				xor a
0050D1 C9                  B  1384    				ret
                           B  1385    	
                           B  1386    	
                           B  1387    ;----------------------------------------------
                           B  1388    	
                           B  1389    	
0050D2                     B  1390    fs_find_free_dir_entry
                           B  1391    
                           B  1392    
                           B  1393    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1394    
                           B  1395    			
0050D2 CD AA 1A 00         B  1396    				call fs_get_dir_cluster			0050D6 EB                  B  1397    				ex de,hl
0050D7 22 E4 54 00         B  1398    ffenxtclu		ld (fs_file_working_cluster),hl
0050DB AF                  B  1399    				xor a
0050DC 32 F0 54 00         B  1400    				ld (fs_working_sector),a
                           B  1401    			
0050E0 2A A1 54 00         B  1402    ffenxtsec		ld hl,(fs_root_dir_position)	0050E4 3A F0 54 00         B  1403    				ld a,(fs_working_sector)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050E8 CD E8 53 00         B  1404    				call set_absolute_lba
                           B  1405    				
0050EC CD AA 1A 00         B  1406    				call fs_get_dir_cluster			0050F0 7A                  B  1407    				ld a,d
0050F1 B3                  B  1408    				or e
0050F2 28 0C               B  1409    				jr z,at_rootd
0050F4 2A E4 54 00         B  1410    				ld hl,(fs_file_working_cluster)
0050F8 3A F0 54 00         B  1411    				ld a,(fs_working_sector)
0050FC CD A2 53 00         B  1412    				call cluster_and_offset_to_lba
                           B  1413    				
005100 CD 23 54 00         B  1414    at_rootd		call fs_read_sector
005104 D8                  B  1415    				ret c
005105 0610                B  1416    				ld b,16							005107 11200000            B  1417    				ld de,32
00510B DD21 A6 66 00       B  1418    				ld ix,sector_buffer
005110 DD7E00              B  1419    scdirfe			ld a,(ix)						005113 B7                  B  1420    				or a
005114 28 65               B  1421    				jr z,got_fde
005116 FEE5                B  1422    				cp 0e5h
005118 28 61               B  1423    				jr z,got_fde
00511A DD19                B  1424    				add ix,de						00511C 10 F2               B  1425    				djnz scdirfe					                           B  1426    				
00511E 21 F0 54 00         B  1427    				ld hl,fs_working_sector			005122 34                  B  1428    				inc (hl)
                           B  1429    				
005123 CD AA 1A 00         B  1430    				call fs_get_dir_cluster			005127 7A                  B  1431    				ld a,d
005128 B3                  B  1432    				or e
005129 20 0B               B  1433    				jr nz,ffenotroo
00512B 3A A7 54 00         B  1434    				ld a,(fs_root_dir_sectors)		00512F BE                  B  1435    				cp (hl)							005130 20 AE               B  1436    				jr nz,ffenxtsec
005132 AF                  B  1437    fenotfnd		xor a							005133 3EC3                B  1438    				ld a,0c3h						005135 C9                  B  1439    				ret
                           B  1440    			
005136 3A 97 54 00         B  1441    ffenotroo		ld a,(fs_cluster_size)			00513A BE                  B  1442    				cp (hl)
00513B 20 A3               B  1443    				jr nz,ffenxtsec
00513D 2A E4 54 00         B  1444    				ld hl,(fs_file_working_cluster)
005141 CD CB 52 00         B  1445    				call get_fat_entry_for_cluster	005145 D8                  B  1446    				ret c
005146 CD 74 50 00         B  1447    				call fs_compare_hl_fff8			00514A 38 8B               B  1448    				jr c,ffenxtclu
                           B  1449    			
00514C CD 81 50 00         B  1450    				call fs_find_free_cluster		005150 D8                  B  1451    				ret c							005151 C0                  B  1452    				ret nz							005152 ED5B F4 54 00       B  1453    				ld de,(fs_free_cluster)
005157 2A E4 54 00         B  1454    				ld hl,(fs_file_working_cluster)
00515B CD F7 52 00         B  1455    				call update_fat_entry_for_clust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00515F D8                  B  1456    				ret c
005160 EB                  B  1457    				ex de,hl						005161 11FFFF00            B  1458    				ld de,0ffffh
005165 CD F7 52 00         B  1459    				call update_fat_entry_for_clust
005169 D8                  B  1460    				ret c
                           B  1461    			
00516A 2A F4 54 00         B  1462    				ld hl,(fs_free_cluster)			00516E CD 7D 51 00         B  1463    				call fs_clear_cluster			005172 D8                  B  1464    				ret c
005173 2A F4 54 00         B  1465    				ld hl,(fs_free_cluster)			005177 C3 D7 50 00         B  1466    				jp ffenxtclu					                           B  1467    			
00517B AF                  B  1468    got_fde			xor a
00517C C9                  B  1469    				ret
                           B  1470    					
                           B  1471    
                           B  1472    ;----------------------------------------------
                           B  1473    
00517D                     B  1474    fs_clear_cluster
                           B  1475    
                           B  1476    ;INPUT HL = cluster to clear
                           B  1477    
00517D 22 F1 54 00         B  1478    				ld (fs_working_cluster),hl
                           B  1479    			
005181 CD A9 51 00         B  1480    				call fs_clear_sector_buffer
                           B  1481    					
005185 AF                  B  1482    				xor a				
005186 32 F0 54 00         B  1483    				ld (fs_working_sector),a		00518A 3A F0 54 00         B  1484    wipeclulp		ld a,(fs_working_sector)		00518E 2A F1 54 00         B  1485    				ld hl,(fs_working_cluster)		005192 CD A2 53 00         B  1486    				call cluster_and_offset_to_lba	005196 CD 3C 54 00         B  1487    				call fs_write_sector
00519A D8                  B  1488    				ret c
00519B 21 F0 54 00         B  1489    				ld hl,fs_working_sector
00519F 34                  B  1490    				inc (hl)
0051A0 3A 97 54 00         B  1491    				ld a,(fs_cluster_size)
0051A4 BE                  B  1492    				cp (hl)
0051A5 20 E3               B  1493    				jr nz,wipeclulp
0051A7 AF                  B  1494    				xor a
0051A8 C9                  B  1495    				ret
                           B  1496    			
                           B  1497    			
0051A9                     B  1498    fs_clear_sector_buffer
                           B  1499    			
0051A9 E5                  B  1500    				push hl
0051AA C5                  B  1501    				push bc
0051AB 21 A6 66 00         B  1502    				ld hl,sector_buffer			
0051AF 01000200            B  1503    				ld bc,512				
0051B3 AF                  B  1504    				xor a				
0051B4 CD C6 15 00         B  1505    				call os_bchl_memfill	
0051B8 C1                  B  1506    				pop bc
0051B9 E1                  B  1507    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0051BA C9                  B  1508    				ret
                           B  1509    				
                           B  1510    
                           B  1511    	
                           B  1512    ;----------------------------------------------
                           B  1513    	
0051BB                     B  1514    fs_find_filename
                           B  1515    
0051BB AF                  B  1516    				xor a
                           B  1517    
0051BC                     B  1518    fs_search	
                           B  1519    				
0051BC 32 0B 55 00         B  1520    				ld (fs_search_type),a
                           B  1521    			
                           B  1522    ; OUTPUT IX start of 32 byte dir entry
                           B  1523    			
0051C0 CD AA 1A 00         B  1524    				call fs_get_dir_cluster
0051C4 ED53 E4 54 00       B  1525    ffnnxtclu		ld (fs_file_working_cluster),de
0051C9 AF                  B  1526    				xor a
0051CA 32 F0 54 00         B  1527    				ld (fs_working_sector),a
                           B  1528    			
0051CE 2A A1 54 00         B  1529    ffnnxtsec		ld hl,(fs_root_dir_position)	0051D2 3A F0 54 00         B  1530    				ld a,(fs_working_sector)
0051D6 CD E8 53 00         B  1531    				call set_absolute_lba
                           B  1532    				
0051DA CD AA 1A 00         B  1533    				call fs_get_dir_cluster			0051DE 7A                  B  1534    				ld a,d
0051DF B3                  B  1535    				or e
0051E0 28 0C               B  1536    				jr z,at_rootd2
0051E2 2A E4 54 00         B  1537    				ld hl,(fs_file_working_cluster)
0051E6 3A F0 54 00         B  1538    				ld a,(fs_working_sector)
0051EA CD A2 53 00         B  1539    				call cluster_and_offset_to_lba	                           B  1540    				
0051EE CD 23 54 00         B  1541    at_rootd2		call fs_read_sector
0051F2 D8                  B  1542    				ret c
0051F3 0E10                B  1543    				ld c,16							0051F5 DD21 A6 66 00       B  1544    				ld ix,sector_buffer
0051FA DDE5                B  1545    ndirentr		push ix
0051FC D1                  B  1546    				pop de
0051FD 3A 0B 55 00         B  1547    				ld a,(fs_search_type)
005201 B7                  B  1548    				or a
005202 28 1E               B  1549    				jr z,fs_ststr
                           B  1550    			
005204 DD7E00              B  1551    				ld a,(ix)						005207 FE80                B  1552    				cp 080h							005209 30 35               B  1553    				jr nc,fnnotsame
00520B FE20                B  1554    				cp 020h
00520D 38 31               B  1555    				jr c,fnnotsame
00520F ED5B 08 55 00       B  1556    				ld de,(fs_stash_dir_block)		005214 DD7E1A              B  1557    				ld a,(ix+01ah)
005217 BB                  B  1558    				cp e
005218 20 26               B  1559    				jr nz,fnnotsame
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00521A DD7E1B              B  1560    				ld a,(ix+01bh)
00521D BA                  B  1561    				cp d
00521E 28 1E               B  1562    				jr z,fs_found
005220 18 1E               B  1563    				jr fnnotsame
                           B  1564    				
005222 FD21 AE 54 00       B  1565    fs_ststr		ld iy,fs_sought_filename		005227 060B                B  1566    				ld b,11							005229 1A                  B  1567    cmpfnlp			ld a,(de)						00522A CD 63 12 00         B  1568    				call os_uppercasify				00522E 6F                  B  1569    				ld l,a
00522F FD7E00              B  1570    				ld a,(iy)
005232 CD 63 12 00         B  1571    				call os_uppercasify
005236 BD                  B  1572    				cp l				
005237 20 07               B  1573    				jr nz,fnnotsame
005239 FD23                B  1574    				inc iy
00523B 13                  B  1575    				inc de
00523C 10 EB               B  1576    				djnz cmpfnlp
00523E AF                  B  1577    fs_found		xor a							00523F C9                  B  1578    				ret
                           B  1579    			
005240 11200000            B  1580    fnnotsame		ld de,32						005244 DD19                B  1581    				add ix,de
005246 0D                  B  1582    				dec c
005247 20 B1               B  1583    				jr nz,ndirentr					                           B  1584    				
005249 21 F0 54 00         B  1585    				ld hl,fs_working_sector			00524D 34                  B  1586    				inc (hl)
                           B  1587    				
00524E CD AA 1A 00         B  1588    				call fs_get_dir_cluster			005252 7A                  B  1589    				ld a,d
005253 B3                  B  1590    				or e
005254 20 0D               B  1591    				jr nz,notrootdir
005256 3A A7 54 00         B  1592    				ld a,(fs_root_dir_sectors)		00525A BE                  B  1593    				cp (hl)							00525B C2 CE 51 00         B  1594    				jp nz,ffnnxtsec
00525F 3EC2                B  1595    fnnotfnd		ld a,0c2h						005261 B7                  B  1596    				or a
005262 C9                  B  1597    				ret
                           B  1598    			
005263                     B  1599    notrootdir
                           B  1600    				
005263 3A 97 54 00         B  1601    				ld a,(fs_cluster_size)			005267 BE                  B  1602    				cp (hl)
005268 C2 CE 51 00         B  1603    				jp nz,ffnnxtsec
                           B  1604    				
00526C 2A E4 54 00         B  1605    				ld hl,(fs_file_working_cluster)
005270 CD CB 52 00         B  1606    				call get_fat_entry_for_cluster
005274 D8                  B  1607    				ret c
005275 CD 74 50 00         B  1608    				call fs_compare_hl_fff8			005279 30 E4               B  1609    				jr nc,fnnotfnd					00527B EB                  B  1610    				ex de,hl						00527C C3 C4 51 00         B  1611    				jp ffnnxtclu					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1612    				
                           B  1613    
                           B  1614    ;----------------------------------------------
                           B  1615    
005280                     B  1616    fs_hl_to_alt_filename
                           B  1617    
005280 11 BA 54 00         B  1618    				ld de,fs_alt_filename
005284 18 04               B  1619    				jr hltofngo
                           B  1620    
                           B  1621    
005286                     B  1622    fs_hl_to_filename
                           B  1623    
                           B  1624    ;INPUT: HL = address of filename (null / space 
                           B  1625    ;OUTPUT HL = address of first character after f
                           B  1626    ;        C = number of characters in filename
                           B  1627    
005286 11 AE 54 00         B  1628    				ld de,fs_sought_filename
00528A CD 95 53 00         B  1629    hltofngo		call fs_clear_filename			00528E D5                  B  1630    				push de			
00528F DDE1                B  1631    				pop ix							                           B  1632    				
005291 0E00                B  1633    				ld c,0
005293 0608                B  1634    				ld b,8
005295 7E                  B  1635    csfnlp2			ld a,(hl)						005296 B7                  B  1636    				or a
005297 C8                  B  1637    				ret z							005298 FE20                B  1638    				cp 32
00529A C8                  B  1639    				ret z							00529B FE2F                B  1640    				cp 02fh
00529D C8                  B  1641    				ret z							00529E FE2E                B  1642    				cp '.'
0052A0 28 16               B  1643    				jr z,dofn_ext					0052A2 12                  B  1644    				ld (de),a
0052A3 13                  B  1645    				inc de
0052A4 23                  B  1646    				inc hl
0052A5 0C                  B  1647    				inc c							0052A6 10 ED               B  1648    				djnz csfnlp2					0052A8 7E                  B  1649    find_ext		ld a,(hl)
0052A9 FE2E                B  1650    				cp '.'							0052AB 28 0B               B  1651    				jr z,dofn_ext	
0052AD FE20                B  1652    				cp ' '							0052AF C8                  B  1653    				ret z
0052B0 FE2F                B  1654    				cp 02fh
0052B2 C8                  B  1655    				ret z
0052B3 B7                  B  1656    				or a
0052B4 C8                  B  1657    				ret z
0052B5 23                  B  1658    				inc hl
0052B6 18 F0               B  1659    				jr find_ext
                           B  1660    				
0052B8 23                  B  1661    dofn_ext		inc hl							0052B9 0603                B  1662    				ld b,3				
0052BB 7E                  B  1663    fnextlp			ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052BC B7                  B  1664    				or a
0052BD C8                  B  1665    				ret z							0052BE FE20                B  1666    				cp 32
0052C0 C8                  B  1667    				ret z
0052C1 DD7708              B  1668    				ld (ix+8),a
0052C4 DD23                B  1669    				inc ix
0052C6 23                  B  1670    				inc hl
0052C7 0C                  B  1671    				inc c
0052C8 10 F1               B  1672    				djnz fnextlp
0052CA C9                  B  1673    				ret
                           B  1674    				
                           B  1675    ;----------------------------------------------
                           B  1676    
                           B  1677    
0052CB                     B  1678    get_fat_entry_for_cluster
                           B  1679    
                           B  1680    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1681    
0052CB C5                  B  1682    				push bc
0052CC D5                  B  1683    				push de
0052CD 01000000            B  1684    				ld bc,0
0052D1 4D                  B  1685    				ld c,l
0052D2 7C                  B  1686    				ld a,h
0052D3 2A 9B 54 00         B  1687    				ld hl,(fs_fat1_position)
0052D7 CD F9 53 00         B  1688    				call set_abs_lba_and_read_secto
0052DB 38 17               B  1689    				jr c,hwerr
0052DD DDE5                B  1690    				push ix
0052DF DD21 A6 66 00       B  1691    				ld ix,sector_buffer
0052E4 DD09                B  1692    				add ix,bc
0052E6 DD09                B  1693    				add ix,bc
0052E8 21000000            B  1694    				ld hl,0
0052EC DD6E00              B  1695    				ld l,(ix)
0052EF DD6601              B  1696    				ld h,(ix+1)
0052F2 DDE1                B  1697    				pop ix
0052F4 D1                  B  1698    hwerr			pop de
0052F5 C1                  B  1699    				pop bc
0052F6 C9                  B  1700    				ret
                           B  1701    
                           B  1702    
                           B  1703    ;----------------------------------------------
                           B  1704    
                           B  1705    
0052F7                     B  1706    update_fat_entry_for_cluster
                           B  1707    
                           B  1708    ; INPUT: HL = cluster in question
                           B  1709    ;        DE = new value to put in FAT tables
                           B  1710    			
0052F7 C5                  B  1711    				push bc
0052F8 E5                  B  1712    				push hl
0052F9 01000000            B  1713    				ld bc,0
0052FD 4D                  B  1714    				ld c,l
0052FE 7C                  B  1715    				ld a,h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052FF 2A 9B 54 00         B  1716    				ld hl,(fs_fat1_position)		005303 CD 17 53 00         B  1717    				call fat_upd
005307 38 0B               B  1718    				jr c,fup_end
                           B  1719    			
005309 E1                  B  1720    				pop hl
00530A E5                  B  1721    				push hl
00530B 7C                  B  1722    				ld a,h
00530C 2A 9E 54 00         B  1723    				ld hl,(fs_fat2_position)		005310 CD 17 53 00         B  1724    				call fat_upd
005314 E1                  B  1725    fup_end			pop hl
005315 C1                  B  1726    				pop bc
005316 C9                  B  1727    				ret
                           B  1728    			
                           B  1729    			
005317 CD F9 53 00         B  1730    fat_upd			call set_abs_lba_and_read_secto
00531B 38 0D               B  1731    				jr c,ufehwerr
00531D 21 A6 66 00         B  1732    				ld hl,sector_buffer
005321 09                  B  1733    				add hl,bc
005322 09                  B  1734    				add hl,bc
005323 73                  B  1735    				ld (hl),e
005324 23                  B  1736    				inc hl
005325 72                  B  1737    				ld (hl),d
005326 CD 3C 54 00         B  1738    				call fs_write_sector
00532A C9                  B  1739    ufehwerr		ret
                           B  1740    				
                           B  1741    	
                           B  1742    ;----------------------------------------------
                           B  1743    
00532B                     B  1744    transfer_length_countdown
                           B  1745    
00532B E5                  B  1746    				push hl							00532C C5                  B  1747    				push bc
                           B  1748    			
00532D 0604                B  1749    				ld b,4
00532F 21 D2 54 00         B  1750    				ld hl,fs_file_pointer			005333 34                  B  1751    fpinclp			inc (hl)
005334 20 03               B  1752    				jr nz,fs_fpino
005336 23                  B  1753    				inc hl
005337 10 FA               B  1754    				djnz fpinclp
                           B  1755    				
005339 2A DE 54 00         B  1756    fs_fpino		ld hl,(fs_file_transfer_length)
00533D 2B                  B  1757    				dec hl
00533E 22 DE 54 00         B  1758    				ld (fs_file_transfer_length),hl
005342 01000000            B  1759    				ld bc,0
005346 B7                  B  1760    				or a
005347 ED4A                B  1761    				adc hl,bc						                           B  1762    				
005349 C1                  B  1763    				pop bc
00534A E1                  B  1764    				pop hl
00534B C9                  B  1765    				ret
                           B  1766    
                           B  1767    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1768    
00534C                     B  1769    fs_get_current_dir_name
                           B  1770    
                           B  1771    ;returns current dir name - location at HL
                           B  1772    
00534C CD AA 1A 00         B  1773    				call fs_get_dir_cluster			005350 7A                  B  1774    				ld a,d
005351 B3                  B  1775    				or e
005352 20 10               B  1776    				jr nz,fs_dnnr
005354 21 80 5F 00         B  1777    				ld hl,vol_txt+1					005358 3A 7B 5F 00         B  1778    				ld a,(current_volume)
00535C C630                B  1779    				add a,030h
00535E 32 83 5F 00         B  1780    				ld (vol_txt+4),a
005362 AF                  B  1781    				xor a
005363 C9                  B  1782    				ret
                           B  1783    					
005364 ED53 08 55 00       B  1784    fs_dnnr			ld (fs_stash_dir_block),de
005369 CD FC 49 00         B  1785    				call fs_parent_dir_command		00536D D8                  B  1786    				ret c
00536E B7                  B  1787    				or a
00536F C0                  B  1788    				ret nz
005370 3E01                B  1789    				ld a,1
005372 CD BC 51 00         B  1790    				call fs_search					005376 D8                  B  1791    				ret c
005377 C0                  B  1792    				ret nz
                           B  1793    					
005378 DDE5                B  1794    fs_gdbn			push ix
00537A E1                  B  1795    				pop hl
00537B 060B                B  1796    				ld b,11							00537D 7E                  B  1797    ntdirn			ld a,(hl)
00537E FE20                B  1798    				cp ' '
005380 28 03               B  1799    				jr z,rdirfsp
005382 23                  B  1800    				inc hl
005383 10 F8               B  1801    rdirnsp			djnz ntdirn
                           B  1802    				
005385 3600                B  1803    rdirfsp			ld (hl),0
005387 DDE5                B  1804    				push ix
005389 ED5B 08 55 00       B  1805    				ld de,(fs_stash_dir_block)
00538E CD B6 1A 00         B  1806    				call fs_update_dir_cluster		005392 E1                  B  1807    				pop hl	
005393 AF                  B  1808    				xor a							005394 C9                  B  1809    				ret
                           B  1810    
                           B  1811    ;----------------------------------------------
                           B  1812    
005395                     B  1813    fs_clear_filename
                           B  1814    
005395 D5                  B  1815    				push de							005396 C5                  B  1816    				push bc
005397 060C                B  1817    				ld b,12
005399 3E20                B  1818    				ld a,' '
00539B 12                  B  1819    clrfnlp			ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00539C 13                  B  1820    				inc de
00539D 10 FC               B  1821    				djnz clrfnlp
00539F C1                  B  1822    				pop bc
0053A0 D1                  B  1823    				pop de
0053A1 C9                  B  1824    				ret
                           B  1825    				
                           B  1826    ;----------------------------------------------
                           B  1827    
                           B  1828    
0053A2                     B  1829    cluster_and_offset_to_lba
                           B  1830    
                           B  1831    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1832    
0053A2 C5                  B  1833    				push bc
0053A3 D5                  B  1834    				push de
0053A4 E5                  B  1835    				push hl
0053A5 DDE5                B  1836    				push ix
                           B  1837    
0053A7 2B                  B  1838    				dec hl							0053A8 2B                  B  1839    				dec hl							0053A9 11000000            B  1840    				ld de,0							0053AD 01000000            B  1841    				ld bc,0
0053B1 5F                  B  1842    				ld e,a
0053B2 3A 97 54 00         B  1843    				ld a,(fs_cluster_size)			0053B6 CB3F                B  1844    caotllp			srl a
0053B8 28 03               B  1845    				jr z,clusdone
0053BA 29                  B  1846    				add hl,hl						0053BB 18 F9               B  1847    				jr caotllp
                           B  1848    			
0053BD ED4B A4 54 00       B  1849    clusdone		ld bc,(fs_data_area)			0053C2 09                  B  1850    				add hl,bc						0053C3 19                  B  1851    				add hl,de						                           B  1852    				
0053C4 E5                  B  1853    add_ptn_offset	push hl							0053C5 CD E4 1A 00         B  1854    				call fs_calc_volume_offset
0053C9 DD21 A7 5F 00       B  1855    				ld ix,volume_mount_list
0053CE DD19                B  1856    				add ix,de
0053D0 E1                  B  1857    				pop hl
0053D1 DD0708              B  1858    				ld bc,(ix+08h)					0053D4 DD7E0B              B  1859    				ld a,(ix+0bh)
0053D7 09                  B  1860    				add hl,bc
0053D8 CE00                B  1861    				adc a,0
0053DA 22 52 61 00         B  1862    				ld (sector_lba0),hl				0053DE 32 55 61 00         B  1863    				ld (sector_lba3),a				                           B  1864    				
0053E2 DDE1                B  1865    				pop ix
0053E4 E1                  B  1866    				pop hl
0053E5 D1                  B  1867    				pop de
0053E6 C1                  B  1868    				pop bc
0053E7 C9                  B  1869    				ret
                           B  1870    				
                           B  1871    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1872    ;----------------------------------------------
                           B  1873    
0053E8                     B  1874    set_absolute_lba
                           B  1875    
                           B  1876    ; set A to sector offset, HL to sectors from st
                           B  1877    
0053E8 C5                  B  1878    				push bc							0053E9 D5                  B  1879    				push de							0053EA E5                  B  1880    				push hl							0053EB DDE5                B  1881    				push ix							0053ED 01000000            B  1882    				ld bc,0
0053F1 11000000            B  1883    				ld de,0
0053F5 5F                  B  1884    				ld e,a
0053F6 19                  B  1885    				add hl,de
0053F7 18 CB               B  1886    				jr add_ptn_offset		
                           B  1887    				
                           B  1888    
0053F9                     B  1889    set_abs_lba_and_read_sector
                           B  1890    
0053F9 CD E8 53 00         B  1891    				call set_absolute_lba
0053FD C3 23 54 00         B  1892    				jp fs_read_sector
                           B  1893    				
                           B  1894    ;----------------------------------------------
                           B  1895    
                           B  1896    
005401                     B  1897    backup_sector_lba
                           B  1898    
005401 C5                  B  1899    				push bc
005402 D5                  B  1900    				push de
005403 E5                  B  1901    				push hl
005404 21 52 61 00         B  1902    				ld hl,sector_lba0
005408 11 0C 55 00         B  1903    				ld de,fs_backed_up_sector_lba0
00540C 01040000            B  1904    lbabur			ld bc,4
005410 EDB0                B  1905    				ldir
005412 E1                  B  1906    				pop hl
005413 D1                  B  1907    				pop de
005414 C1                  B  1908    				pop bc
005415 C9                  B  1909    				ret
                           B  1910    
                           B  1911    
005416                     B  1912    restore_sector_lba
                           B  1913    
005416 C5                  B  1914    				push bc
005417 D5                  B  1915    				push de
005418 E5                  B  1916    				push hl
005419 21 0C 55 00         B  1917    				ld hl,fs_backed_up_sector_lba0
00541D 11 52 61 00         B  1918    				ld de,sector_lba0
005421 18 E9               B  1919    				jr lbabur	
                           B  1920    					
                           B  1921    ;----------------------------------------------
                           B  1922    
005423                     B  1923    fs_read_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1924    			
005423 C5                  B  1925    				push bc
005424 D5                  B  1926    				push de
005425 E5                  B  1927    				push hl
005426 DDE5                B  1928    				push ix
005428 FDE5                B  1929    				push iy
00542A 01040000            B  1930    				ld bc,04h						00542E CD 4D 54 00         B  1931    				call sector_access_redirect
005432 FDE1                B  1932    secaccend		pop iy
005434 DDE1                B  1933    				pop ix
005436 E1                  B  1934    				pop hl
005437 D1                  B  1935    				pop de
005438 C1                  B  1936    				pop bc
005439 C8                  B  1937    				ret z							00543A 37                  B  1938    				scf								00543B C9                  B  1939    				ret								                           B  1940    
                           B  1941    
00543C                     B  1942    fs_write_sector	
                           B  1943    				
00543C C5                  B  1944    				push bc
00543D D5                  B  1945    				push de
00543E E5                  B  1946    				push hl
00543F DDE5                B  1947    				push ix
005441 FDE5                B  1948    				push iy
005443 01080000            B  1949    				ld bc,08h						005447 CD 4D 54 00         B  1950    				call sector_access_redirect
00544B 18 E5               B  1951    				jr secaccend
                           B  1952    
                           B  1953    
                           B  1954    
00544D                     B  1955    sector_access_redirect
                           B  1956    
                           B  1957    	
00544D 3A 7C 5F 00         B  1958    				ld a,(current_driver)			005451 CD 7C 1A 00         B  1959    				call locate_driver_base			005455 EB                  B  1960    				ex de,hl
005456 09                  B  1961    				add hl,bc						005457 E9                  B  1962    				jp (hl)
                           B  1963    
                           B  1964    ;----------------------------------------------
                           B  1965    	
005458                     B  1966    bootsector_stub
                           B  1967    
005458 EB3C904D 53444F53   B  1968    				db  0EBh,03Ch,090h,04Dh,053h,04
005460 352E3000 02004000 
005468 02000200 00F8F200   B  1969    				db  002h,000h,002h,000h,000h,0F
005470 3F00FF00 00000000 
005478 00000000 000029C4   B  1970    				db  000h,000h,000h,000h,000h,00
005480 E636984E 4F204E41 
005488 4D452020 20204641   B  1971    				db  04Dh,045h,020h,020h,020h,02
005490 54313620 2020C3 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1972    
                           B  1973    ;----------------------------------------------
                           B  1974    
005497 00                  B  1975    fs_cluster_size				db 0
005498 000000              B  1976    fs_bytes_per_cluster		dw24 0
00549B 000000              B  1977    fs_fat1_position			dw24 0		; offse
00549E 000000              B  1978    fs_fat2_position			dw24 0		; offse
0054A1 000000              B  1979    fs_root_dir_position		dw24 0		; offse
0054A4 000000              B  1980    fs_data_area				dw24 0		; offse
0054A7 00                  B  1981    fs_root_dir_sectors			db 0
                           B  1982    
0054A8 000000              B  1983    fs_sectors_per_fat			dw24 0
0054AB 000000              B  1984    fs_max_data_clusters		dw24 0
                           B  1985    
0054AE 00 00 00 00 00 00   B  1986    fs_sought_filename			blkb 12,0
0054B4 00 00 00 00 00 00 
0054BA 00 00 00 00 00 00   B  1987    fs_alt_filename				blkb 12,0
0054C0 00 00 00 00 00 00 
0054C6 00 00 00 00 00 00   B  1988    fs_filename_buffer			blkb 12,0
0054CC 00 00 00 00 00 00 
                           B  1989    
0054D2 00000000            B  1990    fs_file_pointer				dw 0,0		; 32 bi
0054D6 00000000            B  1991    fs_file_length				dw 0,0		; 32 bi
0054DA 00000000            B  1992    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1993    
0054DE 000000              B  1994    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1995    
0054E1 000000              B  1996    fs_file_start_cluster		dw24 0
0054E4 000000              B  1997    fs_file_working_cluster		dw24 0
                           B  1998    
0054E7 000000              B  1999    fs_ez80_address				dw24 0
0054EA 000000              B  2000    fs_ez80_working_address		dw24 0
                           B  2001    
0054ED 000000              B  2002    fs_in_sector_offset			dw24 0
0054F0 00                  B  2003    fs_working_sector			db 0
                           B  2004    
0054F1 000000              B  2005    fs_working_cluster			dw24 0
0054F4 000000              B  2006    fs_free_cluster				dw24 0
0054F7 000000              B  2007    fs_new_file_cluster			dw24 0
                           B  2008    
0054FA 000000              B  2009    fs_fname_in_sector_addr		dw24 0
                           B  2010    
0054FD 000000              B  2011    fs_dir_entry_cluster		dw24 0
005500 000000              B  2012    fs_dir_entry_line_offset	dw24 0
005503 00                  B  2013    fs_dir_entry_sector			db 0
                           B  2014    
005504 00                  B  2015    fs_filepointer_valid		db 0
005505 000000              B  2016    fs_sector_pos_cnt			dw24 0
                           B  2017    
005508 000000              B  2018    fs_stash_dir_block	 		dw24 0
                           B  2019    
00550B 00                  B  2020    fs_search_type				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  2021    
00550C 00000000            B  2022    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2023    
                           B  2024    ;----------------------------------------------
                           B  2025    
                           A  3261    
                           A  3262    ;----------------------------------------------
                           A  3263    ; OS Data 
                           A  3264    ;----------------------------------------------
                           A  3265    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005510                     B     9    kernal_table
                           B    10    
005510 761800              B    11    	dw24 ext_mount_volumes			;00		
005513 1C1800              B    12    	dw24 os_get_device_info			;01		
005516 D21600              B    13    	dw24 os_check_volume_format		;02		
005519 051B00              B    14    	dw24 ext_change_volume			;03		
00551C 2F1800              B    15    	dw24 os_get_volume_info			;04		
00551F DC1600              B    16    	dw24 ext_format					;05		
005522 0E1700              B    17    	dw24 ext_make_dir				;06		
005525 1C1700              B    18    	dw24 ext_change_dir				;07		
005528 2A1700              B    19    	dw24 os_parent_dir				;08		
00552B 301700              B    20    	dw24 os_root_dir				;09		
00552E 781700              B    21    	dw24 ext_delete_dir				;0a		
005531 611600              B    22    	dw24 ext_find_file				;0b		
005534 7D1600              B    23    	dw24 ext_set_file_pointer		;0c		
005537 761600              B    24    	dw24 os_set_load_length			;0d		
00553A 901600              B    25    	dw24 ext_read_bytes_from_file	;0e		
00553D 361700              B    26    	dw24 ext_erase_file				;0f		
005540 5E1700              B    27    	dw24 ext_rename_file			;10		
005543 A01600              B    28    	dw24 ext_create_file			;11		
005546 B21600              B    29    	dw24 ext_write_bytes_to_file	;12		
005549 D31A00              B    30    	dw24 fs_get_total_sectors		;13		
00554C 441700              B    31    	dw24 os_goto_first_dir_entry	;14		 
00554F 4A1700              B    32    	dw24 os_get_dir_entry			;15		
005552 501700              B    33    	dw24 os_goto_next_dir_entry		;16		
005555 881700              B    34    	dw24 ext_read_sector			;17		
005558 B61700              B    35    	dw24 ext_write_sector			;18		
00555B 411B00              B    36    	dw24 ext_file_sector_list		;19		
00555E AA1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
005561 B61A00              B    38    	dw24 fs_update_dir_cluster		;1b		
005564 561700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005567 0A4400              B    41    	dw24 os_wait_key_press			;1d		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00556A 654400              B    42    	dw24 os_get_key_press			;1e		
00556D 881500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005570 3D1800              B    45    	dw24 ext_serial_get_header		;20		
005573 4A1800              B    46    	dw24 ext_serial_receive_file	;21		 
005576 531800              B    47    	dw24 ext_serial_send_file		;22		 
005579 651800              B    48    	dw24 ext_serial_tx				;23		
00557C 6C1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
00557F 4F0F00              B    51    	dw24 ext_print_string			;25		
005582 8F3E00              B    52    	dw24 hwsc_clear_screen			;26		
005585 5F4000              B    53    	dw24 hwsc_wait_vrt				;27		
005588 0D1400              B    54    	dw24 os_set_cursor_position		;28		
00558B A51A00              B    55    	dw24 ext_plot_char				;29		
00558E CE1500              B    56    	dw24 ext_set_pen				;2a		
005591 DB1500              B    57    	dw24 ext_background_colours		;2b		
005594 583F00              B    58    	dw24 hwsc_draw_cursor			;2c		
005597 D51500              B    59    	dw24 os_get_pen					;2d		
00559A CA3E00              B    60    	dw24 hwsc_scroll_up				;2e		
00559D 1E3E00              B    61    	dw24 os_set_video_hw_regs		;2f		
0055A0 8E1500              B    62    	dw24 os_get_vmode				;30			0055A3 AC3F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0055A6 2D1400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0055A9 B21B00              B    66    	dw24 ext_set_envar				;33		
0055AC 761B00              B    67    	dw24 ext_get_envar				;34		
0055AF 0C1C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
0055B2 831400              B    70    	dw24 os_set_mouse_window		;36		
0055B5 C91400              B    71    	dw24 os_get_mouse_position		;37		
0055B8 A01400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
0055BB CF4000              B    74    	dw24 hwsc_time_delay			;39		
0055BE 211200              B    75    	dw24 ext_compare_strings		;3a		
0055C1 A01000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
0055C4 D51000              B    77    	dw24 ext_ascii_to_hexword		;3c		
0055C7 2A1100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
0055CA B44000              B    80    	dw24 hwsc_get_version			;3e		
0055CD F71300              B    81    	dw24 os_dont_store_registers	;3f		
0055D0 153700              B    82    	dw24 os_cmd_unused				;40 		0055D3 F24000              B    83    	dw24 hwsc_read_rtc				;41     
0055D6 1A4100              B    84    	dw24 hwsc_write_rtc				;42		 
0055D9 5D1C00              B    85    	dw24 os_get_keymap_location		;43		 
0055DC 163700              B    86    	dw24 os_get_mem_high			;44
0055DF 631C00              B    87    	dw24 ext_play_audio				;45
0055E2 C44300              B    88    	dw24 hwsc_disable_audio			;46
0055E5 DD4300              B    89    	dw24 hwsc_get_joysticks			;47
0055E8 9E1500              B    90    	dw24 ext_set_vmode				;48
0055EB DC0F00              B    91    	dw24 ext_set_cursor_image		;49
0055EE 3E3F00              B    92    	dw24 hwsc_remove_cursor			;4a
0055F1 EA3500              B    93    	dw24 char_to_font				;4b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0055F4 5D1B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
                           B    95    	
                           B    96    ;----------------------------------------------
                           B    97    ; Non-packed Text Strings
                           B    98    ;----------------------------------------------
                           B    99    
0055F7 50524F53 4520666F   B   100    welcome_message			db "PROSE for EZ80P by 
0055FF 7220455A 38305020 
005607 62792050 68696C20 
00560F 52757374 6F6E2032 
005617 3031310B 0B 
00561C 53595354 454D2052   B   101    						db "SYSTEM RAM free abo
005624 414D2066 72656520 
00562C 61626F76 653A2024 
005634 00 
005635 44726976 65733A0B   B   102    storage_txt				db "Drives:",11,0
00563D 00 
00563E 434F4D4D 414E4453   B   103    os_dos_cmds_txt			db "COMMANDS",0
005646 00 
005647 53544152 5455502E   B   104    startup_script_fn		db "STARTUP.SCR",0
00564F 53435200 
005653 2400                B   105    os_hex_prefix_txt		db "$",0
005655 4F532056 65727369   B   106    os_version_txt			db "OS Version: $",0	00565D 6F6E3A20 2400 
005663 414D4F45 42412048   B   107    hw_version_txt			db "AMOEBA HW Version: 
00566B 57205665 7273696F 
005673 6E3A2024 00 
005678 202F2000            B   108    fwd_slash_txt			db " / ",0
00567C 4C6F6164 696E672E   B   109    loading_txt				db "Loading..",11,0
005684 2E0B00 
005687 53617669 6E672E2E   B   110    saving_txt				db "Saving..",11,0
00568F 0B00 
005691 2E657A70 20         B   111    ezp_extension_txt		db ".ezp",32
005696 0B4D6F72 653F0B0B   B   112    os_more_txt				db 11,"More?",11,11,0
00569E 00 
00569F 52656769 73746572   B   113    nmi_freeze_txt			db "Register Dump:"
0056A7 2044756D 703A 
0056AD 0B0B00              B   114    crlfx2_txt				db 11,11,0
0056B0 7800                B   115    rep_char_txt			db "x",0
0056B2 20746F20 00         B   116    to_txt					db " to ",0
0056B7 4552524F 5200       B   117    error_txt				db "ERROR",0
0056BD 494620              B   118    if_command_txt			db "IF "
0056C0 454E4420            B   119    end_command_txt			db "END "
0056C4 4F532052 45515549   B   120    hw_warn_txt1			db "OS REQUIRES AMOEBA 
0056CC 52455320 414D4F45 
0056D4 42412056 3A 
0056D9 2D2D2D2D 00         B   121    hw_warn_txt2			db "----",0
                           B   122    
                           B   123    ;----------------------------------------------
                           B   124    ; Packed text section
                           B   125    ;----------------------------------------------
                           B   126    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0056DE 00444542 5547       B   127    dictionary				db 0,"DEBUG"			0056E4 002D2D2D 2D2D       B   128    						db 0,"-----"			0056EA 00494F              B   129    						db 0,"IO"				0056ED 002D2D              B   130    						db 0,"--"				0056F0 004D4953 43         B   131    						db 0,"MISC"				0056F5 002D2D2D 2D         B   132    						db 0,"----"				0056FA 00616464 72         B   133    						db 0,"addr"				0056FF 0050524F 5345       B   134    						db 0,"PROSE"			005705 00612062 2063       B   135    						db 0,"a b c"			00570B 00416464 72657373   B   136    						db 0,"Address"			005713 00427974 6573       B   137    						db 0,"Bytes"			005719 00457865 63757461   B   138    						db 0,"Executable"		005721 626C65 
005724 0048756E 74         B   139    						db 0,"Hunt"				005729 0046696C 6C         B   140    						db 0,"Fill"				00572E 00476F74 6F         B   141    						db 0,"Goto"				                           B   142    						
005733 0053686F 77         B   143    						db 0,"Show"				005738 00435055            B   144    						db 0,"CPU"				00573C 00526567 69737465   B   145    						db 0,"Registers"		005744 7273 
005746 004173              B   146    						db 0,"As"				005749 00415343 4949       B   147    						db 0,"ASCII"			00574F 00436C65 6172       B   148    						db 0,"Clear"			005755 00536372 65656E     B   149    						db 0,"Screen"			00575C 00446973 61737365   B   150    						db 0,"Disassemble"		005764 6D626C65 
005768 00537769 746368     B   151    						db 0,"Switch"			00576F 00436F70 79         B   152    						db 0,"Copy"				005774 00446576 696365     B   153    						db 0,"Device"			00577B 00436861 6E6765     B   154    						db 0,"Change"			005782 00447269 7665       B   155    						db 0,"Drive"			005788 00446972            B   156    						db 0,"Dir"				00578C 002F                B   157    						db 0,"/"				00578E 00666E              B   158    						db 0,"fn"				                           B   159    						
005791 0044656C 657465     B   160    						db 0,"Delete"			005798 0046696C 65         B   161    						db 0,"File"				00579D 00496E66 6F         B   162    						db 0,"Info"				0057A2 00564F4C 783A       B   163    						db 0,"VOLx:"			0057A8 004D616B 65         B   164    						db 0,"Make"				0057AD 0052656D 6F756E74   B   165    						db 0,"Remount"			0057B5 00537461 7274       B   166    						db 0,"Start"			0057BB 00576172 6E696E67   B   167    						db 0,"Warning!"			0057C3 21 
0057C4 00416C6C            B   168    						db 0,"All"				0057C8 0052656D 6F7665     B   169    						db 0,"Remove"			0057CF 0052656E 616D65     B   170    						db 0,"Rename"			0057D6 004F72              B   171    						db 0,"Or"				0057D9 00526563 65697665   B   172    						db 0,"Receive"			0057E1 00536176 65         B   173    						db 0,"Save"				0057E6 00547261 6E736D69   B   174    						db 0,"Transmit"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057EE 74 
0057EF 004C6F61 64         B   175    						db 0,"Load"				                           B   176    						
0057F4 004F532F 4857       B   177    						db 0,"OS/HW"			0057FA 00566572 73696F6E   B   178    						db 0,"Version"			005802 005B7065 6E207061   B   179    						db 0,"[pen paper]"		00580A 7065725D 
00580E 803A                B   180    						db 80h,":"				005810 813E                B   181    						db 81h,">"				005812 82534F55 4E44       B   182    						db 82h,"SOUND"			005818 00566F6C 756D6573   B   183    						db 0,"Volumes"			005820 8343                B   184    						db 83h,"C"				005822 844344              B   185    						db 84h,"CD"				005825 85434C53            B   186    						db 85h,"CLS"			005829 8650454E            B   187    						db 86h,"PEN"			00582D 8744                B   188    						db 87h,"D"				00582F 8844454C            B   189    						db 88h,"DEL"			005833 89444952            B   190    						db 89h,"DIR"			005837 8A48                B   191    						db 8ah,"H"				005839 8B46                B   192    						db 8bh,"F"				                           B   193    						
00583B 004F6E              B   194    						db 0,"On"				00583E 8C464F52 4D4154     B   195    						db 8ch,"FORMAT"			005845 0047                B   196    						db 0,"G"				005847 8D4C42              B   197    						db 8dh,"LB"				00584A 8E4D                B   198    						db 8eh,"M"				00584C 8F4D4F55 4E54       B   199    						db 8fh,"MOUNT"			005852 004265              B   200    						db 0,"Be"				005855 9052                B   201    						db 90h,"R"				005857 915244              B   202    						db 91h,"RD"				00585A 92524E              B   203    						db 92h,"RN"				00585D 935258              B   204    						db 93h,"RX"				005860 945342              B   205    						db 94h,"SB"				005863 9554                B   206    						db 95h,"T"				005865 965458              B   207    						db 96h,"TX"				005868 97564552 53         B   208    						db 97h,"VERS"			00586D 00577269 7465       B   209    						db 0,"Write"			                           B   210    						
005873 004D656D            B   211    						db 0,"Mem"				005877 00227478 7422       B   212    						db 0,22h,"txt",22h		00587D 0057696C 6C         B   213    						db 0,"Will"				005882 00526174 65         B   214    						db 0,"Rate"				005887 0061                B   215    						db 0,"a"				005889 00507265 70         B   216    						db 0,"Prep"				00588E 984D44              B   217    						db 98h,"MD"				005891 00447269 766573     B   218    						db 0,"Drives"			005898 006F6C64 666E       B   219    						db 0,"oldfn"			00589E 006E6577 666E       B   220    						db 0,"newfn"			0058A4 006C656E            B   221    						db 0,"len"				0058A8 00436F6C 6F757273   B   222    						db 0,"Colours"			0058B0 993F                B   223    						db 99h,"?"				0058B2 00436F6D 6D616E64   B   224    						db 0,"Commands"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058BA 73 
0058BB 0020                B   225    						db 0," "				0058BD 002D                B   226    						db 0,"-"				                           B   227    						
0058BF 00566F6C 756D65     B   228    						db 0,"Volume"			0058C6 0046756C 6C         B   229    						db 0,"Full"				0058CB 004E6F74            B   230    						db 0,"Not"				0058CF 00466F75 6E64       B   231    						db 0,"Found"			0058D5 004C656E 677468     B   232    						db 0,"Length"			0058DC 005A6572 6F         B   233    						db 0,"Zero"				0058E1 004F7574            B   234    						db 0,"Out"				0058E5 004F66              B   235    						db 0,"Of"				0058E8 0052616E 6765       B   236    						db 0,"Range"			0058EE 00416C72 65616479   B   237    						db 0,"Already"			0058F6 00457869 737473     B   238    						db 0,"Exists"			0058FD 004174              B   239    						db 0,"At"				005900 00526F6F 74         B   240    						db 0,"Root"				005905 004D6973 6D617463   B   241    						db 0,"Mismatch"			00590D 68 
00590E 00526571 75657374   B   242    						db 0,"Request"			005916 00446174 61         B   243    						db 0,"Data"				                           B   244    				
00591B 00454F46            B   245    						db 0,"EOF"				00591F 00416674 6572       B   246    						db 0,"After"			005925 00556E6B 6E6F776E   B   247    						db 0,"Unknown"			00592D 00436F6D 6D616E64   B   248    						db 0,"Command"			005935 00426164            B   249    						db 0,"Bad"				005939 00486578            B   250    						db 0,"Hex"				00593D 004E6F              B   251    						db 0,"No"				005940 0041626F 72746564   B   252    						db 0,"Aborted"			005948 00507265 73656E74   B   253    						db 0,"Present"			005950 00436865 636B7375   B   254    						db 0,"Checksum"			005958 6D 
005959 004C6F61 646564     B   255    						db 0,"Loaded"			005960 00436F6D 6D73       B   256    						db 0,"Comms"			005966 00457272 6F72       B   257    						db 0,"Error"			00596C 00417267 756D656E   B   258    						db 0,"Arguments"		005974 7473 
005976 004C6F73 74         B   259    						db 0,"Lost"				                           B   260    						
00597B 00                  B   261    						db 0
00597C 46415431 36         B   262    fat16_txt				db "FAT16"				                           B   263    
005981 00536572 69616C     B   264    						db 0,"Serial"			005988 0054696D 65         B   265    						db 0,"Time"				00598D 00466F6E 74         B   266    						db 0,"Font"				005992 00546F6F            B   267    						db 0,"Too"				005996 004C6F6E 67         B   268    						db 0,"Long"				00599B 00446573 74696E61   B   269    						db 0,"Destination"		0059A3 74696F6E 
0059A7 0053656C 65637465   B   270    						db 0,"Selected"			0059AF 64 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0059B0 00496E76 616C6964   B   271    						db 0,"Invalid"			0059B8 004D6973 73696E67   B   272    						db 0,"Missing"			0059C0 004F4B              B   273    						db 0,"OK"				0059C3 004F53              B   274    						db 0,"OS"				0059C6 0050726F 74656374   B   275    						db 0,"Protected"		0059CE 6564 
0059D0 0041                B   276    						db 0,"A"				0059D2 004973              B   277    						db 0,"Is"				0059D5 00456D70 7479       B   278    						db 0,"Empty"			0059DB 00456E64            B   279    						db 0,"End"				                           B   280    						
0059DF 0024                B   281    						db 0,"$"
0059E1 7878                B   282    hex_byte_txt			db "xx"					                           B   283    						
0059E3 00417070 656E64     B   284    						db 0,"Append"			0059EA 003F                B   285    						db 0,"?"				0059EC 0024                B   286    						db 0,"$"				0059EE 00417761 6974696E   B   287    						db 0,"Awaiting"			0059F6 67 
0059F7 00526563 65697669   B   288    						db 0,"Receiving"		0059FF 6E67 
005A01 0053656E 64696E67   B   289    						db 0,"Sending"			005A09 000B                B   290    						db 0,11					005A0B 002E2E              B   291    						db 0,".."				005A0E 004E616D 65         B   292    						db 0,"Name"				005A13 00204279 746573     B   293    						db 0," Bytes"			005A1A 00507265 7373       B   294    						db 0,"Press"			005A20 00416E79            B   295    						db 0,"Any"				005A24 004B6579            B   296    						db 0,"Key"				005A28 00456E74 6572       B   297    						db 0,"Enter"			005A2E 9A455845 43         B   298    						db 9ah,"EXEC"			                           B   299    				
005A33 0052756E            B   300    						db 0,"Run"				005A37 00536372 697074     B   301    						db 0,"Script"			005A3E 00594553            B   302    yes_txt					db 0,"YES" 				005A42 00546F              B   303    						db 0,"To"				005A45 00536574            B   304    						db 0,"Set"				005A49 00436F6E 74696E75   B   305    						db 0,"Continue"			005A51 65 
005A52 004E6F6E 65         B   306    						db 0,"None"				005A57 00447269 766572     B   307    						db 0,"Driver"			005A5E 9B3C                B   308    						db 9bh,"<"				005A60 004E6577 6572       B   309    						db 0,"Newer"			005A66 00526571 75697265   B   310    						db 0,"Required"			005A6E 64 
005A6F 00465047 4120636F   B   311    						db 0,"FPGA config"		005A77 6E666967 
005A7B 00556E63 68616E67   B   312    						db 0,"Unchanged"		005A83 6564 
005A85 006C6F63 206C656E   B   313    						db 0,"loc len [per vol 
005A8D 205B7065 7220766F 
005A95 6C206368 616E7320 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005A9D 6C6F6F70 3F5D20 
005AA4 9C50414C 45545445   B   314    						db 9ch,"PALETTE"		005AAC 0070616C 65747465   B   315    						db 0,"palette"			                           B   316    						
005AB4 9D4D4F55 5345       B   317    						db 9dh,"MOUSE"			005ABA 00456E61 626C65     B   318    						db 0,"Enable"			005AC1 004B6579 626F6172   B   319    						db 0,"Keyboard"			005AC9 64 
005ACA 00446574 65637465   B   320    						db 0,"Detected"			005AD2 64 
005AD3 004D6F75 7365       B   321    						db 0,"Mouse"			005AD9 00536563 746F72     B   322    						db 0,"Sector"			005AE0 00496E63 6F727265   B   323    						db 0,"Incorrect"		005AE8 6374 
005AEA 9E564D4F 4445       B   324    						db 9eh,"VMODE"			005AF0 00566964 656F       B   325    						db 0,"Video"			005AF6 004D6F64 65         B   326    						db 0,"Mode"				005AFB 9F464F4E 54         B   327    						db 9fh,"FONT"			005B00 00416E64            B   328    						db 0,"And"				005B04 00536176 696E67     B   329    						db 0,"Saving"			005B0B 00556E73 7570706F   B   330    						db 0,"Unsupported"		005B13 72746564 
005B17 A0534554            B   331    						db 0a0h,"SET"			005B1B 005B7661 723D7374   B   332    						db 0,"[var=string]"		005B23 72696E67 5D 
                           B   333    
005B28 00456E76 6172       B   334    						db 0,"Envar"			005B2E A1445A              B   335    						db 0a1h,"DZ"			005B31 0041444C            B   336    						db 0,"ADL"				005B35 005A3830            B   337    						db 0,"Z80"				005B39 00506C61 79         B   338    						db 0,"Play"				005B3E 00417564 696F       B   339    						db 0,"Audio"			                           B   340    						
005B44 0001                B   341    						db 0,1					                           B   342    
                           B   343    
                           B   344    
                           B   345    
                           B   346    
005B46 2199696A 5F916F92   B   347    save_append_msg			db 021h,099h,069h,06ah,
005B4E 9700 
005B50 2F0A9300            B   348    os_loadaddress_msg 		db 02fh,00ah,093h,0		005B54 21649300            B   349    os_filesize_msg			db 021h,064h,093h,0		005B58 94219700            B   350    ser_rec_msg				db 094h,021h,097h,0		005B5C 956F9897 00         B   351    ser_rec2_msg			db 095h,06fh,098h,097h,
005B61 966F9897 00         B   352    ser_send_msg			db 096h,06fh,098h,097h,
005B66 9521BBBC 989700     B   353    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005B6D A77C9097 00         B   354    hw_err_msg				db 0a7h,07ch,090h,097h,
005B72 607C00              B   355    disk_err_msg			db 060h,07ch,0			005B75 A1779797 00         B   356    script_aborted_msg		db 0a1h,077h,097h,097h,
005B7A 76B2B397 00         B   357    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   358    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B7F 9700                B   359    packed_help1				db 097h,0
005B81 0100                B   360    							db 001h,0			005B83 0200                B   361    							db 002h,0			005B85 3307095F 4F500B00   B   362    							db 033h,007h,009h,0
005B8D 3407515F 4F1400     B   363    							db 034h,007h,051h,0
005B94 37070707 5F195000   B   364    							db 037h,007h,007h,0
005B9C 3B075FC2 1700       B   365    							db 03bh,007h,05fh,0
005BA2 C1075FC3 1700       B   366    							db 0c1h,007h,05fh,0
005BA8 3F070754 5F0E5000   B   367    							db 03fh,007h,007h,0
005BB0 42075F0F 0A00       B   368    							db 042h,007h,05fh,0
005BB6 3E070709 5F0D5000   B   369    							db 03eh,007h,007h,0
005BBE 44075F10 500B00     B   370    							db 044h,007h,05fh,0
005BC5 475F1011 1200       B   371    							db 047h,05fh,010h,0
005BCB 4C075F10 50131400   B   372    							db 04ch,007h,05fh,0
                           B   373    	
005BD3 9700                B   374    							db 097h,0
005BD5 0300                B   375    							db 003h,0			005BD7 0400                B   376    							db 004h,0			005BD9 38231E1D 5F1B601E   B   377    							db 038h,023h,01eh,0
005BE1 1D00 
005BE3 3C1F5F20 2100       B   378    							db 03ch,01fh,05fh,0
005BE9 3D5F101D 00         B   379    							db 03dh,05fh,010h,0
005BEE 411A995F 551C00     B   380    							db 041h,01ah,099h,0
005BF5 431F075F 2F2100     B   381    							db 043h,01fh,007h,0
005BFC 561D5F24 1D00       B   382    							db 056h,01dh,05fh,0
005C02 455F2557 00         B   383    							db 045h,05fh,025h,0
005C07 481D5F29 1D00       B   384    							db 048h,01dh,05fh,0
005C0D 4958595F 2A2100     B   385    							db 049h,058h,059h,0
005C14 4A1F075F 2C2100     B   386    							db 04ah,01fh,007h,0
005C1B 4B1F075A 5F2D2100   B   387    							db 04bh,01fh,007h,0
005C23 4D1F075A 5F2E2100   B   388    							db 04dh,01fh,007h,0
005C2B 235F1860 00         B   389    							db 023h,05fh,018h,0
                           B   390    
005C30 9700                B   391    							db 097h,0
005C32 0500                B   392    							db 005h,0			005C34 0600                B   393    							db 006h,0			005C36 395F1516 00         B   394    							db 039h,05fh,015h,0
005C3B 9F1F5FA0 A100       B   395    							db 09fh,01fh,05fh,0
005C41 BA1F5F1B 8200       B   396    							db 0bah,01fh,05fh,0
005C47 B05FB1B0 A700       B   397    							db 0b0h,05fh,0b1h,0
005C4D AE095F1B AF00       B   398    							db 0aeh,09h,05fh,01
005C53 3A325F1B 5B00       B   399    							db 03ah,032h,05fh,0
005C59 BEBF5FA4 C000       B   400    							db 0beh,0bfh,05fh,0
005C5F 35AD5FC4 5013C500   B   401    							db 035h,0adh,05fh,0
005C67 4E5F1030 3100       B   402    							db 04eh,05fh,010h,0
005C6D B7095F1B B8B900     B   403    							db 0b7h,09h,5fh,01b
005C74 5C5F105D 00         B   404    							db 05ch,05fh,010h,0
005C79 9700                B   405    							db 097h,0
005C7B FF                  B   406    							db 0ffh
                           B   407    
                           B   408    
                           B   409    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   410    
005C7C C51D00              B   411    os_cmd_locs					dw24 os_cmd_colon	005C7F AB2C00              B   412    							dw24 os_cmd_gtr		005C82 7E3600              B   413    							dw24 os_cmd_sound	005C85 6C1C00              B   414    							dw24 os_cmd_c		005C88 D91C00              B   415    							dw24 os_cmd_cd		005C8B BF1D00              B   416    							dw24 os_cmd_cls		005C8E E53400              B   417    							dw24 os_cmd_pen		005C91 DF1D00              B   418    							dw24 os_cmd_d		                           B   419    					
005C94 402900              B   420    							dw24 os_cmd_del		005C97 552900              B   421    							dw24 os_cmd_dir		005C9A D92B00              B   422    							dw24 os_cmd_h		005C9D 512A00              B   423    							dw24 os_cmd_f		005CA0 792A00              B   424    							dw24 os_cmd_format	005CA3 DF2C00              B   425    							dw24 os_cmd_lb		005CA6 6E2D00              B   426    							dw24 os_cmd_m		005CA9 6E3200              B   427    							dw24 os_cmd_remount
                           B   428    
005CAC C52D00              B   429    							dw24 os_cmd_r		005CAF F62E00              B   430    							dw24 os_cmd_rd		005CB2 032F00              B   431    							dw24 os_cmd_rn		005CB5 872F00              B   432    							dw24 os_cmd_rx		005CB8 1F2F00              B   433    							dw24 os_cmd_sb		005CBB 1A3200              B   434    							dw24 os_cmd_t		005CBE AE3100              B   435    							dw24 os_cmd_tx		005CC1 7A3200              B   436    							dw24 os_cmd_vers	                           B   437    							
005CC4 B82D00              B   438    							dw24 os_cmd_md		005CC7 872C00              B   439    							dw24 os_cmd_help	005CCA AB3200              B   440    							dw24 os_cmd_exec	005CCD E33400              B   441    							dw24 os_cmd_ltn		005CD0 093500              B   442    							dw24 os_cmd_palette
005CD3 3A3500              B   443    							dw24 os_cmd_mouse	005CD6 763500              B   444    							dw24 os_cmd_vmode	005CD9 863500              B   445    							dw24 os_cmd_font	                           B   446    							
005CDC 153600              B   447    							dw24 os_cmd_set		005CDF 713600              B   448    							dw24 os_cmd_dz		                           B   449    							
                           B   450    								
005CE2 00                  B   451    packed_msg_list				db 0				                           B   452    		
005CE3 606100              B   453    							db 060h,061h,0		005CE6 21626300            B   454    							db 021h,062h,063h,0
005CEA 1D6100              B   455    							db 01dh,061h,0		005CED 628C1D00            B   456    							db 062h,08ch,01dh,0
005CF1 1D8D628E 00         B   457    							db 01dh,08dh,062h,0
005CF6 628C2100            B   458    							db 062h,08ch,021h,0
005CFA 21648D65 00         B   459    							db 021h,064h,08dh,0
005CFF 0A666768 00         B   460    							db 00ah,066h,067h,0
005D04 2199696A 00         B   461    							db 021h,099h,069h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D09 696B6C00            B   462    							db 069h,06bh,06ch,0
                           B   463    					
005D0D 727300              B   464    							db 072h,073h,0		005D10 877500              B   465    							db 087h,075h,0		005D13 76219900            B   466    							db 076h,021h,099h,0
                           B   467    					
005D17 87B500              B   468    							db 087h,0b5h,0		005D1A 797400              B   469    							db 079h,074h,0		005D1D 9A7A00              B   470    bytes_loaded_msg			db 09ah,07ah,0		005D20 7B7C00              B   471    							db 07bh,07ch,0		005D23 747D00              B   472    							db 074h,07dh,0		                           B   473    
005D26 627F00              B   474    format_err_msg				db 062h,07fh,0		                           B   475    
005D29 816600              B   476    							db 081h,066h,0		005D2C 21998384 00         B   477    							db 021h,099h,083h,0
005D31 76260A00            B   478    							db 076h,026h,00ah,0
005D35 76216400            B   479    							db 076h,021h,064h,0
005D39 2D7700              B   480    							db 02dh,077h,0		005D3C 2D7C6B85 00         B   481    							db 02dh,07ch,06bh,0
005D41 628C080C 00         B   482    							db 062h,08ch,08h,0c
005D46 A9316708 AA00       B   483    							db 0a9h,031h,067h,0
005D4C 768F0A00            B   484    							db 076h,08fh,00ah,0
005D50 76850A00            B   485    							db 076h,085h,00ah,0
                           B   486    					
005D54 746800              B   487    							db 074h,068h,0		005D57 887D00              B   488    							db 088h,07dh,0		005D5A 8900                B   489    ok_msg						db 089h,0			                           B   490    					
005D5C 876000              B   491    							db 087h,060h,0		005D5F 1A627800            B   492    							db 01ah,062h,078h,0
                           B   493    					
005D63 1D626300            B   494    							db 01dh,062h,063h,0
005D67 7700                B   495    							db 077h,0			                           B   496    					
005D69 21996D00            B   497    							db 021h,099h,06dh,0
005D6D 8A508B00            B   498    							db 08ah,050h,08bh,0
005D71 6F71706E 00         B   499    							db 06fh,071h,070h,0
005D76 763600              B   500    no_vols_msg					db 076h,036h,0		005D79 97A66300            B   501    none_found_msg				db 097h,0a6h,063h,0
                           B   502    							
005D7D B62100              B   503    							db 0b6h,021h,0		005D80 A9316708 AA00       B   504    							db 0a9h,031h,067h,0
005D86 21AC00              B   505    							db 021h,0ach,0		                           B   506    							
005D89 766F00              B   507    							db 076h,06fh,0		005D8C 746F00              B   508    							db 074h,06fh,0		005D8F 66676800            B   509    							db 066h,067h,068h,0
005D93 BD1A00              B   510    							db 0bdh,01ah,0		005D96 1A62B300            B   511    							db 01ah,062h,0b3h,0
005D9A 1A7C00              B   512    							db 01ah,07ch,0		005D9D A17C00              B   513    							db 0a1h,07ch,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   514    							
005DA0 FF                  B   515    							db 0ffh				                           B   516    
                           B   517    ;----------------------------------------------
                           B   518    
005DA1                     B   519    kernal_error_code_translation
                           B   520    
005DA1 242D2E14 08110F2A   B   521    					db 24h,2dh,2eh,14h, 08h,11h
005DA9 2F303132 331F 
                           B   522    					
005DAF                     B   523    fs_error_code_translation
                           B   524    
005DAF 00010203 04050607   B   525    					db 00h,01h,02h,03h,04h,05h,
005DB7 08090A0B 0C0D1321 
005DBF 22232425 260E0000   B   526    					db 22h,23h,24h,25h,26h,0eh,
                           B   527    
                           B   528    
                           B   529    ;----------------------------------------------
                           B   530    ; Scancode to ASCII keymaps
                           B   531    ;----------------------------------------------
                           B   532    
                           C     0    include	'UK_keymap.asm'
005DC7                     C     1    keymap:
005DC7 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005DCF 00000000 00006000 
005DD7 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005DDF 00007A73 61773200 
005DE7 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005DEF 00207666 74723500 
005DF7 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005DFF 00006D6A 75373800 
005E07 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005E0F 002E2F6C 3B702D00 
005E17 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005E1F 0000005D 00230000 
005E27 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005E2F 00000000 00000000 
005E37 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005E3F 21000000 5A534157 
005E47 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005E4F A3000020 56465452 
005E57 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005E5F 5E000000 4D4A5526 
005E67 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005E6F 2800003E 3F4C3A50 
005E77 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005E7F 00000000 007D007E 
005E87 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005E8F 00000000 00000000 
005E97 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005E9F 00000000 00000000 
005EA7 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005EAF 00000000 00000000 
005EB7 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005EBF 00000000 00000000 
005EC7 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005ECF 00000000 00000000 
005ED7 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005EDF 00000000 00000000 
005EE7 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   534    
       00005DC7            B   535    unshifted_keymap equ keymap+00h
       00005E29            B   536    shifted_keymap   equ keymap+62h
       00005E8B            B   537    alted_keymap	 equ keymap+c4h
                           B   538    	
                           B   539    ;----------------------------------------------
                           B   540    
005EED 00                  B   541    ui_index				db 0				; u
005EEE 00                  B   542    ui_maxchars				db 0				; "
005EEF 000000              B   543    ui_string_addr			dw24 0				; "
                           B   544    
                           B   545    ;----------------------------------------------
                           B   546    ; OS Display parameters
                           B   547    ;----------------------------------------------
                           B   548    
005EF2 00                  B   549    video_mode				db 0
005EF3 0700                B   550    current_pen				dw 07h				; C
005EF5 0000                B   551    background_colour		dw 00h				; F
                           B   552    
005EF7 00000F00 000F0F0F   B   553    pen_palette				dw 0000h,000fh,0f00h,0f
005EFF F000FF00 F00FFF0F 
005F07 55059909 CC0C710F   B   554    						dw 0555h,0999h,0ccch,0f
005F0F 7F00F80D 40088C03 
                           B   555    
005F17 00                  B   556    plotchar_colour			db 0				; c
                           B   557    
005F18 00                  B   558    char_under_cursor		db 0			
005F19 00                  B   559    cursor_present			db 0				; 1
005F1A 00                  B   560    overwrite_mode			db 0
005F1B 00                  B   561    cursor_image_char		db 0
                           B   562    
                           B   563    ;----------------------------------------------
                           B   564    
005F1C                     B   565    display_parameters
                           B   566    
005F1C 00                  B   567    video_doubling			db 0
005F1D 000000              B   568    charmap_rows			dw24 0					005F20 000000              B   569    charmap_columns			dw24 0				
                           B   570    
                           B   571    ;----------------------------------------------
                           B   572    
005F23                     B   573    vmode_parameter_list
                           B   574    
005F23 00503C              B   575    				db 00b, 80,60	; vmode 0 (vide
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F26 01501E              B   576    				db 01b, 80,30	; vmode 1
005F29 02283C              B   577    				db 10b, 40,60	; vmode 2	
005F2C 03281E              B   578    				db 11b, 40,30	; vmode 3
                           B   579    				
                           B   580    ;==============================================
                           B   581    ;  Serial Routine Data
                           B   582    ;==============================================
                           B   583    
005F2F 000000              B   584    serial_ez80_address		dw24 0
005F32 000000              B   585    serial_file_length		dw24 0
005F35 000000              B   586    serial_fn_addr			dw24 0
005F38 00 00 00 00 00 00   B   587    serial_filename			blkb 18,0		
005F3E 00 00 00 00 00 00 
005F44 00 00 00 00 00 00 
005F4A 00                  B   588    serial_fn_length		db 0
005F4B 00                  B   589    serial_timeout			db 0
                           B   590    
005F4C 00 00 00 00 00 00   B   591    serial_fileheader		blkb 20,0
005F52 00 00 00 00 00 00 
005F58 00 00 00 00 00 00 
005F5E 00 00 
005F60 5A383050 2E464845   B   592    serial_header_id		db "Z80P.FHEADER"		005F68 41444552 
005F6C 00                  B   593    serial_transfer_started	db 0
                           B   594    
005F6D 00                  B   595    anim_wait_count			db 0
                           B   596    
                           B   597    ;==============================================
                           B   598    
005F6E F3C8                B   599    intellimouse_seq	db 0f3h,200
005F70 F364                B   600    					db 0f3h,100
005F72 F350                B   601    					db 0f3h,80
                           B   602    
005F74 E803                B   603    mouse_settings_seq	db 0e8h,default_resolution
005F76 E6                  B   604    					db default_scaling
005F77 F364                B   605    					db 0f3h,default_sample_rate
005F79 F4                  B   606    					db 0f4h
                           B   607    					
                           B   608    ;----------------------------------------------
                           B   609    ; FILE SYSTEM RELATED VARIABLES
                           B   610    ;----------------------------------------------
                           B   611    
005F7A 00                  B   612    boot_drive			db 0
                           B   613    
005F7B 00                  B   614    current_volume		db 0
                           B   615    	
005F7C 00                  B   616    current_driver		db 0			;normally u
                           B   617    
005F7D 00                  B   618    device_count		db 0			;IE: the nu
                           B   619    
005F7E 00                  B   620    volume_count		db 0
                           B   621    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F7F 20564F4C 303A00     B   622    vol_txt				db " VOL0:",0	;space pref
005F86 44455630 3A00       B   623    dev_txt				db "DEV0:",0
                           B   624    
005F8C 000000              B   625    sector_rd_wr_addr	dw24 0
                           B   626    
                           B   627    
                           B   628    ;==============================================
                           B   629    
005F8F                     B   630    volume_dir_clusters
                           B   631    
005F8F 00 00 00 00 00 00   B   632    					blkb max_volumes*3,0
005F95 00 00 00 00 00 00 
005F9B 00 00 00 00 00 00 
005FA1 00 00 00 00 00 00 
                           B   633    	
005FA7                     B   634    volume_mount_list
                           B   635    
005FA7 00 00 00 00 00 00   B   636    					blkb max_volumes*16,0
005FAD 00 00 00 00 00 00 
005FB3 00 00 00 00 00 00 
005FB9 00 00 00 00 00 00 
005FBF 00 00 00 00 00 00 
005FC5 00 00 00 00 00 00 
005FCB 00 00 00 00 00 00 
005FD1 00 00 00 00 00 00 
005FD7 00 00 00 00 00 00 
005FDD 00 00 00 00 00 00 
005FE3 00 00 00 00 00 00 
005FE9 00 00 00 00 00 00 
005FEF 00 00 00 00 00 00 
005FF5 00 00 00 00 00 00 
005FFB 00 00 00 00 00 00 
006001 00 00 00 00 00 00 
006007 00 00 00 00 00 00 
00600D 00 00 00 00 00 00 
006013 00 00 00 00 00 00 
006019 00 00 00 00 00 00 
00601F 00 00 00 00 00 00 
006025 00 00 
                           B   637    
                           B   638    ; Each entry is 16 bytes in the form:
                           B   639    
                           B   640    ; OFFSETS
                           B   641    ; -------
                           B   642    ; $00 - Volume is present (0/1)
                           B   643    ; $01 - Volume's host driver number (1 byte)	                           B   644    ; $02 - [reserved]
                           B   645    ; $03 - [reserved]
                           B   646    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   647    ; $07 - Partition number on host drive (0/1/2/3
                           B   648    ; $08 - Offset in sectors from MBR to partition
                           B   649    ; $0c - [reserved]
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   650    ; $0d - [reserved]	
                           B   651    ; $0e - [reserved]
                           B   652    ; $0f - [reserved]
                           B   653    
                           B   654    ;==============================================
                           B   655    
006027                     B   656    host_device_hardware_info
                           B   657    
006027 00 00 00 00 00 00   B   658    					blkb 32*4,0
00602D 00 00 00 00 00 00 
006033 00 00 00 00 00 00 
006039 00 00 00 00 00 00 
00603F 00 00 00 00 00 00 
006045 00 00 00 00 00 00 
00604B 00 00 00 00 00 00 
006051 00 00 00 00 00 00 
006057 00 00 00 00 00 00 
00605D 00 00 00 00 00 00 
006063 00 00 00 00 00 00 
006069 00 00 00 00 00 00 
00606F 00 00 00 00 00 00 
006075 00 00 00 00 00 00 
00607B 00 00 00 00 00 00 
006081 00 00 00 00 00 00 
006087 00 00 00 00 00 00 
00608D 00 00 00 00 00 00 
006093 00 00 00 00 00 00 
006099 00 00 00 00 00 00 
00609F 00 00 00 00 00 00 
0060A5 00 00 
                           B   659    
                           B   660    ; Each entry is 32 bytes..
                           B   661    ;
                           B   662    ; OFFSETS
                           B   663    ; -------
                           B   664    ; $00 - Device driver number
                           B   665    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   666    ; $05 - Zero terminated hardware name (22 ASCII
                           B   667    ; (remaining bytes to $1F currently unused)
                           B   668    
                           B   669    ;----------------------------------------------
                           B   670    
0060A7 000000              B   671    dhwn_temp_pointer		dw24 0
                           B   672    
0060AA 00                  B   673    partition_temp			db 0
0060AB 00                  B   674    vols_on_device_temp		db 0
0060AC 00                  B   675    sys_driver_backup		db 0
0060AD 00                  B   676    os_quiet_mode			db 0
                           B   677    
0060AE A66900              B   678    default_load_addr		dw24 os_max_addr
                           B   679    
                           B   680    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   681    
0060B1 00 00 00 00 00 00   B   682    time_data				blkb	7,0
0060B7 00 
                           B   683    
0060B8 00                  B   684    frozen					db 0
0060B9 01                  B   685    first_run				db 1
0060BA 01                  B   686    devices_connected		db 1					                           B   687    
                           B   688    ;----------------------------------------------
                           B   689    
0060BB A66900              B   690    sysram_os_highest		dw24 os_max_addr
0060BE 000080              B   691    vram_a_os_highest		dw24 vram_a_addr
0060C1 0000C0              B   692    vram_b_os_highest		dw24 vram_b_addr
                           B   693    
0060C4 000000              B   694    charmap_size			dw24 0
                           B   695    
                           B   696    ;----------------------------------------------
                           B   697    
0060C7 00                  B   698    store_a1				db 0		
0060C8 000000              B   699    store_bc1				dw24 0
0060CB 000000              B   700    store_de1				dw24 0
0060CE 000000              B   701    store_hl1				dw24 0
0060D1 00                  B   702    store_a2				db 0
0060D2 000000              B   703    store_bc2				dw24 0
0060D5 000000              B   704    store_de2				dw24 0
0060D8 000000              B   705    store_hl2				dw24 0
0060DB 000000              B   706    store_ix				dw24 0
0060DE 000000              B   707    store_iy				dw24 0
0060E1 000000              B   708    store_pc				dw24 0		;only relev
0060E4 000000              B   709    store_spl				dw24 0
0060E7 0000                B   710    store_sps				dw 0
0060E9 00                  B   711    store_mbase				db 0
0060EA 00                  B   712    store_f	 				db 0
0060EB 00                  B   713    store_adl				db 0
                           B   714    
                           B   715    ;----------------------------------------------
0060EC                     B   716    os_variables
                           B   717    ;----------------------------------------------
                           B   718    
0060EC 000000              B   719    kernal_ix_cache			dw24 0
                           B   720    
0060EF 00                  B   721    store_registers			db 0
0060F0 000000              B   722    com_start_addr			dw24 0
                           B   723    
0060F3 00 00 00 00 00 00   B   724    temp_string				blkb max_buffer_chars+2
0060F9 00 00 00 00 00 00 
0060FF 00 00 00 00 00 00 
006105 00 00 00 00 00 00 
00610B 00 00 00 00 00 00 
006111 00 00 00 00 00 00 
006117 00 00 00 00 00 00 
00611D 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006123 00 00 00 00 00 00 
006129 00 00 00 00 00 00 
00612F 00 00 00 00 00 00 
006135 00 00 00 00 00 00 
00613B 00 00 00 00 00 00 
006141 00 00 00 00 
006145 00 00 00 00 00 00   B   725    script_fn				blkb 13,0
00614B 00 00 00 00 00 00 
006151 00 
                           B   726    
006152 00                  B   727    sector_lba0				db 0			; keep 
006153 00                  B   728    sector_lba1				db 0
006154 00                  B   729    sector_lba2				db 0
006155 00                  B   730    sector_lba3				db 0
                           B   731    
                           B   732    ;----------------------------------------------
                           B   733    
006156 000000              B   734    cursor_pos				dw24 0			; 3rd b
                           B   735    
       00006156            B   736    cursor_y 				equ cursor_pos
       00006157            B   737    cursor_x 				equ cursor_pos+1
                           B   738    						
006159 00                  B   739    cursorflashtimer		db 0
00615A 00                  B   740    cursor_status			db 0
00615B 00                  B   741    os_linecount			db 0
                           B   742    		
00615C 000000              B   743    mem_mon_addr			dw24 0
00615F 000000              B   744    cmdop_start_address		dw24 0
006162 000000              B   745    cmdop_end_address		dw24 0
006165 000000              B   746    copy_dest_address		dw24 0
006168 000000              B   747    hex_address				dw24 0
                           B   748    
00616B 000000              B   749    find_hexstringascii 	dw24 0
00616E 000000              B   750    xrr_temp				dw24 0
006171 00                  B   751    temphex					db 0
006172 00                  B   752    fillbyte				db 0 
006173 00                  B   753    ui_im_cache				db 0
                           B   754    
006174 00 00 00 00 00 00   B   755    commandstring			blkb max_buffer_chars+2
00617A 00 00 00 00 00 00 
006180 00 00 00 00 00 00 
006186 00 00 00 00 00 00 
00618C 00 00 00 00 00 00 
006192 00 00 00 00 00 00 
006198 00 00 00 00 00 00 
00619E 00 00 00 00 00 00 
0061A4 00 00 00 00 00 00 
0061AA 00 00 00 00 00 00 
0061B0 00 00 00 00 00 00 
0061B6 00 00 00 00 00 00 
0061BC 00 00 00 00 00 00 
0061C2 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0061C6 00 00 00 00 00 00   B   756    output_line				blkb max_buffer_chars+2
0061CC 00 00 00 00 00 00 
0061D2 00 00 00 00 00 00 
0061D8 00 00 00 00 00 00 
0061DE 00 00 00 00 00 00 
0061E4 00 00 00 00 00 00 
0061EA 00 00 00 00 00 00 
0061F0 00 00 00 00 00 00 
0061F6 00 00 00 00 00 00 
0061FC 00 00 00 00 00 00 
006202 00 00 00 00 00 00 
006208 00 00 00 00 00 00 
00620E 00 00 00 00 00 00 
006214 00 00 00 00 
                           B   757    				
006218 000000              B   758    os_args_loc				dw24 0
00621B 000000              B   759    os_args_pos_cache		dw24 0
                           B   760    
00621E 000000              B   761    os_dir_block_cache  	dw24 0
006221 000000              B   762    os_extcmd_jmp_addr		dw24 0
                           B   763    
                           B   764    
006224 000000              B   765    script_dir				dw24 0
006227 000000              B   766    script_file_offset		dw24 0
00622A 000000              B   767    script_length			dw24 0
                           B   768    
00622D 00                  B   769    script_flags			db 0
                           B   770    
00622E 00 00 00 00 00 00   B   771    if_name_txt				blkb max_if_chars+2,0
006234 00 00 00 00 00 00 
00623A 00 00 00 00 00 00 
006240 00 00 00 00 00 00   B   772    if_value_txt			blkb max_if_chars+2,0
006246 00 00 00 00 00 00 
00624C 00 00 00 00 00 00 
006252 00 00 00 00 00 00   B   773    if_label_txt			blkb max_if_chars+2,0
006258 00 00 00 00 00 00 
00625E 00 00 00 00 00 00 
                           B   774    
                           B   775    
006264 0000                B   776    char_to_print			db 0,0	; zero terminat
                           B   777    
                           B   778    ;----------------------------------------------
                           B   779    ; Keyboard buffer and registers
                           B   780    ;----------------------------------------------
                           B   781    
006266 00 00 00 00 00 00   B   782    scancode_buffer			blkb 32,0
00626C 00 00 00 00 00 00 
006272 00 00 00 00 00 00 
006278 00 00 00 00 00 00 
00627E 00 00 00 00 00 00 
006284 00 00 
                           B   783    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006286 00                  B   784    key_buf_wr_idx			db 0
006287 00                  B   785    key_buf_rd_idx			db 0
006288 00                  B   786    key_release_mode		db 0		
006289 00                  B   787    not_currently_used		db 0
00628A 00                  B   788    key_mod_flags			db 0
00628B 00                  B   789    current_scancode		db 0
00628C 00                  B   790    current_asciicode		db 0
                           B   791    
                           B   792    ;----------------------------------------------
                           B   793    ; Mouse related registers
                           B   794    ;----------------------------------------------
                           B   795    
00628D 00                  B   796    mouse_id				db 0
00628E 00                  B   797    mouse_packet_size		db 0
                           B   798    
00628F 00 00 00 00         B   799    mouse_packet			blkb 4,0			; t
006293 00                  B   800    mouse_packet_index		db 0				;
006294 00                  B   801    mouse_buttons			db 0				;
006295 000000              B   802    mouse_disp_x			dw24 0				; c
006298 000000              B   803    mouse_disp_y			dw24 0				; c
00629B 00                  B   804    mouse_wheel				db 0				; m
00629C 00                  B   805    mouse_updated			db 0
                           B   806    
00629D 000000              B   807    mouse_window_size_x		dw24 0				; t
0062A0 000000              B   808    mouse_window_size_y		dw24 0
0062A3 000000              B   809    mouse_abs_x				dw24 0
0062A6 000000              B   810    mouse_abs_y				dw24 0
0062A9 000000              B   811    mouse_disp_x_old		dw24 0
0062AC 000000              B   812    mouse_disp_y_old		dw24 0
0062AF 000000              B   813    mouse_disp_x_buffer		dw24 0
0062B2 000000              B   814    mouse_disp_y_buffer		dw24 0
0062B5 00                  B   815    mouse_new_window		db 0
                           B   816    
                           B   817    ;----------------------------------------------
       00006156            B   818    first_os_var			equ cursor_y
0062B6 00                  B   819    last_os_var				db 0
                           B   820    ;----------------------------------------------
                           B   821    
                           B   822    ;==============================================
                           B   823    ; Environment variables
                           B   824    ;==============================================
                           B   825    
0062B7 4552524F 523D3030   B   826    envar_list				db "ERROR=00",0
0062BF 00 
0062C0 FF                  B   827    first_ext_ev_entry		db 0ffh
0062C1 00 00 00 00 00 00   B   828    						blkb envar_buffer_size,
0062C7 00 00 00 00 00 00 
0062CD 00 00 00 00 00 00 
0062D3 00 00 00 00 00 00 
0062D9 00 00 00 00 00 00 
0062DF 00 00 00 00 00 00 
0062E5 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0062EB 00 00 00 00 00 00 
0062F1 00 00 00 00 00 00 
0062F7 00 00 00 00 00 00 
0062FD 00 00 00 00 00 00 
006303 00 00 00 00 00 00 
006309 00 00 00 00 00 00 
00630F 00 00 00 00 00 00 
006315 00 00 00 00 00 00 
00631B 00 00 00 00 00 00 
006321 00 00 00 00 00 00 
006327 00 00 00 00 00 00 
00632D 00 00 00 00 00 00 
006333 00 00 00 00 00 00 
006339 00 00 00 00 00 00 
00633F 00 00 00 00 00 00 
006345 00 00 00 00 00 00 
00634B 00 00 00 00 00 00 
006351 00 00 00 00 00 00 
006357 00 00 00 00 00 00 
00635D 00 00 00 00 00 00 
006363 00 00 00 00 00 00 
006369 00 00 00 00 00 00 
00636F 00 00 00 00 00 00 
006375 00 00 00 00 00 00 
00637B 00 00 00 00 00 00 
006381 00 00 00 00 00 00 
006387 00 00 00 00 00 00 
00638D 00 00 00 00 00 00 
006393 00 00 00 00 00 00 
006399 00 00 00 00 00 00 
00639F 00 00 00 00 00 00 
0063A5 00 00 00 00 00 00 
0063AB 00 00 00 00 00 00 
0063B1 00 00 00 00 00 00 
0063B7 00 00 00 00 00 00 
0063BD 00 00 00 00 
                           B   829    
0063C1 C06200              B   830    envar_top_loc			dw24 first_ext_ev_entry
                           B   831    
                           B   832    ;==============================================
                           B   833    
                           B     0    	include		'phil_font_packed.asm'			0063C4                     B     1    packed_font_start
0063C4 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
0063CC 3C3C1800 181800EE 
0063D4 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
0063DC 6CFE6C6C 00187EE0 
0063E4 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
0063EC 3870E6C6 0078ECEC 
0063F4 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
0063FC 01000518 30016003 
006404 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
00640C 18300010 5438FE38 
006414 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
00641C 18010007 38387001 
006424 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
00642C 0000060E 1C3870E0 
006434 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
00643C 00387801 38047C00 
006444 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
00644C FE0C180C 0ECE7C00 
006454 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
00645C FEE0FC01 0E03FC00 
006464 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
00646C FE060C18 01380300 
006474 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
00647C 7C01CE03 7E0E7C01 
006484 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
00648C 00033030 00303060 
006494 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
00649C 00037E00 7E010003 
0064A4 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
0064AC 7CEE0E3C 38003800 
0064B4 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
0064BC 7CE6E6FE 01E60300 
0064C4 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
0064CC 7CE601E0 03E67C00 
0064D4 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
0064DC E0F8E0E0 FE00FEE0 
0064E4 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
0064EC E0EEE6E6 7C0001E6 
0064F4 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
0064FC 38057C00 7E011C04 
006504 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
00650C E6030001 E006FE00 
006514 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
00651C E6F6FEFE EEE6E600 
006524 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
00652C E603FCE0 E0007C01 
006534 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
00653C E603FCE6 E6007CEE 
006544 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
00654C 38060001 E6067C00 
006554 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
00655C 04D6FE6C 00E6E66C 
006564 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
00656C 7E06FC00 FE0E1C38 
006574 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
00657C 3C00C0E0 70381C0E 
006584 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
00658C 10386CC6 01000BFE 
006594 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
00659C E67E0000 E0E0FCE6 
0065A4 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
0065AC 037C0000 06067EE6 
0065B4 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
0065BC E07C0000 3E70FC01 
0065C4 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
0065CC 7E067C00 E0E0FC01 
0065D4 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
0065DC 387C0000 1C00011C 
0065E4 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
0065EC EE000078 0138047C 
0065F4 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
0065FC 010003FC 01E60401 
006604 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
00660C 0003FCE6 E6FCE0E0 
006614 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
00661C 0000DCE6 01E00301 
006624 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
00662C 00387E01 38031E01 
006634 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
00663C 0301E603 6C380100 
006644 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
00664C 03E67C38 7CE60100 
006654 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
00665C 00FE1C38 70FE003C 
006664 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
00666C 18070078 18180C18 
006674 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
00667C 0501FE07 0100FF01 
006684 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
00668C BC010029 7CC6BAA2 
006694 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
00669C 060100FF 0100FF01 
0066A4 009C                B    48                    db 000h,09Ch
0066A6                     B    49    packed_font_end
                           A  3268    
0066A6 00 00 00 00 00 00   A  3269    sector_buffer	blkb 512,0
0066AC 00 00 00 00 00 00 
0066B2 00 00 00 00 00 00 
0066B8 00 00 00 00 00 00 
0066BE 00 00 00 00 00 00 
0066C4 00 00 00 00 00 00 
0066CA 00 00 00 00 00 00 
0066D0 00 00 00 00 00 00 
0066D6 00 00 00 00 00 00 
0066DC 00 00 00 00 00 00 
0066E2 00 00 00 00 00 00 
0066E8 00 00 00 00 00 00 
0066EE 00 00 00 00 00 00 
0066F4 00 00 00 00 00 00 
0066FA 00 00 00 00 00 00 
006700 00 00 00 00 00 00 
006706 00 00 00 00 00 00 
00670C 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006712 00 00 00 00 00 00 
006718 00 00 00 00 00 00 
00671E 00 00 00 00 00 00 
006724 00 00 00 00 00 00 
00672A 00 00 00 00 00 00 
006730 00 00 00 00 00 00 
006736 00 00 00 00 00 00 
00673C 00 00 00 00 00 00 
006742 00 00 00 00 00 00 
006748 00 00 00 00 00 00 
00674E 00 00 00 00 00 00 
006754 00 00 00 00 00 00 
00675A 00 00 00 00 00 00 
006760 00 00 00 00 00 00 
006766 00 00 00 00 00 00 
00676C 00 00 00 00 00 00 
006772 00 00 00 00 00 00 
006778 00 00 00 00 00 00 
00677E 00 00 00 00 00 00 
006784 00 00 00 00 00 00 
00678A 00 00 00 00 00 00 
006790 00 00 00 00 00 00 
006796 00 00 00 00 00 00 
00679C 00 00 00 00 00 00 
0067A2 00 00 00 00 00 00 
0067A8 00 00 00 00 00 00 
0067AE 00 00 00 00 00 00 
0067B4 00 00 00 00 00 00 
0067BA 00 00 00 00 00 00 
0067C0 00 00 00 00 00 00 
0067C6 00 00 00 00 00 00 
0067CC 00 00 00 00 00 00 
0067D2 00 00 00 00 00 00 
0067D8 00 00 00 00 00 00 
0067DE 00 00 00 00 00 00 
0067E4 00 00 00 00 00 00 
0067EA 00 00 00 00 00 00 
0067F0 00 00 00 00 00 00 
0067F6 00 00 00 00 00 00 
0067FC 00 00 00 00 00 00 
006802 00 00 00 00 00 00 
006808 00 00 00 00 00 00 
00680E 00 00 00 00 00 00 
006814 00 00 00 00 00 00 
00681A 00 00 00 00 00 00 
006820 00 00 00 00 00 00 
006826 00 00 00 00 00 00 
00682C 00 00 00 00 00 00 
006832 00 00 00 00 00 00 
006838 00 00 00 00 00 00 
00683E 00 00 00 00 00 00 
006844 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00684A 00 00 00 00 00 00 
006850 00 00 00 00 00 00 
006856 00 00 00 00 00 00 
00685C 00 00 00 00 00 00 
006862 00 00 00 00 00 00 
006868 00 00 00 00 00 00 
00686E 00 00 00 00 00 00 
006874 00 00 00 00 00 00 
00687A 00 00 00 00 00 00 
006880 00 00 00 00 00 00 
006886 00 00 00 00 00 00 
00688C 00 00 00 00 00 00 
006892 00 00 00 00 00 00 
006898 00 00 00 00 00 00 
00689E 00 00 00 00 00 00 
0068A4 00 00 
                           A  3270    
0068A6 00 00 00 00 00 00   A  3271    scratch_pad		blkb 256,0
0068AC 00 00 00 00 00 00 
0068B2 00 00 00 00 00 00 
0068B8 00 00 00 00 00 00 
0068BE 00 00 00 00 00 00 
0068C4 00 00 00 00 00 00 
0068CA 00 00 00 00 00 00 
0068D0 00 00 00 00 00 00 
0068D6 00 00 00 00 00 00 
0068DC 00 00 00 00 00 00 
0068E2 00 00 00 00 00 00 
0068E8 00 00 00 00 00 00 
0068EE 00 00 00 00 00 00 
0068F4 00 00 00 00 00 00 
0068FA 00 00 00 00 00 00 
006900 00 00 00 00 00 00 
006906 00 00 00 00 00 00 
00690C 00 00 00 00 00 00 
006912 00 00 00 00 00 00 
006918 00 00 00 00 00 00 
00691E 00 00 00 00 00 00 
006924 00 00 00 00 00 00 
00692A 00 00 00 00 00 00 
006930 00 00 00 00 00 00 
006936 00 00 00 00 00 00 
00693C 00 00 00 00 00 00 
006942 00 00 00 00 00 00 
006948 00 00 00 00 00 00 
00694E 00 00 00 00 00 00 
006954 00 00 00 00 00 00 
00695A 00 00 00 00 00 00 
006960 00 00 00 00 00 00 
006966 00 00 00 00 00 00 
00696C 00 00 00 00 00 00 
006972 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Aug-11     23:33:44     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006978 00 00 00 00 00 00 
00697E 00 00 00 00 00 00 
006984 00 00 00 00 00 00 
00698A 00 00 00 00 00 00 
006990 00 00 00 00 00 00 
006996 00 00 00 00 00 00 
00699C 00 00 00 00 00 00 
0069A2 00 00 00 00 
                           A  3272    
                           A  3273    ;==============================================
                           A  3274    	
0069A6 00                  A  3275    os_max_addr		db 0							                           A  3276    	
                           A  3277    
                           A  3278    ;==============================================
                           A  3279    
                           A  3280    				end	
                           A  3281    				
                           A  3282    ;==============================================
                           A  3283    	


Errors: 0
Warnings: 0
Lines Assembled: 12582
