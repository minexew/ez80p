Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       00000083            B    49    TMR1_CTL		equ 083h 
       00000084            B    50    TMR1_RR_L		equ 084h
       00000085            B    51    TMR1_RR_H		equ 085h
                           B    52    
       000000ED            B    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    54    RTC_ACTRL		equ 0ech
       000000E0            B    55    RTC_SEC			equ 0e0h
       000000E1            B    56    RTC_MIN			equ 0e1h
       000000E2            B    57    RTC_HRS			equ 0e2h
       000000E3            B    58    RTC_DOW			equ 0e3h
       000000E4            B    59    RTC_DOM			equ 0e4h
       000000E5            B    60    RTC_MON			equ 0e5h
       000000E6            B    61    RTC_YR			equ 0e6h
       000000E7            B    62    RTC_CEN			equ 0e7h
                           B    63    
                           B    64    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags			equ 009h
       0000000A            B    17    port_hw_enable			equ 00ah
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00000000            B    29    sysram_addr				equ 0000000h
       00800000            B    30    vram_a_addr				equ 0800000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
       00C00000            B    31    vram_b_addr				equ 0c00000h
                           B    32    
                           B    33    ;-- Hardware registers ------------------------
                           B    34    
       00FF0000            B    35    hw_palette				equ 0ff0000h
       00FF0800            B    36    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    37    hw_video_parameters		equ 0ff1000h
       00FF1400            B    38    hw_audio_registers		equ 0ff1400h
       00FF1800            B    39    hw_video_settings		equ 0ff1800h
                           B    40    
       00FF1000            B    41    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    42    bitmap_parameters		equ hw_video_parameters
                           B    43    
       00FF1800            B    44    video_control			equ hw_video_settings+0
       00FF1801            B    45    sprite_control			equ hw_video_settings+0
       00FF1802            B    46    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    47    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    48    right_border_position	equ hw_video_settings+0
       00FF1805            B    49    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    50    irq_line_hi				equ hw_video_settings+0
       00FF1807            B    51    sprite_gen_stop_pos		equ hw_video_settings+0
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location			equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 		equ os_location + 14h
       00000A18            B     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            B     8    prose_relative_call	equ os_location + 1ch
                           B     9    
       00000A20            B    10    prose_kernal 		equ os_location + 20h
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    ; Add to sprite locations to position a 0,0 spr
                           B    15    
       00000100            B    16    x_display_offset	equ 0100h		;for AMOEBA
       00000200            B    17    y_display_offset	equ 0200h		;for AMOEBA
                           B    18    
                           B    19    ;----------------------------------------------
                           A    12    	
       00000800            A    13    	sector_buffer		equ 800h
       00000700            A    14    	serial_buffer		equ 700h
                           A    15    	
       00000100            A    16    	scratch_pad			equ 100h
                           A    17    
       00000200            A    18    	envar_list			equ 200h
       00000200            A    19    	envar_buffer_size	equ 200h
                           A    20    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    21    ;----------------------------------------------
                           A    22    
       00000041            A    23    prose_version			equ 41h
       0000010B            A    24    amoeba_version_required	equ 10bh
                           A    25    
       00080000            A    26    sysram_size				equ 080000h			;as
       00000200            A    27    stack_size				equ 512
                           A    28    
       00080000            A    29    vram_a_size				equ 080000h
       00080000            A    30    vram_b_size				equ 080000h
                           A    31    
                           A    32    ;----------------------------------------------
                           A    33    ; Assembly options
                           A    34    ;----------------------------------------------
                           A    35    
       00000008            A    36    max_volumes				equ 8
                           A    37    
       00000050            A    38    max_buffer_chars		equ 80		; applies t
                           A    39    
                           A    40    ;----------------------------------------------
                           A    41    			
000A00                     A    42    			org os_location
                           A    43    			
000A00 00 00 00 00 00 00   A    44    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    45    			
                           A    46    ;----------------------------------------------
                           A    47    			
000A10 C3 4E 0A 00         A    48    				jp os_first_run					000A14 C3 03 10 00         A    49    				jp extcmd_return				000A18 C3 71 3C 00         A    50    				jp relativize_hl				000A1C C3 84 3C 00         A    51    				jp relative_call				                           A    52    				
                           A    53    ;----------------------------------------------
                           A    54    
                           A    55    ; External apps can call kernal routines by doi
                           A    56    ; Set A to kernal routine number required (see 
                           A    57    ; (this routine is always located at os_locatio
                           A    58    
000A20 D9                  A    59    				exx
000A21 DD22 CF 6D 00       A    60    				ld (kernal_ix_cache),ix
000A26 DD21 22 61 00       A    61    				ld ix,kernal_table				000A2B 11030000            A    62    				ld de,3
000A2F 57                  A    63    				ld d,a
000A30 ED5C                A    64    				mlt de
000A32 DD19                A    65    				add ix,de						000A34 DD3700              A    66    				ld ix,(ix)						                           A    67    				
000A37 E3                  A    68    				ex (sp),hl
000A38 7D                  A    69    				ld a,l							000A39 E601                A    70    				and 1							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A3B E3                  A    71    				ex (sp),hl
000A3C D9                  A    72    				exx
000A3D FDE5                A    73    				push iy
000A3F CD 4C 0A 00         A    74    				call kr_jump					000A43 FDE1                A    75    				pop iy							000A45 DD2A CF 6D 00       A    76    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    77    				ret.l							                           A    78    				
000A4C DDE9                A    79    kr_jump			jp (ix)							                           A    80    						
                           A    81    ;----------------------------------------------
                           A    82    
                           A    83    ; *******************
                           A    84    ; *   START UP OS   *
                           A    85    ; *******************
                           A    86    
000A4E                     A    87    os_first_run
                           A    88    	
000A4E B7                  A    89    				or a							000A4F 20 05               A    90    				jr nz,os_cold_start		
000A51 78                  A    91    				ld a,b
000A52 32 51 6C 00         A    92    				ld (boot_drive),a				                           A    93    
000A56                     A    94    os_cold_start
000A56 ED7D                A    95    				stmix							000A58 F3                  A    96    				di								000A59 ED5E                A    97    				im 2							000A5B AF                  A    98    				xor a
000A5C ED6D                A    99    				ld MB,a							000A5E 4031FFFF            A   100    				ld.sis sp,0ffffh				000A62 31FFFF07            A   101    				ld sp,sysram_addr+sysram_size-1
000A66 21FFFF07            A   102    				ld hl,sysram_addr+sysram_size-1
000A6A 11000200            A   103    				ld de,stack_size
000A6E AF                  A   104    				xor a
000A6F ED52                A   105    				sbc hl,de
000A71 22 92 6D 00         A   106    				ld (free_sysram_top),hl			000A75 21 55 73 00         A   107    				ld hl,os_max_addr
000A79 22 8F 6D 00         A   108    				ld (free_sysram_base),hl
                           A   109    				
000A7D 21000080            A   110    				ld hl,vram_a_addr
000A81 22 95 6D 00         A   111    				ld (free_vram_a_base),hl
000A85 01FFFF07            A   112    				ld bc,vram_a_size-1
000A89 09                  A   113    				add hl,bc
000A8A 22 98 6D 00         A   114    				ld (free_vram_a_top),hl
                           A   115    				
000A8E 210000C0            A   116    				ld hl,vram_b_addr
000A92 22 9B 6D 00         A   117    				ld (free_vram_b_base),hl
000A96 01FFFD07            A   118    				ld bc,vram_b_size-1-512			000A9A 09                  A   119    				add hl,bc
000A9B 22 9E 6D 00         A   120    				ld (free_vram_b_top),hl
                           A   121    								
000A9F CD D6 45 00         A   122    				call disable_irqs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000AA3 CD F5 47 00         A   123    				call disable_all_nmis
                           A   124    				
000AA7 3A 8D 6D 00         A   125    				ld a,(first_run)				000AAB B7                  A   126    				or a
000AAC 28 11               A   127    				jr z,dont_resetkb
000AAE CD 39 4C 00         A   128    				call init_keyboard
000AB2 28 06               A   129    				jr z,kb_ok
000AB4 21 8E 6D 00         A   130    				ld hl,devices_connected
000AB8 CB86                A   131    				res 0,(hl)
000ABA AF                  A   132    kb_ok			xor a
000ABB 32 8D 6D 00         A   133    				ld (first_run),a
000ABF                     A   134    dont_resetkb
                           A   135    				
000ABF 21 C1 6F 00         A   136    				ld hl,packed_font_start
000AC3 11000080            A   137    				ld de,vram_a_addr
000AC7 01 E2 02 00         A   138    				ld bc,packed_font_end-packed_fo
000ACB CD 73 17 00         A   139    				call unpack_rle
000ACF CD C0 36 00         A   140    				call convert_font
                           A   141    
000AD3 CD C7 3B 00         A   142    				call test_amoeba_vers
                           A   143    				
000AD7 21 CF 6D 00         A   144    				ld hl,os_variables				000ADB 01 D0 01 00         A   145    				ld bc,last_os_var-os_variables
000ADF AF                  A   146    				xor a
000AE0 CD 28 17 00         A   147    				call os_bchl_memfill
                           A   148    				
000AE4 21000200            A   149    				ld hl,envar_list				000AE8 01000200            A   150    				ld bc,envar_buffer_size
000AEC AF                  A   151    				xor a
000AED CD 28 17 00         A   152    				call os_bchl_memfill
000AF1 21 A0 6F 00         A   153    				ld hl,default_envars
000AF5 11000200            A   154    				ld de,envar_list
000AF9 01 1E 00 00         A   155    				ld bc,envar_top_loc-default_env
000AFD EDB0                A   156    				ldir
000AFF 1B                  A   157    				dec de
000B00 ED53 BE 6F 00       A   158    				ld (envar_top_loc),de			                           A   159    	
000B05 CD DC 4A 00         A   160    				call hwsc_default_hw_settings
000B09 CD FE 4E 00         A   161    				call hwsc_disable_audio
                           A   162    				
000B0D 3A C9 6B 00         A   163    				ld a,(video_mode)
000B11 CD 01 17 00         A   164    				call os_set_vmode				                           A   165    				
000B15 21 24 62 00         A   166    				ld hl,welcome_message			000B19 CD 15 11 00         A   167    				call os_print_string
                           A   168    				
000B1D CD DB 35 00         A   169    				call os_cmd_vers				                           A   170    				
000B21 AF                  A   171    				xor a
000B22 32 52 6C 00         A   172    				ld (current_volume),a
000B26 CD CF 35 00         A   173    				call os_cmd_remount				                           A   174    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B2A CD BB 15 00         A   175    				call os_new_line				                           A   176    
000B2E CD F7 4C 00         A   177    				call purge_keyboard
                           A   178    				
000B32 CD 5B 45 00         A   179    				call set_irq_vectors
000B36 CD B3 45 00         A   180    				call enable_os_irqs
000B3A FB                  A   181    				ei
                           A   182    				
000B3B 21 8E 6D 00         A   183    				ld hl,devices_connected			000B3F CB46                A   184    				bit 0,(hl)
000B41 20 08               A   185    				jr nz,kb_present
000B43 21 20 68 00         A   186    				ld hl,no_keyboard_msg
000B47 CD F2 15 00         A   187    				call os_show_packed_text
000B4B                     A   188    kb_present				
                           A   189    
000B4B 21 53 62 00         A   190    				ld hl,startup_script_fn
000B4F CD FD 10 00         A   191    				call set_script_fn
000B53 22 FB 6E 00         A   192    				ld (os_args_loc),hl
000B57 CD 46 3E 00         A   193    				call os_do_script				                           A   194    									
000B5B 3A 8C 6D 00         A   195    				ld a,(frozen)					000B5F B7                  A   196    				or a
000B60 28 11               A   197    				jr z,os_main_loop
000B62 AF                  A   198    				xor a
000B63 32 8C 6D 00         A   199    				ld (frozen),a
000B67 21 AA 62 00         A   200    				ld hl,nmi_freeze_txt
000B6B CD 15 11 00         A   201    				call os_print_string
000B6F CD 3B 30 00         A   202    				call os_cmd_r
                           A   203    				
                           A   204    
                           A   205    ;==============================================
                           A   206    
000B73 CD CC 4A 00         A   207    os_main_loop	call hwsc_wait_vrt				                           A   208    
000B77 CD 66 11 00         A   209    				call os_cursor_flash
                           A   210    
000B7B CD 9D 4F 00         A   211    				call os_get_key_press
000B7F 20 F2               A   212    				jr nz,os_main_loop
                           A   213    	
000B81 32 79 6F 00         A   214    				ld (current_scancode),a
000B85 78                  A   215    				ld a,b
000B86 32 7A 6F 00         A   216    				ld (current_asciicode),a		                           A   217    	
000B8A CD AB 49 00         A   218    				call hwsc_remove_cursor
000B8E 3E18                A   219    				ld a,24							000B90 32 3C 6E 00         A   220    				ld (cursorflashtimer),a			000B94 AF                  A   221    				xor a
000B95 32 3D 6E 00         A   222    				ld (cursor_status),a
                           A   223    				
000B99 3A 79 6F 00         A   224    				ld a,(current_scancode)			000B9D FE70                A   225    				cp 70h
000B9F 20 0C               A   226    				jr nz,os_notins
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BA1 3A F1 6B 00         A   227     				ld a,(overwrite_mode)
000BA5 EE01                A   228    				xor 1
000BA7 32 F1 6B 00         A   229    				ld (overwrite_mode),a
000BAB 18 C6               A   230    				jr os_main_loop
                           A   231    
000BAD FE6C                A   232    os_notins		cp 6ch
000BAF 20 07               A   233    				jr nz,not_homekey
000BB1 AF                  A   234    				xor a
000BB2 32 3A 6E 00         A   235    				ld (cursor_x),a
000BB6 18 BB               A   236    				jr os_main_loop
                           A   237    								
000BB8 FE69                A   238    not_homekey		cp 69h
000BBA 20 24               A   239    				jr nz,not_endkey
000BBC 3A 39 6E 00         A   240    				ld a,(cursor_y)					000BC0 4F                  A   241    				ld c,a
000BC1 3A F7 6B 00         A   242    				ld a,(charmap_columns)
000BC5 47                  A   243    				ld b,a
000BC6 05                  A   244    fendloop		dec b
000BC7 CD 19 4A 00         A   245    				call hwsc_get_charmap_addr_xy
000BCB 7E                  A   246    				ld a,(hl)
000BCC FE20                A   247    				cp 20h
000BCE 28 F6               A   248    				jr z,fendloop
000BD0 04                  A   249    				inc b
000BD1 3A F7 6B 00         A   250    				ld a,(charmap_columns)
000BD5 B8                  A   251    				cp b
000BD6 20 01               A   252    				jr nz,endxposok
000BD8 05                  A   253    				dec b
000BD9 78                  A   254    endxposok		ld a,b
000BDA 32 3A 6E 00         A   255    				ld (cursor_x),a
000BDE 18 93               A   256    				jr os_main_loop
                           A   257    
000BE0 21 3A 6E 00         A   258    not_endkey		ld hl,cursor_x					000BE4 FE6B                A   259    				cp 06bh			
000BE6 20 10               A   260    				jr nz,os_ntlft
000BE8 35                  A   261    				dec (hl)
000BE9 7E                  A   262    				ld a,(hl)
000BEA FEFF                A   263    				cp 0ffh	
000BEC 20 85               A   264    				jr nz,os_main_loop
000BEE 3A F7 6B 00         A   265    				ld a,(charmap_columns)
000BF2 3D                  A   266    				dec a
000BF3 77                  A   267    				ld (hl),a						000BF4 C3 73 0B 00         A   268    				jr os_main_loop
                           A   269    
000BF8 FE74                A   270    os_ntlft		cp 074h							000BFA 20 10               A   271    				jr nz,os_ntrig
000BFC 34                  A   272    				inc (hl)
000BFD 3A F7 6B 00         A   273    				ld a,(charmap_columns)
000C01 BE                  A   274    				cp (hl)
000C02 C2 73 0B 00         A   275    				jr nz,os_main_loop
000C06 3600                A   276    				ld (hl),0						000C08 C3 73 0B 00         A   277    				jr os_main_loop
                           A   278    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C0C 21 39 6E 00         A   279    os_ntrig		ld hl,cursor_y			
000C10 FE7D                A   280    				cp 07dh							000C12 20 07               A   281    				jr nz,os_not_pgup
000C14 AF                  A   282    				xor a
000C15 32 3A 6E 00         A   283    				ld (cursor_x),a
000C19 18 1F               A   284    				jr os_cyzero
                           A   285    
000C1B FE7A                A   286    os_not_pgup		cp 07ah							000C1D 20 0C               A   287    				jr nz,os_not_pgdwn
000C1F AF                  A   288    				xor a
000C20 32 3A 6E 00         A   289    				ld (cursor_x),a
000C24 3A F4 6B 00         A   290    				ld a,(charmap_rows)
000C28 3D                  A   291    				dec a
000C29 18 24               A   292    				jr os_cxzsd
                           A   293    
000C2B 21 39 6E 00         A   294    os_not_pgdwn	ld hl,cursor_y
000C2F FE75                A   295    				cp 075h							000C31 20 0D               A   296    				jr nz,os_ntup
000C33 35                  A   297    				dec (hl)
000C34 CB7E                A   298    				bit 7,(hl)
000C36 CA 73 0B 00         A   299    				jr z,os_main_loop
000C3A 3600                A   300    os_cyzero		ld (hl),0						000C3C C3 73 0B 00         A   301    				jr os_main_loop
                           A   302    
000C40 FE72                A   303    os_ntup			cp 072h
000C42 20 14               A   304    				jr nz,os_ntdwn					000C44 34                  A   305    				inc (hl)
000C45 3A F4 6B 00         A   306    				ld a,(charmap_rows)
000C49 BE                  A   307    				cp (hl)
000C4A C2 73 0B 00         A   308    				jr nz,os_main_loop
000C4E 3D                  A   309    				dec a
000C4F 77                  A   310    os_cxzsd		ld (hl),a						000C50 CD 37 49 00         A   311    				call hwsc_scroll_up
000C54 C3 73 0B 00         A   312    				jr os_main_loop
                           A   313    
000C58 FE71                A   314    os_ntdwn		cp 071h							000C5A 20 08               A   315    				jr nz,os_nodel		
000C5C 3A 3A 6E 00         A   316    				ld a,(cursor_x)					000C60 47                  A   317    				ld b,a
000C61 04                  A   318    				inc b
000C62 18 13               A   319    				jr os_chrbk
                           A   320    
000C64 FE66                A   321    os_nodel		cp 066h							000C66 20 17               A   322    				jr nz,os_nbksp
000C68 3A 3A 6E 00         A   323    				ld a,(cursor_x)					000C6C B7                  A   324    				or a							000C6D CA 73 0B 00         A   325    				jp z,os_main_loop
000C71 47                  A   326    				ld b,a
000C72 3D                  A   327    				dec a
000C73 32 3A 6E 00         A   328    				ld (cursor_x),a					000C77 CD 31 4A 00         A   329    os_chrbk		call hwsc_chars_left			000C7B C3 73 0B 00         A   330    				jp os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   331    
                           A   332    
                           A   333    
000C7F 21 AC 6B 00         A   334    os_nbksp		ld hl,function_key_list			000C83 0609                A   335    				ld b,9
000C85 BE                  A   336    tst_fkey		cp (hl)
000C86 20 7E               A   337    				jr nz,nxtfkey
000C88 3E3A                A   338    				ld a,03ah
000C8A 90                  A   339    				sub b
000C8B 32 B6 6B 00         A   340    				ld (fkey_filename+1),a
                           A   341    				
000C8F CD 55 10 00         A   342    				call cache_dir_block			000C93 CD 2F 18 00         A   343    				call os_check_volume_format
000C97 20 65               A   344    				jr nz,nofkstr					000C99 21 B5 6B 00         A   345    				ld hl,fkey_filename
000C9D CD C7 17 00         A   346    				call os_find_file				000CA1 28 18               A   347    				jr z,fkey_gfn
                           A   348    				
000CA3 CD 83 18 00         A   349    				call os_root_dir
000CA7 21 BC 6B 00         A   350    				ld hl,keymaps_txt				000CAB CD 73 18 00         A   351    				call os_change_dir
000CAF 20 4D               A   352    				jr nz,nofkstr					000CB1 21 B5 6B 00         A   353    				ld hl,fkey_filename
000CB5 CD C7 17 00         A   354    				call os_find_file				000CB9 20 43               A   355    				jr nz,nofkstr	
000CBB AF                  A   356    fkey_gfn		xor a							000CBC 11500000            A   357    				ld de,max_buffer_chars	
000CC0 CD D6 17 00         A   358    				call os_set_load_length			                           A   359    				
000CC4 21000100            A   360    				ld hl,scratch_pad
000CC8 CD F4 17 00         A   361    				call os_read_bytes_from_file	000CCC 28 04               A   362    				jr z,fkey_ok 
000CCE FECC                A   363    				cp 0cch							000CD0 20 2C               A   364    				jr nz,nofkstr
000CD2 0650                A   365    fkey_ok			ld b,max_buffer_chars			000CD4 21000100            A   366    				ld hl,scratch_pad
000CD8 11 57 6E 00         A   367    				ld de,commandstring
000CDC 7E                  A   368    cfcmdlp			ld a,(hl)
000CDD FE20                A   369    				cp 20h
000CDF 38 07               A   370    				jr c,fkeycmddone
000CE1 12                  A   371    				ld (de),a
000CE2 23                  A   372    				inc hl
000CE3 13                  A   373    				inc de
000CE4 10 F6               A   374    				djnz cfcmdlp
000CE6 18 06               A   375    				jr fkeycmdready
000CE8 3E20                A   376    fkeycmddone		ld a,' '						000CEA 12                  A   377    				ld (de),a
000CEB 13                  A   378    				inc de
000CEC 10 FA               A   379    				djnz fkeycmddone
000CEE 21 57 6E 00         A   380    fkeycmdready	ld hl,commandstring
000CF2 CD 15 11 00         A   381    				call os_print_string			000CF6 CD 61 10 00         A   382    				call restore_dir_block			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CFA C3 5A 0D 00         A   383    				jp os_got_cmd_str				000CFE CD 61 10 00         A   384    nofkstr			call restore_dir_block		
000D02 C3 73 0B 00         A   385    				jp os_main_loop					                           A   386    
000D06 23                  A   387    nxtfkey			inc hl
000D07 05 C2 85 0C 00      A   388    				djnz tst_fkey
                           A   389    
                           A   390    
                           A   391    
000D0C FE5A                A   392    not_fkey		cp 05ah							000D0E CA 56 0D 00         A   393    				jp z,os_enter_pressed
                           A   394    	
000D12 3A 7A 6F 00         A   395    				ld a,(current_asciicode)		000D16 FE20                A   396    				cp 32							000D18 38 38               A   397    				jr c,os_nvdun					                           A   398    
000D1A FE7B                A   399    				cp 07bh							000D1C 30 12               A   400    				jr nc,os_gtcha					000D1E FE61                A   401    				cp 061h
000D20 38 04               A   402    				jr c,os_ntupc
000D22 D620                A   403    				sub 020h
000D24 18 0A               A   404    				jr os_gtcha
000D26 FE5B                A   405    os_ntupc		cp 05bh
000D28 30 06               A   406    				jr nc,os_gtcha
000D2A FE41                A   407    				cp 041h
000D2C 38 02               A   408    				jr c,os_gtcha
000D2E C620                A   409    				add a,020h
000D30 57                  A   410    os_gtcha		ld d,a							000D31 3A F1 6B 00         A   411    				ld a,(overwrite_mode)			000D35 B7                  A   412    				or a
000D36 CC 6A 4A 00         A   413    				call z,hwsc_chars_right
                           A   414    				
000D3A ED4B 39 6E 00       A   415    os_schi			ld bc,(cursor_pos)				000D3F 7A                  A   416    				ld a,d							000D40 CD 72 49 00         A   417    				call hwsc_plot_char		
000D44 21 3A 6E 00         A   418    				ld hl,cursor_x					000D48 34                  A   419    				inc (hl)
000D49 3A F7 6B 00         A   420    				ld a,(charmap_columns)
000D4D BE                  A   421    				cp (hl)							000D4E 20 02               A   422    				jr nz,os_nvdun
000D50 3600                A   423    				ld (hl),0
                           A   424    
000D52 C3 73 0B 00         A   425    os_nvdun		jp os_main_loop
                           A   426    	
                           A   427    
                           A   428    ;----------------------------------------------
                           A   429    
000D56                     A   430    os_enter_pressed
                           A   431    	
000D56 CD AD 4A 00         A   432    				call hwsc_charline_to_command_s
                           A   433    
000D5A AF                  A   434    os_got_cmd_str	xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D5B 32 3A 6E 00         A   435    				ld (cursor_x),a					000D5F 21 39 6E 00         A   436    				ld hl,cursor_y					000D63 34                  A   437    				inc (hl)
000D64 3A F4 6B 00         A   438    				ld a,(charmap_rows)
000D68 BE                  A   439    				cp (hl)
000D69 20 06               A   440    				jr nz,os_esdok
000D6B 3D                  A   441    				dec a
000D6C 77                  A   442    				ld (hl),a
000D6D CD 37 49 00         A   443    				call hwsc_scroll_up
                           A   444    
000D71 CD 79 0D 00         A   445    os_esdok		call os_parse_cmd_chk_ps		                           A   446    
000D75 C3 73 0B 00         A   447    post_csb		jp os_main_loop
                           A   448    
                           A   449    	
                           A   450    ;----------------------------------------------
                           A   451    
                           A   452    
000D79                     A   453    os_parse_cmd_chk_ps
                           A   454    
000D79 CD 8C 0D 00         A   455    				call os_parse_command_line
000D7D FEFE                A   456    				cp 0feh							000D7F C0                  A   457    				ret nz
000D80 01500000            A   458    				ld bc,max_buffer_chars			000D84 11 57 6E 00         A   459    				ld de,commandstring				000D88 EDB0                A   460    				ldir
000D8A 18 ED               A   461    				jr os_parse_cmd_chk_ps
                           A   462    
                           A   463    	
                           A   464    ;----------------------------------------------
                           A   465    	
000D8C                     A   466    os_parse_command_line
                           A   467    
000D8C 3E01                A   468    				ld a,1
000D8E 32 D2 6D 00         A   469    				ld (store_registers),a			                           A   470    
000D92 21 57 6E 00         A   471    				ld hl,commandstring				000D96 0650                A   472    				ld b,max_buffer_chars			000D98 CD B3 11 00         A   473    				call os_scan_for_non_space		000D9C B7                  A   474    				or a							000D9D C8                  A   475    				ret z
000D9E 11 3A 63 00         A   476    				ld de,dictionary-1				000DA2 D5                  A   477    				push de
000DA3 D1                  A   478    compcstr		pop de
000DA4 E5                  A   479    				push hl
000DA5 FDE1                A   480    				pop iy
000DA7 13                  A   481    notacmd			inc de
000DA8 1A                  A   482    				ld a,(de)
000DA9 FE01                A   483    				cp 1							000DAB CA 53 0E 00         A   484    				jp z,os_no_kernal_command_found
000DAF CB7F                A   485    				bit 7,a
000DB1 28 F4               A   486    				jr z,notacmd					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DB3 E67F                A   487    				and 07fh
000DB5 4F                  A   488    				ld c,a							000DB6 D5                  A   489    				push de
000DB7 13                  A   490    cmdnscan		inc de
000DB8 FD7E00              A   491    				ld a,(iy)						000DBB CD 1C 14 00         A   492    				call os_uppercasify
000DBF 47                  A   493    				ld b,a
000DC0 1A                  A   494    				ld a,(de)						000DC1 B8                  A   495    				cp b
000DC2 FD23                A   496    				inc iy
000DC4 28 F1               A   497    				jr z,cmdnscan					000DC6 1A                  A   498    nomatch			ld a,(de)						000DC7 B7                  A   499    				or a
000DC8 28 04               A   500    				jr z,posmatch					000DCA CB7F                A   501    				bit 7,a			
000DCC 28 D5               A   502    				jr z,compcstr					000DCE FD7EFF              A   503    posmatch		ld a,(iy-1)						000DD1 FE20                A   504    				cp 32
000DD3 20 CE               A   505    				jr nz,compcstr					                           A   506    	
000DD5 D1                  A   507    				pop de				
000DD6 FDE5                A   508    				push iy							000DD8 E1                  A   509    				pop hl
000DD9 CD B3 11 00         A   510    				call os_scan_for_non_space
000DDD 22 FB 6E 00         A   511    				ld (os_args_loc),hl				                           A   512    	
000DE1 21 23 69 00         A   513    				ld hl,os_cmd_locs
000DE5 11030000            A   514    				ld de,3
000DE9 51                  A   515    				ld d,c
000DEA ED5C                A   516    				mlt de							000DEC 19                  A   517    				add hl,de
000DED ED37                A   518    				ld ix,(hl)						                           A   519    
000DEF 2A FB 6E 00         A   520    				ld hl,(os_args_loc)				000DF3 CD 2F 10 00         A   521    go_int_cmd		call os_run_command				                           A   522    
000DF7 CD 6D 10 00         A   523    				call error_to_envar
000DFB B7                  A   524    				or a
000DFC C8                  A   525    				ret z							000DFD FE01                A   526    				cp 1
000DFF 20 17               A   527    				jr nz,show_erm
000E01 78                  A   528    os_hwe1			ld a,b							000E02 21 3F 66 00         A   529    os_hwerr		ld hl,hex_byte_txt		
000E06 CD 5E 12 00         A   530    				call hexbyte_to_ascii	
000E0A CD BB 15 00         A   531    				call os_new_line
000E0E 21 13 68 00         A   532    				ld hl,hw_err_msg
000E12 CD F2 15 00         A   533    				call os_show_packed_text
000E16 AF                  A   534    				xor a
000E17 C9                  A   535    				ret
                           A   536    
000E18 01000000            A   537    show_erm		ld bc,0							000E1C 4F                  A   538    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E1D D680                A   539    				sub 080h						000E1F 38 11               A   540    				jr c,no_trans					000E21 21 5E 6A 00         A   541    				ld hl,kernal_error_code_transla
000E25 CB77                A   542    				bit 6,a							000E27 28 06               A   543    				jr z,not_fs_err					000E29 21 6E 6A 00         A   544    				ld hl,fs_error_code_translation
000E2D D640                A   545    				sub 040h
000E2F 4F                  A   546    not_fs_err		ld c,a
000E30 09                  A   547    				add hl,bc
000E31 4E                  A   548    				ld c,(hl)
000E32 0600                A   549    no_trans		ld b,0
000E34 21 8F 69 00         A   550    				ld hl,packed_msg_list
000E38 7E                  A   551    findmsg			ld a,(hl)
000E39 FEFF                A   552    				cp 0ffh
000E3B C8                  A   553    				ret z							000E3C 23                  A   554    				inc hl
000E3D B7                  A   555    				or a
000E3E 20 F8               A   556    				jr nz,findmsg					000E40 04                  A   557    				inc b
000E41 79                  A   558    				ld a,c							000E42 B8                  A   559    				cp b
000E43 20 F3               A   560    				jr nz,findmsg
000E45 CD BB 15 00         A   561    				call os_new_line
000E49 CD F2 15 00         A   562    				call os_show_packed_text
000E4D CD BB 15 00         A   563    				call os_new_line
000E51 AF                  A   564    				xor a
000E52 C9                  A   565    				ret
                           A   566    	
                           A   567    
000E53                     A   568    os_no_kernal_command_found
                           A   569    
000E53 CD 39 10 00         A   570    				call test_volx					000E57 20 0A               A   571    				jr nz,novolcmd					000E59 D630                A   572    gotvolcmd		sub 030h
000E5B CD 5E 1C 00         A   573    				call os_change_volume
000E5F C3 1A 10 00         A   574    				jp extcmderf					                           A   575    		
000E63 7E                  A   576    novolcmd		ld a,(hl)						000E64 FE47                A   577    				cp 'G'							000E66 20 3A               A   578    				jr nz,not_g_cmd					000E68 23                  A   579    				inc hl
000E69 7E                  A   580    				ld a,(hl)
000E6A 2B                  A   581    				dec hl
000E6B FE20                A   582    				cp ' '
000E6D 20 33               A   583    				jr nz,not_g_cmd
000E6F 23                  A   584    				inc hl
000E70 CD B3 11 00         A   585    				call os_scan_for_non_space
000E74 22 FB 6E 00         A   586    				ld (os_args_loc),hl				000E78 B7                  A   587    				or a
000E79 20 04               A   588    				jr nz,gotgargs
000E7B 3E1F                A   589    				ld a,01fh						000E7D 18 99               A   590    				jr show_erm
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E7F CD 9D 12 00         A   591    gotgargs		call ascii_to_hex_no_scan		000E83 B7                  A   592    				or a
000E84 20 92               A   593    				jr nz,show_erm
000E86 CD E4 47 00         A   594    				call enable_button_nmi			000E8A CD C7 1D 00         A   595    				call test_de
000E8E 20 03               A   596    				jr nz,not_reset
000E90 AF                  A   597    				xor a
000E91 D304                A   598    				out (port_memory_paging),a		000E93 D5                  A   599    not_reset		push de
000E94 2A FB 6E 00         A   600    				ld hl,(os_args_loc)
000E98 CD 9E 11 00         A   601    				call os_next_arg				000E9C DDE1                A   602    				pop ix			
000E9E C3 2F 10 00         A   603    				jp os_run_command				                           A   604    				
                           A   605    				
                           A   606    
                           A   607    
000EA2 22 FB 6E 00         A   608    not_g_cmd		ld (os_args_loc),hl				000EA6 22 FE 6E 00         A   609    				ld (os_args_pos_cache),hl
                           A   610    
000EAA CD 13 54 00         A   611    				call fs_check_disk_format		000EAE 38 2A               A   612    				jr c,os_noextcmd				000EB0 20 28               A   613    				jr nz,os_noextcmd
                           A   614    	
000EB2 CD 55 10 00         A   615    				call cache_dir_block			                           A   616    
000EB6 01 95 62 00         A   617    				ld bc,ezp_txt					000EBA CD 8E 10 00         A   618    				call scan_current_and_path_dirs
000EBE DA 02 0E 00         A   619    				jp c,os_hwerr	
000EC2 28 4C               A   620    				jr z,os_got_extcmd
                           A   621    				
000EC4 CD 61 10 00         A   622    				call restore_dir_block
                           A   623    				
000EC8 01 9B 62 00         A   624    				ld bc,pbf_txt					000ECC CD 8E 10 00         A   625    				call scan_current_and_path_dirs
000ED0 DA 02 0E 00         A   626    				jp c,os_hwerr	
000ED4 28 0A               A   627    				jr z,os_got_script
                           A   628    				
000ED6 CD 61 10 00         A   629    				call restore_dir_block			000EDA 3E0B                A   630    os_noextcmd		ld a,0bh						000EDC C3 18 0E 00         A   631    				jp show_erm
                           A   632    
                           A   633    				
000EE0 21 13 6F 00         A   634    os_got_script	ld hl,script_flags				000EE4 CB46                A   635    				bit scr_in_script,(hl)
000EE6 C2 C7 40 00         A   636    				jp nz,script_error
000EEA 21 D6 6D 00         A   637    				ld hl,temp_string				000EEE CD FD 10 00         A   638    				call set_script_fn
000EF2 CD 02 1C 00         A   639    				call fs_get_dir_cluster			000EF6 ED53 0A 6F 00       A   640    				ld (script_dir),de
000EFB CD 61 10 00         A   641    				call restore_dir_block			000EFF 2A FB 6E 00         A   642    				ld hl,(os_args_loc)		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F03 CD B3 11 00         A   643    				call os_scan_for_non_space
000F07 DD21 46 3E 00       A   644    				ld ix,os_do_script				000F0C C3 F3 0D 00         A   645    				jp go_int_cmd
                           A   646    				
                           A   647    
                           A   648    
                           A   649    
                           A   650    
000F10 2A FB 6E 00         A   651    os_got_extcmd	ld hl,(os_args_loc)				000F14 CD B3 11 00         A   652    				call os_scan_for_non_space		000F18 22 FB 6E 00         A   653    				ld (os_args_loc),hl
                           A   654    
000F1C 11100000            A   655    				ld de,16
000F20 CD D6 17 00         A   656    				call os_set_load_length			000F24 21000100            A   657    				ld hl,scratch_pad
000F28 22 EE 60 00         A   658    				ld (fs_ez80_address),hl
000F2C CD 10 56 00         A   659    				call fs_read_data_command
000F30 DA 02 0E 00         A   660    				jp c,os_hwerr					000F34 C2 18 0E 00         A   661    				jp nz,show_erm					000F38 2A020100            A   662    				ld hl,(scratch_pad+2)
000F3C 1150524F            A   663    				ld de,04f5250h					000F40 AF                  A   664    				xor a	
000F41 ED52                A   665    				sbc hl,de
000F43 28 0A               A   666    				jr z,loc_header
000F45 CD 61 10 00         A   667    				call restore_dir_block			000F49 3E1A                A   668    				ld a,01ah						000F4B C3 18 0E 00         A   669    				jp show_erm						                           A   670    				
000F4F 3A0F0100            A   671    loc_header		ld a,(scratch_pad+15)			000F53 32 CE 6D 00         A   672    				ld (store_adl),a			
000F57 CD BD 55 00         A   673    				call fs_open_file_command		000F5B DA 02 0E 00         A   674    				jp c,os_hwerr
000F5F C2 DA 0E 00         A   675    				jr nz,os_noextcmd
000F63 2A050100            A   676    				ld hl,(scratch_pad+5)			000F67 22 EE 60 00         A   677    				ld (fs_ez80_address),hl
                           A   678    				
000F6B ED5B0B01 00         A   679    				ld de,(scratch_pad+11)			000F70 7B                  A   680    				ld a,e
000F71 B2                  A   681    				or d
000F72 28 14               A   682    				jr z,noprov_spec				000F74 21410000            A   683    				ld hl,prose_version
000F78 AF                  A   684    				xor a
000F79 40ED52              A   685    				sbc.sis hl,de					000F7C 30 0A               A   686    				jr nc,noprov_spec
000F7E CD 61 10 00         A   687    				call restore_dir_block
000F82 3E1B                A   688    				ld a,01bh						000F84 C3 18 0E 00         A   689    				jp show_erm
                           A   690    				
000F88 CD 79 4B 00         A   691    noprov_spec		call hwsc_get_version			000F8C 2A0D0100            A   692    				ld hl,(scratch_pad+13)			000F90 EB                  A   693    				ex de,hl						000F91 7B                  A   694    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F92 B2                  A   695    				or d
000F93 28 10               A   696    				jr z,nohwv_spec					000F95 AF                  A   697    				xor a
000F96 40ED52              A   698    				sbc.sis hl,de					000F99 30 0A               A   699    				jr nc,nohwv_spec
000F9B CD 61 10 00         A   700    				call restore_dir_block
000F9F 3E2B                A   701    				ld a,02bh						000FA1 C3 18 0E 00         A   702    				jp show_erm
                           A   703    
000FA5 ED5B0801 00         A   704    nohwv_spec		ld de,(scratch_pad+8)			000FAA 3A0A0100            A   705    				ld a,(scratch_pad+10)			000FAE B2                  A   706    				or d
000FAF B3                  A   707    				or e
000FB0 28 04               A   708    				jr z,readcode					000FB2 CD D6 17 00         A   709    				call os_set_load_length			                           A   710    		
000FB6 ED4B EE 60 00       A   711    readcode		ld bc,(fs_ez80_address)			000FBB C5                  A   712    				push bc
000FBC E1                  A   713    				pop hl
000FBD ED5B E5 60 00       A   714    				ld de,(fs_file_transfer_length)
000FC2 19                  A   715    				add hl,de
000FC3 EB                  A   716    				ex de,hl
000FC4 CD ED 3C 00         A   717    				call os_protected_ram_test
000FC8 C4 3F 3D 00         A   718    				call nz,os_protected_ram_query
000FCC 28 0A               A   719    				jr z,ezp_loadpm_ok
000FCE F5                  A   720    				push af
000FCF CD 61 10 00         A   721    				call restore_dir_block
000FD3 F1                  A   722    				pop af
000FD4 C3 18 0E 00         A   723    				jp show_erm
                           A   724    
000FD8 2A050100            A   725    ezp_loadpm_ok	ld hl,(scratch_pad+5)
000FDC 22 04 6F 00         A   726    				ld (os_extcmd_jmp_addr),hl		000FE0 CD 10 56 00         A   727    				call fs_read_data_command
000FE4 F5                  A   728    				push af
000FE5 CD 61 10 00         A   729    				call restore_dir_block			000FE9 F1                  A   730    				pop af
000FEA DA 02 0E 00         A   731    				jp c,os_hwerr					000FEE C2 18 0E 00         A   732    				jp nz,show_erm					                           A   733    	
000FF2 CD E4 47 00         A   734    				call enable_button_nmi			000FF6 DD2A 04 6F 00       A   735    				ld ix,(os_extcmd_jmp_addr)		000FFB 2A FB 6E 00         A   736    				ld hl,(os_args_loc)				000FFF C3 2F 10 00         A   737    				jp os_run_command				                           A   738    
001003 F5                  A   739    extcmd_return	push af							001004 CD DC 4A 00         A   740    				call hwsc_default_hw_settings	001008 3A D2 6D 00         A   741    				ld a,(store_registers)
00100C B7                  A   742    				or a
00100D 28 06               A   743    				jr z,skp_strg
00100F F1                  A   744    				pop af
001010 CD 34 15 00         A   745    				call os_store_CPU_regs			001014 F5                  A   746    				push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001015 F1                  A   747    skp_strg		pop af
                           A   748    
001016 CD 6D 10 00         A   749    				call error_to_envar
00101A B7                  A   750    extcmderf		or a							00101B C8                  A   751    				ret z	
00101C FE01                A   752    				cp 1							00101E CA 01 0E 00         A   753    				jp z,os_hwe1					001022 FEFF                A   754    				cp 0ffh							001024 CA 56 0A 00         A   755    				jp z,os_cold_start
001028 FEFE                A   756    				cp 0feh							00102A C8                  A   757    				ret z
00102B C3 18 0E 00         A   758    				jp show_erm						                           A   759    				
                           A   760    ;----------------------------------------------
                           A   761    
00102F                     A   762    os_run_command									00102F ED3906              A   763    				out0 (port_nmi_ack),a			001032 DD22 D3 6D 00       A   764    				ld (com_start_addr),ix			001037 DDE9                A   765    				jp (ix)							                           A   766    
                           A   767    ;----------------------------------------------
                           A   768    
                           A   769    
001039 3E30                A   770    test_volx		ld a,030h						00103B 32 2C 63 00         A   771    fvolcmd			ld (chvol_txt+3),a				00103F 11 29 63 00         A   772    				ld de,chvol_txt		
001043 0606                A   773    				ld b,6
001045 CD E2 13 00         A   774    				call os_compare_strings	
001049 3A 2C 63 00         A   775    				ld a,(chvol_txt+3)
00104D C8                  A   776    				ret z	
00104E 3C                  A   777    				inc a			
00104F FE38                A   778    				cp 030h+max_volumes		
001051 20 E8               A   779    				jr nz,fvolcmd
001053 B7                  A   780    				or a
001054 C9                  A   781    				ret
                           A   782    				
                           A   783    ;----------------------------------------------
                           A   784    				
                           A   785    				
                           A   786    				
001055                     A   787    cache_dir_block
                           A   788    
                           A   789    	
001055 D5                  A   790    				push de
001056 CD 02 1C 00         A   791    				call fs_get_dir_cluster	
00105A ED53 01 6F 00       A   792    				ld (os_dir_block_cache),de
00105F D1                  A   793    				pop de	
001060 C9                  A   794    				ret
                           A   795    		
                           A   796    
001061                     A   797    restore_dir_block
                           A   798    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001061 D5                  A   799    				push de
001062 ED5B 01 6F 00       A   800    				ld de,(os_dir_block_cache)
001067 CD 0E 1C 00         A   801    				call fs_update_dir_cluster
00106B D1                  A   802    				pop de
00106C C9                  A   803    				ret
                           A   804    
                           A   805    ;----------------------------------------------
                           A   806    
00106D                     A   807    error_to_envar
                           A   808    
00106D F5                  A   809    				push af							00106E C5                  A   810    				push bc							00106F E5                  A   811    				push hl							001070 21000100            A   812    				ld hl,scratch_pad				001074 CD 5E 12 00         A   813    				call hexbyte_to_ascii
001078 3600                A   814    				ld (hl),0
00107A 11000100            A   815    				ld de,scratch_pad
00107E 21 C2 62 00         A   816    				ld hl,error_txt
001082 CD 15 1D 00         A   817    				call os_set_envar
001086 CD EF 47 00         A   818    				call disable_button_nmi			00108A E1                  A   819    				pop hl
00108B C1                  A   820    				pop bc
00108C F1                  A   821    				pop af
00108D C9                  A   822    				ret
                           A   823    
                           A   824    ;----------------------------------------------
                           A   825    
00108E                     A   826    scan_current_and_path_dirs
                           A   827    
00108E ED430001 00         A   828    				ld (scratch_pad),bc				001093 2A FE 6E 00         A   829    				ld hl,(os_args_pos_cache)		001097 22 FB 6E 00         A   830    				ld (os_args_loc),hl
                           A   831    				
00109B AF                  A   832    				xor a							00109C CD AD 3D 00         A   833    				call os_parse_path_string		0010A0 20 13               A   834    				jr nz,no_ecmd_here
                           A   835    				
0010A2 22 FB 6E 00         A   836    				ld (os_args_loc),hl				                           A   837    
0010A6 ED4B0001 00         A   838    				ld bc,(scratch_pad)				0010AB CD E7 11 00         A   839    				call os_args_to_fn_append_extn	0010AF CD BD 55 00         A   840    				call fs_open_file_command		0010B3 D8                  A   841    				ret c					 		0010B4 C8                  A   842    				ret z							                           A   843    
0010B5 21 24 63 00         A   844    no_ecmd_here	ld hl,path_txt					0010B9 CD D1 1C 00         A   845    				call os_get_envar
0010BD ED53 15 6F 00       A   846    				ld (path_parse_loc),de
                           A   847    
0010C2 CD 8D 55 00         A   848    path_loop		call fs_goto_root_dir_command	0010C6 2A 15 6F 00         A   849    				ld hl,(path_parse_loc)			0010CA CD 58 5E 00         A   850    				call fs_hl_to_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010CE CD 66 55 00         A   851    				call fs_change_dir_command		0010D2 D8                  A   852    				ret c
0010D3 20 17               A   853    				jr nz,next_dir_in_path			                           A   854    	
0010D5 2A FE 6E 00         A   855    				ld hl,(os_args_pos_cache)		0010D9 22 FB 6E 00         A   856    				ld (os_args_loc),hl
0010DD ED4B0001 00         A   857    				ld bc,(scratch_pad)				0010E2 CD E7 11 00         A   858    				call os_args_to_fn_append_extn	                           A   859    				
0010E6 CD BD 55 00         A   860    				call fs_open_file_command		0010EA D8                  A   861    				ret c
0010EB C8                  A   862    				ret z							                           A   863    				
0010EC                     A   864    next_dir_in_path
                           A   865    				
0010EC 2A 15 6F 00         A   866    				ld hl,(path_parse_loc)			0010F0 CD 9E 11 00         A   867    				call os_next_arg
0010F4 22 15 6F 00         A   868    				ld (path_parse_loc),hl
0010F8 20 C8               A   869    				jr nz,path_loop					0010FA AF                  A   870    				xor a
0010FB 3C                  A   871    				inc a
0010FC C9                  A   872    				ret								                           A   873    				
                           A   874    ;----------------------------------------------
                           A   875    				
0010FD 11 28 6E 00         A   876    set_script_fn	ld de,script_fn
001101 060D                A   877    				ld b,13
001103 CD 01 14 00         A   878    				call os_copy_ascii_run
001107 AF                  A   879    				xor a
001108 12                  A   880    				ld (de),a
001109 C9                  A   881    				ret
                           A   882    
                           A   883    ;==============================================
                           A   884    ; Routines called by command line
                           A   885    ;==============================================
                           A   886    
                           A   887    ; Set:-
                           A   888    ; HL to address of string
                           A   889    ; c = y
                           A   890    ; b = x
                           A   891    
00110A                     A   892    ext_print_string
                           A   893    
00110A CC 4F 17 00         A   894    				call z,mbase_hl
00110E 18 05               A   895    				jr os_print_string
                           A   896    
001110                     A   897    os_print_string_cond
                           A   898    
001110 CD B5 1B 00         A   899    				call test_quiet_mode
001114 C0                  A   900    				ret nz
                           A   901    
001115                     A   902    os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   903    
001115 D5                  A   904    				push de
001116 C5                  A   905    				push bc
001117 ED4B 39 6E 00       A   906    				ld bc,(cursor_pos)				00111C 7E                  A   907    prstr_lp		ld a,(hl)
00111D 23                  A   908    				inc hl
00111E B7                  A   909    				or a
00111F 20 09               A   910    				jr nz,prstr_ne
001121 ED43 39 6E 00       A   911    				ld (cursor_pos),bc
001126 C1                  A   912    				pop bc
001127 D1                  A   913    				pop de
001128 AF                  A   914    				xor a							001129 C9                  A   915    				ret
                           A   916    
00112A FE0D                A   917    prstr_ne		cp 13
00112C 20 04               A   918    				jr nz,not_cr
00112E 0600                A   919    				ld b,0
001130 18 EA               A   920    				jr prstr_lp
001132 FE0A                A   921    not_cr			cp 10
001134 28 12               A   922    				jr z,line_feed				
001136 FE0B                A   923    				cp 11
001138 28 0C               A   924    				jr z,next_line
00113A CD 72 49 00         A   925    				call hwsc_plot_char
00113E 04                  A   926    				inc b
00113F 3A F7 6B 00         A   927    				ld a,(charmap_columns)
001143 B8                  A   928    				cp b
001144 20 D6               A   929    				jr nz,prstr_lp
001146 0600                A   930    next_line		ld b,0
001148 0C                  A   931    line_feed		inc c
001149 3A F4 6B 00         A   932    				ld a,(charmap_rows)
00114D B9                  A   933    				cp c
00114E 20 CC               A   934    				jr nz,prstr_lp
001150 0D                  A   935    				dec c
001151 CD 37 49 00         A   936    				call hwsc_scroll_up
001155 18 C5               A   937    				jr prstr_lp
                           A   938    
                           A   939    ;----------------------------------------------
                           A   940    
001157 21 52 6F 00         A   941    os_print_char	ld hl,char_to_print
00115B 77                  A   942    				ld (hl),a
00115C 18 B7               A   943    				jr os_print_string
                           A   944    
                           A   945    ;----------------------------------------------
                           A   946    
00115E F5                  A   947    home_cursor		push af
00115F AF                  A   948    				xor a
001160 32 3A 6E 00         A   949    				ld (cursor_x),a
001164 F1                  A   950    				pop af
001165 C9                  A   951    				ret
                           A   952    				
                           A   953    ;----------------------------------------------
                           A   954    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001166                     A   955    os_cursor_flash
                           A   956    
001166 21 3C 6E 00         A   957    				ld hl,cursorflashtimer
00116A 34                  A   958    				inc (hl)
00116B 7E                  A   959    				ld a,(hl)
00116C FE19                A   960    				cp 25
00116E C0                  A   961    				ret nz
00116F 3600                A   962    				ld (hl),0
001171 3A 3D 6E 00         A   963    				ld a,(cursor_status)
001175 EE01                A   964    				xor 1
001177 32 3D 6E 00         A   965    				ld (cursor_status),a
00117B 28 15               A   966    				jr z,no_cursor
00117D 3E5F                A   967    				ld a,05fh
00117F 21 F1 6B 00         A   968    				ld hl,overwrite_mode
001183 CB46                A   969    				bit 0,(hl)
001185 28 02               A   970    				jr z,cursor_selected
001187 3E7F                A   971    				ld a,07fh
                           A   972    				
001189 CD 98 11 00         A   973    cursor_selected	call os_set_cursor_image
00118D CD C5 49 00         A   974    				call hwsc_draw_cursor			001191 C9                  A   975    				ret
                           A   976    
001192 CD AB 49 00         A   977    no_cursor		call hwsc_remove_cursor
001196 C9                  A   978    				ret
                           A   979    
                           A   980    
                           A   981    ;----------------------------------------------
                           A   982    
001197                     A   983    ext_set_cursor_image
                           A   984    
001197 7B                  A   985    				ld a,e
                           A   986    				
001198                     A   987    os_set_cursor_image
                           A   988    			
001198 32 F2 6B 00         A   989    				ld (cursor_image_char),a
00119C BF                  A   990    				cp a
00119D C9                  A   991    				ret
                           A   992    
                           A   993    ;----------------------------------------------
                           A   994    
00119E                     A   995    os_next_arg
                           A   996    
00119E CD AA 11 00         A   997    				call os_scan_for_space
0011A2 B7                  A   998    				or a
0011A3 C8                  A   999    				ret z
0011A4 CD B3 11 00         A  1000    				call os_scan_for_non_space
0011A8 B7                  A  1001    				or a
0011A9 C9                  A  1002    				ret
                           A  1003    
                           A  1004    
                           A  1005    ;----------------------------------------------
                           A  1006    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1007    
0011AA                     A  1008    os_scan_for_space
                           A  1009    
0011AA 7E                  A  1010    os_sfspl 		ld a,(hl)						0011AB B7                  A  1011    				or a							0011AC C8                  A  1012    				ret z
0011AD FE20                A  1013    				cp ' '
0011AF C8                  A  1014    				ret z
0011B0 23                  A  1015    				inc hl
0011B1 18 F7               A  1016    				jr os_sfspl
                           A  1017    	
                           A  1018    
                           A  1019    ;----------------------------------------------
                           A  1020    	
                           A  1021    
0011B3                     A  1022    os_scan_for_non_space
                           A  1023    
0011B3 2B                  A  1024    				dec hl							0011B4 23                  A  1025    os_nsplp		inc hl			
0011B5 7E                  A  1026    				ld a,(hl)			
0011B6 B7                  A  1027    				or a			
0011B7 C8                  A  1028    				ret z							0011B8 FE20                A  1029    				cp ' '
0011BA 28 F8               A  1030    				jr z,os_nsplp
0011BC C9                  A  1031    				ret
                           A  1032    	
                           A  1033    	
                           A  1034    ;----------------------------------------------
                           A  1035    
0011BD                     A  1036    os_args_to_alt_filename
                           A  1037    
0011BD CD 15 12 00         A  1038    				call os_atfn_pre				0011C1 C8                  A  1039    				ret z
0011C2 CD 52 5E 00         A  1040    				call fs_hl_to_alt_filename
0011C6 18 09               A  1041    				jr os_atfrl
                           A  1042    	
                           A  1043    	
                           A  1044    	
                           A  1045    		
0011C8                     A  1046    os_args_to_filename
                           A  1047    
0011C8 CD 15 12 00         A  1048    				call os_atfn_pre				0011CC C8                  A  1049    				ret z
0011CD CD 58 5E 00         A  1050    				call fs_hl_to_filename	
                           A  1051    
0011D1 7E                  A  1052    os_atfrl		ld a,(hl)						0011D2 B7                  A  1053    				or a							0011D3 28 0B               A  1054    				jr z,os_cfne
0011D5 FE20                A  1055    				cp 32
0011D7 28 07               A  1056    				jr z,os_cfne
0011D9 FE2F                A  1057    				cp 02fh
0011DB 28 03               A  1058    				jr z,os_cfne
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011DD 23                  A  1059    				inc hl
0011DE 18 F1               A  1060    				jr os_atfrl	
0011E0 22 FB 6E 00         A  1061    os_cfne			ld (os_args_loc),hl				0011E4 79                  A  1062    				ld a,c			
0011E5 B7                  A  1063    				or a							0011E6 C9                  A  1064    				ret
                           A  1065    
                           A  1066    
                           A  1067    
0011E7                     A  1068    os_args_to_fn_append_extn
                           A  1069    
                           A  1070    ; Set BC to location of extension text
                           A  1071    
0011E7 CD 15 12 00         A  1072    				call os_atfn_pre				0011EB C8                  A  1073    				ret z
0011EC 11 D6 6D 00         A  1074    				ld de,temp_string
0011F0 7E                  A  1075    ccmdtlp			ld a,(hl)						0011F1 B7                  A  1076    				or a
0011F2 28 0D               A  1077    				jr z,goteocmd
0011F4 FE20                A  1078    				cp ' '
0011F6 28 09               A  1079    				jr z,goteocmd
0011F8 FE2E                A  1080    				cp '.'
0011FA 28 05               A  1081    				jr z,goteocmd
0011FC 12                  A  1082    				ld (de),a
0011FD 13                  A  1083    				inc de
0011FE 23                  A  1084    				inc hl
0011FF 18 EF               A  1085    				jr ccmdtlp
                           A  1086    	
001201 E5                  A  1087    goteocmd		push hl
001202 C5                  A  1088    				push bc
001203 E1                  A  1089    				pop hl
001204 01060000            A  1090    				ld bc,6
001208 EDB0                A  1091    				ldir 
00120A 21 D6 6D 00         A  1092    				ld hl,temp_string
00120E CD 58 5E 00         A  1093    				call fs_hl_to_filename
001212 E1                  A  1094    				pop hl
001213 18 BC               A  1095    				jr os_atfrl
                           A  1096    	
                           A  1097    
                           A  1098    
                           A  1099    
001215                     A  1100    os_atfn_pre
                           A  1101    
001215 2A FB 6E 00         A  1102    				ld hl,(os_args_loc)				001219 CD B3 11 00         A  1103    				call os_scan_for_non_space
00121D B7                  A  1104    				or a
00121E C8                  A  1105    				ret z
00121F 7E                  A  1106    				ld a,(hl)
001220 FE2F                A  1107    				cp 02fh							001222 20 01               A  1108    				jr nz,notfsl1
001224 23                  A  1109    				inc hl
001225 AF                  A  1110    notfsl1			xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001226 3C                  A  1111    				inc a
001227 C9                  A  1112    				ret
                           A  1113    
                           A  1114    
                           A  1115    ;--------- Number <-> String functions --------
                           A  1116    
                           A  1117    
001228                     A  1118    os_clear_output_line
                           A  1119    
001228 C5                  A  1120    				push bc
001229 E5                  A  1121    				push hl			
00122A 21 A9 6E 00         A  1122    				ld hl,output_line
00122E 01500000            A  1123    				ld bc,max_buffer_chars
001232 3E20                A  1124    				ld a,32
001234 CD 28 17 00         A  1125    				call os_bchl_memfill
001238 E1                  A  1126    				pop hl
001239 C1                  A  1127    				pop bc
00123A C9                  A  1128    				ret
                           A  1129    	
                           A  1130    	
                           A  1131    	
00123B                     A  1132    os_skip_leading_ascii_zeros
                           A  1133    
00123B 7E                  A  1134    slazlp			ld a,(hl)						00123C FE30                A  1135    				cp '0'							00123E C0                  A  1136    				ret nz
00123F 23                  A  1137    				inc hl
001240 10 F9               A  1138    				djnz slazlp
001242 C9                  A  1139    				ret
                           A  1140    	
                           A  1141    
                           A  1142    
001243                     A  1143    os_leading_ascii_zeros_to_spaces
                           A  1144    
001243 E5                  A  1145    				push hl
001244 7E                  A  1146    clazlp			ld a,(hl)						001245 FE30                A  1147    				cp '0'							001247 20 05               A  1148    				jr nz,claze	
001249 3620                A  1149    				ld (hl),' '
00124B 23                  A  1150    				inc hl
00124C 10 F6               A  1151    				djnz clazlp
00124E E1                  A  1152    claze			pop hl
00124F C9                  A  1153    				ret
                           A  1154    	
                           A  1155    
                           A  1156    
                           A  1157    		
001250                     A  1158    n_hexbytes_to_ascii
                           A  1159    
001250 1A                  A  1160    				ld a,(de)						001251 CD 5E 12 00         A  1161    				call hexbyte_to_ascii			001255 1B                  A  1162    				dec de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001256 10 F8               A  1163    				djnz n_hexbytes_to_ascii
001258 C9                  A  1164    				ret
                           A  1165    			
                           A  1166    			
                           A  1167    
001259                     A  1168    ext_hexbyte_to_ascii
                           A  1169    
001259 CC 4F 17 00         A  1170    				call z,mbase_hl
00125D 7B                  A  1171    				ld a,e
                           A  1172    
00125E                     A  1173    hexbyte_to_ascii
                           A  1174    
00125E C5                  A  1175    				push bc
00125F 47                  A  1176    				ld b,a							001260 CB3F                A  1177    				srl a							001262 CB3F                A  1178    				srl a
001264 CB3F                A  1179    				srl a
001266 CB3F                A  1180    				srl a
001268 CD 7A 12 00         A  1181    				call hxdigconv
00126C 77                  A  1182    				ld (hl),a
00126D 23                  A  1183    				inc hl
00126E 78                  A  1184    				ld a,b
00126F E60F                A  1185    				and 0fh
001271 CD 7A 12 00         A  1186    				call hxdigconv
001275 77                  A  1187    				ld (hl),a
001276 23                  A  1188    				inc hl
001277 C1                  A  1189    				pop bc
001278 AF                  A  1190    				xor a							001279 C9                  A  1191    				ret
                           A  1192    				
00127A C630                A  1193    hxdigconv		add a,030h
00127C FE3A                A  1194    				cp 03ah
00127E 38 02               A  1195    				jr c,hxdone
001280 C607                A  1196    				add a,7
001282 C9                  A  1197    hxdone			ret
                           A  1198    
                           A  1199    
                           A  1200    
                           A  1201    
001283                     A  1202    hexword_to_ascii	
                           A  1203    
001283 7A                  A  1204    				ld a,d							001284 CD 5E 12 00         A  1205    				call hexbyte_to_ascii
001288 7B                  A  1206    				ld a,e
001289 CD 5E 12 00         A  1207    				call hexbyte_to_ascii
00128D C9                  A  1208    				ret
                           A  1209    	
                           A  1210    
                           A  1211    
                           A  1212    
00128E                     A  1213    ext_ascii_to_hexword
                           A  1214    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00128E CC 4F 17 00         A  1215    				call z,mbase_hl
                           A  1216    
001292                     A  1217    ascii_to_hexword
                           A  1218    	
001292 CD B3 11 00         A  1219    				call os_scan_for_non_space		001296 B7                  A  1220    				or a
001297 20 04               A  1221    				jr nz,ascii_to_hex_no_scan
001299 3E81                A  1222    				ld a,081h						00129B B7                  A  1223    				or a
00129C C9                  A  1224    				ret	
                           A  1225    
                           A  1226    	
00129D                     A  1227    ascii_to_hex_no_scan
                           A  1228    
00129D DDE5                A  1229    				push ix
00129F C5                  A  1230    				push bc
0012A0 DD210000 00         A  1231    				ld ix,0
0012A5 0606                A  1232    				ld b,6							0012A7 CD D3 12 00         A  1233    athlp			call ascii_to_hex_digit
0012AB FEF0                A  1234    				cp 0f0h							0012AD 28 17               A  1235    				jr z,athend
0012AF FED0                A  1236    				cp 0d0h
0012B1 28 13               A  1237    				jr z,athend						0012B3 FE10                A  1238    				cp 16
0012B5 30 17               A  1239    				jr nc,badhex					0012B7 DD29                A  1240    				add ix,ix						0012B9 DD29                A  1241    				add ix,ix
0012BB DD29                A  1242    				add ix,ix
0012BD DD29                A  1243    				add ix,ix
0012BF DDB5                A  1244    				or a,ixl
0012C1 DD6F                A  1245    				ld ixl,a
0012C3 23                  A  1246    				inc hl
0012C4 10 E1               A  1247    				djnz athlp
0012C6 DDE5                A  1248    athend			push ix
0012C8 D1                  A  1249    				pop de
0012C9 AF                  A  1250    				xor a
0012CA C1                  A  1251    ath_quit		pop bc
0012CB DDE1                A  1252    				pop ix							0012CD C9                  A  1253    				ret
                           A  1254    		
0012CE 3E82                A  1255    badhex			ld a,82h						0012D0 B7                  A  1256    				or a
0012D1 18 F7               A  1257    				jr ath_quit
                           A  1258    				
                           A  1259    	
                           A  1260    		
0012D3                     A  1261    ascii_to_hex_digit
                           A  1262    
0012D3 7E                  A  1263    				ld a,(hl)						0012D4 FE61                A  1264    				cp 061h
0012D6 38 02               A  1265    				jr c,hc_uppercase
0012D8 D620                A  1266    				sub 020h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012DA D63A                A  1267    hc_uppercase	sub 03ah						0012DC 38 02               A  1268    				jr c,zeronine
0012DE C6F9                A  1269    				add a,0f9h
0012E0 C60A                A  1270    zeronine		add a,0ah
0012E2 C9                  A  1271    				ret
                           A  1272    
                           A  1273    
                           A  1274    ;--------- Text Input / Non-numeric string func
                           A  1275    
                           A  1276    ; Waits for user to enter a string of character
                           A  1277    ; Before calling, set:  HL = destination of str
                           A  1278    ;                        E = max number of char
                           A  1279    ; Returns:   A  = number of characters in enter
                           A  1280    
                           A  1281    
0012E3                     A  1282    ext_user_input
0012E3 CC 4F 17 00         A  1283    				call z,mbase_hl
                           A  1284    				
0012E7                     A  1285    os_user_input
0012E7 AF                  A  1286    				xor a
0012E8 32 C4 6B 00         A  1287    				ld (ui_index),a
0012EC 22 C6 6B 00         A  1288    				ld (ui_string_addr),hl
0012F0 7B                  A  1289    				ld a,e
0012F1 32 C5 6B 00         A  1290    				ld (ui_maxchars),a
                           A  1291    				
0012F5 3A F1 6B 00         A  1292    				ld a,(overwrite_mode)
0012F9 32 56 6E 00         A  1293    				ld (ui_im_cache),a
0012FD AF                  A  1294    				xor a
0012FE 32 F1 6B 00         A  1295    				ld (overwrite_mode),a			                           A  1296    				
001302 CD C5 49 00         A  1297    ui_loop			call hwsc_draw_cursor			001306 CD 42 4F 00         A  1298    				call os_wait_key_press			00130A 32 79 6F 00         A  1299    				ld (current_scancode),a
00130E 78                  A  1300    				ld a,b
00130F 32 7A 6F 00         A  1301    				ld (current_asciicode),a		001313 CD AB 49 00         A  1302    				call hwsc_remove_cursor
                           A  1303    	
001317 3A 79 6F 00         A  1304    				ld a,(current_scancode)
00131B FE66                A  1305    				cp 066h							00131D 20 1F               A  1306    				jr nz,os_nuibs
00131F 3A C4 6B 00         A  1307    				ld a,(ui_index)
001323 B7                  A  1308    				or a
001324 28 DC               A  1309    				jr z,ui_loop					001326 21 3A 6E 00         A  1310    				ld hl,cursor_x					00132A 35                  A  1311    				dec (hl)						00132B 46                  A  1312    os_uixok		ld b,(hl)		
00132C 3A 39 6E 00         A  1313    				ld a,(cursor_y)
001330 4F                  A  1314    				ld c,a
001331 3E20                A  1315    				ld a,32
001333 CD 72 49 00         A  1316    				call hwsc_plot_char
001337 21 C4 6B 00         A  1317    				ld hl,ui_index
00133B 35                  A  1318    				dec (hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00133C 18 C4               A  1319    				jr ui_loop
                           A  1320    
00133E FE76                A  1321    os_nuibs		cp 076h							001340 28 6B               A  1322    				jr z,ui_aborted
001342 FE5A                A  1323    				cp 05ah							001344 28 46               A  1324    				jr z,ui_enter_pressed
                           A  1325    	
001346 3A C4 6B 00         A  1326    				ld a,(ui_index)					00134A 21 C5 6B 00         A  1327    				ld hl,ui_maxchars
00134E BE                  A  1328    				cp (hl)
00134F 28 B1               A  1329    				jr z,ui_loop	
                           A  1330    
001351 3A 7A 6F 00         A  1331    				ld a,(current_asciicode)		001355 FE20                A  1332    				cp 32							001357 38 A9               A  1333    				jr c,ui_loop					                           A  1334    
001359 57                  A  1335    ui_gtcha		ld d,a
00135A 2A C6 6B 00         A  1336    				ld hl,(ui_string_addr)
00135E 3A C4 6B 00         A  1337    				ld a,(ui_index)
001362 01000000            A  1338    				ld bc,0
001366 4F                  A  1339    				ld c,a
001367 09                  A  1340    				add hl,bc
001368 72                  A  1341    				ld (hl),d						001369 3C                  A  1342    				inc a
00136A 32 C4 6B 00         A  1343    				ld (ui_index),a					                           A  1344    				
00136E ED4B 39 6E 00       A  1345    				ld bc,(cursor_y)				001373 7A                  A  1346    				ld a,d
001374 CD 72 49 00         A  1347    				call hwsc_plot_char		
001378 21 3A 6E 00         A  1348    				ld hl,cursor_x					00137C 34                  A  1349    				inc (hl)
00137D 3A F7 6B 00         A  1350    				ld a,(charmap_columns)			001381 BE                  A  1351    				cp (hl)
001382 C2 02 13 00         A  1352    				jp nz,ui_loop
001386 3600                A  1353    				ld (hl),0
001388 C3 02 13 00         A  1354    				jp ui_loop
                           A  1355    
00138C                     A  1356    ui_enter_pressed
                           A  1357    				
00138C 3A 56 6E 00         A  1358    				ld a,(ui_im_cache)				001390 32 F1 6B 00         A  1359    				ld (overwrite_mode),a
001394 3A C4 6B 00         A  1360    				ld a,(ui_index)					001398 B7                  A  1361    				or a
001399 20 04               A  1362    				jr nz,ui_data
00139B 3E81                A  1363    				ld a,081h						00139D B7                  A  1364    				or a
00139E C9                  A  1365    				ret
00139F 2A C6 6B 00         A  1366    ui_data			ld hl,(ui_string_addr)
0013A3 11000000            A  1367    				ld de,0
0013A7 5F                  A  1368    				ld e,a
0013A8 19                  A  1369    				add hl,de
0013A9 3600                A  1370    				ld (hl),0						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013AB BF                  A  1371    				cp a							0013AC C9                  A  1372    				ret
                           A  1373    
0013AD 3A 56 6E 00         A  1374    ui_aborted		ld a,(ui_im_cache)				0013B1 32 F1 6B 00         A  1375    				ld (overwrite_mode),a
0013B5 3E80                A  1376    				ld a,080h						0013B7 B7                  A  1377    				or a							0013B8 C9                  A  1378    				ret
                           A  1379    		
                           A  1380    ;----------------------------------------------
                           A  1381    	
0013B9                     A  1382    os_count_lines
                           A  1383    
0013B9 E5                  A  1384    				push hl							0013BA 0679                A  1385    				ld b,'y'						0013BC 21 3E 6E 00         A  1386    				ld hl,os_linecount			
0013C0 34                  A  1387    				inc (hl)						0013C1 3A F4 6B 00         A  1388    				ld a,(charmap_rows)
0013C5 D604                A  1389    				sub 4
0013C7 BE                  A  1390    				cp (hl)
0013C8 20 0E               A  1391    				jr nz,os_nntpo
0013CA 3600                A  1392    				ld (hl),0
0013CC 21 A1 62 00         A  1393    				ld hl,os_more_txt
0013D0 CD 15 11 00         A  1394    				call os_print_string
0013D4 CD 42 4F 00         A  1395    				call os_wait_key_press	
0013D8 E1                  A  1396    os_nntpo		pop hl
0013D9 C9                  A  1397    				ret
                           A  1398    
                           A  1399    ;----------------------------------------------
                           A  1400    
0013DA                     A  1401    ext_compare_strings
                           A  1402    	
0013DA CC 4F 17 00         A  1403    				call z,mbase_hl
0013DE CC 60 17 00         A  1404    				call z,mbase_de
                           A  1405    				
0013E2                     A  1406    os_compare_strings
                           A  1407    
                           A  1408    ; both strings at HL/DE should be zero terminat
                           A  1409    ; compare will fail if string lengths are diffe
                           A  1410    ; unless count (B) is reached first
                           A  1411    ; Case is ignored
                           A  1412    ; Zero flag set on return if same
                           A  1413    
0013E2 E5                  A  1414    				push hl							0013E3 D5                  A  1415    				push de							0013E4 1A                  A  1416    ocslp			ld a,(de)						0013E5 B7                  A  1417    				or a
0013E6 28 0C               A  1418    				jr z,ocsbt
0013E8 CD 25 14 00         A  1419    				call case_insensitive_compare	0013EC 20 0E               A  1420    				jr nz,ocs_diff
0013EE 13                  A  1421    				inc de
0013EF 23                  A  1422    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013F0 10 F2               A  1423    				djnz ocslp
0013F2 18 04               A  1424    				jr ocs_same
0013F4 1A                  A  1425    ocsbt			ld a,(de)						0013F5 B6                  A  1426    				or (hl)
0013F6 20 04               A  1427    				jr nz,ocs_diff
0013F8 D1                  A  1428    ocs_same		pop de
0013F9 E1                  A  1429    				pop hl
0013FA AF                  A  1430    				xor a							0013FB C9                  A  1431    				ret
0013FC D1                  A  1432    ocs_diff		pop de
0013FD E1                  A  1433    				pop hl
0013FE AF                  A  1434    				xor a							0013FF 3C                  A  1435    				inc a
001400 C9                  A  1436    				ret
                           A  1437    
                           A  1438    
                           A  1439    ;----------------------------------------------
                           A  1440    
001401                     A  1441    os_copy_ascii_run
                           A  1442    
                           A  1443    ;INPUT HL = source ($00 or $20 terminates)
                           A  1444    ;      DE = dest
                           A  1445    ;       b = max chars
                           A  1446    
                           A  1447    ;OUTPUT HL/DE = end of runs
                           A  1448    ;           c = char count
                           A  1449    	
001401 0E00                A  1450    				ld c,0
001403 7E                  A  1451    cpyar_lp		ld a,(hl)
001404 B7                  A  1452    				or a
001405 C8                  A  1453    				ret z
001406 FE20                A  1454    				cp 32
001408 C8                  A  1455    				ret z
001409 12                  A  1456    				ld (de),a
00140A 23                  A  1457    				inc hl
00140B 13                  A  1458    				inc de
00140C 0C                  A  1459    				inc c
00140D 10 F4               A  1460    				djnz cpyar_lp
00140F C9                  A  1461    				ret
                           A  1462    
                           A  1463    ;----------------------------------------------
                           A  1464    
001410                     A  1465    uppercasify_string
                           A  1466    
                           A  1467    ; Set HL to string location ($00 quits)
                           A  1468    ; Set B to max number of chars
                           A  1469    
001410 7E                  A  1470    				ld a,(hl)
001411 B7                  A  1471    				or a
001412 C8                  A  1472    				ret z
001413 CD 1C 14 00         A  1473    				call os_uppercasify
001417 77                  A  1474    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001418 23                  A  1475    				inc hl
001419 10 F5               A  1476    				djnz uppercasify_string	
00141B C9                  A  1477    				ret
                           A  1478    	
                           A  1479    
00141C                     A  1480    os_uppercasify
                           A  1481    
                           A  1482    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1483    
00141C FE61                A  1484    				cp 061h			
00141E D8                  A  1485    				ret c
00141F FE7B                A  1486    				cp 07bh
001421 D0                  A  1487    				ret nc
001422 D620                A  1488    				sub 020h				
001424 C9                  A  1489    				ret
                           A  1490    
                           A  1491    ;----------------------------------------------
                           A  1492    
001425                     A  1493    case_insensitive_compare
                           A  1494    
                           A  1495    ; compares A with (HL) disregarding the case of
                           A  1496    ; Zero flag set if the characters are the same
                           A  1497    ; all registers are preserved.
                           A  1498    
001425 C5                  A  1499    				push bc					
001426 4F                  A  1500    				ld c,a
                           A  1501    
001427 CD 1C 14 00         A  1502    				call os_uppercasify				00142B 47                  A  1503    				ld b,a
00142C 7E                  A  1504    				ld a,(hl)
00142D CD 1C 14 00         A  1505    				call os_uppercasify
001431 B8                  A  1506    				cp b
                           A  1507    
001432 79                  A  1508    				ld a,c
001433 C1                  A  1509    				pop bc
001434 C9                  A  1510    				ret
                           A  1511    
                           A  1512    ;----------------------------------------------
                           A  1513    
001435                     A  1514    os_decimal_add
                           A  1515    
                           A  1516    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1517    
001435 C5                  A  1518    				push bc
001436 0E00                A  1519    				ld c,0
001438 1A                  A  1520    decdlp			ld a,(de)
001439 86                  A  1521    				add a,(hl)
00143A 81                  A  1522    				add a,c
00143B FE0A                A  1523    				cp 10
00143D 38 0B               A  1524    				jr c,daddnc
00143F D60A                A  1525    				sub 10
001441 0E01                A  1526    				ld c,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001443 12                  A  1527    decnclp			ld (de),a
001444 23                  A  1528    				inc hl
001445 13                  A  1529    				inc de
001446 10 F0               A  1530    				djnz decdlp
001448 C1                  A  1531    				pop bc
001449 C9                  A  1532    				ret
00144A 0E00                A  1533    daddnc			ld c,0
00144C 18 F5               A  1534    				jr decnclp
                           A  1535    	
                           A  1536    ;----------------------------------------------
                           A  1537    
00144E                     A  1538    os_hex_to_decimal
                           A  1539    
                           A  1540    ; INPUT xDE hex longword
                           A  1541    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1542    
       00000100            A  1543    hex_to_convert		equ scratch_pad
       00000103            A  1544    decimal_digits		equ scratch_pad+3
       0000010B            A  1545    decimal_add_digits	equ scratch_pad+3+8
                           A  1546    
00144E ED530001 00         A  1547    				ld (hex_to_convert),de
                           A  1548    		
001453 210B0100            A  1549    				ld hl,decimal_add_digits
001457 E5                  A  1550    				push hl
001458 11030100            A  1551    				ld de,decimal_digits
00145C AF                  A  1552    				xor a
00145D 0608                A  1553    				ld b,8
00145F 12                  A  1554    setupdec		ld (de),a
001460 77                  A  1555    				ld (hl),a
001461 23                  A  1556    				inc hl
001462 13                  A  1557    				inc de
001463 10 FA               A  1558    				djnz setupdec
001465 E1                  A  1559    				pop hl
001466 3601                A  1560    				ld (hl),1
                           A  1561    	
001468 21000100            A  1562    				ld hl,hex_to_convert
00146C 0603                A  1563    				ld b,3
00146E C5                  A  1564    decconvlp		push bc
00146F 7E                  A  1565    				ld a,(hl)
001470 CD 8E 14 00         A  1566    				call decadder
001474 CD A7 14 00         A  1567    				call decaddx16
001478 7E                  A  1568    				ld a,(hl)
001479 0F                  A  1569    				rrca
00147A 0F                  A  1570    				rrca
00147B 0F                  A  1571    				rrca
00147C 0F                  A  1572    				rrca
00147D CD 8E 14 00         A  1573    				call decadder
001481 CD A7 14 00         A  1574    				call decaddx16
001485 C1                  A  1575    				pop bc
001486 23                  A  1576    				inc hl
001487 10 E5               A  1577    				djnz decconvlp
001489 21030100            A  1578    				ld hl,decimal_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00148D C9                  A  1579    				ret
                           A  1580    
                           A  1581    
                           A  1582    
00148E E60F                A  1583    decadder		and 15
001490 C8                  A  1584    				ret z
001491 47                  A  1585    				ld b,a
001492 E5                  A  1586    				push hl
001493 C5                  A  1587    daddlp			push bc
001494 11030100            A  1588    				ld de,decimal_digits
001498 210B0100            A  1589    				ld hl,decimal_add_digits
00149C 0608                A  1590    				ld b,8
00149E CD 35 14 00         A  1591    				call os_decimal_add
0014A2 C1                  A  1592    				pop bc
0014A3 10 EE               A  1593    				djnz daddlp	
0014A5 E1                  A  1594    				pop hl
0014A6 C9                  A  1595    				ret
                           A  1596    			
                           A  1597    				
0014A7 E5                  A  1598    decaddx16		push hl
0014A8 0604                A  1599    				ld b,4							0014AA C5                  A  1600    x16loop			push bc
0014AB 110B0100            A  1601    				ld de,decimal_add_digits
0014AF 210B0100            A  1602    				ld hl,decimal_add_digits
0014B3 0608                A  1603    				ld b,8
0014B5 CD 35 14 00         A  1604    				call os_decimal_add
0014B9 C1                  A  1605    				pop bc
0014BA 10 EE               A  1606    				djnz x16loop	
0014BC E1                  A  1607    				pop hl
0014BD C9                  A  1608    				ret
                           A  1609    	
                           A  1610    	
                           A  1611    ;----------------------------------------------
                           A  1612    
0014BE                     A  1613    os_show_decimal
                           A  1614    
0014BE 11 A9 6E 00         A  1615    				ld de,output_line				0014C2 01090000            A  1616    				ld bc,9
0014C6 09                  A  1617    				add hl,bc
0014C7 060A                A  1618    				ld b,10
0014C9 7E                  A  1619    shdeclp			ld a,(hl)
0014CA B7                  A  1620    				or a
0014CB 28 04               A  1621    				jr z,dnodigit
0014CD C630                A  1622    				add a,030h
0014CF 12                  A  1623    				ld (de),a
0014D0 13                  A  1624    				inc de
0014D1 2B                  A  1625    dnodigit		dec hl
0014D2 10 F5               A  1626    				djnz shdeclp
0014D4 AF                  A  1627    				xor a
0014D5 12                  A  1628    				ld (de),a
0014D6 CD 1E 15 00         A  1629    				call os_print_output_line
0014DA C9                  A  1630    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1631    				
                           A  1632    ;----------------------------------------------
                           A  1633    		
0014DB                     A  1634    os_copy_to_output_line
                           A  1635    	
0014DB D5                  A  1636    				push de
0014DC C5                  A  1637    				push bc
0014DD 11 A9 6E 00         A  1638    				ld de,output_line				0014E1 01510000            A  1639    				ld bc,max_buffer_chars+1		0014E5 EDA0                A  1640    os_cloll		ldi
0014E7 7E                  A  1641    				ld a,(hl)
0014E8 B7                  A  1642    				or a
0014E9 28 04               A  1643    				jr z,os_clold
0014EB 78                  A  1644    				ld a,b
0014EC B1                  A  1645    				or c
0014ED 20 F6               A  1646    				jr nz,os_cloll
0014EF 12                  A  1647    os_clold		ld (de),a
0014F0 C1                  A  1648    				pop bc
0014F1 D1                  A  1649    				pop de
0014F2 C9                  A  1650    				ret
                           A  1651    
                           A  1652    
                           A  1653    ;----------------------------------------------
                           A  1654    
0014F3                     A  1655    os_show_hex_address
                           A  1656    
0014F3 E5                  A  1657    				push hl							0014F4 21 A9 6E 00         A  1658    				ld hl,output_line
0014F8 ED53 4B 6E 00       A  1659    				ld (hex_address),de
0014FD 3A 4D 6E 00         A  1660    				ld a,(hex_address+2)
001501 CD 5E 12 00         A  1661    				call hexbyte_to_ascii
001505 18 10               A  1662    				jr shw_nt
                           A  1663    				
                           A  1664    
001507                     A  1665    os_show_hex_byte
                           A  1666    
001507 E5                  A  1667    				push hl							001508 21 A9 6E 00         A  1668    				ld hl,output_line
00150C CD 5E 12 00         A  1669    				call hexbyte_to_ascii
001510 18 09               A  1670    				jr shb_nt
                           A  1671    
                           A  1672    
                           A  1673    
001512                     A  1674    os_show_hex_word
                           A  1675    
001512 E5                  A  1676    				push hl							001513 21 A9 6E 00         A  1677    				ld hl,output_line
001517 CD 83 12 00         A  1678    shw_nt			call hexword_to_ascii
00151B 3600                A  1679    shb_nt			ld (hl),0
00151D E1                  A  1680    				pop hl
                           A  1681    
                           A  1682    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1683    
00151E                     A  1684    os_print_output_line
                           A  1685    
00151E E5                  A  1686    				push hl
00151F 21 A9 6E 00         A  1687    				ld hl,output_line
001523 CD 15 11 00         A  1688    cproline		call os_print_string
001527 E1                  A  1689    				pop hl
001528 C9                  A  1690    				ret
                           A  1691    
                           A  1692    
                           A  1693    
001529                     A  1694    os_print_output_line_skip_zeroes
                           A  1695    
001529 E5                  A  1696    				push hl
00152A 21 A9 6E 00         A  1697    				ld hl,output_line
00152E CD 3B 12 00         A  1698    				call os_skip_leading_ascii_zero
001532 18 EF               A  1699    				jr cproline
                           A  1700    				
                           A  1701    		
                           A  1702    ;----------------------------------------------
                           A  1703    
001534                     A  1704    os_store_CPU_regs
                           A  1705    
001534 F3                  A  1706    				di								                           A  1707    
001535 33                  A  1708    				inc sp							001536 33                  A  1709    				inc sp
001537 33                  A  1710    				inc sp
001538 ED73 C7 6D 00       A  1711    				ld (store_spl),sp
00153D 3B                  A  1712    				dec sp							00153E 3B                  A  1713    				dec sp
00153F 3B                  A  1714    				dec sp
                           A  1715    				
001540 F5                  A  1716    				push af
001541 32 AA 6D 00         A  1717    				ld (store_a1),a					001545 08                  A  1718    				ex af,af'
001546 32 B4 6D 00         A  1719    				ld (store_a2),a
00154A 08                  A  1720    				ex af,af'
00154B ED43 AB 6D 00       A  1721    				ld (store_bc1),bc		
001550 ED53 AE 6D 00       A  1722    				ld (store_de1),de
001555 22 B1 6D 00         A  1723    				ld (store_hl1),hl
001559 D9                  A  1724    				exx
00155A ED43 B5 6D 00       A  1725    				ld (store_bc2),bc
00155F ED53 B8 6D 00       A  1726    				ld (store_de2),de
001564 22 BB 6D 00         A  1727    				ld (store_hl2),hl
001568 D9                  A  1728    				exx
001569 DD22 BE 6D 00       A  1729    				ld (store_ix),ix
00156E FD22 C1 6D 00       A  1730    				ld (store_iy),iy
                           A  1731    				
001573 ED6E                A  1732    			    ld a,MB
001575 32 CC 6D 00         A  1733    				ld (store_mbase),a
                           A  1734    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001579 C5                  A  1735    				push bc
00157A 0600                A  1736    				ld b,0
00157C 20 02               A  1737    				jr nz,zfstzero					00157E CBF0                A  1738    				set 6,b
                           A  1739    
001580 30 02               A  1740    zfstzero		jr nc,cfstzero					001582 CBC0                A  1741    				set 0,b
                           A  1742    
001584 F2 8A 15 00         A  1743    cfstzero		jp p,sfstzero					001588 CBF8                A  1744    				set 7,b
                           A  1745    
00158A EA 90 15 00         A  1746    sfstzero		jp pe,pfstzero					00158E CBD0                A  1747    				set 2,b
                           A  1748    
001590 ED57                A  1749    pfstzero		ld a,i			
001592 EA 98 15 00         A  1750    				jp pe,ifstzero					001596 CBE0                A  1751    				set 4,b
                           A  1752    
001598 78                  A  1753    ifstzero		ld a,b
001599 32 CD 6D 00         A  1754    				ld (store_f),a
                           A  1755    				
00159D 3E00                A  1756    				ld a,os_location/65536			00159F ED6D                A  1757    				ld MB,a							0015A1 40ED73 CA 6D        A  1758    				ld.sis (store_sps),sp
0015A6 3A CC 6D 00         A  1759    				ld a,(store_mbase)				0015AA ED6D                A  1760    				ld MB,a
                           A  1761    				
0015AC C1                  A  1762    				pop bc
0015AD F1                  A  1763    				pop af
0015AE FB                  A  1764    				ei
0015AF C9                  A  1765    				ret
                           A  1766    
                           A  1767    
                           A  1768    
0015B0                     A  1769    os_dont_store_registers
                           A  1770    
0015B0 AF                  A  1771    				xor a
0015B1 32 D2 6D 00         A  1772    				ld (store_registers),a			0015B5 C9                  A  1773    				ret
                           A  1774    	
                           A  1775    	
                           A  1776    ;----------------------------------------------
                           A  1777    
0015B6                     A  1778    os_new_line_cond
                           A  1779    
0015B6 CD B5 1B 00         A  1780    				call test_quiet_mode
0015BA C0                  A  1781    				ret nz
                           A  1782    
                           A  1783    	
0015BB                     A  1784    os_new_line
                           A  1785    
0015BB E5                  A  1786    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015BC 21 B9 62 00         A  1787    				ld hl,crlfx2_txt+1
0015C0 CD 15 11 00         A  1788    				call os_print_string
0015C4 E1                  A  1789    				pop hl
0015C5 C9                  A  1790    				ret
                           A  1791    				
                           A  1792    ;----------------------------------------------
                           A  1793    
0015C6                     A  1794    os_set_cursor_position
                           A  1795    				
                           A  1796    												0015C6 3A F4 6B 00         A  1797    				ld a,(charmap_rows)				0015CA 3D                  A  1798    				dec a							0015CB B9                  A  1799    				cp c
0015CC 38 14               A  1800    				jr c,badpos
0015CE 79                  A  1801    				ld a,c
0015CF 32 39 6E 00         A  1802    				ld (cursor_y),a
                           A  1803    				
0015D3 3A F7 6B 00         A  1804    				ld a,(charmap_columns)
0015D7 3D                  A  1805    				dec a
0015D8 B8                  A  1806    				cp b
0015D9 38 07               A  1807    				jr c,badpos
0015DB 78                  A  1808    				ld a,b
0015DC 32 3A 6E 00         A  1809    				ld (cursor_x),a
0015E0 AF                  A  1810    				xor a
0015E1 C9                  A  1811    				ret				
                           A  1812    
0015E2 3E88                A  1813    badpos			ld a,88h						0015E4 B7                  A  1814    				or a
0015E5 C9                  A  1815    				ret
                           A  1816    
                           A  1817    
                           A  1818    					
                           A  1819    	
                           A  1820    	
0015E6                     A  1821    os_get_cursor_position
                           A  1822    
0015E6 ED4B 39 6E 00       A  1823    				ld bc,(cursor_pos)				0015EB BF                  A  1824    				cp a							0015EC C9                  A  1825    				ret
                           A  1826    
                           A  1827    
                           A  1828    ;----------------------------------------------
                           A  1829    
0015ED                     A  1830    os_show_packed_text_cond
                           A  1831    
0015ED CD B5 1B 00         A  1832    				call test_quiet_mode
0015F1 C0                  A  1833    				ret nz
                           A  1834    
                           A  1835    	
0015F2                     A  1836    os_show_packed_text
                           A  1837    
                           A  1838    ; Construct sentence from internal dictionary u
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1839    	
0015F2 C5                  A  1840    				push bc
0015F3 D5                  A  1841    				push de
0015F4 DDE5                A  1842    				push ix
0015F6 DD21 A9 6E 00       A  1843    				ld ix,output_line
0015FB 7E                  A  1844    readpind		ld a,(hl)
0015FC B7                  A  1845    				or a
0015FD 20 10               A  1846    				jr nz,getword					0015FF DD2B                A  1847    				dec ix							001601 DD7700              A  1848    				ld (ix),a						                           A  1849    			
001604 E5                  A  1850    				push hl
001605 CD 1E 15 00         A  1851    				call os_print_output_line
001609 E1                  A  1852    				pop hl
                           A  1853    			
00160A DDE1                A  1854    				pop ix
00160C D1                  A  1855    				pop de
00160D C1                  A  1856    				pop bc
00160E C9                  A  1857    				ret
                           A  1858    				
00160F 11 3A 63 00         A  1859    getword			ld de,dictionary-1
001613 0E00                A  1860    				ld c,0
001615 13                  A  1861    dictloop		inc de
001616 1A                  A  1862    				ld a,(de)
001617 B7                  A  1863    				or a							001618 28 04               A  1864    				jr z,faword
00161A CB7F                A  1865    				bit 7,a							00161C 28 F7               A  1866    				jr z,dictloop	
                           A  1867    			
00161E 0C                  A  1868    faword			inc c							00161F 79                  A  1869    				ld a,c
001620 BE                  A  1870    				cp (hl)
001621 20 F2               A  1871    				jr nz,dictloop
001623 13                  A  1872    copytol			inc de							001624 1A                  A  1873    				ld a,(de)
001625 B7                  A  1874    				or a
001626 28 0B               A  1875    				jr z,eoword						001628 CB7F                A  1876    				bit 7,a
00162A 20 07               A  1877    				jr nz,eoword
00162C DD7700              A  1878    				ld (ix),a						00162F DD23                A  1879    				inc ix
001631 18 F0               A  1880    				jr copytol
001633 DD360020            A  1881    eoword			ld (ix),32						001637 DD23                A  1882    				inc ix
001639 23                  A  1883    				inc hl
00163A 18 BF               A  1884    				jr readpind
                           A  1885    
                           A  1886    
                           A  1887    		
                           A  1888    ;--------- Mouse functions --------------------
                           A  1889    
       00000064            A  1890    default_sample_rate 	equ 100			; 100 s
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       00000003            A  1891    default_resolution		equ 03h			; 8 cou
       000000E6            A  1892    default_scaling			equ 0e6h		; valid
                           A  1893    
                           A  1894    
00163C 21800200            A  1895    os_init_mouse	ld hl,640
001640 11E00100            A  1896    				ld de,480
001644 22 91 6F 00         A  1897    				ld (mouse_window_size_x),hl	 
001648 ED53 94 6F 00       A  1898    				ld (mouse_window_size_y),de
00164D 21000000            A  1899    				ld hl,0
001651 22 89 6F 00         A  1900    				ld (mouse_abs_x),hl
001655 22 8C 6F 00         A  1901    				ld (mouse_abs_y),hl
001659 22 83 6F 00         A  1902    				ld (mouse_disp_x),hl
00165D 22 86 6F 00         A  1903    				ld (mouse_disp_y),hl
                           A  1904    			
001661 CD D0 45 00         A  1905    				call disable_ms_irq
                           A  1906    
001665 21 8E 6D 00         A  1907    				ld hl,devices_connected
001669 CB8E                A  1908    				res 1,(hl)
                           A  1909    		
00166B CD 02 4D 00         A  1910    				call init_mouse
00166F C0                  A  1911    				ret nz
                           A  1912    			
001670 AF                  A  1913    				xor a
001671 32 81 6F 00         A  1914    				ld (mouse_packet_index),a
001675 32 82 6F 00         A  1915    				ld (mouse_buttons),a			                           A  1916    
001679 CD CA 45 00         A  1917    				call enable_ms_irq
                           A  1918    
00167D 21 8E 6D 00         A  1919    				ld hl,devices_connected
001681 CBCE                A  1920    				set 1,(hl)
001683 AF                  A  1921    				xor a
001684 C9                  A  1922    				ret				
                           A  1923    				
                           A  1924    				
                           A  1925    			
001685                     A  1926    os_get_mouse_motion
                           A  1927    			
                           A  1928    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1929    ;          ZF = Not set: Mouse driver not initi
                           A  1930    			
001685 3A 8E 6D 00         A  1931    				ld a,(devices_connected)
001689 E602                A  1932    				and 2
00168B EE02                A  1933    				xor 2
00168D C0                  A  1934    				ret nz
                           A  1935    				
00168E AF                  A  1936    ms_reread		xor a
00168F 32 90 6F 00         A  1937    				ld (mouse_updated),a
001693 2A 83 6F 00         A  1938    				ld hl,(mouse_disp_x)			001697 ED5B 86 6F 00       A  1939    				ld de,(mouse_disp_y)
00169C 3A 90 6F 00         A  1940    				ld a,(mouse_updated)			0016A0 B7                  A  1941    				or a
0016A1 20 EB               A  1942    				jr nz,ms_reread
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016A3 AF                  A  1943    mouse_end		xor a
0016A4 3A 8F 6F 00         A  1944    				ld a,(mouse_wheel)
0016A8 47                  A  1945    				ld b,a
0016A9 3A 82 6F 00         A  1946    				ld a,(mouse_buttons)
0016AD C9                  A  1947    				ret
                           A  1948    			
                           A  1949    			
0016AE                     A  1950    os_get_mouse_position
                           A  1951    
                           A  1952    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1953    ;          ZF = Not set: Mouse driver not initi
                           A  1954    
0016AE 3A 8E 6D 00         A  1955    				ld a,(devices_connected)
0016B2 E602                A  1956    				and 2
0016B4 EE02                A  1957    				xor 2
0016B6 C0                  A  1958    				ret nz
                           A  1959    				
0016B7 AF                  A  1960    ms_reread_abs	xor a
0016B8 32 90 6F 00         A  1961    				ld (mouse_updated),a
                           A  1962    
0016BC 2A 89 6F 00         A  1963    				ld hl,(mouse_abs_x)
0016C0 ED5B 8C 6F 00       A  1964    				ld de,(mouse_abs_y)
0016C5 3A 90 6F 00         A  1965    				ld a,(mouse_updated)			0016C9 B7                  A  1966    				or a
0016CA 20 EB               A  1967    				jr nz,ms_reread_abs
                           A  1968    				
0016CC 18 D5               A  1969    				jr mouse_end
                           A  1970    				
                           A  1971    	
                           A  1972    ;==============================================
                           A  1973    ;----- General Subroutines --------------------
                           A  1974    ;==============================================
                           A  1975    
                           A  1976    ; .--------------.
                           A  1977    ; ! CRC Checksum !
                           A  1978    ; '--------------'
                           A  1979    
                           A  1980    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1981    
0016CE                     A  1982    crc_checksum
                           A  1983    
0016CE 21FFFF00            A  1984    				ld hl,0ffffh		
0016D2 1A                  A  1985    crcloop			ld a,(de)			
0016D3 AC                  A  1986    				xor h			
0016D4 67                  A  1987    				ld h,a			
0016D5 0608                A  1988    				ld b,8
0016D7 4029                A  1989    crcbyte			add.sis hl,hl					0016D9 30 08               A  1990    				jr nc,crcnext
0016DB 7C                  A  1991    				ld a,h
0016DC EE10                A  1992    				xor 10h
0016DE 67                  A  1993    				ld h,a
0016DF 7D                  A  1994    				ld a,l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016E0 EE21                A  1995    				xor 21h
0016E2 6F                  A  1996    				ld l,a
0016E3 10 F2               A  1997    crcnext			djnz crcbyte
0016E5 13                  A  1998    				inc de
0016E6 0D                  A  1999    				dec c
0016E7 20 E9               A  2000    				jr nz,crcloop
0016E9 C9                  A  2001    				ret
                           A  2002    
                           A  2003    
                           A  2004    ;----------------------------------------------
                           A  2005    
0016EA                     A  2006    os_get_key_mod_flags
                           A  2007    
0016EA 3A 78 6F 00         A  2008    				ld a,(key_mod_flags)
0016EE BF                  A  2009    				cp a							0016EF C9                  A  2010    				ret
                           A  2011    
                           A  2012    ;----------------------------------------------
                           A  2013    
0016F0                     A  2014    os_get_vmode
                           A  2015    			
0016F0 3A F4 6B 00         A  2016    				ld a,(charmap_rows)
0016F4 4F                  A  2017    				ld c,a
0016F5 3A F7 6B 00         A  2018    				ld a,(charmap_columns)
0016F9 47                  A  2019    				ld b,a
0016FA 3A C9 6B 00         A  2020    				ld a,(video_mode)
0016FE BF                  A  2021    				cp a						; Z
0016FF C9                  A  2022    				ret
                           A  2023    
                           A  2024    ;----------------------------------------------
                           A  2025    
001700 7B                  A  2026    ext_set_vmode	ld a,e
                           A  2027    
001701 FE04                A  2028    os_set_vmode	cp 4
001703 38 04               A  2029    				jr c,vm_range_ok
001705 3E88                A  2030    				ld a,88h					;ou
001707 B7                  A  2031    				or a
001708 C9                  A  2032    				ret
                           A  2033    				
001709 32 C9 6B 00         A  2034    vm_range_ok		ld (video_mode),a
00170D 21030000            A  2035    				ld hl,3
001711 67                  A  2036    				ld h,a
001712 ED6C                A  2037    				mlt hl
001714 11 FA 6B 00         A  2038    				ld de,vmode_parameter_list
001718 19                  A  2039    				add hl,de
001719 7E                  A  2040    				ld a,(hl)
00171A 23                  A  2041    				inc hl
00171B 46                  A  2042    				ld b,(hl)
00171C 23                  A  2043    				inc hl
00171D 4E                  A  2044    				ld c,(hl)
00171E CD 5A 48 00         A  2045    				call set_charmap_parameters
                           A  2046    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001722 CD FC 48 00         A  2047    				call hwsc_clear_screen
                           A  2048    
001726 AF                  A  2049    				xor a				
001727 C9                  A  2050    				ret
                           A  2051    
                           A  2052    
                           A  2053    ;----------------------------------------------
                           A  2054    
001728                     A  2055    os_bchl_memfill
                           A  2056    
                           A  2057    ; fill memory from xHL with A. Count in xBC.
                           A  2058    		
001728 77                  A  2059    mf_loop			ld (hl),a
001729 EDA1                A  2060    				cpi								00172B EA 28 17 00         A  2061    				jp pe,mf_loop
00172F C9                  A  2062    				ret
                           A  2063    	
                           A  2064    ;----------------------------------------------
                           A  2065    
001730 7B                  A  2066    ext_set_pen		ld a,e
                           A  2067    
001731 32 CA 6B 00         A  2068    os_set_pen		ld (current_pen),a
001735 BF                  A  2069    				cp a							001736 C9                  A  2070    				ret
                           A  2071    
                           A  2072    ;----------------------------------------------
                           A  2073    	
001737 3A CA 6B 00         A  2074    os_get_pen		ld a,(current_pen)
00173B BF                  A  2075    				cp a							00173C C9                  A  2076    				ret	
                           A  2077    
                           A  2078    ;----------------------------------------------
                           A  2079    
00173D                     A  2080    ext_background_colours
                           A  2081    				
00173D CC 4F 17 00         A  2082    				call z,mbase_hl
001741 C3 F0 48 00         A  2083    				jp hswc_set_ui_colours
                           A  2084    				
                           A  2085    				
                           A  2086    ;----------------------------------------------
                           A  2087    
001745                     A  2088    os_get_xde_msb	
                           A  2089    			
001745 ED53 51 6E 00       A  2090    				ld (xrr_temp),de				00174A 3A 53 6E 00         A  2091    				ld a,(xrr_temp+2)
00174E C9                  A  2092    				ret
                           A  2093    
                           A  2094    ;----------------------------------------------
                           A  2095    
00174F F5                  A  2096    mbase_hl		push af
001750 22 51 6E 00         A  2097    				ld (xrr_temp),hl				001754 ED6E                A  2098    				ld a,MB
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001756 32 53 6E 00         A  2099    				ld (xrr_temp+2),a
00175A 2A 51 6E 00         A  2100    				ld hl,(xrr_temp)
00175E F1                  A  2101    				pop af
00175F C9                  A  2102    				ret
                           A  2103    				
001760 F5                  A  2104    mbase_de		push af
001761 ED53 51 6E 00       A  2105    				ld (xrr_temp),de				001766 ED6E                A  2106    				ld a,MB
001768 32 53 6E 00         A  2107    				ld (xrr_temp+2),a
00176C ED5B 51 6E 00       A  2108    				ld de,(xrr_temp)
001771 F1                  A  2109    				pop af
001772 C9                  A  2110    				ret
                           A  2111    
                           A  2112    
                           A  2113    ;----------------------------------------------
                           A  2114    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  2115    ;----------------------------------------------
                           A  2116    
001773                     A  2117    unpack_rle
                           A  2118    
                           A  2119    ;set xHL = source address of packed file
                           A  2120    ;set xDE = destination address for unpacked dat
                           A  2121    ;set xBC = length of packed file
                           A  2122    
001773 E5                  A  2123    			push hl	
001774 DDE1                A  2124    			pop ix
001776 0B                  A  2125    			dec bc								001777 23                  A  2126    			inc hl
001778 DD7E00              A  2127    unp_gtok	ld a,(ix)							00177B BE                  A  2128    unp_next	cp (hl)								00177C 28 07               A  2129    			jr z,unp_brun						00177E EDA0                A  2130    			ldi									001780 EA 7B 17 00         A  2131    			jp pe,unp_next						001784 C9                  A  2132    			ret
                           A  2133    	
001785 C5                  A  2134    unp_brun	push bc								001786 23                  A  2135    			inc hl		
001787 7E                  A  2136    			ld a,(hl)							001788 23                  A  2137    			inc hl		
001789 46                  A  2138    			ld b,(hl)							00178A 23                  A  2139    			inc hl
                           A  2140    	
00178B 12                  A  2141    unp_rllp	ld (de),a							00178C 13                  A  2142    			inc de			
00178D 10 FC               A  2143    			djnz unp_rllp
                           A  2144    	
00178F C1                  A  2145    			pop bc	
001790 0B                  A  2146    			dec bc								001791 0B                  A  2147    			dec bc
001792 0B                  A  2148    			dec bc
001793 E5                  A  2149    			push hl								001794 21000000            A  2150    			ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001798 B7                  A  2151    			or a
001799 ED4A                A  2152    			adc hl,bc
00179B E1                  A  2153    			pop hl
00179C 20 DA               A  2154    			jr nz,unp_gtok
00179E C9                  A  2155    			ret	
                           A  2156    	
                           A  2157    ;----------------------------------------------
                           A  2158    ; Commonly called error messages - gets message
                           A  2159    ;----------------------------------------------
                           A  2160    
                           A  2161    
00179F 3E0D                A  2162    os_no_fn_error		ld a,0dh
0017A1 B7                  A  2163    					or a
0017A2 C9                  A  2164    					ret
                           A  2165    			
0017A3 3E15                A  2166    os_fn_too_long		ld a,15h
0017A5 B7                  A  2167    					or a
0017A6 C9                  A  2168    					ret
                           A  2169    				
0017A7 3E16                A  2170    os_no_start_addr	ld a,16h
0017A9 B7                  A  2171    					or a
0017AA C9                  A  2172    					ret
                           A  2173    			
0017AB 3E17                A  2174    os_no_filesize		ld a,17h
0017AD B7                  A  2175    					or a
0017AE C9                  A  2176    					ret
                           A  2177    			
0017AF 3E18                A  2178    os_abort_save		ld a,18h
0017B1 B7                  A  2179    					or a
0017B2 C9                  A  2180    					ret
                           A  2181    			
0017B3 3E1C                A  2182    os_no_e_addr_error	ld a,1ch
0017B5 B7                  A  2183    					or a
0017B6 C9                  A  2184    					ret
                           A  2185    			
0017B7 3E1D                A  2186    os_no_d_addr_error	ld a,1dh
0017B9 B7                  A  2187    					or a
0017BA C9                  A  2188    					ret
                           A  2189    				
0017BB 3E1E                A  2190    os_range_error		ld a,1eh
0017BD B7                  A  2191    					or a
0017BE C9                  A  2192    					ret
                           A  2193    			
0017BF 3E1F                A  2194    os_no_args_error	ld a,1fh
0017C1 B7                  A  2195    					or a
0017C2 C9                  A  2196    					ret	
                           A  2197    
                           A  2198    ;----------------------------------------------
                           A  2199    
                           A  2200    ; Set xHL to address of zero terminated filenam
                           A  2201    ; RETURNS:	C:xDE  = File length
                           A  2202    ;    		HL     = Start cluster of file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2203    
0017C3 CC 4F 17 00         A  2204    ext_find_file	call z,mbase_hl
                           A  2205    
0017C7 CD 58 5E 00         A  2206    os_find_file	call fs_hl_to_filename
0017CB CD BD 55 00         A  2207    				call fs_open_file_command		0017CF 38 01               A  2208    				jr c,os_fferr					0017D1 C9                  A  2209    				ret								                           A  2210    					
0017D2 47                  A  2211    os_fferr		ld b,a							0017D3 AF                  A  2212    				xor a			
0017D4 3C                  A  2213    				inc a							0017D5 C9                  A  2214    				ret	
                           A  2215    
                           A  2216    ;----------------------------------------------
                           A  2217    
0017D6                     A  2218    os_set_load_length
                           A  2219    
0017D6 ED53 E5 60 00       A  2220    				ld (fs_file_transfer_length),de
0017DB BF                  A  2221    				cp a							0017DC C9                  A  2222    				ret
                           A  2223    				
                           A  2224    ;----------------------------------------------
                           A  2225    
0017DD                     A  2226    ext_set_file_pointer
                           A  2227    
0017DD 79                  A  2228    				ld a,c
                           A  2229    				
0017DE                     A  2230    os_set_file_pointer
                           A  2231    
                           A  2232    ; Moves the 'start of file' pointer allowing ra
                           A  2233    ; Note: File pointer is reset by opening a file
                           A  2234    ; by normal read function.
                           A  2235    
0017DE ED53 D9 60 00       A  2236    				ld (fs_file_pointer),de			0017E3 32 DC 60 00         A  2237    				ld (fs_file_pointer+3),a
0017E7 F5                  A  2238    				push af
0017E8 AF                  A  2239    				xor a
0017E9 32 0B 61 00         A  2240    				ld (fs_filepointer_valid),a		0017ED F1                  A  2241    				pop af
0017EE BF                  A  2242    				cp a							0017EF C9                  A  2243    				ret
                           A  2244    				
                           A  2245    ;----------------------------------------------
                           A  2246    
                           A  2247    ; set xHL = load address 
                           A  2248    ; (Before calling this routine, call os_find_fi
                           A  2249    
0017F0                     A  2250    ext_read_bytes_from_file
                           A  2251    
0017F0 CC 4F 17 00         A  2252    				call z,mbase_hl					                           A  2253    				
0017F4                     A  2254    os_read_bytes_from_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2255    
0017F4 22 EE 60 00         A  2256    				ld (fs_ez80_address),hl			0017F8 CD 10 56 00         A  2257    				call fs_read_data_command
0017FC 38 D4               A  2258    				jr c,os_fferr
0017FE C9                  A  2259    				ret
                           A  2260    
                           A  2261    ;----------------------------------------------
                           A  2262    
                           A  2263    ; Before calling, set xHL = address of zero ter
                           A  2264    
0017FF CC 4F 17 00         A  2265    ext_create_file	call z,mbase_hl
                           A  2266    
001803 CD 58 5E 00         A  2267    os_create_file	call fs_hl_to_filename
001807 CD E8 58 00         A  2268    				call fs_create_file_command		00180B DA D2 17 00         A  2269    				jp c,os_fferr					00180F C9                  A  2270    				ret
                           A  2271    
                           A  2272    ;----------------------------------------------
                           A  2273    
001810                     A  2274    ext_write_bytes_to_file
                           A  2275    
001810 CC 4F 17 00         A  2276    				call z,mbase_hl
001814 CC 60 17 00         A  2277    				call z,mbase_de
                           A  2278    
001818                     A  2279    os_write_bytes_to_file
                           A  2280    
                           A  2281    ; Before calling, set..
                           A  2282    
                           A  2283    ; xDE   = address to save data from
                           A  2284    ; xBC   = number of bytes to save
                           A  2285    ; xHL   = address of null-terminated ascii name
                           A  2286    
                           A  2287    ; On return:
                           A  2288    
                           A  2289    ; If zero flag NOT set, there was an error.
                           A  2290    ; If   A = $00, b = hardware error code
                           A  2291    ; Else A = File system error code
                           A  2292    
                           A  2293    ; NOTE:
                           A  2294    ; Will return 'file not found' if the file has 
                           A  2295    				
001818 ED43 E5 60 00       A  2296    				ld (fs_file_transfer_length),bc
00181D ED53 EE 60 00       A  2297    				ld (fs_ez80_address),de	 	
001822 CD 58 5E 00         A  2298    				call fs_hl_to_filename
001826 CD 1A 59 00         A  2299    				call fs_write_bytes_to_file_com
00182A DA D2 17 00         A  2300    				jp c,os_fferr
00182E C9                  A  2301    				ret
                           A  2302    		
                           A  2303    		
                           A  2304    ;----------------------------------------------
                           A  2305    	
                           A  2306    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00182F                     A  2307    os_check_volume_format
                           A  2308    
00182F E5                  A  2309    				push hl
001830 CD 13 54 00         A  2310    				call fs_check_disk_format
001834 E1                  A  2311    				pop hl
001835 DA D2 17 00         A  2312    os_rffsc		jp c,os_fferr
001839 C9                  A  2313    				ret
                           A  2314    
                           A  2315    ;----------------------------------------------
                           A  2316    
                           A  2317    
00183A 7B                  A  2318    ext_format		ld a,e
00183B CC 4F 17 00         A  2319    				call z,mbase_hl					                           A  2320    
00183F DD21 53 6C 00       A  2321    os_format		ld ix,current_driver
001844 DD5E00              A  2322    				ld e,(ix)
001847 D5                  A  2323    				push de
001848 DDE5                A  2324    				push ix
00184A CD B1 2C 00         A  2325    				call setup_dev_format			00184E 38 05               A  2326    				jr c,osfdok
                           A  2327    				
001850 3ED0                A  2328    				ld a,0d0h						001852 B7                  A  2329    				or a
001853 18 04               A  2330    				jr osfdbad
                           A  2331    				
001855 CD 25 52 00         A  2332    osfdok			call fs_format_partition
                           A  2333    			
001859 DDE1                A  2334    osfdbad			pop ix							00185B D1                  A  2335    				pop de
00185C DD7300              A  2336    				ld (ix),e
00185F 18 D4               A  2337    				jr os_rffsc
                           A  2338    
                           A  2339    
                           A  2340    ;----------------------------------------------
                           A  2341    
                           A  2342    
001861 CC 4F 17 00         A  2343    ext_make_dir	call z,mbase_hl					                           A  2344    
001865 CD 58 5E 00         A  2345    os_make_dir		call fs_hl_to_filename
001869 CD 60 57 00         A  2346    				call fs_make_dir_command
00186D 18 C6               A  2347    				jr os_rffsc
                           A  2348    
                           A  2349    
                           A  2350    ;----------------------------------------------
                           A  2351    
                           A  2352    
00186F CC 4F 17 00         A  2353    ext_change_dir	call z,mbase_hl					                           A  2354    
001873 CD 58 5E 00         A  2355    os_change_dir	call fs_hl_to_filename
001877 CD 66 55 00         A  2356    				call fs_change_dir_command
00187B 18 B8               A  2357    				jr os_rffsc
                           A  2358    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2359    	
                           A  2360    ;----------------------------------------------
                           A  2361    	
                           A  2362    	
00187D CD 99 55 00         A  2363    os_parent_dir	call fs_parent_dir_command
001881 18 B2               A  2364    				jr os_rffsc
                           A  2365    				
                           A  2366    
                           A  2367    ;----------------------------------------------
                           A  2368    
                           A  2369    	
001883 CD 8D 55 00         A  2370    os_root_dir		call fs_goto_root_dir_command
001887 18 AC               A  2371    				jr os_rffsc
                           A  2372    
                           A  2373    
                           A  2374    ;----------------------------------------------
                           A  2375    
                           A  2376    
001889 CC 4F 17 00         A  2377    ext_erase_file	call z,mbase_hl					                           A  2378    
00188D CD 58 5E 00         A  2379    os_erase_file	call fs_hl_to_filename
001891 CD B1 5A 00         A  2380    				call fs_erase_file_command
001895 18 9E               A  2381    				jr os_rffsc
                           A  2382    	
                           A  2383    
                           A  2384    ;----------------------------------------------
                           A  2385    
                           A  2386    
001897                     A  2387    os_goto_first_dir_entry	
                           A  2388    
001897 CD 0C 5B 00         A  2389    				call fs_goto_first_dir_entry
00189B 18 98               A  2390    				jr os_rffsc
                           A  2391    
                           A  2392    
                           A  2393    ;----------------------------------------------
                           A  2394    
                           A  2395    
00189D                     A  2396    os_get_dir_entry		
                           A  2397    
00189D CD 23 5B 00         A  2398    				call fs_get_dir_entry	
0018A1 18 92               A  2399    				jr os_rffsc
                           A  2400    
                           A  2401    
                           A  2402    ;----------------------------------------------
                           A  2403    
                           A  2404    
0018A3                     A  2405    os_goto_next_dir_entry	
                           A  2406    	
0018A3 CD B0 5B 00         A  2407    				call fs_goto_next_dir_entry	
0018A7 18 8C               A  2408    				jr os_rffsc
                           A  2409    
                           A  2410    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2411    ;----------------------------------------------
                           A  2412    
                           A  2413    
0018A9                     A  2414    os_get_current_dir_name
                           A  2415    
0018A9 CD 26 5F 00         A  2416    				call fs_get_current_dir_name
0018AD 18 86               A  2417    				jr os_rffsc
                           A  2418    				
                           A  2419    
                           A  2420    ;----------------------------------------------
                           A  2421    
                           A  2422    
0018AF CC 4F 17 00         A  2423    ext_rename_file	call z,mbase_hl
0018B3 CC 60 17 00         A  2424    				call z,mbase_de
                           A  2425    
0018B7 D5                  A  2426    os_rename_file	push de
0018B8 CD 52 5E 00         A  2427    				call fs_hl_to_alt_filename		0018BC E1                  A  2428    				pop hl				
0018BD CD 58 5E 00         A  2429    				call fs_hl_to_filename	
0018C1 CD C8 5A 00         A  2430    				call fs_rename_command
0018C5 C3 35 18 00         A  2431    				jr os_rffsc
                           A  2432    				
                           A  2433    
                           A  2434    ;----------------------------------------------
                           A  2435    
                           A  2436    
0018C9 CC 4F 17 00         A  2437    ext_delete_dir	call z,mbase_hl					                           A  2438    
0018CD CD 58 5E 00         A  2439    os_delete_dir	call fs_hl_to_filename
0018D1 CD 39 58 00         A  2440    				call fs_delete_dir_command
0018D5 C3 35 18 00         A  2441    				jp os_rffsc
                           A  2442    	
                           A  2443    	
                           A  2444    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2445    
                           A  2446    
0018D9                     A  2447    ext_read_sector
0018D9 CD 24 19 00         A  2448    				call ext_sector_access_preamble
0018DD C0                  A  2449    				ret nz
0018DE 32 53 6C 00         A  2450    				ld (current_driver),a
0018E2 CD FD 5F 00         A  2451    				call fs_read_sector
0018E6 20 11               A  2452    				jr nz,sect_done
0018E8 38 0F               A  2453    				jr c,sect_done
0018EA 21000800            A  2454    				ld hl,sector_buffer
0018EE ED5B 63 6C 00       A  2455    				ld de,(sector_rd_wr_addr)
0018F3 01000200            A  2456    				ld bc,512
0018F7 EDB0                A  2457    				ldir			
0018F9 F5                  A  2458    sect_done		push af
0018FA 3A 83 6D 00         A  2459    				ld a,(sys_driver_backup)		0018FE 32 53 6C 00         A  2460    				ld (current_driver),a
001902 F1                  A  2461    				pop af
001903 C3 35 18 00         A  2462    				jp os_rffsc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2463    				
                           A  2464    
001907                     A  2465    ext_write_sector
                           A  2466    			
001907 CD 24 19 00         A  2467    				call ext_sector_access_preamble
00190B C0                  A  2468    				ret nz
00190C 32 53 6C 00         A  2469    				ld (current_driver),a
001910 2A 63 6C 00         A  2470    				ld hl,(sector_rd_wr_addr)
001914 11000800            A  2471    				ld de,sector_buffer
001918 01000200            A  2472    				ld bc,512
00191C EDB0                A  2473    				ldir			
00191E CD 26 60 00         A  2474    				call fs_write_sector
001922 18 D5               A  2475    				jr sect_done
                           A  2476    
                           A  2477    
001924                     A  2478    ext_sector_access_preamble
                           A  2479    
001924 CC 4F 17 00         A  2480    				call z,mbase_hl
001928 22 63 6C 00         A  2481    				ld (sector_rd_wr_addr),hl
                           A  2482    				
00192C 78                  A  2483    				ld a,b
00192D F5                  A  2484    				push af							00192E DD21 35 6E 00       A  2485    				ld ix,sector_lba0
001933 DD1F00              A  2486    				ld (ix),de						001936 DD7103              A  2487    				ld (ix+3),c
001939 CD 48 1C 00         A  2488    				call dev_to_driver_lookup		00193D E5                  A  2489    				push hl
00193E DDE1                A  2490    				pop ix
001940 2A 35 6E 00         A  2491    				ld hl,(sector_lba0)				001944 3A 38 6E 00         A  2492    				ld a,(sector_lba3)				001948 DD0701              A  2493    				ld bc,(ix+1)					00194B B7                  A  2494    				or a							00194C ED42                A  2495    				sbc hl,bc
00194E DD9E04              A  2496    				sbc a,(ix+4)
001951 38 05               A  2497    				jr c,range_ok
001953 F1                  A  2498    				pop af
001954 3ED5                A  2499    				ld a,0d5h						001956 B7                  A  2500    				or a							001957 C9                  A  2501    				ret
                           A  2502    	
001958 3A 53 6C 00         A  2503    range_ok		ld a,(current_driver)
00195C 32 83 6D 00         A  2504    				ld (sys_driver_backup),a
001960 F1                  A  2505    				pop af							001961 CD 48 1C 00         A  2506    				call dev_to_driver_lookup
001965 30 02               A  2507    				jr nc,bad_dev
001967 BF                  A  2508    os_null			cp a							001968 C9                  A  2509    				ret
                           A  2510    					
001969 3ED0                A  2511    bad_dev			ld a,0d0h						00196B B7                  A  2512    				or a							00196C C9                  A  2513    				ret	
                           A  2514    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2515    
                           A  2516    ;----------------------------------------------
                           A  2517    
                           A  2518    
00196D                     A  2519    os_get_device_info
                           A  2520    
00196D 21 FE 6C 00         A  2521    				ld hl,host_device_hardware_info
001971 11 4C 45 00         A  2522    				ld de,driver_table
001975 3A 54 6C 00         A  2523    				ld a,(device_count)
001979 47                  A  2524    				ld b,a
00197A 3A 53 6C 00         A  2525    				ld a,(current_driver)
00197E BF                  A  2526    				cp a
00197F C9                  A  2527    				ret
                           A  2528    
                           A  2529    
                           A  2530    
                           A  2531    
001980                     A  2532    os_get_volume_info
                           A  2533    
001980 21 7E 6C 00         A  2534    				ld hl,volume_mount_list	
001984 3A 55 6C 00         A  2535    				ld a,(volume_count)
001988 47                  A  2536    				ld b,a
001989 3A 52 6C 00         A  2537    				ld a,(current_volume)
00198D C9                  A  2538    				ret
                           A  2539    				
                           A  2540    		
                           A  2541    ;----------------------------------------------
                           A  2542    
                           A  2543    
00198E                     A  2544    ext_serial_get_header
                           A  2545    
00198E CC 4F 17 00         A  2546    				call z,mbase_hl
001992 7B                  A  2547    				ld a,e
001993 CD B8 4F 00         A  2548    				call serial_get_header
001997 DDE5                A  2549    				push ix
001999 D1                  A  2550    				pop de
00199A C9                  A  2551    				ret
                           A  2552    				
                           A  2553    				
00199B                     A  2554    ext_serial_receive_file
                           A  2555    				
00199B CC 4F 17 00         A  2556    				call z,mbase_hl
00199F CD 53 50 00         A  2557    				call serial_receive_file
0019A3 C9                  A  2558    				ret
                           A  2559    				
                           A  2560    	
0019A4                     A  2561    ext_serial_send_file
                           A  2562    
0019A4 CC 4F 17 00         A  2563    				call z,mbase_hl					0019A8 CC 60 17 00         A  2564    				call z,mbase_de					0019AC D5                  A  2565    				push de	
0019AD DDE1                A  2566    				pop ix							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019AF C5                  A  2567    				push bc							0019B0 D1                  A  2568    				pop de							0019B1 CD 1C 51 00         A  2569    				call serial_send_file
0019B5 C9                  A  2570    				ret
                           A  2571    
                           A  2572    
0019B6                     A  2573    ext_serial_tx
0019B6 7B                  A  2574    				ld a,e
0019B7 CD 36 48 00         A  2575    				call send_serial_byte
0019BB AF                  A  2576    				xor a							0019BC C9                  A  2577    				ret
                           A  2578    
                           A  2579    
0019BD                     A  2580    ext_serial_rx
0019BD 7B                  A  2581    				ld a,e
0019BE 32 22 6C 00         A  2582    				ld (serial_timeout),a
0019C2 CD FB 47 00         A  2583    				call receive_serial_byte
0019C6 C9                  A  2584    				ret
                           A  2585    				
                           A  2586    
                           A  2587    ;----------------------------------------------
                           A  2588    
0019C7                     A  2589    ext_mount_volumes
                           A  2590    
0019C7 7B                  A  2591    				ld a,e
                           A  2592    
0019C8                     A  2593    os_mount_volumes
                           A  2594    				
0019C8 32 84 6D 00         A  2595    				ld (os_quiet_mode),a			                           A  2596    				
0019CC 21 4A 62 00         A  2597    				ld hl,storage_txt
0019D0 CD 10 11 00         A  2598    				call os_print_string_cond
0019D4 3A 52 6C 00         A  2599    				ld a,(current_volume)
0019D8 F5                  A  2600    				push af
0019D9 CD 0F 1A 00         A  2601    				call mount_go
0019DD F1                  A  2602    				pop af	
0019DE 32 52 6C 00         A  2603    				ld (current_volume),a			0019E2 CD 89 1C 00         A  2604    				call fs_set_driver_for_volume	0019E6 CD 13 54 00         A  2605    				call fs_check_disk_format		0019EA 38 01               A  2606    				jr c,m_inv_vol	
0019EC C8                  A  2607    				ret z
                           A  2608    
0019ED AF                  A  2609    m_inv_vol		xor a							0019EE F5                  A  2610    m_try_vol_lp	push af							0019EF CD 5E 1C 00         A  2611    				call os_change_volume			0019F3 20 03               A  2612    				jr nz,pmvbad					0019F5 F1                  A  2613    				pop af
0019F6 AF                  A  2614    				xor a
0019F7 C9                  A  2615    				ret
0019F8 F1                  A  2616    pmvbad			pop af
0019F9 3C                  A  2617    				inc a							0019FA FE08                A  2618    				cp max_volumes
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019FC 20 F0               A  2619    				jr nz,m_try_vol_lp
                           A  2620    				
0019FE 3A 54 6C 00         A  2621    				ld a,(device_count)
001A02 B7                  A  2622    				or a
001A03 20 08               A  2623    				jr nz,mfsdevs
001A05 21 26 6A 00         A  2624    				ld hl,none_found_msg
001A09 CD ED 15 00         A  2625    				call os_show_packed_text_cond
001A0D AF                  A  2626    mfsdevs			xor a
001A0E C9                  A  2627    				ret
                           A  2628    
                           A  2629    
                           A  2630    
001A0F 21 7E 6C 00         A  2631    mount_go		ld hl,volume_mount_list			001A13 01800000            A  2632    				ld bc,max_volumes*16
001A17 AF                  A  2633    clrdl_lp		xor a
001A18 CD 28 17 00         A  2634    				call os_bchl_memfill
                           A  2635    								
001A1C 21 66 6C 00         A  2636    				ld hl,volume_dir_clusters		001A20 01180000            A  2637    				ld bc,max_volumes*3		
001A24 AF                  A  2638    				xor a	
001A25 CD 28 17 00         A  2639    				call os_bchl_memfill	
                           A  2640    			
001A29 11 FE 6C 00         A  2641    				ld de,host_device_hardware_info
001A2D ED53 7E 6D 00       A  2642    				ld (dhwn_temp_pointer),de
                           A  2643    				
001A32 FD21 7E 6C 00       A  2644    				ld iy,volume_mount_list
001A37 AF                  A  2645    				xor a
001A38 32 55 6C 00         A  2646    				ld (volume_count),a
001A3C 32 54 6C 00         A  2647    				ld (device_count),a
001A40 32 53 6C 00         A  2648    mnt_loop		ld (current_driver),a			001A44 CD D4 1B 00         A  2649    				call locate_driver_base			001A48 21000000            A  2650    				ld hl,0
001A4C AF                  A  2651    				xor a
001A4D ED5A                A  2652    				adc hl,de
001A4F C8                  A  2653    				ret z							001A50 EB                  A  2654    				ex de,hl						001A51 FDE5                A  2655    				push iy
001A53 CD 64 1A 00         A  2656    				call find_dev					001A57 FDE1                A  2657    				pop iy							001A59 CC 65 1A 00         A  2658    				call z,got_dev		
001A5D 3A 53 6C 00         A  2659    nxt_drv			ld a,(current_driver)			001A61 3C                  A  2660    				inc a
001A62 18 DC               A  2661    				jr mnt_loop
                           A  2662    
                           A  2663    				
001A64 E9                  A  2664    find_dev		jp (hl)
                           A  2665    			
                           A  2666    			
001A65 E5                  A  2667    got_dev			push hl							001A66 D5                  A  2668    				push de							001A67 C5                  A  2669    				push bc
001A68 CD B6 15 00         A  2670    				call os_new_line_cond			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A6C 015B0100            A  2671    				ld bc,015bh
001A70 CD E5 1B 00         A  2672    				call os_print_multiple_chars_co
001A74 3A 53 6C 00         A  2673    				ld a,(current_driver)
001A78 CD D4 1B 00         A  2674    				call locate_driver_base
001A7C 210C0000            A  2675    				ld hl,0ch
001A80 19                  A  2676    				add hl,de
001A81 CD 10 11 00         A  2677    				call os_print_string_cond		001A85 015D0100            A  2678    				ld bc,015dh
001A89 CD E5 1B 00         A  2679    				call os_print_multiple_chars_co
001A8D C1                  A  2680    				pop bc
001A8E D1                  A  2681    				pop de
001A8F AF                  A  2682    				xor a
001A90 32 82 6D 00         A  2683    				ld (vols_on_device_temp),a
                           A  2684    				
001A94 21 54 6C 00         A  2685    				ld hl,device_count
001A98 34                  A  2686    				inc (hl)						001A99 3A 53 6C 00         A  2687    				ld a,(current_driver)
001A9D 2A 7E 6D 00         A  2688    				ld hl,(dhwn_temp_pointer)	
001AA1 77                  A  2689    				ld (hl),a
001AA2 23                  A  2690    				inc hl
001AA3 73                  A  2691    				ld (hl),e						001AA4 FD7304              A  2692    				ld (iy+4),e						001AA7 23                  A  2693    				inc hl							001AA8 72                  A  2694    				ld (hl),d
001AA9 FD7205              A  2695    				ld (iy+5),d
001AAC 23                  A  2696    				inc hl
001AAD 71                  A  2697    				ld (hl),c			
001AAE FD7106              A  2698    				ld (iy+6),c
001AB1 23                  A  2699    				inc hl
001AB2 70                  A  2700    				ld (hl),b						001AB3 23                  A  2701    				inc hl
001AB4 D1                  A  2702    				pop de
001AB5 EB                  A  2703    				ex de,hl
001AB6 01160000            A  2704    				ld bc,22
001ABA EDB0                A  2705    				ldir							001ABC AF                  A  2706    				xor a
001ABD 0605                A  2707    				ld b,5		
001ABF 12                  A  2708    clrrode			ld (de),a						001AC0 13                  A  2709    				inc de
001AC1 10 FC               A  2710    				djnz clrrode
001AC3 ED53 7E 6D 00       A  2711    				ld (dhwn_temp_pointer),de		                           A  2712    					
001AC8 AF                  A  2713    				xor a							001AC9 32 81 6D 00         A  2714    fnxtpart		ld (partition_temp),a
001ACD FDE5                A  2715    				push iy
001ACF CD C0 53 00         A  2716    				call fs_get_partition_info
001AD3 FDE1                A  2717    				pop iy
001AD5 38 36               A  2718    				jr c,nxt_dev					001AD7 FECE                A  2719    				cp 0ceh
001AD9 28 32               A  2720    				jr z,nxt_dev					001ADB FECF                A  2721    				cp 0cfh							001ADD 28 2E               A  2722    				jr z,nxt_dev					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001ADF F5                  A  2723    				push af
001AE0 FD360001            A  2724    				ld (iy),1						001AE4 3A 53 6C 00         A  2725    				ld a,(current_driver)
001AE8 FD7701              A  2726    				ld (iy+1),a						001AEB 3A 81 6D 00         A  2727    				ld a,(partition_temp)	
001AEF FD7707              A  2728    				ld (iy+7),a						001AF2 F1                  A  2729    				pop af
001AF3 FED3                A  2730    				cp 0d3h
001AF5 20 35               A  2731    				jr nz,dev_mbr					001AF7 AF                  A  2732    				xor a
001AF8 FD7708              A  2733    				ld (iy+8),a						001AFB FD7709              A  2734    				ld (iy+9),a						001AFE FD770A              A  2735    				ld (iy+10),a					001B01 FD770B              A  2736    				ld (iy+11),a
001B04 CD 63 1B 00         A  2737    				call show_vol_info
001B08 CD 54 1B 00         A  2738    				call test_max_vol
001B0C C8                  A  2739    				ret z							                           A  2740    			
001B0D 3A 82 6D 00         A  2741    nxt_dev			ld a,(vols_on_device_temp)		001B11 B7                  A  2742    				or a
001B12 C0                  A  2743    				ret nz		
001B13 CD B5 1B 00         A  2744    				call test_quiet_mode
001B17 20 06               A  2745    				jr nz,skp_cu
001B19 3E0A                A  2746    				ld a,10
001B1B 32 3A 6E 00         A  2747    				ld (cursor_x),a
001B1F 21 23 6A 00         A  2748    skp_cu			ld hl,no_vols_msg				001B23 CD ED 15 00         A  2749    				call os_show_packed_text_cond
001B27 CD B6 15 00         A  2750    				call os_new_line_cond
001B2B C9                  A  2751    				ret
                           A  2752    				
001B2C DD1708              A  2753    dev_mbr			ld de,(ix+8)					001B2F FD1F08              A  2754    				ld (iy+8),de
001B32 DD7E0B              A  2755    				ld a,(ix+0bh)					001B35 FD770B              A  2756    				ld (iy+0bh),a
001B38 DD170C              A  2757    				ld de,(ix+0ch)				
001B3B FD1F04              A  2758    				ld (iy+4),de					                           A  2759    					
001B3E CD 63 1B 00         A  2760    				call show_vol_info
001B42 CD 54 1B 00         A  2761    				call test_max_vol	
001B46 C8                  A  2762    				ret z							001B47 3A 81 6D 00         A  2763    				ld a,(partition_temp)
001B4B 3C                  A  2764    				inc a
001B4C FE04                A  2765    				cp 4							001B4E C2 C9 1A 00         A  2766    				jr nz,fnxtpart
001B52 18 B9               A  2767    				jr nxt_dev
                           A  2768    				
                           A  2769    
001B54 11100000            A  2770    test_max_vol	ld de,16
001B58 FD19                A  2771    				add iy,de			
001B5A 21 55 6C 00         A  2772    				ld hl,volume_count
001B5E 34                  A  2773    				inc (hl)
001B5F 7E                  A  2774    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B60 FE08                A  2775    				cp max_volumes
001B62 C9                  A  2776    				ret
                           A  2777    			
                           A  2778    			
001B63 CD B5 1B 00         A  2779    show_vol_info	call test_quiet_mode
001B67 20 06               A  2780    				jr nz,skp_cm2
001B69 3E09                A  2781    				ld a,9			
001B6B 32 3A 6E 00         A  2782    				ld (cursor_x),a
001B6F 3A 55 6C 00         A  2783    skp_cm2			ld a,(volume_count)
001B73 F5                  A  2784    				push af
001B74 C630                A  2785    				add a,30h		
001B76 32 5A 6C 00         A  2786    				ld (vol_txt+4),a	
001B7A 21 56 6C 00         A  2787    				ld hl,vol_txt
001B7E CD 10 11 00         A  2788    				call os_print_string_cond		001B82 21 82 6D 00         A  2789    				ld hl,vols_on_device_temp
001B86 CBC6                A  2790    				set 0,(hl)						                           A  2791    			
001B88 F1                  A  2792    				pop af
001B89 FDE5                A  2793    				push iy
001B8B CD 5E 1C 00         A  2794    				call os_change_volume			001B8F 28 0A               A  2795    				jr z,vform_ok					001B91 21 D3 69 00         A  2796    svi_fe			ld hl,format_err_msg		
001B95 CD ED 15 00         A  2797    svi_pem			call os_show_packed_text_cond	001B99 18 0D               A  2798    				jr skpsvl
                           A  2799    			
001B9B CD 07 5C 00         A  2800    vform_ok		call fs_get_volume_label
001B9F 38 0E               A  2801    				jr c,svi_hwe
001BA1 B7                  A  2802    				or a
001BA2 20 ED               A  2803    				jr nz,svi_fe
001BA4 CD 10 11 00         A  2804    				call os_print_string_cond		                           A  2805    			
001BA8 CD B6 15 00         A  2806    skpsvl			call os_new_line_cond
001BAC FDE1                A  2807    				pop iy
001BAE C9                  A  2808    				ret
                           A  2809    				
001BAF 21 18 68 00         A  2810    svi_hwe			ld hl,disk_err_msg
001BB3 18 E0               A  2811    				jr svi_pem
                           A  2812    			
                           A  2813    			
001BB5                     A  2814    test_quiet_mode
                           A  2815    			
001BB5 3A 84 6D 00         A  2816    				ld a,(os_quiet_mode)
001BB9 B7                  A  2817    				or a
001BBA C9                  A  2818    				ret
                           A  2819    
                           A  2820    ;----------------------------------------------
                           A  2821    
                           A  2822    
001BBB                     A  2823    show_dev_driver_name
                           A  2824    	
                           A  2825    	
001BBB CD D4 1B 00         A  2826    				call locate_driver_base			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BBF EB                  A  2827    				ex de,hl
001BC0 110C0000            A  2828    				ld de,0ch
001BC4 19                  A  2829    				add hl,de
001BC5 CD 15 11 00         A  2830    				call os_print_string			001BC9 C5                  A  2831    				push bc
001BCA 01200100            A  2832    				ld bc,0120h
001BCE CD EA 1B 00         A  2833    				call os_print_multiple_chars	001BD2 C1                  A  2834    				pop bc
001BD3 C9                  A  2835    				ret
                           A  2836    
                           A  2837    
001BD4                     A  2838    locate_driver_base
                           A  2839    
001BD4 E5                  A  2840    				push hl							001BD5 11030000            A  2841    				ld de,3							001BD9 57                  A  2842    				ld d,a
001BDA ED5C                A  2843    				mlt de
001BDC 21 4C 45 00         A  2844    				ld hl,driver_table
001BE0 19                  A  2845    				add hl,de
001BE1 ED17                A  2846    				ld de,(hl)
001BE3 E1                  A  2847    				pop hl
001BE4 C9                  A  2848    				ret
                           A  2849    				
                           A  2850    		
                           A  2851    ;----------------------------------------------
                           A  2852    
001BE5                     A  2853    os_print_multiple_chars_cond
                           A  2854    
001BE5 CD B5 1B 00         A  2855    				call test_quiet_mode
001BE9 C0                  A  2856    				ret nz
                           A  2857    			
001BEA                     A  2858    os_print_multiple_chars
                           A  2859    
                           A  2860    ;c = char
                           A  2861    ;b = count
001BEA C5                  A  2862    				push bc
001BEB E5                  A  2863    				push hl
001BEC 79                  A  2864    				ld a,c
001BED 21 BB 62 00         A  2865    				ld hl,rep_char_txt
001BF1 77                  A  2866    				ld (hl),a
001BF2 E5                  A  2867    pmch_lp			push hl
001BF3 CD 15 11 00         A  2868    				call os_print_string
001BF7 E1                  A  2869    				pop hl
001BF8 10 F8               A  2870    				djnz pmch_lp
001BFA E1                  A  2871    				pop hl
001BFB C1                  A  2872    				pop bc
001BFC C9                  A  2873    				ret
                           A  2874    
                           A  2875    ;----------------------------------------------
                           A  2876    
                           A  2877    
001BFD 7B                  A  2878    ext_plot_char	ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BFE C3 72 49 00         A  2879    				jp hwsc_plot_char
                           A  2880    				
                           A  2881    
                           A  2882    ;----------------------------------------------
                           A  2883    ; Some file system related routines 
                           A  2884    ;----------------------------------------------
                           A  2885    
                           A  2886    
001C02                     A  2887    fs_get_dir_cluster
                           A  2888    
                           A  2889    
001C02 F5                  A  2890    				push af							001C03 E5                  A  2891    				push hl			
001C04 CD 1A 1C 00         A  2892    				call fs_get_dir_cluster_address
001C08 ED17                A  2893    				ld de,(hl)
001C0A E1                  A  2894    dclopdone		pop hl
001C0B F1                  A  2895    				pop af
001C0C BF                  A  2896    				cp a							001C0D C9                  A  2897    				ret
                           A  2898    				
                           A  2899    
                           A  2900    
                           A  2901    
                           A  2902    
001C0E                     A  2903    fs_update_dir_cluster
                           A  2904    
001C0E F5                  A  2905    				push af							001C0F E5                  A  2906    				push hl			
001C10 D5                  A  2907    				push de			
001C11 CD 1A 1C 00         A  2908    				call fs_get_dir_cluster_address
001C15 D1                  A  2909    				pop de
001C16 ED1F                A  2910    				ld (hl),de
001C18 18 F0               A  2911    				jr dclopdone
                           A  2912    			
                           A  2913    
                           A  2914    
                           A  2915    
                           A  2916    
001C1A                     A  2917    fs_get_dir_cluster_address
                           A  2918    
001C1A 21 66 6C 00         A  2919    				ld hl,volume_dir_clusters		001C1E 3A 52 6C 00         A  2920    				ld a,(current_volume)	
001C22 11030000            A  2921    				ld de,3
001C26 57                  A  2922    				ld d,a
001C27 ED5C                A  2923    				mlt de
001C29 19                  A  2924    				add hl,de
001C2A C9                  A  2925    				ret
                           A  2926    				
                           A  2927    	
                           A  2928    
                           A  2929    	
                           A  2930    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C2B                     A  2931    fs_get_total_sectors
                           A  2932    
                           A  2933    
001C2B F5                  A  2934    				push af
001C2C E5                  A  2935    				push hl							001C2D CD 3C 1C 00         A  2936    				call fs_calc_volume_offset	
001C31 21 82 6C 00         A  2937    				ld hl,volume_mount_list+4
001C35 19                  A  2938    				add hl,de
001C36 ED17                A  2939    				ld de,(hl)
001C38 E1                  A  2940    				pop hl
001C39 F1                  A  2941    				pop af
001C3A BF                  A  2942    				cp a							001C3B C9                  A  2943    				ret
                           A  2944    
                           A  2945    
                           A  2946    
                           A  2947    
                           A  2948    
001C3C                     A  2949    fs_calc_volume_offset
                           A  2950    
001C3C 3A 52 6C 00         A  2951    				ld a,(current_volume)			001C40 11100000            A  2952    calc_vol		ld de,16
001C44 57                  A  2953    				ld d,a
001C45 ED5C                A  2954    				mlt de
001C47 C9                  A  2955    				ret
                           A  2956    
                           A  2957    
                           A  2958    
                           A  2959    
                           A  2960    
001C48                     A  2961    dev_to_driver_lookup
                           A  2962    
001C48 21 54 6C 00         A  2963    				ld hl,device_count				001C4C BE                  A  2964    				cp (hl)							001C4D D0                  A  2965    				ret nc
001C4E 11200000            A  2966    				ld de,32						001C52 57                  A  2967    				ld d,a
001C53 ED5C                A  2968    				mlt de
001C55 21 FE 6C 00         A  2969    				ld hl,host_device_hardware_info
001C59 19                  A  2970    				add hl,de
001C5A 7E                  A  2971    				ld a,(hl)
001C5B 37                  A  2972    				scf
001C5C C9                  A  2973    				ret
                           A  2974    				
                           A  2975    
                           A  2976    
001C5D                     A  2977    ext_change_volume
                           A  2978    
001C5D 7B                  A  2979    				ld a,e
                           A  2980    
001C5E                     A  2981    os_change_volume
                           A  2982    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C5E 47                  A  2983    				ld b,a							001C5F FE08                A  2984    				cp max_volumes		
001C61 30 22               A  2985    				jr nc,fs_ccv2					                           A  2986    			
001C63 3A 52 6C 00         A  2987    				ld a,(current_volume)			001C67 F5                  A  2988    				push af
001C68 78                  A  2989    				ld a,b
001C69 32 52 6C 00         A  2990    				ld (current_volume),a			001C6D CD 89 1C 00         A  2991    				call fs_set_driver_for_volume	                           A  2992    				
001C71 CD 13 54 00         A  2993    				call fs_check_disk_format		001C75 38 05               A  2994    				jr c,fs_cant_chg_vols	
001C77 20 03               A  2995    				jr nz,fs_cant_chg_vols
001C79 F1                  A  2996    				pop af							001C7A AF                  A  2997    				xor a							001C7B C9                  A  2998    				ret
                           A  2999    
                           A  3000    
001C7C                     A  3001    fs_cant_chg_vols
                           A  3002    			
001C7C F1                  A  3003    				pop af
001C7D 32 52 6C 00         A  3004    				ld (current_volume),a			001C81 CD 89 1C 00         A  3005    				call fs_set_driver_for_volume	                           A  3006    				
001C85 3ECF                A  3007    fs_ccv2			ld a,0cfh						001C87 B7                  A  3008    				or a
001C88 C9                  A  3009    				ret
                           A  3010    					
                           A  3011    	
001C89                     A  3012    fs_set_driver_for_volume
                           A  3013    
001C89 CD 3C 1C 00         A  3014    				call fs_calc_volume_offset		001C8D 21 7F 6C 00         A  3015    				ld hl,volume_mount_list+1
001C91 19                  A  3016    				add hl,de
001C92 7E                  A  3017    				ld a,(hl)
001C93 32 53 6C 00         A  3018    				ld (current_driver),a
001C97 C9                  A  3019    				ret
                           A  3020    
                           A  3021    
                           A  3022    ;----------------------------------------------
                           A  3023    
001C98                     A  3024    ext_file_sector_list
                           A  3025    
                           A  3026    ;Input HL = cluster, E = sector offset
                           A  3027    
                           A  3028    ;Output HL = new cluster, E = new sector number
                           A  3029    ;       IX = address of LBA0 LSB of sector (int
                           A  3030    
                           A  3031    				
001C98 3A 9E 60 00         A  3032    				ld a,(fs_cluster_size)
001C9C BB                  A  3033    				cp e
001C9D 20 0A               A  3034    				jr nz,fsl_sc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C9F CD A5 5E 00         A  3035    				call get_fat_entry_for_cluster
001CA3 DA D2 17 00         A  3036    				jp c,os_fferr
001CA7 1E00                A  3037    				ld e,0
001CA9 CD 7C 5F 00         A  3038    fsl_sc			call cluster_and_offset_to_lba
001CAD 1C                  A  3039    				inc e
001CAE 01 35 6E 00         A  3040    fsl_done		ld bc,sector_lba0
001CB2 BF                  A  3041    				cp a							001CB3 C9                  A  3042    				ret
                           A  3043    
                           A  3044    ;----------------------------------------------
                           A  3045    
001CB4                     A  3046    os_get_disk_sector_ptr
                           A  3047     
001CB4 21 35 6E 00         A  3048    				ld hl,sector_lba0
001CB8 11000800            A  3049    				ld de,sector_buffer
001CBC BF                  A  3050    				cp a
001CBD C9                  A  3051    				ret
                           A  3052    				
                           A  3053    ;----------------------------------------------
                           A  3054    
                           A  3055    
001CBE E5                  A  3056    os_count_chars	push hl							001CBF 01000000            A  3057    				ld bc,0
001CC3 7E                  A  3058    cch_lp			ld a,(hl)
001CC4 B7                  A  3059    				or a
001CC5 28 04               A  3060    				jr z,cch_end
001CC7 23                  A  3061    				inc hl
001CC8 03                  A  3062    				inc bc
001CC9 18 F8               A  3063    				jr cch_lp
001CCB E1                  A  3064    cch_end			pop hl
001CCC C9                  A  3065    				ret
                           A  3066    				
                           A  3067    			
                           A  3068    ;----------------------------------------------
                           A  3069    ; Environment variable code V0.01
                           A  3070    ;----------------------------------------------
                           A  3071    
001CCD                     A  3072    ext_get_envar
001CCD CC 4F 17 00         A  3073    				call z,mbase_hl
                           A  3074    
001CD1                     A  3075    os_get_envar
                           A  3076    
                           A  3077    ;Set: 		HL = name of required variable
                           A  3078    ;Returns:	ZF Set: DE = address of variable's 
                           A  3079    ;        	ZF Not Set: Couldn't find variable
                           A  3080    				
001CD1 DD21FF01 00         A  3081    				ld ix,envar_list-1
001CD6 CD BE 1C 00         A  3082    env_fname		call os_count_chars				001CDA 78                  A  3083    				ld a,b
001CDB B1                  A  3084    				or c
001CDC 28 2B               A  3085    				jr z,env_bad
                           A  3086    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001CDE ED1201              A  3087    env_cname		lea de,ix+1
001CE1 1A                  A  3088    				ld a,(de)
001CE2 FEFF                A  3089    				cp 0ffh
001CE4 28 1F               A  3090    				jr z,unknown_env
001CE6 C5                  A  3091    				push bc
001CE7 41                  A  3092    				ld b,c
001CE8 CD E2 13 00         A  3093    				call os_compare_strings
001CEC C1                  A  3094    				pop bc
001CED 20 06               A  3095    				jr nz,env_nomatch
001CEF 03                  A  3096    				inc bc							001CF0 EB                  A  3097    				ex de,hl
001CF1 09                  A  3098    				add hl,bc
001CF2 EB                  A  3099    				ex de,hl						001CF3 AF                  A  3100    				xor a
001CF4 C9                  A  3101    				ret			
                           A  3102    				
001CF5 DD23                A  3103    env_nomatch		inc ix							001CF7 CD A1 1D 00         A  3104    				call check_envar_bounds
001CFB 20 0C               A  3105    				jr nz,env_bad
001CFD DD7E00              A  3106    				ld a,(ix)
001D00 B7                  A  3107    				or a
001D01 28 DB               A  3108    				jr z,env_cname
001D03 18 F0               A  3109    				jr env_nomatch
                           A  3110    
001D05 3E8F                A  3111    unknown_env		ld a,8fh						001D07 B7                  A  3112    				or a
001D08 C9                  A  3113    				ret
                           A  3114    
001D09 3E82                A  3115    env_bad			ld a,82h						001D0B B7                  A  3116    				or a
001D0C C9                  A  3117    				ret	
                           A  3118    				
                           A  3119    ;----------------------------------------------
                           A  3120    
001D0D                     A  3121    ext_set_envar
                           A  3122    
                           A  3123    ;HL = addr of variable name (zero terminated)
                           A  3124    ;DE = addr of data for variable (zero terminate
                           A  3125    
                           A  3126    ;Returns:
                           A  3127    ;ZF = Set: OK
                           A  3128    ;ZF = Not Set: No enough space for new variable
                           A  3129    		
001D0D CC 4F 17 00         A  3130    				call z,mbase_hl
001D11 CC 60 17 00         A  3131    				call z,mbase_de
                           A  3132    
001D15 7E                  A  3133    os_set_envar	ld a,(hl)						001D16 B7                  A  3134    				or a
001D17 28 F0               A  3135    				jr z,env_bad
001D19 1A                  A  3136    				ld a,(de)
001D1A B7                  A  3137    				or a
001D1B 28 EC               A  3138    				jr z,env_bad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3139    
001D1D E5                  A  3140    				push hl
001D1E D5                  A  3141    				push de
001D1F CD 6B 1D 00         A  3142    				call os_delete_envar			001D23 D1                  A  3143    				pop de
001D24 E1                  A  3144    				pop hl
                           A  3145    				
001D25 DD2A BE 6F 00       A  3146    				ld ix,(envar_top_loc)			001D2A CD A1 1D 00         A  3147    env_enlp		call check_envar_bounds
001D2E 20 D9               A  3148    				jr nz,env_bad
001D30 7E                  A  3149    				ld a,(hl)						001D31 DD7700              A  3150    				ld (ix),a
001D34 B7                  A  3151    				or a
001D35 28 05               A  3152    				jr z,env_ndone
001D37 23                  A  3153    				inc hl
001D38 DD23                A  3154    				inc ix
001D3A 18 EE               A  3155    				jr env_enlp
                           A  3156    				
001D3C CD A1 1D 00         A  3157    env_ndone		call check_envar_bounds			001D40 20 C7               A  3158    				jr nz,env_bad
001D42 DD36003D            A  3159    				ld (ix),'='
001D46 DD23                A  3160    				inc ix
                           A  3161    
001D48 CD A1 1D 00         A  3162    env_evlp		call check_envar_bounds			001D4C 20 BB               A  3163    				jr nz,env_bad
001D4E 1A                  A  3164    				ld a,(de)
001D4F DD7700              A  3165    				ld (ix),a
001D52 B7                  A  3166    				or a
001D53 28 05               A  3167    				jr z,env_vdone
001D55 13                  A  3168    				inc de
001D56 DD23                A  3169    				inc ix
001D58 18 EE               A  3170    				jr env_evlp
                           A  3171    
001D5A DD23                A  3172    env_vdone		inc ix
001D5C DD3600FF            A  3173    				ld (ix),0ffh
001D60 DD22 BE 6F 00       A  3174    				ld (envar_top_loc),ix			001D65 AF                  A  3175    				xor a
001D66 C9                  A  3176    				ret
                           A  3177    
                           A  3178    	
                           A  3179    ;----------------------------------------------
                           A  3180    
001D67                     A  3181    ext_delete_envar
                           A  3182    
001D67 CC 4F 17 00         A  3183    				call z,mbase_hl
                           A  3184    
001D6B                     A  3185    os_delete_envar
                           A  3186    
                           A  3187    ;HL = name of required variable (null terminate
                           A  3188    ;ZF = Set: OK
                           A  3189    ;ZF = Not Set: Didnt find named variable
                           A  3190    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3191    
001D6B CD D1 1C 00         A  3192    				call os_get_envar				001D6F C0                  A  3193    				ret nz
                           A  3194    				
001D70 D5                  A  3195    				push de
001D71 E1                  A  3196    				pop hl
001D72 AF                  A  3197    				xor a
001D73 ED42                A  3198    				sbc hl,bc						                           A  3199    				
001D75 13                  A  3200    env_fnxt		inc de							001D76 D5                  A  3201    				push de
001D77 DDE1                A  3202    				pop ix
001D79 CD A1 1D 00         A  3203    				call check_envar_bounds
001D7D 20 8A               A  3204    				jr nz,env_bad
001D7F 1A                  A  3205    				ld a,(de)
001D80 B7                  A  3206    				or a
001D81 20 F2               A  3207    				jr nz,env_fnxt
                           A  3208    
001D83 13                  A  3209    env_gnxt		inc de							001D84 EB                  A  3210    				ex de,hl
001D85 7E                  A  3211    env_collp		ld a,(hl)
001D86 12                  A  3212    				ld (de),a						001D87 FEFF                A  3213    				cp 0ffh
001D89 28 0F               A  3214    				jr z,env_clspd					001D8B E5                  A  3215    				push hl
001D8C DDE1                A  3216    				pop ix
001D8E CD A1 1D 00         A  3217    				call check_envar_bounds
001D92 C2 09 1D 00         A  3218    				jr nz,env_bad
001D96 23                  A  3219    				inc hl
001D97 13                  A  3220    				inc de
001D98 18 EB               A  3221    				jr env_collp
                           A  3222    
001D9A ED53 BE 6F 00       A  3223    env_clspd		ld (envar_top_loc),de			001D9F AF                  A  3224    				xor a
001DA0 C9                  A  3225    				ret
                           A  3226    				
                           A  3227    ;----------------------------------------------
                           A  3228    
001DA1                     A  3229    check_envar_bounds
                           A  3230    
001DA1 C5                  A  3231    				push bc
001DA2 E5                  A  3232    				push hl
001DA3 DDE5                A  3233    				push ix
001DA5 E1                  A  3234    				pop hl
001DA6 01010400            A  3235    				ld bc,1+(envar_list+envar_buffe
001DAA AF                  A  3236    				xor a
001DAB ED42                A  3237    				sbc hl,bc
001DAD 38 05               A  3238    				jr c,env_bok
001DAF AF                  A  3239    				xor a
001DB0 3C                  A  3240    				inc a
001DB1 E1                  A  3241    				pop hl
001DB2 C1                  A  3242    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001DB3 C9                  A  3243    				ret
                           A  3244    
001DB4 AF                  A  3245    env_bok			xor a
001DB5 E1                  A  3246    				pop hl
001DB6 C1                  A  3247    				pop bc
001DB7 C9                  A  3248    				ret
                           A  3249    						
                           A  3250    ;----------------------------------------------
                           A  3251    
001DB8                     A  3252    os_get_keymap_location
                           A  3253    
001DB8 21 86 6A 00         A  3254    				ld hl,unshifted_keymap
001DBC BF                  A  3255    				cp a							001DBD C9                  A  3256    				ret
                           A  3257    
                           A  3258    
                           A  3259    ;----------------------------------------------
                           A  3260    
                           A  3261    
001DBE CC 4F 17 00         A  3262    ext_play_audio	call z,mbase_hl
                           A  3263    				
001DC2 CD 80 4E 00         A  3264    os_play_audio	call hwsc_play_audio
001DC6 C9                  A  3265    				ret
                           A  3266    				
                           A  3267    ;----------------------------------------------
                           A  3268    
001DC7 E5                  A  3269    test_de			push hl
001DC8 21000000            A  3270    				ld hl,0
001DCC ED5A                A  3271    				adc hl,de
001DCE E1                  A  3272    				pop hl
001DCF C9                  A  3273    				ret
                           A  3274    
                           A  3275    ;==============================================
                           A  3276    ; Internal OS command routines
                           A  3277    ;==============================================
                           A  3278    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DD0                     B     5    os_cmd_c
                           B     6    
001DD0 CD 06 1E 00         B     7    				call get_start_and_end			                           B     8    				
001DD4 CD 2F 1E 00         B     9    				call hexword_or_bust			001DD8 CA B7 17 00         B    10    				jp z,os_no_d_addr_error
001DDC ED53 48 6E 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001DE1 CD F4 1D 00         B    13    				call test_mem_range				001DE5 DA BB 17 00         B    14    				jp c,os_range_error				001DE9 ED5B 48 6E 00       B    15    				ld de,(copy_dest_address)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001DEE EDB0                B    16    				ldir
                           B    17    
001DF0 3E20                B    18    copy_done		ld a,020h						001DF2 B7                  B    19    				or a
001DF3 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001DF4                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001DF4 2A 45 6E 00         B    33    				ld hl,(cmdop_end_address)	
001DF8 ED4B 42 6E 00       B    34    				ld bc,(cmdop_start_address)
001DFD C5                  B    35    				push bc
001DFE AF                  B    36    				xor a
001DFF ED42                B    37    				sbc hl,bc
001E01 E5                  B    38    				push hl
001E02 C1                  B    39    				pop bc
001E03 03                  B    40    				inc bc
001E04 E1                  B    41    				pop hl
001E05 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001E06                     B    46    get_start_and_end
                           B    47    			
001E06 CD 92 12 00         B    48    				call ascii_to_hexword			001E0A ED53 42 6E 00       B    49    				ld (cmdop_start_address),de
001E0F 23                  B    50    				inc hl
001E10 28 09               B    51    				jr z,st_addrok
001E12 E1                  B    52    				pop hl							001E13 FE82                B    53    				cp 82h							001E15 28 02               B    54    				jr z,c_badhex
001E17 3E16                B    55    				ld a,016h						001E19 B7                  B    56    c_badhex		or a
001E1A C9                  B    57    				ret
                           B    58    				
001E1B CD 92 12 00         B    59    st_addrok		call ascii_to_hexword			001E1F ED53 45 6E 00       B    60    				ld (cmdop_end_address),de
001E24 23                  B    61    				inc hl
001E25 B7                  B    62    				or a
001E26 C8                  B    63    				ret z
001E27 E1                  B    64    				pop hl							001E28 FE82                B    65    				cp 82h							001E2A 28 ED               B    66    				jr z,c_badhex
001E2C 3E1C                B    67    				ld a,01ch						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001E2E C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001E2F                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001E2F CD 92 12 00         B    79    				call ascii_to_hexword		
001E33 FE82                B    80    				cp 82h
001E35 20 03               B    81    				jr nz,hex_good
001E37 E1                  B    82    				pop hl						; r
001E38 B7                  B    83    				or a	
001E39 C9                  B    84    				ret			 
001E3A FE81                B    85    hex_good		cp 081h						; n
001E3C C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001E3D                     B     5    os_cmd_cd	
                           B     6    
001E3D CD 2F 18 00         B     7    				call os_check_volume_format	
001E41 C0                  B     8    				ret nz
                           B     9    				
001E42 7E                  B    10    				ld a,(hl)						001E43 B7                  B    11    				or a				
001E44 CA 83 1E 00         B    12    				jp z,cd_show_path		
                           B    13    					
001E48 7E                  B    14    				ld a,(hl)						001E49 23                  B    15    				inc hl
001E4A 46                  B    16    				ld b,(hl)
001E4B 2B                  B    17    				dec hl
001E4C FE2E                B    18    				cp '.'			
001E4E 20 08               B    19    				jr nz,cd_nual
001E50 B8                  B    20    				cp b
001E51 20 05               B    21    				jr nz,cd_nual
001E53 CD 7D 18 00         B    22    				call os_parent_dir	
001E57 C9                  B    23    				ret
                           B    24    			
                           B    25    			
001E58 FE2F                B    26    cd_nual			cp 02fh			
001E5A 20 05               B    27    				jr nz,cd_nogor					001E5C CD 83 18 00         B    28    				call os_root_dir	
001E60 C9                  B    29    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B    30    				
                           B    31    				
001E61 CD 39 10 00         B    32    cd_nogor		call test_volx					001E65 20 0C               B    33    				jr nz,notvolx
001E67 D630                B    34    				sub 30h
001E69 CD 5E 1C 00         B    35    				call os_change_volume
001E6D C0                  B    36    				ret nz
001E6E CD 83 18 00         B    37    				call os_root_dir
001E72 C9                  B    38    				ret
                           B    39    				
                           B    40    				
001E73 CD 2C 3E 00         B    41    notvolx			call os_cache_original_vol_dir
001E77 3E01                B    42    				ld a,1
001E79 CD AD 3D 00         B    43    				call os_parse_path_string
001E7D C8                  B    44    				ret z
001E7E CD 17 3E 00         B    45    				call os_restore_original_vol_di
001E82 C9                  B    46    				ret
                           B    47    				
                           B    48    ;----------------------------------------------
                           B    49    			
001E83                     B    50    cd_show_path
                           B    51    			
                           B    52    			
       00000010            B    53    max_dirs	equ 16
                           B    54    			
001E83 0610                B    55    				ld b,max_dirs
001E85 0E00                B    56    				ld c,0
001E87 C5                  B    57    lp1				push bc
001E88 CD 02 1C 00         B    58    				call fs_get_dir_cluster
001E8C C1                  B    59    				pop bc
001E8D D5                  B    60    				push de
001E8E 0C                  B    61    				inc c
001E8F C5                  B    62    				push bc
001E90 CD 7D 18 00         B    63    				call os_parent_dir
001E94 C1                  B    64    				pop bc
001E95 20 02               B    65    				jr nz,shdir_lp
001E97 10 EE               B    66    				djnz lp1
                           B    67    				
001E99 D1                  B    68    shdir_lp		pop de
001E9A C5                  B    69    				push bc
001E9B CD 0E 1C 00         B    70    				call fs_update_dir_cluster
001E9F CD A9 18 00         B    71    				call os_get_current_dir_name
001EA3 CD 15 11 00         B    72    				call os_print_string
001EA7 C1                  B    73    				pop bc
001EA8 0D                  B    74    				dec c
001EA9 28 11               B    75    				jr z,cd_sp_done
001EAB 2B                  B    76    				dec hl
001EAC 2B                  B    77    				dec hl
001EAD 7E                  B    78    				ld a,(hl)
001EAE FE3A                B    79    				cp ':'
001EB0 28 E7               B    80    				jr z,shdir_lp				;no
001EB2 21 C2 1E 00         B    81    				ld hl,cd_fwdslash_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001EB6 CD 15 11 00         B    82    				call os_print_string
001EBA 18 DD               B    83    				jr shdir_lp
                           B    84    			
001EBC CD BB 15 00         B    85    cd_sp_done		call os_new_line	
001EC0 AF                  B    86    				xor a
001EC1 C9                  B    87    				ret
                           B    88    			
001EC2 2F00                B    89    cd_fwdslash_txt	db '/',0	
                           B    90    			
                           B    91    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001EC4                     B     5    os_cmd_cls
                           B     6    
001EC4 CD FC 48 00         B     7    				call hwsc_clear_screen
001EC8 AF                  B     8    				xor a
001EC9 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001ECA                     B     5    os_cmd_colon
                           B     6    	
001ECA CD 2F 1E 00         B     7    				call hexword_or_bust			001ECE CA A7 17 00         B     8    				jp z,os_no_start_addr			001ED2 D5                  B     9    				push de
001ED3 DDE1                B    10    				pop ix							                           B    11    			
001ED5 CD 2F 1E 00         B    12    wmblp			call hexword_or_bust			001ED9 28 07               B    13    				jr z,os_ccmdn
001EDB DD7300              B    14    				ld (ix),e						001EDE DD23                B    15    				inc ix
001EE0 18 F3               B    16    				jr wmblp
                           B    17    
001EE2 AF                  B    18    os_ccmdn		xor a
001EE3 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EE4 FD21 CB 24 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001EE9 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001EED CD 2F 1E 00         B     9    os_cmd_d_go		call hexword_or_bust			001EF1 28 05               B    10    				jr z,d_no_hex					001EF3 ED53 42 2A 00       B    11    				ld (dis_addr),de
                           B    12    				
001EF8 3A F4 6B 00         B    13    d_no_hex		ld a,(charmap_rows)				001EFC D602                B    14    				sub a,2
001EFE 47                  B    15    				ld b,a
001EFF C5                  B    16    dis_loop		push bc
                           B    17    				
001F00 DD2A 42 2A 00       B    18    				ld ix,(dis_addr)				001F05 CD AD 24 00         B    19    				call show_ix					001F09 3E20                B    20    				ld a,' '
001F0B CD A1 24 00         B    21    				call show_ascii_char
                           B    22    
001F0F FD21 CB 24 00       B    23    				ld iy,prefix_bits_loc
001F14 FD360000            B    24    				ld (iy),0						001F18 CD 54 1F 00         B    25    				call dis_instr					001F1C DD23                B    26    				inc ix							                           B    27    				
001F1E 3E1A                B    28    				ld a,26							001F20 32 3A 6E 00         B    29    				ld (cursor_pos+1),a				001F24 ED4B 42 2A 00       B    30    				ld bc,(dis_addr)
001F29 DD22 42 2A 00       B    31    				ld (dis_addr),ix				001F2E DDE5                B    32    				push ix
001F30 E1                  B    33    				pop hl
001F31 AF                  B    34    				xor a
001F32 ED42                B    35    				sbc hl,bc						001F34 7D                  B    36    				ld a,l
001F35 E607                B    37    				and 7
001F37 6F                  B    38    				ld l,a
001F38 0A                  B    39    shexoplp		ld a,(bc)						001F39 CD 90 24 00         B    40    				call show_hex_byte
001F3D 3E20                B    41    				ld a,' '
001F3F CD A1 24 00         B    42    				call show_ascii_char
001F43 03                  B    43    				inc bc
001F44 2D                  B    44    				dec l
001F45 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001F47 CD BB 15 00         B    47    				call os_new_line
001F4B C1                  B    48    				pop bc
001F4C 10 B1               B    49    				djnz dis_loop
                           B    50    
001F4E CD BB 15 00         B    51    				call os_new_line
001F52 AF                  B    52    				xor a
001F53 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001F54 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001F57 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001F5B 28 04               B    73    			jr z,z80_list					; T
001F5D FDCB00F6            B    74    			set il_prefix,(iy)				; a
001F61                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001F61 FE40                B    79    			cp 40h
001F63 20 0A               B    80    			jr nz,not_sis
001F65 FDCB00B6            B    81    			res il_prefix,(iy)
001F69 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001F6D 18 28               B    83    			jr set_adl_pf
                           B    84    			
001F6F FE49                B    85    not_sis		cp 49h
001F71 20 0A               B    86    			jr nz,not_lis
001F73 FDCB00B6            B    87    			res il_prefix,(iy)
001F77 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001F7B 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001F7D FE52                B    91    not_lis		cp 52h
001F7F 20 0A               B    92    			jr nz,not_sil
001F81 FDCB00F6            B    93    			set il_prefix,(iy)
001F85 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001F89 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001F8B FE5B                B    97    not_sil		cp 5bh
001F8D 20 11               B    98    			jr nz,not_adl_prefix_byte
001F8F FDCB00F6            B    99    			set il_prefix,(iy)
001F93 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001F97 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001F9B DD23                B   103    			inc ix
001F9D DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001FA0                     B   108    not_adl_prefix_byte			
                           B   109    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FA0 FECB                B   110    			cp 0cbh								001FA2 20 08               B   111    			jr nz,not_cb
001FA4 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001FA8 DD23                B   113    			inc ix
001FAA 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001FAC FEED                B   116    not_cb		cp 0edh
001FAE 20 08               B   117    			jr nz,not_ed
001FB0 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001FB4 DD23                B   119    			inc ix
001FB6 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001FB8 FEDD                B   122    not_ed		cp 0ddh
001FBA 20 18               B   123    			jr nz,not_dd
001FBC CD EF 21 00         B   124    do_dd		call check_nxt_byte_prefix			001FC0 28 92               B   125    			jr z,dis_instr						001FC2 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001FC6 FECB                B   127    xdcb_query	cp 0cbh								001FC8 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001FCA FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001FCE DD23                B   130    			inc ix								001FD0 DD23                B   131    			inc ix								001FD2 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001FD4 FEFD                B   134    not_dd		cp 0fdh
001FD6 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001FD8 CD EF 21 00         B   136    do_fd		call check_nxt_byte_prefix
001FDC CA 54 1F 00         B   137    			jr z,dis_instr	
001FE0 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001FE4 18 E0               B   139    			jr xdcb_query
                           B   140    
001FE6                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001FE6 DD7E00              B   145    			ld a,(ix)	
001FE9 E6C0                B   146    			and 11000000b			; seperate 
001FEB 07                  B   147    			rlca
001FEC 07                  B   148    			rlca
001FED FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001FF0 DD7E00              B   151    			ld a,(ix)
001FF3 E638                B   152    			and 00111000b
001FF5 CB3F                B   153    			srl a
001FF7 CB3F                B   154    			srl a
001FF9 CB3F                B   155    			srl a	
001FFB FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001FFE DD7E00              B   158    			ld a,(ix)
002001 E607                B   159    			and 00000111b
002003 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002006 DD7E00              B   162    			ld a,(ix)
002009 E630                B   163    			and 00110000b
00200B CB3F                B   164    			srl a
00200D CB3F                B   165    			srl a
00200F CB3F                B   166    			srl a
002011 CB3F                B   167    			srl a
002013 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
002016 DD7E00              B   170    			ld a,(ix)
002019 E608                B   171    			and 00001000b
00201B CB3F                B   172    			srl a
00201D CB3F                B   173    			srl a
00201F CB3F                B   174    			srl a
002021 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
002024 CD FD 21 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
002028 78                  B   181    index_table	ld a,b							; a
002029 B7                  B   182    			or a
00202A 28 07               B   183    			jr z,parse_instr				; m
00202C CB7E                B   184    d_filp		bit 7,(hl)						; w
00202E 23                  B   185    			inc hl							; o
00202F 28 FB               B   186    			jr z,d_filp					
002031 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
002033 FD21 CB 24 00       B   190    parse_instr	ld iy,opcode_vars
002038 01000000            B   191    			ld bc,0
00203C 7E                  B   192    			ld a,(hl)						;ge
00203D FE80                B   193    			cp 80h
00203F C8                  B   194    			ret z
002040 E67F                B   195    			and 7fh
                           B   196    			
002042 FE26                B   197    			cp '&'							;sy
002044 20 28               B   198    			jr nz,not_adlsym
002046 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
00204A CA D8 21 00         B   200    			jr z,next_opcode_ascii_char
00204E 0600                B   201    			ld b,0
002050 FDCB006E            B   202    			bit dot_l_prefix,(iy)
002054 28 02               B   203    			jr z,naplsb
002056 CBC0                B   204    			set 0,b
002058 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
00205C 28 02               B   206    			jr z,napmsb
00205E CBC8                B   207    			set 1,b
002060 E5                  B   208    napmsb		push hl
002061 21 2A 2A 00         B   209    			ld hl,adl_prefix_list
002065 CD 28 20 00         B   210    			call index_table				; r
002069 E1                  B   211    			pop hl
00206A C3 D8 21 00         B   212    			jp next_opcode_ascii_char
                           B   213    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00206E FE5E                B   214    not_adlsym	cp '^'							;sy
002070 20 0D               B   215    			jr nz,d_not_imm8
002072 DD23                B   216    			inc ix							;th
002074 DD7E00              B   217    			ld a,(ix)
002077 CD 90 24 00         B   218    			call show_hex_byte
00207B C3 D8 21 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
00207F FE21                B   221    d_not_imm8	cp '!'							;sy
002081 20 26               B   222    			jr nz,d_not_imm16					002083 11020000            B   223    			ld de,2
002087 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
00208B 28 08               B   225    			jr z,imm16
00208D 13                  B   226    			inc de
00208E DD7E03              B   227    			ld a,(ix+3)
002091 CD 90 24 00         B   228    			call show_hex_byte
002095 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
002098 CD 90 24 00         B   230    			call show_hex_byte			
00209C DD7E01              B   231    			ld a,(ix+1)						;th
00209F CD 90 24 00         B   232    			call show_hex_byte
0020A3 DD19                B   233    			add ix,de						;ad
0020A5 C3 D8 21 00         B   234    			jp next_opcode_ascii_char
                           B   235    
0020A9 FE2F                B   236    d_not_imm16	cp '/'							;sy
0020AB 20 36               B   237    			jr nz,d_not_sb
0020AD FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
0020B1 28 05               B   239    			jr z,norm_dbyte
0020B3 DD7EFF              B   240    			ld a,(ix-1)						;if
0020B6 18 05               B   241    			jr xdcb_dbyte
0020B8 DD23                B   242    norm_dbyte	inc ix
0020BA DD7E00              B   243    			ld a,(ix)						;th
0020BD CB7F                B   244    xdcb_dbyte	bit 7,a
0020BF 20 10               B   245    			jr nz,d_sbin					;sh
0020C1 F5                  B   246    			push af
0020C2 3E2B                B   247    			ld a,'+'
0020C4 CD A1 24 00         B   248    			call show_ascii_char
0020C8 F1                  B   249    			pop af
0020C9 CD 90 24 00         B   250    			call show_hex_byte
0020CD C3 D8 21 00         B   251    			jp next_opcode_ascii_char
0020D1 F5                  B   252    d_sbin		push af
0020D2 3E2D                B   253    			ld a,'-'
0020D4 CD A1 24 00         B   254    			call show_ascii_char
0020D8 F1                  B   255    			pop af
0020D9 ED44                B   256    			neg
0020DB CD 90 24 00         B   257    			call show_hex_byte
0020DF C3 D8 21 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
0020E3 FE64                B   260    d_not_sb	cp 'd'							;sy
0020E5 20 1E               B   261    			jr nz,d_not_pcdip
0020E7 DD23                B   262    			inc ix
0020E9 01000000            B   263    			ld bc,0
0020ED DD7E00              B   264    			ld a,(ix)
0020F0 CB7F                B   265    			bit 7,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020F2 28 01               B   266    			jr z,d_spcd_pos
0020F4 0B                  B   267    			dec bc
0020F5 4F                  B   268    d_spcd_pos	ld c,a
0020F6 03                  B   269    			inc bc
0020F7 DDE5                B   270    			push ix
0020F9 DD09                B   271    			add ix,bc
0020FB CD AD 24 00         B   272    			call show_ix
0020FF DDE1                B   273    			pop ix
002101 C3 D8 21 00         B   274    			jp next_opcode_ascii_char
                           B   275    
002105 FE3E                B   276    d_not_pcdip	cp '>'							;sy
002107 20 16               B   277    			jr nz,d_not_sdig
002109 23                  B   278    			inc hl							;th
00210A 01000000            B   279    			ld bc,0
00210E 4E                  B   280    			ld c,(hl)
00210F FD21 CB 24 00       B   281    			ld iy,opcode_vars
002114 FD09                B   282    			add iy,bc
002116 FD7E00              B   283    			ld a,(iy)						;a 
002119 C630                B   284    			add a,30h						;co
00211B C3 D4 21 00         B   285    			jp d_output_char
                           B   286    
00211F FE5F                B   287    d_not_sdig	cp '_'
002121 20 12               B   288    			jr nz,d_nhlsubst				; s
002123 E5                  B   289    			push hl
002124 21 02 2A 00         B   290    			ld hl,hl_subs
002128 CD E0 21 00         B   291    hl_subst	call prefix_to_offset
00212C CD 28 20 00         B   292    			call index_table				; r
002130 E1                  B   293    			pop hl
002131 C3 D8 21 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002135 FE7C                B   296    d_nhlsubst	cp '|'
002137 20 07               B   297    			jr nz,d_noinvhls
002139 E5                  B   298    			push hl
00213A 21 08 2A 00         B   299    			ld hl,inv_hl_subs
00213E 18 E8               B   300    			jr hl_subst
                           B   301    			
002140 FE68                B   302    d_noinvhls	cp 'h'							;sy
002142 20 07               B   303    			jr nz,d_nhsubst
002144 E5                  B   304    			push hl
002145 21 0E 2A 00         B   305    			ld hl,h_subs
002149 18 DD               B   306    			jr hl_subst
                           B   307    			
00214B FE6C                B   308    d_nhsubst	cp 'l'							;sy
00214D 20 07               B   309    			jr nz,d_nlsubst
00214F E5                  B   310    			push hl
002150 21 15 2A 00         B   311    			ld hl,l_subs
002154 18 D2               B   312    			jr hl_subst
                           B   313    			
002156 FE24                B   314    d_nlsubst	cp '$'
002158 20 07               B   315    			jr nz,d_nihlsubst				; s
00215A E5                  B   316    			push hl
00215B 21 1C 2A 00         B   317    			ld hl,ind_hl_subs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00215F 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002161                     B   321    d_nihlsubst	
                           B   322    
002161 FE7E                B   323    			cp '~'							; s
002163 20 1F               B   324    			jr nz,ntable_r
002165 11 57 29 00         B   325    			ld de,table_r
002169 23                  B   326    do_table 	inc hl
00216A 01000000            B   327    			ld bc,0							; t
00216E 4E                  B   328    			ld c,(hl)
00216F FD21 CB 24 00       B   329    			ld iy,opcode_vars
002174 FD09                B   330    			add iy,bc
002176 FD4600              B   331    			ld b,(iy)						;in
002179 E5                  B   332    			push hl
00217A EB                  B   333    			ex de,hl
00217B CD 28 20 00         B   334    			call index_table				; r
00217F E1                  B   335    			pop hl
002180 C3 D8 21 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002184 11 62 29 00         B   338    ntable_r	ld de,table_r2					; s
002188 FE3D                B   339    			cp '='
00218A 28 DD               B   340    			jr z,do_table
                           B   341    			
00218C 11 6D 29 00         B   342    			ld de,table_rp					; s
002190 FE40                B   343    			cp '@'
002192 28 D5               B   344    			jr z,do_table 
                           B   345    			
002194 11 74 29 00         B   346    			ld de,table_rp2					; s
002198 FE2A                B   347    			cp '*'
00219A 28 CD               B   348    			jr z,do_table
                           B   349    			
00219C 11 DA 29 00         B   350    			ld de,table_rp3					; s
0021A0 FE3C                B   351    			cp '<'
0021A2 28 C5               B   352    			jr z,do_table
                           B   353    			
0021A4 11 E2 29 00         B   354    			ld de,table_rp4					; s
0021A8 FE7D                B   355    			cp '}'
0021AA 28 BD               B   356    			jr z,do_table
                           B   357    			
0021AC 11 7C 29 00         B   358    			ld de,table_cc					; s
0021B0 FE23                B   359    			cp '#'
0021B2 28 B5               B   360    			jr z,do_table 
                           B   361    			
0021B4 11 88 29 00         B   362    			ld de,table_alu					; s
0021B8 FE3A                B   363    			cp ':'
0021BA 28 AD               B   364    			jr z,do_table 
                           B   365    			
0021BC 11 B4 29 00         B   366    			ld de,table_rot					; s
0021C0 FE25                B   367    			cp '%'
0021C2 28 A5               B   368    			jr z,do_table 
                           B   369    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021C4 11 F2 29 00         B   370    			ld de,table_rst					; s
0021C8 FE3B                B   371    			cp ';'
0021CA 28 9D               B   372    			jr z,do_table 
                           B   373    
0021CC 11 EA 29 00         B   374    			ld de,table_rp5					; s
0021D0 FE7B                B   375    			cp '{'
0021D2 28 95               B   376    			jr z,do_table 
                           B   377    
0021D4                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0021D4                     B   382    d_output_char
                           B   383    
0021D4 CD A1 24 00         B   384    			call show_ascii_char
                           B   385    
0021D8                     B   386    next_opcode_ascii_char
                           B   387    
0021D8 CB7E                B   388    			bit 7,(hl)						;if
0021DA C0                  B   389    			ret nz
0021DB 23                  B   390    			inc hl
0021DC C3 33 20 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0021E0                     B   397    prefix_to_offset
                           B   398    
0021E0 0602                B   399    			ld b,2							;se
0021E2 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0021E6 C0                  B   401    			ret nz
0021E7 05                  B   402    			dec b
0021E8 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0021EC C0                  B   404    			ret nz
0021ED 05                  B   405    			dec b
0021EE C9                  B   406    			ret
                           B   407    			
                           B   408    			
0021EF                     B   409    check_nxt_byte_prefix			
                           B   410    
0021EF DD23                B   411    			inc ix
0021F1 DD7E00              B   412    			ld a,(ix)
0021F4 FEDD                B   413    			cp 0ddh
0021F6 C8                  B   414    			ret z
0021F7 FEED                B   415    			cp 0edh
0021F9 C8                  B   416    			ret z
0021FA FEFD                B   417    			cp 0fdh
0021FC C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0021FD                     B   428    find_instruction_ascii
                           B   429    
0021FD 0600                B   430    			ld b,0						; defau
                           B   431    
0021FF FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
002203 28 12               B   433    			jr z,not_ddcb_fdcb_inst
002205 21 31 29 00         B   434    			ld hl,ddcb_fdcb_z6		
002209 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
00220C FD7E 03             B   436    			ld a,(iy+var_z)
00220F FE06                B   437    			cp 6
002211 C8                  B   438    			ret z
002212 21 F9 28 00         B   439    			ld hl,ddcb_fdcb_zn6					002216 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002217                     B   444    not_ddcb_fdcb_inst
                           B   445    
002217 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
00221B 28 08               B   447    			jr z,not_cb_inst
00221D 21 81 26 00         B   448    			ld hl,cb_group		
002221 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
002224 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002225                     B   454    not_cb_inst
                           B   455    
002225 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
002229 CA 4A 23 00         B   457    			jr z,not_ed_inst
                           B   458    
00222D FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
002230 B7                  B   460    			or a
002231 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
002233 FD7E 03             B   464    			ld a,(iy+var_z)				
002236 B7                  B   465    			or a
002237 20 0D               B   466    			jr nz,notedx0z0
002239 21 A8 26 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
00223D FD7E 02             B   468    			ld a,(iy+var_y)
002240 FE06                B   469    			cp 6
002242 C0                  B   470    			ret nz
002243 0601                B   471    			ld b,1
002245 C9                  B   472    			ret
                           B   473    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002246 FE01                B   474    notedx0z0	cp 1
002248 20 0D               B   475    			jr nz,notedx0z1
00224A 21 B9 26 00         B   476    			ld hl,ed_x0_z1				;x0 / z
00224E FD7E 02             B   477    			ld a,(iy+var_y)
002251 FE06                B   478    			cp 6
002253 C0                  B   479    			ret nz
002254 0601                B   480    			ld b,1
002256 C9                  B   481    			ret
                           B   482    
002257 FE02                B   483    notedx0z1	cp 2
002259 20 05               B   484    			jr nz,notedx0z2
00225B 21 CF 26 00         B   485    			ld hl,ed_x0_z2				;x0 / z
00225F C9                  B   486    			ret
                           B   487    
002260 FE03                B   488    notedx0z2	cp 3
002262 20 05               B   489    			jr nz,notedx0z3
002264 21 DB 26 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002268 C9                  B   491    			ret
                           B   492    			
002269 FE04                B   493    notedx0z3	cp 4
00226B 20 05               B   494    			jr nz,notedx0z4
00226D 21 E7 26 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002271 C9                  B   496    			ret
                           B   497    
002272 FE06                B   498    notedx0z4	cp 6
002274 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002276 21 F1 26 00         B   500    			ld hl,ed_x0_z6
00227A C9                  B   501    			ret
                           B   502    
00227B FE07                B   503    notedx0z6	cp 7
00227D C2 54 29 00         B   504    			jr nz,bad_opcode			;x0 / z
002281 21 FC 26 00         B   505    			ld hl,ed_x0_z7
002285 FD46 05             B   506    			ld b,(iy+var_q)
002288 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002289 FE01                B   511    notedx0		cp 1	
00228B 20 68               B   512    			jr nz,ed_xn1
                           B   513    
00228D FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002290 B7                  B   515    			or a
002291 20 0D               B   516    			jr nz,ed_x1_zn0
002293 21 11 27 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002297 FD7E 02             B   518    			ld a,(iy+var_y)
00229A FE06                B   519    			cp 6
00229C C0                  B   520    			ret nz
00229D 0601                B   521    			ld b,1
00229F C9                  B   522    			ret
                           B   523    			
0022A0 FE01                B   524    ed_x1_zn0	cp 1
0022A2 20 0D               B   525    			jr nz,ed_x1_zn1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022A4 21 21 27 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
0022A8 FD7E 02             B   527    			ld a,(iy+var_y)
0022AB FE06                B   528    			cp 6
0022AD C0                  B   529    			ret nz
0022AE 0601                B   530    			ld b,1
0022B0 C9                  B   531    			ret
                           B   532    		
0022B1 FE02                B   533    ed_x1_zn1	cp 2
0022B3 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0022B5 21 36 27 00         B   535    			ld hl,ed_x1_z2	
0022B9 FD46 05             B   536    			ld b,(iy+var_q)
0022BC C9                  B   537    			ret
                           B   538    
0022BD FE03                B   539    ed_x1_zn2	cp 3
0022BF 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0022C1 21 4C 27 00         B   541    			ld hl,ed_x1_z3	
0022C5 FD46 05             B   542    			ld b,(iy+var_q)
0022C8 C9                  B   543    			ret
                           B   544    			
0022C9 FE04                B   545    ed_x1_zn3	cp 4							;z 
0022CB 20 08               B   546    			jr nz,ed_x1_zn4
0022CD 21 61 27 00         B   547    			ld hl,ed_x1_z4
0022D1 FD46 02             B   548    			ld b,(iy+var_y)
0022D4 C9                  B   549    			ret
                           B   550    			
0022D5 FE05                B   551    ed_x1_zn4	cp 5
0022D7 20 08               B   552    			jr nz,ed_x1_zn5
0022D9 21 99 27 00         B   553    			ld hl,ed_x1_z5					;z 
0022DD FD46 02             B   554    			ld b,(iy+var_y)
0022E0 C9                  B   555    			ret
                           B   556    			
0022E1 FE06                B   557    ed_x1_zn5	cp 6
0022E3 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0022E5 21 C8 27 00         B   559    			ld hl,ed_x1_z6
0022E9 FD46 02             B   560    			ld b,(iy+var_y)
0022EC C9                  B   561    			ret
                           B   562    			
0022ED 21 ED 27 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0022F1 FD46 02             B   564    			ld b,(iy+var_y)
0022F4 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0022F5 FE02                B   569    ed_xn1		cp 2
0022F7 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0022F9 FD46 02             B   572    			ld b,(iy+var_y)
0022FC FD7E 03             B   573    			ld a,(iy+var_z)
0022FF B7                  B   574    			or a
002300 20 05               B   575    			jr nz,edx2zn0
002302 21 11 28 00         B   576    			ld hl,ed_x2_z0					;x=
002306 C9                  B   577    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   578    
002307 FE01                B   579    edx2zn0		cp 1
002309 20 05               B   580    			jr nz,edx2zn1
00230B 21 2B 28 00         B   581    			ld hl,ed_x2_z1					;x=
00230F C9                  B   582    			ret
                           B   583    
002310 FE02                B   584    edx2zn1		cp 2
002312 20 05               B   585    			jr nz,edx2zn2
002314 21 45 28 00         B   586    			ld hl,ed_x2_z2					;x=
002318 C9                  B   587    			ret
                           B   588    
002319 FE03                B   589    edx2zn2		cp 3
00231B 20 05               B   590    			jr nz,edx2zn3
00231D 21 75 28 00         B   591    			ld hl,ed_x2_z3					;x=
002321 C9                  B   592    			ret
                           B   593    
002322 21 A7 28 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002326 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002327 FE03                B   599    ed_xn2		cp 3
002329 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
00232B FD46 02             B   602    			ld b,(iy+var_y)
00232E FD7E 03             B   603    			ld a,(iy+var_z)
002331 FE02                B   604    			cp 2
002333 20 05               B   605    			jr nz,edx3zn2
002335 21 DD 28 00         B   606    			ld hl,ed_x3_z2					;x=
002339 C9                  B   607    			ret
00233A FE03                B   608    edx3zn2		cp 3
00233C 20 05               B   609    			jr nz,edx3zn3
00233E 21 EB 28 00         B   610    			ld hl,ed_x3_z3					;x=
002342 C9                  B   611    			ret
                           B   612    
002343                     B   613    edx3zn3
                           B   614    
002343                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
002343                     B   619    invalid_op
002343 21 54 29 00         B   620    			ld hl,bad_opcode				; x
002347 0600                B   621    			ld b,0
002349 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
00234A FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
00234D B7                  B   629    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00234E C2 E6 23 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002352 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002355 B7                  B   636    			or a
002356 20 14               B   637    			jr nz,x0_z_not_zero
002358 21 D3 24 00         B   638    			ld hl,x0_z0
00235C FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
00235F 47                  B   640    			ld b,a
002360 D604                B   641    			sub 4
002362 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002365 78                  B   643    			ld a,b
002366 FE04                B   644    			cp 4
002368 D8                  B   645    			ret c
002369 0604                B   646    			ld b,4						;if y >
00236B C9                  B   647    			ret
                           B   648    			
00236C                     B   649    x0_z_not_zero		
                           B   650    			
00236C FE01                B   651    			cp 1
00236E 20 1A               B   652    			jr nz,x0_z_not_one
002370 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002373 FE06                B   654    			cp 6
002375 20 0B               B   655    			jr nz,x0z1yn6
002377 CD 86 24 00         B   656    			call test_ixiy_prefix		;if y=6
00237B 28 05               B   657    			jr z,x0z1yn6				;altern
00237D 21 06 25 00         B   658    			ld hl,x0_z1_y6
002381 C9                  B   659    			ret
                           B   660    
002382 21 F3 24 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002386 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002389 C9                  B   663    			ret 
                           B   664    			
00238A                     B   665    x0_z_not_one
                           B   666    
00238A FE02                B   667    			cp 2
00238C 20 08               B   668    			jr nz,x0_z_not_two
00238E 21 0E 25 00         B   669    			ld hl,x0_z2
002392 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002395 C9                  B   671    			ret
                           B   672    			
002396                     B   673    x0_z_not_two
                           B   674    
002396 FE03                B   675    			cp 3
002398 20 08               B   676    			jr nz,x0_z_not_three
00239A 21 5A 25 00         B   677    			ld hl,x0_z3
00239E FD46 05             B   678    			ld b,(iy+var_q)				;q is t
0023A1 C9                  B   679    			ret
                           B   680    			
0023A2                     B   681    x0_z_not_three
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   682    
0023A2 FE04                B   683    			cp 4
0023A4 20 05               B   684    			jr nz,x0_z_not_four
0023A6 21 6A 25 00         B   685    			ld hl,x0_z4					;no ini
0023AA C9                  B   686    			ret			
                           B   687    			
0023AB                     B   688    x0_z_not_four
                           B   689    
0023AB FE05                B   690    			cp 5
0023AD 20 05               B   691    			jr nz,x0_z_not_five
0023AF 21 72 25 00         B   692    			ld hl,x0_z5					;no ini
0023B3 C9                  B   693    			ret				
                           B   694    			
0023B4                     B   695    x0_z_not_five
                           B   696    
0023B4 FE06                B   697    			cp 6
0023B6 20 1A               B   698    			jr nz,x0_z_not_six
0023B8 21 7A 25 00         B   699    			ld hl,x0_z6					;normal
0023BC FD7E 02             B   700    			ld a,(iy+var_y)
0023BF FE07                B   701    			cp 7
0023C1 C0                  B   702    			ret nz
0023C2 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0023C6 20 05               B   704    			jr nz,altx0z6
0023C8 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0023CC C8                  B   706    			ret z	
0023CD 21 83 25 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0023D1 C9                  B   708    			ret
                           B   709    
                           B   710    
0023D2                     B   711    x0_z_not_six
                           B   712    			
0023D2 21 8B 25 00         B   713    			ld hl,x0_z7					;x=0, z
0023D6 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0023D9 CD 86 24 00         B   715    			call test_ixiy_prefix
0023DD C8                  B   716    			ret z
0023DE 21 A5 25 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0023E2 FD46 05             B   718    			ld b,(iy+var_q)				;this i
0023E5 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
0023E6 FE01                B   723    x_not_zero	cp 1						; is x 
0023E8 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0023EA 21 B7 25 00         B   726    			ld hl,x1_table				; x=1
0023EE CD 86 24 00         B   727    			call test_ixiy_prefix
0023F2 20 11               B   728    			jr nz,pref_x1
0023F4 FD7E 02             B   729    			ld a,(iy+var_y)
0023F7 FE06                B   730    			cp 6
0023F9 C0                  B   731    			ret nz
0023FA FD7E 03             B   732    			ld a,(iy+var_z)
0023FD FE06                B   733    			cp 6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0023FF C0                  B   734    			ret nz
002400 21 D5 25 00         B   735    			ld hl,x1_y6_z6				;if y=6
002404 C9                  B   736    			ret
                           B   737    
002405 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
002408 FE06                B   739    			cp 6
00240A 20 05               B   740    			jr nz,x1yn6
00240C 21 C1 25 00         B   741    			ld hl,x1_y6
002410 C9                  B   742    			ret
                           B   743    			
002411 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
002414 FE06                B   745    			cp 6
002416 C0                  B   746    			ret nz
002417 21 CB 25 00         B   747    			ld hl,x1_z6
00241B C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
00241C FE02                B   752    x_not_one	cp 2						; is x 
00241E 20 05               B   753    			jr nz,x_not_two
002420 21 D9 25 00         B   754    			ld hl,x2_table				; no in
002424 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002425 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002428 B7                  B   760    			or a
002429 20 05               B   761    			jr nz,x3_z_not_zero
00242B 21 DE 25 00         B   762    			ld hl,x3_z0					; no in
00242F C9                  B   763    			ret
                           B   764    						
002430                     B   765    x3_z_not_zero
                           B   766    
002430 FE01                B   767    			cp 1
002432 20 11               B   768    			jr nz,x3_z_not_one
002434 21 E6 25 00         B   769    			ld hl,x3_z1_q0
002438 FD7E 05             B   770    			ld a,(iy+var_q)
00243B B7                  B   771    			or a
00243C C8                  B   772    			ret z						; no in
00243D 21 EE 25 00         B   773    			ld hl,x3_z1_q1
002441 FD46 04             B   774    			ld b,(iy+var_p)				; index
002444 C9                  B   775    			ret
                           B   776    
002445                     B   777    x3_z_not_one
                           B   778    
002445 FE02                B   779    			cp 2
002447 20 05               B   780    			jr nz,x3_z_not_two
002449 21 05 26 00         B   781    			ld hl,x3_z2					;no ini
00244D C9                  B   782    			ret
                           B   783    
00244E                     B   784    x3_z_not_two
                           B   785    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00244E FE03                B   786    			cp 3
002450 20 08               B   787    			jr nz,x3_z_not_three
002452 21 0E 26 00         B   788    			ld hl,x3_z3
002456 FD46 02             B   789    			ld b,(iy+var_y)				;index 
002459 C9                  B   790    			ret
                           B   791    
00245A                     B   792    x3_z_not_three
                           B   793    
00245A FE04                B   794    			cp 4
00245C 20 05               B   795    			jr nz,x3_z_not_four
00245E 21 43 26 00         B   796    			ld hl,x3_z4				;no initial
002462 C9                  B   797    			ret						
                           B   798    
                           B   799    
002463                     B   800    x3_z_not_four
                           B   801    
002463 FE05                B   802    			cp 5
002465 20 11               B   803    			jr nz,x3_z_not_five
002467 21 4E 26 00         B   804    			ld hl,x3_z5_q0
00246B FD7E 05             B   805    			ld a,(iy+var_q)
00246E B7                  B   806    			or a
00246F C8                  B   807    			ret z						;no ind
002470 21 57 26 00         B   808    			ld hl,x3_z5_q1
002474 FD46 04             B   809    			ld b,(iy+var_p)				;else i
002477 C9                  B   810    			ret
                           B   811    
002478                     B   812    x3_z_not_five
                           B   813    
002478 FE06                B   814    			cp 6
00247A 20 05               B   815    			jr nz,x3_z_not_six
00247C 21 75 26 00         B   816    			ld hl,x3_z6					;no ind
002480 C9                  B   817    			ret
                           B   818    
002481                     B   819    x3_z_not_six
                           B   820    
002481 21 79 26 00         B   821    			ld hl,x3_z7					;x=3, z
002485 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002486                     B   827    test_ixiy_prefix
                           B   828    
002486 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00248A C0                  B   830    			ret nz
00248B FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00248F C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002490                     B   837    show_hex_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   838    
002490 E5                  B   839    			push hl
002491 21 3D 2A 00         B   840    			ld hl,output_byte_txt
002495 E5                  B   841    			push hl
002496 CD 5E 12 00         B   842    			call hexbyte_to_ascii
00249A E1                  B   843    			pop hl
00249B CD 15 11 00         B   844    			call os_print_string
00249F E1                  B   845    			pop hl
0024A0 C9                  B   846    			ret
                           B   847    			
                           B   848    
0024A1                     B   849    show_ascii_char
                           B   850    
0024A1 E5                  B   851    			push hl
0024A2 21 40 2A 00         B   852    			ld hl,output_char_txt
0024A6 77                  B   853    			ld (hl),a
0024A7 CD 15 11 00         B   854    			call os_print_string
0024AB E1                  B   855    			pop hl
0024AC C9                  B   856    			ret
                           B   857    		
                           B   858    		
0024AD DD22 3A 2A 00       B   859    show_ix		ld (d_work_address),ix
0024B2 3A 3C 2A 00         B   860    			ld a,(d_work_address+2)
0024B6 CD 90 24 00         B   861    			call show_hex_byte
0024BA 3A 3B 2A 00         B   862    			ld a,(d_work_address+1)
0024BE CD 90 24 00         B   863    			call show_hex_byte
0024C2 3A 3A 2A 00         B   864    			ld a,(d_work_address)
0024C6 CD 90 24 00         B   865    			call show_hex_byte
0024CA C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0024CB                     B   896    opcode_vars
                           B   897    
0024CB 00                  B   898    prefix_bits_loc	db 0	
0024CC 00                  B   899    var_x_loc		db 0	
0024CD 00                  B   900    var_y_loc		db 0	
0024CE 00                  B   901    var_z_loc		db 0	
0024CF 00                  B   902    var_p_loc		db 0	
0024D0 00                  B   903    var_q_loc		db 0
0024D1 00                  B   904    var_calc_loc	db 0
0024D2 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0024D3 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0024D6 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0024DE A7 
0024DF 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0024E6 4A522064 80         B   922    			db 'JR ','d',80h			; y3
0024EB 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0024F3 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0024F9 2C2180 
0024FC 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
002504 04 80 
002506 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
00250E 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002516 2CC1 
002518 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
002520 43A9 
002522 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
00252A 2CC1 
00252C 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
002534 45A9 
002536 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
00253E DF 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00253F 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002547 A9 
002548 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002550 C1 
002551 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
002559 A9 
                           B   937    
00255A 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002561 80 
002562 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002569 80 
                           B   940    			
00256A 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002571 80 
                           B   942    
002572 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002579 80 
                           B   944    			
00257A 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002580 2C5E80 
002583 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00258B 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00258F 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002593 524CC1              B   950    			db 'RL','A'+80h			;y=2
002596 5252C1              B   951    			db 'RR','A'+80h			;y=3
002599 4441C1              B   952    			db 'DA','A'+80h			;y=4
00259C 4350CC              B   953    			db 'CP','L'+80h			;y=5
00259F 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
0025A2 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
0025A5 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
0025AB 2C2480 
0025AE 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
0025B6 80 
                           B   959    		
                           B   960    
                           B   961    
0025B7 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
0025BD 2C7E 03 80 
0025C1 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0025C7 2C3D 03 80 
0025CB 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		0025D1 2C7E 03 80 
                           B   965    
0025D5 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
0025D9 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   973    		
0025DE 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0025E5 80 
                           B   975    
0025E6 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0025ED 80 
0025EE 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0025F3 4558D8              B   978    			db 'EX','X'+80h			;p=1
0025F6 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0025FC 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
002604 80 
                           B   981    
002605 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
00260B 2C2180 
                           B   983    
00260E 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
002614 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
00261B 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
002623 C1 
002624 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
00262C 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
002634 2C5F80 
002637 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
00263F 44C9                B   990    			db 'D','I'+80h			;y = 6
002641 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
002643 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
00264B 2C2180 
                           B   994    
00264E 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002656 80 
002657 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
00265F 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002666 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
00266D 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002675 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002679 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002680 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002681 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002687 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
00268E 2C7E 03 80 
002692 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002699 2C7E 03 80 
00269D 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
0026A4 2C7E 03 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
0026A8 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
0026AE 2C285EA9 
0026B2 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0026B9 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0026C1 2C7E 02 80 
0026C5 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0026CD 5FA9 
                           B  1022    
0026CF 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0026D6 2C49582F 80 
0026DB 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0026E2 2C49592F 80 
0026E7 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0026EF 02 80 
                           B  1026    
0026F1 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0026F9 7D 04 80 
                           B  1028    
0026FC 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	002702 2C285FA9 
002706 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		00270E 3C 04 80 
                           B  1031    
002711 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002716 2C284243 A9 
00271B 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
002721 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
002729 2C7E 02 80 
00272D 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002735 B0 
                           B  1037    
002736 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		00273E 40 04 80 
002741 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		002749 40 04 80 
                           B  1040    
00274C 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002754 40 04 80 
002757 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	00275D 2C2821A9 
                           B  1043    
002761 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002764 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00276A 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002772 49592F80 
002776 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00277C 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002784 80 
002785 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00278B 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002793 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002799 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00279F 52455449 2680       B  1054    				db 'RETI&',80h				;y=
0027A5 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
0027AD 49582F80 
0027B1 BF                  B  1056    				db '?'+80h					;y=
0027B2 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0027BA 80 
0027BB 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0027C2 BF                  B  1059    				db '?'+80h					;y=
0027C3 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0027C8 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0027CC BF                  B  1064    				db '?'+80h					;y=
0027CD 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0027D1 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0027D5 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0027DD 80 
0027DE 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0027E5 534CD0              B  1069    				db 'SL','P'+80h				;y=
0027E8 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0027ED 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0027F3 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0027F9 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0027FF 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
002805 5252C4              B  1076    				db 'RR','D'+80h				;y=
002808 524CC4              B  1077    				db 'RL','D'+80h				;y=
00280B 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
00280E 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002811 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002815 4C444926 80         B  1083    				db 'LDI&',80h					00281A 4C444426 80         B  1084    				db 'LDD&',80h					00281F 4C444952 2680       B  1085    				db 'LDIR&',80h					002825 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
00282B BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
00282F 43504926 80         B  1089    				db 'CPI&',80h					002834 43504426 80         B  1090    				db 'CPD&',80h					002839 43504952 2680       B  1091    				db 'CPIR&',80h					00283F 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002845 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
00284B 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002851 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002858 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
00285F 494E4926 80         B  1098    				db 'INI&',80h		; y4
002864 494E4426 80         B  1099    				db 'IND&',80h		; y5
002869 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
00286F 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002875 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00287B 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002881 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002888 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00288F 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002895 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00289B 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
0028A1 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
0028A7 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
0028AD 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
0028B3 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0028BA 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0028C1 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0028C8 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0028CF 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0028D6 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0028DD 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0028E4 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0028EB 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0028F2 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0028F9 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0028FF 2C25 02 202480 
002905 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		00290C 2C2480 
00290F 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002915 2C524553 26203E 02 
00291D 2C2480 
002920 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002926 2C534554 26203E 02 
00292E 2C2480 
                           B  1137    
002931 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002936 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		00293D 2C2480 
002940 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002947 2C2480 
00294A 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002951 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002954 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002957 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00295F 2480C1 
                           B  1151    
002962 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00296A 2480C1 
                           B  1153    
00296D 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002974 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
00297C 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002984 50C5D0CD 
                           B  1159    	
002988 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002990 44432620 41AC5355 
002998 4226A053 42432041 
0029A0 26AC 
0029A2 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
0029AA 26A04F52 26A04350 
0029B2 26A0 
                           B  1162    			
0029B4 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0029BC 2680524C 26805252 
0029C4 2680 
0029C6 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0029CE 2680534C 4C268053 
0029D6 524C2680 
                           B  1165    	
0029DA 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0029E2 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0029EA 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0029F2 30B0                B  1172    table_rst	db '0','0'+80h
0029F4 30B8                B  1173    			db '0','8'+80h
0029F6 31B0                B  1174    			db '1','0'+80h
0029F8 31B8                B  1175    			db '1','8'+80h
0029FA 32B0                B  1176    			db '2','0'+80h
0029FC 32B8                B  1177    			db '2','8'+80h	
0029FE 33B0                B  1178    			db '3','0'+80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002A00 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
002A02 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
002A08 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
002A0E C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002A15 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
002A1C 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
002A24 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
002A2A                     B  1198    adl_prefix_list
                           B  1199    
002A2A 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
002A32 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
002A3A 000000              B  1204    d_work_address	dw24 0
                           B  1205    
002A3D 2D2D00              B  1206    output_byte_txt	db "--",0
002A40 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
002A42 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002A45 CD 2F 18 00         B     6    os_cmd_del		call os_check_volume_format	
002A49 C0                  B     7    				ret nz
                           B     8    			
002A4A CD 2C 3E 00         B     9    				call os_cache_original_vol_dir
002A4E CD 57 2A 00         B    10    				call do_del
002A52 CD 17 3E 00         B    11    				call os_restore_original_vol_di
002A56 C9                  B    12    				ret
                           B    13    			
002A57 CD B3 11 00         B    14    do_del			call os_scan_for_non_space		002A5B CA 34 2F 00         B    15    				jp z,missing_args
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B    16    
002A5F AF                  B    17    				xor a							002A60 CD AD 3D 00         B    18    				call os_parse_path_string
002A64 C0                  B    19    				ret nz
002A65 C3 8D 18 00         B    20    				jp os_erase_file				                           B    21    				
                           B    22    				
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.04
                           B     3    ;----------------------------------------------
                           B     4    
002A69 CD 2F 18 00         B     5    os_cmd_dir		call os_check_volume_format	
002A6D C0                  B     6    				ret nz
                           B     7    				
002A6E CD 2C 3E 00         B     8    				call os_cache_original_vol_dir
002A72 CD 7B 2A 00         B     9    				call do_dir
002A76 CD 17 3E 00         B    10    				call os_restore_original_vol_di
002A7A C9                  B    11    				ret
                           B    12    				
002A7B CD B3 11 00         B    13    do_dir			call os_scan_for_non_space		002A7F 28 07               B    14    				jr z,dir_no_args
                           B    15    				
002A81 3E01                B    16    				ld a,1							002A83 CD AD 3D 00         B    17    				call os_parse_path_string
002A87 C0                  B    18    				ret nz
                           B    19    										
002A88 CD 9C 2B 00         B    20    dir_no_args		call div_line
002A8C CD 26 5F 00         B    21    				call fs_get_current_dir_name	002A90 D8                  B    22    				ret c
002A91 C0                  B    23    				ret nz
002A92 CD 15 11 00         B    24    				call os_print_string
002A96 CD 02 1C 00         B    25    				call fs_get_dir_cluster			002A9A 7A                  B    26    				ld a,d
002A9B B3                  B    27    				or e
002A9C 20 08               B    28    				jr nz,dcmdnr
002A9E CD 07 5C 00         B    29    				call fs_get_volume_label
002AA2 CD 15 11 00         B    30    				call os_print_string
002AA6 CD BB 15 00         B    31    dcmdnr			call os_new_line
                           B    32    				
002AAA CD 9C 2B 00         B    33    nrootdir		call div_line
002AAE CD 0C 5B 00         B    34    				call fs_goto_first_dir_entry
002AB2 D8                  B    35    				ret c
002AB3 20 6F               B    36    				jr nz,os_dlr
002AB5 AF                  B    37    				xor a
002AB6 32 3E 6E 00         B    38    				ld (os_linecount),a
                           B    39    				
002ABA CD 23 5B 00         B    40    os_dfllp		call fs_get_dir_entry			002ABE D8                  B    41    				ret c
002ABF 20 63               B    42    				jr nz,os_dlr					002AC1 C5                  B    43    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002AC2 CD 15 11 00         B    44    				call os_print_string			002AC6 CD E6 15 00         B    45    				call os_get_cursor_position		002ACA 060E                B    46    				ld b,14
002ACC CD C6 15 00         B    47    				call os_set_cursor_position	
002AD0 C1                  B    48    				pop bc
002AD1 CB40                B    49    				bit 0,b							002AD3 28 06               B    50    				jr z,os_deif		
002AD5 21 A9 2B 00         B    51    				ld hl,dir_txt					002AD9 18 32               B    52    				jr os_dpl
                           B    53    				
002ADB 21 5F 62 00         B    54    os_deif			ld hl,os_hex_prefix_txt			002ADF CD 15 11 00         B    55    				call os_print_string
002AE3 ED530001 00         B    56    				ld (scratch_pad),de
002AE8 79                  B    57    				ld a,c
002AE9 32030100            B    58    				ld (scratch_pad+3),a
002AED 21 A9 6E 00         B    59    				ld hl,output_line
002AF1 E5                  B    60    				push hl
002AF2 ED5B0201 00         B    61    				ld de,(scratch_pad+2)
002AF7 CD 83 12 00         B    62    				call hexword_to_ascii
002AFB ED5B0001 00         B    63    				ld de,(scratch_pad)
002B00 CD 83 12 00         B    64    				call hexword_to_ascii
002B04 3600                B    65    				ld (hl),0
002B06 E1                  B    66    				pop hl
002B07 0607                B    67    				ld b,7							002B09 CD 3B 12 00         B    68    				call os_skip_leading_ascii_zero
002B0D CD 15 11 00         B    69    os_dpl			call os_print_string
002B11 CD BB 15 00         B    70    				call os_new_line
                           B    71    				
002B15 CD B0 5B 00         B    72    				call fs_goto_next_dir_entry
002B19 20 09               B    73    				jr nz,os_dlr					002B1B CD B9 13 00         B    74    				call os_count_lines
002B1F 3E79                B    75    				ld a,'y'
002B21 B8                  B    76    				cp b
002B22 28 96               B    77    				jr z,os_dfllp
                           B    78    				
002B24 CD 9C 2B 00         B    79    os_dlr			call div_line					002B28 CD 0A 55 00         B    80    				call fs_calc_free_space
002B2C D8                  B    81    				ret c	
                           B    82    				
002B2D CD 3B 2B 00         B    83    				call show_capacity				002B31 21 B9 2B 00         B    84    				ld hl,free_txt
002B35 CD 15 11 00         B    85    				call os_print_string
002B39 AF                  B    86    				xor a
002B3A C9                  B    87    				ret
                           B    88    				
                           B    89    ;----------------------------------------------
                           B    90    
002B3B                     B    91    show_capacity	
                           B    92    
                           B    93    ; set xDE = capacity in KB
                           B    94    ; (trashes all other registers!)
                           B    95    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002B3B DD21 AF 2B 00       B    96    				ld ix,dir_kb_txt
002B40 AF                  B    97    				xor a
002B41 D5                  B    98    				push de
002B42 E1                  B    99    				pop hl
002B43 01241000            B   100    				ld bc,1024h
002B47 ED42                B   101    				sbc hl,bc
002B49 38 0B               B   102    				jr c,showresinkb
002B4B 060A                B   103    				ld b,10
002B4D CD 62 2B 00         B   104    				call shr_de
002B51 DD21 B4 2B 00       B   105    				ld ix,dir_mb_txt
002B56 CD 75 2B 00         B   106    showresinkb		call show_xde_decimal
002B5A DDE5                B   107    				push ix
002B5C E1                  B   108    				pop hl
002B5D CD 15 11 00         B   109    				call os_print_string
002B61 C9                  B   110    				ret
                           B   111    				
                           B   112    ;----------------------------------------------
                           B   113    
                           B   114    ; Set xDE = value to shift
                           B   115    ; Set B = number of places to shift right (0-23
                           B   116    	
002B62 E5                  B   117    shr_de			push hl
002B63 3E18                B   118    				ld a,24
002B65 90                  B   119    				sub b
002B66 47                  B   120    				ld b,a
002B67 21000000            B   121    				ld hl,0
002B6B EB                  B   122    				ex de,hl
002B6C 29                  B   123    divde_lp		add hl,hl
002B6D EB                  B   124    				ex de,hl
002B6E ED6A                B   125    				adc hl,hl
002B70 EB                  B   126    				ex de,hl
002B71 10 F9               B   127    				djnz divde_lp
002B73 E1                  B   128    				pop hl
002B74 C9                  B   129    				ret
                           B   130    				
                           B   131    ;----------------------------------------------
                           B   132    
002B75                     B   133    show_xde_decimal
                           B   134    
002B75 CD 4E 14 00         B   135    				call os_hex_to_decimal			002B79 11070000            B   136    				ld de,7
002B7D 19                  B   137    				add hl,de						002B7E 43                  B   138    				ld b,e
002B7F 11 A9 6E 00         B   139    				ld de,output_line
002B83 D5                  B   140    				push de
002B84 7E                  B   141    dec2strlp		ld a,(hl)						002B85 B7                  B   142    				or a
002B86 20 03               B   143    				jr nz,foundlnz
002B88 2B                  B   144    				dec hl
002B89 10 F9               B   145    				djnz dec2strlp
002B8B 04                  B   146    foundlnz		inc b
002B8C 7E                  B   147    ndecchar		ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002B8D C630                B   148    				add a,030h
002B8F 12                  B   149    				ld (de),a
002B90 13                  B   150    				inc de
002B91 2B                  B   151    				dec hl
002B92 10 F8               B   152    				djnz ndecchar
002B94 AF                  B   153    				xor a
002B95 12                  B   154    				ld (de),a
002B96 E1                  B   155    				pop hl							002B97 CD 15 11 00         B   156    				call os_print_string
002B9B C9                  B   157    				ret
                           B   158    
                           B   159    ;----------------------------------------------
                           B   160    			
002B9C 0E2D                B   161    div_line		ld c,'-'
002B9E 0613                B   162    				ld b,19
002BA0 CD EA 1B 00         B   163    				call os_print_multiple_chars
002BA4 CD BB 15 00         B   164    				call os_new_line
002BA8 C9                  B   165    				ret
                           B   166    
                           B   167    ;----------------------------------------------
                           B   168    
002BA9 5B444952 5D00       B   169    dir_txt			db '[DIR]',0
                           B   170    
002BAF 204B4220 00         B   171    dir_kb_txt		db ' KB ',0
002BB4 204D4220 00         B   172    dir_mb_txt		db ' MB ',0
002BB9 46726565 0B00       B   173    free_txt		db 'Free',11,0
                           B   174    
                           B   175    ;----------------------------------------------
                           B   176    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BBF                     B     5    os_cmd_f			
                           B     6    
002BBF CD 06 1E 00         B     7    				call get_start_and_end			                           B     8    			
002BC3 CD 2F 1E 00         B     9    				call hexword_or_bust			002BC7 CA BF 17 00         B    10    				jp z,os_no_args_error			002BCB 7B                  B    11    				ld a,e
002BCC 32 55 6E 00         B    12    				ld (fillbyte),a
                           B    13    					
002BD0 CD F4 1D 00         B    14    				call test_mem_range
002BD4 DA BB 17 00         B    15    				jp c,os_range_error				                           B    16    					
002BD8 3A 55 6E 00         B    17    				ld a,(fillbyte)
002BDC 77                  B    18    f_floop			ld (hl),a
002BDD EDA1                B    19    				cpi								002BDF EA DC 2B 00         B    20    				jp pe,f_floop
                           B    21    					
002BE3 3E20                B    22    				ld a,020h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002BE5 B7                  B    23    				or a
002BE6 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format volume / device command. V0.
                           B     3    ;----------------------------------------------
                           B     4    
002BE7 7E                  B     5    os_cmd_format	ld a,(hl)						002BE8 B7                  B     6    				or a
002BE9 20 04               B     7    				jr nz,fgotargs					002BEB 3E1F                B     8    				ld a,01fh						002BED B7                  B     9    				or a
002BEE C9                  B    10    				ret
                           B    11    			
002BEF E5                  B    12    fgotargs		push hl
002BF0 CD 9E 11 00         B    13    				call os_next_arg				002BF4 20 04               B    14    				jr nz,fgotlab
002BF6 21 03 2E 00         B    15    				ld hl,default_label
002BFA 22 34 01 00         B    16    fgotlab			ld (format_label_loc),hl
                           B    17    
002BFE 3E01                B    18    				ld a,1							002C00 CD C8 19 00         B    19    				call os_mount_volumes			002C04 E1                  B    20    				pop hl
                           B    21    				
                           B    22    ;----------------------------------------------
                           B    23    ; Format an entire device?
                           B    24    ;----------------------------------------------
                           B    25    
002C05 3A 54 6C 00         B    26    				ld a,(device_count)				002C09 B7                  B    27    				or a
002C0A CA AD 2C 00         B    28    				jr z,fno_dev
002C0E 47                  B    29    				ld b,a
002C0F 0E00                B    30    				ld c,0							002C11 DD21 FE 6C 00       B    31    				ld ix,host_device_hardware_info
002C16 DD7E00              B    32    fdev_lp			ld a,(ix)						002C19 CD D4 1B 00         B    33    				call locate_driver_base			002C1D D5                  B    34    				push de
002C1E FDE1                B    35    				pop iy
002C20 ED130C              B    36    				lea de,iy+0ch					002C23 C5                  B    37    				push bc
002C24 0607                B    38    				ld b,7
002C26 CD E2 13 00         B    39    				call os_compare_strings
002C2A C1                  B    40    				pop bc
002C2B 28 0A               B    41    				jr z,format_dev
002C2D ED3220              B    42    				lea ix,ix+20h					002C30 0C                  B    43    				inc c
002C31 10 E3               B    44    				djnz fdev_lp
002C33 C3 D4 2C 00         B    45    				jr form_vol_req
                           B    46    				
002C37 C5                  B    47    format_dev		push bc							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002C38 CD BB 15 00         B    48    				call os_new_line
002C3C 21 CF 2D 00         B    49    				ld hl,form_dev_warn1
002C40 CD F2 15 00         B    50    				call os_show_packed_text
002C44 C1                  B    51    				pop bc
                           B    52    				
002C45 79                  B    53    				ld a,c							002C46 C630                B    54    				add a,030h
002C48 32 60 6C 00         B    55    				ld (dev_txt+3),a
002C4C 21 5D 6C 00         B    56    				ld hl,dev_txt	
002C50 CD 15 11 00         B    57    				call os_print_string			                           B    58    				
002C54 79                  B    59    				ld a,c							002C55 CD B1 2C 00         B    60    				call setup_dev_format			002C59 30 52               B    61    				jr nc,fno_dev	
002C5B 3A 53 6C 00         B    62    				ld a,(current_driver)
002C5F CD BB 1B 00         B    63    				call show_dev_driver_name		                           B    64    								
002C63 DD7E04              B    65    				ld a,(ix+4)
002C66 B7                  B    66    				or a
002C67 28 06               B    67    				jr z,less16gb
002C69 21 0E 2E 00         B    68    				ld hl,dev16gbplus_txt
002C6D 18 1D               B    69    				jr form_capdone
002C6F 0601                B    70    less16gb		ld b,1
002C71 CD 62 2B 00         B    71    				call shr_de						002C75 3E28                B    72    				ld a,'('
002C77 CD 57 11 00         B    73    				call os_print_char
002C7B DDE5                B    74    				push ix
002C7D DD1701              B    75    				ld de,(ix+1)					002C80 0601                B    76    				ld b,1
002C82 CD 62 2B 00         B    77    				call shr_de						002C86 CD 3B 2B 00         B    78    				call show_capacity				002C8A DDE1                B    79    				pop ix
002C8C ED2205              B    80    form_capdone	lea hl,ix+5		
002C8F CD 15 11 00         B    81    				call os_print_string			002C93 3E29                B    82    				ld a,')'
002C95 CD 57 11 00         B    83    				call os_print_char
                           B    84    
002C99 CD BB 15 00         B    85    				call os_new_line
002C9D CD BB 15 00         B    86    				call os_new_line
002CA1 21 D6 2D 00         B    87    				ld hl,form_warn2
002CA5 CD C6 2D 00         B    88    				call show_packed_text_and_cr
                           B    89    				
002CA9 C3 75 2D 00         B    90    				jp confirm_format
                           B    91    			
                           B    92    
                           B    93    
                           B    94    
002CAD 3ED0                B    95    fno_dev			ld a,0d0h						002CAF B7                  B    96    				or a
002CB0 C9                  B    97    				ret
                           B    98    				
                           B    99    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   100    	
002CB1                     B   101    setup_dev_format
                           B   102    
                           B   103    ; set A to device
                           B   104    					
002CB1 CD 48 1C 00         B   105    				call dev_to_driver_lookup		002CB5 D0                  B   106    				ret nc							002CB6 32 53 6C 00         B   107    				ld (current_driver),a			002CBA E5                  B   108    				push hl
002CBB DDE1                B   109    				pop ix
002CBD DD1701              B   110    				ld de,(ix+1)					002CC0 ED53 1B 61 00       B   111    				ld (partition_size),de
002CC5 21000000            B   112    				ld hl,0							002CC9 22 1E 61 00         B   113    				ld (partition_base),hl			002CCD AF                  B   114    				xor a
002CCE 32 21 61 00         B   115    				ld (partition_base+3),a
002CD2 37                  B   116    				scf								002CD3 C9                  B   117    				ret
                           B   118    								
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    ; Format a volume?
                           B   122    ;----------------------------------------------
                           B   123    
002CD4 22 30 01 00         B   124    form_vol_req	ld (format_target_name),hl
002CD8 CD 39 10 00         B   125    				call test_volx					002CDC C2 71 2D 00         B   126    				jr nz,bad_vol
002CE0 D630                B   127    				sub a,30h
002CE2 32 33 01 00         B   128    				ld (format_target_volume),a		002CE6 11100000            B   129    				ld de,16
002CEA 57                  B   130    				ld d,a
002CEB ED5C                B   131    				mlt de
002CED DD21 7E 6C 00       B   132    				ld ix,volume_mount_list	
002CF2 DD19                B   133    				add ix,de
002CF4 DD7E00              B   134    				ld a,(ix)
002CF7 B7                  B   135    				or a
002CF8 28 77               B   136    				jr z,bad_vol					                           B   137    				
002CFA DD1704              B   138    				ld de,(ix+4)
002CFD ED53 1B 61 00       B   139    				ld (partition_size),de
002D02 DD1708              B   140    				ld de,(ix+8)
002D05 ED53 1E 61 00       B   141    				ld (partition_base),de
002D0A DD7E0B              B   142    				ld a,(ix+0bh)
002D0D 32 21 61 00         B   143    				ld (partition_base+3),a
002D11 DD7E01              B   144    				ld a,(ix+1)						002D14 32 53 6C 00         B   145    				ld (current_driver),a
                           B   146    				
002D18 CD BB 15 00         B   147    				call os_new_line
002D1C 21 E0 2D 00         B   148    				ld hl,form_vol_warn1
002D20 CD C6 2D 00         B   149    				call show_packed_text_and_cr	002D24 CD BB 15 00         B   150    				call os_new_line
                           B   151    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002D28 DD2A 30 01 00       B   152    				ld ix,(format_target_name)		002D2D DD360500            B   153    				ld (ix+5),0
002D31 ED2200              B   154    				lea hl,ix+0
002D34 CD 15 11 00         B   155    				call os_print_string			                           B   156    				
002D38 3A 52 6C 00         B   157    				ld a,(current_volume)
002D3C F5                  B   158    				push af
002D3D 3A 33 01 00         B   159    				ld a,(format_target_volume)
002D41 CD 5E 1C 00         B   160    				call os_change_volume
002D45 20 0A               B   161    				jr nz,no_vollab
002D47 CD 07 5C 00         B   162    				call fs_get_volume_label
002D4B 20 04               B   163    				jr nz,no_vollab
002D4D CD 15 11 00         B   164    				call os_print_string			002D51 F1                  B   165    no_vollab		pop af
002D52 32 52 6C 00         B   166    				ld (current_volume),a
                           B   167    				
002D56 CD BB 15 00         B   168    				call os_new_line
002D5A CD BB 15 00         B   169    				call os_new_line
002D5E 21 D6 2D 00         B   170    				ld hl,form_warn2
002D62 CD C6 2D 00         B   171    				call show_packed_text_and_cr	                           B   172    
002D66 CD 75 2D 00         B   173    				call confirm_format
002D6A F5                  B   174    				push af
002D6B CD 89 1C 00         B   175    				call fs_set_driver_for_volume
002D6F F1                  B   176    				pop af
002D70 C9                  B   177    				ret
                           B   178    
002D71 3ECF                B   179    bad_vol			ld a,0cfh						002D73 B7                  B   180    				or a
002D74 C9                  B   181    				ret
                           B   182    		
                           B   183    			
                           B   184    ;----------------------------------------------
                           B   185    
                           B   186    
002D75                     B   187    confirm_format
                           B   188    
002D75 CD AE 2D 00         B   189    				call confirm_yes
002D79 20 2B               B   190    				jr nz,abort_format
                           B   191    				
002D7B 21 E5 2D 00         B   192    				ld hl,formatting_txt			002D7F CD 15 11 00         B   193    				call os_print_string
                           B   194    				
002D83 2A 34 01 00         B   195    				ld hl,(format_label_loc)
002D87 CD 25 52 00         B   196    				call fs_format_partition
002D8B 38 0F               B   197    				jr c,form_err
002D8D 20 0D               B   198    				jr nz,form_err
                           B   199    			
002D8F 21 F5 2D 00         B   200    				ld hl,ok_txt					002D93 CD 15 11 00         B   201    				call os_print_string
                           B   202    				
002D97 CD CF 35 00         B   203    f_end			call os_cmd_remount				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002D9B C9                  B   204    				ret
                           B   205    
                           B   206    
002D9C 21 FA 2D 00         B   207    form_err		ld hl,ferr_txt
002DA0 CD 15 11 00         B   208    				call os_print_string
002DA4 18 F1               B   209    				jr f_end
                           B   210    				
                           B   211    
                           B   212    
002DA6 CD BB 15 00         B   213    abort_format	call os_new_line
002DAA 3E24                B   214    				ld a,024h						002DAC B7                  B   215    				or a
002DAD C9                  B   216    				ret
                           B   217    
                           B   218    
002DAE 21000100            B   219    confirm_yes		ld hl,scratch_pad
002DB2 1E03                B   220    				ld e,3
002DB4 E5                  B   221    				push hl
002DB5 CD E7 12 00         B   222    				call os_user_input
002DB9 E1                  B   223    				pop hl
002DBA C0                  B   224    				ret nz
002DBB 0603                B   225    				ld b,3
002DBD 11 9D 66 00         B   226    				ld de,yes_txt+1
002DC1 CD E2 13 00         B   227    				call os_compare_strings
002DC5 C9                  B   228    				ret
                           B   229    			
                           B   230    			
002DC6                     B   231    show_packed_text_and_cr
                           B   232    			
002DC6 CD F2 15 00         B   233    				call os_show_packed_text
002DCA CD BB 15 00         B   234    				call os_new_line
002DCE C9                  B   235    				ret
                           B   236    			
                           B   237    ;----------------------------------------------
                           B   238    
002DCF                     B   239    form_dev_warn1
                           B   240    
002DCF 27283640 979700     B   241    				db 027h,028h,036h,040h,097h,097
                           B   242    
002DD6                     B   243    form_warn2
                           B   244    
002DD6 52467E98 9EA2A3A5   B   245    				db 052h,046h,07eh,098h,09eh,0a2
002DDE 9700 
                           B   246    
002DE0                     B   247    form_vol_warn1
                           B   248    	
002DE0 27286F40 00         B   249    				db 027h,028h,06fh,040h,0		                           B   250    
                           B   251    
002DE5                     B   252    formatting_txt
                           B   253    
002DE5 0B0B466F 726D6174   B   254    				db 11,11,'Formatting.. ',0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002DED 74696E67 2E2E2000 
                           B   255    
002DF5 4F4B0B0B 00         B   256    ok_txt			db 'OK',11,11,0
                           B   257    
002DFA 4552524F 52210B0B   B   258    ferr_txt		db 'ERROR!',11,11,0
002E02 00 
                           B   259    
002E03 50524F53 455F4449   B   260    default_label	db 'PROSE_DISK',0
002E0B 534B00 
                           B   261    
002E0E 28313647 422B2000   B   262    dev16gbplus_txt	db '(16GB+ ',0
                           B   263    
                           B   264    ;----------------------------------------------
                           B   265    
       00000130            B   266    format_target_name		equ scratch_pad+30h		       00000133            B   267    format_target_volume	equ scratch_pad+33h		       00000134            B   268    format_label_loc		equ scratch_pad+34h
                           B   269    
                           B   270    ;----------------------------------------------
                           B   271    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002E16 CD 06 1E 00         B     5    os_cmd_h		call get_start_and_end			002E1A 22 4E 6E 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002E1E CD F4 1D 00         B     8    				call test_mem_range
002E22 DA BB 17 00         B     9    				jp c,os_range_error				                           B    10    			
002E26 AF                  B    11    				xor a
002E27 32 C3 2E 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002E2B 2A 4E 6E 00         B    14    				ld hl,(find_hexstringascii)
002E2F 0600                B    15    				ld b,0
002E31 7E                  B    16    h_lfascii		ld a,(hl)						002E32 B7                  B    17    				or a
002E33 28 28               B    18    				jr z,h_no_text					002E35 FE22                B    19    				cp 022h
002E37 28 03               B    20    				jr z,h_found_quote
002E39 23                  B    21    				inc hl
002E3A 18 F5               B    22    				jr h_lfascii
002E3C 23                  B    23    h_found_quote	inc hl
002E3D 22 4E 6E 00         B    24    				ld (find_hexstringascii),hl
002E41 7E                  B    25    h_fasc_len		ld a,(hl)
002E42 B7                  B    26    				or a
002E43 CA BF 17 00         B    27    				jp z,os_no_args_error			002E47 FE22                B    28    				cp 022h
002E49 28 04               B    29    				jr z,h_startas
002E4B 23                  B    30    				inc hl
002E4C 04                  B    31    				inc b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002E4D 18 F2               B    32    				jr h_fasc_len
                           B    33    
002E4F 78                  B    34    h_startas		ld a,b
002E50 B7                  B    35    				or a
002E51 CA BF 17 00         B    36    				jp z,os_no_args_error			002E55 3E01                B    37    				ld a,1
002E57 32 C3 2E 00         B    38    				ld (h_ascii_mode),a
002E5B 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002E5D 2A 4E 6E 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002E61 0600                B    43    				ld b,0							002E63 CD 2F 1E 00         B    44    cntfbyts		call hexword_or_bust			002E67 28 04               B    45    				jr z,gthexstr
002E69 04                  B    46    				inc b
002E6A 23                  B    47    				inc hl
002E6B 18 F6               B    48    				jr cntfbyts
002E6D 78                  B    49    gthexstr		ld a,b
002E6E B7                  B    50    				or a
002E6F CA BF 17 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002E73                     B    54    h_start_search
                           B    55    	
002E73 DD2A 42 6E 00       B    56    				ld ix,(cmdop_start_address)		002E78 DDE5                B    57    fndloop1		push ix
002E7A FDE1                B    58    				pop iy
002E7C 48                  B    59    				ld c,b							002E7D 2A 4E 6E 00         B    60    				ld hl,(find_hexstringascii)
002E81 3A C3 2E 00         B    61    fcmloop			ld a,(h_ascii_mode)
002E85 B7                  B    62    				or a
002E86 28 08               B    63    				jr z,h_hex
002E88 FD7E00              B    64    				ld a,(iy)
002E8B BE                  B    65    				cp (hl)
002E8C 20 23               B    66    				jr nz,nofmatch
002E8E 18 0A               B    67    				jr h_matched
002E90 CD 92 12 00         B    68    h_hex			call ascii_to_hexword			002E94 FD7E00              B    69    				ld a,(iy)
002E97 BB                  B    70    				cp e
002E98 20 17               B    71    				jr nz,nofmatch
002E9A FD23                B    72    h_matched		inc iy
002E9C 23                  B    73    				inc hl
002E9D 0D                  B    74    				dec c
002E9E 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002EA0 DDE5                B    77    				push ix							002EA2 D1                  B    78    				pop de							002EA3 DDE5                B    79    				push ix
002EA5 C5                  B    80    				push bc
002EA6 CD F3 14 00         B    81    				call os_show_hex_address
002EAA CD BB 15 00         B    82    				call os_new_line
002EAE C1                  B    83    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002EAF DDE1                B    84    				pop ix
                           B    85    				
002EB1 DDE5                B    86    nofmatch		push ix
002EB3 DD23                B    87    				inc ix
002EB5 D1                  B    88    				pop de
002EB6 2A 45 6E 00         B    89    				ld hl,(cmdop_end_address)
002EBA AF                  B    90    				xor a
002EBB ED52                B    91    				sbc hl,de
002EBD 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002EBF 3E20                B    94    				ld a,020h						002EC1 B7                  B    95    				or a
002EC2 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002EC3 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EC4                     B     5    os_cmd_help		
002EC4 AF                  B     6    				xor a
002EC5 32 3E 6E 00         B     7    				ld (os_linecount),a
                           B     8    				
002EC9 21 25 68 00         B     9    				ld hl,packed_help1
002ECD CD F2 15 00         B    10    show_page		call os_show_packed_text
002ED1 E5                  B    11    				push hl
002ED2 CD BB 15 00         B    12    				call os_new_line
002ED6 E1                  B    13    				pop hl
002ED7 23                  B    14    				inc hl						;sk
002ED8 7E                  B    15    				ld a,(hl)
002ED9 FEFF                B    16    				cp 0ffh						;la
002EDB 28 09               B    17    				jr z,last_help_page
                           B    18    				
002EDD CD B9 13 00         B    19    				call os_count_lines
002EE1 78                  B    20    				ld a,b
002EE2 FE79                B    21    				cp 'y'
002EE4 28 E7               B    22    				jr z,show_page
                           B    23    
002EE6                     B    24    last_help_page
002EE6 AF                  B    25    				xor a
002EE7 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
                           B     3    ;----------------------------------------------
                           B     4    
002EE8                     B     5    os_cmd_gtr
                           B     6    
002EE8 CD 2F 1E 00         B     7    				call hexword_or_bust			002EEC CA A7 17 00         B     8    				jp z,os_no_start_addr
002EF0 23                  B     9    fndquot1		inc hl
002EF1 7E                  B    10    				ld a,(hl)
002EF2 B7                  B    11    				or a
002EF3 CA BF 17 00         B    12    				jp z,os_no_args_error
002EF7 FE22                B    13    				cp 022h							002EF9 20 F5               B    14    				jr nz,fndquot1
002EFB 23                  B    15    				inc hl
002EFC E5                  B    16    				push hl
002EFD 7E                  B    17    fndquot2		ld a,(hl)
002EFE 23                  B    18    				inc hl
002EFF B7                  B    19    				or a
002F00 28 15               B    20    				jr z,noquot2
002F02 FE22                B    21    				cp 022h							002F04 20 F7               B    22    				jr nz,fndquot2
002F06 E1                  B    23    				pop hl
                           B    24    					
002F07 7E                  B    25    wmbalp			ld a,(hl)						002F08 FE22                B    26    				cp 022h
002F0A 28 09               B    27    				jr z,os_gtrdn					002F0C FE7D                B    28    				cp 07dh
002F0E 28 01               B    29    				jr z,skpnasc
002F10 12                  B    30    				ld (de),a
002F11 13                  B    31    skpnasc			inc de
002F12 23                  B    32    				inc hl
002F13 18 F2               B    33    				jr wmbalp
002F15 AF                  B    34    os_gtrdn		xor a
002F16 C9                  B    35    				ret	
                           B    36    				
002F17 E1                  B    37    noquot2			pop hl							002F18 3E12                B    38    				ld a,012h
002F1A B7                  B    39    				or a
002F1B C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.05
                           B     3    ;----------------------------------------------
                           B     4    
002F1C CD 2F 18 00         B     5    os_cmd_lb		call os_check_volume_format	
002F20 C0                  B     6    				ret nz
                           B     7    				
002F21 CD 2C 3E 00         B     8    				call os_cache_original_vol_dir
002F25 CD 2E 2F 00         B     9    				call do_lb
002F29 CD 17 3E 00         B    10    				call os_restore_original_vol_di
002F2D C9                  B    11    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    12    				
002F2E CD B3 11 00         B    13    do_lb			call os_scan_for_non_space		002F32 20 04               B    14    				jr nz,lb_got_fn
002F34 3E8D                B    15    missing_args	ld a,8dh
002F36 B7                  B    16    				or a
002F37 C9                  B    17    				ret
                           B    18    				
002F38 AF                  B    19    lb_got_fn		xor a
002F39 CD AD 3D 00         B    20    				call os_parse_path_string
002F3D C0                  B    21    				ret nz
002F3E CD C7 17 00         B    22    				call os_find_file				002F42 C0                  B    23    				ret nz
002F43 ED53 03 01 00       B    24    				ld (filesize_cache),de			002F48 2A 8F 6D 00         B    25    				ld hl,(free_sysram_base)
002F4C 22 00 01 00         B    26    				ld (data_load_addr),hl			                           B    27    				
002F50 2A FB 6E 00         B    28    				ld hl,(os_args_loc)
002F54 CD 9E 11 00         B    29    				call os_next_arg
002F58 CD 92 12 00         B    30    				call ascii_to_hexword			002F5C 28 05               B    31    				jr z,lb_argsok
002F5E FE81                B    32    				cp 81h
002F60 28 D2               B    33    				jr z,missing_args
002F62 C9                  B    34    				ret
                           B    35    				
002F63 ED53 00 01 00       B    36    lb_argsok		ld (data_load_addr),de
002F68 ED4B 00 01 00       B    37    				ld bc,(data_load_addr)			002F6D C5                  B    38    				push bc
002F6E E1                  B    39    				pop hl
002F6F ED5B 03 01 00       B    40    				ld de,(filesize_cache)
002F74 19                  B    41    				add hl,de
002F75 EB                  B    42    				ex de,hl
002F76 CD ED 3C 00         B    43    				call os_protected_ram_test
002F7A C4 3F 3D 00         B    44    				call nz,os_protected_ram_query
002F7E C0                  B    45    				ret nz
                           B    46    
002F7F 2A 00 01 00         B    47    				ld hl,(data_load_addr)			002F83 CD F4 17 00         B    48    				call os_read_bytes_from_file
002F87 C0                  B    49    				ret nz
                           B    50    			
002F88                     B    51    report_bytes_loaded
                           B    52    
002F88 21 5F 62 00         B    53    				ld hl,os_hex_prefix_txt			002F8C CD 15 11 00         B    54    				call os_print_string			                           B    55    				
002F90 11 05 01 00         B    56    				ld de,filesize_cache+2			002F94 21 A9 6E 00         B    57    				ld hl,output_line
002F98 0603                B    58    				ld b,3
002F9A CD 50 12 00         B    59    				call n_hexbytes_to_ascii
002F9E 3600                B    60    				ld (hl),0	
002FA0 0605                B    61    				ld b,5							002FA2 CD 29 15 00         B    62    				call os_print_output_line_skip_
                           B    63    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002FA6 21 CA 69 00         B    64    				ld hl,bytes_loaded_msg			002FAA CD F2 15 00         B    65    				call os_show_packed_text
                           B    66    				
002FAE 21 BD 62 00         B    67    				ld hl,to_txt					002FB2 CD 15 11 00         B    68    				call os_print_string
                           B    69    
002FB6 21 5F 62 00         B    70    				ld hl,os_hex_prefix_txt			002FBA CD 15 11 00         B    71    				call os_print_string	
                           B    72    
002FBE ED5B 00 01 00       B    73    				ld de,(data_load_addr)			002FC3 CD F3 14 00         B    74    				call os_show_hex_address
                           B    75    
002FC7 CD BB 15 00         B    76    				call os_new_line
002FCB AF                  B    77    				xor a
002FCC C9                  B    78    				ret
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
       00000100            B    82    data_load_addr	equ scratch_pad
       00000103            B    83    filesize_cache	equ scratch_pad+3
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002FCD CD 2F 1E 00         B     7    os_cmd_m		call hexword_or_bust			002FD1 28 05               B     8    				jr z,m_no_hex					002FD3 ED53 3F 6E 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002FD8 0610                B    11    m_no_hex		ld b,16							002FDA C5                  B    12    smbllp			push bc							                           B    13    				
002FDB 21 14 30 00         B    14    				ld hl,colon_cmd_prefix			002FDF CD 15 11 00         B    15    				call os_print_string
002FE3 ED5B 3F 6E 00       B    16    				ld de,(mem_mon_addr)
002FE8 CD F3 14 00         B    17    				call os_show_hex_address
                           B    18    
002FEC 21 A9 6E 00         B    19    				ld hl,output_line
002FF0 0610                B    20    				ld b,bytes_per_line				002FF2 3620                B    21    mmbllp			ld (hl),' '
002FF4 23                  B    22    				inc hl
002FF5 1A                  B    23    				ld a,(de)	
002FF6 CD 5E 12 00         B    24    				call hexbyte_to_ascii
002FFA 13                  B    25    				inc de
002FFB 10 F5               B    26    				djnz mmbllp
                           B    27    
002FFD ED53 3F 6E 00       B    28    				ld (mem_mon_addr),de
003002 360B                B    29    				ld (hl),11
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
003004 23                  B    30    				inc hl
003005 3600                B    31    				ld (hl),0
003007 21 A9 6E 00         B    32    				ld hl,output_line
00300B CD 15 11 00         B    33    				call os_print_string
00300F C1                  B    34    				pop bc
003010 10 C8               B    35    				djnz smbllp
                           B    36    				
003012 AF                  B    37    				xor a
003013 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
003014 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
003017 CD 2F 18 00         B     5    os_cmd_md		call os_check_volume_format	
00301B C0                  B     6    				ret nz
                           B     7    			
00301C CD 2C 3E 00         B     8    				call os_cache_original_vol_dir
003020 CD 29 30 00         B     9    				call do_md
003024 CD 17 3E 00         B    10    				call os_restore_original_vol_di
003028 C9                  B    11    				ret
                           B    12    			
003029 CD B3 11 00         B    13    do_md			call os_scan_for_non_space		00302D CA 34 2F 00         B    14    				jp z,missing_args
                           B    15    				
003031 AF                  B    16    				xor a							003032 CD AD 3D 00         B    17    				call os_parse_path_string
003036 C0                  B    18    				ret nz
                           B    19    				
003037 C3 65 18 00         B    20    				jp os_make_dir					                           B    21    				
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
00303B                     B     5    os_cmd_r	
00303B DD21 AA 6D 00       B     6    				ld ix,store_a1					003040 21 E5 30 00         B     7    				ld hl,register_txt
003044 CD 15 11 00         B     8    rcmdloop2		call os_print_string
003048 7E                  B     9    rcmdloop		ld a,(hl)
003049 FE01                B    10    				cp 1
00304B 28 0B               B    11    				jr z,showbyte
00304D FE02                B    12    				cp 2
00304F 28 15               B    13    				jr z,showword16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
003051 FE03                B    14    				cp 3
003053 28 2E               B    15    				jr z,showaddr
003055 23                  B    16    				inc hl
003056 18 F0               B    17    				jr rcmdloop
                           B    18    				
003058 DD7E00              B    19    showbyte		ld a,(ix)
00305B DD23                B    20    				inc ix
00305D DDE5                B    21    				push ix
00305F E5                  B    22    				push hl
003060 CD 07 15 00         B    23    				call os_show_hex_byte
003064 18 2A               B    24    				jr showreg
                           B    25    
003066 DD7E01              B    26    showword16		ld a,(ix+1)
003069 DDE5                B    27    				push ix
00306B E5                  B    28    				push hl
00306C CD 07 15 00         B    29    				call os_show_hex_byte
003070 E1                  B    30    				pop hl
003071 DDE1                B    31    				pop ix
003073 DD7E00              B    32    				ld a,(ix)
003076 DD23                B    33    				inc ix
003078 DD23                B    34    				inc ix
00307A DDE5                B    35    				push ix
00307C E5                  B    36    				push hl
00307D CD 07 15 00         B    37    				call os_show_hex_byte
003081 18 0D               B    38    				jr showreg
                           B    39    
003083 DD1700              B    40    showaddr		ld de,(ix)
003086 ED3203              B    41    				lea ix,ix+3
003089 DDE5                B    42    				push ix
00308B E5                  B    43    				push hl
00308C CD F3 14 00         B    44    				call os_show_hex_address
003090 E1                  B    45    showreg			pop hl
003091 DDE1                B    46    				pop ix
003093 23                  B    47    				inc hl
003094 7E                  B    48    				ld a,(hl)
003095 B7                  B    49    				or a
003096 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
003098 CD BB 15 00         B    52    				call os_new_line				00309C 21 49 31 00         B    53    				ld hl,flag_txt
0030A0 CD DB 14 00         B    54    				call os_copy_to_output_line
0030A4 21 AD 6E 00         B    55    				ld hl,output_line+4
0030A8 01050000            B    56    				ld bc,5
0030AC 3A CD 6D 00         B    57    				ld a,(store_f)
0030B0 CB77                B    58    				bit 6,a							0030B2 28 02               B    59    				jr z,zfzero
0030B4 3631                B    60    				ld (hl),'1'
0030B6 09                  B    61    zfzero			add hl,bc
0030B7 CB47                B    62    				bit 0,a							0030B9 28 02               B    63    				jr z,cfzero
0030BB 3631                B    64    				ld (hl),'1'
0030BD 09                  B    65    cfzero			add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
0030BE CB7F                B    66    				bit 7,a							0030C0 28 02               B    67    				jr z,sfzero
0030C2 364D                B    68    				ld (hl),'M'
0030C4 09                  B    69    sfzero			add hl,bc
0030C5 CB57                B    70    				bit 2,a							0030C7 28 02               B    71    				jr z,pfzero
0030C9 364F                B    72    				ld (hl),'O'
0030CB 09                  B    73    pfzero			add hl,bc
0030CC 23                  B    74    				inc hl
0030CD CB67                B    75    				bit 4,a							0030CF 28 02               B    76    				jr z,iffzero
0030D1 3631                B    77    				ld (hl),'1'
0030D3                     B    78    iffzero			
0030D3 01060000            B    79    				ld bc,6
0030D7 09                  B    80    				add hl,bc
0030D8 3A CE 6D 00         B    81    				ld a,(store_adl)
0030DC C630                B    82    				add a,30h
0030DE 77                  B    83    				ld (hl),a
0030DF CD 1E 15 00         B    84    				call os_print_output_line
0030E3 AF                  B    85    				xor a
0030E4 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
0030E5 20413D00 01         B    91    register_txt		db ' A=',0,1
0030EA 20204243 3D0003     B    92    					db '  BC=',0,3
0030F1 20204445 3D0003     B    93    					db '  DE=',0,3
0030F8 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
0030FF 0B                  B    96    					db 11
                           B    97    
003100 27413D00 01         B    98    					db 027h,'A=',0,1
003105 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
00310C 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
003113 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
00311A 0B                  B   103    					db 11
                           B   104    
00311B 2049583D 0003       B   105    					db ' IX=',0,3
003121 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
003127 0B                  B   108    					db 11
                           B   109    					
003128 2050433D 0003       B   110    					db ' PC=',0,3
00312E 204C5350 3D0003     B   111    					db ' LSP=',0,3
003135 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
00313C 0B                  B   114    					db 11
                           B   115    					
00313D 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
003145 010000 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B   117    					
003148 0B                  B   118    					db 11
                           B   119    
003149 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
003151 3D302053 463D5020 
003159 50563D45 20494646 
003161 3D302041 444C3D30 
003169 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
00316C CD 2F 18 00         B     6    os_cmd_rd		call os_check_volume_format	
003170 C0                  B     7    				ret nz
                           B     8    				
003171 CD 2C 3E 00         B     9    				call os_cache_original_vol_dir
003175 CD 7E 31 00         B    10    				call do_rd
003179 CD 17 3E 00         B    11    				call os_restore_original_vol_di
00317D C9                  B    12    				ret
                           B    13    			
00317E CD B3 11 00         B    14    do_rd			call os_scan_for_non_space		003182 CA 34 2F 00         B    15    				jp z,missing_args
                           B    16    				
003186 AF                  B    17    				xor a							003187 CD AD 3D 00         B    18    				call os_parse_path_string
00318B C0                  B    19    				ret nz
                           B    20    							
00318C C3 CD 18 00         B    21    				jp os_delete_dir				                           B    22    
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
003190 CD 2F 18 00         B     5    os_cmd_rn		call os_check_volume_format	
003194 C0                  B     6    				ret nz
                           B     7    			
003195 CD 2C 3E 00         B     8    				call os_cache_original_vol_dir
003199 CD A2 31 00         B     9    				call do_rn
00319D CD 17 3E 00         B    10    				call os_restore_original_vol_di
0031A1 C9                  B    11    				ret
                           B    12    			
0031A2 CD B3 11 00         B    13    do_rn			call os_scan_for_non_space		0031A6 CA 34 2F 00         B    14    				jp z,missing_args
                           B    15    				
0031AA AF                  B    16    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
0031AB CD AD 3D 00         B    17    				call os_parse_path_string
0031AF C0                  B    18    				ret nz
                           B    19    
0031B0 E5                  B    20    				push hl
0031B1 D1                  B    21    				pop de
0031B2 CD 9E 11 00         B    22    				call os_next_arg
0031B6 7E                  B    23    				ld a,(hl)						0031B7 B7                  B    24    				or a
0031B8 CA 34 2F 00         B    25    				jp z,missing_args
                           B    26    				
0031BC EB                  B    27    				ex de,hl
0031BD C3 B7 18 00         B    28    				jp os_rename_file				                           B    29    		
                           B    30    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
0031C1                     B     5    os_cmd_sb
                           B     6    	
0031C1 CD 2F 18 00         B     7    				call os_check_volume_format		0031C5 C0                  B     8    				ret nz
                           B     9    				
0031C6 CD 2C 3E 00         B    10    				call os_cache_original_vol_dir
0031CA CD D3 31 00         B    11    				call do_sb
0031CE CD 17 3E 00         B    12    				call os_restore_original_vol_di
0031D2 C9                  B    13    				ret
                           B    14    				
0031D3 CD B3 11 00         B    15    do_sb			call os_scan_for_non_space		0031D7 CA 34 2F 00         B    16    				jp z,missing_args
0031DB 22 06 01 00         B    17    				ld (sb_save_name_addr),hl	
                           B    18    
0031DF CD 9E 11 00         B    19    				call os_next_arg
0031E3 CD 92 12 00         B    20    				call ascii_to_hexword			0031E7 C2 A7 17 00         B    21    				jp nz,os_no_start_addr			0031EB ED53 00 01 00       B    22    				ld (sb_save_addr),de
                           B    23    				
0031F0 CD 9E 11 00         B    24    				call os_next_arg
0031F4 CD 92 12 00         B    25    				call ascii_to_hexword			0031F8 C2 AB 17 00         B    26    				jp nz,os_no_filesize
0031FC ED53 03 01 00       B    27    				ld (sb_save_length),de
                           B    28    				
003201 2A 06 01 00         B    29    				ld hl,(sb_save_name_addr)		003205 AF                  B    30    				xor a
003206 CD AD 3D 00         B    31    				call os_parse_path_string
00320A 22 06 01 00         B    32    				ld (sb_save_name_addr),hl		00320E C0                  B    33    				ret nz
                           B    34    
00320F CD C7 17 00         B    35    				call os_find_file				003213 28 06               B    36    				jr z,sb_file_exists
003215 FEC6                B    37    				cp 0c6h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
003217 20 17               B    38    				jr nz,sb_makefile
003219 B7                  B    39    				or a
00321A C9                  B    40    				ret
                           B    41    
00321B 21 E3 67 00         B    42    sb_file_exists	ld hl,save_append_msg			00321F CD F2 15 00         B    43    				call os_show_packed_text
003223 CD 42 4F 00         B    44    				call os_wait_key_press
003227 3E79                B    45    				ld a,'y'
003229 B8                  B    46    				cp b
00322A 28 0D               B    47    				jr z,os_sfapp
00322C 3E2C                B    48    				ld a,2ch						00322E B7                  B    49    				or a
00322F C9                  B    50    				ret
                           B    51    
003230 2A 06 01 00         B    52    sb_makefile		ld hl,(sb_save_name_addr)		003234 CD 03 18 00         B    53    				call os_create_file
003238 C0                  B    54    				ret nz
                           B    55    						
003239 2A 06 01 00         B    56    os_sfapp		ld hl,(sb_save_name_addr)		00323D ED5B 00 01 00       B    57    				ld de,(sb_save_addr)			003242 ED4B 03 01 00       B    58    				ld bc,(sb_save_length)			003247 CD 18 18 00         B    59    				call os_write_bytes_to_file
00324B C0                  B    60    				ret nz	
                           B    61    				
00324C 3E20                B    62    				ld a,020h						00324E B7                  B    63    				or a
00324F C9                  B    64    				ret
                           B    65    			
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00000100            B    69    sb_save_addr		equ scratch_pad
       00000103            B    70    sb_save_length		equ scratch_pad+3
       00000106            B    71    sb_save_name_addr	equ scratch_pad+6
                           B    72    
                           B    73    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000040            B     5    buffer_blocks			 equ 64					                           B     6    
       00000100            B     7    rx_buffer_loc			 equ scratch_pad
       00000103            B     8    rx_buffer_ptr			 equ scratch_pad+3
       00000106            B     9    serial_file_length_cache equ scratch_pad+6
       00000109            B    10    rxe_args_location		 equ scratch_pad+9
                           B    11    
                           B    12    
003250 7E                  B    13    os_cmd_rx		ld a,(hl)						003251 B7                  B    14    				or a
003252 CA 9F 17 00         B    15    				jp z,os_no_fn_error
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    16    				
003256 3E3E                B    17    				ld a,'>'						003258 BE                  B    18    				cp (hl)
003259 C2 78 33 00         B    19    				jp nz,rx_nrs
00325D 23                  B    20    				inc hl
00325E 3E20                B    21    				ld a,' '
003260 BE                  B    22    				cp (hl)
003261 2B                  B    23    				dec hl
003262 C2 78 33 00         B    24    				jp nz,rx_nrs
                           B    25    				
003266 CD 2F 18 00         B    26    				call os_check_volume_format		00326A C0                  B    27    				ret nz		
                           B    28    				
00326B 01004000            B    29    				ld bc,buffer_blocks*256			00326F 1E00                B    30    				ld e,0
003271 CD 97 3C 00         B    31    				call os_allocate_ram
003275 C0                  B    32    				ret nz
003276 22000100            B    33    				ld (rx_buffer_loc),hl
                           B    34    				
00327A 112A0000            B    35    				ld de,02ah						00327E ED53 0F 6C 00       B    36    				ld (serial_filename),de			003283 CD B8 34 00         B    37    				call rx_get_header
003287 C2 48 33 00         B    38    				jr nz,rxwtd_fail
00328B CD 15 51 00         B    39    				call s_holdack					                           B    40    				
00328F 21 23 6C 00         B    41    				ld hl,serial_fileheader			003293 CD 03 18 00         B    42    				call os_create_file
003297 28 3A               B    43    				jr z,rx_ok_ttd
003299 FEC9                B    44    				cp 0c9h
00329B C2 48 33 00         B    45    				jp nz,rxwtd_fail				                           B    46    				
00329F 21 ED 67 00         B    47    				ld hl,overwrite_msg				0032A3 CD F2 15 00         B    48    				call os_show_packed_text
0032A7 CD 42 4F 00         B    49    				call os_wait_key_press
0032AB 78                  B    50    				ld a,b
0032AC FE59                B    51    				cp 'Y'
0032AE 28 0B               B    52    				jr z,rx_overwrite
0032B0 FE79                B    53    				cp 'y'
0032B2 28 07               B    54    				jr z,rx_overwrite
0032B4 3E2C                B    55    				ld a,2ch
0032B6 B7                  B    56    				or a
0032B7 C3 48 33 00         B    57    				jp rxwtd_fail
                           B    58    				
0032BB 21 23 6C 00         B    59    rx_overwrite	ld hl,serial_fileheader			0032BF CD 8D 18 00         B    60    				call os_erase_file
0032C3 C2 48 33 00         B    61    				jp nz,rxwtd_fail				0032C7 21 23 6C 00         B    62    				ld hl,serial_fileheader			0032CB CD 03 18 00         B    63    				call os_create_file
0032CF C2 48 33 00         B    64    				jp nz,rxwtd_fail
                           B    65    				
0032D3 21 0C 68 00         B    66    rx_ok_ttd		ld hl,ser_recsave_msg
0032D7 CD F2 15 00         B    67    				call os_show_packed_text
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    68    				
0032DB 2A 33 6C 00         B    69    rx_rnblk		ld hl,(serial_fileheader+16)	0032DF 22060100            B    70    				ld (serial_file_length_cache),h
0032E3 2A000100            B    71    				ld hl,(rx_buffer_loc)
0032E7 22030100            B    72    				ld (rx_buffer_ptr),hl
                           B    73    				
0032EB 0640                B    74    				ld b,buffer_blocks				                           B    75    				
0032ED CD FD 50 00         B    76    rx_lnb			call s_goodack
0032F1 CD A7 50 00         B    77    				call s_getblock
0032F5 28 0F               B    78    				jr z,rxtd_blok
0032F7 F5                  B    79    				push af							0032F8 CD 0E 51 00         B    80    				call s_badack					0032FC 21 23 6C 00         B    81    				ld hl,serial_fileheader			003300 CD 8D 18 00         B    82    				call os_erase_file
003304 18 47               B    83    				jr rx_dealloc
                           B    84    
003306 CD 15 51 00         B    85    rxtd_blok		call s_holdack					                           B    86    				
00330A 21000700            B    87    				ld hl,serial_buffer				00330E ED5B0301 00         B    88    				ld de,(rx_buffer_ptr)
003313 C5                  B    89    				push bc
003314 01000100            B    90    				ld bc,256
003318 EDB0                B    91    				ldir
00331A C1                  B    92    				pop bc
00331B ED530301 00         B    93    				ld (rx_buffer_ptr),de
                           B    94    				
003320 2A 33 6C 00         B    95    				ld hl,(serial_fileheader+16)	003324 11000100            B    96    				ld de,256
003328 AF                  B    97    				xor a
003329 ED52                B    98    				sbc hl,de
00332B 22 33 6C 00         B    99    				ld (serial_fileheader+16),hl
00332F 28 28               B   100    				jr z,rx_lbr						003331 38 26               B   101    				jr c,rx_lbr						003333 10 B8               B   102    				djnz rx_lnb						                           B   103    
003335 01004000            B   104    				ld bc,buffer_blocks*256			003339 ED5B0001 00         B   105    				ld de,(rx_buffer_loc)
00333E 21 23 6C 00         B   106    				ld hl,serial_fileheader
003342 CD 18 18 00         B   107    				call os_write_bytes_to_file
003346 28 93               B   108    				jr z,rx_rnblk					003348 F5                  B   109    rxwtd_fail		push af
003349 CD 0E 51 00         B   110    				call s_badack
00334D 01004000            B   111    rx_dealloc		ld bc,buffer_blocks*256
003351 1E00                B   112    				ld e,0
003353 CD C2 3C 00         B   113    				call os_deallocate_ram
003357 F1                  B   114    				pop af
003358 C9                  B   115    				ret
                           B   116    				
003359 CD FD 50 00         B   117    rx_lbr			call s_goodack					00335D ED4B0601 00         B   118    				ld bc,(serial_file_length_cache
003362 ED5B0001 00         B   119    				ld de,(rx_buffer_loc)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003367 21 23 6C 00         B   120    				ld hl,serial_fileheader
00336B CD 18 18 00         B   121    				call os_write_bytes_to_file
00336F 28 03               B   122    				jr z,rxtd_done
003371 F5                  B   123    				push af
003372 18 D9               B   124    				jr rx_dealloc
                           B   125    				
003374 3E20                B   126    rxtd_done		ld a,020h						003376 B7                  B   127    				or a
003377 C9                  B   128    				ret
                           B   129    
                           B   130    				
                           B   131    
                           B   132    				
003378 3E21                B   133    rx_nrs			ld a,'!'						00337A BE                  B   134    				cp (hl)							00337B C2 59 34 00         B   135    				jr nz,notrxe
00337F 23                  B   136    				inc hl
003380 3E20                B   137    				ld a,' '
003382 BE                  B   138    				cp (hl)
003383 2B                  B   139    				dec hl
003384 C2 59 34 00         B   140    				jr nz,notrxe
003388 CD 9E 11 00         B   141    				call os_next_arg
00338C 22090100            B   142    				ld (rxe_args_location),hl
                           B   143    							
003390 112A0000            B   144    				ld de,02ah						003394 ED53 0F 6C 00       B   145    				ld (serial_filename),de			003399 CD B8 34 00         B   146    				call rx_get_header
00339D C0                  B   147    				ret nz
00339E 21 02 68 00         B   148    				ld hl,ser_rec2_msg
0033A2 CD F2 15 00         B   149    				call os_show_packed_text
0033A6 CD FD 50 00         B   150    				call s_goodack
0033AA 3E01                B   151    				ld a,1							0033AC 32 22 6C 00         B   152    				ld (serial_timeout),a
0033B0 CD A7 50 00         B   153    				call s_getblock					0033B4 28 07               B   154    				jr z,rxe_fblok
0033B6 F5                  B   155    rxe_badblock	push af							0033B7 CD 0E 51 00         B   156    				call s_badack					0033BB F1                  B   157    				pop af
0033BC C9                  B   158    				ret
                           B   159    	
0033BD ED4B0507 00         B   160    rxe_fblok		ld bc,(serial_buffer+5)			0033C2 C5                  B   161    				push bc
0033C3 E1                  B   162    				pop hl
0033C4 ED5B 33 6C 00       B   163    				ld de,(serial_fileheader+16)
0033C9 19                  B   164    				add hl,de
0033CA EB                  B   165    				ex de,hl
0033CB CD ED 3C 00         B   166    				call os_protected_ram_test		0033CF 28 11               B   167    				jr z,rxe_norampro
0033D1 CD 15 51 00         B   168    				call s_holdack					0033D5 CD 3F 3D 00         B   169    				call os_protected_ram_query
0033D9 28 07               B   170    				jr z,rxe_norampro
0033DB F5                  B   171    				push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0033DC CD 0E 51 00         B   172    				call s_badack
0033E0 F1                  B   173    				pop af
0033E1 C9                  B   174    				ret
                           B   175    	
0033E2 2A020700            B   176    rxe_norampro	ld hl,(serial_buffer+2)
0033E6 1150524F            B   177    				ld de,04f5250h					0033EA AF                  B   178    				xor a
0033EB 28 04               B   179    				jr z,rxe_ok
0033ED 3E1A                B   180    				ld a,1ah						0033EF B7                  B   181    				or a
0033F0 C9                  B   182    				ret
0033F1 2A050700            B   183    rxe_ok			ld hl,(serial_buffer+5)			0033F5 22 06 6C 00         B   184    				ld (serial_ez80_address),hl
0033F9 01000100            B   185    				ld bc,256						0033FD DD21 23 6C 00       B   186    				ld ix,serial_fileheader
003402 AF                  B   187    				xor a
003403 DDB612              B   188    				or (ix+18)						003406 20 0A               B   189    				jr nz,mtones
003408 DDB611              B   190    				or a,(ix+17)					00340B 20 05               B   191    				jr nz,mtones
00340D 0600                B   192    				ld b,0
00340F DD4E10              B   193    				ld c,(ix+16)					003412 21000700            B   194    mtones			ld hl,serial_buffer				003416 ED5B 06 6C 00       B   195    				ld de,(serial_ez80_address)		00341B EDB0                B   196    				ldir
                           B   197    				
00341D D5                  B   198    				push de
00341E CD FD 50 00         B   199    				call s_goodack		
003422 DDE1                B   200    				pop ix							003424 2A 33 6C 00         B   201    				ld hl,(serial_fileheader+16)	003428 11000100            B   202    				ld de,256
00342C AF                  B   203    				xor a
00342D ED52                B   204    				sbc hl,de						00342F 28 18               B   205    				jr z,rxe_done
003431 38 16               B   206    				jr c,rxe_done
003433 EB                  B   207    				ex de,hl
003434 ED53 33 6C 00       B   208    				ld (serial_fileheader+16),de	003439 DD2A 06 6C 00       B   209    				ld ix,(serial_ez80_address)
00343E 01000100            B   210    				ld bc,256
003442 DD09                B   211    				add ix,bc
003444 CD 65 50 00         B   212    				call s_gbloop					003448 C0                  B   213    				ret nz
003449 E1                  B   214    rxe_done		pop hl							00344A CD E4 47 00         B   215    				call enable_button_nmi			00344E 2A090100            B   216    				ld hl,(rxe_args_location)
003452 DD2A 06 6C 00       B   217    				ld ix,(serial_ez80_address)
003457 DDE9                B   218    				jp (ix)							                           B   219    				
                           B   220    				
                           B   221    
003459 CD FF 34 00         B   222    notrxe			call clear_serial_filename
                           B   223    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00345D 0610                B   224    				ld b,16							00345F 11 0F 6C 00         B   225    				ld de,serial_filename
003463 CD 01 14 00         B   226    				call os_copy_ascii_run			003467 79                  B   227    				ld a,c
003468 32 21 6C 00         B   228    				ld (serial_fn_length),a
00346C CD AA 11 00         B   229    				call os_scan_for_space
                           B   230    				
003470 CD 2F 1E 00         B   231    				call hexword_or_bust			003474 CA A7 17 00         B   232    				jp z,os_no_start_addr			003478 ED530001 00         B   233    				ld (data_load_addr),de			00347D CD B8 34 00         B   234    				call rx_get_header
003481 C0                  B   235    				ret nz
                           B   236    
003482 ED4B0001 00         B   237    				ld bc,(data_load_addr)			003487 C5                  B   238    				push bc
003488 E1                  B   239    				pop hl
003489 ED5B 33 6C 00       B   240    				ld de,(serial_fileheader+16)
00348E 19                  B   241    				add hl,de
00348F EB                  B   242    				ex de,hl
003490 CD ED 3C 00         B   243    				call os_protected_ram_test
003494 C4 3F 3D 00         B   244    				call nz,os_protected_ram_query
003498 C0                  B   245    				ret nz
                           B   246    				
003499 21 02 68 00         B   247    				ld hl,ser_rec2_msg
00349D CD F2 15 00         B   248    				call os_show_packed_text
                           B   249    	
0034A1 2A000100            B   250    				ld hl,(data_load_addr)			0034A5 CD 53 50 00         B   251    				call serial_receive_file
0034A9 C0                  B   252    				ret nz							                           B   253    
0034AA ED5B 33 6C 00       B   254    				ld de,(serial_fileheader+16)	0034AF ED530301 00         B   255    				ld (filesize_cache),de
0034B4 C3 88 2F 00         B   256    				jp report_bytes_loaded			                           B   257    				
                           B   258    ;----------------------------------------------
                           B   259    
0034B8                     B   260    rx_get_header
0034B8 21 FE 67 00         B   261    				ld hl,ser_rec_msg
0034BC CD F2 15 00         B   262    				call os_show_packed_text
                           B   263    				
0034C0 3E00                B   264    				ld a,0
0034C2 32 44 6C 00         B   265    				ld (anim_wait_count),a			0034C6 3A 44 6C 00         B   266    get_hdr_loop	ld a,(anim_wait_count)
0034CA 3C                  B   267    				inc a
0034CB 47                  B   268    				ld b,a
0034CC FE06                B   269    				cp 6
0034CE 20 07               B   270    				jr nz,notsix
0034D0 0E20                B   271    				ld c,' '
0034D2 0605                B   272    				ld b,5
0034D4 AF                  B   273    				xor a
0034D5 18 02               B   274    				jr mcharset
0034D7 0E2E                B   275    notsix			ld c,'.'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0034D9 32 44 6C 00         B   276    mcharset		ld (anim_wait_count),a
0034DD CD EA 1B 00         B   277    				call os_print_multiple_chars
0034E1 CD 5E 11 00         B   278    				call home_cursor
                           B   279    				
0034E5 21 0F 6C 00         B   280    				ld hl,serial_filename			0034E9 3E01                B   281    				ld a,1							0034EB CD B8 4F 00         B   282    				call serial_get_header
0034EF C8                  B   283    				ret z
0034F0 FE83                B   284    				cp 083h							0034F2 C0                  B   285    				ret nz
0034F3 CD 9D 4F 00         B   286    				call os_get_key_press
0034F7 FE76                B   287    				cp 076h
0034F9 20 CB               B   288    				jr nz,get_hdr_loop
0034FB 3E80                B   289    				ld a,080h						0034FD B7                  B   290    notsto			or a
0034FE C9                  B   291    				ret								                           B   292    							
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    
0034FF                     B   296    clear_serial_filename
                           B   297    
0034FF E5                  B   298    				push hl							003500 21 0F 6C 00         B   299    				ld hl,serial_filename
003504 01100000            B   300    				ld bc,16
003508 AF                  B   301    				xor a
003509 CD 28 17 00         B   302    				call os_bchl_memfill
00350D E1                  B   303    				pop hl
00350E C9                  B   304    				ret
                           B   305    
                           B   306    ;----------------------------------------------
                           B   307    
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00350F 7E                  B     5    os_cmd_tx		ld a,(hl)						003510 B7                  B     6    				or a
003511 CA 9F 17 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003515 E5                  B     9    				push hl							003516 21 0F 6C 00         B    10    				ld hl,serial_filename
00351A 01100000            B    11    				ld bc,16
00351E AF                  B    12    				xor a
00351F CD 28 17 00         B    13    				call os_bchl_memfill
003523 E1                  B    14    				pop hl
                           B    15    			
003524 0610                B    16    				ld b,16							003526 11 0F 6C 00         B    17    				ld de,serial_filename
00352A CD 01 14 00         B    18    				call os_copy_ascii_run			00352E 79                  B    19    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
00352F 32 21 6C 00         B    20    				ld (serial_fn_length),a
003533 CD AA 11 00         B    21    				call os_scan_for_space
                           B    22    							
003537 CD 2F 1E 00         B    23    				call hexword_or_bust			00353B CA A7 17 00         B    24    				jp z,os_no_start_addr			00353F ED53 06 6C 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003544 CD 2F 1E 00         B    27    				call hexword_or_bust			003548 CA AB 17 00         B    28    				jp z,os_no_filesize
00354C ED53 09 6C 00       B    29    				ld (serial_file_length),de
003551 21000000            B    30    				ld hl,0
003555 3E07                B    31    				ld a,07h						003557 B7                  B    32    				or a
003558 ED5A                B    33    				adc hl,de
00355A 28 1D               B    34    				jr z,s_error
                           B    35    				
00355C 21 07 68 00         B    36    				ld hl,ser_send_msg
003560 CD F2 15 00         B    37    				call os_show_packed_text
                           B    38    			
003564 ED5B 09 6C 00       B    39    				ld de,(serial_file_length)
003569 21 0F 6C 00         B    40    				ld hl,serial_filename			00356D DD2A 06 6C 00       B    41    				ld ix,(serial_ez80_address)
003572 CD 1C 51 00         B    42    				call serial_send_file
003576 C0                  B    43    				ret nz			
                           B    44    			
003577 3E20                B    45    				ld a,020h						003579 B7                  B    46    s_error			or a
00357A C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
00357B CD 2F 1E 00         B     5    os_cmd_t		call hexword_or_bust			00357F 28 05               B     6    				jr z,t_no_hex					003581 ED53 3F 6E 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003586 0610                B     9    t_no_hex		ld b,16
003588 C5                  B    10    smaalp			push bc
                           B    11    				
003589 21 CC 35 00         B    12    				ld hl,gtr_cmd_prefix			00358D CD 15 11 00         B    13    				call os_print_string
003591 ED5B 3F 6E 00       B    14    				ld de,(mem_mon_addr)
003596 CD F3 14 00         B    15    				call os_show_hex_address
                           B    16    
00359A 21 A9 6E 00         B    17    				ld hl,output_line
00359E 3620                B    18    				ld (hl),' '
0035A0 23                  B    19    				inc hl
0035A1 3622                B    20    				ld (hl),022h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
0035A3 0610                B    21    				ld b,16
0035A5 23                  B    22    mabllp			inc hl
0035A6 1A                  B    23    				ld a,(de)	
0035A7 FE20                B    24    				cp 020h
0035A9 38 04               B    25    				jr c,chchar
0035AB FE7F                B    26    				cp 07fh
0035AD 38 02               B    27    				jr c,nchchar
0035AF 3E7C                B    28    chchar			ld a,07ch
0035B1 77                  B    29    nchchar			ld (hl),a
0035B2 13                  B    30    				inc de
0035B3 10 F0               B    31    				djnz mabllp
                           B    32    
0035B5 ED53 3F 6E 00       B    33    				ld (mem_mon_addr),de
0035BA 23                  B    34    				inc hl
0035BB 3622                B    35    				ld (hl),022h
0035BD 23                  B    36    				inc hl
0035BE 360B                B    37    				ld (hl),11
0035C0 23                  B    38    				inc hl
0035C1 3600                B    39    				ld (hl),0
0035C3 CD 1E 15 00         B    40    				call os_print_output_line
0035C7 C1                  B    41    				pop bc
0035C8 10 BE               B    42    				djnz smaalp
0035CA AF                  B    43    				xor a
0035CB C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0035CC 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0035CF                     B     5    os_cmd_remount
                           B     6    
0035CF 3E00                B     7    				ld a,0							0035D1 CD C8 19 00         B     8    				call os_mount_volumes
0035D5 CD BB 15 00         B     9    				call os_new_line
0035D9 AF                  B    10    				xor a
0035DA C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.04
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0035DB E5                  B     6    os_cmd_vers		push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
0035DC CD 79 4B 00         B     7    				call hwsc_get_version
0035E0 22100100            B     8    				ld (scratch_pad+10h),hl
0035E4 ED531301 00         B     9    				ld (scratch_pad+13h),de
0035E9 E1                  B    10    				pop hl
0035EA 7E                  B    11    				ld a,(hl)
0035EB FE23                B    12    				cp '#'
0035ED 20 13               B    13    				jr nz,vers_not_quiet
                           B    14    				
0035EF CD 8D 3D 00         B    15    				call clear_output_envars
0035F3 DD211001 00         B    16    				ld ix,scratch_pad+10h
0035F8 0602                B    17    				ld b,2
0035FA 0E00                B    18    				ld c,0
0035FC CD 5A 3D 00         B    19    				call os_output_to_envars
003600 AF                  B    20    				xor a
003601 C9                  B    21    				ret
                           B    22    								
                           B    23    				
003602 21 61 62 00         B    24    vers_not_quiet	ld hl,os_version_txt
003606 CD 15 11 00         B    25    				call os_print_string
                           B    26    			
00360A CD 79 4B 00         B    27    				call hwsc_get_version
00360E D5                  B    28    				push de
00360F EB                  B    29    				ex de,hl
003610 CD 12 15 00         B    30    				call os_show_hex_word
                           B    31    				
003614 21 7C 62 00         B    32    				ld hl,fwd_slash_txt
003618 CD 15 11 00         B    33    				call os_print_string
                           B    34    				
00361C 21 6E 62 00         B    35    				ld hl,hw_version_txt
003620 CD 15 11 00         B    36    				call os_print_string
003624 D1                  B    37    				pop de
003625 CD 12 15 00         B    38    				call os_show_hex_word
                           B    39    				
003629 CD BB 15 00         B    40    				call os_new_line
00362D CD BB 15 00         B    41    				call os_new_line	
003631 AF                  B    42    				xor a
003632 C9                  B    43    				ret
                           B    44    				
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    	
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003633                     B     7    os_cmd_ltn
                           B     8    
003633 AF                  B     9    				xor a
003634 C9                  B    10    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003635                     B     5    os_cmd_pen
                           B     6    	
003635 0612                B     7    				ld b,18							003637 DD21 CA 6B 00       B     8    				ld ix,current_pen
                           B     9    				
00363C CD 2F 1E 00         B    10    chpenlp			call hexword_or_bust			003640 28 0D               B    11    				jr z,pendone					003642 23                  B    12    				inc hl
003643 DD7300              B    13    				ld (ix),e
003646 DD7201              B    14    				ld (ix+1),d
003649 DD23                B    15    				inc ix
00364B DD23                B    16    				inc ix
00364D 10 ED               B    17    				djnz chpenlp	
                           B    18    				
00364F 21 CE 6B 00         B    19    pendone			ld hl,pen_palette				003653 CD F0 48 00         B    20    				call hswc_set_ui_colours
003657 AF                  B    21    				xor a
003658 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
003659                     B     5    os_cmd_vmode
                           B     6    	
003659 CD 2F 1E 00         B     7    				call hexword_or_bust			00365D 20 04               B     8    				jr nz,vm_data					00365F 3E81                B     9    				ld a,81h						003661 B7                  B    10    				or a
003662 C9                  B    11    				ret
                           B    12    
003663 7B                  B    13    vm_data			ld a,e
003664 CD 01 17 00         B    14    				call os_set_vmode
003668 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
003669 CD 2F 18 00         B     5    os_cmd_font		call os_check_volume_format	
00366D C0                  B     6    				ret nz
                           B     7    				
00366E CD 2C 3E 00         B     8    				call os_cache_original_vol_dir
003672 CD 7B 36 00         B     9    				call do_font
003676 CD 17 3E 00         B    10    				call os_restore_original_vol_di
00367A C9                  B    11    				ret
                           B    12    
00367B CD B3 11 00         B    13    do_font			call os_scan_for_non_space		00367F CA 34 2F 00         B    14    				jp z,missing_args
                           B    15    
003683 AF                  B    16    				xor a							003684 CD AD 3D 00         B    17    				call os_parse_path_string
003688 C0                  B    18    				ret nz
003689 22000100            B    19    				ld (scratch_pad),hl				                           B    20    
00368D CD C7 17 00         B    21    				call os_find_file				003691 28 17               B    22    				jr z,got_font
                           B    23    
003693 CD 83 18 00         B    24    				call os_root_dir				003697 C0                  B    25    				ret nz
003698 21 FA 36 00         B    26    				ld hl,fonts_fn
00369C CD 73 18 00         B    27    				call os_change_dir
0036A0 C0                  B    28    				ret nz
0036A1 2A000100            B    29    				ld hl,(scratch_pad)
0036A5 CD C7 17 00         B    30    				call os_find_file				0036A9 C0                  B    31    				ret nz
                           B    32    				
0036AA 11000800            B    33    got_font		ld de,800h
0036AE CD D6 17 00         B    34    				call os_set_load_length			0036B2 21000080            B    35    				ld hl,vram_a_addr				0036B6 CD F4 17 00         B    36    				call os_read_bytes_from_file
0036BA CD C0 36 00         B    37    				call convert_font
0036BE AF                  B    38    				xor a
0036BF C9                  B    39    				ret
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    				
0036C0 1EFF                B    43    convert_font	ld e,255						0036C2 01080000            B    44    				ld bc,8
0036C6 21F80780            B    45    				ld hl,vram_a_addr+07f8h	
0036CA CD D5 36 00         B    46    conv_allch		call char_to_font
0036CE AF                  B    47    				xor a
0036CF ED42                B    48    				sbc hl,bc
0036D1 1D                  B    49    				dec e
0036D2 20 F6               B    50    				jr nz,conv_allch
0036D4 C9                  B    51    				ret
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    
                           B    55    ; set E = character number
                           B    56    ;     HL = character source def address
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    57    
0036D5 E5                  B    58    char_to_font	push hl
0036D6 C5                  B    59    				push bc
0036D7 01400000            B    60    				ld bc,64
0036DB 43                  B    61    				ld b,e
0036DC ED4C                B    62    				mlt bc
0036DE DD210000 80         B    63    				ld ix,vram_a_addr
0036E3 DD09                B    64    				add ix,bc
0036E5 CD ED 36 00         B    65    				call conv_char
0036E9 C1                  B    66    				pop bc
0036EA E1                  B    67    				pop hl
0036EB AF                  B    68    				xor a
0036EC C9                  B    69    				ret
                           B    70    	
                           B    71    ;----------------------------------------------
                           B    72    
0036ED 0608                B    73    conv_char		ld b,8
0036EF 7E                  B    74    bfontlp1		ld a,(hl)
0036F0 DD7700              B    75    				ld (ix),a
0036F3 23                  B    76    				inc hl
0036F4 ED3208              B    77    				lea ix,ix+8
0036F7 10 F6               B    78    				djnz bfontlp1
0036F9 C9                  B    79    				ret	
                           B    80    				
                           B    81    ;----------------------------------------------
                           B    82    
0036FA 666F6E74 7300       B    83    fonts_fn		db "fonts",0
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.03
                           B     3    ;
                           B     4    ; Command should be in format:
                           B     5    ;
                           B     6    ; SET BLAH = SOMETHING
                           B     7    ; SET BLAH = "THIS THAT"
                           B     8    ; SET BLAH + (if numeric) to increment 24 bit v
                           B     9    ; SET BLAH - ("        ") to decrement 24 bit v
                           B    10    ; SET BLAH # to delete envar
                           B    11    ;----------------------------------------------
                           B    12    
       00000100            B    13    new_val		equ scratch_pad
       00000103            B    14    value_loc	equ scratch_pad+3
       00000106            B    15    arg_name	equ scratch_pad+6
                           B    16    
003700 7E                  B    17    os_cmd_set		ld a,(hl)						003701 B7                  B    18    				or a
003702 CA BE 37 00         B    19    				jr z,show_envars
                           B    20    		
003706 11060100            B    21    				ld de,arg_name					00370A CD 01 14 00         B    22    				call os_copy_ascii_run
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
00370E AF                  B    23    				xor a
00370F 12                  B    24    				ld (de),a
003710 13                  B    25    				inc de
003711 ED530301 00         B    26    				ld (value_loc),de
                           B    27    				
003716 CD B3 11 00         B    28    				call os_scan_for_non_space
00371A 28 47               B    29    				jr z,set_bad_args
00371C 7E                  B    30    				ld a,(hl)
00371D FE2B                B    31    				cp '+'
00371F 28 5A               B    32    				jr z,set_inc
003721 FE2D                B    33    				cp '-'
003723 28 4B               B    34    				jr z,set_dec
003725 FE23                B    35    				cp '#'
003727 28 3E               B    36    				jr z,del_env
003729 FE3D                B    37    				cp '='
00372B 20 36               B    38    				jr nz,set_bad_args
                           B    39    							
00372D CD 9E 11 00         B    40    				call os_next_arg				003731 28 30               B    41    				jr z,set_bad_args
003733 7E                  B    42    				ld a,(hl)
003734 0E00                B    43    				ld c,0
003736 FE22                B    44    				cp 022h							003738 20 02               B    45    				jr nz,set_noquotes
00373A 0C                  B    46    				inc c
00373B 23                  B    47    				inc hl
00373C 7E                  B    48    set_noquotes	ld a,(hl)
00373D 12                  B    49    				ld (de),a
00373E CB41                B    50    				bit 0,c
003740 28 06               B    51    				jr z,set_fcs
003742 FE22                B    52    				cp 022h
003744 28 0D               B    53    				jr z,evsadone2
003746 18 04               B    54    				jr set_igsp
003748 FE20                B    55    set_fcs			cp ' '
00374A 28 07               B    56    				jr z,evsadone2
00374C B7                  B    57    set_igsp		or a
00374D 28 14               B    58    				jr z,set_bad_args
00374F 23                  B    59    				inc hl
003750 13                  B    60    				inc de
003751 18 E9               B    61    				jr set_noquotes
003753 AF                  B    62    evsadone2		xor a
003754 12                  B    63    				ld (de),a
                           B    64    				
003755 21060100            B    65    				ld hl,arg_name
003759 ED5B0301 00         B    66    				ld de,(value_loc)
00375E CD 15 1D 00         B    67    				call os_set_envar
003762 C9                  B    68    				ret
                           B    69    
003763 3E82                B    70    set_bad_args	ld a,82h
003765 B7                  B    71    				or a
003766 C9                  B    72    				ret
                           B    73    				
                           B    74    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
003767 21060100            B    75    del_env			ld hl,arg_name				
00376B CD 6B 1D 00         B    76    				call os_delete_envar
00376F C9                  B    77    				ret
                           B    78    			
                           B    79    
003770 CD 86 37 00         B    80    set_dec			call incdec_pre
003774 C0                  B    81    				ret nz
003775 1B                  B    82    				dec de
003776 CD 95 37 00         B    83    				call incdec_post
00377A C9                  B    84    				ret
                           B    85    				
00377B CD 86 37 00         B    86    set_inc			call incdec_pre
00377F C0                  B    87    				ret nz
003780 13                  B    88    				inc de
003781 CD 95 37 00         B    89    				call incdec_post
003785 C9                  B    90    				ret
                           B    91    				
003786 21060100            B    92    incdec_pre		ld hl,arg_name				
00378A CD D1 1C 00         B    93    				call os_get_envar
00378E C0                  B    94    				ret nz
00378F EB                  B    95    				ex de,hl
003790 CD 92 12 00         B    96    				call ascii_to_hexword		;ge
003794 C9                  B    97    				ret
                           B    98    								
003795 ED530001 00         B    99    incdec_post		ld (new_val),de				;th
00379A 0603                B   100    				ld b,3
00379C 11020100            B   101    				ld de,new_val+2				;mo
0037A0 2A030100            B   102    				ld hl,(value_loc)
0037A4 CD 50 12 00         B   103    				call n_hexbytes_to_ascii
0037A8 3600                B   104    				ld (hl),0
0037AA 21060100            B   105    				ld hl,arg_name				;na
0037AE E5                  B   106    				push hl
0037AF CD 6B 1D 00         B   107    				call os_delete_envar
0037B3 E1                  B   108    				pop hl
0037B4 ED5B0301 00         B   109    				ld de,(value_loc)
0037B9 CD 15 1D 00         B   110    				call os_set_envar
0037BD C9                  B   111    				ret
                           B   112    			
                           B   113    			
                           B   114    
                           B   115    
0037BE 21000200            B   116    show_envars		ld hl,envar_list
                           B   117    				
0037C2 7E                  B   118    show_envlp		ld a,(hl)
0037C3 FEFF                B   119    				cp 0ffh
0037C5 28 12               B   120    				jr z,set_done
0037C7 E5                  B   121    				push hl
0037C8 CD 15 11 00         B   122    				call os_print_string
0037CC CD BB 15 00         B   123    				call os_new_line
0037D0 E1                  B   124    				pop hl
                           B   125    				
0037D1 23                  B   126    set_fnl			inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0037D2 7E                  B   127    				ld a,(hl)
0037D3 B7                  B   128    				or a
0037D4 20 FB               B   129    				jr nz,set_fnl
0037D6 23                  B   130    				inc hl
0037D7 18 E9               B   131    				jr show_envlp
                           B   132    				
0037D9 AF                  B   133    set_done		xor a
0037DA C9                  B   134    				ret
                           B   135    							
                           B   136    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
0037DB FD21 CB 24 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
0037E0 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
0037E4 C3 ED 1E 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.01
                           B     3    ;----------------------------------------------
                           B     4    
0037E8 3E81                B     5    os_cmd_sound	ld a,81h
0037EA ED390A              B     6    				out0 (port_hw_enable),a			                           B     7    
0037ED 11FFFF00            B     8    				ld de,0ffffh					0037F1 ED53 80 38 00       B     9    				ld (aud_per),de
0037F6 3E40                B    10    				ld a,64
0037F8 32 82 38 00         B    11    				ld (aud_vol),a
0037FC 3E11                B    12    				ld a,11h
0037FE 32 83 38 00         B    13    				ld (aud_chans),a
                           B    14    				
003802 CD 2F 1E 00         B    15    				call hexword_or_bust			003806 20 06               B    16    				jr nz,alocok					003808 CD FE 4E 00         B    17    				call hwsc_disable_audio			00380C AF                  B    18    				xor a
00380D C9                  B    19    				ret
00380E ED53 74 38 00       B    20    alocok			ld (aud_loc),de
003813 ED53 7A 38 00       B    21    				ld (aud_loc_loop),de
                           B    22    				
003818 CD 2F 1E 00         B    23    				call hexword_or_bust
00381C 20 04               B    24    				jr nz,gotaudlen
00381E 3E8D                B    25    missaudpar		ld a,8dh						003820 B7                  B    26    				or a
003821 C9                  B    27    				ret				
003822 ED53 77 38 00       B    28    gotaudlen		ld (aud_len),de
003827 ED53 7D 38 00       B    29    				ld (aud_len_loop),de
                           B    30    				
00382C CD 2F 1E 00         B    31    				call hexword_or_bust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
003830 28 33               B    32    				jr z,play_sound
003832 7B                  B    33    				ld a,e
003833 32 80 38 00         B    34    				ld (aud_per),a
003837 7A                  B    35    				ld a,d
003838 32 81 38 00         B    36    				ld (aud_per+1),a
                           B    37    				
00383C CD 2F 1E 00         B    38    				call hexword_or_bust
003840 28 23               B    39    				jr z,play_sound
003842 7B                  B    40    				ld a,e
003843 32 82 38 00         B    41    				ld (aud_vol),a
                           B    42    				
003847 CD 2F 1E 00         B    43    				call hexword_or_bust
00384B 28 18               B    44    				jr z,play_sound
00384D 7B                  B    45    				ld a,e
00384E 32 83 38 00         B    46    				ld (aud_chans),a
                           B    47    				
003852 CD 2F 1E 00         B    48    				call hexword_or_bust
003856 28 0D               B    49    				jr z,play_sound
003858 7B                  B    50    				ld a,e
003859 B7                  B    51    				or a
00385A 20 09               B    52    				jr nz,play_sound
00385C 11010000            B    53    				ld de,1
003860 ED53 7D 38 00       B    54    				ld (aud_len_loop),de
                           B    55    				
003865 21 74 38 00         B    56    play_sound		ld hl,audio_structure
003869 3A 83 38 00         B    57    				ld a,(aud_chans)
00386D 4F                  B    58    				ld c,a
00386E CD 80 4E 00         B    59    				call hwsc_play_audio
003872 AF                  B    60    				xor a
003873 C9                  B    61    				ret
                           B    62    				
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
003874                     B    66    audio_structure
                           B    67    
003874 000000              B    68    aud_loc			dw24 0			;loc
003877 000000              B    69    aud_len			dw24 0			;len
00387A 000000              B    70    aud_loc_loop	dw24 0	  	    ;loop loc
00387D 000000              B    71    aud_len_loop	dw24 0		    ;loop len
                           B    72    
003880 FFFF                B    73    aud_per			dw 0ffffh		;per
003882 40                  B    74    aud_vol			db 64			;vol
                           B    75    
003883 11                  B    76    aud_chans		db 11h			;channels to pl
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    		
                           B     0    	include 'commands\avail.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Avail" = Show OS / Hardware version v0.03
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\avail.asm
                           B     4    
003884 7E                  B     5    os_cmd_avail	ld a,(hl)
003885 FE23                B     6    				cp '#'
003887 20 13               B     7    				jr nz,avnoenv
                           B     8    				
003889 CD 8D 3D 00         B     9    				call clear_output_envars		00388D DD21 8F 6D 00       B    10    				ld ix,free_sysram_base
003892 0606                B    11    				ld b,6
003894 0E00                B    12    				ld c,0
003896 CD 5A 3D 00         B    13    				call os_output_to_envars
00389A AF                  B    14    				xor a
00389B C9                  B    15    				ret
                           B    16    				
                           B    17    								
00389C DD21 8F 6D 00       B    18    avnoenv			ld ix,free_sysram_base
0038A1 21 EB 38 00         B    19    				ld hl,sysram_txt
0038A5 CD 15 11 00         B    20    				call os_print_string
0038A9 CD CF 38 00         B    21    				call show_range
                           B    22    				
0038AD 21 FA 38 00         B    23    				ld hl,vram_a_txt
0038B1 CD 15 11 00         B    24    				call os_print_string
0038B5 CD CF 38 00         B    25    				call show_range
                           B    26    				
0038B9 21 08 39 00         B    27    				ld hl,vram_b_txt
0038BD CD 15 11 00         B    28    				call os_print_string
0038C1 CD CF 38 00         B    29    				call show_range
                           B    30    				
0038C5 CD BB 15 00         B    31    				call os_new_line
0038C9 CD BB 15 00         B    32    				call os_new_line	
0038CD AF                  B    33    				xor a
0038CE C9                  B    34    				ret
                           B    35    				
                           B    36    				
0038CF DD1700              B    37    show_range		ld de,(ix)
0038D2 CD F3 14 00         B    38    				call os_show_hex_address
0038D6 3E2D                B    39    				ld a,'-'
0038D8 CD 57 11 00         B    40    				call os_print_char
0038DC DD1703              B    41    				ld de,(ix+3)
0038DF CD F3 14 00         B    42    				call os_show_hex_address
0038E3 CD BB 15 00         B    43    				call os_new_line
0038E7 ED3206              B    44    				lea ix,ix+6
0038EA C9                  B    45    				ret
                           B    46    
                           B    47    			
                           B    48    
0038EB 0B537973 74656D20   B    49    sysram_txt		db 11,'System  RAM: ',0
0038F3 2052414D 3A2000 
0038FA 56696465 6F202020   B    50    vram_a_txt		db    'Video   RAM: ',0
003902 52414D3A 2000 
003908 5370722F 41756420   B    51    vram_b_txt		db    'Spr/Aud RAM: ',0
003910 52414D3A 2000 
                           B    52    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\avail.asm
                           B    53    
                           B    54    ;----------------------------------------------
                           B    55    	
                           B     0    	include 'commands\fi.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "FI" = Show file info.  v0.02
                           B     3    ;----------------------------------------------
                           B     4    
003916 CD B3 11 00         B     5    os_cmd_fi		call os_scan_for_non_space		00391A CA 34 2F 00         B     6    				jp z,missing_args
                           B     7    								
00391E CD 2F 18 00         B     8    				call os_check_volume_format	
003922 C0                  B     9    				ret nz
                           B    10    
003923 CD 2C 3E 00         B    11    				call os_cache_original_vol_dir
003927 CD 30 39 00         B    12    				call do_fi
00392B CD 17 3E 00         B    13    				call os_restore_original_vol_di
00392F C9                  B    14    				ret
                           B    15    
003930 E5                  B    16    do_fi			push hl
003931 CD 9E 11 00         B    17    				call os_next_arg
003935 7E                  B    18    				ld a,(hl)	
003936 32220100            B    19    				ld (scratch_pad+34),a			00393A E1                  B    20    				pop hl
                           B    21    
00393B AF                  B    22    				xor a							00393C CD AD 3D 00         B    23    				call os_parse_path_string
003940 C0                  B    24    				ret nz
                           B    25    
003941 CD C7 17 00         B    26    				call os_find_file				003945 28 12               B    27    				jr z,fi_filexists
003947 F5                  B    28    				push af							003948 3A220100            B    29    				ld a,(scratch_pad+34)			00394C FE23                B    30    				cp '#'
00394E 28 02               B    31    				jr z,fi_remove
003950 F1                  B    32    				pop af
003951 C9                  B    33    				ret
                           B    34    				
003952 CD 8D 3D 00         B    35    fi_remove		call clear_output_envars
003956 F1                  B    36    				pop af
003957 AF                  B    37    				xor a							003958 C9                  B    38    				ret
                           B    39    				
                           B    40    				
                           B    41    				
003959 21260100            B    42    fi_filexists	ld hl,scratch_pad+38
00395D 71                  B    43    				ld (hl),c
00395E ED532301 00         B    44    				ld (scratch_pad+35),de			                           B    45    				
003963 11100000            B    46    				ld de,16
003967 CD D6 17 00         B    47    				call os_set_load_length			                           B    48    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
00396B 21100100            B    49    				ld hl,scratch_pad+16			00396F CD F4 17 00         B    50    				call os_read_bytes_from_file
003973 C0                  B    51    				ret nz
                           B    52    
003974 FD211501 00         B    53    				ld iy,scratch_pad+16+5			003979 DD213001 00         B    54    				ld ix,scratch_pad+48			00397E CD 32 3A 00         B    55    				call fi_conv_w24				003982 CD 32 3A 00         B    56    				call fi_conv_w24				003986 CD 3F 3A 00         B    57    				call fi_conv_w16				00398A CD 3F 3A 00         B    58    				call fi_conv_w16				00398E 11000000            B    59    				ld de,0
003992 FD5E00              B    60    				ld e,(iy)
003995 DD1F00              B    61    				ld (ix),de						                           B    62    
003998 3A220100            B    63    				ld a,(scratch_pad+34)
00399C FE23                B    64    				cp '#'
00399E 28 31               B    65    				jr z,fi_quiet
                           B    66    				
0039A0 CD 14 3A 00         B    67    				call fi_show_length				                           B    68    				
0039A4 CD 53 3A 00         B    69    				call test_ezp
0039A8 20 21               B    70    				jr nz,not_ezp_file
                           B    71    				
0039AA 21 70 3A 00         B    72    				ld hl,fi_txt2					0039AE 0605                B    73    				ld b,5
0039B0 DD213001 00         B    74    				ld ix,scratch_pad+48	
0039B5 CD 15 11 00         B    75    fi_sptlp		call os_print_string
0039B9 E5                  B    76    				push hl
0039BA DD1700              B    77    				ld de,(ix+0)
0039BD CD F3 14 00         B    78    				call os_show_hex_address
0039C1 CD BB 15 00         B    79    				call os_new_line
0039C5 E1                  B    80    				pop hl
0039C6 ED3203              B    81    				lea ix,ix+3
0039C9 10 EA               B    82    				djnz fi_sptlp
                           B    83    				
0039CB CD BB 15 00         B    84    not_ezp_file	call os_new_line
0039CF AF                  B    85    				xor a
0039D0 C9                  B    86    				ret
                           B    87    				
                           B    88    
                           B    89    
0039D1 E5                  B    90    fi_quiet		push hl
0039D2 CD 8D 3D 00         B    91    				call clear_output_envars
0039D6 E1                  B    92    				pop hl	
                           B    93    
0039D7 11260100            B    94    				ld de,scratch_pad+38			0039DB 21280100            B    95    				ld hl,scratch_pad+40
0039DF E5                  B    96    				push hl
0039E0 0604                B    97    				ld b,4
0039E2 CD 50 12 00         B    98    				call n_hexbytes_to_ascii
0039E6 3600                B    99    				ld (hl),0
0039E8 D1                  B   100    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
0039E9 DD21 1E 63 00       B   101    				ld ix,envar_out_n_txt
0039EE DD360330            B   102    				ld (ix+3),'0'
0039F2 DD360430            B   103    				ld (ix+4),'0'
0039F6 DDE5                B   104    				push ix
0039F8 E1                  B   105    				pop hl
0039F9 CD 15 1D 00         B   106    				call os_set_envar
                           B   107    				
0039FD CD 53 3A 00         B   108    				call test_ezp
003A01 28 02               B   109    				jr z,q_ezp_file
003A03 AF                  B   110    				xor a
003A04 C9                  B   111    				ret
                           B   112    				
003A05 DD213001 00         B   113    q_ezp_file		ld ix,scratch_pad+48			003A0A 0605                B   114    				ld b,5
003A0C 0E01                B   115    				ld c,1
003A0E CD 5A 3D 00         B   116    				call os_output_to_envars		003A12 AF                  B   117    				xor a
003A13 C9                  B   118    				ret
                           B   119    
                           B   120    
                           B   121    
003A14 21 5F 3A 00         B   122    fi_show_length	ld hl,fi_txt
003A18 CD 15 11 00         B   123    				call os_print_string
003A1C 3A260100            B   124    				ld a,(scratch_pad+38)
003A20 CD 07 15 00         B   125    				call os_show_hex_byte
003A24 ED5B2301 00         B   126    				ld de,(scratch_pad+35)
003A29 CD F3 14 00         B   127    				call os_show_hex_address
003A2D CD BB 15 00         B   128    				call os_new_line
003A31 C9                  B   129    				ret
                           B   130    
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003A32 FD1700              B   134    fi_conv_w24		ld de,(iy)
003A35 DD1F00              B   135    				ld (ix),de
003A38 ED3203              B   136    				lea ix,ix+3
003A3B ED3303              B   137    				lea iy,iy+3
003A3E C9                  B   138    				ret
                           B   139    				
003A3F 11000000            B   140    fi_conv_w16		ld de,0
003A43 FD5E00              B   141    				ld e,(iy)
003A46 FD5601              B   142    				ld d,(iy+1)
003A49 DD1F00              B   143    				ld (ix),de
003A4C ED3203              B   144    				lea ix,ix+3
003A4F ED3302              B   145    				lea iy,iy+2
003A52 C9                  B   146    				ret
                           B   147    
                           B   148    ;----------------------------------------------
                           B   149    
                           B   150    
003A53 2A120100            B   151    test_ezp		ld hl,(scratch_pad+16+2)		003A57 AF                  B   152    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
003A58 1150524F            B   153    				ld de,04f5250h	
003A5C ED52                B   154    				sbc hl,de
003A5E C9                  B   155    				ret
                           B   156    					
                           B   157    ;----------------------------------------------
                           B   158    				
003A5F 546F7461 6C204C65   B   159    fi_txt			db "Total Length  : ",0
003A67 6E677468 20203A20 
003A6F 00 
003A70 4C6F6164 204C6F63   B   160    fi_txt2			db "Load Location : ",0
003A78 6174696F 6E203A20 
003A80 00 
003A81 5472756E 63617465   B   161    				db "Truncate to   : ",0
003A89 20746F20 20203A20 
003A91 00 
003A92 50524F53 45205265   B   162    				db "PROSE Reqd    : ",0
003A9A 71642020 20203A20 
003AA2 00 
003AA3 414D4F45 42412052   B   163    				db "AMOEBA Reqd   : ",0
003AAB 65716420 20203A20 
003AB3 00 
003AB4 41444C20 6D6F6465   B   164    				db "ADL mode      : ",0
003ABC 20202020 20203A20 
003AC4 00 
                           B   165    
                           B   166    ;----------------------------------------------
                           B   167    
                           B     0    	include 'commands\echo.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; echo v0.01
                           B     3    ;----------------------------------------------
                           B     4    
003AC5                     B     5    os_cmd_echo
                           B     6    
003AC5 7E                  B     7    			ld a,(hl)					;if no 
003AC6 B7                  B     8    			or a
003AC7 20 04               B     9    			jr nz,got_args
003AC9 3E81                B    10    			ld a,81h					;no dat
003ACB B7                  B    11    			or a
003ACC C9                  B    12    			ret
                           B    13    
                           B    14    
003ACD 11000100            B    15    got_args	ld de,scratch_pad
003AD1 7E                  B    16    			ld a,(hl)					;is cha
003AD2 FE22                B    17    			cp 22h
003AD4 20 0C               B    18    			jr nz,got_string
                           B    19    						
003AD6 0650                B    20    			ld b,80
003AD8 23                  B    21    echolp1		inc hl
003AD9 7E                  B    22    			ld a,(hl)
003ADA FE22                B    23    			cp 22h
003ADC 28 04               B    24    			jr z,got_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\echo.asm
003ADE 12                  B    25    			ld (de),a
003ADF 13                  B    26    			inc de
003AE0 10 F6               B    27    			djnz echolp1
                           B    28    
003AE2 3E0B                B    29    got_string	ld a,11
003AE4 12                  B    30    			ld (de),a					;add a 
003AE5 13                  B    31    			inc de
003AE6 AF                  B    32    			xor a
003AE7 12                  B    33    			ld (de),a
                           B    34    			
003AE8 21000100            B    35    			ld hl,scratch_pad
003AEC CD 15 11 00         B    36    			call os_print_string
003AF0 AF                  B    37    			xor a
003AF1 C9                  B    38    			ret
                           B    39    			
                           B    40    ;----------------------------------------------
                           B    41    
                           A  3313    	
003AF2 C9                  A  3314    os_cmd_unused	ret		; <- dummy command, sho
                           A  3315    
                           A  3316    ;----------------------------------------------
                           A  3317    
003AF3                     A  3318    os_get_mem_base
                           A  3319    
003AF3 2A 8F 6D 00         A  3320    		ld hl,(free_sysram_base)
003AF7 ED5B 95 6D 00       A  3321    		ld de,(free_vram_a_base)
003AFC ED4B 9B 6D 00       A  3322    		ld bc,(free_vram_b_base)
003B01 BF                  A  3323    		cp a
003B02 C9                  A  3324    		ret
                           A  3325    
                           A  3326    
003B03                     A  3327    os_get_mem_top
                           A  3328    
003B03 2A 92 6D 00         A  3329    		ld hl,(free_sysram_top)
003B07 ED5B 98 6D 00       A  3330    		ld de,(free_vram_a_top)
003B0C ED4B 9E 6D 00       A  3331    		ld bc,(free_vram_b_top)
003B11 BF                  A  3332    		cp a
003B12 C9                  A  3333    		ret
                           A  3334    
                           A  3335    ;----------------------------------------------
                           A  3336    
003B13                     A  3337    ext_set_pointer
                           A  3338    
                           A  3339    ; Set D = 1: use default pointer, otherwise:
                           A  3340    
                           A  3341    ;  Set HL to location of sprite data in memory 
                           A  3342    ;  followed by:
                           A  3343    ;   $00 - palette offset
                           A  3344    ;   $00 - colour count
                           A  3345    ;  then.. palette data (starting from colour 1)
                           A  3346    
                           A  3347    ;   Set C to pointer height (max 32)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3348    ;   Set B to palette 0-3
                           A  3349    ;   Set E to enable/disable pointer sprite
                           A  3350    
                           A  3351    ;   Returns with Zero Flag set if mouse driver 
                           A  3352    				
003B13 CC 4F 17 00         A  3353    				call z,mbase_hl
                           A  3354    
003B17                     A  3355    os_set_pointer
                           A  3356    
003B17 7B                  A  3357    				ld a,e
003B18 B7                  A  3358    				or a
003B19 CA BD 3B 00         A  3359    				jr z,disable_pointer
                           A  3360    				
003B1D 3A 8E 6D 00         A  3361    				ld a,(devices_connected)		003B21 E602                A  3362    				and 2
003B23 20 07               A  3363    				jr nz,ok_md_enabled
003B25 CD BD 3B 00         A  3364    				call disable_pointer
003B29 AF                  A  3365    				xor a
003B2A 3C                  A  3366    				inc a
003B2B C9                  A  3367    				ret
                           A  3368    				
                           A  3369    				
003B2C 7A                  A  3370    ok_md_enabled	ld a,d
003B2D E601                A  3371    				and 1
003B2F 28 27               A  3372    				jr z,user_def_pointer
                           A  3373    					
003B31 21 A3 72 00         A  3374    				ld hl,default_pointer
003B35 1100FEC7            A  3375    				ld de,vram_b_addr+vram_b_size-5
003B39 01 AC 00 00         A  3376    				ld bc,default_pointer_colours-d
003B3D CD 73 17 00         A  3377    				call unpack_rle
                           A  3378    					
003B41 01000000            A  3379    				ld bc,0
003B45 0E 14               A  3380    				ld c,default_pointer_height
003B47 ED43 9B 6F 00       A  3381    				ld (os_pointer_height),bc
003B4C 21 4F 73 00         A  3382    				ld hl,default_pointer_colours
003B50 3E03                A  3383    				ld a,3
003B52 32 9E 6F 00         A  3384    				ld (os_pointer_palette),a		003B56 18 1F               A  3385    				jr copy_spr_pal
                           A  3386    				
003B58                     A  3387    user_def_pointer
003B58 78                  A  3388    				ld a,b
003B59 E603                A  3389    				and 3
003B5B 32 9E 6F 00         A  3390    				ld (os_pointer_palette),a	
003B5F 79                  A  3391    				ld a,c
003B60 FE20                A  3392    				cp 020h
003B62 38 02               A  3393    				jr c,pointhok
003B64 3E20                A  3394    				ld a,020h
003B66 32 9B 6F 00         A  3395    pointhok		ld (os_pointer_height),a
003B6A 01100000            A  3396    				ld bc,16
003B6E 47                  A  3397    				ld b,a
003B6F ED4C                A  3398    				mlt bc							003B71 1100FEC7            A  3399    				ld de,vram_b_addr+vram_b_size-5
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003B75 EDB0                A  3400    				ldir							                           A  3401    							
003B77 E5                  A  3402    copy_spr_pal	push hl							003B78 01000000            A  3403    				ld bc,0
003B7C 4E                  A  3404    				ld c,(hl)
003B7D CB21                A  3405    				sla c
003B7F CB10                A  3406    				rl b							003B81 210000FF            A  3407    				ld hl,hw_palette			
003B85 09                  A  3408    				add hl,bc
003B86 3A 9E 6F 00         A  3409    				ld a,(os_pointer_palette)		003B8A CB27                A  3410    				sla a
003B8C 47                  A  3411    				ld b,a
003B8D 0E00                A  3412    				ld c,0
003B8F 09                  A  3413    				add hl,bc				
003B90 EB                  A  3414    				ex de,hl						003B91 E1                  A  3415    				pop hl							003B92 23                  A  3416    				inc hl							003B93 0600                A  3417    				ld b,0
003B95 4E                  A  3418    				ld c,(hl)
003B96 CB21                A  3419    				sla c
003B98 CB10                A  3420    				rl b							003B9A 23                  A  3421    				inc hl
003B9B EDB0                A  3422    				ldir							                           A  3423    				
003B9D 21E07F00            A  3424    				ld hl,07fe0h
003BA1 22 98 6F 00         A  3425    				ld (os_pointer_definition),hl	003BA5 3E01                A  3426    				ld a,1
003BA7 32 97 6F 00         A  3427    				ld (os_pointer_enable),a
003BAB 320118FF            A  3428    				ld (sprite_control),a			003BAF 3A 9E 6F 00         A  3429    				ld a,(os_pointer_palette)
003BB3 320318FF            A  3430    				ld (sprite_palette_select),a	003BB7 CD 34 4B 00         A  3431    				call hwsc_update_pointer_sprite
003BBB AF                  A  3432    				xor a
003BBC C9                  A  3433    				ret
                           A  3434    
                           A  3435    
003BBD                     A  3436    disable_pointer
                           A  3437    
003BBD AF                  A  3438    				xor a
003BBE 32 97 6F 00         A  3439    				ld (os_pointer_enable),a
003BC2 320118FF            A  3440    				ld (sprite_control),a			003BC6 C9                  A  3441    				ret
                           A  3442    				
                           A  3443    ;----------------------------------------------
                           A  3444    
003BC7                     A  3445    test_amoeba_vers
                           A  3446    
003BC7 CD 79 4B 00         A  3447    				call hwsc_get_version			003BCB 210A0100            A  3448    				ld hl,amoeba_version_required-1
003BCF AF                  A  3449    				xor a
003BD0 ED52                A  3450    				sbc hl,de
003BD2 D8                  A  3451    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3452    				
003BD3 21 E4 62 00         A  3453    				ld hl,hw_warn_txt2
003BD7 110B0100            A  3454    				ld de,amoeba_version_required
003BDB CD 83 12 00         A  3455    				call hexword_to_ascii
                           A  3456    				
003BDF 21004080            A  3457    				ld hl,vram_a_addr+16384			003BE3 222010FF            A  3458    				ld (bitmap_parameters),hl		003BE7 3600                A  3459    				ld (hl),0
003BE9 E5                  A  3460    				push hl
003BEA D1                  A  3461    				pop de
003BEB 13                  A  3462    				inc de
003BEC 01002C01            A  3463    				ld bc,320*240
003BF0 EDB0                A  3464    				ldir
                           A  3465    					
003BF2 DD2138D1 80         A  3466    				ld ix,vram_a_addr+16384+(320*11
003BF7 FD21 CF 62 00       A  3467    				ld iy,hw_warn_txt1				003BFC FD7E00              A  3468    nextwchar		ld a,(iy)
003BFF B7                  A  3469    				or a
003C00 28 3B               A  3470    				jr z,wmsg_done
003C02 21400000            A  3471    				ld hl,64
003C06 67                  A  3472    				ld h,a
003C07 ED6C                A  3473    				mlt hl
003C09 11000080            A  3474    				ld de,vram_a_addr
003C0D 19                  A  3475    				add hl,de						003C0E 0E08                A  3476    				ld c,8
003C10 7E                  A  3477    wpixlp2			ld a,(hl)
003C11 0608                A  3478    				ld b,8
003C13 CB17                A  3479    wpixlp1			rl a
003C15 30 06               A  3480    				jr nc,nowpix
003C17 DD360001            A  3481    				ld (ix),1
003C1B 18 04               A  3482    				jr wpixd
003C1D DD360000            A  3483    nowpix			ld (ix),0
003C21 DD23                A  3484    wpixd			inc ix
003C23 10 EE               A  3485    				djnz wpixlp1
003C25 11380100            A  3486    				ld de,320-8
003C29 DD19                A  3487    				add ix,de
003C2B 11080000            A  3488    				ld de,8
003C2F 19                  A  3489    				add hl,de
003C30 0D                  A  3490    				dec c
003C31 20 DD               A  3491    				jr nz,wpixlp2
                           A  3492    				
003C33 1108F6FF            A  3493    				ld de,8-(320*8)
003C37 DD19                A  3494    				add ix,de
003C39 FD23                A  3495    				inc iy
003C3B 18 BF               A  3496    				jr nextwchar
                           A  3497    
                           A  3498    
003C3D CD F7 4C 00         A  3499    wmsg_done		call purge_keyboard
003C41 CD 5B 45 00         A  3500    				call set_irq_vectors
003C45 CD B3 45 00         A  3501    				call enable_os_irqs
003C49 FB                  A  3502    				ei
                           A  3503    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003C4A CD CC 4A 00         A  3504    wmsg_loop		call hwsc_wait_vrt			;	                           A  3505    				
003C4E 11CC0C00            A  3506    				ld de,ccch
003C52 21 3C 6E 00         A  3507    				ld hl,cursorflashtimer
003C56 34                  A  3508    				inc (hl)
003C57 7E                  A  3509    				ld a,(hl)
003C58 E640                A  3510    				and 64
003C5A 28 04               A  3511    				jr z,got_wcolour
003C5C 11000000            A  3512    				ld de,000h
003C60 ED530200 FF         A  3513    got_wcolour		ld (hw_palette+2),de
                           A  3514    								
003C65 CD 9D 4F 00         A  3515    				call os_get_key_press
003C69 FE76                A  3516    				cp 76h
003C6B 20 DD               A  3517    				jr nz,wmsg_loop
003C6D C3000000            A  3518    				jp 0
                           A  3519    
                           A  3520    ;----------------------------------------------
                           A  3521    
                           A  3522    
003C71 D5                  A  3523    relativize_hl	push de						
                           A  3524    
003C72 D1                  A  3525    				pop de
003C73 D1                  A  3526    				pop de						; P
003C74 19                  A  3527    				add hl,de
003C75 11080000            A  3528    				ld de,8
003C79 B7                  A  3529    				or a
003C7A ED52                A  3530    				sbc hl,de
003C7C 3B                  A  3531    				dec sp
003C7D 3B                  A  3532    				dec sp
003C7E 3B                  A  3533    				dec sp
003C7F 3B                  A  3534    				dec sp
003C80 3B                  A  3535    				dec sp
003C81 3B                  A  3536    				dec sp
003C82 D1                  A  3537    				pop de						; o
003C83 C9                  A  3538    				ret
                           A  3539    
                           A  3540    
003C84 D5                  A  3541    relative_call	push de						
                           A  3542    
003C85 D1                  A  3543    				pop de
003C86 D1                  A  3544    				pop de						; P
003C87 19                  A  3545    				add hl,de
003C88 11080000            A  3546    				ld de,8
003C8C B7                  A  3547    				or a
003C8D ED52                A  3548    				sbc hl,de
003C8F 3B                  A  3549    				dec sp
003C90 3B                  A  3550    				dec sp
003C91 3B                  A  3551    				dec sp
003C92 3B                  A  3552    				dec sp
003C93 3B                  A  3553    				dec sp
003C94 3B                  A  3554    				dec sp
003C95 D1                  A  3555    				pop de						; o
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003C96 E9                  A  3556    				jp (hl)
                           A  3557    
                           A  3558    
                           A  3559    ;----------------------------------------------
                           A  3560    
003C97                     A  3561    os_allocate_ram
                           A  3562    
                           A  3563    ; set BC = number of bytes to allocate
                           A  3564    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3565    ; returns HL = address of allocated RAM
                           A  3566    ; ZF set if all OK
                           A  3567    
003C97 7B                  A  3568    				ld a,e
003C98 11060000            A  3569    				ld de,6
003C9C 57                  A  3570    				ld d,a
003C9D ED5C                A  3571    				mlt de
003C9F DD21 8F 6D 00       A  3572    				ld ix,free_sysram_base
003CA4 DD19                A  3573    				add ix,de
                           A  3574    				
003CA6 DD2703              A  3575    				ld hl,(ix+3)
003CA9 AF                  A  3576    				xor a
003CAA ED42                A  3577    				sbc hl,bc
003CAC 38 0E               A  3578    				jr c,alloc_err
003CAE DD2F03              A  3579    				ld (ix+3),hl
                           A  3580    				
003CB1 DD1700              A  3581    				ld de,(ix)
003CB4 AF                  A  3582    				xor a
003CB5 E5                  A  3583    				push hl
003CB6 ED52                A  3584    				sbc hl,de
003CB8 E1                  A  3585    				pop hl
003CB9 23                  A  3586    				inc hl
003CBA 30 04               A  3587    				jr nc,alloc_ok
003CBC 3E8E                A  3588    alloc_err		ld a,8eh						003CBE B7                  A  3589    				or a
003CBF C9                  A  3590    				ret
                           A  3591    				
003CC0 AF                  A  3592    alloc_ok		xor a
003CC1 C9                  A  3593    				ret
                           A  3594    			
                           A  3595    
                           A  3596    
003CC2                     A  3597    os_deallocate_ram
                           A  3598    
                           A  3599    ; set BC = number of bytes to de-allocate
                           A  3600    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3601    ; returns HL = address of allocated RAM
                           A  3602    ; ZF set if all OK		
                           A  3603    
003CC2 D5                  A  3604    				push de
                           A  3605    				
003CC3 7B                  A  3606    				ld a,e
003CC4 11060000            A  3607    				ld de,6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003CC8 57                  A  3608    				ld d,a
003CC9 ED5C                A  3609    				mlt de
003CCB DD21 8F 6D 00       A  3610    				ld ix,free_sysram_base
003CD0 DD19                A  3611    				add ix,de
                           A  3612    				
003CD2 DD2703              A  3613    				ld hl,(ix+3)
003CD5 09                  A  3614    				add hl,bc
003CD6 DD2F03              A  3615    				ld (ix+3),hl
                           A  3616    				
003CD9 D1                  A  3617    				pop de							003CDA 7B                  A  3618    				ld a,e
003CDB B7                  A  3619    				or a
003CDC 20 0D               A  3620    				jr nz,dealloc_ok				                           A  3621    				
003CDE 1100FE07            A  3622    				ld de,sysram_addr+sysram_size-s
003CE2 AF                  A  3623    				xor a
003CE3 ED52                A  3624    				sbc hl,de
003CE5 38 04               A  3625    				jr c,dealloc_ok
003CE7 1B                  A  3626    				dec de
003CE8 DD1F03              A  3627    				ld (ix+3),de
003CEB AF                  A  3628    dealloc_ok		xor a
003CEC C9                  A  3629    				ret
                           A  3630    				
                           A  3631    				
                           A  3632    ;----------------------------------------------
                           A  3633    
003CED                     A  3634    os_protected_ram_test
                           A  3635    
                           A  3636    ; set bc = start of range
                           A  3637    ; set de = end of range
                           A  3638    
                           A  3639    ; Returns ZF set if no collision
                           A  3640    
                           A  3641    
003CED DD21 8F 6D 00       A  3642    				ld ix,free_sysram_base			003CF2 DD2700              A  3643    				ld hl,(ix)
003CF5 AF                  A  3644    				xor a
003CF6 ED42                A  3645    				sbc hl,bc
003CF8 38 04               A  3646    				jr c,no_prose_hit
003CFA 3E26                A  3647    				ld a,26h						003CFC B7                  A  3648    				or a
003CFD C9                  A  3649    				ret
                           A  3650    				
003CFE DD2706              A  3651    no_prose_hit	ld hl,(ix+6)					003D01 AF                  A  3652    				xor a
003D02 ED42                A  3653    				sbc hl,bc
003D04 38 0D               A  3654    				jr c,no_vram_a_low_hit
003D06 21000080            A  3655    				ld hl,800000h
003D0A AF                  A  3656    				xor a
003D0B ED52                A  3657    				sbc hl,de
003D0D 30 04               A  3658    				jr nc,no_vram_a_low_hit
003D0F 3E36                A  3659    				ld a,36h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003D11 B7                  A  3660    				or a
003D12 C9                  A  3661    				ret
                           A  3662    
003D13                     A  3663    no_vram_a_low_hit
                           A  3664    				
003D13 CD 28 3D 00         A  3665    				call test_alloc
003D17 C0                  A  3666    				ret nz
003D18 ED3206              A  3667    				lea ix,ix+6
003D1B CD 28 3D 00         A  3668    				call test_alloc
003D1F C0                  A  3669    				ret nz
003D20 ED3206              A  3670    				lea ix,ix+6
003D23 CD 28 3D 00         A  3671    				call test_alloc
003D27 C9                  A  3672    				ret 
                           A  3673    				
003D28 DD2703              A  3674    test_alloc		ld hl,(ix+3)					003D2B AF                  A  3675    				xor a
003D2C ED52                A  3676    				sbc hl,de
003D2E 30 0D               A  3677    				jr nc,no_colis
003D30 21000008            A  3678    				ld hl,sysram_addr+sysram_size	003D34 AF                  A  3679    				xor a
003D35 ED42                A  3680    				sbc hl,bc
003D37 38 04               A  3681    				jr c,no_colis
003D39 3E35                A  3682    				ld a,35h						003D3B B7                  A  3683    				or a
003D3C C9                  A  3684    				ret
                           A  3685    				
003D3D AF                  A  3686    no_colis		xor a
003D3E C9                  A  3687    				ret
                           A  3688    				
                           A  3689    ;----------------------------------------------
                           A  3690    
003D3F                     A  3691    os_protected_ram_query
                           A  3692    
003D3F F5                  A  3693    				push af
003D40 21 E9 62 00         A  3694    				ld hl,pmq_txt
003D44 CD 15 11 00         A  3695    				call os_print_string
003D48 CD 42 4F 00         A  3696    				call os_wait_key_press
003D4C 78                  A  3697    				ld a,b
003D4D FE79                A  3698    				cp 'y'
003D4F 28 06               A  3699    				jr z,ok_pmwrite
003D51 FE59                A  3700    				cp 'Y'
003D53 28 02               A  3701    				jr z,ok_pmwrite
003D55 F1                  A  3702    				pop af
003D56 C9                  A  3703    				ret
                           A  3704    				
003D57 F1                  A  3705    ok_pmwrite		pop af
003D58 AF                  A  3706    				xor a
003D59 C9                  A  3707    				ret
                           A  3708    
                           A  3709    ;----------------------------------------------
                           A  3710    					
003D5A                     A  3711    os_output_to_envars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3712    
                           A  3713    ; Set IX to location of first 24bit value to ou
                           A  3714    ; B = number of envars to make 
                           A  3715    ; C = Start envar number
                           A  3716    				
003D5A C5                  A  3717    out_to_envlp	push bc
003D5B 79                  A  3718    				ld a,c
003D5C 21 21 63 00         A  3719    				ld hl,envar_out_n_txt+3
003D60 CD 5E 12 00         A  3720    				call hexbyte_to_ascii
                           A  3721    						
003D64 21000100            A  3722    				ld hl,scratch_pad
003D68 ED1202              A  3723    				lea de,ix+2
003D6B 0603                A  3724    				ld b,3
003D6D CD 50 12 00         A  3725    				call n_hexbytes_to_ascii
003D71 3600                A  3726    				ld (hl),0
                           A  3727    				
003D73 21 1E 63 00         A  3728    				ld hl,envar_out_n_txt
003D77 11000100            A  3729    				ld de,scratch_pad
003D7B DDE5                A  3730    				push ix
003D7D CD 15 1D 00         A  3731    				call os_set_envar
003D81 DDE1                A  3732    				pop ix
003D83 C1                  A  3733    				pop bc
003D84 C0                  A  3734    				ret nz
                           A  3735    				
003D85 ED3203              A  3736    				lea ix,ix+3
003D88 0C                  A  3737    				inc c
003D89 10 CF               A  3738    				djnz out_to_envlp
003D8B AF                  A  3739    				xor a
003D8C C9                  A  3740    				ret			
                           A  3741    
                           A  3742    
003D8D                     A  3743    clear_output_envars
                           A  3744    
003D8D 0E00                A  3745    				ld c,0
003D8F C5                  A  3746    del_out_envlp	push bc
003D90 79                  A  3747    				ld a,c
003D91 21 21 63 00         A  3748    				ld hl,envar_out_n_txt+3
003D95 CD 5E 12 00         A  3749    				call hexbyte_to_ascii
003D99 21 1E 63 00         A  3750    				ld hl,envar_out_n_txt
003D9D CD 6B 1D 00         A  3751    				call os_delete_envar
003DA1 C1                  A  3752    				pop bc
003DA2 C0                  A  3753    				ret nz
003DA3 0C                  A  3754    				inc c
003DA4 10 E9               A  3755    				djnz del_out_envlp
003DA6 AF                  A  3756    				xor a
003DA7 C9                  A  3757    				ret			
                           A  3758    
                           A  3759    
                           A  3760    ;----------------------------------------------
                           A  3761    
003DA8                     A  3762    ext_parse_path
                           A  3763    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003DA8 CC 4F 17 00         A  3764    				call z,mbase_hl
003DAC 7B                  A  3765    				ld a,e
                           A  3766    									
003DAD                     A  3767    os_parse_path_string
                           A  3768    
                           A  3769    ; Set HL = string address in format "locomotion
                           A  3770    ; A: 1 = change to all names in string, 0 = sto
                           A  3771    				
003DAD 32060100            A  3772    				ld (scratch_pad+6),a
                           A  3773    	
003DB1 E5                  A  3774    				push hl
003DB2 DDE1                A  3775    				pop ix
003DB4 DD7E04              A  3776    				ld a,(ix+4)
003DB7 FE3A                A  3777    				cp ':'							003DB9 20 27               A  3778    				jr nz,pp_nchvol
003DBB 11 57 6C 00         A  3779    				ld de,vol_txt+1
003DBF 0603                A  3780    				ld b,3
003DC1 CD E2 13 00         A  3781    				call os_compare_strings
003DC5 20 1B               A  3782    				jr nz,pp_nchvol
003DC7 11050000            A  3783    				ld de,5
003DCB 19                  A  3784    				add hl,de
003DCC 22 FB 6E 00         A  3785    				ld (os_args_loc),hl				003DD0 DD7E03              A  3786    				ld a,(ix+3)						003DD3 D630                A  3787    				sub 030h
003DD5 CD 5E 1C 00         A  3788    				call os_change_volume
003DD9 C0                  A  3789    				ret nz							003DDA CD 83 18 00         A  3790    				call os_root_dir				003DDE 2A FB 6E 00         A  3791    				ld hl,(os_args_loc)	
                           A  3792    			
003DE2 E5                  A  3793    pp_nchvol		push hl
003DE3 D1                  A  3794    				pop de
                           A  3795    				
003DE4 1B                  A  3796    				dec de
003DE5 13                  A  3797    pp_chkstring	inc de
003DE6 1A                  A  3798    				ld a,(de)						003DE7 B7                  A  3799    				or a
003DE8 28 1D               A  3800    				jr z,pp_end
003DEA FE20                A  3801    				cp ' '
003DEC 28 19               A  3802    				jr z,pp_end
003DEE FE2F                A  3803    				cp '/'
003DF0 20 F3               A  3804    				jr nz,pp_chkstring
                           A  3805    
003DF2 13                  A  3806    				inc de
003DF3 ED530701 00         A  3807    				ld (scratch_pad+7),de
003DF8 CD 73 18 00         A  3808    				call os_change_dir				003DFC C0                  A  3809    				ret nz
                           A  3810    				
003DFD 2A070100            A  3811    				ld hl,(scratch_pad+7)			003E01 22 FB 6E 00         A  3812    				ld (os_args_loc),hl
003E05 18 DB               A  3813    				jr pp_nchvol
                           A  3814    					
003E07 3A060100            A  3815    pp_end			ld a,(scratch_pad+6)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003E0B B7                  A  3816    				or a
003E0C C8                  A  3817    				ret z
003E0D ED53 FB 6E 00       A  3818    				ld (os_args_loc),de	
003E12 CD 73 18 00         A  3819    				call os_change_dir
003E16 C9                  A  3820    				ret
                           A  3821    
                           A  3822    ;----------------------------------------------
                           A  3823    
003E17                     A  3824    os_restore_original_vol_dir
                           A  3825    
003E17 F5                  A  3826    				push af							003E18 3A 1B 6F 00         A  3827    				ld a,(original_vol)
003E1C CD 5E 1C 00         A  3828    				call os_change_volume	
003E20 ED5B 18 6F 00       A  3829    				ld de,(original_dir)
003E25 CD 0E 1C 00         A  3830    				call fs_update_dir_cluster
003E29 F1                  A  3831    				pop af
003E2A B7                  A  3832    				or a
003E2B C9                  A  3833    				ret
                           A  3834    				
                           A  3835    				
003E2C                     A  3836    os_cache_original_vol_dir
                           A  3837    
003E2C F5                  A  3838    				push af
003E2D C5                  A  3839    				push bc
003E2E D5                  A  3840    				push de
003E2F E5                  A  3841    				push hl
003E30 3A 52 6C 00         A  3842    				ld a,(current_volume)
003E34 32 1B 6F 00         A  3843    				ld (original_vol),a
003E38 CD 02 1C 00         A  3844    				call fs_get_dir_cluster
003E3C ED53 18 6F 00       A  3845    				ld (original_dir),de
003E41 E1                  A  3846    				pop hl
003E42 D1                  A  3847    				pop de
003E43 C1                  A  3848    				pop bc
003E44 F1                  A  3849    				pop af
003E45 C9                  A  3850    				ret
                           A  3851    				
                           A  3852    ;----------------------------------------------
                           A  3853    
                           B     0    	include 'script_routines.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; PROSE script routines V0.05
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;       About: IF statement.. Syntax = IF envar
                           B     9    ;
                           B    10    ;		condition can be "=" / "<>" for string 
                           B    11    ;		if string is within (brackets), it is i
                           B    12    ;		if "VAL" is included, string is interpr
                           B    13    ;		"GOTO" can be omitted if desired.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
                           B    14    ;       (destination labels must be declared as
                           B    15    ;----------------------------------------------
                           B    16    
       00000010            B    17    max_if_chars		equ 16 ;(string size for en
                           B    18    
       00000000            B    19    scr_in_script		equ 0
       00000001            B    20    scr_find_new_line	equ 1
       00000002            B    21    scr_numeric_comp	equ 2
       00000003            B    22    scr_end				equ 3
                           B    23    
                           B    24    
003E46 CD 51 3E 00         B    25    os_do_script	call run_script
003E4A 21 13 6F 00         B    26    				ld hl,script_flags
003E4E CB86                B    27    				res scr_in_script,(hl)
003E50 C9                  B    28    				ret
                           B    29    				
003E51 21 13 6F 00         B    30    run_script		ld hl,script_flags	
003E55 CBC6                B    31    				set scr_in_script,(hl)
                           B    32    
003E57 CD 2F 18 00         B    33    				call os_check_volume_format		003E5B C0                  B    34    				ret nz
                           B    35    				
003E5C CD 7B 40 00         B    36    				call new_script
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
                           B    40    
003E60 3A 78 6F 00         B    41    scrp_loop		ld a,(key_mod_flags)			003E64 E602                B    42    				and 2
003E66 28 12               B    43    				jr z,no_quit_script	
003E68 CD 9D 4F 00         B    44    				call os_get_key_press
003E6C FE21                B    45    				cp 021h							003E6E 20 0A               B    46    				jr nz,no_quit_script
                           B    47    
003E70 21 1B 68 00         B    48    				ld hl,script_aborted_msg
003E74 CD F2 15 00         B    49    				call os_show_packed_text
003E78 AF                  B    50    				xor a							003E79 C9                  B    51    				ret
                           B    52    					
                           B    53    
003E7A CD 8E 40 00         B    54    no_quit_script	call get_script_line	
003E7E C0                  B    55    				ret nz
003E7F 21 13 6F 00         B    56    				ld hl,script_flags				003E83 CB5E                B    57    				bit scr_end,(hl)
003E85 28 02               B    58    				jr z,scr_to_do
003E87 AF                  B    59    scr_done		xor a
003E88 C9                  B    60    				ret
                           B    61    				
003E89 21 57 6E 00         B    62    scr_to_do		ld hl,commandstring				003E8D 7E                  B    63    				ld a,(hl)
003E8E FE5B                B    64    				cp '['
003E90 28 28               B    65    				jr z,exec_scr_next
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
                           B    66    
003E92 11 C8 62 00         B    67    				ld de,if_command_txt			003E96 0603                B    68    				ld b,3
003E98 CD E2 13 00         B    69    				call os_compare_strings
003E9C 28 30               B    70    				jr z,do_exec_if
                           B    71    				
003E9E 11 30 63 00         B    72    				ld de,goto_txt					003EA2 0605                B    73    				ld b,5
003EA4 CD E2 13 00         B    74    				call os_compare_strings
003EA8 28 18               B    75    				jr z,scr_goto
                           B    76    				
003EAA 11 CB 62 00         B    77    				ld de,end_command_txt			003EAE 0604                B    78    				ld b,4
003EB0 CD E2 13 00         B    79    				call os_compare_strings
003EB4 28 D1               B    80    				jr z,scr_done
                           B    81    			
003EB6 CD 79 0D 00         B    82    				call os_parse_cmd_chk_ps		                           B    83    				
003EBA 21 13 6F 00         B    84    exec_scr_next	ld hl,script_flags
003EBE CBCE                B    85    				set scr_find_new_line,(hl)
003EC0 18 9E               B    86    				jr scrp_loop
                           B    87    
003EC2 CD 9E 11 00         B    88    scr_goto		call os_next_arg
003EC6 CD 62 41 00         B    89    				call copy_goto_label
003ECA C3 3A 40 00         B    90    				jp if_cond_met
                           B    91    				
                           B    92    ;----------------------------------------------
                           B    93    
                           B    94    ; Handle "IF" instructions
                           B    95    
                           B    96    
003ECE 21 57 6E 00         B    97    do_exec_if		ld hl,commandstring				003ED2 CD 9E 11 00         B    98    				call os_next_arg
003ED6 CA C7 40 00         B    99    				jr z,script_error				                           B   100    				
003EDA DD21 13 6F 00       B   101    				ld ix,script_flags
003EDF DDCB0096            B   102    				res scr_numeric_comp,(ix)		003EE3 11 36 63 00         B   103    				ld de,val_txt
003EE7 0604                B   104    				ld b,4
003EE9 CD E2 13 00         B   105    				call os_compare_strings
003EED 20 0C               B   106    				jr nz,not_val
003EEF DDCB00D6            B   107    				set scr_numeric_comp,(ix)
003EF3 CD 9E 11 00         B   108    				call os_next_arg
003EF7 CA C7 40 00         B   109    				jr z,script_error
                           B   110    				
003EFB 11 1C 6F 00         B   111    not_val			ld de,if_name_txt
003EFF 0610                B   112    				ld b,max_if_chars
003F01 CD 01 14 00         B   113    				call os_copy_ascii_run			003F05 AF                  B   114    				xor a
003F06 12                  B   115    				ld (de),a
                           B   116    				
003F07 CD B3 11 00         B   117    				call os_scan_for_non_space		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003F0B CA C7 40 00         B   118    				jr z,script_error
                           B   119    			
003F0F 0600                B   120    				ld b,0
003F11 7E                  B   121    				ld a,(hl)
003F12 FE3D                B   122    				cp '='
003F14 28 14               B   123    				jr z,got_ifcond					003F16 04                  B   124    				inc b
003F17 FE3E                B   125    				cp '>'
003F19 28 0F               B   126    				jr z,got_ifcond					003F1B 04                  B   127    				inc b
003F1C FE3C                B   128    				cp '<'
003F1E C2 C7 40 00         B   129    				jr nz,script_error				003F22 23                  B   130    				inc hl
003F23 7E                  B   131    				ld a,(hl)
003F24 2B                  B   132    				dec hl
003F25 FE3E                B   133    				cp '>'							003F27 20 01               B   134    				jr nz,got_ifcond
003F29 04                  B   135    				inc b
003F2A 78                  B   136    got_ifcond		ld a,b
003F2B 32 14 6F 00         B   137    				ld (if_condition),a
                           B   138    				
003F2F CD 9E 11 00         B   139    				call os_next_arg				003F33 CA C7 40 00         B   140    				jr z,script_error
                           B   141    				
003F37 0610                B   142    				ld b,max_if_chars
003F39 11 2E 6F 00         B   143    				ld de,if_value_txt				003F3D 7E                  B   144    				ld a,(hl)
003F3E FE22                B   145    				cp 22h							003F40 20 1C               B   146    				jr nz,ifa2nq					003F42 23                  B   147    iffq2			inc hl
003F43 7E                  B   148    				ld a,(hl)
003F44 B7                  B   149    				or a
003F45 CA C7 40 00         B   150    				jr z,script_error
003F49 FE22                B   151    				cp 22h
003F4B 28 04               B   152    				jr z,ifctq2
003F4D 12                  B   153    				ld (de),a
003F4E 13                  B   154    				inc de
003F4F 10 F1               B   155    				djnz iffq2
003F51 AF                  B   156    ifctq2			xor a
003F52 12                  B   157    				ld (de),a
003F53 CD AA 11 00         B   158    				call os_scan_for_space
003F57 B7                  B   159    				or a
003F58 CA C7 40 00         B   160    				jr z,script_error
003F5C 18 21               B   161    				jr if_arg2_done
                           B   162    				
003F5E CD 01 14 00         B   163    ifa2nq			call os_copy_ascii_run			003F62 AF                  B   164    				xor a
003F63 12                  B   165    				ld (de),a
003F64 E5                  B   166    				push hl							003F65 21 2E 6F 00         B   167    				ld hl,if_value_txt
003F69 CD D1 1C 00         B   168    				call os_get_envar
003F6D EB                  B   169    				ex de,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003F6E 28 02               B   170    				jr z,scr_ev2ok
003F70 E1                  B   171    				pop hl
003F71 C9                  B   172    				ret
003F72 0610                B   173    scr_ev2ok		ld b,max_if_chars
003F74 11 2E 6F 00         B   174    				ld de,if_value_txt
003F78 CD 01 14 00         B   175    				call os_copy_ascii_run
003F7C AF                  B   176    				xor a
003F7D 12                  B   177    				ld (de),a
003F7E E1                  B   178    				pop hl
                           B   179    
003F7F CD B3 11 00         B   180    if_arg2_done	call os_scan_for_non_space		003F83 CA C7 40 00         B   181    				jr z,script_error
003F87 11 30 63 00         B   182    				ld de,goto_txt
003F8B 0605                B   183    				ld b,5
003F8D CD E2 13 00         B   184    				call os_compare_strings
003F91 20 08               B   185    				jr nz,no_goto
003F93 CD 9E 11 00         B   186    				call os_next_arg				003F97 CA C7 40 00         B   187    				jr z,script_error
                           B   188    
003F9B CD 62 41 00         B   189    no_goto			call copy_goto_label
                           B   190    
003F9F 3A 2E 6F 00         B   191    if_compare_args	ld a,(if_value_txt)				003FA3 FE2A                B   192    				cp '*'
003FA5 20 23               B   193    				jr nz,not_an_exist_test
003FA7 21 1C 6F 00         B   194    				ld hl,if_name_txt				003FAB CD D1 1C 00         B   195    				call os_get_envar
003FAF 20 0D               B   196    				jr nz,doesnt_exist
003FB1 3A 14 6F 00         B   197    				ld a,(if_condition)				003FB5 B7                  B   198    				or a
003FB6 CA 3A 40 00         B   199    				jp z,if_cond_met
003FBA C3 BA 3E 00         B   200    if_cond_failed  jp exec_scr_next
003FBE 3A 14 6F 00         B   201    doesnt_exist	ld a,(if_condition)
003FC2 FE03                B   202    				cp 3
003FC4 CA 3A 40 00         B   203    				jp z,if_cond_met
003FC8 18 F0               B   204    				jr if_cond_failed
                           B   205    
003FCA                     B   206    not_an_exist_test
                           B   207    
003FCA 21 13 6F 00         B   208    				ld hl,script_flags
003FCE CB56                B   209    				bit scr_numeric_comp,(hl)
003FD0 28 42               B   210    				jr z,not_numeric_if				                           B   211    				
003FD2 21 1C 6F 00         B   212    				ld hl,if_name_txt
003FD6 CD D1 1C 00         B   213    				call os_get_envar				003FDA C0                  B   214    				ret nz
003FDB EB                  B   215    				ex de,hl			
003FDC CD 92 12 00         B   216    				call ascii_to_hexword			003FE0 C0                  B   217    				ret nz							003FE1 D5                  B   218    				push de
003FE2 21 2E 6F 00         B   219    				ld hl,if_value_txt
003FE6 CD 92 12 00         B   220    				call ascii_to_hexword			003FEA E1                  B   221    				pop hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003FEB C0                  B   222    				ret nz
003FEC 3A 14 6F 00         B   223    				ld a,(if_condition)
003FF0 47                  B   224    				ld b,a
003FF1 AF                  B   225    				xor a
003FF2 ED52                B   226    				sbc hl,de
003FF4 20 06               B   227    				jr nz,numeric_diff			
003FF6 78                  B   228    				ld a,b							003FF7 B7                  B   229    				or a	
003FF8 28 40               B   230    				jr z,if_cond_met
003FFA 18 BE               B   231    				jr if_cond_failed
                           B   232    
003FFC 30 0B               B   233    numeric_diff	jr nc,value_smaller
003FFE 78                  B   234    				ld a,b							003FFF FE02                B   235    				cp 2
004001 28 37               B   236    				jr z,if_cond_met
004003 FE03                B   237    				cp 3
004005 28 33               B   238    				jr z,if_cond_met
004007 18 B1               B   239    				jr if_cond_failed
                           B   240    
004009 78                  B   241    value_smaller	ld a,b							00400A FE01                B   242    				cp 1
00400C 28 2C               B   243    				jr z,if_cond_met
00400E FE03                B   244    				cp 3
004010 28 28               B   245    				jr z,if_cond_met
004012 18 A6               B   246    				jr if_cond_failed
                           B   247    				
                           B   248    
004014 21 1C 6F 00         B   249    not_numeric_if	ld hl,if_name_txt 
004018 CD D1 1C 00         B   250    				call os_get_envar
00401C C0                  B   251    				ret nz
                           B   252    				
00401D 21 2E 6F 00         B   253    				ld hl,if_value_txt
004021 CD E2 13 00         B   254    				call os_compare_strings			004025 20 09               B   255    				jr nz,if_str_diff
004027 3A 14 6F 00         B   256    				ld a,(if_condition)
00402B B7                  B   257    				or a
00402C 28 0C               B   258    				jr z,if_cond_met
00402E 18 8A               B   259    				jr if_cond_failed
004030 3A 14 6F 00         B   260    if_str_diff		ld a,(if_condition)
004034 FE03                B   261    				cp 3
004036 28 02               B   262    				jr z,if_cond_met
004038 18 80               B   263    				jr if_cond_failed
                           B   264    				
                           B   265    				
                           B   266    				
00403A CD 7B 40 00         B   267    if_cond_met		call new_script					                           B   268    
00403E CD 8E 40 00         B   269    find_if_label	call get_script_line			004042 C0                  B   270    				ret nz
004043 21 13 6F 00         B   271    				ld hl,script_flags
004047 CB5E                B   272    				bit scr_end,(hl)
004049 C2 87 3E 00         B   273    				jp nz,scr_done
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
                           B   274    				
00404D 21 57 6E 00         B   275    				ld hl,commandstring				004051 7E                  B   276    				ld a,(hl)
004052 FE5B                B   277    				cp '['
004054 20 1D               B   278    				jr nz,not_a_label				                           B   279    				
004056 23                  B   280    if_find_csb		inc hl
004057 7E                  B   281    				ld a,(hl)
004058 B7                  B   282    				or a
004059 28 18               B   283    				jr z,not_a_label				00405B FE5D                B   284    				cp ']'							00405D 20 F7               B   285    				jr nz,if_find_csb
00405F 3600                B   286    				ld (hl),0						004061 21 58 6E 00         B   287    				ld hl,commandstring+1
004065 11 40 6F 00         B   288    				ld de,if_label_txt				004069 0610                B   289    				ld b,max_if_chars
00406B CD E2 13 00         B   290    				call os_compare_strings
00406F CA BA 3E 00         B   291    				jp z,exec_scr_next				                           B   292    
004073 21 13 6F 00         B   293    not_a_label		ld hl,script_flags
004077 CBCE                B   294    				set scr_find_new_line,(hl)		004079 18 C3               B   295    				jr find_if_label
                           B   296    											
                           B   297    ;----------------------------------------------
                           B   298    
                           B   299    
00407B E5                  B   300    new_script		push hl
00407C 21000000            B   301    				ld hl,0
004080 22 0D 6F 00         B   302    				ld (script_file_offset),hl		004084 21 13 6F 00         B   303    				ld hl,script_flags
004088 CB8E                B   304    				res scr_find_new_line,(hl)		00408A CB9E                B   305    				res scr_end,(hl)
00408C E1                  B   306    				pop hl
00408D C9                  B   307    				ret
                           B   308    
                           B   309    
                           B   310    ;----------------------------------------------
                           B   311    	
                           B   312    	
00408E                     B   313    get_script_line
                           B   314    				
00408E CD 02 1C 00         B   315    				call fs_get_dir_cluster			004092 ED53 07 6F 00       B   316    				ld (script_orig_dir),de			004097 ED5B 0A 6F 00       B   317    				ld de,(script_dir)				00409C CD 0E 1C 00         B   318    				call fs_update_dir_cluster
                           B   319    
0040A0 CD B6 40 00         B   320    				call open_script				0040A4 20 04               B   321    				jr nz,scr_error
0040A6 CD CB 40 00         B   322    				call read_script				                           B   323    								
0040AA F5                  B   324    scr_error		push af
0040AB ED5B 07 6F 00       B   325    				ld de,(script_orig_dir)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
0040B0 CD 0E 1C 00         B   326    				call fs_update_dir_cluster
0040B4 F1                  B   327    				pop af
0040B5 C9                  B   328    				ret
                           B   329    
                           B   330    
                           B   331    ;----------------------------------------------
                           B   332    
                           B   333    
0040B6 21 28 6E 00         B   334    open_script		ld hl,script_fn					0040BA CD C7 17 00         B   335    				call os_find_file				0040BE C0                  B   336    				ret nz
                           B   337    				
0040BF ED53 10 6F 00       B   338    				ld (script_length),de			0040C4 79                  B   339    				ld a,c							0040C5 B7                  B   340    				or a
0040C6 C8                  B   341    				ret z
                           B   342    				
0040C7 3E8C                B   343    script_error	ld a,08ch						0040C9 B7                  B   344    				or a
0040CA C9                  B   345    				ret
                           B   346    				
                           B   347    
                           B   348    ;----------------------------------------------
                           B   349    
                           B   350    
0040CB 21 57 6E 00         B   351    read_script		ld hl,commandstring				0040CF 01500000            B   352    				ld bc,max_buffer_chars			0040D3 3E20                B   353    				ld a,32
0040D5 CD 28 17 00         B   354    				call os_bchl_memfill
                           B   355    				
0040D9 11500000            B   356    				ld de,max_buffer_chars			0040DD CD D6 17 00         B   357    				call os_set_load_length
                           B   358    				
0040E1 AF                  B   359    				xor a
0040E2 2A 10 6F 00         B   360    				ld hl,(script_length)
0040E6 ED5B 0D 6F 00       B   361    				ld de,(script_file_offset)		0040EB 37                  B   362    				scf
0040EC ED52                B   363    				sbc hl,de						0040EE 30 08               B   364    				jr nc,not_eoscr					0040F0 21 13 6F 00         B   365    				ld hl,script_flags
0040F4 CBDE                B   366    				set scr_end,(hl)				0040F6 AF                  B   367    				xor a
0040F7 C9                  B   368    				ret
0040F8 CD DE 17 00         B   369    not_eoscr		call os_set_file_pointer
                           B   370    
0040FC 21 57 6E 00         B   371    				ld hl,commandstring				004100 CD F4 17 00         B   372    				call os_read_bytes_from_file
004104 B7                  B   373    				or a			
004105 28 03               B   374    				jr z,scr_load_ok
004107 FECC                B   375    				cp 0cch							004109 C0                  B   376    				ret nz							                           B   377    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
00410A 21 13 6F 00         B   378    scr_load_ok		ld hl,script_flags
00410E CB4E                B   379    				bit scr_find_new_line,(hl)		004110 20 17               B   380    				jr nz,scr_fnl					                           B   381    
004112 21 57 6E 00         B   382    				ld hl,commandstring				004116 0650                B   383    				ld b,max_buffer_chars
004118 7E                  B   384    scr_fcr			ld a,(hl)
004119 FE20                B   385    				cp 32
00411B 38 05               B   386    				jr c,scr_gotclcr
00411D 23                  B   387    				inc hl
00411E 10 F8               B   388    				djnz scr_fcr
004120 AF                  B   389    				xor a
004121 C9                  B   390    				ret
004122 3620                B   391    scr_gotclcr		ld (hl),32						004124 23                  B   392    				inc hl
004125 10 FB               B   393    				djnz scr_gotclcr
004127 AF                  B   394    				xor a
004128 C9                  B   395    				ret
                           B   396    
004129 FD2A 0D 6F 00       B   397    scr_fnl			ld iy,(script_file_offset)
00412E 21 57 6E 00         B   398    				ld hl,commandstring	
004132 7E                  B   399    scr_find_cr		ld a,(hl)						004133 B7                  B   400    				or a
004134 20 07               B   401    				jr nz,scr_neocl					004136 FD22 0D 6F 00       B   402    scr_eocl		ld (script_file_offset),iy
00413B 18 8E               B   403    				jr read_script				
00413D FE20                B   404    scr_neocl		cp 20h							00413F 38 05               B   405    				jr c,scr_got_cr
004141 23                  B   406    				inc hl
004142 FD23                B   407    				inc iy
004144 18 EC               B   408    				jr scr_find_cr
                           B   409    				
004146 7E                  B   410    scr_got_cr		ld a,(hl)
004147 B7                  B   411    				or a							004148 28 EC               B   412    				jr z,scr_eocl					00414A FE20                B   413    				cp 20h
00414C 30 05               B   414    				jr nc,scr_got_ch				00414E 23                  B   415    				inc hl
00414F FD23                B   416    				inc iy
004151 18 F3               B   417    				jr scr_got_cr
                           B   418    
004153 FD22 0D 6F 00       B   419    scr_got_ch		ld (script_file_offset),iy
004158 21 13 6F 00         B   420    				ld hl,script_flags				00415C CB8E                B   421    				res scr_find_new_line,(hl)
00415E C3 CB 40 00         B   422    				jr read_script
                           B   423    
                           B   424    
                           B   425    ;----------------------------------------------
                           B   426    
004162                     B   427    copy_goto_label
                           B   428    
004162 11 40 6F 00         B   429    				ld de,if_label_txt				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
004166 0610                B   430    				ld b,max_if_chars
004168 CD 01 14 00         B   431    				call os_copy_ascii_run			00416C AF                  B   432    				xor a
00416D 12                  B   433    				ld (de),a						00416E C9                  B   434    				ret	
                           B   435    				
                           B   436    ;----------------------------------------------
                           B   437    			
                           B   438    				
                           B   439    				
                           B   440    				
                           A  3855    	
                           A  3856    ;----------------------------------------------
                           A  3857    ; Storage Device Drivers
                           A  3858    ;----------------------------------------------
                           A  3859    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
00416F C3 83 41 00         B    76    sd_card_driver	jp sd_initialize			; $
004173 C3 A5 41 00         B    77    				jp sd_read_sector			; $
004177 C3 AB 41 00         B    78    				jp sd_write_sector			; $
00417B 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
004183 CD B1 41 00         B    85    sd_initialize	call sd_init_main
004187 B7                  B    86    				or a						; i
004188 28 05               B    87    				jr z,sd_inok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00418A CD 42 45 00         B    88    				call sd_power_off			; i
00418E C9                  B    89    				ret
                           B    90    
00418F CD 47 45 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
004193 CD 13 43 00         B    93    				call sd_read_cid			; a
004197 20 06               B    94    				jr nz,sd_done
004199 E5                  B    95    				push hl						; c
00419A CD 7C 42 00         B    96    				call sd_read_csd
00419E E1                  B    97    				pop hl
                           B    98    
00419F CD 2A 45 00         B    99    sd_done			call sd_deselect_card		; R
0041A3 B7                  B   100    				or a						; I
0041A4 C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
0041A5 CD 97 43 00         B   105    sd_read_sector	call sd_read_sector_main
0041A9 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
0041AB CD BD 43 00         B   110    sd_write_sector	call sd_write_sector_main
0041AF 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
0041B1 AF                  B   115    sd_init_main	xor a							0041B2 32 C1 44 00         B   116    				ld (sd_card_info),a			
                           B   117    
0041B6 CD 42 45 00         B   118    				call sd_power_off				                           B   119    				
0041BA 11004000            B   120    				ld de,16384						0041BE CD 94 4B 00         B   121    				call hwsc_time_delay
                           B   122    							
0041C2 CD 36 45 00         B   123    				call sd_power_on				                           B   124    
0041C6 11830000            B   125    				ld de,131						0041CA CD 94 4B 00         B   126    				call hwsc_time_delay
                           B   127    				
0041CE 060A                B   128    				ld b,10							0041D0 CD 46 44 00         B   129    sd_ecilp		call sd_send_eight_clocks
0041D4 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
0041D6 21 95 44 00         B   132    				ld hl,CMD0_string				0041DA CD 5E 44 00         B   133    				call sd_send_command_string		0041DE FE01                B   134    				cp 01h							0041E0 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
0041E2 3E01                B   137    				ld a,sd_error_spi_mode_failed
0041E4 C9                  B   138    				ret		
                           B   139    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
0041E5 21 9B 44 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				0041E9 CD 5E 44 00         B   143    				call sd_send_command_string
0041ED FE01                B   144    				cp 01h
0041EF 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
0041F1 0604                B   147    				ld b,4
0041F3 CD 86 44 00         B   148    				call sd_read_bytes_to_sector_bu
0041F7 3E01                B   149    				ld a,1
0041F9 23                  B   150    				inc hl
0041FA 23                  B   151    				inc hl
0041FB BE                  B   152    				cp (hl)							0041FC 28 03               B   153    				jr z,sd_vrok
0041FE 3E13                B   154    				ld a,sd_error_vrange_bad
004200 C9                  B   155    				ret				
                           B   156    
004201 3EAA                B   157    sd_vrok			ld a,0aah
004203 23                  B   158    				inc hl
004204 BE                  B   159    				cp (hl)
004205 28 03               B   160    				jr z,sd_check_pattern_ok
004207 3E14                B   161    				ld a,sd_error_check_pattern_bad
004209 C9                  B   162    				ret
                           B   163    				
00420A                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
00420A 01401F00            B   168    				ld bc,8000						                           B   169    
00420E 3E77                B   170    sdhc_iwl		ld a,CMD55						004210 CD 4D 44 00         B   171    				call sd_send_command_null_args
                           B   172    				
004214 21 A1 44 00         B   173    				ld hl,ACMD41HCS_string			004218 CD 5E 44 00         B   174    				call sd_send_command_string
00421C 28 0C               B   175    				jr z,sdhc_init_ok				00421E CB57                B   176    				bit 2,a
004220 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
004222 0B                  B   179    				dec bc
004223 78                  B   180    				ld a,b
004224 B1                  B   181    				or c
004225 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
004227 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	004229 C9                  B   185    				ret
                           B   186    				
00422A                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
00422A 3E7A                B   191    				ld a,CMD58						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00422C CD 4D 44 00         B   192    				call sd_send_command_null_args
                           B   193    					
004230 0604                B   194    				ld b,4							004232 CD 86 44 00         B   195    				call sd_read_bytes_to_sector_bu
004236 7E                  B   196    				ld a,(hl)
004237 E640                B   197    				and 040h						004239 0F                  B   198    				rrca
00423A 0F                  B   199    				rrca 
00423B F602                B   200    				or 00000010b				
00423D 32 C1 44 00         B   201    				ld (sd_card_info),a				004241 AF                  B   202    				xor a							004242 C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
004243 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
004247 3E77                B   210    sd_iwl			ld a,CMD55						004249 CD 4D 44 00         B   211    				call sd_send_command_null_args
                           B   212    
00424D 3E69                B   213    				ld a,ACMD41						00424F CD 4D 44 00         B   214    				call sd_send_command_null_args
004253 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
004255 CB57                B   217    				bit 2,a				
004257 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
004259 0B                  B   220    				dec bc
00425A 78                  B   221    				ld a,b
00425B B1                  B   222    				or c
00425C 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
00425E 3E11                B   225    				ld a,sd_error_sd_init_failed	004260 C9                  B   226    				ret
                           B   227    				
004261 3E01                B   228    sd_rdy			ld a,1
004263 32 C1 44 00         B   229    				ld (sd_card_info),a				004267 AF                  B   230    				xor a							004268 C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
004269 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
00426D 3E41                B   237    sdmmc_iwl		ld a,CMD1
00426F CD 4D 44 00         B   238    				call sd_send_command_null_args	004273 C8                  B   239    				ret z							                           B   240    				
004274 0B                  B   241    sd_mnrdy		dec bc
004275 78                  B   242    				ld a,b
004276 B1                  B   243    				or c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004277 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
004279 3E10                B   246    				ld a,sd_error_mmc_init_failed	00427B C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
00427C                     B   253    sd_read_csd
                           B   254    				
00427C 3E49                B   255    				ld a,CMD9						00427E CD 4D 44 00         B   256    				call sd_send_command_null_args	004282 C2 A3 43 00         B   257    				jp nz,sd_bcr_error				                           B   258    
004286 CD 31 44 00         B   259    				call sd_wait_data_token			00428A C2 AC 43 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
00428E 0612                B   262    sd_id_ok		ld b,18							004290 CD 86 44 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
004294 DD210008 00         B   265    				ld ix,sector_buffer				004299 DDCB0076            B   266    				bit 6,(ix)
00429D 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
00429F DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						0042A2 DD6608              B   270    				ld h,(ix+8)
0042A5 23                  B   271    				inc hl
0042A6 3E0A                B   272    				ld a,10
0042A8 01000000            B   273    				ld bc,0
0042AC 4029                B   274    sd_csd2lp		add.sis hl,hl
0042AE CB11                B   275    				rl c
0042B0 CB10                B   276    				rl b
0042B2 3D                  B   277    				dec a
0042B3 20 F7               B   278    				jr nz,sd_csd2lp
0042B5 EB                  B   279    				ex de,hl						0042B6 AF                  B   280    				xor a
0042B7 C9                  B   281    				ret
                           B   282    				
0042B8 DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						0042BB E603                B   284    				and 00000011b
0042BD 57                  B   285    				ld d,a
0042BE DD5E07              B   286    				ld e,(ix+7)
0042C1 DD7E08              B   287    				ld a,(ix+8)
0042C4 E6C0                B   288    				and 11000000b
0042C6 CB27                B   289    				sla a
0042C8 CB13                B   290    				rl e
0042CA CB12                B   291    				rl d
0042CC CB27                B   292    				sla a
0042CE CB13                B   293    				rl e
0042D0 CB12                B   294    				rl d							                           B   295    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0042D2 DD7E09              B   296    				ld a,(ix+9)
0042D5 E603                B   297    				and 00000011b
0042D7 47                  B   298    				ld b,a
0042D8 DD7E0A              B   299    				ld a,(ix+10)
0042DB E680                B   300    				and 10000000b
0042DD CB27                B   301    				sla a
0042DF CB10                B   302    				rl b							                           B   303    				
0042E1 04                  B   304    				inc b
0042E2 04                  B   305    				inc b
0042E3 21000000            B   306    				ld hl,0
0042E7 CB23                B   307    sd_cmsh			sla e
0042E9 CB12                B   308    				rl d
0042EB CB15                B   309    				rl l
0042ED CB14                B   310    				rl h
0042EF 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
0042F1 DD7E05              B   313    				ld a,(ix+5)
0042F4 E60F                B   314    				and 00001111b					0042F6 28 17               B   315    				jr z,sd_nbls
0042F8 47                  B   316    				ld b,a
0042F9 CB23                B   317    sd_blsh			sla e
0042FB CB12                B   318    				rl d
0042FD CB15                B   319    				rl l
0042FF CB14                B   320    				rl h
004301 10 F6               B   321    				djnz sd_blsh					                           B   322    				
004303 0609                B   323    				ld b,9							004305 CB3C                B   324    sd_cbsec		srl h
004307 CB1D                B   325    				rr l
004309 CB1A                B   326    				rr d
00430B CB1B                B   327    				rr e
00430D 10 F6               B   328    				djnz sd_cbsec
                           B   329    
00430F E5                  B   330    sd_nbls			push hl
004310 C1                  B   331    				pop bc							004311 AF                  B   332    				xor a
004312 C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
004313                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
004313 3E4A                B   341    				ld a,CMD10						004315 CD 4D 44 00         B   342    				call sd_send_command_null_args
004319 C2 A3 43 00         B   343    				jp nz,sd_bcr_error				                           B   344    
00431D CD 31 44 00         B   345    				call sd_wait_data_token			004321 C2 AC 43 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004325 0612                B   348    				ld b,18
004327 CD 86 44 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
00432B 21030800            B   351    				ld hl,sector_buffer+03h			00432F 11200800            B   352    				ld de,sector_buffer+20h
004333 01050000            B   353    				ld bc,5
004337 3A C1 44 00         B   354    				ld a,(sd_card_info)
00433B E60F                B   355    				and 0fh
00433D 20 01               B   356    				jr nz,sd_cn5
00433F 03                  B   357    				inc bc
004340 EDB0                B   358    sd_cn5			ldir
004342 E5                  B   359    				push hl
004343 D5                  B   360    				push de
004344 21 A7 44 00         B   361    				ld hl,sd_vnchars
004348 01140000            B   362    				ld bc,20
00434C EDB0                B   363    				ldir
00434E D1                  B   364    				pop de
00434F E1                  B   365    				pop hl
004350 13                  B   366    				inc de
004351 13                  B   367    				inc de
004352 7E                  B   368    				ld a,(hl)
004353 CB3F                B   369    				srl a
004355 CB3F                B   370    				srl a
004357 CB3F                B   371    				srl a
004359 CB3F                B   372    				srl a
00435B C630                B   373    				add a,30h						00435D 12                  B   374    				ld (de),a
00435E 13                  B   375    				inc de
00435F 13                  B   376    				inc de
004360 7E                  B   377    				ld a,(hl)
004361 E60F                B   378    				and 0fh
004363 C630                B   379    				add a,30h
004365 12                  B   380    				ld (de),a						004366 13                  B   381    				inc de
004367 13                  B   382    				inc de
004368 13                  B   383    				inc de
004369 13                  B   384    				inc de
00436A 13                  B   385    				inc de
00436B 23                  B   386    				inc hl
00436C 0604                B   387    				ld b,4
00436E 7E                  B   388    sd_snulp		ld a,(hl)						00436F CB3F                B   389    				srl a
004371 CB3F                B   390    				srl a
004373 CB3F                B   391    				srl a
004375 CB3F                B   392    				srl a
004377 C630                B   393    				add a,30h
004379 FE3A                B   394    				cp 3ah
00437B 38 02               B   395    				jr c,sd_hvl1
00437D C607                B   396    				add a,07h
00437F 12                  B   397    sd_hvl1			ld (de),a
004380 13                  B   398    				inc de
004381 7E                  B   399    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004382 E60F                B   400    				and 0fh
004384 C630                B   401    				add a,30h
004386 FE3A                B   402    				cp 3ah
004388 38 02               B   403    				jr c,sd_hvl2
00438A C607                B   404    				add a,07h
00438C 12                  B   405    sd_hvl2			ld (de),a
00438D 13                  B   406    				inc de
00438E 23                  B   407    				inc hl
00438F 10 DD               B   408    				djnz sd_snulp
                           B   409    				
004391 21200800            B   410    				ld hl,sector_buffer+20h			004395 AF                  B   411    				xor a
004396 C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
004397                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
004397 CD 08 44 00         B   422    				call sd_set_sector_addr
                           B   423    
00439B 3E51                B   424    				ld a,CMD17						00439D CD 59 44 00         B   425    				call sd_send_command_current_ar
0043A1 28 03               B   426    				jr z,sd_rscr_ok					0043A3 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
0043A5 C9                  B   428    				ret
                           B   429    
0043A6 CD 31 44 00         B   430    sd_rscr_ok		call sd_wait_data_token			0043AA 28 03               B   431    				jr z,sd_dt_ok					0043AC 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
0043AE C9                  B   433    				ret
                           B   434    
0043AF 21000800            B   435    sd_dt_ok		ld hl,sector_buffer
0043B3 CD D7 44 00         B   436    				call sd_read_513_bytes			0043B7 CD CF 44 00         B   437    				call sd_get_byte
                           B   438    				
0043BB AF                  B   439    				xor a							0043BC C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
0043BD                     B   446    sd_write_sector_main
                           B   447    	
0043BD CD 08 44 00         B   448    				call sd_set_sector_addr
                           B   449    
0043C1 3E58                B   450    				ld a,CMD24						0043C3 CD 59 44 00         B   451    				call sd_send_command_current_ar
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0043C7 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
0043C9 CD 46 44 00         B   454    				call sd_send_eight_clocks		                           B   455    
0043CD 3EFE                B   456    				ld a,0feh
0043CF CD C2 44 00         B   457    				call sd_send_byte				                           B   458    
0043D3 21000800            B   459    				ld hl,sector_buffer
0043D7 CD 06 45 00         B   460    				call sd_write_512_bytes			0043DB CD 46 44 00         B   461    				call sd_send_eight_clocks		0043DF CD 46 44 00         B   462    				call sd_send_eight_clocks		                           B   463    		
0043E3 CD CF 44 00         B   464    				call sd_get_byte				0043E7 E61F                B   465    				and 1fh
0043E9 CB3F                B   466    				srl a
0043EB FE02                B   467    				cp 02h
0043ED 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
0043EF 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
0043F1 C9                  B   471    				ret
                           B   472    
0043F2 01FFFF00            B   473    sd_wr_ok		ld bc,65535						0043F6 CD CF 44 00         B   474    sd_wcbsy		call sd_get_byte				0043FA FEFF                B   475    				cp 0ffh
0043FC 20 02               B   476    				jr nz,sd_busy
0043FE AF                  B   477    				xor a							0043FF C9                  B   478    				ret
                           B   479    				
004400 0B                  B   480    sd_busy			dec bc
004401 78                  B   481    				ld a,b
004402 B1                  B   482    				or c
004403 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
004405                     B   485    sd_card_busy_timeout
                           B   486    
004405 3E23                B   487    				ld a,sd_error_write_timeout
004407 C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
004408                     B   492    sd_set_sector_addr
                           B   493    				
004408 21 35 6E 00         B   494    				ld hl,sector_lba0
00440C 4E                  B   495    				ld c,(hl)
00440D 23                  B   496    				inc hl
00440E 5E                  B   497    				ld e,(hl)
00440F 23                  B   498    				inc hl
004410 56                  B   499    				ld d,(hl)
004411 23                  B   500    				inc hl
004412 46                  B   501    				ld b,(hl)					; s
                           B   502    
004413 3A C1 44 00         B   503    				ld a,(sd_card_info)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004417 E610                B   504    				and 10h
004419 20 0A               B   505    				jr nz,lbatoargs				; i
00441B 69                  B   506    				ld l,c
00441C 63                  B   507    				ld h,e
00441D 7A                  B   508    				ld a,d						; o
00441E 4029                B   509    				add.sis hl,hl
004420 8F                  B   510    				adc a,a	
004421 EB                  B   511    				ex de,hl
004422 47                  B   512    				ld b,a
004423 0E00                B   513    				ld c,0
004425 21 BC 44 00         B   514    lbatoargs		ld hl,cmd_generic_args
004429 70                  B   515    				ld (hl),b
00442A 23                  B   516    				inc hl
00442B 72                  B   517    				ld (hl),d
00442C 23                  B   518    				inc hl
00442D 73                  B   519    				ld (hl),e
00442E 23                  B   520    				inc hl
00442F 71                  B   521    				ld (hl),c
004430 C9                  B   522    				ret
                           B   523    	
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
004431                     B   527    sd_wait_data_token
                           B   528    
004431 C5                  B   529    				push bc
004432 01401F00            B   530    				ld bc,8000				
004436 CD CF 44 00         B   531    sd_wdt			call sd_get_byte			; r
00443A FEFE                B   532    				cp 0feh
00443C 28 06               B   533    				jr z,sd_gdt
00443E 0B                  B   534    				dec bc
00443F 78                  B   535    				ld a,b
004440 B1                  B   536    				or c
004441 20 F3               B   537    				jr nz,sd_wdt
004443 0C                  B   538    				inc c						; d
004444 C1                  B   539    sd_gdt			pop bc
004445 C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
004446                     B   544    sd_send_eight_clocks
                           B   545    
004446 3EFF                B   546    				ld a,0ffh
004448 CD C2 44 00         B   547    				call sd_send_byte
00444C C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
00444D                     B   553    sd_send_command_null_args
                           B   554    
00444D 21000000            B   555    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004451 22 BC 44 00         B   556    				ld (cmd_generic_args),hl	; c
004455 22 BD 44 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
004459                     B   561    sd_send_command_current_args
                           B   562    	
004459 21 BB 44 00         B   563    				ld hl,cmd_generic
00445D 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
00445E                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
00445E CD 22 45 00         B   574    				call sd_select_card				                           B   575    						
004462 CD 46 44 00         B   576    				call sd_send_eight_clocks		                           B   577    				
004466 C5                  B   578    				push bc
004467 0606                B   579    				ld b,6
004469 7E                  B   580    sd_sclp			ld a,(hl)
00446A CD C2 44 00         B   581    				call sd_send_byte				00446E 23                  B   582    				inc hl
00446F 10 F8               B   583    				djnz sd_sclp
004471 C1                  B   584    				pop bc
                           B   585    				
004472 CD CF 44 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
004476                     B   589    sd_wait_valid_response
                           B   590    				
004476 C5                  B   591    				push bc
004477 0600                B   592    				ld b,0
004479 CD CF 44 00         B   593    sd_wncrl		call sd_get_byte				00447D CB7F                B   594    				bit 7,a							00447F 28 02               B   595    				jr z,sd_gcr
004481 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
004483 B7                  B   598    sd_gcr			or a							004484 C1                  B   599    				pop bc
004485 C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
004486                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
004486 21000800            B   607    				ld hl,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   608    	
00448A                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
00448A E5                  B   614    				push hl
00448B CD CF 44 00         B   615    sd_rblp			call sd_get_byte
00448F 77                  B   616    				ld (hl),a
004490 23                  B   617    				inc hl
004491 10 F8               B   618    				djnz sd_rblp
004493 E1                  B   619    				pop hl
004494 C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
004495 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
00449B 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
0044A1 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
0044A7 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
0044AF 3A303030 30303030 
0044B7 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
0044BB 00                  B   634    cmd_generic			db 00h
0044BC 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
0044C0 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
0044C1 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
0044C2                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
0044C2 ED3903              C     9    					out0 (port_sdc_data),a
0044C5 C5                  C    10    					push bc
0044C6 0E01                C    11    					ld c,port_hw_flags
0044C8 ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
0044CB 20 FB               C    13    					jr nz,sd_wb_loop			0044CD C1                  C    14    					pop bc
0044CE C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
0044CF                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
0044CF CD 46 44 00         C    23    					call sd_send_eight_clocks
0044D3 ED3803              C    24    					in0 a,(port_sdc_data)
0044D6 C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
0044D7                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
0044D7 C5                  C    35    					push bc
0044D8 D5                  C    36    					push de
0044D9 1EFF                C    37    					ld e,0ffh
0044DB ED1903              C    38    					out0 (port_sdc_data),e		0044DE 0E01                C    39    					ld c,port_hw_flags			0044E0 0600                C    40    					ld b,0						                           C    41    
0044E2 ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
0044E5 20 FB               C    43    					jr nz,sd_wser_loop1			0044E7 DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
0044E9 ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		0044EC 77                  C    47    					ld (hl),a					0044ED 23                  C    48    					inc hl						                           C    49    					
0044EE ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
0044F1 20 FB               C    51    					jr nz,sd_wser_loop2			0044F3 DB03                C    52    					in a,(port_sdc_data)		                           C    53    												0044F5 ED1903              C    54    					out0 (port_sdc_data),e		0044F8 77                  C    55    					ld (hl),a					0044F9 23                  C    56    					inc hl						                           C    57    					
0044FA ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
0044FD 20 FB               C    59    					jr nz,sd_wser_loop3			0044FF DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
004501 10 E6               C    62    					djnz sd_512_loop
004503 D1                  C    63    					pop de
004504 C1                  C    64    					pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
004505 C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
004506                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
004506 0E01                C    74    					ld c,port_hw_flags			004508 0600                C    75    					ld b,0						00450A 7E                  C    76    					ld a,(hl)
00450B ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
00450E 23                  C    78    					inc hl
00450F 7E                  C    79    					ld a,(hl)
004510 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
004513 20 FB               C    81    					jr nz,sd_wser_loop4			004515 ED3903              C    82    					out0 (port_sdc_data),a
004518 23                  C    83    					inc hl
004519 7E                  C    84    					ld a,(hl)
00451A ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
00451D 20 FB               C    86    					jr nz,sd_wser_loop5
00451F 10 EA               C    87    					djnz sd_wr512_loop
004521 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
004522 F5                  C    95    sd_select_card		push af
004523 3E02                C    96    					ld a,00h+(1<<sdc_cs)		004525 ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
004528 F1                  C    98    					pop af
004529 C9                  C    99    					ret
                           C   100    
                           C   101    
00452A F5                  C   102    sd_deselect_card	push af
00452B 3E82                C   103    					ld a,080h+(1<<sdc_cs)		00452D ED3902              C   104    					out0 (port_sdc_ctrl),a
004530 CD 46 44 00         C   105    					call sd_send_eight_clocks	004534 F1                  C   106    					pop af
004535 C9                  C   107    					ret
                           C   108    
                           C   109    
004536 F5                  C   110    sd_power_on			push af
004537 3A040000            C   111    					ld a,(1<<sdc_speed)			00453B ED3902              C   112    					out0 (port_sdc_ctrl),a		00453E 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
004540 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
004542 F5                  C   117    sd_power_off		push af
004543 3E01                C   118    					ld a,00h+(1<<sdc_power)		004545 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
004547 F5                  C   122    sd_spi_port_fast	push af
004548 3E84                C   123    					ld a,80h+(1<<sdc_speed)		00454A 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3861    	
                           A  3862    ; Additional storage device driver source can b
                           A  3863    ; Also add the driver's PROSE header address la
                           A  3864    
00454C 6F4100              A  3865    driver_table		dw24 sd_card_driver	; Stora
00454F 000000              A  3866    					dw24 0 				; Stora
004552 000000              A  3867    					dw24 0				; Stora
004555 000000              A  3868    					dw24 0				; Stora
                           A  3869    					
004558 000000              A  3870    					dw24 0				; Essen
                           A  3871    					
                           A  3872    ;----------------------------------------------
                           A  3873    ; IO routines
                           A  3874    ;----------------------------------------------
                           A  3875    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.06 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
00455B                     B     5    set_irq_vectors
                           B     6    		
00455B AF                  B     7    				xor a
00455C ED47                B     8    				ld i,a
                           B     9    						
00455E DD216F00 00         B    10    				ld ix,06fh						004563 0623                B    11    				ld b,35
004565 DD3600C3            B    12    init_ivect_lp1	ld (ix),0c3h					004569 ED3204              B    13    				lea ix,ix+4
00456C 10 F7               B    14    				djnz init_ivect_lp1
                           B    15    				
00456E 216F0000            B    16    				ld hl,6fh						004572 DD210A00 00         B    17    				ld ix,0ah
004577 11040000            B    18    				ld de,4
00457B 060B                B    19    				ld b,11							00457D DD7500              B    20    init_ivect_lp2	ld (ix),l
004580 DD7401              B    21    				ld (ix+1),h
004583 19                  B    22    				add hl,de
004584 ED3202              B    23    				lea ix,ix+2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004587 10 F4               B    24    				djnz init_ivect_lp2
004589 DD213000 00         B    25    				ld ix,30h						00458E 0619                B    26    				ld b,25
004590 DD7500              B    27    init_ivect_lp3	ld (ix),l
004593 DD7401              B    28    				ld (ix+1),h
004596 19                  B    29    				add hl,de
004597 ED3202              B    30    				lea ix,ix+2
00459A 10 F4               B    31    				djnz init_ivect_lp3
                           B    32    				
00459C 21 DC 45 00         B    33    				ld hl,int_routine				0045A0 229C0000            B    34    				ld (09ch),hl					                           B    35    
0045A4 3EC3                B    36    				ld a,0c3h						0045A6 32660000            B    37    				ld (066h),a
0045AA 21 9C 47 00         B    38    				ld hl,nmi_routine				0045AE 22670000            B    39    				ld (067h),hl
0045B2 C9                  B    40    				ret
                           B    41    
                           B    42    
                           B    43    ;----------------------------------------------
                           B    44    
                           B    45    
0045B3 21 8E 6D 00         B    46    enable_os_irqs	ld hl,devices_connected			0045B7 CB46                B    47    				bit 0,(hl)
0045B9 C4 C4 45 00         B    48    				call nz,enable_kb_irq
0045BD CB4E                B    49    				bit 1,(hl)
0045BF C4 CA 45 00         B    50    				call nz,enable_ms_irq
0045C3 C9                  B    51    				ret
                           B    52    
                           B    53    
0045C4 3E81                B    54    enable_kb_irq	ld a,10000001b
0045C6 ED3905              B    55    				out0 (port_irq_ctrl),a			0045C9 C9                  B    56    				ret
                           B    57    
0045CA 3E82                B    58    enable_ms_irq	ld a,10000010b
0045CC ED3905              B    59    				out0 (port_irq_ctrl),a			0045CF C9                  B    60    				ret
                           B    61    
0045D0 3E02                B    62    disable_ms_irq	ld a,00000010b
0045D2 ED3905              B    63    				out0 (port_irq_ctrl),a			0045D5 C9                  B    64    				ret
                           B    65    
0045D6 3E3F                B    66    disable_irqs	ld a,00111111b
0045D8 ED3905              B    67    				out0 (port_irq_ctrl),a			0045DB C9                  B    68    				ret
                           B    69    			
                           B    70    ;----------------------------------------------
                           B    71    
                           B    72    
0045DC                     B    73    int_routine
0045DC F5                  B    74    				push af							0045DD ED3807              B    75    				in0 a,(port_ps2_ctrl)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0045E0 CB67                B    76    				bit 4,a
0045E2 C4 20 46 00         B    77    				call nz,kb_interrupt_handler
0045E6 ED3807              B    78    				in0 a,(port_ps2_ctrl)			0045E9 CB6F                B    79    				bit 5,a
0045EB C4 C2 46 00         B    80    				call nz,ms_interrupt_handler
0045EF F1                  B    81    				pop af
0045F0 FB                  B    82    				ei								0045F1 5BED4D              B    83    				reti.l							                           B    84    
                           B    85    
                           B    86    
0045F4                     B    87    prt1_irq_handler
                           B    88    
0045F4 F5                  B    89    				push af
0045F5 D5                  B    90    				push de
0045F6 E5                  B    91    				push hl
0045F7 ED3883              B    92    				in0 a,(TMR1_CTL)				                           B    93    				
0045FA 2A A4 6D 00         B    94    				ld hl,(milliseconds_counter)
0045FE 23                  B    95    				inc hl
0045FF 22 A4 6D 00         B    96    				ld (milliseconds_counter),hl
004603 11E80300            B    97    				ld de,1000
004607 AF                  B    98    				xor a
004608 ED52                B    99    				sbc hl,de
00460A 20 0D               B   100    				jr nz,sec_count_ok
00460C 22 A4 6D 00         B   101    				ld (milliseconds_counter),hl
004610 2A A7 6D 00         B   102    				ld hl,(seconds_counter)
004614 23                  B   103    				inc hl
004615 22 A7 6D 00         B   104    				ld (seconds_counter),hl
004619 E1                  B   105    sec_count_ok	pop hl
00461A D1                  B   106    				pop de
00461B F1                  B   107    				pop af
00461C FB                  B   108    				ei
00461D 5BED4D              B   109    				reti.l
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Keyboard IRQ routine v0.03
                           B   113    ;----------------------------------------------
                           B   114    
004620                     B   115    kb_interrupt_handler
                           B   116    
                           B   117    ;--- irq test ---------------------------------
                           B   118    
                           B   119    ;				push bc
                           B   120    ;				ld a,0ffh
                           B   121    ;				ld (hw_palette),a
                           B   122    ;				ld b,0
                           B   123    ;testlp1		djnz testlp1
                           B   124    ;				ld a,0
                           B   125    ;				ld (hw_palette),a
                           B   126    ;				pop bc
                           B   127    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   128    ;--- end of test ------------------------------
                           B   129    
                           B   130    
004620 E5                  B   131    				push hl							004621 C5                  B   132    				push bc
                           B   133    				
004622 ED3802              B   134    key_loop		in0 a,(port_keyboard_data)		004625 47                  B   135    				ld b,a
                           B   136    
004626 3A 76 6F 00         B   137    				ld a,(key_release_mode)
00462A B7                  B   138    				or a
00462B 28 20               B   139    				jr z,key_pressed
                           B   140    			
00462D 78                  B   141    				ld a,b							00462E FEE0                B   142    				cp 0e0h							004630 28 61               B   143    				jr z,kirq_done	
004632 FEE1                B   144    				cp 0e1h
004634 28 5D               B   145    				jr z,kirq_done	
                           B   146    				
004636 CD 9D 46 00         B   147    				call qualifiers					00463A 7D                  B   148    				ld a,l
00463B 2F                  B   149    				cpl
00463C 6F                  B   150    				ld l,a
00463D 3A 78 6F 00         B   151    				ld a,(key_mod_flags)
004641 A5                  B   152    				and l							004642 32 78 6F 00         B   153    				ld (key_mod_flags),a
004646 AF                  B   154    				xor a
004647 32 76 6F 00         B   155    				ld (key_release_mode),a
00464B 18 46               B   156    				jr kirq_done
                           B   157    	
                           B   158    
00464D 78                  B   159    key_pressed		ld a,b							00464E FEE0                B   160    				cp 0e0h							004650 28 41               B   161    				jr z,kirq_done	
004652 FEE1                B   162    				cp 0e1h
004654 28 3D               B   163    				jr z,kirq_done	
                           B   164    			
004656 FEF0                B   165    				cp 0f0h							004658 20 08               B   166    				jr nz,not_krel
00465A 3E01                B   167    				ld a,1							00465C 32 76 6F 00         B   168    				ld (key_release_mode),a			004660 18 31               B   169    				jr kirq_done
                           B   170    	
                           B   171    	
004662 CD 9D 46 00         B   172    not_krel		call qualifiers					004666 3A 78 6F 00         B   173    				ld a,(key_mod_flags)			00466A B5                  B   174    				or l
00466B 32 78 6F 00         B   175    				ld (key_mod_flags),a			00466F 68                  B   176    				ld l,b
004670 01000000            B   177    				ld bc,0
004674 3A 74 6F 00         B   178    				ld a,(key_buf_wr_idx)
004678 4F                  B   179    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004679 7D                  B   180    				ld a,l
00467A 21 54 6F 00         B   181    				ld hl,scancode_buffer
00467E 09                  B   182    				add hl,bc
00467F 77                  B   183    				ld (hl),a						004680 0E10                B   184    				ld c,16
004682 09                  B   185    				add hl,bc
004683 3A 78 6F 00         B   186    				ld a,(key_mod_flags)			004687 77                  B   187    				ld (hl),a	
004688 3A 74 6F 00         B   188    				ld a,(key_buf_wr_idx)
00468C 3C                  B   189    				inc a
00468D E60F                B   190    				and 15
00468F 32 74 6F 00         B   191    				ld (key_buf_wr_idx),a			                           B   192    				
004693 ED3807              B   193    kirq_done		in0 a,(port_ps2_ctrl)			004696 CB67                B   194    				bit 4,a	
004698 20 88               B   195    				jr nz,key_loop
                           B   196    
00469A C1                  B   197    				pop bc
00469B E1                  B   198    				pop hl
00469C C9                  B   199    				ret
                           B   200    
                           B   201    
00469D 2E40                B   202    qualifiers		ld l,040h		;apps
00469F FE2F                B   203    				cp 02fh
0046A1 C8                  B   204    				ret z
                           B   205    			
0046A2 2E20                B   206    				ld l,020h		;r gui
0046A4 FE27                B   207    				cp 027h
0046A6 C8                  B   208    				ret z
                           B   209    			
0046A7 2E10                B   210    				ld l,010h		;r shift
0046A9 FE59                B   211    				cp 059h
0046AB C8                  B   212    				ret z
                           B   213    			
0046AC 2E08                B   214    				ld l,08h		; alt
0046AE FE11                B   215    				cp 011h
0046B0 C8                  B   216    				ret z
                           B   217    			
0046B1 2E04                B   218    				ld l,04h		; l gui
0046B3 FE1F                B   219    				cp 01fh
                           B   220    			
0046B5 2E02                B   221    				ld l,02h		;l ctrl / r ctr
0046B7 FE14                B   222    				cp 14h
0046B9 C8                  B   223    				ret z
                           B   224    			
0046BA 2E01                B   225    				ld l,01h		;l shift
0046BC FE12                B   226    				cp 12h
0046BE C8                  B   227    				ret z
                           B   228    				
0046BF 2E00                B   229    				ld l,0
0046C1 C9                  B   230    				ret
                           B   231    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   232    ;----------------------------------------------
                           B   233    ; Mouse IRQ routine v0.03
                           B   234    ;----------------------------------------------
                           B   235    
0046C2                     B   236    ms_interrupt_handler
                           B   237    
                           B   238    ;--- irq test ---------------------------------
                           B   239    
                           B   240    ;				push bc
                           B   241    ;				ld a,0ffh
                           B   242    ;				ld (hw_palette),a
                           B   243    ;				ld b,0
                           B   244    ;testlp1		djnz testlp1
                           B   245    ;				ld a,0
                           B   246    ;				ld (hw_palette),a
                           B   247    ;				pop bc
                           B   248    				
                           B   249    ;--- end of test ------------------------------
                           B   250    
                           B   251    
0046C2 C5                  B   252    				push bc							0046C3 D5                  B   253    				push de							0046C4 E5                  B   254    				push hl							                           B   255    							
0046C5 11000000            B   256    ms_loop			ld de,0		
0046C9 3A 81 6F 00         B   257    				ld a,(mouse_packet_index)		0046CD 5F                  B   258    				ld e,a
0046CE 21 7D 6F 00         B   259    				ld hl,mouse_packet	
0046D2 19                  B   260    				add hl,de
0046D3 ED3806              B   261    				in0 a,(port_mouse_data)
0046D6 77                  B   262    				ld (hl),a
                           B   263    								
0046D7 21 7C 6F 00         B   264    				ld hl,mouse_packet_size
0046DB 1C                  B   265    				inc e							0046DC 7B                  B   266    				ld a,e
0046DD BE                  B   267    				cp (hl)
0046DE C2 87 47 00         B   268    				jr nz,msubpkt
                           B   269    
0046E2 3A 7D 6F 00         B   270    				ld a,(mouse_packet)				0046E6 4F                  B   271    				ld c,a	
0046E7 E607                B   272    				and 0111b
0046E9 32 82 6F 00         B   273    				ld (mouse_buttons),a
                           B   274    				
0046ED 11000000            B   275    				ld de,0							0046F1 CB61                B   276    				bit 4,c
0046F3 28 01               B   277    				jr z,mxsignpos
0046F5 1B                  B   278    				dec de
0046F6 3A 7E 6F 00         B   279    mxsignpos		ld a,(mouse_packet+1)
0046FA 5F                  B   280    				ld e,a
0046FB 2A 83 6F 00         B   281    				ld hl,(mouse_disp_x)
0046FF 19                  B   282    				add hl,de
004700 22 83 6F 00         B   283    				ld (mouse_disp_x),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   284    				
004704 2A 89 6F 00         B   285    				ld hl,(mouse_abs_x)				004708 19                  B   286    				add hl,de
004709 22 89 6F 00         B   287    				ld (mouse_abs_x),hl
00470D CB61                B   288    				bit 4,c
00470F 20 12               B   289    				jr nz,m_abs_neg_x
004711 ED5B 91 6F 00       B   290    				ld de,(mouse_window_size_x)
004716 AF                  B   291    				xor a
004717 ED52                B   292    				sbc hl,de
004719 38 13               B   293    				jr c,m_abs_x_ok
00471B 1B                  B   294    				dec de
00471C ED53 89 6F 00       B   295    				ld (mouse_abs_x),de
004721 18 0B               B   296    				jr m_abs_x_ok
004723 29                  B   297    m_abs_neg_x		add hl,hl
004724 30 08               B   298    				jr nc,m_abs_x_ok
004726 21000000            B   299    				ld hl,0
00472A 22 89 6F 00         B   300    				ld (mouse_abs_x),hl
                           B   301    				
                           B   302    				
00472E 11000000            B   303    m_abs_x_ok		ld de,0							004732 CB69                B   304    				bit 5,c
004734 28 01               B   305    				jr z,mysignpos
004736 1B                  B   306    				dec de
004737 3A 7F 6F 00         B   307    mysignpos		ld a,(mouse_packet+2)
00473B 5F                  B   308    				ld e,a
00473C 2A 86 6F 00         B   309    				ld hl,(mouse_disp_y)			004740 AF                  B   310    				xor a							004741 ED52                B   311    				sbc hl,de
004743 22 86 6F 00         B   312    				ld (mouse_disp_y),hl
                           B   313    				
004747 2A 8C 6F 00         B   314    				ld hl,(mouse_abs_y)				00474B AF                  B   315    				xor a
00474C ED52                B   316    				sbc hl,de
00474E 22 8C 6F 00         B   317    				ld (mouse_abs_y),hl
004752 CB69                B   318    				bit 5,c
004754 28 12               B   319    				jr z,m_abs_neg_y
004756 ED5B 94 6F 00       B   320    				ld de,(mouse_window_size_y)
00475B AF                  B   321    				xor a
00475C ED52                B   322    				sbc hl,de
00475E 38 13               B   323    				jr c,m_abs_y_ok
004760 1B                  B   324    				dec de
004761 ED53 8C 6F 00       B   325    				ld (mouse_abs_y),de
004766 18 0B               B   326    				jr m_abs_y_ok
004768 29                  B   327    m_abs_neg_y		add hl,hl
004769 30 08               B   328    				jr nc,m_abs_y_ok
00476B 21000000            B   329    				ld hl,0
00476F 22 8C 6F 00         B   330    				ld (mouse_abs_y),hl
004773                     B   331    m_abs_y_ok			
                           B   332    
004773 21 80 6F 00         B   333    				ld hl,mouse_packet+3			004777 3A 8F 6F 00         B   334    				ld a,(mouse_wheel)
00477B 86                  B   335    				add a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
00477C 32 8F 6F 00         B   336    				ld (mouse_wheel),a
                           B   337    				
004780 3E01                B   338    				ld a,1
004782 32 90 6F 00         B   339    				ld (mouse_updated),a			                           B   340    				
004786 AF                  B   341    				xor a
004787 32 81 6F 00         B   342    msubpkt			ld (mouse_packet_index),a
                           B   343    				
00478B ED3807              B   344    				in0 a,(port_ps2_ctrl)			00478E CB6F                B   345    				bit 5,a
004790 C2 C5 46 00         B   346    				jr nz,ms_loop				
                           B   347    				
004794 CD 34 4B 00         B   348    				call hwsc_update_pointer_sprite
                           B   349    
004798 E1                  B   350    				pop hl
004799 D1                  B   351    				pop de
00479A C1                  B   352    				pop bc
00479B C9                  B   353    				ret
                           B   354    				
                           B   355    				
                           B   356    ;----------------------------------------------
                           B   357    ; ez80p NMI code v0.03
                           B   358    ;----------------------------------------------
                           B   359    
00479C F5                  B   360    nmi_routine		push af							00479D ED3805              B   361    				in0 a,(port_irq_flags)			0047A0 CB77                B   362    				bit 6,a							0047A2 20 09               B   363    				jr nz,freeze
0047A4 3E20                B   364    				ld a,00100000b					0047A6 ED3909              B   365    				out0 (port_clear_flags),a		0047A9 F1                  B   366    				pop af
0047AA 5BED45              B   367    				retn.l
                           B   368    				
0047AD F1                  B   369    freeze			pop af
0047AE CD 34 15 00         B   370    				call os_store_CPU_regs
                           B   371    				
0047B2 21000000            B   372    				ld hl,0
0047B6 39                  B   373    				add hl,sp
0047B7 7E                  B   374    				ld a,(hl)						0047B8 E601                B   375    				and 1
0047BA 32 CE 6D 00         B   376    				ld (store_adl),a
0047BE 20 0A               B   377    				jr nz,adl_freeze
0047C0 23                  B   378    				inc hl
0047C1 5E                  B   379    				ld e,(hl)						0047C2 23                  B   380    				inc hl
0047C3 56                  B   381    				ld d,(hl)
0047C4 CD 60 17 00         B   382    				call mbase_de
0047C8 18 02               B   383    				jr got_pc
                           B   384    				
0047CA 33                  B   385    adl_freeze		inc sp
0047CB D1                  B   386    				pop de							0047CC ED53 C4 6D 00       B   387    got_pc			ld (store_pc),de				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   388    				
0047D1 CD EF 47 00         B   389    				call disable_button_nmi
0047D5 3E40                B   390    				ld a,01000000b
0047D7 ED3909              B   391    				out0 (port_clear_flags),a		0047DA 3E01                B   392    				ld a,1
0047DC 32 8C 6D 00         B   393    				ld (frozen),a
0047E0 C3 56 0A 00         B   394    				jp os_cold_start				                           B   395    
                           B   396    ;----------------------------------------------
                           B   397    
                           B   398    ;nmi_routine
                           B   399    ;
                           B   400    ;				push af							                           B   401    ;				push bc
                           B   402    ;				ld a,0ffh
                           B   403    ;				ld (hw_palette),a
                           B   404    ;				ld b,0
                           B   405    ;nmi_testlp2		djnz nmi_testlp2
                           B   406    ;				ld a,0
                           B   407    ;				ld (hw_palette),a
                           B   408    ;				pop bc
                           B   409    ;				ld a,01100000b
                           B   410    ;				out0 (port_clear_flags)
                           B   411    ;				pop af
                           B   412    ;				retn.l							                           B   413    
                           B   414    
                           B   415    ;----------------------------------------------
                           B   416    
0047E4                     B   417    enable_button_nmi
                           B   418    
0047E4 3E40                B   419    				ld a,01000000b
0047E6 ED3909              B   420    				out0 (port_clear_flags),a		0047E9 3EC0                B   421    				ld a,11000000b					0047EB ED3905              B   422    				out0 (port_irq_ctrl),a			0047EE C9                  B   423    				ret
                           B   424    
                           B   425    
0047EF                     B   426    disable_button_nmi
                           B   427    
0047EF 3E40                B   428    				ld a,01000000b					0047F1 ED3905              B   429    				out0 (port_irq_ctrl),a
0047F4 C9                  B   430    				ret
                           B   431    
                           B   432    
0047F5                     B   433    disable_all_nmis
                           B   434    
0047F5 3E60                B   435    				ld a,01100000b					0047F7 ED3905              B   436    				out0 (port_irq_ctrl),a
0047FA C9                  B   437    				ret
                           B   438    				
                           B   439    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   440    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
0047FB                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
0047FB C5                  B    10    				push bc
0047FC 3A 22 6C 00         B    11    				ld a,(serial_timeout)
004800 47                  B    12    				ld b,a
004801 3ECC                B    13    rx_set_timer	ld a,cch
004803 ED3981              B    14    				out0 (TMR0_RR_L),a				004806 3E0C                B    15    				ld a,0ch
004808 ED3982              B    16    				out0 (TMR0_RR_H),a				00480B 3E03                B    17    				ld a,00000011b					00480D ED3980              B    18    				out0 (TMR0_CTL),a				004810 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
004813 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					004815 ED7401              B    22    				tstio 1							004818 20 0E               B    23    				jr nz,rx_in_buffer
00481A AF                  B    24    				xor a
00481B B0                  B    25    				or b
00481C 28 13               B    26    				jr z,rx_time_out
00481E 0E80                B    27    				ld c,TMR0_CTL	
004820 ED7480              B    28    				tstio 128						004823 28 EE               B    29    				jr z,rx_byte_lp		
004825 05                  B    30    				dec b
004826 18 D9               B    31    				jr rx_set_timer
                           B    32    
004828 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
00482C ED78                B    34    				in a,(bc)						00482E C1                  B    35    				pop bc
00482F BF                  B    36    				cp a							004830 C9                  B    37    				ret
                           B    38    
004831 C1                  B    39    rx_time_out		pop bc
004832 3E83                B    40    				ld a,083h						004834 B7                  B    41    				or a							004835 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
004836                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    51    
004836 C5                  B    52    				push bc
004837 0EC5                B    53    				ld c,UART0_LSR					004839 ED7420              B    54    rs232_swait		tstio 020h						00483C 28 FB               B    55    				jr z,rs232_swait
00483E 01C00000            B    56    				ld bc,UART0_THR
004842 ED79                B    57    				out (c),a						004844 C1                  B    58    				pop bc
004845 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
004846                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
004846 7A                  B    68    				ld a,d
004847 CD 36 48 00         B    69    				call send_serial_byte
00484B 7B                  B    70    				ld a,e
00484C CD 36 48 00         B    71    				call send_serial_byte
004850 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
004851                     B    76    hwsc_flush_serial_buffer
                           B    77    
004851 C5                  B    78    				push bc
004852 01C00000            B    79    				ld bc,UART0_RBR
004856 ED78                B    80    				in a,(bc)						004858 C1                  B    81    				pop bc
004859 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
00485A                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
00485A E603                B    15    				and 3
00485C 32 F3 6B 00         B    16    				ld (video_doubling),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004860 79                  B    17    				ld a,c
004861 32 F4 6B 00         B    18    				ld (charmap_rows),a
004865 78                  B    19    				ld a,b
004866 32 F7 6B 00         B    20    				ld (charmap_columns),a
00486A 21000000            B    21    				ld hl,0
00486E 69                  B    22    				ld l,c
00486F 60                  B    23    				ld h,b
004870 ED6C                B    24    				mlt hl
004872 29                  B    25    				add hl,hl
004873 22 A1 6D 00         B    26    				ld (charmap_size),hl
004877 11004080            B    27    				ld de,charmap_addr
00487B 19                  B    28    				add hl,de
00487C 22 95 6D 00         B    29    				ld (free_vram_a_base),hl		                           B    30    				
004880 CD 86 48 00         B    31    				call os_set_video_hw_regs
004884 AF                  B    32    				xor a
004885 C9                  B    33    				ret
                           B    34    				
                           B    35    
004886                     B    36    os_set_video_hw_regs
                           B    37    
004886 3A F3 6B 00         B    38    				ld a,(video_doubling)
00488A CB27                B    39    				sla a
00488C F618                B    40    				or 00011000b
00488E 320018FF            B    41    				ld (video_control),a			004892 AF                  B    42    				xor a
004893 320218FF            B    43    				ld (bgnd_palette_select),a
004897 3E63                B    44    				ld a,99
004899 320418FF            B    45    				ld (right_border_position),a
                           B    46    
00489D DD210010 FF         B    47    				ld ix,tilemap_parameters		0048A2 21004080            B    48    				ld hl,charmap_addr
0048A6 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
0048A9 21020000            B    51    				ld hl,2
0048AD DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
0048B0 21000008            B    54    				ld hl,80000h
0048B4 11000000            B    55    				ld de,0
0048B8 3A F7 6B 00         B    56    				ld a,(charmap_columns)
0048BC 5F                  B    57    				ld e,a
0048BD AF                  B    58    				xor a
0048BE ED52                B    59    				sbc hl,de
0048C0 AF                  B    60    				xor a
0048C1 ED52                B    61    				sbc hl,de
0048C3 DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
0048C6 21000000            B    64    				ld hl,0
0048CA DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
0048CD 3A F7 6B 00         B    67    				ld a,(charmap_columns)
0048D1 3D                  B    68    				dec a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0048D2 DD7710              B    69    				ld (ix+10h),a					                           B    70    				
0048D5 3E00                B    71    				ld a,0
0048D7 DD7711              B    72    				ld (ix+11h),a					0048DA DD7712              B    73    				ld (ix+12h),a					                           B    74    
0048DD 21 CE 6B 00         B    75    				ld hl,pen_palette
0048E1 CD F0 48 00         B    76    				call hswc_set_ui_colours
                           B    77    				
0048E5 CD 1B 4B 00         B    78    				call hwsc_reset_sprites
                           B    79    				
0048E9 AF                  B    80    				xor a
0048EA 32 97 6F 00         B    81    				ld (os_pointer_enable),a		                           B    82    				
0048EE AF                  B    83    				xor a							0048EF C9                  B    84    				ret
                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    				
0048F0                     B    88    hswc_set_ui_colours
                           B    89    
0048F0 110000FF            B    90    				ld de,hw_palette
0048F4 01200000            B    91    				ld bc,16*2
0048F8 EDB0                B    92    				ldir
0048FA AF                  B    93    				xor a							0048FB C9                  B    94    				ret
                           B    95    
                           B    96    
                           B    97    ;----------------------------------------------
                           B    98    
0048FC                     B    99    hwsc_clear_screen
                           B   100    
0048FC 21004080            B   101    				ld hl,charmap_addr				004900 3620                B   102    				ld (hl),32						004902 23                  B   103    				inc hl
004903 CD 22 49 00         B   104    				call get_fill_attr
004907 77                  B   105    				ld (hl),a
004908 23                  B   106    				inc hl
004909 EB                  B   107    				ex de,hl
00490A 21004080            B   108    				ld hl,charmap_addr
00490E ED4B A1 6D 00       B   109    				ld bc,(charmap_size)
004913 0B                  B   110    				dec bc
004914 0B                  B   111    				dec bc
004915 EDB0                B   112    				ldir
                           B   113    				
004917 01000000            B   114    				ld bc,0
00491B ED43 39 6E 00       B   115    				ld (cursor_y),bc
004920 AF                  B   116    				xor a							004921 C9                  B   117    				ret
                           B   118    				
                           B   119    				
004922 D5                  B   120    get_fill_attr	push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004923 3A CA 6B 00         B   121    				ld a,(current_pen)
004927 E60F                B   122    				and 0fh
004929 5F                  B   123    				ld e,a
00492A 3A CC 6B 00         B   124    				ld a,(background_colour)
00492E 0F                  B   125    				rrca
00492F 0F                  B   126    				rrca
004930 0F                  B   127    				rrca
004931 0F                  B   128    				rrca
004932 E6F0                B   129    				and 0f0h
004934 B3                  B   130    				or e
004935 D1                  B   131    				pop de
004936 C9                  B   132    				ret
                           B   133    				
                           B   134    
                           B   135    ;----------------------------------------------
                           B   136    
004937                     B   137    hwsc_scroll_up	
                           B   138    				
004937 C5                  B   139    				push bc
004938 D5                  B   140    				push de
004939 E5                  B   141    				push hl
                           B   142    
00493A 2A A1 6D 00         B   143    				ld hl,(charmap_size)
00493E ED5B F7 6B 00       B   144    				ld de,(charmap_columns)
004943 AF                  B   145    				xor a
004944 ED52                B   146    				sbc hl,de
004946 ED52                B   147    				sbc hl,de						004948 E5                  B   148    				push hl
004949 C1                  B   149    				pop bc							00494A 21004080            B   150    				ld hl,charmap_addr
00494E E5                  B   151    				push hl
00494F 19                  B   152    				add hl,de
004950 19                  B   153    				add hl,de
004951 D1                  B   154    				pop de
004952 EDB0                B   155    				ldir
                           B   156    				
004954 EB                  B   157    				ex de,hl						004955 E5                  B   158    				push hl
004956 3620                B   159    				ld (hl),32
004958 23                  B   160    				inc hl
004959 CD 22 49 00         B   161    				call get_fill_attr
00495D 77                  B   162    				ld (hl),a
00495E 2A F7 6B 00         B   163    				ld hl,(charmap_columns)
004962 2B                  B   164    				dec hl
004963 29                  B   165    				add hl,hl
004964 E5                  B   166    				push hl
004965 C1                  B   167    				pop bc
004966 E1                  B   168    				pop hl
004967 E5                  B   169    				push hl
004968 D1                  B   170    				pop de
004969 13                  B   171    				inc de
00496A 13                  B   172    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00496B EDB0                B   173    				ldir
                           B   174    				
00496D E1                  B   175    				pop hl
00496E D1                  B   176    				pop de
00496F C1                  B   177    				pop bc
004970 AF                  B   178    				xor a							004971 C9                  B   179    				ret
                           B   180    
                           B   181    
                           B   182    ;----------------------------------------------
                           B   183    
004972                     B   184    hwsc_plot_char
                           B   185    
                           B   186    ; Set:
                           B   187    ; ----
                           B   188    ; A = ascii char
                           B   189    ; B = x character coordinate 
                           B   190    ; C = y character coordinate
                           B   191    
004972 E5                  B   192    				push hl							004973 D5                  B   193    				push de
004974 F5                  B   194    				push af
                           B   195    
004975 3A F4 6B 00         B   196    				ld a,(charmap_rows)				004979 3D                  B   197    				dec a
00497A B9                  B   198    				cp c							00497B 38 08               B   199    				jr c,win_err
00497D 3A F7 6B 00         B   200    				ld a,(charmap_columns)
004981 3D                  B   201    				dec a
004982 B8                  B   202    				cp b
004983 30 07               B   203    				jr nc,win_ok
004985 F1                  B   204    win_err			pop af
004986 D1                  B   205    				pop de
004987 E1                  B   206    				pop hl
004988 3E88                B   207    				ld a,88h						00498A B7                  B   208    				or a
00498B C9                  B   209    				ret
                           B   210    				
00498C 2A F7 6B 00         B   211    win_ok			ld hl,(charmap_columns)			004990 61                  B   212    				ld h,c
004991 ED6C                B   213    				mlt hl
004993 11000000            B   214    				ld de,0
004997 58                  B   215    				ld e,b
004998 19                  B   216    				add hl,de
004999 29                  B   217    				add hl,hl
00499A 11004080            B   218    				ld de,charmap_addr
00499E 19                  B   219    				add hl,de
00499F F1                  B   220    				pop af
0049A0 77                  B   221    				ld (hl),a
0049A1 23                  B   222    				inc hl
0049A2 3A CA 6B 00         B   223    				ld a,(current_pen)
0049A6 77                  B   224    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0049A7 D1                  B   225    				pop de
0049A8 E1                  B   226    				pop hl
0049A9 AF                  B   227    				xor a
0049AA C9                  B   228    				ret
                           B   229    				
                           B   230    				
                           B   231    ;----------------------------------------------
                           B   232    
0049AB                     B   233    hwsc_remove_cursor
                           B   234    
0049AB 3A F0 6B 00         B   235    				ld a,(cursor_present)			0049AF B7                  B   236    				or a
0049B0 C8                  B   237    				ret z
0049B1 ED4B 39 6E 00       B   238    				ld bc,(cursor_y)
0049B6 CD 19 4A 00         B   239    				call hwsc_get_charmap_addr_xy
0049BA 3A EF 6B 00         B   240    				ld a,(char_under_cursor)
0049BE 77                  B   241    				ld (hl),a
0049BF AF                  B   242    				xor a
0049C0 32 F0 6B 00         B   243    				ld (cursor_present),a
0049C4 C9                  B   244    				ret
                           B   245    
                           B   246    
0049C5                     B   247    hwsc_draw_cursor
                           B   248    								
0049C5 3A F0 6B 00         B   249    				ld a,(cursor_present)			0049C9 B7                  B   250    				or a
0049CA C0                  B   251    				ret nz
0049CB 3C                  B   252    				inc a
0049CC 32 F0 6B 00         B   253    				ld (cursor_present),a
                           B   254    				
0049D0 ED4B 39 6E 00       B   255    				ld bc,(cursor_y)
0049D5 CD 19 4A 00         B   256    				call hwsc_get_charmap_addr_xy
0049D9 7E                  B   257    				ld a,(hl)						0049DA 32 EF 6B 00         B   258    				ld (char_under_cursor),a		0049DE 36FF                B   259    				ld (hl),ffh						                           B   260    				
0049E0 11400000            B   261    				ld de,64						0049E4 57                  B   262    				ld d,a
0049E5 ED5C                B   263    				mlt de
0049E7 FD210000 80         B   264    				ld iy,vram_a_addr				0049EC FD19                B   265    				add iy,de						                           B   266    				
0049EE 21400000            B   267    				ld hl,64
0049F2 3A F2 6B 00         B   268    				ld a,(cursor_image_char)
0049F6 67                  B   269    				ld h,a
0049F7 ED6C                B   270    				mlt hl
0049F9 11000080            B   271    				ld de,vram_a_addr
0049FD 19                  B   272    				add hl,de
                           B   273    				
0049FE DD21C03F 80         B   274    				ld ix,vram_a_addr+03fc0h
004A03 11080000            B   275    				ld de,8
004A07 0608                B   276    				ld b,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004A09 FD7E00              B   277    cur_loop		ld a,(iy)						004A0C AE                  B   278    				xor (hl)						004A0D DD7700              B   279    				ld (ix),a						004A10 FD19                B   280    				add iy,de
004A12 DD19                B   281    				add ix,de
004A14 19                  B   282    				add hl,de
004A15 10 F2               B   283    				djnz cur_loop
                           B   284    				
004A17 AF                  B   285    				xor a
004A18 C9                  B   286    				ret
                           B   287    				
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    
004A19                     B   291    hwsc_get_charmap_addr_xy
                           B   292    
                           B   293    ; returns address of charmap in xHL for charact
                           B   294    ; and attrmap in xDE
                           B   295    				
004A19 2A F7 6B 00         B   296    				ld hl,(charmap_columns)			004A1D 61                  B   297    				ld h,c
004A1E ED6C                B   298    				mlt hl
004A20 11000000            B   299    				ld de,0
004A24 58                  B   300    				ld e,b
004A25 19                  B   301    				add hl,de
004A26 29                  B   302    				add hl,hl
004A27 11004080            B   303    				ld de,charmap_addr
004A2B 19                  B   304    				add hl,de
004A2C E5                  B   305    				push hl
004A2D D1                  B   306    				pop de
004A2E 13                  B   307    				inc de
004A2F AF                  B   308    				xor a
004A30 C9                  B   309    				ret
                           B   310    								
                           B   311    ;----------------------------------------------
                           B   312    
004A31                     B   313    hwsc_chars_left
                           B   314    
                           B   315    ; moves characters (in character map) on the cu
                           B   316    
004A31 E5                  B   317    				push hl
004A32 D5                  B   318    				push de
004A33 C5                  B   319    				push bc
                           B   320    				
004A34 2A F7 6B 00         B   321    				ld hl,(charmap_columns)
004A38 3A 39 6E 00         B   322    				ld a,(cursor_y)
004A3C 67                  B   323    				ld h,a
004A3D ED6C                B   324    				mlt hl
004A3F 11000000            B   325    				ld de,0
004A43 58                  B   326    				ld e,b
004A44 19                  B   327    				add hl,de
004A45 29                  B   328    				add hl,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004A46 11004080            B   329    				ld de,charmap_addr
004A4A 19                  B   330    				add hl,de
                           B   331    				
004A4B 3A F7 6B 00         B   332    				ld a,(charmap_columns)
004A4F 90                  B   333    				sub b
004A50 CB27                B   334    				sla a
004A52 01000000            B   335    				ld bc,0
004A56 4F                  B   336    				ld c,a
004A57 E5                  B   337    				push hl
004A58 D1                  B   338    				pop de
004A59 1B                  B   339    				dec de
004A5A 1B                  B   340    				dec de
004A5B EDB0                B   341    				ldir
                           B   342    				
004A5D 3E20                B   343    				ld a,32						;pu
004A5F 12                  B   344    				ld (de),a
004A60 13                  B   345    				inc de
004A61 CD 22 49 00         B   346    				call get_fill_attr
004A65 12                  B   347    				ld (de),a
                           B   348    				
004A66 C1                  B   349    				pop bc
004A67 D1                  B   350    				pop de
004A68 E1                  B   351    				pop hl
004A69 C9                  B   352    				ret
                           B   353    
                           B   354    
                           B   355    ;----------------------------------------------
                           B   356    
                           B   357    
004A6A                     B   358    hwsc_chars_right
                           B   359    
                           B   360    ; moves characters on current line right from c
                           B   361    
004A6A C5                  B   362    				push bc
004A6B D5                  B   363    				push de
004A6C E5                  B   364    				push hl
                           B   365    	
004A6D 21 3A 6E 00         B   366    				ld hl,cursor_x				
004A71 3A F7 6B 00         B   367    				ld a,(charmap_columns)
004A75 3D                  B   368    				dec a
004A76 BE                  B   369    				cp (hl)			
004A77 28 30               B   370    				jr z,chright_end
004A79 46                  B   371    				ld b,(hl)
                           B   372    				
004A7A 2A F7 6B 00         B   373    				ld hl,(charmap_columns)
004A7E 3A 39 6E 00         B   374    				ld a,(cursor_y)
004A82 3C                  B   375    				inc a							004A83 67                  B   376    				ld h,a
004A84 ED6C                B   377    				mlt hl
004A86 29                  B   378    				add hl,hl
004A87 11004080            B   379    				ld de,charmap_addr
004A8B 19                  B   380    				add hl,de					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004A8C 2B                  B   381    				dec hl							004A8D E5                  B   382    				push hl
004A8E D1                  B   383    				pop de							004A8F 2B                  B   384    				dec hl
004A90 2B                  B   385    				dec hl							004A91 3A F7 6B 00         B   386    				ld a,(charmap_columns)
004A95 90                  B   387    				sub b
004A96 3D                  B   388    				dec a
004A97 CB27                B   389    				sla a
004A99 01000000            B   390    				ld bc,0
004A9D 4F                  B   391    				ld c,a							004A9E EDB8                B   392    				lddr
004AA0 23                  B   393    				inc hl							004AA1 3620                B   394    				ld (hl),32
004AA3 23                  B   395    				inc hl
004AA4 CD 22 49 00         B   396    				call get_fill_attr
004AA8 77                  B   397    				ld (hl),a
                           B   398    							
004AA9 E1                  B   399    chright_end		pop hl	
004AAA D1                  B   400    				pop de
004AAB C1                  B   401    				pop bc
004AAC C9                  B   402    				ret
                           B   403    
                           B   404    ;----------------------------------------------
                           B   405    
                           B   406    
004AAD                     B   407    hwsc_charline_to_command_string	
                           B   408    				
                           B   409    				
004AAD 2A F7 6B 00         B   410    				ld hl,(charmap_columns)			004AB1 3A 39 6E 00         B   411    				ld a,(cursor_y)
004AB5 67                  B   412    				ld h,a
004AB6 ED6C                B   413    				mlt hl
004AB8 29                  B   414    				add hl,hl
004AB9 11004080            B   415    				ld de,charmap_addr
004ABD 19                  B   416    				add hl,de
004ABE 11 57 6E 00         B   417    				ld de,commandstring
004AC2 0650                B   418    				ld b,max_buffer_chars			004AC4 7E                  B   419    copy_to_cmdline	ld a,(hl)
004AC5 12                  B   420    				ld (de),a
004AC6 13                  B   421    				inc de
004AC7 23                  B   422    				inc hl
004AC8 23                  B   423    				inc hl
004AC9 10 F9               B   424    				djnz copy_to_cmdline
004ACB C9                  B   425    				ret
                           B   426    
                           B   427    ;----------------------------------------------
                           B   428    
                           B   429    
004ACC C5                  B   430    hwsc_wait_vrt	push bc
                           B   431    
004ACD 0E01                B   432    				ld c,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004ACF ED0909              B   433    				out0 (port_clear_flags),c
                           B   434    
004AD2 0E01                B   435    				ld c,port_hw_flags
004AD4 ED7420              B   436    ewaitvrtlp1		tstio 1<<vrt
004AD7 28 FB               B   437    				jr z,ewaitvrtlp1
                           B   438    				
004AD9 C1                  B   439    				pop bc
004ADA BF                  B   440    				cp a							004ADB C9                  B   441    				ret
                           B   442    
                           B   443    
                           B   444    ;----------------------------------------------
                           B   445    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------
                           B     2    ;Misc eZ80p specific routines v0.07
                           B     3    ;----------------------------------
                           B     4    
004ADC                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
004ADC 3E48                B     9    					ld a,01001000b				004ADE ED39AA              B    10    					out0 (CS0_CTL),a
004AE1 3E00                B    11    					ld a,000h					004AE3 ED39A8              B    12    					out0 (CS0_LBR),a
004AE6 3EFF                B    13    					ld a,0ffh	
004AE8 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004AEB 3E58                B    16    					ld a,01011000b
004AED ED39AD              B    17    					out0 (CS1_CTL),a			004AF0 3E00                B    18    					ld a,0
004AF2 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004AF5 3EFF                B    23    					ld a,0ffh
004AF7 ED399F              B    24    					out0 (PC_DDR),a				004AFA AF                  B    25    					xor a
004AFB ED39A0              B    26    					out0 (PC_ALT1),a
004AFE ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004B01 3EFF                B    29    					ld a,0ffh					004B03 ED39A3              B    30    					out0 (PD_DDR),a				004B06 AF                  B    31    					xor a	
004B07 ED39A4              B    32    					out0 (PD_ALT1),a			004B0A 3E0F                B    33    					ld a,00fh				
004B0C ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004B0F ED3892              B    38    					in0 a,(TMR_ISS)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004B12 E6FC                B    39    					and 11111100b
004B14 F601                B    40    					or  00000001b
004B16 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
004B19 AF                  B    43    					xor a
004B1A C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
004B1B AF                  B    49    hwsc_reset_sprites	xor a
004B1C 320118FF            B    50    					ld (sprite_control),a		004B20 3E04                B    51    					ld a,4
004B22 320718FF            B    52    					ld (sprite_gen_stop_pos),a	                           B    53    					
004B26 210008FF            B    54    					ld hl,hw_sprite_registers	004B2A 01000800            B    55    					ld bc,2048
004B2E AF                  B    56    					xor a
004B2F CD 28 17 00         B    57    					call os_bchl_memfill
004B33 C9                  B    58    					ret
                           B    59    					
                           B    60    ;----------------------------------------------
                           B    61    
                           B    62    
004B34                     B    63    hwsc_update_pointer_sprite
                           B    64    					
004B34 3A 97 6F 00         B    65    					ld a,(os_pointer_enable)	004B38 E601                B    66    					and 1
004B3A C8                  B    67    					ret z
                           B    68    
004B3B DDE5                B    69    					push ix
004B3D DD21F808 FF         B    70    					ld ix,hw_sprite_registers+(
004B42 2A 89 6F 00         B    71    					ld hl,(mouse_abs_x)
004B46 01000100            B    72    					ld bc,x_display_offset
004B4A 09                  B    73    					add hl,bc
004B4B DD7500              B    74    					ld (ix),l
004B4E DD7401              B    75    					ld (ix+1),h
004B51 2A 8C 6F 00         B    76    					ld hl,(mouse_abs_y)
004B55 01000200            B    77    					ld bc,y_display_offset
004B59 09                  B    78    					add hl,bc
004B5A DD7502              B    79    					ld (ix+2),l
004B5D DD7403              B    80    					ld (ix+3),h
004B60 ED4B 9B 6F 00       B    81    					ld bc,(os_pointer_height)
004B65 DD7104              B    82    					ld (ix+4),c
004B68 DD7005              B    83    					ld (ix+5),b
004B6B ED4B 98 6F 00       B    84    					ld bc,(os_pointer_definitio
004B70 DD7106              B    85    					ld (ix+6),c
004B73 DD7007              B    86    					ld (ix+7),b
004B76 DDE1                B    87    					pop ix
004B78 C9                  B    88    					ret
                           B    89    
                           B    90    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    91    ;----------------------------------------------
                           B    92    				
                           B    93    
004B79 11000000            B    94    hwsc_get_version	ld de,0
004B7D 0610                B    95    					ld b,16
004B7F 78                  B    96    gethwvlp			ld a,b
004B80 3D                  B    97    					dec a
004B81 ED3908              B    98    					out0 (port_selector),a		004B84 DB01                B    99    					in a,(port_hw_flags)		004B86 CB27                B   100    					sla a
004B88 CB13                B   101    					rl e
004B8A CB12                B   102    					rl d
004B8C 10 F1               B   103    					djnz gethwvlp				                           B   104    									
004B8E 21410000            B   105    					ld hl,prose_version
004B92 BF                  B   106    					cp a						004B93 C9                  B   107    					ret
                           B   108    
                           B   109    
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Timer0 related 
                           B   113    ;----------------------------------------------
                           B   114    
004B94                     B   115    hwsc_time_delay
                           B   116    
                           B   117    ; set DE to 32768Hz ticks to wait
                           B   118    
004B94 CD A0 4B 00         B   119    					call hwsc_set_timeout
004B98 CD B1 4B 00         B   120    twaitlp				call hwsc_test_timeout
004B9C 28 FA               B   121    					jr z,twaitlp
004B9E AF                  B   122    					xor a						004B9F C9                  B   123    					ret			
                           B   124    
                           B   125    ;----------------------------------------------
                           B   126    
                           B   127    ; Set DE to 32768 Hz ticks to allow before time
                           B   128    
004BA0 7B                  B   129    hwsc_set_timeout	ld a,e						004BA1 ED3981              B   130    					out0 (TMR0_RR_L),a			004BA4 7A                  B   131    					ld a,d
004BA5 ED3982              B   132    					out0 (TMR0_RR_H),a			004BA8 3E03                B   133    					ld a,00000011b				004BAA ED3980              B   134    					out0 (TMR0_CTL),a			004BAD ED3880              B   135    					in0 a,(TMR0_CTL)			004BB0 C9                  B   136    					ret
                           B   137    			
004BB1 ED3880              B   138    hwsc_test_timeout	in0 a,(TMR0_CTL)			004BB4 CB7F                B   139    					bit 7,a
004BB6 C9                  B   140    					ret
                           B   141    			
                           B   142    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   143    
004BB7                     B   144    hwsc_read_rtc
004BB7 D5                  B   145    					push de
004BB8 C5                  B   146    					push bc
004BB9 0EE0                B   147    hwsc_rtc_rlp		ld c,RTC_SEC
004BBB 0608                B   148    					ld b,8
004BBD 21 85 6D 00         B   149    					ld hl,time_data
004BC1 ED92                B   150    					inimr						004BC3 0EE0                B   151    					ld c,RTC_SEC
004BC5 0600                B   152    					ld b,0
004BC7 1E08                B   153    					ld e,8
004BC9 21 85 6D 00         B   154    					ld hl,time_data
004BCD ED78                B   155    timevloop			in a,(bc)					004BCF BE                  B   156    					cp (hl)						004BD0 20 E7               B   157    					jr nz,hwsc_rtc_rlp			004BD2 23                  B   158    					inc hl
004BD3 0C                  B   159    					inc c
004BD4 1D                  B   160    					dec e
004BD5 20 F6               B   161    					jr nz,timevloop
004BD7 21 85 6D 00         B   162    					ld hl,time_data
004BDB C1                  B   163    					pop bc
004BDC D1                  B   164    					pop de
004BDD BF                  B   165    					cp a						004BDE C9                  B   166    					ret
                           B   167    
                           B   168    
004BDF                     B   169    hwsc_write_rtc	
                           B   170    
                           B   171    ; set HL to location of BCD data for RTC: sec/m
                           B   172    
004BDF E5                  B   173    					push hl
004BE0 C5                  B   174    					push bc
004BE1 3E21                B   175    					ld a,00100001b				004BE3 ED39ED              B   176    					out0 (RTC_CTRL),a
004BE6 0EE0                B   177    					ld c,RTC_SEC
004BE8 0608                B   178    					ld b,8
004BEA ED93                B   179    					otimr
004BEC 3E20                B   180    					ld a,00100000b				004BEE ED39ED              B   181    					out0 (RTC_CTRL),a
004BF1 C1                  B   182    					pop bc
004BF2 E1                  B   183    					pop hl
004BF3 BF                  B   184    					cp a						004BF4 C9                  B   185    					ret	
                           B   186    
                           B   187    ;----------------------------------------------
                           B   188    ; Timer1 related 
                           B   189    ;----------------------------------------------
                           B   190    
004BF5                     B   191    os_init_msec_counter
                           B   192    
                           B   193    ; set E = 1 enable, E = 0 disable
                           B   194    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   195    ; 1 tick = 50MHz/4, EG:  Reload value = 12500, 
                           B   196    			
004BF5 E5                  B   197    				push hl
                           B   198    
004BF6 AF                  B   199    				xor a
004BF7 ED3983              B   200    				out0 (TMR1_CTL),a				                           B   201    				
004BFA CB43                B   202    				bit 0,e
004BFC 28 2B               B   203    				jr z,disable_tmr1
                           B   204    				
004BFE 21 F4 45 00         B   205    				ld hl,prt1_irq_handler
004C02 22740000            B   206    				ld (074h),hl
                           B   207    				
004C06 ED3892              B   208    				in0 a,(TMR_ISS)
004C09 E6F3                B   209    				and 11110011b
004C0B ED3992              B   210    				out0 (TMR_ISS),a
                           B   211    				
004C0E 21D43000            B   212    				ld hl,30d4h
004C12 ED2185              B   213    				out0 (TMR1_RR_H),h
004C15 ED2984              B   214    				out0 (TMR1_RR_L),l
                           B   215    
004C18 21000000            B   216    				ld hl,0
004C1C 22 A7 6D 00         B   217    				ld (seconds_counter),hl
004C20 22 A4 6D 00         B   218    				ld (milliseconds_counter),hl
                           B   219    
004C24 3E53                B   220    				ld a,01010011b
004C26 ED3983              B   221    				out0 (TMR1_CTL),a				                           B   222    			
004C29 E1                  B   223    disable_tmr1	pop hl
004C2A AF                  B   224    				xor a
004C2B C9                  B   225    				ret
                           B   226    
                           B   227    
                           B   228    
004C2C                     B   229    os_read_msec_counter
                           B   230    			
004C2C F3                  B   231    			di
004C2D ED5B A4 6D 00       B   232    			ld de,(milliseconds_counter)
004C32 2A A7 6D 00         B   233    			ld hl,(seconds_counter)
004C36 FB                  B   234    			ei
004C37 AF                  B   235    			xor a
004C38 C9                  B   236    			ret
                           B   237    			
                           B   238    
                           B   239    ;----------------------------------------------
                           B   240    ; INIT KEYBOARD ROUTINE 
                           B   241    ;----------------------------------------------
                           B   242    
                           B   243    ; ZF set and A = 0 if all OK, else error code i
                           B   244    
004C39                     B   245    init_keyboard
                           B   246    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004C39 11004000            B   247    			ld de,16384							004C3D CD 94 4B 00         B   248    			call hwsc_time_delay
004C41 F3                  B   249    			di
004C42 CD F7 4C 00         B   250    			call purge_keyboard
004C46 CD 50 4C 00         B   251    			call rs_keyboard
004C4A FB                  B   252    			ei
004C4B D0                  B   253    			ret nc
004C4C 3E8B                B   254    			ld a,08bh							004C4E B7                  B   255    			or a
004C4F C9                  B   256    			ret
                           B   257    			
                           B   258    			
004C50                     B   259    rs_keyboard
                           B   260    
004C50 3EFF                B   261    			ld a,0ffh
004C52 CD 6F 4C 00         B   262    			call write_to_keyboard
004C56 30 04               B   263    			jr nc,kb_connected
004C58 3E8A                B   264    			ld a,08ah							004C5A B7                  B   265    			or a
004C5B C9                  B   266    			ret
                           B   267    
004C5C                     B   268    kb_connected
                           B   269    			
004C5C 0605                B   270    			ld b,5
004C5E C5                  B   271    kb_initlp	push bc
004C5F CD DB 4C 00         B   272    			call wait_kb_byte					004C63 C1                  B   273    			pop bc
004C64 D8                  B   274    			ret c
004C65 FEAA                B   275    			cp 0aah
004C67 28 04               B   276    			jr z,kb_postok
004C69 10 F3               B   277    			djnz kb_initlp						004C6B 37                  B   278    			scf									004C6C C9                  B   279    			ret
                           B   280    			
                           B   281    			
004C6D AF                  B   282    kb_postok	xor a
004C6E C9                  B   283    			ret
                           B   284    	
                           B   285    	
                           B   286    ;----------------------------------------------
                           B   287    				
004C6F                     B   288    write_to_keyboard
                           B   289    
                           B   290    ; Put byte to send to keyboard in A
                           B   291    
004C6F 4F                  B   292    			ld c,a								004C70 3E01                B   293    			ld a,01b							004C72 ED3907              B   294    			out0 (port_ps2_ctrl),a
                           B   295    
004C75 110A0000            B   296    			ld de,10
004C79 CD 94 4B 00         B   297    			call hwsc_time_delay				                           B   298    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004C7D 3E03                B   299    			ld a,11b
004C7F ED3907              B   300    			out0 (port_ps2_ctrl),a				                           B   301    			
004C82 3E02                B   302    			ld a,10b
004C84 ED3907              B   303    			out0 (port_ps2_ctrl),a				                           B   304    			
004C87 CD 57 4E 00         B   305    			call wait_kb_clk_high
                           B   306    			
004C8B 1601                B   307    			ld d,1								004C8D 0608                B   308    			ld b,8								004C8F CD 2A 4E 00         B   309    kdoloop		call wait_kb_clk_low	
004C93 D8                  B   310    			ret c
004C94 AF                  B   311    			xor a
004C95 CBCF                B   312    			set 1,a
004C97 CB41                B   313    			bit 0,c
004C99 28 03               B   314    			jr z,kdbzero
004C9B CB8F                B   315    			res 1,a
004C9D 14                  B   316    			inc d
004C9E ED3907              B   317    kdbzero		out0 (port_ps2_ctrl),a				004CA1 CD 57 4E 00         B   318    			call wait_kb_clk_high
004CA5 D8                  B   319    			ret c
004CA6 CB19                B   320    			rr c
004CA8 10 E5               B   321    			djnz kdoloop
                           B   322    
004CAA CD 2A 4E 00         B   323    			call wait_kb_clk_low
004CAE D8                  B   324    			ret c
004CAF AF                  B   325    			xor a
004CB0 CB42                B   326    			bit 0,d
004CB2 20 02               B   327    			jr nz,kparone
004CB4 CBCF                B   328    			set 1,a
004CB6 ED3907              B   329    kparone		out0 (port_ps2_ctrl),a				004CB9 CD 57 4E 00         B   330    			call wait_kb_clk_high
004CBD D8                  B   331    			ret c
                           B   332    			
004CBE CD 2A 4E 00         B   333    			call wait_kb_clk_low
004CC2 D8                  B   334    			ret c
004CC3 AF                  B   335    			xor a
004CC4 ED3907              B   336    			out0 (port_ps2_ctrl),a				                           B   337    
004CC7 CD 26 4E 00         B   338    			call wait_kb_data_low				004CCB D8                  B   339    			ret c
004CCC CD 2A 4E 00         B   340    			call wait_kb_clk_low				004CD0 D8                  B   341    			ret c
                           B   342    				
004CD1 CD 53 4E 00         B   343    			call wait_kb_data_high				004CD5 D8                  B   344    			ret c
004CD6 CD 57 4E 00         B   345    			call wait_kb_clk_high				004CDA C9                  B   346    			ret 
                           B   347    
                           B   348    
                           B   349    ;----------------------------------------------
                           B   350    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   351    
004CDB                     B   352    wait_kb_byte
                           B   353    
004CDB 11008000            B   354    			ld de,8000h
004CDF CD A0 4B 00         B   355    			call hwsc_set_timeout				                           B   356    
004CE3 ED3807              B   357    wait_kloop	in0 a,(port_ps2_ctrl)
004CE6 CB67                B   358    			bit 4,a
004CE8 20 08               B   359    			jr nz,rec_kbyte
                           B   360    			
004CEA CD B1 4B 00         B   361    			call hwsc_test_timeout
004CEE 28 F3               B   362    			jr z,wait_kloop
004CF0 37                  B   363    			scf									004CF1 C9                  B   364    			ret
                           B   365    			
004CF2 ED3802              B   366    rec_kbyte	in0 a,(port_keyboard_data)			004CF5 B7                  B   367    			or a
004CF6 C9                  B   368    			ret
                           B   369    
                           B   370    
                           B   371    ;----------------------------------------------
                           B   372    
004CF7                     B   373    purge_keyboard
                           B   374    			
004CF7 ED3807              B   375    			in0 a,(port_ps2_ctrl)
004CFA CB67                B   376    			bit 4,a
004CFC C8                  B   377    			ret z
004CFD ED3802              B   378    			in0 a,(port_keyboard_data)			004D00 18 F5               B   379    			jr purge_keyboard
                           B   380    
                           B   381    
                           B   382    
                           B   383    ;----------------------------------------------
                           B   384    ; INIT MOUSE ROUTINE 
                           B   385    ;----------------------------------------------
                           B   386    
                           B   387    ; ZF set and A = 0 if all OK, else error code i
                           B   388    
004D02                     B   389    init_mouse		
004D02 F3                  B   390    			di
004D03 CD 1B 4E 00         B   391    			call purge_mouse
004D07 CD 11 4D 00         B   392    			call rs_mouse
004D0B FB                  B   393    			ei
004D0C D0                  B   394    			ret nc
004D0D 3E8B                B   395    			ld a,08bh							004D0F B7                  B   396    			or a
004D10 C9                  B   397    			ret
                           B   398    
                           B   399    
004D11                     B   400    rs_mouse
004D11 3EFF                B   401    			ld a,0ffh							004D13 CD 93 4D 00         B   402    			call write_to_mouse		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004D17 30 04               B   403    			jr nc,mouse_connected
004D19 3E8A                B   404    			ld a,08ah							004D1B B7                  B   405    			or a
004D1C C9                  B   406    			ret
                           B   407    
                           B   408    
004D1D                     B   409    mouse_connected
                           B   410    
004D1D 0605                B   411    			ld b,5
004D1F C5                  B   412    ms_initlp	push bc
004D20 CD FF 4D 00         B   413    			call wait_mouse_byte				004D24 C1                  B   414    			pop bc
004D25 D8                  B   415    			ret c
004D26 FEAA                B   416    			cp 0aah
004D28 28 04               B   417    			jr z,ms_postok
004D2A 10 F3               B   418    			djnz ms_initlp
004D2C 18 43               B   419    			jr bad_mouse
                           B   420    			
004D2E CD FF 4D 00         B   421    ms_postok	call wait_mouse_byte				004D32 D8                  B   422    			ret c
004D33 B7                  B   423    			or a
004D34 20 3B               B   424    			jr nz,bad_mouse						                           B   425    			
004D36 3E03                B   426    			ld a,3
004D38 32 7C 6F 00         B   427    			ld (mouse_packet_size),a
                           B   428    
004D3C 21 45 6C 00         B   429    			ld hl,intellimouse_seq
004D40 0606                B   430    			ld b,6
004D42 CD 75 4D 00         B   431    			call mouse_sequence
004D46 D8                  B   432    			ret c
                           B   433    			
004D47 3EF2                B   434    			ld a,0f2h
004D49 CD 84 4D 00         B   435    			call write_mouse_wait_ack			004D4D D8                  B   436    			ret c
004D4E CD FF 4D 00         B   437    			call wait_mouse_byte				004D52 D8                  B   438    			ret c
004D53 32 7B 6F 00         B   439    			ld (mouse_id),a
004D57 B7                  B   440    			or a								004D58 28 0A               B   441    			jr z,standard_mouse
004D5A FE03                B   442    			cp 3
004D5C 20 13               B   443    			jr nz,bad_mouse						004D5E 3E04                B   444    			ld a,4
004D60 32 7C 6F 00         B   445    			ld (mouse_packet_size),a
                           B   446    
004D64                     B   447    standard_mouse
                           B   448    		
004D64 21 4B 6C 00         B   449    			ld hl,mouse_settings_seq
004D68 0606                B   450    			ld b,6
004D6A CD 75 4D 00         B   451    			call mouse_sequence
004D6E D8                  B   452    			ret c
004D6F AF                  B   453    			xor a								004D70 C9                  B   454    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   455    
                           B   456    
004D71 3E89                B   457    bad_mouse	ld a,089h							004D73 B7                  B   458    			or a
004D74 C9                  B   459    			ret
                           B   460    
                           B   461    
004D75                     B   462    mouse_sequence
                           B   463    
004D75 7E                  B   464    mseqlp		ld a,(hl)
004D76 E5                  B   465    			push hl
004D77 C5                  B   466    			push bc
004D78 CD 84 4D 00         B   467    			call write_mouse_wait_ack
004D7C C1                  B   468    			pop bc
004D7D E1                  B   469    			pop hl
004D7E D8                  B   470    			ret c
004D7F 23                  B   471    			inc hl
004D80 10 F3               B   472    			djnz mseqlp
004D82 AF                  B   473    			xor a
004D83 C9                  B   474    			ret
                           B   475    
                           B   476    
004D84                     B   477    write_mouse_wait_ack
                           B   478    			
004D84 CD 93 4D 00         B   479    			call write_to_mouse
004D88 D8                  B   480    			ret c
004D89 CD FF 4D 00         B   481    			call wait_mouse_byte				004D8D D8                  B   482    			ret c
004D8E FEFA                B   483    			cp 0fah								004D90 C8                  B   484    			ret z
004D91 37                  B   485    			scf
004D92 C9                  B   486    			ret
                           B   487    			
                           B   488    ;----------------------------------------------
                           B   489    				
004D93                     B   490    write_to_mouse
                           B   491    
                           B   492    ; Put byte to send to mouse in A
                           B   493    
004D93 4F                  B   494    			ld c,a								004D94 3E04                B   495    			ld a,0100b							004D96 ED3907              B   496    			out0 (port_ps2_ctrl),a
                           B   497    
004D99 110A0000            B   498    			ld de,10
004D9D CD 94 4B 00         B   499    			call hwsc_time_delay				                           B   500    
004DA1 3E0C                B   501    			ld a,1100b
004DA3 ED3907              B   502    			out0 (port_ps2_ctrl),a				                           B   503    			
004DA6 3E08                B   504    			ld a,1000b
004DA8 ED3907              B   505    			out0 (port_ps2_ctrl),a				                           B   506    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004DAB CD 5F 4E 00         B   507    			call wait_mouse_clk_high
                           B   508    			
004DAF 1601                B   509    			ld d,1								004DB1 0608                B   510    			ld b,8								004DB3 CD 32 4E 00         B   511    mdoloop		call wait_mouse_clk_low	
004DB7 D8                  B   512    			ret c
004DB8 AF                  B   513    			xor a
004DB9 CBDF                B   514    			set 3,a
004DBB CB41                B   515    			bit 0,c
004DBD 28 03               B   516    			jr z,mdbzero
004DBF CB9F                B   517    			res 3,a
004DC1 14                  B   518    			inc d
004DC2 ED3907              B   519    mdbzero		out0 (port_ps2_ctrl),a				004DC5 CD 5F 4E 00         B   520    			call wait_mouse_clk_high
004DC9 D8                  B   521    			ret c
004DCA CB19                B   522    			rr c
004DCC 10 E5               B   523    			djnz mdoloop
                           B   524    
004DCE CD 32 4E 00         B   525    			call wait_mouse_clk_low
004DD2 D8                  B   526    			ret c
004DD3 AF                  B   527    			xor a
004DD4 CB42                B   528    			bit 0,d
004DD6 20 02               B   529    			jr nz,parone
004DD8 CBDF                B   530    			set 3,a
004DDA ED3907              B   531    parone		out0 (port_ps2_ctrl),a				004DDD CD 5F 4E 00         B   532    			call wait_mouse_clk_high
004DE1 D8                  B   533    			ret c
                           B   534    			
004DE2 CD 32 4E 00         B   535    			call wait_mouse_clk_low
004DE6 D8                  B   536    			ret c
004DE7 AF                  B   537    			xor a
004DE8 ED3907              B   538    			out0 (port_ps2_ctrl),a				                           B   539    
004DEB CD 2E 4E 00         B   540    			call wait_mouse_data_low			004DEF D8                  B   541    			ret c
004DF0 CD 32 4E 00         B   542    			call wait_mouse_clk_low				004DF4 D8                  B   543    			ret c
                           B   544    				
004DF5 CD 5B 4E 00         B   545    			call wait_mouse_data_high			004DF9 D8                  B   546    			ret c
004DFA CD 5F 4E 00         B   547    			call wait_mouse_clk_high			004DFE C9                  B   548    			ret 
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
004DFF                     B   553    wait_mouse_byte
                           B   554    
004DFF 11008000            B   555    			ld de,8000h
004E03 CD A0 4B 00         B   556    			call hwsc_set_timeout				                           B   557    
004E07 ED3807              B   558    wait_mloop	in0 a,(port_ps2_ctrl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004E0A CB6F                B   559    			bit 5,a
004E0C 20 08               B   560    			jr nz,rec_mbyte
                           B   561    			
004E0E CD B1 4B 00         B   562    			call hwsc_test_timeout
004E12 28 F3               B   563    			jr z,wait_mloop
004E14 37                  B   564    			scf									004E15 C9                  B   565    			ret
                           B   566    			
004E16 ED3806              B   567    rec_mbyte	in0 a,(port_mouse_data)				004E19 B7                  B   568    			or a
004E1A C9                  B   569    			ret
                           B   570    
                           B   571    ;----------------------------------------------
                           B   572    
004E1B                     B   573    purge_mouse
                           B   574    			
004E1B ED3807              B   575    			in0 a,(port_ps2_ctrl)
004E1E CB6F                B   576    			bit 5,a
004E20 C8                  B   577    			ret z
004E21 ED3806              B   578    			in0 a,(port_mouse_data)			; r
004E24 18 F5               B   579    			jr purge_mouse
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
                           B   584    
004E26                     B   585    wait_kb_data_low
                           B   586    
004E26 3E02                B   587    			ld a,2
004E28 18 0A               B   588    			jr test_lo_ps2
                           B   589    			
004E2A                     B   590    wait_kb_clk_low
                           B   591    
004E2A 3E01                B   592    			ld a,1
004E2C 18 06               B   593    			jr test_lo_ps2			
                           B   594    
004E2E                     B   595    wait_mouse_data_low
                           B   596    
004E2E 3E08                B   597    			ld a,8
004E30 18 02               B   598    			jr test_lo_ps2
                           B   599    
004E32                     B   600    wait_mouse_clk_low
                           B   601    
004E32 3E04                B   602    			ld a,4
                           B   603    
004E34 C5                  B   604    test_lo_ps2	push bc
004E35 D5                  B   605    			push de
004E36 4F                  B   606    			ld c,a
004E37 11004000            B   607    			ld de,04000h					; a
004E3B CD A0 4B 00         B   608    			call hwsc_set_timeout
                           B   609    
004E3F CD B1 4B 00         B   610    nkb_lw		call hwsc_test_timeout			; t
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004E43 28 04               B   611    			jr z,nkb_lnto
004E45 D1                  B   612    			pop de
004E46 C1                  B   613    			pop bc
004E47 37                  B   614    			scf								; c
004E48 C9                  B   615    			ret
004E49 ED3807              B   616    nkb_lnto	in0 a,(port_ps2_ctrl)
004E4C A1                  B   617    			and c
004E4D 20 F0               B   618    			jr nz,nkb_lw
                           B   619    					
004E4F D1                  B   620    			pop de
004E50 C1                  B   621    			pop bc
004E51 AF                  B   622    			xor a
004E52 C9                  B   623    			ret					
                           B   624    
                           B   625    
                           B   626    
                           B   627    
004E53                     B   628    wait_kb_data_high
                           B   629    
004E53 3E02                B   630    			ld a,2
004E55 18 0A               B   631    			jr test_hi_ps2
                           B   632    			
004E57                     B   633    wait_kb_clk_high
                           B   634    
004E57 3E01                B   635    			ld a,1
004E59 18 06               B   636    			jr test_hi_ps2
                           B   637    
                           B   638    
004E5B                     B   639    wait_mouse_data_high
                           B   640    			
004E5B 3E08                B   641    			ld a,8
004E5D 18 02               B   642    			jr test_hi_ps2
                           B   643    			 
004E5F                     B   644    wait_mouse_clk_high
                           B   645    
004E5F 3E04                B   646    			ld a,4
                           B   647    
004E61 C5                  B   648    test_hi_ps2	push bc
004E62 D5                  B   649    			push de
004E63 4F                  B   650    			ld c,a
004E64 11004000            B   651    			ld de,04000h					; a
004E68 CD A0 4B 00         B   652    			call hwsc_set_timeout
                           B   653    
004E6C CD B1 4B 00         B   654    nkb_hw		call hwsc_test_timeout			; t
004E70 28 04               B   655    			jr z,nkb_hnto
004E72 D1                  B   656    			pop de
004E73 C1                  B   657    			pop bc
004E74 37                  B   658    			scf								; c
004E75 C9                  B   659    			ret
004E76 ED3807              B   660    nkb_hnto	in0 a,(port_ps2_ctrl)
004E79 A1                  B   661    			and c
004E7A 28 F0               B   662    			jr z,nkb_hw
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   663    					
004E7C D1                  B   664    			pop de
004E7D C1                  B   665    			pop bc
004E7E AF                  B   666    			xor a							; c
004E7F C9                  B   667    			ret
                           B   668    
                           B   669    
                           B   670    ;==============================================
                           B   671    
004E80                     B   672    hwsc_play_audio
                           B   673    
                           B   674    ; set HL register to location of an audio data 
                           B   675    
                           B   676    ; 0 - start 
                           B   677    ; 3 - length
                           B   678    ; 6 - loop start
                           B   679    ; 9 - loop length
                           B   680    ; c - frequency constant
                           B   681    ; e - volume
                           B   682    
                           B   683    ; set C register to set channels wave is to pla
                           B   684    
                           B   685    				
004E80 E5                  B   686    				push hl
004E81 E5                  B   687    				push hl
004E82 FDE1                B   688    				pop iy
                           B   689    
004E84 79                  B   690    				ld a,c
004E85 69                  B   691    				ld l,c
004E86 328014FF            B   692    				ld (hw_audio_registers+80h),a	                           B   693    				
004E8A DD210014 FF         B   694    				ld ix,hw_audio_registers
004E8F 0608                B   695    				ld b,8
004E91 CB39                B   696    audchanloop		srl c
004E93 30 27               B   697    				jr nc,not_this_chan
                           B   698    				
004E95 FD1700              B   699    				ld de,(iy)
004E98 DD1F00              B   700    				ld (ix),de						                           B   701    
004E9B FD1703              B   702    				ld de,(iy+3)
004E9E DD1F04              B   703    				ld (ix+04h),de					                           B   704    				
004EA1 FD170C              B   705    				ld de,(iy+0ch)
004EA4 DD1F08              B   706    				ld (ix+08h),de					                           B   707    				
004EA7 FD7E0E              B   708    				ld a,(iy+0eh)
004EAA DD770C              B   709    				ld (ix+0ch),a					                           B   710    				
004EAD AF                  B   711    				xor a
004EAE DD770E              B   712    				ld (ix+0eh),a					                           B   713    				
004EB1 3E03                B   714    				ld a,011b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004EB3 DD770F              B   715    				ld (ix+0fh),a					                           B   716    				
004EB6 3E08                B   717    				ld a,8
004EB8 90                  B   718    				sub a,b
004EB9 ED3908              B   719    				out0 (port_selector),a			                           B   720    				
004EBC ED3210              B   721    not_this_chan	lea ix,ix+10h			
004EBF 10 D0               B   722    				djnz audchanloop
                           B   723    						
004EC1 AF                  B   724    				xor a
004EC2 328014FF            B   725    				ld (hw_audio_registers+80h),a	                           B   726    				
004EC6 ED3801              B   727    wait_aud_start	in0 a,(port_hw_flags)			004EC9 CB77                B   728    				bit 6,a
004ECB 28 F9               B   729    				jr z,wait_aud_start
                           B   730    
004ECD 7D                  B   731    				ld a,l
004ECE 328014FF            B   732    				ld (hw_audio_registers+80h),a	                           B   733    				
004ED2 DD210014 FF         B   734    				ld ix,hw_audio_registers
004ED7 0608                B   735    				ld b,8
004ED9 CB3D                B   736    audchanloop2	srl l
004EDB 30 15               B   737    				jr nc,not_this_chan2
                           B   738    						
004EDD FD1706              B   739    				ld de,(iy+6)
004EE0 DD1F00              B   740    				ld (ix+0h),de					                           B   741    				
004EE3 FD1709              B   742    				ld de,(iy+9)
004EE6 DD1F04              B   743    				ld (ix+4h),de					                           B   744    								
004EE9 AF                  B   745    				xor a
004EEA DD770E              B   746    				ld (ix+0eh),a					                           B   747    				
004EED 3E00                B   748    				ld a,000b
004EEF DD770F              B   749    				ld (ix+0fh),a					                           B   750    				
004EF2 ED3210              B   751    not_this_chan2	lea ix,ix+10h			
004EF5 10 E2               B   752    				djnz audchanloop2
                           B   753    						
004EF7 AF                  B   754    				xor a
004EF8 328014FF            B   755    				ld (hw_audio_registers+80h),a	                           B   756    				
004EFC E1                  B   757    				pop hl
004EFD C9                  B   758    				ret
                           B   759    
                           B   760    
                           B   761    ;----------------------------------------------
                           B   762    				
004EFE                     B   763    hwsc_disable_audio
                           B   764    
004EFE 3E01                B   765    				ld a,01h
004F00 ED390A              B   766    				out0 (port_hw_enable),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   767    				
004F03 DD210014 FF         B   768    				ld ix,hw_audio_registers		004F08 0608                B   769    				ld b,8
004F0A DD360C00            B   770    chvolszero_lp	ld (ix+0ch),0
004F0E ED3210              B   771    				lea ix,ix+10h
004F11 10 F7               B   772    				djnz chvolszero_lp
                           B   773    				
004F13 AF                  B   774    				xor a
004F14 C9                  B   775    				ret
                           B   776    				
                           B   777    ;----------------------------------------------
                           B   778    
004F15                     B   779    hwsc_get_joysticks
                           B   780    
004F15 ED389E              B   781    				in0 a,(PC_DR)				
004F18 2F                  B   782    				cpl
004F19 47                  B   783    				ld b,a
004F1A E60F                B   784    				and 0fh
004F1C 5F                  B   785    				ld e,a
004F1D 78                  B   786    				ld a,b
004F1E 0F                  B   787    				rrca
004F1F 0F                  B   788    				rrca
004F20 0F                  B   789    				rrca
004F21 0F                  B   790    				rrca
004F22 E60F                B   791    				and 0fh
004F24 57                  B   792    				ld d,a
                           B   793    				
004F25 ED38A2              B   794    				in0 a,(PD_DR)	
004F28 CB67                B   795    				bit 4,a						; f
004F2A 20 02               B   796    				jr nz,noj1b1
004F2C CBEA                B   797    				set 5,d
                           B   798    
004F2E CB6F                B   799    noj1b1			bit 5,a						; f
004F30 20 02               B   800    				jr nz,noj1b0
004F32 CBE2                B   801    				set 4,d
                           B   802    				
004F34 CB77                B   803    noj1b0			bit 6,a						; f
004F36 20 02               B   804    				jr nz,noj0b1
004F38 CBEB                B   805    				set 5,e
                           B   806    
004F3A CB7F                B   807    noj0b1			bit 7,a						; f
004F3C 20 02               B   808    				jr nz,noj0b0
004F3E CBE3                B   809    				set 4,e
                           B   810    
004F40 AF                  B   811    noj0b0			xor a
004F41 C9                  B   812    				ret
                           B   813    				
                           B   814    				
                           B   815    ;----------------------------------------------
                           B   816    			
                           B   817    				
                           B   818    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3880    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004F42                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004F42 D5                  B    13    				push de
004F43 51                  B    14    				ld d,c
004F44 E5                  B    15    				push hl
                           B    16    				
004F45 CD AF 4F 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004F49 BE                  B    18    				cp (hl)							004F4A 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004F4C 01000000            B    21    new_key			ld bc,0							004F50 4F                  B    22    				ld c,a
004F51 21 54 6F 00         B    23    				ld hl,scancode_buffer	
004F55 09                  B    24    				add hl,bc
004F56 7E                  B    25    				ld a,(hl)						                           B    26    
004F57 0E10                B    27    				ld c,16
004F59 09                  B    28    				add hl,bc						004F5A 4F                  B    29    				ld c,a							004F5B 7E                  B    30    				ld a,(hl)						                           B    31    
004F5C 1E00                B    32    				ld e,0							004F5E 21 86 6A 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004F62 CB4F                B    35    				bit 1,a
004F64 28 04               B    36    				jr z,not_ctrl					004F66 1E60                B    37    				ld e,96							004F68 18 16               B    38    				jr got_keymap					                           B    39    							
004F6A CB47                B    40    not_ctrl		bit 0,a
004F6C 20 04               B    41    				jr nz,shifted
004F6E CB67                B    42    				bit 4,a
004F70 28 06               B    43    				jr z,not_shifted
004F72 21 E8 6A 00         B    44    shifted			ld hl,shifted_keymap			004F76 18 08               B    45    				jr got_keymap
                           B    46    				
004F78 CB5F                B    47    not_shifted		bit 3,a
004F7A 28 04               B    48    				jr z,got_keymap	
004F7C 21 4A 6B 00         B    49    				ld hl,alted_keymap				                           B    50    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004F80 79                  B    51    got_keymap		ld a,c							004F81 FE62                B    52    				cp 062h
004F83 30 07               B    53    				jr nc,gotkdone
004F85 09                  B    54    				add hl,bc						004F86 7E                  B    55    				ld a,(hl)						004F87 93                  B    56    				sub a,e							004F88 30 01               B    57    				jr nc,subkey_ok	
004F8A AF                  B    58    				xor a							004F8B 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004F8C 3A 75 6F 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004F90 3C                  B    62    				inc a							004F91 E60F                B    63    				and 15
004F93 32 75 6F 00         B    64    				ld (key_buf_rd_idx),a			004F97 79                  B    65    				ld a,c							004F98 E1                  B    66    				pop hl
004F99 4A                  B    67    				ld c,d
004F9A D1                  B    68    				pop de
004F9B BF                  B    69    				cp a							004F9C C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004F9D                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
004F9D D5                  B    82    				push de
004F9E 51                  B    83    				ld d,c
004F9F E5                  B    84    				push hl
004FA0 CD AF 4F 00         B    85    				call get_kb_buffer_indexes		004FA4 BE                  B    86    				cp (hl)							004FA5 20 A5               B    87    				jr nz,new_key					004FA7 3E81                B    88    				ld a,81h			
004FA9 47                  B    89    				ld b,a
004FAA B7                  B    90    				or a
004FAB E1                  B    91    				pop hl
004FAC 4A                  B    92    				ld c,d
004FAD D1                  B    93    				pop de
004FAE C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
004FAF                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
004FAF 21 74 6F 00         B   101    				ld hl,key_buf_wr_idx			004FB3 3A 75 6F 00         B   102    				ld a,(key_buf_rd_idx)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004FB7 C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004FB8                     B    21    serial_get_header
                           B    22    
004FB8 32 22 6C 00         B    23    				ld (serial_timeout),a			004FBC 22 0C 6C 00         B    24    				ld (serial_fn_addr),hl
004FC0 CD 51 48 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004FC4 CD A7 50 00         B    27    				call s_getblock					004FC8 28 0C               B    28    				jr z,s_gbfhok					004FCA F5                  B    29    				push af							004FCB 3A 43 6C 00         B    30    				ld a,(serial_transfer_started)
004FCF B7                  B    31    				or a							004FD0 C4 0E 51 00         B    32    				call nz,s_badack				004FD4 F1                  B    33    				pop af
004FD5 C9                  B    34    				ret
                           B    35    	
004FD6 21 37 6C 00         B    36    s_gbfhok		ld hl,serial_header_id			004FDA 11140700            B    37    				ld de,serial_buffer+20			004FDE 060C                B    38    				ld b,12
004FE0 CD E2 13 00         B    39    				call os_compare_strings
004FE4 20 0F               B    40    				jr nz,s_nfhdr
004FE6 06E0                B    41    				ld b,256-32						004FE8 21200700            B    42    				ld hl,serial_buffer+32
004FEC 7E                  B    43    s_chdr			ld a,(hl)
004FED 23                  B    44    				inc hl
004FEE B7                  B    45    				or a
004FEF 20 04               B    46    				jr nz,s_nfhdr
004FF1 10 F9               B    47    				djnz s_chdr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004FF3 18 08               B    48    				jr s_fhcsok
                           B    49    				
004FF5 CD 0E 51 00         B    50    s_nfhdr			call s_badack					004FF9 3E85                B    51    				ld a,085h						004FFB B7                  B    52    				or a
004FFC C9                  B    53    				ret
                           B    54    		
004FFD 21100700            B    55    s_fhcsok		ld hl,serial_buffer+16			005001 11 33 6C 00         B    56    				ld de,serial_fileheader+16
005005 01040000            B    57    				ld bc,4
005009 EDB0                B    58    				ldir
                           B    59    				
00500B 21000700            B    60    				ld hl,serial_buffer
00500F 11 23 6C 00         B    61    				ld de,serial_fileheader			005013 0610                B    62    				ld b,16							005015 7E                  B    63    s_tuclp			ld a,(hl)						005016 B7                  B    64    				or a
005017 28 0B               B    65    				jr z,s_ffhswz	
005019 CD 1C 14 00         B    66    				call os_uppercasify
00501D 12                  B    67    				ld (de),a
00501E 23                  B    68    				inc hl
00501F 13                  B    69    				inc de
005020 10 F3               B    70    				djnz s_tuclp
005022 18 04               B    71    				jr s_tucdone
005024 12                  B    72    s_ffhswz		ld (de),a
005025 13                  B    73    				inc de
005026 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
005028 2A 0C 6C 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			00502C 7E                  B    77    				ld a,(hl)
00502D FE2A                B    78    				cp '*'
00502F 28 14               B    79    				jr z,s_rffns					005031 11 23 6C 00         B    80    				ld de,serial_fileheader
005035 0610                B    81    				ld b,16
005037 CD E2 13 00         B    82    				call os_compare_strings
00503B 28 08               B    83    				jr z,s_rffns
00503D CD 0E 51 00         B    84    s_rfnbad		call s_badack
005041 3E87                B    85    				ld a,087h						005043 B7                  B    86    				or a
005044 C9                  B    87    				ret
                           B    88    				
005045 DD21 23 6C 00       B    89    s_rffns			ld ix,serial_fileheader			00504A AF                  B    90    				xor a
00504B C9                  B    91    				ret
                           B    92    
00504C F5                  B    93    s_fail			push af				
00504D CD 0E 51 00         B    94    				call s_badack		 
005051 F1                  B    95    				pop af
005052 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
005053                     B   114    serial_receive_file
                           B   115    
005053 3E0A                B   116    				ld a,10							005055 32 22 6C 00         B   117    				ld (serial_timeout),a
005059 E5                  B   118    				push hl
00505A CD FD 50 00         B   119    				call s_goodack					00505E DDE1                B   120    				pop ix							005060 ED5B 33 6C 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
005065 CD A7 50 00         B   123    s_gbloop		call s_getblock
005069 20 E1               B   124    				jr nz,s_fail
00506B 0E00                B   125    				ld c,0							00506D FD210007 00         B   126    				ld iy,serial_buffer
005072 FD7E00              B   127    s_rfloop		ld a,(iy)
005075 DD7700              B   128    				ld (ix),a						005078 1B                  B   129    				dec de							005079 21000000            B   130    				ld hl,0
00507D AF                  B   131    				xor a
00507E ED5A                B   132    				adc hl,de						005080 28 1A               B   133    				jr z,s_rfabr					005082 C5                  B   134    				push bc
005083 01010000            B   135    				ld bc,1
005087 DD09                B   136    				add ix,bc						005089 C1                  B   137    				pop bc
00508A 30 05               B   138    				jr nc,s_nbt
00508C 3E84                B   139    				ld a,84h						00508E B7                  B   140    				or a
00508F 18 BB               B   141    				jr s_fail
005091 FD23                B   142    s_nbt			inc iy
005093 0D                  B   143    				dec c
005094 20 DC               B   144    				jr nz,s_rfloop
005096 CD FD 50 00         B   145    				call s_goodack					00509A 18 C9               B   146    				jr s_gbloop
                           B   147    			
00509C CD FD 50 00         B   148    s_rfabr			call s_goodack					0050A0 DD21 23 6C 00       B   149    				ld ix,serial_fileheader			0050A5 AF                  B   150    				xor a							0050A6 C9                  B   151    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
0050A7                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
0050A7 AF                  B   159    				xor a
0050A8 32 43 6C 00         B   160    				ld (serial_transfer_started),a	0050AC E5                  B   161    				push hl							0050AD D5                  B   162    				push de
0050AE C5                  B   163    				push bc
0050AF 21000700            B   164    				ld hl,serial_buffer				0050B3 0600                B   165    				ld b,0
0050B5 D9                  B   166    				exx
0050B6 21FFFF00            B   167    				ld hl,0ffffh					0050BA D9                  B   168    				exx
0050BB CD FB 47 00         B   169    s_lgb			call receive_serial_byte
0050BF 20 38               B   170    				jr nz,s_gberr					0050C1 F5                  B   171    				push af
0050C2 3E01                B   172    				ld a,1
0050C4 32 43 6C 00         B   173    				ld (serial_transfer_started),a
0050C8 F1                  B   174    				pop af
0050C9 77                  B   175    				ld (hl),a
0050CA D9                  B   176    				exx
0050CB AC                  B   177    				xor h							0050CC 67                  B   178    				ld h,a			
0050CD 0608                B   179    				ld b,8
0050CF 4029                B   180    rxcrcbyte		add.sis hl,hl					0050D1 30 08               B   181    				jr nc,rxcrcnext
0050D3 7C                  B   182    				ld a,h
0050D4 EE10                B   183    				xor 10h
0050D6 67                  B   184    				ld h,a
0050D7 7D                  B   185    				ld a,l
0050D8 EE21                B   186    				xor 21h
0050DA 6F                  B   187    				ld l,a
0050DB 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0050DD D9                  B   189    				exx
0050DE 23                  B   190    				inc hl
0050DF 10 DA               B   191    				djnz s_lgb
0050E1 D9                  B   192    				exx								                           B   193    			
0050E2 CD FB 47 00         B   194    				call receive_serial_byte		0050E6 20 11               B   195    				jr nz,s_gberr
0050E8 4F                  B   196    				ld c,a
0050E9 CD FB 47 00         B   197    				call receive_serial_byte
0050ED 20 0A               B   198    				jr nz,s_gberr		
0050EF 47                  B   199    				ld b,a
                           B   200    				
0050F0 AF                  B   201    				xor a							0050F1 52ED42              B   202    				sbc.s hl,bc						0050F4 28 03               B   203    				jr z,s_gberr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   204    			
0050F6 3E86                B   205    				ld a,86h						0050F8 B7                  B   206    				or a							0050F9 C1                  B   207    s_gberr			pop bc
0050FA D1                  B   208    				pop de
0050FB E1                  B   209    				pop hl
0050FC C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0050FD C5                  B   214    s_goodack		push bc
0050FE 014F4B00            B   215    				ld bc,04b4fh					005102 79                  B   216    ackbytes		ld a,c
005103 CD 36 48 00         B   217    				call send_serial_byte
005107 78                  B   218    				ld a,b
005108 CD 36 48 00         B   219    				call send_serial_byte
00510C C1                  B   220    				pop bc
00510D C9                  B   221    				ret
                           B   222    
00510E C5                  B   223    s_badack		push bc
00510F 01585800            B   224    				ld bc,05858h					005113 18 ED               B   225    				jr ackbytes
                           B   226    
005115 C5                  B   227    s_holdack		push bc
005116 01575700            B   228    				ld bc,05757h					00511A 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
00511C                     B   249    serial_send_file
                           B   250    			
00511C 3E01                B   251    				ld a,1							00511E 32 22 6C 00         B   252    				ld (serial_timeout),a
                           B   253    			
005122 DD22 06 6C 00       B   254    				ld (serial_ez80_address),ix
005127 ED53 33 6C 00       B   255    				ld (serial_fileheader+10h),de	Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00512C E5                  B   256    				push hl
00512D 21000000            B   257    				ld hl,0
005131 AF                  B   258    				xor a
005132 ED5A                B   259    				adc hl,de
005134 20 05               B   260    				jr nz,s_flok
005136 E1                  B   261    				pop hl
005137 3E81                B   262    				ld a,081h						005139 B7                  B   263    				or a							00513A C9                  B   264    				ret
                           B   265    			
00513B 21 23 6C 00         B   266    s_flok			ld hl,serial_fileheader			00513F 01100000            B   267    				ld bc,16
005143 AF                  B   268    				xor a
005144 CD 28 17 00         B   269    				call os_bchl_memfill
005148 E1                  B   270    				pop hl							005149 11 23 6C 00         B   271    				ld de,serial_fileheader
00514D 0610                B   272    				ld b,16
00514F CD 01 14 00         B   273    				call os_copy_ascii_run
                           B   274    				
005153 21 37 6C 00         B   275    				ld hl,serial_header_id			005157 11 37 6C 00         B   276    				ld de,serial_fileheader+014h
00515B 010C0000            B   277    				ld bc,12		
00515F EDB0                B   278    				ldir
                           B   279    			
005161 DD21 23 6C 00       B   280    				ld ix,serial_fileheader			005166 11200000            B   281    				ld de,32
00516A CD A0 51 00         B   282    				call s_makeblock			
00516E C0                  B   283    				ret nz
00516F CD D8 51 00         B   284    				call s_sendblock
005173 C0                  B   285    				ret nz
005174 CD 05 52 00         B   286    				call s_waitack					005178 C0                  B   287    				ret nz							                           B   288    				
005179 DD2A 06 6C 00       B   289    				ld ix,(serial_ez80_address)
00517E ED5B 33 6C 00       B   290    				ld de,(serial_fileheader+16)	005183 CD A0 51 00         B   291    s_sbloop		call s_makeblock				005187 38 16               B   292    				jr c,s_rerr
005189 CD D8 51 00         B   293    				call s_sendblock				00518D 38 10               B   294    				jr c,s_rerr	
00518F CD 05 52 00         B   295    				call s_waitack					005193 38 0A               B   296    				jr c,s_rerr
005195 21000000            B   297    				ld hl,0
005199 AF                  B   298    				xor a
00519A ED5A                B   299    				adc hl,de
00519C 20 E5               B   300    				jr nz,s_sbloop					00519E AF                  B   301    				xor a							00519F C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0051A0                     B   306    s_makeblock
                           B   307    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0051A0 21000700            B   312    				ld hl,serial_buffer				0051A4 01000100            B   313    				ld bc,256						0051A8 AF                  B   314    				xor a							0051A9 CD 28 17 00         B   315    				call os_bchl_memfill			                           B   316    				
0051AD 0600                B   317    				ld b,0							0051AF FD210007 00         B   318    				ld iy,serial_buffer	
0051B4 DD7E00              B   319    s_sloop			ld a,(ix)
0051B7 FD7700              B   320    				ld (iy),a
0051BA 1B                  B   321    				dec de							0051BB 21000000            B   322    				ld hl,0
0051BF AF                  B   323    				xor a
0051C0 ED5A                B   324    				adc hl,de
0051C2 28 12               B   325    				jr z,s_mbend	
0051C4 FD23                B   326    				inc iy							0051C6 C5                  B   327    				push bc
0051C7 01010000            B   328    				ld bc,1
0051CB DD09                B   329    				add ix,bc						0051CD C1                  B   330    				pop bc							0051CE 20 04               B   331    				jr nz,s_sbok
0051D0 3E84                B   332    				ld a,84h						0051D2 B7                  B   333    				or a
0051D3 C9                  B   334    				ret
0051D4 10 DE               B   335    s_sbok			djnz s_sloop
0051D6 AF                  B   336    s_mbend			xor a
0051D7 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0051D8                     B   341    s_sendblock
                           B   342    
0051D8 E5                  B   343    				push hl
0051D9 D5                  B   344    				push de							0051DA C5                  B   345    				push bc				
0051DB 21000700            B   346    				ld hl,serial_buffer			
0051DF 1E00                B   347    				ld e,0
0051E1 7E                  B   348    s_sblklp		ld a,(hl)
0051E2 CD 36 48 00         B   349    				call send_serial_byte
0051E6 23                  B   350    				inc hl
0051E7 1D                  B   351    				dec e
0051E8 20 F7               B   352    				jr nz,s_sblklp
0051EA 11000700            B   353    				ld de,serial_buffer
0051EE 01000000            B   354    				ld bc,0
0051F2 CD CE 16 00         B   355    				call crc_checksum
0051F6 7D                  B   356    				ld a,l
0051F7 CD 36 48 00         B   357    				call send_serial_byte
0051FB 7C                  B   358    				ld a,h
0051FC CD 36 48 00         B   359    				call send_serial_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
005200 AF                  B   360    				xor a
005201 C1                  B   361    s_popall		pop bc
005202 D1                  B   362    				pop de
005203 E1                  B   363    				pop hl
005204 C9                  B   364    				ret
                           B   365    	
                           B   366    
005205                     B   367    s_waitack
005205 E5                  B   368    				push hl
005206 D5                  B   369    				push de
005207 C5                  B   370    				push bc
005208 CD FB 47 00         B   371    				call receive_serial_byte		00520C 20 F3               B   372    				jr nz,s_popall
00520E 47                  B   373    				ld b,a
00520F CD FB 47 00         B   374    				call receive_serial_byte
005213 20 EC               B   375    				jr nz,s_popall
005215 4F                  B   376    				ld c,a
005216 264F                B   377    				ld h,'O'
005218 2E4B                B   378    				ld l,'K'
00521A AF                  B   379    				xor a
00521B 52ED42              B   380    				sbc.s hl,bc						00521E 28 E1               B   381    				jr z,s_popall					                           B   382    			
005220 3E85                B   383    				ld a,085h						005222 B7                  B   384    				or a
005223 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v0C.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.0C - FS_HL_TO_FILENAME uppercasifies the st
                           B     8    ; 0.0B - Bugfix, typo in "fs_adjust_fp_tl_so" -
                           B     9    ;      - Thanks to Mike ("X Y") for bringing th
                           B    10    ; 0.0A - ?
                           B    11    ; 0.09 - Format command now formats based solel
                           B    12    ;		 and "current driver"
                           B    13    ;        If the paritition is an MBR type, the 
                           B    14    ;      - "Get partition info" looks at each par
                           B    15    ;
                           B    16    ; 0.08 - Speeded up reading of files (pre-calc 
                           B    17    ;        All routines return with ZF not set if
                           B    18    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    19    ; 0.06 - Fixed "fs_get_volume_label"
                           B    20    ; 0.05 - Fixed format command
                           B    21    ; 0.04 - File system error codes are now in the
                           B    22    ; 0.03 - ADL mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B    23    ; 0.02 - removed references to banks, added 24 
                           B    24    ; 0.01 - first version based on FLOS routines v
                           B    25    ;
                           B    26    ; Known limitations:
                           B    27    ; ------------------
                           B    28    ; If a disk full error is returned during a fil
                           B    29    ; Allows a file to be created in root even if t
                           B    30    ;        
                           B    31    ;----------------------------------------------
                           B    32    ;
                           B    33    ; All routines return carry clear / zero flag s
                           B    34    ;
                           B    35    ; If carry set there was a driver error, A = Er
                           B    36    ; Check for "carry set" first!
                           B    37    ; If carry clear, check zero flag. If not set: 
                           B    38    ;
                           B    39    ;					$c1  - Disk full
                           B    40    ;					$c2  - file not found
                           B    41    ;             	    $c3  - (root) dir table is 
                           B    42    ;					$c4  - directory requested 
                           B    43    ;             	    $c5  - cant delete dir, it 
                           B    44    ;					$c6  - not a file
                           B    45    ;					$c7  - file length is zero
                           B    46    ;              	    $c8  - out of memory
                           B    47    ;					$c9  - filename already exi
                           B    48    ;					$ca  - already at root dire
                           B    49    ;                  	$cb  - directory not found
                           B    50    ;					$cc  - requested bytes beyo
                           B    51    ;					$cd  - invalid filename
                           B    52    ;					$ce  - unknown/incorrect di
                           B    53    ;					$cf  - invalid volume
                           B    54    ;                 	$d0  - device not present	                           B    55    ;					$d1  - directory not found	                           B    56    ;                 	$d2  - end of directory lis
                           B    57    ;                 	$d3  - device does not use 
                           B    58    ;                  	$d4  - cant find volume lab
                           B    59    ;                   $d5  - sector out of range
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    ; Main routines called by external programs
                           B    63    ;----------------------------------------------
                           B    64    
005225                     B    65    fs_format_partition
                           B    66    
                           B    67    ; Formats a FAT16 partition based on:
                           B    68    
                           B    69    ; "partition_base" LBA (32bit, absolute: all fo
                           B    70    ; "partition_size" in sectors (24bit - will be 
                           B    71    ; Set HL to label location
                           B    72    
005225 11 B5 60 00         B    73    				ld de,fs_sought_filename		005229 CD 6F 5F 00         B    74    				call fs_clear_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
00522D 060B                B    75    				ld b,11
00522F CD 01 14 00         B    76    				call os_copy_ascii_run
                           B    77    
005233 CD 79 5D 00         B    78    				call fs_clear_sector_buffer		005237 11000000            B    79    				ld de,0							00523B CD 8F 53 00         B    80    form_ws			call set_lba_and_write_sector
00523F D8                  B    81    				ret c
005240 13                  B    82    				inc de
005241 7A                  B    83    				ld a,d
005242 FE03                B    84    				cp 3
005244 20 F5               B    85    				jr nz,form_ws
                           B    86    	
005246 21 5F 60 00         B    87    				ld hl,bootsector_stub			00524A 11000800            B    88    				ld de,sector_buffer				00524E 013F0000            B    89    				ld bc,03fh
005252 EDB0                B    90    				ldir
                           B    91    	
005254 2A 1B 61 00         B    92    				ld hl,(partition_size)
005258 1100003F            B    93    				ld de,3f0000h
00525C AF                  B    94    				xor a
00525D ED52                B    95    				sbc hl,de				
00525F 38 05               B    96    				jr c,fs_fssok					005261 ED53 1B 61 00       B    97    fs_truncs		ld (partition_size),de
                           B    98    				
005266 3A 1D 61 00         B    99    fs_fssok		ld a,(partition_size+2)
00526A 21800000            B   100    				ld hl,080h						00526E 29                  B   101    fs_fcls			add hl,hl
00526F BC                  B   102    				cp h
005270 30 FC               B   103    				jr nc,fs_fcls
                           B   104    
005272 DD210008 00         B   105    				ld ix,sector_buffer
005277 DD740D              B   106    				ld (ix+0dh),h					                           B   107    				
00527A ED5B 1B 61 00       B   108    				ld de,(partition_size)
00527F 3A 1D 61 00         B   109    				ld a,(partition_size+2)
005283 4F                  B   110    				ld c,a							005284 B7                  B   111    				or a							005285 20 08               B   112    				jr nz,ts_dword					005287 DD7313              B   113    				ld (ix+13h),e					00528A DD7214              B   114    				ld (ix+14h),d
00528D 18 07               B   115    				jr ts_done
00528F DD1F20              B   116    ts_dword		ld (ix+20h),de					005292 DD362300            B   117    				ld (ix+23h),0
                           B   118    
005296 7C                  B   119    ts_done			ld a,h							005297 21000000            B   120    				ld hl,0				
00529B CB3F                B   121    ffatslp1		srl a	
00529D 28 0C               B   122    				jr z,fatsc1						00529F CB39                B   123    				srl c				
0052A1 CB1A                B   124    				rr d
0052A3 CB1B                B   125    				rr e
0052A5 CB1C                B   126    				rr h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0052A7 CB1D                B   127    				rr l
0052A9 18 F0               B   128    				jr ffatslp1
0052AB 0608                B   129    fatsc1			ld b,8
0052AD CB39                B   130    ffatslp2		srl c							0052AF CB1A                B   131    				rr d
0052B1 CB1B                B   132    				rr e
0052B3 CB1C                B   133    				rr h
0052B5 CB1D                B   134    				rr l
0052B7 10 F4               B   135    				djnz ffatslp2
0052B9 7C                  B   136    				ld a,h
0052BA B5                  B   137    				or l
0052BB 28 01               B   138    				jr z,gotfatsize					0052BD 13                  B   139    				inc de
                           B   140    	
0052BE DD7316              B   141    gotfatsize		ld (ix+16h),e					0052C1 DD7217              B   142    				ld (ix+17h),d
0052C4 21000000            B   143    				ld hl,0
0052C8 6B                  B   144    				ld l,e
0052C9 62                  B   145    				ld h,d
0052CA 22 AF 60 00         B   146    				ld (fs_sectors_per_fat),hl
                           B   147    				
0052CE 010055AA            B   148    				ld bc,0aa5500h
0052D2 ED43FD09 00         B   149    				ld (sector_buffer+1fdh),bc		0052D7 11000000            B   150    				ld de,0
0052DB CD 8F 53 00         B   151    				call set_lba_and_write_sector	0052DF D8                  B   152    				ret c
                           B   153    				
0052E0 11000000            B   154    				ld de,0
0052E4 DD5E0E              B   155    				ld e,(ix+0eh)					0052E7 DD560F              B   156    				ld d,(ix+0fh)					                           B   157    				
0052EA CD 79 5D 00         B   158    				call fs_clear_sector_buffer		0052EE DD3600FF            B   159    				ld (ix+0),0ffh
0052F2 DD3601F8            B   160    				ld (ix+1),0f8h
0052F6 DD3602FF            B   161    				ld (ix+2),0ffh
0052FA DD3603FF            B   162    				ld (ix+3),0ffh
0052FE CD 8F 53 00         B   163    				call set_lba_and_write_sector	005302 D8                  B   164    				ret c
                           B   165    
005303 EB                  B   166    				ex de,hl
005304 ED5B AF 60 00       B   167    				ld de,(fs_sectors_per_fat)	
005309 19                  B   168    				add hl,de
00530A EB                  B   169    				ex de,hl
00530B CD 8F 53 00         B   170    				call set_lba_and_write_sector 	00530F D8                  B   171    				ret c	
                           B   172    
005310 CD 79 5D 00         B   173    				call fs_clear_sector_buffer		005314 D5                  B   174    				push de	
005315 21 B5 60 00         B   175    				ld hl,fs_sought_filename
005319 11000800            B   176    				ld de,sector_buffer
00531D 010B0000            B   177    				ld bc,11
005321 EDB0                B   178    				ldir							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005323 D1                  B   179    				pop de							005324 DD360B08            B   180    				ld (ix+0bh),8					005328 DD361821            B   181    				ld (ix+018h),021h				                           B   182    				
00532C EB                  B   183    				ex de,hl
00532D ED5B AF 60 00       B   184    				ld de,(fs_sectors_per_fat)		005332 19                  B   185    				add hl,de
005333 EB                  B   186    				ex de,hl
005334 CD 8F 53 00         B   187    				call set_lba_and_write_sector	005338 D8                  B   188    				ret c	
                           B   189    						
                           B   190    
005339 21 1E 61 00         B   191    				ld hl,partition_base			00533D 7E                  B   192    				ld a,(hl)
00533E 23                  B   193    				inc hl
00533F B6                  B   194    				or (hl)
005340 23                  B   195    				inc hl
005341 B6                  B   196    				or (hl)
005342 23                  B   197    				inc hl
005343 B6                  B   198    				or (hl)
005344 28 47               B   199    				jr z,format_done				                           B   200    
005346 CD AE 53 00         B   201    				call fs_read_mbr				00534A D8                  B   202    				ret c
00534B DD21BE09 00         B   203    				ld ix,sector_buffer+1beh
005350 0E00                B   204    				ld c,0
005352 0604                B   205    fs_lanp			ld b,4
005354 ED1208              B   206    				lea de,ix+8
005357 21 1E 61 00         B   207    				ld hl,partition_base
00535B 1A                  B   208    fs_fpart		ld a,(de)
00535C BE                  B   209    				cp (hl)
00535D 28 0D               B   210    				jr z,fs_chkpaddrlp
00535F ED3210              B   211    				lea ix,ix+16					005362 0C                  B   212    				inc c
005363 79                  B   213    				ld a,c
005364 FE04                B   214    				cp 4
005366 20 EA               B   215    				jr nz,fs_lanp				
005368 3ECE                B   216    				ld a,0ceh						00536A B7                  B   217    				or a
00536B C9                  B   218    				ret
00536C 13                  B   219    fs_chkpaddrlp	inc de
00536D 23                  B   220    				inc hl
00536E 10 EB               B   221    				djnz fs_fpart					                           B   222    				
005370 DD7E04              B   223    				ld a,(ix+4)						005373 FE0E                B   224    				cp 0eh
005375 28 16               B   225    				jr z,format_done				005377 DD36040E            B   226    				ld (ix+4),0eh
00537B 21000000            B   227    				ld hl,0							00537F AF                  B   228    				xor a
005380 22 35 6E 00         B   229    				ld (sector_lba0),hl				005384 32 38 6E 00         B   230    				ld (sector_lba0+3),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005388 CD 26 60 00         B   231    				call fs_write_sector
00538C D8                  B   232    				ret c
                           B   233    
00538D AF                  B   234    format_done		xor a							00538E C9                  B   235    				ret				
                           B   236    				
                           B   237    
                           B   238    				
                           B   239    
                           B   240    
00538F                     B   241    set_lba_and_write_sector
                           B   242    
00538F E5                  B   243    				push hl
005390 D5                  B   244    				push de
005391 C5                  B   245    				push bc
005392 2A 1E 61 00         B   246    				ld hl,(partition_base)
005396 3A 21 61 00         B   247    				ld a,(partition_base+3)
00539A 0600                B   248    				ld b,0
00539C 19                  B   249    				add hl,de
00539D 88                  B   250    				adc a,b
00539E 22 35 6E 00         B   251    				ld (sector_lba0),hl				0053A2 32 38 6E 00         B   252    				ld (sector_lba0+3),a			0053A6 CD 26 60 00         B   253    				call fs_write_sector
0053AA C1                  B   254    				pop bc
0053AB D1                  B   255    				pop de
0053AC E1                  B   256    				pop hl
0053AD C9                  B   257    				ret
                           B   258    
                           B   259    
                           B   260    
0053AE 21000000            B   261    fs_read_mbr		ld hl,0
0053B2 AF                  B   262    				xor a
0053B3 22 35 6E 00         B   263    				ld (sector_lba0),hl				0053B7 32 38 6E 00         B   264    				ld (sector_lba0+3),a			0053BB CD FD 5F 00         B   265    				call fs_read_sector
0053BF C9                  B   266    				ret
                           B   267    				
                           B   268    
                           B   269    
                           B   270    ;----------------------------------------------
                           B   271    
0053C0                     B   272    fs_get_partition_info
                           B   273    
                           B   274    ; Set A to partition: $00 to $03
                           B   275    ; On return: If A = $00, IX = Address of reques
                           B   276    ;            If A = $d3, no partition table is 
                           B   277    ;            If A = $ce, Disk format is bad 
                           B   278    ;            If A = $cf, No (or unknown,non-FAT
                           B   279    ;            If carry flag set, there was a har
                           B   280    
                           B   281    				
0053C0 CD AE 53 00         B   282    				call fs_read_mbr				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0053C4 D8                  B   283    				ret c
                           B   284    			
0053C5 CD 02 54 00         B   285    				call fs_check_fat_sig			0053C9 20 44               B   286    				jr nz,formbad
                           B   287    			
0053CB CD F3 53 00         B   288    				call check_fat16_id				0053CF 20 04               B   289    				jr nz,mbr_at_zero				0053D1 3ED3                B   290    				ld a,0d3h						0053D3 B7                  B   291    				or a
0053D4 C9                  B   292    				ret
                           B   293    
0053D5 11100000            B   294    mbr_at_zero		ld de,16
0053D9 3A 81 6D 00         B   295    				ld a,(partition_temp)
0053DD 57                  B   296    				ld d,a
0053DE ED5C                B   297    				mlt de
0053E0 DD21BE09 00         B   298    				ld ix,sector_buffer+01beh
0053E5 DD19                B   299    				add ix,de
0053E7 DDCB0456            B   300    				bit 2,(ix+4)					0053EB 20 04               B   301    				jr nz,formok					0053ED 3ECF                B   302    				ld a,0cfh						0053EF B7                  B   303    				or a
0053F0 C9                  B   304    				ret
                           B   305    				
0053F1 AF                  B   306    formok			xor a							0053F2 C9                  B   307    				ret
                           B   308    					
                           B   309    
                           B   310    
                           B   311    
0053F3                     B   312    check_fat16_id
                           B   313    		
0053F3 21360800            B   314    				ld hl,sector_buffer+036h		0053F7 11 DA 65 00         B   315    				ld de,fat16_txt			
0053FB 0605                B   316    				ld b,5
0053FD CD E2 13 00         B   317    				call os_compare_strings
005401 C9                  B   318    				ret
                           B   319    				
                           B   320    ;----------------------------------------------
                           B   321    
                           B   322    
005402                     B   323    fs_check_fat_sig
                           B   324    
005402 2AFE0900            B   325    				ld hl,(sector_buffer+01feh)		005406 1155AA00            B   326    				ld de,0aa55h
00540A AF                  B   327    				xor a
00540B 52ED52              B   328    				sbc.s hl,de						00540E C9                  B   329    				ret
                           B   330    			
                           B   331    			
                           B   332    			
00540F 3ECE                B   333    formbad			ld a,0ceh						005411 B7                  B   334    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005412 C9                  B   335    				ret
                           B   336    
                           B   337    ;----------------------------------------------
                           B   338    
                           B   339    
005413                     B   340    fs_check_disk_format
                           B   341    
                           B   342    ; ensures disk is FAT16, sets up constants..
                           B   343    	
005413 C5                  B   344    				push bc
005414 D5                  B   345    				push de
005415 E5                  B   346    				push hl
005416 CD 1E 54 00         B   347    				call go_checkf
00541A E1                  B   348    				pop hl
00541B D1                  B   349    				pop de
00541C C1                  B   350    				pop bc
00541D C9                  B   351    				ret
                           B   352    				
00541E CD E5 54 00         B   353    go_checkf		call fs_read_partition_bootsect
005422 D8                  B   354    				ret c
005423 B7                  B   355    				or a
005424 C0                  B   356    				ret nz
                           B   357    				
005425 CD 02 54 00         B   358    				call fs_check_fat_sig			005429 20 E4               B   359    				jr nz,formbad		
                           B   360    			
00542B CD F3 53 00         B   361    				call check_fat16_id				00542F 20 DE               B   362    				jr nz,formbad
                           B   363    			
005431 DD210008 00         B   364    				ld ix,sector_buffer
005436 DD270B              B   365    				ld hl,(ix+0bh)					005439 11000200            B   366    				ld de,512						00543D AF                  B   367    				xor a
00543E 52ED52              B   368    				sbc.s hl,de						005441 20 CC               B   369    				jr nz,formbad
                           B   370    			
005443 DD7E0D              B   371    				ld a,(ix+0dh)					005446 32 9E 60 00         B   372    				ld (fs_cluster_size),a
00544A CB27                B   373    				sla a
00544C 32 A0 60 00         B   374    				ld (fs_bytes_per_cluster+1),a
                           B   375    							
005450 21000000            B   376    				ld hl,0
005454 DD6E0E              B   377    				ld l,(ix+0eh)					005457 DD660F              B   378    				ld h,(ix+0fh)
00545A 22 A2 60 00         B   379    				ld (fs_fat1_position),hl		00545E 11000000            B   380    				ld de,0
005462 DD5E16              B   381    				ld e,(ix+16h)					005465 DD5617              B   382    				ld d,(ix+17h)
005468 ED53 AF 60 00       B   383    				ld (fs_sectors_per_fat),de
00546D 19                  B   384    				add hl,de
00546E 22 A5 60 00         B   385    				ld (fs_fat2_position),hl		005472 19                  B   386    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005473 22 A8 60 00         B   387    				ld (fs_root_dir_position),hl 	005477 EB                  B   388    				ex de,hl
005478 DD6E11              B   389    				ld l,(ix+11h)					00547B DD6612              B   390    				ld h,(ix+12h)					00547E 7C                  B   391    				ld a,h
00547F B5                  B   392    				or l
005480 28 8D               B   393    				jr z,formbad					005482 29                  B   394    				add hl,hl						005483 29                  B   395    				add hl,hl						005484 29                  B   396    				add hl,hl
005485 29                  B   397    				add hl,hl
005486 EB                  B   398    				ex de,hl
005487 7A                  B   399    				ld a,d
005488 32 AE 60 00         B   400    				ld (fs_root_dir_sectors),a		00548C 01000000            B   401    				ld bc,0
005490 4A                  B   402    				ld c,d
005491 09                  B   403    				add hl,bc				
005492 22 AB 60 00         B   404    				ld (fs_data_area),hl			                           B   405    												005496 21000000            B   406    				ld hl,0
00549A 01000000            B   407    				ld bc,0
00549E DD4E22              B   408    				ld c,(ix+022h)					0054A1 DD4623              B   409    				ld b,(ix+023h)
0054A4 DD6E13              B   410    				ld l,(ix+013h)					0054A7 DD6614              B   411    				ld h,(ix+014h)
0054AA 7C                  B   412    				ld a,h							0054AB B5                  B   413    				or l
0054AC 20 06               B   414    				jr nz,got_tsfbs
0054AE DD6E20              B   415    				ld l,(ix+020h)					0054B1 DD6621              B   416    				ld h,(ix+021h)
0054B4 ED5B AB 60 00       B   417    got_tsfbs 		ld de,(fs_data_area)
0054B9 AF                  B   418    				xor a							0054BA 52ED52              B   419    				sbc.s hl,de						0054BD 30 02               B   420    				jr nc,nomxcb
0054BF 520B                B   421    				dec.s bc
0054C1 3A 9E 60 00         B   422    nomxcb			ld a,(fs_cluster_size)
0054C5 CB3F                B   423    fmaxcl			srl a
0054C7 28 08               B   424    				jr z,got_cmaxc					0054C9 CB39                B   425    				srl c				
0054CB CB1C                B   426    				rr h
0054CD CB1D                B   427    				rr l
0054CF 18 F4               B   428    				jr fmaxcl
0054D1 E5                  B   429    got_cmaxc		push hl							0054D2 11F0FF00            B   430    				ld de,0fff0h
0054D6 AF                  B   431    				xor a
0054D7 52ED52              B   432    				sbc.s hl,de						0054DA 38 02               B   433    				jr c,cmaxok
0054DC E1                  B   434    				pop hl
0054DD D5                  B   435    				push de
0054DE E1                  B   436    cmaxok			pop hl
0054DF 22 B2 60 00         B   437    				ld (fs_max_data_clusters),hl
0054E3 AF                  B   438    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0054E4 C9                  B   439    				ret				
                           B   440    
                           B   441    ;----------------------------------------------
                           B   442    
0054E5                     B   443    fs_read_partition_bootsector
                           B   444    
0054E5 CD 3C 1C 00         B   445    				call fs_calc_volume_offset		0054E9 21 7E 6C 00         B   446    				ld hl,volume_mount_list
0054ED 19                  B   447    				add hl,de
0054EE 7E                  B   448    				ld a,(hl)
0054EF B7                  B   449    				or a							0054F0 20 04               B   450    				jr nz,fs_volpre
0054F2 3ECF                B   451    				ld a,0cfh						0054F4 B7                  B   452    				or a
0054F5 C9                  B   453    				ret
                           B   454    			
0054F6 11080000            B   455    fs_volpre		ld de,8							0054FA 19                  B   456    				add hl,de
0054FB 11 35 6E 00         B   457    				ld de,sector_lba0
0054FF 01040000            B   458    				ld bc,4
005503 EDB0                B   459    				ldir
005505 CD FD 5F 00         B   460    				call fs_read_sector
005509 C9                  B   461    				ret	
                           B   462    
                           B   463    ;----------------------------------------------
                           B   464    
00550A                     B   465    fs_calc_free_space
                           B   466    
                           B   467    ;returns free space in KB in HL:DE
                           B   468    
00550A ED5B B2 60 00       B   469    				ld de,(fs_max_data_clusters)
00550F 13                  B   470    				inc de
005510 13                  B   471    				inc de							005511 D5                  B   472    				push de
005512 DDE1                B   473    				pop ix
                           B   474    			
005514 AF                  B   475    				xor a
005515 32 F7 60 00         B   476    cfs_lp2			ld (fs_working_sector),a
005519 2A A2 60 00         B   477    				ld hl,(fs_fat1_position)
00551D CD D3 5F 00         B   478    				call set_abs_lba_and_read_secto
005521 D8                  B   479    				ret c
                           B   480    				
005522 21000800            B   481    				ld hl,sector_buffer
005526 0600                B   482    				ld b,0
005528 AF                  B   483    cfs_lp1			xor a
005529 B6                  B   484    				or a,(hl)						00552A 23                  B   485    				inc hl							00552B 20 03               B   486    				jr nz,cfs_ciu					00552D B6                  B   487    				or a,(hl)
00552E 28 02               B   488    				jr z,cfs_ddcc
005530 DD2B                B   489    cfs_ciu			dec ix							005532 23                  B   490    cfs_ddcc		inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005533 1B                  B   491    				dec de
005534 7A                  B   492    				ld a,d
005535 B3                  B   493    				or e
005536 28 09               B   494    				jr z,cfs_ok						005538 10 EE               B   495    				djnz cfs_lp1
00553A 3A F7 60 00         B   496    				ld a,(fs_working_sector)
00553E 3C                  B   497    				inc a
00553F 18 D4               B   498    				jr cfs_lp2
                           B   499    				
005541 3A 9E 60 00         B   500    cfs_ok			ld a,(fs_cluster_size)			005545 CB3F                B   501    cltoslp			srl a
005547 28 04               B   502    				jr z,powdone
005549 DD29                B   503    				add ix,ix
00554B 18 F8               B   504    				jr cltoslp	
00554D FD21 51 6E 00       B   505    powdone			ld iy,xrr_temp
005552 FD3E00              B   506    				ld (iy),ix						005555 FDCB023E            B   507    				srl (iy+2)
005559 FDCB011E            B   508    				rr (iy+1)
00555D FDCB001E            B   509    				rr (iy+0)						005561 FD1700              B   510    				ld de,(iy)						005564 AF                  B   511    				xor a
005565 C9                  B   512    				ret
                           B   513    
                           B   514    ;----------------------------------------------
                           B   515    
005566                     B   516    fs_change_dir_command
                           B   517    
                           B   518    ; INPUT: HL = directory name ascii (zero/space 
                           B   519    			
                           B   520    			
005566 CD 8D 5D 00         B   521    				call fs_find_filename			00556A D8                  B   522    				ret c							00556B FEC2                B   523    				cp 0c2h							00556D 20 04               B   524    				jr nz,founddir
00556F 3ED1                B   525    				ld a,0d1h						005571 B7                  B   526    				or a
005572 C9                  B   527    				ret
                           B   528    
005573 DDCB0B66            B   529    founddir		bit 4,(ix+0bh)
005577 20 04               B   530    				jr nz,fs_isadir
005579 3EC4                B   531    				ld a,0c4h
00557B B7                  B   532    				or a
00557C C9                  B   533    				ret
                           B   534    				
00557D 11000000            B   535    fs_isadir		ld de,0
005581 DD5E1A              B   536    				ld e,(ix+01ah)
005584 DD561B              B   537    				ld d,(ix+01bh)					005587 CD 0E 1C 00         B   538    				call fs_update_dir_cluster
00558B AF                  B   539    				xor a
00558C C9                  B   540    				ret
                           B   541    
                           B   542    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B   543    ;----------------------------------------------
                           B   544    	
                           B   545    	
00558D                     B   546    fs_goto_root_dir_command
                           B   547    
00558D D5                  B   548    				push de
00558E 11000000            B   549    				ld de,0
005592 CD 0E 1C 00         B   550    				call fs_update_dir_cluster
005596 D1                  B   551    				pop de
005597 AF                  B   552    				xor a
005598 C9                  B   553    				ret
                           B   554    
                           B   555    ;----------------------------------------------
                           B   556    	
                           B   557    	
005599                     B   558    fs_parent_dir_command
                           B   559    
005599 CD 02 1C 00         B   560    				call fs_get_dir_cluster
00559D 7A                  B   561    				ld a,d
00559E B3                  B   562    				or e
00559F 20 04               B   563    				jr nz,pdnaroot
0055A1 3ECA                B   564    				ld a,0cah						0055A3 B7                  B   565    				or a
0055A4 C9                  B   566    				ret
0055A5 212E2E20            B   567    pdnaroot		ld hl,0202e2eh					0055A9 22 B5 60 00         B   568    				ld (fs_sought_filename),hl		0055AD 21 B8 60 00         B   569    				ld hl,fs_sought_filename+3		0055B1 3E20                B   570    				ld a,32
0055B3 01080000            B   571    				ld bc,8
0055B7 CD 28 17 00         B   572    				call os_bchl_memfill
0055BB 18 A9               B   573    				jr fs_change_dir_command
                           B   574    				
                           B   575    		
                           B   576    ;----------------------------------------------
                           B   577    		
0055BD                     B   578    fs_open_file_command
                           B   579    
                           B   580    ; INPUT: xHL = filename ascii (zero/space termi
                           B   581    ; OUTPUT: C:xDE  = File length
                           B   582    ;            HL  = Start cluster of file
                           B   583    ;            Internal vars (file pointer reset 
                           B   584    
                           B   585    			
0055BD CD 8D 5D 00         B   586    				call fs_find_filename			0055C1 D8                  B   587    				ret c							0055C2 C0                  B   588    				ret nz							                           B   589    								
0055C3 3EC6                B   590    				ld a,0c6h						0055C5 DDCB0B66            B   591    				bit 4,(ix+0bh)
0055C9 C0                  B   592    				ret nz
                           B   593    
0055CA AF                  B   594    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0055CB 32 0B 61 00         B   595    				ld (fs_filepointer_valid),a		0055CF 21000000            B   596    				ld hl,0
0055D3 22 D9 60 00         B   597    				ld (fs_file_pointer),hl			0055D7 32 DC 60 00         B   598    				ld (fs_file_pointer+3),a		0055DB 22 17 61 00         B   599    				ld (fs_sector_last_read_lba0),h
0055DF 32 1A 61 00         B   600    				ld (fs_sector_last_read_lba0+3)
                           B   601    
0055E3 DD171C              B   602    				ld de,(ix+01ch)
0055E6 D5                  B   603    				push de
0055E7 E1                  B   604    				pop hl
0055E8 DD4E1F              B   605    				ld c,(ix+01fh)					0055EB ED53 DD 60 00       B   606    				ld (fs_file_length),de			0055F0 79                  B   607    				ld a,c
0055F1 32 E0 60 00         B   608    				ld (fs_file_length+3),a			0055F5 B7                  B   609    				or a							0055F6 28 04               B   610    				jr z,fs_dflsm					0055F8 21FFFFFF            B   611    				ld hl,0ffffffh
0055FC 22 E5 60 00         B   612    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   613    				
005600 21000000            B   614    				ld hl,0
005604 DD6E1A              B   615    				ld l,(ix+01ah)		
005607 DD661B              B   616    				ld h,(ix+01bh)
00560A 22 E8 60 00         B   617    				ld (fs_file_start_cluster),hl	                           B   618    				
00560E AF                  B   619    				xor a
00560F C9                  B   620    				ret
                           B   621    
                           B   622    
                           B   623    ;----------------------------------------------
                           B   624    
005610                     B   625    fs_read_data_command		
                           B   626    
                           B   627    ;*******************************************
                           B   628    ;*** 'fs_open_file' must be called first ***
                           B   629    ;*******************************************
                           B   630    		
005610 CD 4F 57 00         B   631    fs_load			call fs_test_transfer_length	005614 20 04               B   632    				jr nz,fs_btrok
                           B   633    
005616 3EC7                B   634    fs_fliz			ld a,0c7h						005618 B7                  B   635    				or a
005619 C9                  B   636    				ret
                           B   637    			 
00561A 2A EE 60 00         B   638    fs_btrok		ld hl,(fs_ez80_address)			00561E 22 F1 60 00         B   639    				ld (fs_ez80_working_address),hl
                           B   640    			
005622 2A D9 60 00         B   641    				ld hl,(fs_file_pointer)			005626 3A DC 60 00         B   642    				ld a,(fs_file_pointer+3)		00562A 11010000            B   643    				ld de,1							00562E 19                  B   644    				add hl,de
00562F CE00                B   645    				adc a,0
005631 4F                  B   646    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005632 EB                  B   647    				ex de,hl						005633 2A DD 60 00         B   648    				ld hl,(fs_file_length)			005637 3A E0 60 00         B   649    				ld a,(fs_file_length+3)			00563B B7                  B   650    				or a							00563C ED52                B   651    				sbc hl,de						00563E 99                  B   652    				sbc a,c
00563F DA A0 56 00         B   653    				jp c,fs_rd_eof
                           B   654    					
005643 3A 0B 61 00         B   655    fs_fpok			ld a,(fs_filepointer_valid)		005647 B7                  B   656    				or a							005648 20 46               B   657    				jr nz,fs_get_sector_if_necessar
                           B   658    			
00564A 3E01                B   659    seek_strt		ld a,1
00564C 32 0B 61 00         B   660    				ld (fs_filepointer_valid),a
005650 2A E8 60 00         B   661    				ld hl,(fs_file_start_cluster)	005654 22 EB 60 00         B   662    				ld (fs_file_working_cluster),hl
                           B   663    			
005658 3A DC 60 00         B   664    				ld a,(fs_file_pointer+3)		00565C 2A D9 60 00         B   665    				ld hl,(fs_file_pointer)			005660 ED4B 9F 60 00       B   666    fs_fpblp		ld bc,(fs_bytes_per_cluster)
005665 AF                  B   667    				xor a
005666 ED42                B   668    				sbc hl,bc						005668 DE00                B   669    				sbc a,0
00566A 38 14               B   670    				jr c,fs_fpgbo
00566C E5                  B   671    				push hl				
00566D 2A EB 60 00         B   672    				ld hl,(fs_file_working_cluster)
005671 CD A5 5E 00         B   673    				call get_fat_entry_for_cluster
005675 30 02               B   674    				jr nc,fs_ghok					005677 E1                  B   675    				pop hl
005678 C9                  B   676    				ret
005679 22 EB 60 00         B   677    fs_ghok			ld (fs_file_working_cluster),hl
00567D E1                  B   678    				pop hl
00567E 18 E0               B   679    				jr fs_fpblp
                           B   680    			
005680 09                  B   681    fs_fpgbo		add hl,bc						005681 7C                  B   682    				ld a,h
005682 CB3F                B   683    				srl a							005684 32 0C 61 00         B   684    				ld (fs_sector_pos_cnt),a
005688 7C                  B   685    				ld a,h
005689 E601                B   686    				and 01h
00568B 67                  B   687    				ld h,a
00568C 22 F4 60 00         B   688    				ld (fs_in_sector_offset),hl		                           B   689    
                           B   690    				
                           B   691    
005690                     B   692    fs_get_sector_if_necessary
                           B   693    				
005690 CD 4F 57 00         B   694    				call fs_test_transfer_length	005694 28 64               B   695    				jr z,fs_read_done	
                           B   696    				
005696 2A EB 60 00         B   697    				ld hl,(fs_file_working_cluster)
00569A CD 44 5C 00         B   698    				call fs_compare_hl_fff8			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
00569E 38 04               B   699    				jr c,fs_rd_noteof		
0056A0 3ECC                B   700    fs_rd_eof		ld a,0cch						0056A2 B7                  B   701    				or a
0056A3 C9                  B   702    				ret
                           B   703    				
0056A4 2A EB 60 00         B   704    fs_rd_noteof	ld hl,(fs_file_working_cluster)
0056A8 3A 0C 61 00         B   705    				ld a,(fs_sector_pos_cnt)		0056AC CD 7C 5F 00         B   706    				call cluster_and_offset_to_lba
0056B0 CD 42 60 00         B   707    				call fs_is_same_sector_in_buffe
0056B4 28 05               B   708    				jr z,fs_same_sector
0056B6 CD FD 5F 00         B   709    				call fs_read_sector				0056BA D8                  B   710    				ret c							                           B   711    			
0056BB 21000200            B   712    fs_same_sector	ld hl,512
0056BF ED5B F4 60 00       B   713    				ld de,(fs_in_sector_offset)
0056C4 AF                  B   714    				xor a
0056C5 ED52                B   715    				sbc hl,de						0056C7 E5                  B   716    				push hl
0056C8 C1                  B   717    				pop bc							                           B   718    				
0056C9 ED5B E5 60 00       B   719    				ld de,(fs_file_transfer_length)
0056CE AF                  B   720    				xor a
0056CF ED52                B   721    				sbc hl,de
0056D1 38 02               B   722    				jr c,fs_got_bc					0056D3 D5                  B   723    				push de							0056D4 C1                  B   724    				pop bc
                           B   725    
0056D5 21000800            B   726    fs_got_bc		ld hl,sector_buffer
0056D9 ED5B F4 60 00       B   727    				ld de,(fs_in_sector_offset)		0056DE 19                  B   728    				add hl,de
0056DF ED5B F1 60 00       B   729    				ld de,(fs_ez80_working_address)
0056E4 C5                  B   730    				push bc
0056E5 EDB0                B   731    				ldir							0056E7 ED53 F1 60 00       B   732    				ld (fs_ez80_working_address),de
0056EC C1                  B   733    				pop bc
0056ED CD 23 57 00         B   734    				call fs_adjust_fp_tl_so
0056F1 2A F4 60 00         B   735    				ld hl,(fs_in_sector_offset)
0056F5 7C                  B   736    				ld a,h
0056F6 FE02                B   737    				cp 02h							0056F8 28 02               B   738    				jr z,fs_new_sec
0056FA AF                  B   739    fs_read_done	xor a
0056FB C9                  B   740    				ret
                           B   741    
0056FC 21000000            B   742    fs_new_sec		ld hl,0
005700 22 F4 60 00         B   743    				ld (fs_in_sector_offset),hl		005704 21 0C 61 00         B   744    				ld hl,fs_sector_pos_cnt			005708 34                  B   745    				inc (hl)
005709 3A 9E 60 00         B   746    				ld a,(fs_cluster_size)
00570D BE                  B   747    				cp (hl)
00570E 20 80               B   748    				jr nz,fs_get_sector_if_necessar
                           B   749    				
005710 3600                B   750    				ld (hl),0						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005712 2A EB 60 00         B   751    				ld hl,(fs_file_working_cluster)
005716 CD A5 5E 00         B   752    				call get_fat_entry_for_cluster	00571A D8                  B   753    				ret c							00571B 22 EB 60 00         B   754    				ld (fs_file_working_cluster),hl
00571F C3 90 56 00         B   755    				jr fs_get_sector_if_necessary
                           B   756    
                           B   757    ;----------------------------------------------
                           B   758    
005723                     B   759    fs_adjust_fp_tl_so
                           B   760    
                           B   761    ; advance / reduce by BC
                           B   762    
005723 C5                  B   763    				push bc
005724 E5                  B   764    				push hl
005725 2A D9 60 00         B   765    				ld hl,(fs_file_pointer)			005729 09                  B   766    				add hl,bc
00572A 22 D9 60 00         B   767    				ld (fs_file_pointer),hl			00572E 3A DC 60 00         B   768    				ld a,(fs_file_pointer+3)		005732 CE00                B   769    				adc a,0
005734 32 DC 60 00         B   770    				ld (fs_file_pointer+3),a		                           B   771    				
005738 2A E5 60 00         B   772    				ld hl,(fs_file_transfer_length)
00573C AF                  B   773    				xor a
00573D ED42                B   774    				sbc hl,bc
00573F 22 E5 60 00         B   775    				ld (fs_file_transfer_length),hl
                           B   776    				
005743 2A F4 60 00         B   777    				ld hl,(fs_in_sector_offset)
005747 09                  B   778    				add hl,bc
005748 22 F4 60 00         B   779    				ld (fs_in_sector_offset),hl
                           B   780    				
00574C E1                  B   781    				pop hl
00574D C1                  B   782    				pop bc
00574E C9                  B   783    				ret
                           B   784    				
                           B   785    				
00574F                     B   786    fs_test_transfer_length
                           B   787    				
00574F C5                  B   788    				push bc
005750 E5                  B   789    				push hl
005751 21000000            B   790    				ld hl,0
005755 ED4B E5 60 00       B   791    				ld bc,(fs_file_transfer_length)
00575A AF                  B   792    				xor a
00575B ED4A                B   793    				adc hl,bc
00575D E1                  B   794    				pop hl
00575E C1                  B   795    				pop bc
00575F C9                  B   796    				ret
                           B   797    				
                           B   798    ;----------------------------------------------
                           B   799    
005760                     B   800    fs_make_dir_command		
                           B   801    				
005760 CD 8D 5D 00         B   802    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005764 D8                  B   803    				ret c
005765 FEC2                B   804    				cp 0c2h							005767 28 04               B   805    				jr z,mdirfnde
005769 3EC9                B   806    				ld a,0c9h						00576B B7                  B   807    				or a
00576C C9                  B   808    				ret
                           B   809    			
00576D CD 51 5C 00         B   810    mdirfnde		call fs_find_free_cluster		005771 D8                  B   811    				ret c							005772 C0                  B   812    				ret nz							                           B   813    							
005773 2A FB 60 00         B   814    				ld hl,(fs_free_cluster)
005777 22 FE 60 00         B   815    				ld (fs_new_file_cluster),hl
                           B   816    			
00577B CD A2 5C 00         B   817    				call fs_find_free_dir_entry		00577F D8                  B   818    				ret c							005780 C0                  B   819    				ret nz							                           B   820    			
005781 DDE5                B   821    				push ix							005783 D1                  B   822    				pop de
005784 21 B5 60 00         B   823    				ld hl,fs_sought_filename
005788 010B0000            B   824    				ld bc,11
00578C EDB0                B   825    				ldir
00578E AF                  B   826    				xor a							00578F 0615                B   827    				ld b,21
005791 12                  B   828    clrdiren		ld (de),a
005792 13                  B   829    				inc de
005793 10 FC               B   830    				djnz clrdiren
005795 DD360B10            B   831    				ld (ix+0bh),010h				005799 DD361821            B   832    				ld (ix+018h),021h				00579D ED5B FE 60 00       B   833    				ld de,(fs_new_file_cluster)
0057A2 DD731A              B   834    				ld (ix+01ah),e					0057A5 DD721B              B   835    				ld (ix+01bh),d
0057A8 CD 26 60 00         B   836    				call fs_write_sector			0057AC D8                  B   837    				ret c							                           B   838    				
0057AD CD 79 5D 00         B   839    				call fs_clear_sector_buffer
0057B1 DD210008 00         B   840    				ld ix,sector_buffer				0057B6 DD36002E            B   841    				ld (ix+00h),02eh				0057BA DD360120            B   842    				ld (ix+01h),020h
0057BE DD36202E            B   843    				ld (ix+020h),02eh
0057C2 DD36212E            B   844    				ld (ix+021h),02eh
0057C6 DD360B10            B   845    				ld (ix+0bh),010h
0057CA DD362B10            B   846    				ld (ix+02bh),010h
0057CE ED5B FE 60 00       B   847    				ld de,(fs_new_file_cluster)		0057D3 DD731A              B   848    				ld (ix+01ah),e
0057D6 DD721B              B   849    				ld (ix+01bh),d
0057D9 CD 02 1C 00         B   850    				call fs_get_dir_cluster			0057DD DD733A              B   851    				ld (ix+03ah),e
0057E0 DD723B              B   852    				ld (ix+03bh),d
0057E3 DD361821            B   853    				ld (ix+018h),021h				0057E7 DD363821            B   854    				ld (ix+038h),021h				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0057EB 0609                B   855    				ld b,9
0057ED DD360220            B   856    mndelp			ld (ix+002h),32
0057F1 DD362220            B   857    				ld (ix+022h),32
0057F5 DD23                B   858    				inc ix
0057F7 10 F4               B   859    				djnz mndelp
0057F9 2A FE 60 00         B   860    				ld hl,(fs_new_file_cluster)		0057FD AF                  B   861    				xor a
0057FE CD 7C 5F 00         B   862    				call cluster_and_offset_to_lba
005802 CD 26 60 00         B   863    				call fs_write_sector
005806 D8                  B   864    				ret c							                           B   865    			
005807 CD 79 5D 00         B   866    				call fs_clear_sector_buffer		00580B AF                  B   867    				xor a
00580C 3C                  B   868    wroslp			inc a
00580D 32 F7 60 00         B   869    				ld (fs_working_sector),a
005811 21 9E 60 00         B   870    				ld hl,fs_cluster_size
005815 BE                  B   871    				cp (hl)
005816 28 13               B   872    				jr z,allsclr
005818 2A FE 60 00         B   873    				ld hl,(fs_new_file_cluster)
00581C CD 7C 5F 00         B   874    				call cluster_and_offset_to_lba
005820 CD 26 60 00         B   875    				call fs_write_sector
005824 D8                  B   876    				ret c
005825 3A F7 60 00         B   877    				ld a,(fs_working_sector)
005829 18 E1               B   878    				jr wroslp
                           B   879    			
00582B 2A FE 60 00         B   880    allsclr			ld hl,(fs_new_file_cluster)		00582F 11FFFF00            B   881    				ld de,0ffffh
005833 CD D1 5E 00         B   882    				call update_fat_entry_for_clust
005837 AF                  B   883    				xor a
005838 C9                  B   884    				ret
                           B   885    
                           B   886    
                           B   887    
                           B   888    ;----------------------------------------------
                           B   889    
005839                     B   890    fs_delete_dir_command
                           B   891    
005839 CD 8D 5D 00         B   892    				call fs_find_filename			00583D D8                  B   893    				ret c
00583E 28 04               B   894    				jr z,ddc_gotd
005840 3ED1                B   895    				ld a,0d1h						005842 B7                  B   896    				or a
005843 C9                  B   897    				ret
                           B   898    				
005844 DDCB0B66            B   899    ddc_gotd		bit 4,(ix+0bh)					005848 20 04               B   900    				jr nz,okdeldir
00584A 3EC4                B   901    				ld a,0c4h						00584C B7                  B   902    				or a
00584D C9                  B   903    				ret
                           B   904    				
00584E DD22 01 61 00       B   905    okdeldir		ld (fs_fname_in_sector_addr),ix
005853 CD DB 5F 00         B   906    				call backup_sector_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005857 DD6E1A              B   907    				ld l,(ix+01ah)					00585A DD661B              B   908    				ld h,(ix+01bh)
                           B   909    				
00585D 3A 9E 60 00         B   910    fs_ddecl		ld a,(fs_cluster_size)
005861 47                  B   911    				ld b,a							005862 0E00                B   912    				ld c,0			
005864 79                  B   913    fs_cne2 		ld a,c
005865 CD 7C 5F 00         B   914    				call cluster_and_offset_to_lba
005869 CD FD 5F 00         B   915    				call fs_read_sector
00586D D8                  B   916    				ret c							                           B   917    				
00586E C5                  B   918    				push bc
00586F 0610                B   919    				ld b,16							005871 DD210008 00         B   920    				ld ix,sector_buffer
005876 11200000            B   921    				ld de,020h
00587A DD7E00              B   922    fs_cne1			ld a,(ix)
00587D B7                  B   923    				or a
00587E 28 0D               B   924    				jr z,fs_chnde
005880 FEE5                B   925    				cp 0e5h
005882 28 09               B   926    				jr z,fs_chnde
005884 FE2E                B   927    				cp '.'
005886 28 05               B   928    				jr z,fs_chnde
005888 C1                  B   929    				pop bc
005889 3EC5                B   930    				ld a,0c5h						00588B B7                  B   931    				or a
00588C C9                  B   932    				ret
                           B   933    			
00588D DD19                B   934    fs_chnde		add ix,de
00588F 10 E9               B   935    				djnz fs_cne1
005891 C1                  B   936    				pop bc
005892 0C                  B   937    				inc c
005893 10 CF               B   938    				djnz fs_cne2
                           B   939    			
005895 CD A5 5E 00         B   940    				call get_fat_entry_for_cluster	005899 D8                  B   941    				ret c
00589A CD 44 5C 00         B   942    				call fs_compare_hl_fff8
00589E 38 BD               B   943    				jr c,fs_ddecl
                           B   944    			
0058A0 CD F0 5F 00         B   945    dir_empty		call restore_sector_lba			0058A4 CD FD 5F 00         B   946    				call fs_read_sector
0058A8 D8                  B   947    				ret c							0058A9 2A 01 61 00         B   948    				ld hl,(fs_fname_in_sector_addr)
0058AD 36E5                B   949    fs_delco		ld (hl),0e5h					0058AF CD 26 60 00         B   950    				call fs_write_sector
0058B3 D8                  B   951    				ret c
                           B   952    			
0058B4 E5                  B   953    				push hl
0058B5 DDE1                B   954    				pop ix
0058B7 DD6E1A              B   955    				ld l,(ix+01ah)
0058BA DD661B              B   956    				ld h,(ix+01bh)
0058BD 22 F8 60 00         B   957    				ld (fs_working_cluster),hl
0058C1 7C                  B   958    				ld a,h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0058C2 B5                  B   959    				or l							0058C3 C8                  B   960    				ret z							                           B   961    				
0058C4 2A F8 60 00         B   962    clrfatlp		ld hl,(fs_working_cluster)
0058C8 CD A5 5E 00         B   963    				call get_fat_entry_for_cluster
0058CC D8                  B   964    				ret c
0058CD EB                  B   965    				ex de,hl
                           B   966    				
0058CE 2A F8 60 00         B   967    				ld hl,(fs_working_cluster)
0058D2 ED53 F8 60 00       B   968    				ld (fs_working_cluster),de
0058D7 11000000            B   969    				ld de,0
0058DB CD D1 5E 00         B   970    				call update_fat_entry_for_clust
0058DF D8                  B   971    				ret c
                           B   972    				
0058E0 CD 44 5C 00         B   973    				call fs_compare_hl_fff8			0058E4 38 DE               B   974    				jr c,clrfatlp
0058E6 AF                  B   975    				xor a
0058E7 C9                  B   976    				ret
                           B   977    
                           B   978    
                           B   979    ;----------------------------------------------
                           B   980    
0058E8                     B   981    fs_create_file_command
                           B   982    
                           B   983    ; Note: As per FAT standard, creating a file (0
                           B   984    ; only a directory entry (FAT is only updated w
                           B   985    
0058E8 CD 8D 5D 00         B   986    				call fs_find_filename			0058EC D8                  B   987    				ret c
0058ED FEC2                B   988    				cp 0c2h							0058EF 28 04               B   989    				jr z,mfilefnde
                           B   990    				
0058F1 3EC9                B   991    				ld a,0c9h						0058F3 B7                  B   992    				or a
0058F4 C9                  B   993    				ret
                           B   994    			
0058F5 CD A2 5C 00         B   995    mfilefnde		call fs_find_free_dir_entry		0058F9 D8                  B   996    				ret c							0058FA C0                  B   997    				ret nz							                           B   998    			
0058FB DDE5                B   999    				push ix							0058FD D1                  B  1000    				pop de
0058FE 21 B5 60 00         B  1001    				ld hl,fs_sought_filename
005902 010B0000            B  1002    				ld bc,11
005906 EDB0                B  1003    				ldir
005908 AF                  B  1004    				xor a							005909 0615                B  1005    				ld b,21
00590B 12                  B  1006    clrfnen			ld (de),a
00590C 13                  B  1007    				inc de
00590D 10 FC               B  1008    				djnz clrfnen
00590F DD361821            B  1009    				ld (ix+018h),021h				005913 CD 26 60 00         B  1010    				call fs_write_sector			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005917 D8                  B  1011    				ret c							005918 AF                  B  1012    				xor a
005919 C9                  B  1013    				ret								                           B  1014    
                           B  1015    
                           B  1016    ;----------------------------------------------
                           B  1017    
00591A                     B  1018    fs_write_bytes_to_file_command
                           B  1019    	
                           B  1020    ; *********************************************
                           B  1021    ; * set up: fs_file_transfer_length (new data),
                           B  1022    ; * before calling                             
                           B  1023    ; *********************************************
                           B  1024    
                           B  1025    				
00591A ED5B E5 60 00       B  1026    				ld de,(fs_file_transfer_length)
00591F 21000000            B  1027    				ld hl,0
005923 AF                  B  1028    				xor a
005924 ED5A                B  1029    				adc hl,de
005926 CA 16 56 00         B  1030    				jp z,fs_fliz					                           B  1031    				 
00592A CD 8D 5D 00         B  1032    				call fs_find_filename			00592E D8                  B  1033    				ret c							00592F FEC2                B  1034    				cp 0c2h				
005931 20 02               B  1035    				jr nz,fs_fetwt					005933 B7                  B  1036    				or a
005934 C9                  B  1037    				ret
005935 DDCB0B66            B  1038    fs_fetwt		bit 4,(ix+0bh)					005939 28 04               B  1039    				jr z,fs_oknad					00593B 3EC6                B  1040    				ld a,0c6h						00593D B7                  B  1041    				or a
00593E C9                  B  1042    				ret
                           B  1043    
00593F CD DB 5F 00         B  1044    fs_oknad		call backup_sector_lba
005943 DD22 01 61 00       B  1045    				ld (fs_fname_in_sector_addr),ix
                           B  1046    
005948 DD311C              B  1047    				ld iy,(ix+01ch)					00594B DD7E1F              B  1048    				ld a,(ix+01fh)
00594E FD22 E1 60 00       B  1049    				ld (fs_existing_file_length),iy
005953 32 E4 60 00         B  1050    				ld (fs_existing_file_length+3),
005957 ED5B E5 60 00       B  1051    				ld de,(fs_file_transfer_length)
00595C FD19                B  1052    				add iy,de						00595E CE00                B  1053    				adc a,0
005960 DD3E1C              B  1054    				ld (ix+01ch),iy					005963 DD771F              B  1055    				ld (ix+01fh),a					005966 30 04               B  1056    				jr nc,nfsizeok
005968 3EC7                B  1057    				ld a,0c7h						00596A B7                  B  1058    				or a
00596B C9                  B  1059    				ret
                           B  1060    
00596C 11000000            B  1061    nfsizeok		ld de,0
005970 DD5E1A              B  1062    				ld e,(ix+01ah)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005973 DD561B              B  1063    				ld d,(ix+01bh)					005976 ED53 EB 60 00       B  1064    				ld (fs_file_working_cluster),de
00597B CD 26 60 00         B  1065    				call fs_write_sector			00597F D8                  B  1066    				ret c
005980 7A                  B  1067    				ld a,d
005981 B3                  B  1068    				or e
005982 20 35               B  1069    				jr nz,apenclch					                           B  1070    				
005984 CD 51 5C 00         B  1071    				call fs_find_free_cluster		005988 D8                  B  1072    				ret c
005989 C0                  B  1073    				ret nz
00598A 2A FB 60 00         B  1074    				ld hl,(fs_free_cluster)
00598E 22 EB 60 00         B  1075    				ld (fs_file_working_cluster),hl
005992 11FFFF00            B  1076    				ld de,0ffffh
005996 CD D1 5E 00         B  1077    				call update_fat_entry_for_clust
00599A D8                  B  1078    				ret c
                           B  1079    			
00599B CD F0 5F 00         B  1080    				call restore_sector_lba			00599F CD FD 5F 00         B  1081    				call fs_read_sector
0059A3 D8                  B  1082    				ret c
0059A4 DD2A 01 61 00       B  1083    				ld ix,(fs_fname_in_sector_addr)
0059A9 ED5B EB 60 00       B  1084    				ld de,(fs_file_working_cluster)
0059AE DD731A              B  1085    				ld (ix+01ah),e
0059B1 DD721B              B  1086    				ld (ix+01bh),d
0059B4 CD 26 60 00         B  1087    				call fs_write_sector			0059B8 D8                  B  1088    				ret c
                           B  1089    				
                           B  1090    					
0059B9 2A EB 60 00         B  1091    apenclch		ld hl,(fs_file_working_cluster)
0059BD CD A5 5E 00         B  1092    				call get_fat_entry_for_cluster
0059C1 D8                  B  1093    				ret c
0059C2 CD 44 5C 00         B  1094    				call fs_compare_hl_fff8
0059C6 30 1C               B  1095    				jr nc,atlclif
0059C8 22 EB 60 00         B  1096    				ld (fs_file_working_cluster),hl
0059CC 01000000            B  1097    				ld bc,0
0059D0 3A 9E 60 00         B  1098    				ld a,(fs_cluster_size)
0059D4 CB27                B  1099    				sla a
0059D6 47                  B  1100    				ld b,a
0059D7 2A E1 60 00         B  1101    				ld hl,(fs_existing_file_length)
0059DB AF                  B  1102    				xor a							0059DC ED42                B  1103    				sbc hl,bc						0059DE 22 E1 60 00         B  1104    				ld (fs_existing_file_length),hl
0059E2 18 D5               B  1105    				jr apenclch
                           B  1106    				
0059E4 ED4B E1 60 00       B  1107    atlclif			ld bc,(fs_existing_file_length)
0059E9 CB38                B  1108    				srl b				
0059EB 48                  B  1109    				ld c,b							0059EC 3A 9E 60 00         B  1110    				ld a,(fs_cluster_size)
0059F0 91                  B  1111    				sub c
0059F1 47                  B  1112    				ld b,a							0059F2 28 79               B  1113    				jr z,fs_sfncl					                           B  1114    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0059F4 2A EB 60 00         B  1115    				ld hl,(fs_file_working_cluster)
0059F8 79                  B  1116    				ld a,c
0059F9 CD 7C 5F 00         B  1117    				call cluster_and_offset_to_lba
0059FD CD FD 5F 00         B  1118    				call fs_read_sector
005A01 D8                  B  1119    				ret c
005A02 C5                  B  1120    				push bc							                           B  1121    				
005A03 11000000            B  1122    				ld de,0
005A07 3A E1 60 00         B  1123    				ld a,(fs_existing_file_length)
005A0B 5F                  B  1124    				ld e,a
005A0C 3A E2 60 00         B  1125    				ld a,(fs_existing_file_length+1
005A10 E601                B  1126    				and 1
005A12 57                  B  1127    				ld d,a							005A13 21000200            B  1128    				ld hl,512	
005A17 AF                  B  1129    				xor a
005A18 ED52                B  1130    				sbc hl,de						005A1A E5                  B  1131    				push hl
005A1B C1                  B  1132    				pop bc							005A1C 21000800            B  1133    				ld hl,sector_buffer
005A20 19                  B  1134    				add hl,de
005A21 EB                  B  1135    				ex de,hl						005A22 7C                  B  1136    				ld a,h			
005A23 B5                  B  1137    				or l
005A24 20 04               B  1138    				jr nz,fs_dcsb					005A26 CD 79 5D 00         B  1139    fs_dbfil		call fs_clear_sector_buffer
005A2A 2A EE 60 00         B  1140    fs_dcsb			ld hl,(fs_ez80_address)			005A2E EDA0                B  1141    fs_cbsb			ldi								005A30 7C                  B  1142    				ld a,h							005A31 B5                  B  1143    				or l
005A32 20 0D               B  1144    				jr nz,fs_srcadok
005A34 22 EE 60 00         B  1145    				ld (fs_ez80_address),hl
005A38 3A F0 60 00         B  1146    				ld a,(fs_ez80_address+2)
005A3C B7                  B  1147    				or a
005A3D CA AC 5A 00         B  1148    				jp z,fs_mem_error
005A41 CD 05 5F 00         B  1149    fs_srcadok		call transfer_length_countdown
005A45 28 54               B  1150    				jr z,fs_lbof					005A47 78                  B  1151    fs_sadok		ld a,b							005A48 B1                  B  1152    				or c
005A49 20 E3               B  1153    				jr nz,fs_cbsb					                           B  1154    
005A4B 22 EE 60 00         B  1155    				ld (fs_ez80_address),hl			005A4F C1                  B  1156    				pop bc							005A50 79                  B  1157    				ld a,c
005A51 2A EB 60 00         B  1158    				ld hl,(fs_file_working_cluster)
005A55 CD 7C 5F 00         B  1159    				call cluster_and_offset_to_lba
005A59 CD 26 60 00         B  1160    				call fs_write_sector			005A5D D8                  B  1161    				ret c							005A5E 0C                  B  1162    				inc c							005A5F 05                  B  1163    				dec b
005A60 28 0B               B  1164    				jr z,fs_sfncl					005A62 C5                  B  1165    fs_sfns			push bc				
005A63 01000200            B  1166    				ld bc,512						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005A67 11000800            B  1167    				ld de,sector_buffer				005A6B 18 B9               B  1168    				jr fs_dbfil						                           B  1169    				
005A6D CD 51 5C 00         B  1170    fs_sfncl		call fs_find_free_cluster		005A71 D8                  B  1171    				ret c							005A72 C0                  B  1172    				ret nz							005A73 2A EB 60 00         B  1173    				ld hl,(fs_file_working_cluster)
005A77 ED5B FB 60 00       B  1174    				ld de,(fs_free_cluster)
005A7C CD D1 5E 00         B  1175    				call update_fat_entry_for_clust
005A80 D8                  B  1176    				ret c
005A81 2A FB 60 00         B  1177    				ld hl,(fs_free_cluster)
005A85 22 EB 60 00         B  1178    				ld (fs_file_working_cluster),hl
005A89 11FFFF00            B  1179    				ld de,0ffffh
005A8D CD D1 5E 00         B  1180    				call update_fat_entry_for_clust
005A91 D8                  B  1181    				ret c
005A92 3A 9E 60 00         B  1182    				ld a,(fs_cluster_size)
005A96 47                  B  1183    				ld b,a							005A97 0E00                B  1184    				ld c,0							005A99 18 C7               B  1185    				jr fs_sfns						                           B  1186    				
005A9B C1                  B  1187    fs_lbof			pop bc
005A9C 79                  B  1188    				ld a,c							005A9D 2A EB 60 00         B  1189    				ld hl,(fs_file_working_cluster)
005AA1 CD 7C 5F 00         B  1190    				call cluster_and_offset_to_lba
005AA5 CD 26 60 00         B  1191    				call fs_write_sector	
005AA9 D8                  B  1192    				ret c
005AAA AF                  B  1193    				xor a							005AAB C9                  B  1194    				ret
                           B  1195    
                           B  1196    
005AAC 3EC8                B  1197    fs_mem_error	ld a,0c8h						005AAE C1                  B  1198    fs_flerr		pop bc
005AAF B7                  B  1199    				or a							005AB0 C9                  B  1200    				ret			
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
005AB1                     B  1204    fs_erase_file_command
                           B  1205    
                           B  1206    
005AB1 CD 8D 5D 00         B  1207    				call fs_find_filename			005AB5 D8                  B  1208    				ret c
005AB6 C0                  B  1209    				ret nz
                           B  1210    				
005AB7 DDCB0B66            B  1211    				bit 4,(ix+0bh)					005ABB 28 04               B  1212    				jr z,okdelf
005ABD 3EC6                B  1213    				ld a,0c6h						005ABF B7                  B  1214    				or a
005AC0 C9                  B  1215    				ret
                           B  1216    				
005AC1 DDE5                B  1217    okdelf			push ix
005AC3 E1                  B  1218    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005AC4 C3 AD 58 00         B  1219    				jp fs_delco						                           B  1220    					
                           B  1221    
                           B  1222    ;----------------------------------------------
                           B  1223    
                           B  1224    
005AC8                     B  1225    fs_rename_command
                           B  1226    
005AC8 CD 8D 5D 00         B  1227    				call fs_find_filename			005ACC D8                  B  1228    				ret c							005ACD FEC2                B  1229    				cp 0c2h							005ACF 28 04               B  1230    				jr z,fs_nfnok					005AD1 3EC9                B  1231    				ld a,0c9h						005AD3 B7                  B  1232    				or a
005AD4 C9                  B  1233    				ret
                           B  1234    			
005AD5 21 B5 60 00         B  1235    fs_nfnok		ld hl,fs_sought_filename		005AD9 11 CD 60 00         B  1236    				ld de,fs_filename_buffer
005ADD 010B0000            B  1237    				ld bc,11
005AE1 EDB0                B  1238    				ldir
005AE3 21 C1 60 00         B  1239    				ld hl,fs_alt_filename			005AE7 11 B5 60 00         B  1240    				ld de,fs_sought_filename
005AEB 010B0000            B  1241    				ld bc,11
005AEF EDB0                B  1242    				ldir
005AF1 CD 8D 5D 00         B  1243    				call fs_find_filename			005AF5 D8                  B  1244    				ret c
005AF6 FEC2                B  1245    				cp 0c2h
005AF8 C8                  B  1246    				ret z							                           B  1247    				
005AF9 DDE5                B  1248    				push ix
005AFB D1                  B  1249    				pop de
005AFC 21 CD 60 00         B  1250    				ld hl,fs_filename_buffer	 	005B00 010B0000            B  1251    				ld bc,11
005B04 EDB0                B  1252    				ldir							005B06 CD 26 60 00         B  1253    				call fs_write_sector			                           B  1254    				
005B0A AF                  B  1255    fs_rndone		xor a
005B0B C9                  B  1256    				ret
                           B  1257    				
                           B  1258    
                           B  1259    ;----------------------------------------------
                           B  1260    
                           B  1261    
005B0C                     B  1262    fs_goto_first_dir_entry
                           B  1263    
005B0C CD 02 1C 00         B  1264    				call fs_get_dir_cluster
005B10 ED53 04 61 00       B  1265    				ld (fs_dir_entry_cluster),de
005B15 AF                  B  1266    				xor a
005B16 32 0A 61 00         B  1267    				ld (fs_dir_entry_sector),a		005B1A 11000000            B  1268    				ld de,0
005B1E ED53 07 61 00       B  1269    				ld (fs_dir_entry_line_offset),d
                           B  1270    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B  1271    
                           B  1272    
005B23                     B  1273    fs_get_dir_entry
                           B  1274    
                           B  1275    ; No input parameters.
                           B  1276    ;
                           B  1277    ; Returns HL    = Location of null terminated f
                           B  1278    ;         IX:IY = Length of file (if applicable
                           B  1279    ;         B     = File flag (1 = directory, 0 =
                           B  1280    ;         A     = Error code
                           B  1281    ;         Carry = Set if hardware error encount
                           B  1282    
                           B  1283    
005B23 3A 0A 61 00         B  1284    				ld a,(fs_dir_entry_sector)		005B27 4F                  B  1285    				ld c,a
005B28 2A 04 61 00         B  1286    				ld hl,(fs_dir_entry_cluster)	005B2C CD 7C 5F 00         B  1287    				call cluster_and_offset_to_lba
                           B  1288    			
005B30 7C                  B  1289    				ld a,h							005B31 B5                  B  1290    				or l							005B32 20 09               B  1291    				jr nz,nr_read					005B34 2A A8 60 00         B  1292    				ld hl,(fs_root_dir_position)	005B38 79                  B  1293    				ld a,c
005B39 CD C2 5F 00         B  1294    				call set_absolute_lba
                           B  1295    				
005B3D CD FD 5F 00         B  1296    nr_read			call fs_read_sector				005B41 D8                  B  1297    				ret c							                           B  1298    				
005B42 ED5B 07 61 00       B  1299    				ld de,(fs_dir_entry_line_offset
005B47 DD210008 00         B  1300    dscan_int_loop	ld ix,sector_buffer
005B4C DD19                B  1301    				add ix,de
005B4E DD7E00              B  1302    ds_int_loop		ld a,(ix)
005B51 B7                  B  1303    				or a							005B52 28 0E               B  1304    				jr z,fs_dir_entry_free		
005B54 FEE5                B  1305    				cp 0e5h							005B56 28 0A               B  1306    				jr z,fs_dir_entry_free	
005B58 FE05                B  1307    				cp 05h							005B5A 28 06               B  1308    				jr z,fs_dir_entry_free	
005B5C DDCB0B5E            B  1309    				bit 3,(ix+0bh)					005B60 28 0D               B  1310    				jr z,fs_dir_entry_in_use		                           B  1311    
005B62                     B  1312    fs_dir_entry_free
                           B  1313    
005B62 EB                  B  1314    				ex de,hl
005B63 11200000            B  1315    				ld de,32
005B67 19                  B  1316    				add hl,de
005B68 EB                  B  1317    				ex de,hl
005B69 CB4A                B  1318    				bit 1,d
005B6B 28 DA               B  1319    				jr z,dscan_int_loop
005B6D 18 54               B  1320    				jr dscan_new_sect
                           B  1321    
005B6F                     B  1322    fs_dir_entry_in_use
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B  1323    				
005B6F ED53 07 61 00       B  1324    				ld (fs_dir_entry_line_offset),d
005B74 DDE5                B  1325    				push ix
005B76 E1                  B  1326    				pop hl
005B77 CD 28 12 00         B  1327    				call os_clear_output_line
005B7B 0608                B  1328    				ld b,8							005B7D 11 A9 6E 00         B  1329    				ld de,output_line
005B81 7E                  B  1330    dcopyn			ld a,(hl)
005B82 FE20                B  1331    				cp ' '							005B84 28 02               B  1332    				jr z,digchar
005B86 12                  B  1333    				ld (de),a
005B87 13                  B  1334    				inc de
005B88 23                  B  1335    digchar			inc hl
005B89 10 F6               B  1336    				djnz dcopyn
005B8B 7E                  B  1337    				ld a,(hl)						005B8C FE20                B  1338    				cp ' '							005B8E 28 0A               B  1339    				jr z,dirnoex
005B90 3E2E                B  1340    				ld a,'.'						005B92 12                  B  1341    				ld (de),a
005B93 13                  B  1342    				inc de	
005B94 01030000            B  1343    				ld bc,3							005B98 EDB0                B  1344    				ldir
005B9A AF                  B  1345    dirnoex			xor a 
005B9B 12                  B  1346    				ld (de),a						                           B  1347    				
005B9C 47                  B  1348    				ld b,a
005B9D DDCB0B66            B  1349    				bit 4,(ix+0bh)					005BA1 28 01               B  1350    				jr z,fs_fniaf		
005BA3 04                  B  1351    				inc b							005BA4 DD171C              B  1352    fs_fniaf		ld de,(ix+01ch)					005BA7 DD4E1F              B  1353    				ld c,(ix+01fh)
005BAA 21 A9 6E 00         B  1354    				ld hl,output_line				005BAE AF                  B  1355    				xor a
005BAF C9                  B  1356    				ret
                           B  1357    
                           B  1358    
                           B  1359    
                           B  1360    
005BB0                     B  1361    fs_goto_next_dir_entry
                           B  1362    
005BB0 11200000            B  1363    				ld de,32
005BB4 2A 07 61 00         B  1364    				ld hl,(fs_dir_entry_line_offset
005BB8 19                  B  1365    				add hl,de
005BB9 22 07 61 00         B  1366    				ld (fs_dir_entry_line_offset),h
005BBD CB4C                B  1367    				bit 1,h
005BBF CA 23 5B 00         B  1368    				jp z,fs_get_dir_entry
                           B  1369    
005BC3 21000000            B  1370    dscan_new_sect	ld hl,0				
005BC7 22 07 61 00         B  1371    				ld (fs_dir_entry_line_offset),h
                           B  1372    			
005BCB 21 0A 61 00         B  1373    				ld hl,fs_dir_entry_sector
005BCF 34                  B  1374    				inc (hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B  1375    			
005BD0 ED5B 04 61 00       B  1376    				ld de,(fs_dir_entry_cluster)
005BD5 7A                  B  1377    				ld a,d
005BD6 B3                  B  1378    				or e							005BD7 20 0B               B  1379    				jr nz,nonroot2
005BD9 3A AE 60 00         B  1380    				ld a,(fs_root_dir_sectors)
005BDD BE                  B  1381    				cp (hl)
005BDE 28 23               B  1382    				jr z,endofdir			
005BE0 C3 23 5B 00         B  1383    				jp fs_get_dir_entry
                           B  1384    												005BE4 3A 9E 60 00         B  1385    nonroot2		ld a,(fs_cluster_size)		
005BE8 BE                  B  1386    				cp (hl)							005BE9 C2 23 5B 00         B  1387    				jp nz,fs_get_dir_entry
005BED 3600                B  1388    				ld (hl),0						005BEF 2A 04 61 00         B  1389    				ld hl,(fs_dir_entry_cluster)
005BF3 CD A5 5E 00         B  1390    				call get_fat_entry_for_cluster
005BF7 22 04 61 00         B  1391    				ld (fs_dir_entry_cluster),hl
005BFB CD 44 5C 00         B  1392    				call fs_compare_hl_fff8			005BFF DA 23 5B 00         B  1393    				jp c,fs_get_dir_entry
                           B  1394    	
005C03 3ED2                B  1395    endofdir		ld a,0d2h
005C05 B7                  B  1396    				or a							005C06 C9                  B  1397    				ret	
                           B  1398    				
                           B  1399    ;----------------------------------------------
                           B  1400    
005C07                     B  1401    fs_get_volume_label
                           B  1402    
                           B  1403    
                           B  1404    ; On return HL = volume label
                           B  1405    
                           B  1406    
005C07 2A A8 60 00         B  1407    				ld hl,(fs_root_dir_position)
005C0B 0E00                B  1408    				ld c,0
005C0D AF                  B  1409    gvl_nrsec		xor a
005C0E CD D3 5F 00         B  1410    				call set_abs_lba_and_read_secto
005C12 D8                  B  1411    				ret c
005C13 0610                B  1412    				ld b,16							005C15 DD210008 00         B  1413    				ld ix,sector_buffer
005C1A DD7E0B              B  1414    find_vl			ld a,(ix+0bh)
005C1D FE08                B  1415    				cp 08h
005C1F 28 1A               B  1416    				jr z,got_label
005C21 ED3220              B  1417    				lea ix,ix+32					005C24 10 F4               B  1418    				djnz find_vl					005C26 23                  B  1419    				inc hl
005C27 0C                  B  1420    				inc c
005C28 3A AE 60 00         B  1421    				ld a,(fs_root_dir_sectors)		005C2C B9                  B  1422    				cp c							005C2D 20 DE               B  1423    				jr nz,gvl_nrsec
                           B  1424    			
005C2F CD E5 54 00         B  1425    				call fs_read_partition_bootsect
005C33 D8                  B  1426    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005C34 B7                  B  1427    				or a
005C35 C0                  B  1428    				ret nz
005C36 DD212B08 00         B  1429    				ld ix,sector_buffer+02bh
                           B  1430    				
005C3B DD360B00            B  1431    got_label		ld (ix+0bh),0					005C3F DDE5                B  1432    				push ix
005C41 E1                  B  1433    				pop hl
005C42 AF                  B  1434    				xor a
005C43 C9                  B  1435    				ret
                           B  1436    				
                           B  1437    				
                           B  1438    ;----------------------------------------------
                           B  1439    ; Internal subroutines
                           B  1440    ;----------------------------------------------
                           B  1441    
005C44                     B  1442    fs_compare_hl_fff8
                           B  1443    
                           B  1444    ;INPUT HL = value to compare with fff8
                           B  1445    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1446    	
                           B  1447    	
005C44 E5                  B  1448    				push hl
005C45 D5                  B  1449    				push de
005C46 11F8FF00            B  1450    				ld de,0fff8h			
005C4A B7                  B  1451    				or a							005C4B 52ED52              B  1452    				sbc.s hl,de						005C4E D1                  B  1453    				pop de
005C4F E1                  B  1454    				pop hl
005C50 C9                  B  1455    				ret
                           B  1456    
                           B  1457    ;----------------------------------------------
                           B  1458    
                           B  1459    
005C51                     B  1460    fs_find_free_cluster
                           B  1461    	
005C51 DD210000 00         B  1462    				ld ix,0							005C56 ED5B A2 60 00       B  1463    				ld de,(fs_fat1_position)		005C5B AF                  B  1464    				xor a				
005C5C 32 F7 60 00         B  1465    fs_ffcl2		ld (fs_working_sector),a	
005C60 D5                  B  1466    				push de
005C61 E1                  B  1467    				pop hl
005C62 3A F7 60 00         B  1468    				ld a,(fs_working_sector)
005C66 CD D3 5F 00         B  1469    				call set_abs_lba_and_read_secto
005C6A D8                  B  1470    				ret c
005C6B 21000800            B  1471    				ld hl,sector_buffer
005C6F 0600                B  1472    				ld b,0
005C71 7E                  B  1473    fs_ffcl1		ld a,(hl)						005C72 23                  B  1474    				inc hl
005C73 B6                  B  1475    				or (hl)
005C74 23                  B  1476    				inc hl
005C75 28 14               B  1477    				jr z,fs_gotfc
005C77 DD23                B  1478    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005C79 10 F6               B  1479    				djnz fs_ffcl1
                           B  1480    				
005C7B 2A AF 60 00         B  1481    				ld hl,(fs_sectors_per_fat)
005C7F 3A F7 60 00         B  1482    				ld a,(fs_working_sector)		005C83 3C                  B  1483    				inc a				
005C84 BD                  B  1484    				cp l		
005C85 20 D5               B  1485    				jr nz,fs_ffcl2					005C87 3EC1                B  1486    fs_dfull		ld a,c1h						005C89 B7                  B  1487    				or a							005C8A C9                  B  1488    				ret
                           B  1489    			
005C8B DDE5                B  1490    fs_gotfc		push ix							005C8D E1                  B  1491    				pop hl							005C8E 2B                  B  1492    				dec hl							005C8F 2B                  B  1493    				dec hl							005C90 ED5B B2 60 00       B  1494    				ld de,(fs_max_data_clusters)
005C95 AF                  B  1495    				xor a
005C96 52ED52              B  1496    				sbc.s hl,de						005C99 30 EC               B  1497    				jr nc,fs_dfull
                           B  1498    			
005C9B DD22 FB 60 00       B  1499    				ld (fs_free_cluster),ix
005CA0 AF                  B  1500    				xor a
005CA1 C9                  B  1501    				ret
                           B  1502    	
                           B  1503    	
                           B  1504    ;----------------------------------------------
                           B  1505    	
                           B  1506    	
005CA2                     B  1507    fs_find_free_dir_entry
                           B  1508    
                           B  1509    
                           B  1510    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1511    
                           B  1512    			
005CA2 CD 02 1C 00         B  1513    				call fs_get_dir_cluster			005CA6 EB                  B  1514    				ex de,hl
005CA7 22 EB 60 00         B  1515    ffenxtclu		ld (fs_file_working_cluster),hl
005CAB AF                  B  1516    				xor a
005CAC 32 F7 60 00         B  1517    				ld (fs_working_sector),a
                           B  1518    			
005CB0 2A A8 60 00         B  1519    ffenxtsec		ld hl,(fs_root_dir_position)	005CB4 3A F7 60 00         B  1520    				ld a,(fs_working_sector)
005CB8 CD C2 5F 00         B  1521    				call set_absolute_lba
                           B  1522    				
005CBC CD 02 1C 00         B  1523    				call fs_get_dir_cluster			005CC0 7A                  B  1524    				ld a,d
005CC1 B3                  B  1525    				or e
005CC2 28 0C               B  1526    				jr z,at_rootd
005CC4 2A EB 60 00         B  1527    				ld hl,(fs_file_working_cluster)
005CC8 3A F7 60 00         B  1528    				ld a,(fs_working_sector)
005CCC CD 7C 5F 00         B  1529    				call cluster_and_offset_to_lba
                           B  1530    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005CD0 CD FD 5F 00         B  1531    at_rootd		call fs_read_sector
005CD4 D8                  B  1532    				ret c
005CD5 0610                B  1533    				ld b,16							005CD7 11200000            B  1534    				ld de,32
005CDB DD210008 00         B  1535    				ld ix,sector_buffer
005CE0 DD7E00              B  1536    scdirfe			ld a,(ix)						005CE3 B7                  B  1537    				or a
005CE4 28 65               B  1538    				jr z,got_fde
005CE6 FEE5                B  1539    				cp 0e5h
005CE8 28 61               B  1540    				jr z,got_fde
005CEA DD19                B  1541    				add ix,de						005CEC 10 F2               B  1542    				djnz scdirfe					                           B  1543    				
005CEE 21 F7 60 00         B  1544    				ld hl,fs_working_sector			005CF2 34                  B  1545    				inc (hl)
                           B  1546    				
005CF3 CD 02 1C 00         B  1547    				call fs_get_dir_cluster			005CF7 7A                  B  1548    				ld a,d
005CF8 B3                  B  1549    				or e
005CF9 20 0B               B  1550    				jr nz,ffenotroo
005CFB 3A AE 60 00         B  1551    				ld a,(fs_root_dir_sectors)		005CFF BE                  B  1552    				cp (hl)							005D00 20 AE               B  1553    				jr nz,ffenxtsec
005D02 3EC3                B  1554    fenotfnd		ld a,0c3h						005D04 B7                  B  1555    				or a
005D05 C9                  B  1556    				ret
                           B  1557    			
005D06 3A 9E 60 00         B  1558    ffenotroo		ld a,(fs_cluster_size)			005D0A BE                  B  1559    				cp (hl)
005D0B 20 A3               B  1560    				jr nz,ffenxtsec
005D0D 2A EB 60 00         B  1561    				ld hl,(fs_file_working_cluster)
005D11 CD A5 5E 00         B  1562    				call get_fat_entry_for_cluster	005D15 D8                  B  1563    				ret c
005D16 CD 44 5C 00         B  1564    				call fs_compare_hl_fff8			005D1A 38 8B               B  1565    				jr c,ffenxtclu
                           B  1566    			
005D1C CD 51 5C 00         B  1567    				call fs_find_free_cluster		005D20 D8                  B  1568    				ret c							005D21 C0                  B  1569    				ret nz							005D22 ED5B FB 60 00       B  1570    				ld de,(fs_free_cluster)
005D27 2A EB 60 00         B  1571    				ld hl,(fs_file_working_cluster)
005D2B CD D1 5E 00         B  1572    				call update_fat_entry_for_clust
005D2F D8                  B  1573    				ret c
005D30 EB                  B  1574    				ex de,hl						005D31 11FFFF00            B  1575    				ld de,0ffffh
005D35 CD D1 5E 00         B  1576    				call update_fat_entry_for_clust
005D39 D8                  B  1577    				ret c
                           B  1578    			
005D3A 2A FB 60 00         B  1579    				ld hl,(fs_free_cluster)			005D3E CD 4D 5D 00         B  1580    				call fs_clear_cluster			005D42 D8                  B  1581    				ret c
005D43 2A FB 60 00         B  1582    				ld hl,(fs_free_cluster)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005D47 C3 A7 5C 00         B  1583    				jp ffenxtclu					                           B  1584    			
005D4B AF                  B  1585    got_fde			xor a
005D4C C9                  B  1586    				ret
                           B  1587    					
                           B  1588    
                           B  1589    ;----------------------------------------------
                           B  1590    
005D4D                     B  1591    fs_clear_cluster
                           B  1592    
                           B  1593    ;INPUT HL = cluster to clear
                           B  1594    
005D4D 22 F8 60 00         B  1595    				ld (fs_working_cluster),hl
                           B  1596    			
005D51 CD 79 5D 00         B  1597    				call fs_clear_sector_buffer
                           B  1598    					
005D55 AF                  B  1599    				xor a				
005D56 32 F7 60 00         B  1600    				ld (fs_working_sector),a		005D5A 3A F7 60 00         B  1601    wipeclulp		ld a,(fs_working_sector)		005D5E 2A F8 60 00         B  1602    				ld hl,(fs_working_cluster)		005D62 CD 7C 5F 00         B  1603    				call cluster_and_offset_to_lba	005D66 CD 26 60 00         B  1604    				call fs_write_sector
005D6A D8                  B  1605    				ret c
005D6B 21 F7 60 00         B  1606    				ld hl,fs_working_sector
005D6F 34                  B  1607    				inc (hl)
005D70 3A 9E 60 00         B  1608    				ld a,(fs_cluster_size)
005D74 BE                  B  1609    				cp (hl)
005D75 20 E3               B  1610    				jr nz,wipeclulp
005D77 AF                  B  1611    				xor a
005D78 C9                  B  1612    				ret
                           B  1613    			
                           B  1614    			
005D79                     B  1615    fs_clear_sector_buffer
                           B  1616    			
005D79 E5                  B  1617    				push hl
005D7A D5                  B  1618    				push de
005D7B C5                  B  1619    				push bc
005D7C 21000800            B  1620    				ld hl,sector_buffer			
005D80 01000200            B  1621    				ld bc,512				
005D84 AF                  B  1622    				xor a				
005D85 CD 28 17 00         B  1623    				call os_bchl_memfill	
005D89 C1                  B  1624    				pop bc
005D8A D1                  B  1625    				pop de
005D8B E1                  B  1626    				pop hl
005D8C C9                  B  1627    				ret
                           B  1628    				
                           B  1629    
                           B  1630    	
                           B  1631    ;----------------------------------------------
                           B  1632    	
005D8D                     B  1633    fs_find_filename
                           B  1634    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005D8D AF                  B  1635    				xor a
                           B  1636    
005D8E                     B  1637    fs_search	
                           B  1638    				
005D8E 32 12 61 00         B  1639    				ld (fs_search_type),a
                           B  1640    			
                           B  1641    ; OUTPUT IX start of 32 byte dir entry
                           B  1642    			
005D92 CD 02 1C 00         B  1643    				call fs_get_dir_cluster
005D96 ED53 EB 60 00       B  1644    ffnnxtclu		ld (fs_file_working_cluster),de
005D9B AF                  B  1645    				xor a
005D9C 32 F7 60 00         B  1646    				ld (fs_working_sector),a
                           B  1647    			
005DA0 2A A8 60 00         B  1648    ffnnxtsec		ld hl,(fs_root_dir_position)	005DA4 3A F7 60 00         B  1649    				ld a,(fs_working_sector)
005DA8 CD C2 5F 00         B  1650    				call set_absolute_lba
                           B  1651    				
005DAC CD 02 1C 00         B  1652    				call fs_get_dir_cluster			005DB0 7A                  B  1653    				ld a,d
005DB1 B3                  B  1654    				or e
005DB2 28 0C               B  1655    				jr z,at_rootd2
005DB4 2A EB 60 00         B  1656    				ld hl,(fs_file_working_cluster)
005DB8 3A F7 60 00         B  1657    				ld a,(fs_working_sector)
005DBC CD 7C 5F 00         B  1658    				call cluster_and_offset_to_lba	                           B  1659    				
005DC0 CD FD 5F 00         B  1660    at_rootd2		call fs_read_sector
005DC4 D8                  B  1661    				ret c
005DC5 0E10                B  1662    				ld c,16							005DC7 DD210008 00         B  1663    				ld ix,sector_buffer
005DCC DDE5                B  1664    ndirentr		push ix
005DCE D1                  B  1665    				pop de
005DCF 3A 12 61 00         B  1666    				ld a,(fs_search_type)
005DD3 B7                  B  1667    				or a
005DD4 28 1E               B  1668    				jr z,fs_ststr
                           B  1669    			
005DD6 DD7E00              B  1670    				ld a,(ix)						005DD9 FE80                B  1671    				cp 080h							005DDB 30 35               B  1672    				jr nc,fnnotsame
005DDD FE20                B  1673    				cp 020h
005DDF 38 31               B  1674    				jr c,fnnotsame
005DE1 ED5B 0F 61 00       B  1675    				ld de,(fs_stash_dir_block)		005DE6 DD7E1A              B  1676    				ld a,(ix+01ah)
005DE9 BB                  B  1677    				cp e
005DEA 20 26               B  1678    				jr nz,fnnotsame
005DEC DD7E1B              B  1679    				ld a,(ix+01bh)
005DEF BA                  B  1680    				cp d
005DF0 28 1E               B  1681    				jr z,fs_found
005DF2 18 1E               B  1682    				jr fnnotsame
                           B  1683    				
005DF4 FD21 B5 60 00       B  1684    fs_ststr		ld iy,fs_sought_filename		005DF9 060B                B  1685    				ld b,11							005DFB 1A                  B  1686    cmpfnlp			ld a,(de)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005DFC CD 1C 14 00         B  1687    				call os_uppercasify				005E00 6F                  B  1688    				ld l,a
005E01 FD7E00              B  1689    				ld a,(iy)
005E04 CD 1C 14 00         B  1690    				call os_uppercasify
005E08 BD                  B  1691    				cp l				
005E09 20 07               B  1692    				jr nz,fnnotsame
005E0B FD23                B  1693    				inc iy
005E0D 13                  B  1694    				inc de
005E0E 10 EB               B  1695    				djnz cmpfnlp
005E10 AF                  B  1696    fs_found		xor a							005E11 C9                  B  1697    				ret
                           B  1698    			
005E12 11200000            B  1699    fnnotsame		ld de,32						005E16 DD19                B  1700    				add ix,de
005E18 0D                  B  1701    				dec c
005E19 20 B1               B  1702    				jr nz,ndirentr					                           B  1703    				
005E1B 21 F7 60 00         B  1704    				ld hl,fs_working_sector			005E1F 34                  B  1705    				inc (hl)
                           B  1706    				
005E20 CD 02 1C 00         B  1707    				call fs_get_dir_cluster			005E24 7A                  B  1708    				ld a,d
005E25 B3                  B  1709    				or e
005E26 20 0D               B  1710    				jr nz,notrootdir
005E28 3A AE 60 00         B  1711    				ld a,(fs_root_dir_sectors)		005E2C BE                  B  1712    				cp (hl)							005E2D C2 A0 5D 00         B  1713    				jp nz,ffnnxtsec
005E31 3EC2                B  1714    fnnotfnd		ld a,0c2h						005E33 B7                  B  1715    				or a
005E34 C9                  B  1716    				ret
                           B  1717    			
005E35                     B  1718    notrootdir
                           B  1719    				
005E35 3A 9E 60 00         B  1720    				ld a,(fs_cluster_size)			005E39 BE                  B  1721    				cp (hl)
005E3A C2 A0 5D 00         B  1722    				jp nz,ffnnxtsec
                           B  1723    				
005E3E 2A EB 60 00         B  1724    				ld hl,(fs_file_working_cluster)
005E42 CD A5 5E 00         B  1725    				call get_fat_entry_for_cluster
005E46 D8                  B  1726    				ret c
005E47 CD 44 5C 00         B  1727    				call fs_compare_hl_fff8			005E4B 30 E4               B  1728    				jr nc,fnnotfnd					005E4D EB                  B  1729    				ex de,hl						005E4E C3 96 5D 00         B  1730    				jp ffnnxtclu					                           B  1731    				
                           B  1732    
                           B  1733    ;----------------------------------------------
                           B  1734    
005E52                     B  1735    fs_hl_to_alt_filename
                           B  1736    
005E52 11 C1 60 00         B  1737    				ld de,fs_alt_filename
005E56 18 04               B  1738    				jr hltofngo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B  1739    
                           B  1740    
005E58                     B  1741    fs_hl_to_filename
                           B  1742    
                           B  1743    ;INPUT: HL = address of filename (null / space 
                           B  1744    ;OUTPUT HL = address of first character after f
                           B  1745    ;        C = number of characters in filename
                           B  1746    
005E58 11 B5 60 00         B  1747    				ld de,fs_sought_filename
005E5C CD 6F 5F 00         B  1748    hltofngo		call fs_clear_filename			005E60 D5                  B  1749    				push de			
005E61 DDE1                B  1750    				pop ix							                           B  1751    				
005E63 0E00                B  1752    				ld c,0
005E65 0608                B  1753    				ld b,8
005E67 7E                  B  1754    csfnlp2			ld a,(hl)						005E68 B7                  B  1755    				or a
005E69 C8                  B  1756    				ret z							005E6A FE20                B  1757    				cp 32
005E6C C8                  B  1758    				ret z							005E6D FE2F                B  1759    				cp 02fh
005E6F C8                  B  1760    				ret z							005E70 FE2E                B  1761    				cp '.'
005E72 28 1A               B  1762    				jr z,dofn_ext					005E74 CD 1C 14 00         B  1763    				call os_uppercasify
005E78 12                  B  1764    				ld (de),a
005E79 13                  B  1765    				inc de
005E7A 23                  B  1766    				inc hl
005E7B 0C                  B  1767    				inc c							005E7C 10 E9               B  1768    				djnz csfnlp2					005E7E 7E                  B  1769    find_ext		ld a,(hl)
005E7F FE2E                B  1770    				cp '.'							005E81 28 0B               B  1771    				jr z,dofn_ext	
005E83 FE20                B  1772    				cp ' '							005E85 C8                  B  1773    				ret z
005E86 FE2F                B  1774    				cp 02fh
005E88 C8                  B  1775    				ret z
005E89 B7                  B  1776    				or a
005E8A C8                  B  1777    				ret z
005E8B 23                  B  1778    				inc hl
005E8C 18 F0               B  1779    				jr find_ext
                           B  1780    				
005E8E 23                  B  1781    dofn_ext		inc hl							005E8F 0603                B  1782    				ld b,3				
005E91 7E                  B  1783    fnextlp			ld a,(hl)						005E92 B7                  B  1784    				or a
005E93 C8                  B  1785    				ret z							005E94 FE20                B  1786    				cp 32
005E96 C8                  B  1787    				ret z
005E97 CD 1C 14 00         B  1788    				call os_uppercasify
005E9B DD7708              B  1789    				ld (ix+8),a
005E9E DD23                B  1790    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005EA0 23                  B  1791    				inc hl
005EA1 0C                  B  1792    				inc c
005EA2 10 ED               B  1793    				djnz fnextlp
005EA4 C9                  B  1794    				ret
                           B  1795    				
                           B  1796    ;----------------------------------------------
                           B  1797    
                           B  1798    
005EA5                     B  1799    get_fat_entry_for_cluster
                           B  1800    
                           B  1801    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1802    
005EA5 C5                  B  1803    				push bc
005EA6 D5                  B  1804    				push de
005EA7 01000000            B  1805    				ld bc,0
005EAB 4D                  B  1806    				ld c,l
005EAC 7C                  B  1807    				ld a,h
005EAD 2A A2 60 00         B  1808    				ld hl,(fs_fat1_position)
005EB1 CD D3 5F 00         B  1809    				call set_abs_lba_and_read_secto
005EB5 38 17               B  1810    				jr c,hwerr
005EB7 DDE5                B  1811    				push ix
005EB9 DD210008 00         B  1812    				ld ix,sector_buffer
005EBE DD09                B  1813    				add ix,bc
005EC0 DD09                B  1814    				add ix,bc
005EC2 21000000            B  1815    				ld hl,0
005EC6 DD6E00              B  1816    				ld l,(ix)
005EC9 DD6601              B  1817    				ld h,(ix+1)
005ECC DDE1                B  1818    				pop ix
005ECE D1                  B  1819    hwerr			pop de
005ECF C1                  B  1820    				pop bc
005ED0 C9                  B  1821    				ret
                           B  1822    
                           B  1823    
                           B  1824    ;----------------------------------------------
                           B  1825    
                           B  1826    
005ED1                     B  1827    update_fat_entry_for_cluster
                           B  1828    
                           B  1829    ; INPUT: HL = cluster in question
                           B  1830    ;        DE = new value to put in FAT tables
                           B  1831    			
005ED1 C5                  B  1832    				push bc
005ED2 E5                  B  1833    				push hl
005ED3 01000000            B  1834    				ld bc,0
005ED7 4D                  B  1835    				ld c,l
005ED8 7C                  B  1836    				ld a,h
005ED9 2A A2 60 00         B  1837    				ld hl,(fs_fat1_position)		005EDD CD F1 5E 00         B  1838    				call fat_upd
005EE1 38 0B               B  1839    				jr c,fup_end
                           B  1840    			
005EE3 E1                  B  1841    				pop hl
005EE4 E5                  B  1842    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005EE5 7C                  B  1843    				ld a,h
005EE6 2A A5 60 00         B  1844    				ld hl,(fs_fat2_position)		005EEA CD F1 5E 00         B  1845    				call fat_upd
005EEE E1                  B  1846    fup_end			pop hl
005EEF C1                  B  1847    				pop bc
005EF0 C9                  B  1848    				ret
                           B  1849    			
                           B  1850    			
005EF1 CD D3 5F 00         B  1851    fat_upd			call set_abs_lba_and_read_secto
005EF5 38 0D               B  1852    				jr c,ufehwerr
005EF7 21000800            B  1853    				ld hl,sector_buffer
005EFB 09                  B  1854    				add hl,bc
005EFC 09                  B  1855    				add hl,bc
005EFD 73                  B  1856    				ld (hl),e
005EFE 23                  B  1857    				inc hl
005EFF 72                  B  1858    				ld (hl),d
005F00 CD 26 60 00         B  1859    				call fs_write_sector
005F04 C9                  B  1860    ufehwerr		ret
                           B  1861    				
                           B  1862    	
                           B  1863    ;----------------------------------------------
                           B  1864    
005F05                     B  1865    transfer_length_countdown
                           B  1866    
005F05 E5                  B  1867    				push hl							005F06 C5                  B  1868    				push bc
                           B  1869    			
005F07 0604                B  1870    				ld b,4
005F09 21 D9 60 00         B  1871    				ld hl,fs_file_pointer			005F0D 34                  B  1872    fpinclp			inc (hl)
005F0E 20 03               B  1873    				jr nz,fs_fpino
005F10 23                  B  1874    				inc hl
005F11 10 FA               B  1875    				djnz fpinclp
                           B  1876    				
005F13 2A E5 60 00         B  1877    fs_fpino		ld hl,(fs_file_transfer_length)
005F17 2B                  B  1878    				dec hl
005F18 22 E5 60 00         B  1879    				ld (fs_file_transfer_length),hl
005F1C 01000000            B  1880    				ld bc,0
005F20 B7                  B  1881    				or a
005F21 ED4A                B  1882    				adc hl,bc						                           B  1883    				
005F23 C1                  B  1884    				pop bc
005F24 E1                  B  1885    				pop hl
005F25 C9                  B  1886    				ret
                           B  1887    
                           B  1888    ;----------------------------------------------
                           B  1889    
005F26                     B  1890    fs_get_current_dir_name
                           B  1891    
                           B  1892    ;returns current dir name - location at HL
                           B  1893    
005F26 CD 02 1C 00         B  1894    				call fs_get_dir_cluster			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
005F2A 7A                  B  1895    				ld a,d
005F2B B3                  B  1896    				or e
005F2C 20 10               B  1897    				jr nz,fs_dnnr
005F2E 21 57 6C 00         B  1898    				ld hl,vol_txt+1					005F32 3A 52 6C 00         B  1899    				ld a,(current_volume)
005F36 C630                B  1900    				add a,030h
005F38 32 5A 6C 00         B  1901    				ld (vol_txt+4),a
005F3C AF                  B  1902    				xor a
005F3D C9                  B  1903    				ret
                           B  1904    					
005F3E ED53 0F 61 00       B  1905    fs_dnnr			ld (fs_stash_dir_block),de
005F43 CD 99 55 00         B  1906    				call fs_parent_dir_command		005F47 D8                  B  1907    				ret c
005F48 B7                  B  1908    				or a
005F49 C0                  B  1909    				ret nz
005F4A 3E01                B  1910    				ld a,1
005F4C CD 8E 5D 00         B  1911    				call fs_search					005F50 D8                  B  1912    				ret c
005F51 C0                  B  1913    				ret nz
                           B  1914    					
005F52 DDE5                B  1915    fs_gdbn			push ix
005F54 E1                  B  1916    				pop hl
005F55 060B                B  1917    				ld b,11							005F57 7E                  B  1918    ntdirn			ld a,(hl)
005F58 FE20                B  1919    				cp ' '
005F5A 28 03               B  1920    				jr z,rdirfsp
005F5C 23                  B  1921    				inc hl
005F5D 10 F8               B  1922    rdirnsp			djnz ntdirn
                           B  1923    				
005F5F 3600                B  1924    rdirfsp			ld (hl),0
005F61 DDE5                B  1925    				push ix
005F63 ED5B 0F 61 00       B  1926    				ld de,(fs_stash_dir_block)
005F68 CD 0E 1C 00         B  1927    				call fs_update_dir_cluster		005F6C E1                  B  1928    				pop hl	
005F6D AF                  B  1929    				xor a							005F6E C9                  B  1930    				ret
                           B  1931    
                           B  1932    			
                           B  1933    ;----------------------------------------------
                           B  1934    
005F6F                     B  1935    fs_clear_filename
                           B  1936    
005F6F D5                  B  1937    				push de							005F70 C5                  B  1938    				push bc
005F71 060C                B  1939    				ld b,12
005F73 3E20                B  1940    				ld a,' '
005F75 12                  B  1941    clrfnlp			ld (de),a
005F76 13                  B  1942    				inc de
005F77 10 FC               B  1943    				djnz clrfnlp
005F79 C1                  B  1944    				pop bc
005F7A D1                  B  1945    				pop de
005F7B C9                  B  1946    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 254


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B  1947    				
                           B  1948    ;----------------------------------------------
                           B  1949    
                           B  1950    
005F7C                     B  1951    cluster_and_offset_to_lba
                           B  1952    
                           B  1953    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1954    
005F7C C5                  B  1955    				push bc
005F7D D5                  B  1956    				push de
005F7E E5                  B  1957    				push hl
005F7F DDE5                B  1958    				push ix
                           B  1959    
005F81 2B                  B  1960    				dec hl							005F82 2B                  B  1961    				dec hl							005F83 11000000            B  1962    				ld de,0							005F87 01000000            B  1963    				ld bc,0
005F8B 5F                  B  1964    				ld e,a
005F8C 3A 9E 60 00         B  1965    				ld a,(fs_cluster_size)			005F90 CB3F                B  1966    caotllp			srl a
005F92 28 03               B  1967    				jr z,clusdone
005F94 29                  B  1968    				add hl,hl						005F95 18 F9               B  1969    				jr caotllp
                           B  1970    			
005F97 ED4B AB 60 00       B  1971    clusdone		ld bc,(fs_data_area)			005F9C 09                  B  1972    				add hl,bc						005F9D 19                  B  1973    				add hl,de						                           B  1974    				
005F9E E5                  B  1975    add_ptn_offset	push hl							005F9F CD 3C 1C 00         B  1976    				call fs_calc_volume_offset
005FA3 DD21 7E 6C 00       B  1977    				ld ix,volume_mount_list
005FA8 DD19                B  1978    				add ix,de
005FAA E1                  B  1979    				pop hl
005FAB DD0708              B  1980    				ld bc,(ix+08h)					005FAE DD7E0B              B  1981    				ld a,(ix+0bh)
005FB1 09                  B  1982    				add hl,bc
005FB2 CE00                B  1983    				adc a,0
005FB4 22 35 6E 00         B  1984    				ld (sector_lba0),hl				005FB8 32 38 6E 00         B  1985    				ld (sector_lba3),a				                           B  1986    				
005FBC DDE1                B  1987    				pop ix
005FBE E1                  B  1988    				pop hl
005FBF D1                  B  1989    				pop de
005FC0 C1                  B  1990    				pop bc
005FC1 C9                  B  1991    				ret
                           B  1992    				
                           B  1993    
                           B  1994    ;----------------------------------------------
                           B  1995    
005FC2                     B  1996    set_absolute_lba
                           B  1997    
                           B  1998    ; set A to sector offset, HL to sectors from st
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 255


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
                           B  1999    
005FC2 C5                  B  2000    				push bc							005FC3 D5                  B  2001    				push de							005FC4 E5                  B  2002    				push hl							005FC5 DDE5                B  2003    				push ix							005FC7 01000000            B  2004    				ld bc,0
005FCB 11000000            B  2005    				ld de,0
005FCF 5F                  B  2006    				ld e,a
005FD0 19                  B  2007    				add hl,de
005FD1 18 CB               B  2008    				jr add_ptn_offset		
                           B  2009    				
                           B  2010    
005FD3                     B  2011    set_abs_lba_and_read_sector
                           B  2012    
005FD3 CD C2 5F 00         B  2013    				call set_absolute_lba
005FD7 C3 FD 5F 00         B  2014    				jp fs_read_sector
                           B  2015    				
                           B  2016    ;----------------------------------------------
                           B  2017    
                           B  2018    
005FDB                     B  2019    backup_sector_lba
                           B  2020    
005FDB C5                  B  2021    				push bc
005FDC D5                  B  2022    				push de
005FDD E5                  B  2023    				push hl
005FDE 21 35 6E 00         B  2024    				ld hl,sector_lba0
005FE2 11 13 61 00         B  2025    				ld de,fs_backed_up_sector_lba0
005FE6 01040000            B  2026    lbabur			ld bc,4
005FEA EDB0                B  2027    				ldir
005FEC E1                  B  2028    				pop hl
005FED D1                  B  2029    				pop de
005FEE C1                  B  2030    				pop bc
005FEF C9                  B  2031    				ret
                           B  2032    
                           B  2033    
005FF0                     B  2034    restore_sector_lba
                           B  2035    
005FF0 C5                  B  2036    				push bc
005FF1 D5                  B  2037    				push de
005FF2 E5                  B  2038    				push hl
005FF3 21 13 61 00         B  2039    				ld hl,fs_backed_up_sector_lba0
005FF7 11 35 6E 00         B  2040    				ld de,sector_lba0
005FFB 18 E9               B  2041    				jr lbabur	
                           B  2042    					
                           B  2043    ;----------------------------------------------
                           B  2044    
005FFD                     B  2045    fs_read_sector
                           B  2046    			
005FFD C5                  B  2047    				push bc
005FFE D5                  B  2048    				push de
005FFF E5                  B  2049    				push hl
006000 DDE5                B  2050    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 256


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
006002 FDE5                B  2051    				push iy
006004 01040000            B  2052    				ld bc,04h						006008 CD 37 60 00         B  2053    				call sector_access_redirect
00600C 2A 35 6E 00         B  2054    secaccend		ld hl,(sector_lba0)
006010 22 17 61 00         B  2055    				ld (fs_sector_last_read_lba0),h
006014 3A 38 6E 00         B  2056    				ld a,(sector_lba0+3)
006018 32 1A 61 00         B  2057    				ld (fs_sector_last_read_lba0+3)
00601C FDE1                B  2058    				pop iy
00601E DDE1                B  2059    				pop ix
006020 E1                  B  2060    				pop hl
006021 D1                  B  2061    				pop de
006022 C1                  B  2062    				pop bc
006023 C8                  B  2063    				ret z							006024 37                  B  2064    				scf								006025 C9                  B  2065    				ret								                           B  2066    
                           B  2067    
006026                     B  2068    fs_write_sector	
                           B  2069    				
006026 C5                  B  2070    				push bc
006027 D5                  B  2071    				push de
006028 E5                  B  2072    				push hl
006029 DDE5                B  2073    				push ix
00602B FDE5                B  2074    				push iy
00602D 01080000            B  2075    				ld bc,08h						006031 CD 37 60 00         B  2076    				call sector_access_redirect
006035 18 D5               B  2077    				jr secaccend
                           B  2078    
                           B  2079    
                           B  2080    
006037                     B  2081    sector_access_redirect
                           B  2082    
                           B  2083    	
006037 3A 53 6C 00         B  2084    				ld a,(current_driver)			00603B CD D4 1B 00         B  2085    				call locate_driver_base			00603F EB                  B  2086    				ex de,hl
006040 09                  B  2087    				add hl,bc						006041 E9                  B  2088    				jp (hl)
                           B  2089    
                           B  2090    ;----------------------------------------------
                           B  2091    
006042                     B  2092    fs_is_same_sector_in_buffer
                           B  2093    				
006042 E5                  B  2094    				push hl
006043 D5                  B  2095    				push de
006044 2A 35 6E 00         B  2096    				ld hl,(sector_lba0)
006048 ED5B 17 61 00       B  2097    				ld de,(fs_sector_last_read_lba0
00604D AF                  B  2098    				xor a
00604E ED52                B  2099    				sbc hl,de
006050 20 0A               B  2100    				jr nz,fs_notsamsec
006052 3A 38 6E 00         B  2101    				ld a,(sector_lba0+3)
006056 6F                  B  2102    				ld l,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 257


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
006057 3A 1A 61 00         B  2103    				ld a,(fs_sector_last_read_lba0+
00605B BD                  B  2104    				cp l
00605C D1                  B  2105    fs_notsamsec	pop de
00605D E1                  B  2106    				pop hl
00605E C9                  B  2107    				ret
                           B  2108    
                           B  2109    ;----------------------------------------------
                           B  2110    	
00605F                     B  2111    bootsector_stub
                           B  2112    
00605F EB3C904D 53444F53   B  2113    				db  0EBh,03Ch,090h,04Dh,053h,04
006067 352E3000 02004000 
00606F 02000200 00F8F200   B  2114    				db  002h,000h,002h,000h,000h,0F
006077 3F00FF00 00000000 
00607F 00000000 000029C4   B  2115    				db  000h,000h,000h,000h,000h,00
006087 E636984E 4F204E41 
00608F 4D452020 20204641   B  2116    				db  04Dh,045h,020h,020h,020h,02
006097 54313620 2020C3 
                           B  2117    
                           B  2118    ;----------------------------------------------
                           B  2119    
00609E 00                  B  2120    fs_cluster_size				db 0
00609F 000000              B  2121    fs_bytes_per_cluster		dw24 0
0060A2 000000              B  2122    fs_fat1_position			dw24 0		; offse
0060A5 000000              B  2123    fs_fat2_position			dw24 0		; offse
0060A8 000000              B  2124    fs_root_dir_position		dw24 0		; offse
0060AB 000000              B  2125    fs_data_area				dw24 0		; offse
0060AE 00                  B  2126    fs_root_dir_sectors			db 0
                           B  2127    
0060AF 000000              B  2128    fs_sectors_per_fat			dw24 0
0060B2 000000              B  2129    fs_max_data_clusters		dw24 0
                           B  2130    
0060B5 00 00 00 00 00 00   B  2131    fs_sought_filename			blkb 12,0
0060BB 00 00 00 00 00 00 
0060C1 00 00 00 00 00 00   B  2132    fs_alt_filename				blkb 12,0
0060C7 00 00 00 00 00 00 
0060CD 00 00 00 00 00 00   B  2133    fs_filename_buffer			blkb 12,0
0060D3 00 00 00 00 00 00 
                           B  2134    
0060D9 00000000            B  2135    fs_file_pointer				dw 0,0		; 32 bi
0060DD 00000000            B  2136    fs_file_length				dw 0,0		; 32 bi
0060E1 00000000            B  2137    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  2138    
0060E5 000000              B  2139    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2140    
0060E8 000000              B  2141    fs_file_start_cluster		dw24 0
0060EB 000000              B  2142    fs_file_working_cluster		dw24 0
                           B  2143    
0060EE 000000              B  2144    fs_ez80_address				dw24 0
0060F1 000000              B  2145    fs_ez80_working_address		dw24 0
                           B  2146    
0060F4 000000              B  2147    fs_in_sector_offset			dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 258


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0C.asm
0060F7 00                  B  2148    fs_working_sector			db 0
                           B  2149    
0060F8 000000              B  2150    fs_working_cluster			dw24 0
0060FB 000000              B  2151    fs_free_cluster				dw24 0
0060FE 000000              B  2152    fs_new_file_cluster			dw24 0
                           B  2153    
006101 000000              B  2154    fs_fname_in_sector_addr		dw24 0
                           B  2155    
006104 000000              B  2156    fs_dir_entry_cluster		dw24 0
006107 000000              B  2157    fs_dir_entry_line_offset	dw24 0
00610A 00                  B  2158    fs_dir_entry_sector			db 0
                           B  2159    
00610B 00                  B  2160    fs_filepointer_valid		db 0
00610C 000000              B  2161    fs_sector_pos_cnt			dw24 0
                           B  2162    
00610F 000000              B  2163    fs_stash_dir_block	 		dw24 0
                           B  2164    
006112 00                  B  2165    fs_search_type				db 0
                           B  2166    
006113 00000000            B  2167    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2168    
006117 00000000            B  2169    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2170    
00611B 000000              B  2171    partition_size				dw24 0			;24
00611E 00000000            B  2172    partition_base				db 0,0,0,0		;32
                           B  2173    
                           B  2174    ;----------------------------------------------
                           B  2175    
                           A  3884    
                           A  3885    ;----------------------------------------------
                           A  3886    ; OS Data 
                           A  3887    ;----------------------------------------------
                           A  3888    
                           A  3889    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
006122                     B     9    kernal_table
                           B    10    
006122 C71900              B    11    	dw24 ext_mount_volumes			;00		
006125 6D1900              B    12    	dw24 os_get_device_info			;01		
006128 2F1800              B    13    	dw24 os_check_volume_format		;02		
00612B 5D1C00              B    14    	dw24 ext_change_volume			;03		
00612E 801900              B    15    	dw24 os_get_volume_info			;04		
006131 3A1800              B    16    	dw24 ext_format					;05		
006134 611800              B    17    	dw24 ext_make_dir				;06		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 259


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006137 6F1800              B    18    	dw24 ext_change_dir				;07		
00613A 7D1800              B    19    	dw24 os_parent_dir				;08		
00613D 831800              B    20    	dw24 os_root_dir				;09		
006140 C91800              B    21    	dw24 ext_delete_dir				;0a		
006143 C31700              B    22    	dw24 ext_find_file				;0b		
006146 DD1700              B    23    	dw24 ext_set_file_pointer		;0c		
006149 D61700              B    24    	dw24 os_set_load_length			;0d		
00614C F01700              B    25    	dw24 ext_read_bytes_from_file	;0e		
00614F 891800              B    26    	dw24 ext_erase_file				;0f		
006152 AF1800              B    27    	dw24 ext_rename_file			;10		
006155 FF1700              B    28    	dw24 ext_create_file			;11		
006158 101800              B    29    	dw24 ext_write_bytes_to_file	;12		
00615B 2B1C00              B    30    	dw24 fs_get_total_sectors		;13		
00615E 971800              B    31    	dw24 os_goto_first_dir_entry	;14		 
006161 9D1800              B    32    	dw24 os_get_dir_entry			;15		
006164 A31800              B    33    	dw24 os_goto_next_dir_entry		;16		
006167 D91800              B    34    	dw24 ext_read_sector			;17		
00616A 071900              B    35    	dw24 ext_write_sector			;18		
00616D 981C00              B    36    	dw24 ext_file_sector_list		;19		
006170 021C00              B    37    	dw24 fs_get_dir_cluster			;1a		
006173 0E1C00              B    38    	dw24 fs_update_dir_cluster		;1b		
006176 A91800              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
006179 424F00              B    41    	dw24 os_wait_key_press			;1d		
00617C 9D4F00              B    42    	dw24 os_get_key_press			;1e		
00617F EA1600              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
006182 8E1900              B    45    	dw24 ext_serial_get_header		;20		
006185 9B1900              B    46    	dw24 ext_serial_receive_file	;21		 
006188 A41900              B    47    	dw24 ext_serial_send_file		;22		 
00618B B61900              B    48    	dw24 ext_serial_tx				;23		
00618E BD1900              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
006191 0A1100              B    51    	dw24 ext_print_string			;25		
006194 FC4800              B    52    	dw24 hwsc_clear_screen			;26		
006197 CC4A00              B    53    	dw24 hwsc_wait_vrt				;27		
00619A C61500              B    54    	dw24 os_set_cursor_position		;28		
00619D FD1B00              B    55    	dw24 ext_plot_char				;29		
0061A0 301700              B    56    	dw24 ext_set_pen				;2a		
0061A3 3D1700              B    57    	dw24 ext_background_colours		;2b		
0061A6 C54900              B    58    	dw24 hwsc_draw_cursor			;2c		
0061A9 371700              B    59    	dw24 os_get_pen					;2d		
0061AC 374900              B    60    	dw24 hwsc_scroll_up				;2e		
0061AF 864800              B    61    	dw24 os_set_video_hw_regs		;2f		
0061B2 F01600              B    62    	dw24 os_get_vmode				;30			0061B5 194A00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0061B8 E61500              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0061BB 0D1D00              B    66    	dw24 ext_set_envar				;33		
0061BE CD1C00              B    67    	dw24 ext_get_envar				;34		
0061C1 671D00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 260


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0061C4 3C1600              B    70    	dw24 os_init_mouse				;36			0061C7 AE1600              B    71    	dw24 os_get_mouse_position		;37		
0061CA 851600              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
0061CD 944B00              B    74    	dw24 hwsc_time_delay			;39		
0061D0 DA1300              B    75    	dw24 ext_compare_strings		;3a		
0061D3 591200              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
0061D6 8E1200              B    77    	dw24 ext_ascii_to_hexword		;3c		
0061D9 E31200              B    78    	dw24 ext_user_input				;3d		
                           B    79    
0061DC 794B00              B    80    	dw24 hwsc_get_version			;3e		
0061DF B01500              B    81    	dw24 os_dont_store_registers	;3f		
0061E2 F23A00              B    82    	dw24 os_cmd_unused				;40 		0061E5 B74B00              B    83    	dw24 hwsc_read_rtc				;41     
0061E8 DF4B00              B    84    	dw24 hwsc_write_rtc				;42		 
0061EB B81D00              B    85    	dw24 os_get_keymap_location		;43		 
0061EE F33A00              B    86    	dw24 os_get_mem_base			;44
0061F1 BE1D00              B    87    	dw24 ext_play_audio				;45
0061F4 FE4E00              B    88    	dw24 hwsc_disable_audio			;46
0061F7 154F00              B    89    	dw24 hwsc_get_joysticks			;47
0061FA 001700              B    90    	dw24 ext_set_vmode				;48
0061FD 971100              B    91    	dw24 ext_set_cursor_image		;49
006200 AB4900              B    92    	dw24 hwsc_remove_cursor			;4a
006203 D53600              B    93    	dw24 char_to_font				;4b
006206 B41C00              B    94    	dw24 os_get_disk_sector_ptr		;4c
006209 A04B00              B    95    	dw24 hwsc_set_timeout			;4d
00620C B14B00              B    96    	dw24 hwsc_test_timeout			;4e
                           B    97    	
00620F 133B00              B    98    	dw24 ext_set_pointer			;4f
006212 973C00              B    99    	dw24 os_allocate_ram			;50
006215 C23C00              B   100    	dw24 os_deallocate_ram			;51
006218 033B00              B   101    	dw24 os_get_mem_top				;52
00621B F54B00              B   102    	dw24 os_init_msec_counter		;53
00621E 2C4C00              B   103    	dw24 os_read_msec_counter		;54
006221 A83D00              B   104    	dw24 ext_parse_path				;55
                           B   105    	
                           B   106    ;----------------------------------------------
                           B   107    ; Non-packed Text Strings
                           B   108    ;----------------------------------------------
                           B   109    
006224 50524F53 4520666F   B   110    welcome_message			db "PROSE for EZ80P by 
00622C 7220455A 38305020 
006234 62792050 68696C20 
00623C 52757374 6F6E2032 
006244 3031320B 0B00 
00624A 44726976 65733A0B   B   111    storage_txt				db "Drives:",11,0
006252 00 
006253 53544152 5455502E   B   112    startup_script_fn		db "STARTUP.PBF",0
00625B 50424600 
00625F 2400                B   113    os_hex_prefix_txt		db "$",0
006261 50524F53 45205665   B   114    os_version_txt			db "PROSE Ver: $",0		006269 723A2024 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 261


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00626E 414D4F45 42412056   B   115    hw_version_txt			db "AMOEBA Ver: $",0
006276 65723A20 2400 
00627C 202F2000            B   116    fwd_slash_txt			db " / ",0
006280 4C6F6164 696E672E   B   117    loading_txt				db "Loading..",11,0
006288 2E0B00 
00628B 53617669 6E672E2E   B   118    saving_txt				db "Saving..",11,0
006293 0B00 
006295 2E657A70 2000       B   119    ezp_txt					db ".ezp",32,0
00629B 2E706266 2000       B   120    pbf_txt					db ".pbf",32,0
0062A1 0B4D6F72 653F0B0B   B   121    os_more_txt				db 11,"More?",11,11,0
0062A9 00 
0062AA 52656769 73746572   B   122    nmi_freeze_txt			db "Register Dump:"
0062B2 2044756D 703A 
0062B8 0B0B00              B   123    crlfx2_txt				db 11,11,0
0062BB 7800                B   124    rep_char_txt			db "x",0
0062BD 20746F20 00         B   125    to_txt					db " to ",0
0062C2 4552524F 5200       B   126    error_txt				db "ERROR",0
0062C8 494620              B   127    if_command_txt			db "IF "
0062CB 454E4420            B   128    end_command_txt			db "END "
0062CF 4F532052 45515549   B   129    hw_warn_txt1			db "OS REQUIRES AMOEBA 
0062D7 52455320 414D4F45 
0062DF 42412056 3A 
0062E4 2D2D2D2D 00         B   130    hw_warn_txt2			db "----",0
0062E9 54686973 2077696C   B   131    pmq_txt					db "This will overwrite
0062F1 6C206F76 65727772 
0062F9 69746520 70726F74 
006301 65637465 64205241 
006309 4D2E2043 6F6E7469 
006311 6E756520 28792F6E 
006319 293F200B 00 
00631E 4F555478 7800       B   132    envar_out_n_txt			db "OUTxx",0
006324 50415448 00         B   133    path_txt				db "PATH",0
006329 564F4C78 3A2000     B   134    chvol_txt				db "VOLx: ",0
006330 474F544F 2000       B   135    goto_txt				db "GOTO ",0
006336 56414C20 00         B   136    val_txt					db "VAL ",0
                           B   137    
                           B   138    ;----------------------------------------------
                           B   139    ; Packed text section
                           B   140    ;----------------------------------------------
                           B   141    
00633B 00444542 5547       B   142    dictionary				db 0,"DEBUG"			006341 002D2D2D 2D2D       B   143    						db 0,"-----"			006347 00494F              B   144    						db 0,"IO"				00634A 002D2D              B   145    						db 0,"--"				00634D 004D4953 43         B   146    						db 0,"MISC"				006352 002D2D2D 2D         B   147    						db 0,"----"				006357 00616464 72         B   148    						db 0,"addr"				00635C 0050524F 5345       B   149    						db 0,"PROSE"			006362 00612062 2063       B   150    						db 0,"a b c"			006368 00416464 72657373   B   151    						db 0,"Address"			006370 00427974 6573       B   152    						db 0,"Bytes"			006376 00457865 63757461   B   153    						db 0,"Executable"		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 262


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00637E 626C65 
006381 0048756E 74         B   154    						db 0,"Hunt"				006386 0046696C 6C         B   155    						db 0,"Fill"				00638B 00476F74 6F         B   156    						db 0,"Goto"				                           B   157    						
006390 0053686F 77         B   158    						db 0,"Show"				006395 00435055            B   159    						db 0,"CPU"				006399 00526567 69737465   B   160    						db 0,"Registers"		0063A1 7273 
0063A3 004173              B   161    						db 0,"As"				0063A6 00415343 4949       B   162    						db 0,"ASCII"			0063AC 00436C65 6172       B   163    						db 0,"Clear"			0063B2 00536372 65656E     B   164    						db 0,"Screen"			0063B9 00446973 61737365   B   165    						db 0,"Disassemble"		0063C1 6D626C65 
0063C5 00537769 746368     B   166    						db 0,"Switch"			0063CC 00436F70 79         B   167    						db 0,"Copy"				0063D1 00446576 696365     B   168    						db 0,"Device"			0063D8 00436861 6E6765     B   169    						db 0,"Change"			0063DF 00447269 7665       B   170    						db 0,"Drive"			0063E5 00446972            B   171    						db 0,"Dir"				0063E9 002F                B   172    						db 0,"/"				0063EB 00666E              B   173    						db 0,"fn"				                           B   174    						
0063EE 0044656C 657465     B   175    						db 0,"Delete"			0063F5 0046696C 65         B   176    						db 0,"File"				0063FA 00496E66 6F         B   177    						db 0,"Info"				0063FF 00564F4C 783A       B   178    						db 0,"VOLx:"			006405 004D616B 65         B   179    						db 0,"Make"				00640A 0052656D 6F756E74   B   180    						db 0,"Remount"			006412 00537461 7274       B   181    						db 0,"Start"			006418 00576172 6E696E67   B   182    						db 0,"Warning!"			006420 21 
006421 00416C6C            B   183    						db 0,"All"				006425 0052656D 6F7665     B   184    						db 0,"Remove"			00642C 0052656E 616D65     B   185    						db 0,"Rename"			006433 004F72              B   186    						db 0,"Or"				006436 00526563 65697665   B   187    						db 0,"Receive"			00643E 00536176 65         B   188    						db 0,"Save"				006443 00547261 6E736D69   B   189    						db 0,"Transmit"			00644B 74 
00644C 004C6F61 64         B   190    						db 0,"Load"				                           B   191    						
006451 004F532F 4857       B   192    						db 0,"OS/HW"			006457 00566572 73696F6E   B   193    						db 0,"Version"			00645F 0070656E 20706170   B   194    						db 0,"pen paper"		006467 6572 
006469 803A                B   195    						db 80h,":"				00646B 813E                B   196    						db 81h,">"				00646D 82534F55 4E44       B   197    						db 82h,"SOUND"			006473 00566F6C 756D6573   B   198    						db 0,"Volumes"			00647B 8343                B   199    						db 83h,"C"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 263


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00647D 844344              B   200    						db 84h,"CD"				006480 85434C53            B   201    						db 85h,"CLS"			006484 8650454E            B   202    						db 86h,"PEN"			006488 8744                B   203    						db 87h,"D"				00648A 8844454C            B   204    						db 88h,"DEL"			00648E 89444952            B   205    						db 89h,"DIR"			006492 8A48                B   206    						db 8ah,"H"				006494 8B46                B   207    						db 8bh,"F"				                           B   208    						
006496 004F6E              B   209    						db 0,"On"				006499 8C464F52 4D4154     B   210    						db 8ch,"FORMAT"			0064A0 0047                B   211    						db 0,"G"				0064A2 8D4C42              B   212    						db 8dh,"LB"				0064A5 8E4D                B   213    						db 8eh,"M"				0064A7 8F4D4F55 4E54       B   214    						db 8fh,"MOUNT"			0064AD 004265              B   215    						db 0,"Be"				0064B0 9052                B   216    						db 90h,"R"				0064B2 915244              B   217    						db 91h,"RD"				0064B5 92524E              B   218    						db 92h,"RN"				0064B8 935258              B   219    						db 93h,"RX"				0064BB 945342              B   220    						db 94h,"SB"				0064BE 9554                B   221    						db 95h,"T"				0064C0 965458              B   222    						db 96h,"TX"				0064C3 97564552 53         B   223    						db 97h,"VERS"			0064C8 00577269 7465       B   224    						db 0,"Write"			                           B   225    						
0064CE 004D656D 6F7279     B   226    						db 0,"Memory"			0064D5 00227478 7422       B   227    						db 0,22h,"txt",22h		0064DB 0057696C 6C         B   228    						db 0,"Will"				0064E0 00526174 65         B   229    						db 0,"Rate"				0064E5 0061                B   230    						db 0,"a"				0064E7 00507265 70         B   231    						db 0,"Prep"				0064EC 984D44              B   232    						db 98h,"MD"				0064EF 00447269 766573     B   233    						db 0,"Drives"			0064F6 006F6C64 666E       B   234    						db 0,"oldfn"			0064FC 006E6577 666E       B   235    						db 0,"newfn"			006502 006C656E            B   236    						db 0,"len"				006506 00436F6C 6F757273   B   237    						db 0,"Colours"			00650E 993F                B   238    						db 99h,"?"				006510 00436F6D 6D616E64   B   239    						db 0,"Commands"			006518 73 
006519 0020                B   240    						db 0," "				00651B 002D                B   241    						db 0,"-"				                           B   242    						
00651D 00566F6C 756D65     B   243    						db 0,"Volume"			006524 0046756C 6C         B   244    						db 0,"Full"				006529 004E6F74            B   245    						db 0,"Not"				00652D 00466F75 6E64       B   246    						db 0,"Found"			006533 004C656E 677468     B   247    						db 0,"Length"			00653A 005A6572 6F         B   248    						db 0,"Zero"				00653F 004F7574            B   249    						db 0,"Out"				006543 004F66              B   250    						db 0,"Of"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 264


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006546 0052616E 6765       B   251    						db 0,"Range"			00654C 00416C72 65616479   B   252    						db 0,"Already"			006554 00457869 737473     B   253    						db 0,"Exists"			00655B 004174              B   254    						db 0,"At"				00655E 00526F6F 74         B   255    						db 0,"Root"				006563 004D6973 6D617463   B   256    						db 0,"Mismatch"			00656B 68 
00656C 00526571 75657374   B   257    						db 0,"Request"			006574 00446174 61         B   258    						db 0,"Data"				                           B   259    				
006579 00454F46            B   260    						db 0,"EOF"				00657D 00416674 6572       B   261    						db 0,"After"			006583 00556E6B 6E6F776E   B   262    						db 0,"Unknown"			00658B 00436F6D 6D616E64   B   263    						db 0,"Command"			006593 00426164            B   264    						db 0,"Bad"				006597 00486578            B   265    						db 0,"Hex"				00659B 004E6F              B   266    						db 0,"No"				00659E 0041626F 72746564   B   267    						db 0,"Aborted"			0065A6 00507265 73656E74   B   268    						db 0,"Present"			0065AE 00436865 636B7375   B   269    						db 0,"Checksum"			0065B6 6D 
0065B7 004C6F61 646564     B   270    						db 0,"Loaded"			0065BE 00436F6D 6D73       B   271    						db 0,"Comms"			0065C4 00457272 6F72       B   272    						db 0,"Error"			0065CA 00417267 756D656E   B   273    						db 0,"Arguments"		0065D2 7473 
0065D4 004C6F73 74         B   274    						db 0,"Lost"				                           B   275    						
0065D9 00                  B   276    						db 0
0065DA 46415431 36         B   277    fat16_txt				db "FAT16"				                           B   278    
0065DF 00536572 69616C     B   279    						db 0,"Serial"			0065E6 0054696D 65         B   280    						db 0,"Time"				0065EB 00466F6E 74         B   281    						db 0,"Font"				0065F0 00546F6F            B   282    						db 0,"Too"				0065F4 004C6F6E 67         B   283    						db 0,"Long"				0065F9 00446573 74696E61   B   284    						db 0,"Destination"		006601 74696F6E 
006605 0053656C 65637465   B   285    						db 0,"Selected"			00660D 64 
00660E 00496E76 616C6964   B   286    						db 0,"Invalid"			006616 004D6973 73696E67   B   287    						db 0,"Missing"			00661E 004F4B              B   288    						db 0,"OK"				006621 004F53              B   289    						db 0,"OS"				006624 0050726F 74656374   B   290    						db 0,"Protected"		00662C 6564 
00662E 0041                B   291    						db 0,"A"				006630 004973              B   292    						db 0,"Is"				006633 00456D70 7479       B   293    						db 0,"Empty"			006639 00456E64            B   294    						db 0,"End"				                           B   295    						
00663D 0024                B   296    						db 0,"$"
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 265


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00663F 7878                B   297    hex_byte_txt			db "xx"					                           B   298    						
006641 00417070 656E64     B   299    						db 0,"Append"			006648 003F                B   300    						db 0,"?"				00664A 0024                B   301    						db 0,"$"				00664C 00417761 6974696E   B   302    						db 0,"Awaiting"			006654 67 
006655 00526563 65697669   B   303    						db 0,"Receiving"		00665D 6E67 
00665F 0053656E 64696E67   B   304    						db 0,"Sending"			006667 000B                B   305    						db 0,11					006669 002E2E              B   306    						db 0,".."				00666C 004E616D 65         B   307    						db 0,"Name"				006671 00204279 746573     B   308    						db 0," Bytes"			006678 00507265 7373       B   309    						db 0,"Press"			00667E 00416E79            B   310    						db 0,"Any"				006682 004B6579            B   311    						db 0,"Key"				006686 00456E74 6572       B   312    						db 0,"Enter"			00668C 9A454348 4F         B   313    						db 9ah,"ECHO"			                           B   314    				
006691 0052756E            B   315    						db 0,"Run"				006695 00536372 697074     B   316    						db 0,"Script"			00669C 00594553            B   317    yes_txt					db 0,"YES" 				0066A0 00546F              B   318    						db 0,"To"				0066A3 00536574            B   319    						db 0,"Set"				0066A7 00436F6E 74696E75   B   320    						db 0,"Continue"			0066AF 65 
0066B0 004E6F6E 65         B   321    						db 0,"None"				0066B5 00447269 766572     B   322    						db 0,"Driver"			0066BC 9B3C                B   323    						db 9bh,"<"				0066BE 004E6577 6572       B   324    						db 0,"Newer"			0066C4 00526571 75697265   B   325    						db 0,"Required"			0066CC 64 
0066CD 00465047 4120636F   B   326    						db 0,"FPGA config"		0066D5 6E666967 
0066D9 00556E63 68616E67   B   327    						db 0,"Unchanged"		0066E1 6564 
0066E3 006C6F63 206C656E   B   328    						db 0,"loc len [per vol 
0066EB 205B7065 7220766F 
0066F3 6C206368 616E7320 
0066FB 6C6F6F70 3F5D20 
006702 003E3E55 6E757365   B   329    						db 0,">>Unused<<"		00670A 643C3C 
00670D 0070616C 65747465   B   330    						db 0,"palette"			                           B   331    						
006715 003F3F3F            B   332    						db 0,"???"				006719 00456E61 626C65     B   333    						db 0,"Enable"			006720 004B6579 626F6172   B   334    						db 0,"Keyboard"			006728 64 
006729 00446574 65637465   B   335    						db 0,"Detected"			006731 64 
006732 004D6F75 7365       B   336    						db 0,"Mouse"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 266


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006738 00536563 746F72     B   337    						db 0,"Sector"			00673F 00496E63 6F727265   B   338    						db 0,"Incorrect"		006747 6374 
006749 9E564D4F 4445       B   339    						db 9eh,"VMODE"			00674F 00566964 656F       B   340    						db 0,"Video"			006755 004D6F64 65         B   341    						db 0,"Mode"				00675A 9F464F4E 54         B   342    						db 9fh,"FONT"			00675F 00416E64            B   343    						db 0,"And"				006763 00536176 696E67     B   344    						db 0,"Saving"			00676A 00556E73 7570706F   B   345    						db 0,"Unsupported"		006772 72746564 
006776 A0534554            B   346    						db 0a0h,"SET"			00677A 005B7661 723D7374   B   347    						db 0,"[var=string]"		006782 72696E67 5D 
                           B   348    
006787 00456E76 6172       B   349    						db 0,"Envar"			00678D A1445A              B   350    						db 0a1h,"DZ"			006790 0041444C            B   351    						db 0,"ADL"				006794 005A3830            B   352    						db 0,"Z80"				006798 00506C61 79         B   353    						db 0,"Play"				00679D 00417564 696F       B   354    						db 0,"Audio"			0067A3 A2415641 494C       B   355    						db 0a2h,"AVAIL"			0067A9 00467265 65         B   356    						db 0,"Free"				0067AE 0043616E 6E6F74     B   357    						db 0,"Cannot"			0067B5 00416C6C 6F636174   B   358    						db 0,"Allocate"			0067BD 65 
0067BE 00416C6C 6F636174   B   359    						db 0,"Allocated"		0067C6 6564 
0067C8 A34649              B   360    						db 0a3h,"FI"			0067CB 00546578 74         B   361    						db 0,"Text"				0067D0 00466F72 6D6174     B   362    						db 0,"Format"			0067D7 004F7665 72777269   B   363    						db 0,"Overwrite"		0067DF 7465 
                           B   364    						
0067E1 0001                B   365    						db 0,1					                           B   366    
                           B   367    
                           B   368    
                           B   369    
                           B   370    
0067E3 2199696A 5F916F92   B   371    save_append_msg			db 021h,099h,069h,06ah,
0067EB 9700 
0067ED 2199696A 5FCE9297   B   372    overwrite_msg			db 021h,099h,069h,06ah,
0067F5 00 
0067F6 2F0A9300            B   373    os_loadaddress_msg 		db 02fh,00ah,093h,0		0067FA 21649300            B   374    os_filesize_msg			db 021h,064h,093h,0		0067FE 94219700            B   375    ser_rec_msg				db 094h,021h,097h,0		006802 956F9897 00         B   376    ser_rec2_msg			db 095h,06fh,098h,097h,
006807 966F9897 00         B   377    ser_send_msg			db 096h,06fh,098h,097h,
00680C 9521BBBC 989700     B   378    ser_recsave_msg			db 095h,021h,0bbh,0bch,
006813 A77C9097 00         B   379    hw_err_msg				db 0a7h,07ch,090h,097h,
006818 607C00              B   380    disk_err_msg			db 060h,07ch,0			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 267


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00681B A1779797 00         B   381    script_aborted_msg		db 0a1h,077h,097h,097h,
006820 76B2B397 00         B   382    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   383    
006825 9700                B   384    packed_help1				db 097h,0
006827 0100                B   385    							db 001h,0			006829 0200                B   386    							db 002h,0			00682B 3307095F 4F500B00   B   387    							db 033h,007h,009h,0
006833 3407515F 4F1400     B   388    							db 034h,007h,051h,0
00683A 37070707 5F195000   B   389    							db 037h,007h,007h,0
006842 3B075FC2 1700       B   390    							db 03bh,007h,05fh,0
006848 C1075FC3 1700       B   391    							db 0c1h,007h,05fh,0
00684E 3F070754 5F0E5000   B   392    							db 03fh,007h,007h,0
006856 42075F0F 0A00       B   393    							db 042h,007h,05fh,0
00685C 3E070709 5F0D5000   B   394    							db 03eh,007h,007h,0
006864 44075F10 500B00     B   395    							db 044h,007h,05fh,0
00686B 475F1011 1200       B   396    							db 047h,05fh,010h,0
006871 4C075F10 50131400   B   397    							db 04ch,007h,05fh,0
                           B   398    	
006879 9700                B   399    							db 097h,0
00687B 0300                B   400    							db 003h,0			00687D 0400                B   401    							db 004h,0			00687F 38231E1D 5F1B601E   B   402    							db 038h,023h,01eh,0
006887 1D00 
006889 3C1F5F20 2100       B   403    							db 03ch,01fh,05fh,0
00688F 3D5F101D 00         B   404    							db 03dh,05fh,010h,0
006894 CB1F5F21 2200       B   405    							db 0cbh,01fh,05fh,0
00689A 411A995F 551C00     B   406    							db 041h,01ah,099h,0
0068A1 431F075F 2F2100     B   407    							db 043h,01fh,007h,0
0068A8 561D5F24 1D00       B   408    							db 056h,01dh,05fh,0
0068AE 455F2557 00         B   409    							db 045h,05fh,025h,0
0068B3 481D5F29 1D00       B   410    							db 048h,01dh,05fh,0
0068B9 4958595F 2A2100     B   411    							db 049h,058h,059h,0
0068C0 4A1F075F 2C2100     B   412    							db 04ah,01fh,007h,0
0068C7 4B1F075A 5F2D2100   B   413    							db 04bh,01fh,007h,0
0068CF 4D1F075A 5F2E2100   B   414    							db 04dh,01fh,007h,0
0068D7 235F1860 00         B   415    							db 023h,05fh,018h,0
                           B   416    
0068DC 9700                B   417    							db 097h,0
0068DE 0500                B   418    							db 005h,0			0068E0 0600                B   419    							db 006h,0			0068E2 C65F10C7 5000       B   420    							db 0c6h,05fh,010h,0
0068E8 395F1516 00         B   421    							db 039h,05fh,015h,0
0068ED 9F515F10 CC00       B   422    							db 09fh,051h,05fh,0
0068F3 BA1F5F1B 8200       B   423    							db 0bah,01fh,05fh,0
0068F9 3A325F09 1B5B00     B   424    							db 03ah,032h,05fh,0
006900 BEBF5FA4 C000       B   425    							db 0beh,0bfh,05fh,0
006906 35AD5FC4 5013C500   B   426    							db 035h,0adh,05fh,0
00690E 4E5F1030 3100       B   427    							db 04eh,05fh,010h,0
006914 B7095F1B B8B900     B   428    							db 0b7h,09h,5fh,01b
00691B 5C5F105D 00         B   429    							db 05ch,05fh,010h,0
006920 9700                B   430    							db 097h,0
006922 FF                  B   431    							db 0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 268


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   432    
                           B   433    
                           B   434    
                           B   435    
006923 CA1E00              B   436    os_cmd_locs					dw24 os_cmd_colon	006926 E82E00              B   437    							dw24 os_cmd_gtr		006929 E83700              B   438    							dw24 os_cmd_sound	00692C D01D00              B   439    							dw24 os_cmd_c		00692F 3D1E00              B   440    							dw24 os_cmd_cd		006932 C41E00              B   441    							dw24 os_cmd_cls		006935 353600              B   442    							dw24 os_cmd_pen		006938 E41E00              B   443    							dw24 os_cmd_d		                           B   444    					
00693B 452A00              B   445    							dw24 os_cmd_del		00693E 692A00              B   446    							dw24 os_cmd_dir		006941 162E00              B   447    							dw24 os_cmd_h		006944 BF2B00              B   448    							dw24 os_cmd_f		006947 E72B00              B   449    							dw24 os_cmd_format	00694A 1C2F00              B   450    							dw24 os_cmd_lb		00694D CD2F00              B   451    							dw24 os_cmd_m		006950 CF3500              B   452    							dw24 os_cmd_remount
                           B   453    
006953 3B3000              B   454    							dw24 os_cmd_r		006956 6C3100              B   455    							dw24 os_cmd_rd		006959 903100              B   456    							dw24 os_cmd_rn		00695C 503200              B   457    							dw24 os_cmd_rx		00695F C13100              B   458    							dw24 os_cmd_sb		006962 7B3500              B   459    							dw24 os_cmd_t		006965 0F3500              B   460    							dw24 os_cmd_tx		006968 DB3500              B   461    							dw24 os_cmd_vers	                           B   462    							
00696B 173000              B   463    							dw24 os_cmd_md		00696E C42E00              B   464    							dw24 os_cmd_help	006971 C53A00              B   465    							dw24 os_cmd_echo	006974 333600              B   466    							dw24 os_cmd_ltn		006977 F23A00              B   467    							dw24 os_cmd_unused	00697A F23A00              B   468    							dw24 os_cmd_unused	00697D 593600              B   469    							dw24 os_cmd_vmode	006980 693600              B   470    							dw24 os_cmd_font	                           B   471    							
006983 003700              B   472    							dw24 os_cmd_set		006986 DB3700              B   473    							dw24 os_cmd_dz		006989 843800              B   474    							dw24 os_cmd_avail	00698C 163900              B   475    							dw24 os_cmd_fi		                           B   476    							
                           B   477    								
00698F 00                  B   478    packed_msg_list				db 0				                           B   479    		
006990 606100              B   480    							db 060h,061h,0		006993 21626300            B   481    							db 021h,062h,063h,0
006997 1D6100              B   482    							db 01dh,061h,0		00699A 628C1D00            B   483    							db 062h,08ch,01dh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 269


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00699E 1D8D628E 00         B   484    							db 01dh,08dh,062h,0
0069A3 628C2100            B   485    							db 062h,08ch,021h,0
0069A7 21648D65 00         B   486    							db 021h,064h,08dh,0
0069AC 0A666768 00         B   487    							db 00ah,066h,067h,0
0069B1 2199696A 00         B   488    							db 021h,099h,069h,0
0069B6 696B6C00            B   489    							db 069h,06bh,06ch,0
                           B   490    					
0069BA 727300              B   491    							db 072h,073h,0		0069BD 877500              B   492    							db 087h,075h,0		0069C0 76219900            B   493    							db 076h,021h,099h,0
                           B   494    					
0069C4 87B500              B   495    							db 087h,0b5h,0		0069C7 797400              B   496    							db 079h,074h,0		0069CA 9A7A00              B   497    bytes_loaded_msg			db 09ah,07ah,0		0069CD 7B7C00              B   498    							db 07bh,07ch,0		0069D0 747D00              B   499    							db 074h,07dh,0		                           B   500    
0069D3 72CD00              B   501    format_err_msg				db 072h,0cdh,0		                           B   502    
0069D6 816600              B   503    							db 081h,066h,0		0069D9 21998384 00         B   504    							db 021h,099h,083h,0
0069DE 76260A00            B   505    							db 076h,026h,00ah,0
0069E2 76216400            B   506    							db 076h,021h,064h,0
0069E6 2D7700              B   507    							db 02dh,077h,0		0069E9 2D7C6B85 00         B   508    							db 02dh,07ch,06bh,0
0069EE 628C080C 00         B   509    							db 062h,08ch,08h,0c
0069F3 A9316708 AA00       B   510    							db 0a9h,031h,067h,0
0069F9 768F0A00            B   511    							db 076h,08fh,00ah,0
0069FD 76850A00            B   512    							db 076h,085h,00ah,0
                           B   513    					
006A01 746800              B   514    							db 074h,068h,0		006A04 887D00              B   515    							db 088h,07dh,0		006A07 8900                B   516    ok_msg						db 089h,0			                           B   517    					
006A09 876000              B   518    							db 087h,060h,0		006A0C 1A627800            B   519    							db 01ah,062h,078h,0
                           B   520    					
006A10 1D626300            B   521    							db 01dh,062h,063h,0
006A14 7700                B   522    							db 077h,0			                           B   523    					
006A16 21996D00            B   524    							db 021h,099h,06dh,0
006A1A 8A508B00            B   525    							db 08ah,050h,08bh,0
006A1E 6F71706E 00         B   526    							db 06fh,071h,070h,0
006A23 763600              B   527    no_vols_msg					db 076h,036h,0		006A26 97A66300            B   528    none_found_msg				db 097h,0a6h,063h,0
                           B   529    							
006A2A B62100              B   530    							db 0b6h,021h,0		006A2D A9316708 AA00       B   531    							db 0a9h,031h,067h,0
006A33 21AC00              B   532    							db 021h,0ach,0		                           B   533    							
006A36 766F00              B   534    							db 076h,06fh,0		006A39 746F00              B   535    							db 074h,06fh,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 270


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006A3C 66676800            B   536    							db 066h,067h,068h,0
006A40 BD1A00              B   537    							db 0bdh,01ah,0		006A43 1A62B300            B   538    							db 01ah,062h,0b3h,0
006A47 1A7C00              B   539    							db 01ah,07ch,0		006A4A A17C00              B   540    							db 0a1h,07ch,0		006A4D C8C95000            B   541    							db 0c8h,0c9h,050h,0
006A51 CA508B00            B   542    							db 0cah,050h,08bh,0
006A55 B8508B00            B   543    							db 0b8h,050h,08bh,0
006A59 C0626300            B   544    							db 0c0h,062h,063h,0
                           B   545    							
006A5D FF                  B   546    							db 0ffh				                           B   547    
                           B   548    ;----------------------------------------------
                           B   549    
006A5E                     B   550    kernal_error_code_translation
                           B   551    
006A5E 242D2E14 08110F2A   B   552    					db 24h,2dh,2eh,14h, 08h,11h
006A66 2F303132 331F3437 
                           B   553    					
006A6E                     B   554    fs_error_code_translation
                           B   555    
006A6E 00010203 04050607   B   556    					db 00h,01h,02h,03h, 04h,05h
006A76 08090A23 270D1321 
006A7E 22232425 260E0000   B   557    					db 22h,23h,24h,25h, 26h,0eh
                           B   558    
                           B   559    
                           B   560    ;----------------------------------------------
                           B   561    ; Scancode to ASCII keymaps
                           B   562    ;----------------------------------------------
                           B   563    
                           C     0    include	'UK_keymap.asm'
006A86                     C     1    keymap:
006A86 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
006A8E 00000000 00006000 
006A96 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
006A9E 00007A73 61773200 
006AA6 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
006AAE 00207666 74723500 
006AB6 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
006ABE 00006D6A 75373800 
006AC6 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
006ACE 002E2F6C 3B702D00 
006AD6 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
006ADE 0000005D 00230000 
006AE6 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
006AEE 00000000 00000000 
006AF6 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
006AFE 21000000 5A534157 
006B06 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
006B0E A3000020 56465452 
006B16 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
006B1E 5E000000 4D4A5526 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 271


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
006B26 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
006B2E 2800003E 3F4C3A50 
006B36 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
006B3E 00000000 007D007E 
006B46 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
006B4E 00000000 00000000 
006B56 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
006B5E 00000000 00000000 
006B66 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
006B6E 00000000 00000000 
006B76 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
006B7E 00000000 00000000 
006B86 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
006B8E 00000000 00000000 
006B96 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
006B9E 00000000 00000000 
006BA6 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   565    
       00006A86            B   566    unshifted_keymap equ keymap+00h
       00006AE8            B   567    shifted_keymap   equ keymap+62h
       00006B4A            B   568    alted_keymap	 equ keymap+c4h
                           B   569    
                           B   570    ;----------------------------------------------
                           B   571    
006BAC 0506040C 030B830A   B   572    function_key_list	db 05h,06h,04h,0ch,03h,0bh,
006BB4 01 
                           B   573    		
006BB5 46782E43 4D4400     B   574    fkey_filename		db "Fx.CMD",0
                           B   575    
006BBC 4B45594D 41505300   B   576    keymaps_txt			db "KEYMAPS",0
                           B   577    
                           B   578    ;----------------------------------------------
                           B   579    
006BC4 00                  B   580    ui_index				db 0				; u
006BC5 00                  B   581    ui_maxchars				db 0				; "
006BC6 000000              B   582    ui_string_addr			dw24 0				; "
                           B   583    
                           B   584    ;----------------------------------------------
                           B   585    ; OS Display parameters
                           B   586    ;----------------------------------------------
                           B   587    
006BC9 00                  B   588    video_mode				db 0
006BCA 0700                B   589    current_pen				dw 07h				; C
006BCC 0000                B   590    background_colour		dw 00h				; F
                           B   591    
006BCE 00000F00 000F0F0F   B   592    pen_palette				dw 0000h,000fh,0f00h,0f
006BD6 F000FF00 F00FFF0F 
006BDE 55059909 CC0C710F   B   593    						dw 0555h,0999h,0ccch,0f
006BE6 7F00F80D 4008880F 
                           B   594    
006BEE 00                  B   595    plotchar_colour			db 0				; c
                           B   596    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 272


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006BEF 00                  B   597    char_under_cursor		db 0			
006BF0 00                  B   598    cursor_present			db 0				; 1
006BF1 00                  B   599    overwrite_mode			db 0
006BF2 00                  B   600    cursor_image_char		db 0
                           B   601    
                           B   602    ;----------------------------------------------
                           B   603    
006BF3                     B   604    display_parameters
                           B   605    
006BF3 00                  B   606    video_doubling			db 0
006BF4 000000              B   607    charmap_rows			dw24 0					006BF7 000000              B   608    charmap_columns			dw24 0				
                           B   609    
                           B   610    ;----------------------------------------------
                           B   611    
006BFA                     B   612    vmode_parameter_list
                           B   613    
006BFA 00503C              B   614    				db 00b, 80,60	; vmode 0 (vide
006BFD 01501E              B   615    				db 01b, 80,30	; vmode 1
006C00 02283C              B   616    				db 10b, 40,60	; vmode 2	
006C03 03281E              B   617    				db 11b, 40,30	; vmode 3
                           B   618    				
                           B   619    ;==============================================
                           B   620    ;  Serial Routine Data
                           B   621    ;==============================================
                           B   622    
006C06 000000              B   623    serial_ez80_address		dw24 0
006C09 000000              B   624    serial_file_length		dw24 0
006C0C 000000              B   625    serial_fn_addr			dw24 0
006C0F 00 00 00 00 00 00   B   626    serial_filename			blkb 18,0		
006C15 00 00 00 00 00 00 
006C1B 00 00 00 00 00 00 
006C21 00                  B   627    serial_fn_length		db 0
006C22 00                  B   628    serial_timeout			db 0
                           B   629    
006C23 00 00 00 00 00 00   B   630    serial_fileheader		blkb 20,0
006C29 00 00 00 00 00 00 
006C2F 00 00 00 00 00 00 
006C35 00 00 
006C37 5A383050 2E464845   B   631    serial_header_id		db "Z80P.FHEADER"		006C3F 41444552 
006C43 00                  B   632    serial_transfer_started	db 0
                           B   633    
006C44 00                  B   634    anim_wait_count			db 0
                           B   635    
                           B   636    ;==============================================
                           B   637    
006C45 F3C8                B   638    intellimouse_seq	db 0f3h,200
006C47 F364                B   639    					db 0f3h,100
006C49 F350                B   640    					db 0f3h,80
                           B   641    
006C4B E803                B   642    mouse_settings_seq	db 0e8h,default_resolution
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 273


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006C4D E6                  B   643    					db default_scaling
006C4E F364                B   644    					db 0f3h,default_sample_rate
006C50 F4                  B   645    					db 0f4h
                           B   646    					
                           B   647    ;----------------------------------------------
                           B   648    ; FILE SYSTEM RELATED VARIABLES
                           B   649    ;----------------------------------------------
                           B   650    
006C51 00                  B   651    boot_drive			db 0
                           B   652    
006C52 00                  B   653    current_volume		db 0
                           B   654    	
006C53 00                  B   655    current_driver		db 0			;normally u
                           B   656    
006C54 00                  B   657    device_count		db 0			;IE: the nu
                           B   658    
006C55 00                  B   659    volume_count		db 0
                           B   660    				
006C56 20564F4C 303A00     B   661    vol_txt				db " VOL0:",0	;space pref
006C5D 44455630 3A00       B   662    dev_txt				db "DEV0:",0
                           B   663    
006C63 000000              B   664    sector_rd_wr_addr	dw24 0
                           B   665    
                           B   666    
                           B   667    ;==============================================
                           B   668    
006C66                     B   669    volume_dir_clusters
                           B   670    
006C66 00 00 00 00 00 00   B   671    					blkb max_volumes*3,0
006C6C 00 00 00 00 00 00 
006C72 00 00 00 00 00 00 
006C78 00 00 00 00 00 00 
                           B   672    	
006C7E                     B   673    volume_mount_list
                           B   674    
006C7E 00 00 00 00 00 00   B   675    					blkb max_volumes*16,0
006C84 00 00 00 00 00 00 
006C8A 00 00 00 00 00 00 
006C90 00 00 00 00 00 00 
006C96 00 00 00 00 00 00 
006C9C 00 00 00 00 00 00 
006CA2 00 00 00 00 00 00 
006CA8 00 00 00 00 00 00 
006CAE 00 00 00 00 00 00 
006CB4 00 00 00 00 00 00 
006CBA 00 00 00 00 00 00 
006CC0 00 00 00 00 00 00 
006CC6 00 00 00 00 00 00 
006CCC 00 00 00 00 00 00 
006CD2 00 00 00 00 00 00 
006CD8 00 00 00 00 00 00 
006CDE 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 274


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006CE4 00 00 00 00 00 00 
006CEA 00 00 00 00 00 00 
006CF0 00 00 00 00 00 00 
006CF6 00 00 00 00 00 00 
006CFC 00 00 
                           B   676    
                           B   677    ; Each entry is 16 bytes in the form:
                           B   678    
                           B   679    ; OFFSETS
                           B   680    ; -------
                           B   681    ; $00 - Volume is present (0/1)
                           B   682    ; $01 - Volume's host driver number (1 byte)	                           B   683    ; $02 - [reserved]
                           B   684    ; $03 - [reserved]
                           B   685    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   686    ; $07 - Partition number on host drive (0/1/2/3
                           B   687    ; $08 - Offset in sectors from MBR to partition
                           B   688    ; $0c - [reserved]
                           B   689    ; $0d - [reserved]	
                           B   690    ; $0e - [reserved]
                           B   691    ; $0f - [reserved]
                           B   692    
                           B   693    ;==============================================
                           B   694    
006CFE                     B   695    host_device_hardware_info
                           B   696    
006CFE 00 00 00 00 00 00   B   697    					blkb 32*4,0
006D04 00 00 00 00 00 00 
006D0A 00 00 00 00 00 00 
006D10 00 00 00 00 00 00 
006D16 00 00 00 00 00 00 
006D1C 00 00 00 00 00 00 
006D22 00 00 00 00 00 00 
006D28 00 00 00 00 00 00 
006D2E 00 00 00 00 00 00 
006D34 00 00 00 00 00 00 
006D3A 00 00 00 00 00 00 
006D40 00 00 00 00 00 00 
006D46 00 00 00 00 00 00 
006D4C 00 00 00 00 00 00 
006D52 00 00 00 00 00 00 
006D58 00 00 00 00 00 00 
006D5E 00 00 00 00 00 00 
006D64 00 00 00 00 00 00 
006D6A 00 00 00 00 00 00 
006D70 00 00 00 00 00 00 
006D76 00 00 00 00 00 00 
006D7C 00 00 
                           B   698    
                           B   699    ; Each entry is 32 bytes..
                           B   700    ;
                           B   701    ; OFFSETS
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 275


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   702    ; -------
                           B   703    ; $00 - Device driver number
                           B   704    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   705    ; $05 - Zero terminated hardware name (22 ASCII
                           B   706    ; (remaining bytes to $1F currently unused)
                           B   707    
                           B   708    ;----------------------------------------------
                           B   709    
006D7E 000000              B   710    dhwn_temp_pointer		dw24 0
                           B   711    
006D81 00                  B   712    partition_temp			db 0
006D82 00                  B   713    vols_on_device_temp		db 0
006D83 00                  B   714    sys_driver_backup		db 0
006D84 00                  B   715    os_quiet_mode			db 0
                           B   716    
                           B   717    ;----------------------------------------------
                           B   718    
006D85 00 00 00 00 00 00   B   719    time_data				blkb	7,0
006D8B 00 
                           B   720    
006D8C 00                  B   721    frozen					db 0
006D8D 01                  B   722    first_run				db 1
006D8E 01                  B   723    devices_connected		db 1					                           B   724    
                           B   725    ;----------------------------------------------
                           B   726    
006D8F 557300              B   727    free_sysram_base		dw24 os_max_addr
006D92 FFFF07              B   728    free_sysram_top			dw24 sysram_addr+sysram
                           B   729    
006D95 000080              B   730    free_vram_a_base		dw24 vram_a_addr
006D98 FFFF87              B   731    free_vram_a_top			dw24 vram_a_addr+7ffffh
                           B   732    
006D9B 0000C0              B   733    free_vram_b_base		dw24 vram_b_addr
006D9E FFFFC7              B   734    free_vram_b_top			dw24 vram_b_addr+7ffffh
                           B   735    
006DA1 000000              B   736    charmap_size			dw24 0
                           B   737    
                           B   738    ;----------------------------------------------
                           B   739    
006DA4 000000              B   740    milliseconds_counter	dw24 0
006DA7 000000              B   741    seconds_counter			dw24 0
                           B   742    
                           B   743    ;----------------------------------------------
                           B   744    
006DAA 00                  B   745    store_a1				db 0		
006DAB 000000              B   746    store_bc1				dw24 0
006DAE 000000              B   747    store_de1				dw24 0
006DB1 000000              B   748    store_hl1				dw24 0
006DB4 00                  B   749    store_a2				db 0
006DB5 000000              B   750    store_bc2				dw24 0
006DB8 000000              B   751    store_de2				dw24 0
006DBB 000000              B   752    store_hl2				dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 276


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006DBE 000000              B   753    store_ix				dw24 0
006DC1 000000              B   754    store_iy				dw24 0
006DC4 000000              B   755    store_pc				dw24 0		;only relev
006DC7 000000              B   756    store_spl				dw24 0
006DCA 0000                B   757    store_sps				dw 0
006DCC 00                  B   758    store_mbase				db 0
006DCD 00                  B   759    store_f	 				db 0
006DCE 00                  B   760    store_adl				db 0
                           B   761    
                           B   762    ;----------------------------------------------
006DCF                     B   763    os_variables
                           B   764    ;----------------------------------------------
                           B   765    
006DCF 000000              B   766    kernal_ix_cache			dw24 0
                           B   767    
006DD2 00                  B   768    store_registers			db 0
006DD3 000000              B   769    com_start_addr			dw24 0
                           B   770    
006DD6 00 00 00 00 00 00   B   771    temp_string				blkb max_buffer_chars+2
006DDC 00 00 00 00 00 00 
006DE2 00 00 00 00 00 00 
006DE8 00 00 00 00 00 00 
006DEE 00 00 00 00 00 00 
006DF4 00 00 00 00 00 00 
006DFA 00 00 00 00 00 00 
006E00 00 00 00 00 00 00 
006E06 00 00 00 00 00 00 
006E0C 00 00 00 00 00 00 
006E12 00 00 00 00 00 00 
006E18 00 00 00 00 00 00 
006E1E 00 00 00 00 00 00 
006E24 00 00 00 00 
006E28 00 00 00 00 00 00   B   772    script_fn				blkb 13,0
006E2E 00 00 00 00 00 00 
006E34 00 
                           B   773    
006E35 00                  B   774    sector_lba0				db 0			; keep 
006E36 00                  B   775    sector_lba1				db 0
006E37 00                  B   776    sector_lba2				db 0
006E38 00                  B   777    sector_lba3				db 0
                           B   778    
                           B   779    ;----------------------------------------------
                           B   780    
006E39 000000              B   781    cursor_pos				dw24 0			; 3rd b
                           B   782    
       00006E39            B   783    cursor_y 				equ cursor_pos
       00006E3A            B   784    cursor_x 				equ cursor_pos+1
                           B   785    						
006E3C 00                  B   786    cursorflashtimer		db 0
006E3D 00                  B   787    cursor_status			db 0
006E3E 00                  B   788    os_linecount			db 0
                           B   789    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 277


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006E3F 000000              B   790    mem_mon_addr			dw24 0
006E42 000000              B   791    cmdop_start_address		dw24 0
006E45 000000              B   792    cmdop_end_address		dw24 0
006E48 000000              B   793    copy_dest_address		dw24 0
006E4B 000000              B   794    hex_address				dw24 0
                           B   795    
006E4E 000000              B   796    find_hexstringascii 	dw24 0
006E51 000000              B   797    xrr_temp				dw24 0
006E54 00                  B   798    temphex					db 0
006E55 00                  B   799    fillbyte				db 0 
006E56 00                  B   800    ui_im_cache				db 0
                           B   801    
006E57 00 00 00 00 00 00   B   802    commandstring			blkb max_buffer_chars+2
006E5D 00 00 00 00 00 00 
006E63 00 00 00 00 00 00 
006E69 00 00 00 00 00 00 
006E6F 00 00 00 00 00 00 
006E75 00 00 00 00 00 00 
006E7B 00 00 00 00 00 00 
006E81 00 00 00 00 00 00 
006E87 00 00 00 00 00 00 
006E8D 00 00 00 00 00 00 
006E93 00 00 00 00 00 00 
006E99 00 00 00 00 00 00 
006E9F 00 00 00 00 00 00 
006EA5 00 00 00 00 
006EA9 00 00 00 00 00 00   B   803    output_line				blkb max_buffer_chars+2
006EAF 00 00 00 00 00 00 
006EB5 00 00 00 00 00 00 
006EBB 00 00 00 00 00 00 
006EC1 00 00 00 00 00 00 
006EC7 00 00 00 00 00 00 
006ECD 00 00 00 00 00 00 
006ED3 00 00 00 00 00 00 
006ED9 00 00 00 00 00 00 
006EDF 00 00 00 00 00 00 
006EE5 00 00 00 00 00 00 
006EEB 00 00 00 00 00 00 
006EF1 00 00 00 00 00 00 
006EF7 00 00 00 00 
                           B   804    				
006EFB 000000              B   805    os_args_loc				dw24 0
006EFE 000000              B   806    os_args_pos_cache		dw24 0
                           B   807    
006F01 000000              B   808    os_dir_block_cache  	dw24 0
006F04 000000              B   809    os_extcmd_jmp_addr		dw24 0
                           B   810    
006F07 000000              B   811    script_orig_dir			dw24 0
006F0A 000000              B   812    script_dir				dw24 0
006F0D 000000              B   813    script_file_offset		dw24 0
006F10 000000              B   814    script_length			dw24 0
                           B   815    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 278


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006F13 00                  B   816    script_flags			db 0
006F14 00                  B   817    if_condition			db 0
                           B   818    
006F15 000000              B   819    path_parse_loc			dw24 0
                           B   820    
006F18 000000              B   821    original_dir			dw24 0 
006F1B 00                  B   822    original_vol		 	db 0
                           B   823    		
006F1C 00 00 00 00 00 00   B   824    if_name_txt				blkb max_if_chars+2,0
006F22 00 00 00 00 00 00 
006F28 00 00 00 00 00 00 
006F2E 00 00 00 00 00 00   B   825    if_value_txt			blkb max_if_chars+2,0
006F34 00 00 00 00 00 00 
006F3A 00 00 00 00 00 00 
006F40 00 00 00 00 00 00   B   826    if_label_txt			blkb max_if_chars+2,0
006F46 00 00 00 00 00 00 
006F4C 00 00 00 00 00 00 
                           B   827    
                           B   828    
006F52 0000                B   829    char_to_print			db 0,0	; zero terminat
                           B   830    
                           B   831    ;----------------------------------------------
                           B   832    ; Keyboard buffer and registers
                           B   833    ;----------------------------------------------
                           B   834    
006F54 00 00 00 00 00 00   B   835    scancode_buffer			blkb 32,0
006F5A 00 00 00 00 00 00 
006F60 00 00 00 00 00 00 
006F66 00 00 00 00 00 00 
006F6C 00 00 00 00 00 00 
006F72 00 00 
                           B   836    
006F74 00                  B   837    key_buf_wr_idx			db 0
006F75 00                  B   838    key_buf_rd_idx			db 0
006F76 00                  B   839    key_release_mode		db 0		
006F77 00                  B   840    not_currently_used		db 0
006F78 00                  B   841    key_mod_flags			db 0
006F79 00                  B   842    current_scancode		db 0
006F7A 00                  B   843    current_asciicode		db 0
                           B   844    
                           B   845    ;----------------------------------------------
                           B   846    ; Mouse related registers
                           B   847    ;----------------------------------------------
                           B   848    
006F7B 00                  B   849    mouse_id				db 0
006F7C 00                  B   850    mouse_packet_size		db 0
                           B   851    
006F7D 00 00 00 00         B   852    mouse_packet			blkb 4,0			; t
006F81 00                  B   853    mouse_packet_index		db 0				;
006F82 00                  B   854    mouse_buttons			db 0				;
006F83 000000              B   855    mouse_disp_x			dw24 0				; c
006F86 000000              B   856    mouse_disp_y			dw24 0				; c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 279


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006F89 000000              B   857    mouse_abs_x				dw24 0
006F8C 000000              B   858    mouse_abs_y				dw24 0
006F8F 00                  B   859    mouse_wheel				db 0				; m
006F90 00                  B   860    mouse_updated			db 0
                           B   861    
006F91 800200              B   862    mouse_window_size_x		dw24 640			; n
006F94 E00100              B   863    mouse_window_size_y		dw24 480			; i
                           B   864    
006F97 00                  B   865    os_pointer_enable		db 0
006F98 000000              B   866    os_pointer_definition	dw24 0				
006F9B 000000              B   867    os_pointer_height		dw24 0
006F9E 00                  B   868    os_pointer_palette		db 0
                           B   869    
                           B   870    ;----------------------------------------------
       00006E39            B   871    first_os_var			equ cursor_y
006F9F 00                  B   872    last_os_var				db 0
                           B   873    ;----------------------------------------------
                           B   874    
                           B   875    ;==============================================
                           B   876    ; Default environment variables
                           B   877    ;==============================================
                           B   878    
006FA0 4552524F 523D3030   B   879    default_envars			db "ERROR=00",0
006FA8 00 
006FA9 50415448 3D434F4D   B   880    						db "PATH=COMMANDS UTILS
006FB1 4D414E44 53205554 
006FB9 494C5300 
006FBD FF                  B   881    						db 0ffh
006FBE 000000              B   882    envar_top_loc			dw24 0 					                           B   883    
                           B   884    ;==============================================
                           B   885    
                           B     0    	include		'phil_font_packed.asm'			006FC1                     B     1    packed_font_start
006FC1 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006FC9 3C3C1800 181800EE 
006FD1 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006FD9 6CFE6C6C 00187EE0 
006FE1 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006FE9 3870E6C6 0078ECEC 
006FF1 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006FF9 01000518 30016003 
007001 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
007009 18300010 5438FE38 
007011 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
007019 18010007 38387001 
007021 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
007029 0000060E 1C3870E0 
007031 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
007039 00387801 38047C00 
007041 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
007049 FE0C180C 0ECE7C00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 280


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
007051 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
007059 FEE0FC01 0E03FC00 
007061 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
007069 FE060C18 01380300 
007071 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
007079 7C01CE03 7E0E7C01 
007081 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
007089 00033030 00303060 
007091 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
007099 00037E00 7E010003 
0070A1 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
0070A9 7CEE0E3C 38003800 
0070B1 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
0070B9 7CE6E6FE 01E60300 
0070C1 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
0070C9 7CE601E0 03E67C00 
0070D1 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
0070D9 E0F8E0E0 FE00FEE0 
0070E1 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
0070E9 E0EEE6E6 7C0001E6 
0070F1 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
0070F9 38057C00 7E011C04 
007101 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
007109 E6030001 E006FE00 
007111 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
007119 E6F6FEFE EEE6E600 
007121 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
007129 E603FCE0 E0007C01 
007131 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
007139 E603FCE6 E6007CEE 
007141 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
007149 38060001 E6067C00 
007151 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
007159 04D6FE6C 00E6E66C 
007161 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
007169 7E06FC00 FE0E1C38 
007171 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
007179 3C00C0E0 70381C0E 
007181 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
007189 10386CC6 01000BFE 
007191 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
007199 E67E0000 E0E0FCE6 
0071A1 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
0071A9 037C0000 06067EE6 
0071B1 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
0071B9 E07C0000 3E70FC01 
0071C1 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
0071C9 7E067C00 E0E0FC01 
0071D1 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
0071D9 387C0000 1C00011C 
0071E1 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
0071E9 EE000078 0138047C 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 281


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
0071F1 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
0071F9 010003FC 01E60401 
007201 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
007209 0003FCE6 E6FCE0E0 
007211 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
007219 0000DCE6 01E00301 
007221 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
007229 00387E01 38031E01 
007231 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
007239 0301E603 6C380100 
007241 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
007249 03E67C38 7CE60100 
007251 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
007259 00FE1C38 70FE003C 
007261 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
007269 18070078 18180C18 
007271 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
007279 0501FE07 0100FF01 
007281 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
007289 BC010029 7CC6BAA2 
007291 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
007299 060100FF 0100FF01 
0072A1 009C                B    48                    db 000h,09Ch
0072A3                     B    49    packed_font_end
                           A  3892    
                           A  3893    
       00000014            A  3894    default_pointer_height equ 20
                           A  3895    
                           B     0    	include		'default_pointer_packed.asm'	0072A3                     B     1    default_pointer:
0072A3 03010103 000E0301   B     2                    db 003h,001h,001h,003h,000h,00E
0072AB 0303000D 01020101 
0072B3 03000C01 02020101   B     3                    db 003h,000h,00Ch,001h,002h,002
0072BB 03000B01 03020301 
0072C3 0103000A 01030204   B     4                    db 001h,003h,000h,00Ah,001h,003
0072CB 01010300 09010302 
0072D3 05010103 00080103   B     5                    db 005h,001h,001h,003h,000h,008
0072DB 02060101 03000701 
0072E3 03020701 01030006   B     6                    db 003h,002h,007h,001h,001h,003
0072EB 01030208 01010300 
0072F3 05010302 09010103   B     7                    db 005h,001h,003h,002h,009h,001
0072FB 00040103 020A0101 
007303 03000301 03020603   B     8                    db 003h,000h,003h,001h,003h,002
00730B 01060300 03010302 
007313 03010202 01010300   B     9                    db 003h,001h,002h,002h,001h,001
00731B 07010202 01000102 
007323 02010300 07010201   B    10                    db 002h,001h,003h,000h,007h,001
00732B 00000102 02010103 
007333 00060101 03000401   B    11                    db 000h,006h,001h,001h,003h,000
00733B 02020103 000C0102 
007343 02010103 000C0301   B    12                    db 002h,001h,001h,003h,000h,00C
00734B 04030015 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Dec-12     23:06:46     page: 282


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3897    
00734F 0102                A  3898    default_pointer_colours	db 1,2					007351 0000FF0F            A  3899    						dw 000h,0fffh
                           A  3900    
                           A  3901    ;==============================================
                           A  3902    	
007355 00                  A  3903    os_max_addr		db 0							                           A  3904    	
                           A  3905    
                           A  3906    ;==============================================
                           A  3907    
                           A  3908    				end	
                           A  3909    				
                           A  3910    ;==============================================
                           A  3911    	


Errors: 0
Warnings: 0
Lines Assembled: 14272
