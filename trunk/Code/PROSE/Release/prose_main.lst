Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000005            B    12    port_irq_flags			equ 005h
       00000006            B    13    port_nmi_ack			equ 006h
       00000007            B    14    port_ps2_ctrl			equ 007h
       00000008            B    15    port_selector			equ 008h
       00000006            B    16    port_mouse_data			equ 006h
       00000009            B    17    port_clear_flags		equ 009h
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
                           B    48    
                           B    49    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000033            A    14    prose_version			equ 33h
       00000107            A    15    amoeba_version_required	equ 107h
                           A    16    
       00000A00            A    17    os_location			 	equ 0a00h
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
                           A    35    			
000A10 C3 4E 0A 00         A    36    				jp os_first_run					000A14 C3 A4 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
                           A    42    
000A20                     A    43    prose_kernal
                           A    44    
                           A    45    ; External apps can call kernal routines by doi
                           A    46    ; Set A to kernal routine number required (see 
                           A    47    ; (this routine is always located at os_locatio
                           A    48    
000A20 D9                  A    49    				exx
000A21 DD22 78 60 00       A    50    				ld (kernal_ix_cache),ix
000A26 DD21 99 54 00       A    51    				ld ix,kernal_table				000A2B 11030000            A    52    				ld de,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F 57                  A    53    				ld d,a
000A30 ED5C                A    54    				mlt de
000A32 DD19                A    55    				add ix,de						000A34 DD3700              A    56    				ld ix,(ix)						                           A    57    				
000A37 E3                  A    58    				ex (sp),hl
000A38 7D                  A    59    				ld a,l							000A39 E601                A    60    				and 1							000A3B E3                  A    61    				ex (sp),hl
000A3C D9                  A    62    				exx
000A3D FDE5                A    63    				push iy
000A3F CD 4C 0A 00         A    64    				call kr_jump					000A43 FDE1                A    65    				pop iy							000A45 DD2A 78 60 00       A    66    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    67    				ret.l							                           A    68    				
000A4C DDE9                A    69    kr_jump			jp (ix)							                           A    70    						
                           A    71    ;----------------------------------------------
                           A    72    
                           A    73    ; *******************
                           A    74    ; *   START UP OS   *
                           A    75    ; *******************
                           A    76    
000A4E                     A    77    os_first_run
                           A    78    	
000A4E B7                  A    79    				or a							000A4F 20 05               A    80    				jr nz,os_cold_start		
000A51 78                  A    81    				ld a,b
000A52 32 00 5F 00         A    82    				ld (boot_drive),a				                           A    83    
000A56                     A    84    os_cold_start
000A56 ED7D                A    85    				stmix							000A58 F3                  A    86    				di								000A59 ED5E                A    87    				im 2							000A5B AF                  A    88    				xor a
000A5C ED6D                A    89    				ld MB,a							000A5E 4031FFFF            A    90    				ld.sis sp,0ffffh				000A62 31FFFF07            A    91    				ld sp,sys_mem_top				                           A    92    
000A66 CD 80 3B 00         A    93    				call disable_irqs
000A6A CD 24 3D 00         A    94    				call disable_all_nmis
                           A    95    				
000A6E 3A 45 60 00         A    96    				ld a,(first_run)				000A72 B7                  A    97    				or a
000A73 28 11               A    98    				jr z,dont_resetkb
000A75 CD C7 40 00         A    99    				call init_keyboard
000A79 28 06               A   100    				jr z,kb_ok
000A7B 21 46 60 00         A   101    				ld hl,devices_connected
000A7F CB86                A   102    				res 0,(hl)
000A81 AF                  A   103    kb_ok			xor a
000A82 32 45 60 00         A   104    				ld (first_run),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A86                     A   105    dont_resetkb
                           A   106    				
000A86 21 50 63 00         A   107    				ld hl,packed_font_start
000A8A 11000080            A   108    				ld de,vram_a_addr
000A8E 01 E2 02 00         A   109    				ld bc,packed_font_end-packed_fo
000A92 CD D2 15 00         A   110    				call unpack_rle
000A96 CD 84 35 00         A   111    				call convert_font
                           A   112    
000A9A CD D5 36 00         A   113    				call test_amoeba_vers
                           A   114    				
000A9E 21 78 60 00         A   115    				ld hl,os_variables				000AA2 01 CA 01 00         A   116    				ld bc,last_os_var-os_variables
000AA6 AF                  A   117    				xor a
000AA7 CD 87 15 00         A   118    				call os_bchl_memfill
                           A   119    	
000AAB CD 06 40 00         A   120    				call hwsc_default_hw_settings
000AAF CD 5B 43 00         A   121    				call hwsc_disable_audio
                           A   122    				
000AB3 3A 78 5E 00         A   123    				ld a,(video_mode)
000AB7 CD 60 15 00         A   124    				call os_set_vmode				                           A   125    				
000ABB 21 7D 55 00         A   126    				ld hl,welcome_message			000ABF CD 1B 0F 00         A   127    				call os_print_string
                           A   128    				
000AC3 CD C5 36 00         A   129    				call os_get_mem_high			000AC7 EB                  A   130    				ex de,hl
000AC8 CD FB 12 00         A   131    				call os_show_hex_address
                           A   132    
000ACC CD C3 13 00         A   133    				call os_new_line
000AD0 CD C3 13 00         A   134    				call os_new_line
000AD4 CD 29 32 00         A   135    				call os_cmd_vers				000AD8 CD 1D 32 00         A   136    				call os_cmd_remount				                           A   137    
000ADC CD C3 13 00         A   138    				call os_new_line				                           A   139    
000AE0 CD 85 41 00         A   140    				call purge_keyboard
                           A   141    				
000AE4 CD 4B 3B 00         A   142    				call set_irq_vector
000AE8 CD 5D 3B 00         A   143    				call enable_os_irqs
000AEC FB                  A   144    				ei
000AED CD 04 3D 00         A   145    				call set_nmi_vector
                           A   146    				
000AF1 21 46 60 00         A   147    				ld hl,devices_connected			000AF5 CB46                A   148    				bit 0,(hl)
000AF7 20 08               A   149    				jr nz,kb_present
000AF9 21 00 5B 00         A   150    				ld hl,no_keyboard_msg
000AFD CD FA 13 00         A   151    				call os_show_packed_text
000B01                     A   152    kb_present				
000B01 21 CD 55 00         A   153    				ld hl,startup_script_fn
000B05 22 A4 61 00         A   154    				ld (os_args_loc),hl
000B09 CD 5A 32 00         A   155    				call os_cmd_exec				                           A   156    									
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0D 3A 44 60 00         A   157    				ld a,(frozen)					000B11 B7                  A   158    				or a
000B12 28 11               A   159    				jr z,os_main_loop
000B14 AF                  A   160    				xor a
000B15 32 44 60 00         A   161    				ld (frozen),a
000B19 21 25 56 00         A   162    				ld hl,nmi_freeze_txt
000B1D CD 1B 0F 00         A   163    				call os_print_string
000B21 CD 74 2D 00         A   164    				call os_cmd_r
                           A   165    				
                           A   166    
                           A   167    ;==============================================
                           A   168    
000B25 CD F6 3F 00         A   169    os_main_loop	call hwsc_wait_vrt				                           A   170    
000B29 CD 6C 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B2D CD FC 43 00         A   173    				call os_get_key_press
000B31 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B33 32 17 62 00         A   176    				ld (current_scancode),a
000B37 78                  A   177    				ld a,b
000B38 32 18 62 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B3C CD D5 3E 00         A   180    				call hwsc_remove_cursor
000B40 3E18                A   181    				ld a,24							000B42 32 E5 60 00         A   182    				ld (cursorflashtimer),a			000B46 AF                  A   183    				xor a
000B47 32 E6 60 00         A   184    				ld (cursor_status),a
                           A   185    				
000B4B 3A 17 62 00         A   186    				ld a,(current_scancode)			000B4F FE70                A   187    				cp 70h
000B51 20 0C               A   188    				jr nz,os_notins
000B53 3A A0 5E 00         A   189     				ld a,(overwrite_mode)
000B57 EE01                A   190    				xor 1
000B59 32 A0 5E 00         A   191    				ld (overwrite_mode),a
000B5D 18 C6               A   192    				jr os_main_loop
                           A   193    
000B5F 21 E3 60 00         A   194    os_notins		ld hl,cursor_x					000B63 FE6B                A   195    				cp 06bh			
000B65 20 0E               A   196    				jr nz,os_ntlft
000B67 35                  A   197    				dec (hl)
000B68 7E                  A   198    				ld a,(hl)
000B69 FEFF                A   199    				cp 0ffh	
000B6B 20 B8               A   200    				jr nz,os_main_loop
000B6D 3A A6 5E 00         A   201    				ld a,(charmap_columns)
000B71 3D                  A   202    				dec a
000B72 77                  A   203    				ld (hl),a						000B73 18 B0               A   204    				jr os_main_loop
                           A   205    
000B75 FE74                A   206    os_ntlft		cp 074h							000B77 20 0C               A   207    				jr nz,os_ntrig
000B79 34                  A   208    				inc (hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B7A 3A A6 5E 00         A   209    				ld a,(charmap_columns)
000B7E BE                  A   210    				cp (hl)
000B7F 20 A4               A   211    				jr nz,os_main_loop
000B81 3600                A   212    				ld (hl),0						000B83 18 A0               A   213    				jr os_main_loop
                           A   214    
000B85 21 E2 60 00         A   215    os_ntrig		ld hl,cursor_y
000B89 FE75                A   216    				cp 075h							000B8B 20 09               A   217    				jr nz,os_ntup
000B8D 35                  A   218    				dec (hl)
000B8E CB7E                A   219    				bit 7,(hl)
000B90 28 93               A   220    				jr z,os_main_loop
000B92 3600                A   221    				ld (hl),0						000B94 18 8F               A   222    				jr os_main_loop
                           A   223    
000B96 FE72                A   224    os_ntup			cp 072h
000B98 20 12               A   225    				jr nz,os_ntdwn					000B9A 34                  A   226    				inc (hl)
000B9B 3A A3 5E 00         A   227    				ld a,(charmap_rows)
000B9F BE                  A   228    				cp (hl)
000BA0 20 83               A   229    				jr nz,os_main_loop
000BA2 3D                  A   230    				dec a
000BA3 77                  A   231    				ld (hl),a						000BA4 CD 61 3E 00         A   232    				call hwsc_scroll_up
000BA8 C3 25 0B 00         A   233    				jr os_main_loop
                           A   234    
000BAC FE71                A   235    os_ntdwn		cp 071h							000BAE 20 08               A   236    				jr nz,os_nodel		
000BB0 3A E3 60 00         A   237    				ld a,(cursor_x)					000BB4 47                  A   238    				ld b,a
000BB5 04                  A   239    				inc b
000BB6 18 13               A   240    				jr os_chrbk
                           A   241    
000BB8 FE66                A   242    os_nodel		cp 066h							000BBA 20 17               A   243    				jr nz,os_nbksp
000BBC 3A E3 60 00         A   244    				ld a,(cursor_x)					000BC0 B7                  A   245    				or a							000BC1 CA 25 0B 00         A   246    				jp z,os_main_loop
000BC5 47                  A   247    				ld b,a
000BC6 3D                  A   248    				dec a
000BC7 32 E3 60 00         A   249    				ld (cursor_x),a					000BCB CD 5B 3F 00         A   250    os_chrbk		call hwsc_chars_left			000BCF C3 25 0B 00         A   251    				jp os_main_loop
                           A   252    
000BD3 FE5A                A   253    os_nbksp		cp 05ah							000BD5 CA 1D 0C 00         A   254    				jp z,os_enter_pressed
                           A   255    	
000BD9 3A 18 62 00         A   256    				ld a,(current_asciicode)		000BDD FE20                A   257    				cp 32							000BDF 38 38               A   258    				jr c,os_nvdun					                           A   259    
000BE1 FE7B                A   260    				cp 07bh							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BE3 30 12               A   261    				jr nc,os_gtcha					000BE5 FE61                A   262    				cp 061h
000BE7 38 04               A   263    				jr c,os_ntupc
000BE9 D620                A   264    				sub 020h
000BEB 18 0A               A   265    				jr os_gtcha
000BED FE5B                A   266    os_ntupc		cp 05bh
000BEF 30 06               A   267    				jr nc,os_gtcha
000BF1 FE41                A   268    				cp 041h
000BF3 38 02               A   269    				jr c,os_gtcha
000BF5 C620                A   270    				add a,020h
000BF7 57                  A   271    os_gtcha		ld d,a							000BF8 3A A0 5E 00         A   272    				ld a,(overwrite_mode)			000BFC B7                  A   273    				or a
000BFD CC 94 3F 00         A   274    				call z,hwsc_chars_right
                           A   275    				
000C01 ED4B E2 60 00       A   276    os_schi			ld bc,(cursor_pos)				000C06 7A                  A   277    				ld a,d							000C07 CD 9C 3E 00         A   278    				call hwsc_plot_char		
000C0B 21 E3 60 00         A   279    				ld hl,cursor_x					000C0F 34                  A   280    				inc (hl)
000C10 3A A6 5E 00         A   281    				ld a,(charmap_columns)
000C14 BE                  A   282    				cp (hl)							000C15 20 02               A   283    				jr nz,os_nvdun
000C17 3600                A   284    				ld (hl),0
                           A   285    
000C19 C3 25 0B 00         A   286    os_nvdun		jp os_main_loop
                           A   287    	
                           A   288    
                           A   289    ;----------------------------------------------
                           A   290    
000C1D                     A   291    os_enter_pressed
                           A   292    	
000C1D CD D7 3F 00         A   293    				call hwsc_charline_to_command_s
                           A   294    
000C21 AF                  A   295    				xor a
000C22 32 E3 60 00         A   296    				ld (cursor_x),a					000C26 21 E2 60 00         A   297    				ld hl,cursor_y					000C2A 34                  A   298    				inc (hl)
000C2B 3A A3 5E 00         A   299    				ld a,(charmap_rows)
000C2F BE                  A   300    				cp (hl)
000C30 20 06               A   301    				jr nz,os_esdok
000C32 3D                  A   302    				dec a
000C33 77                  A   303    				ld (hl),a
000C34 CD 61 3E 00         A   304    				call hwsc_scroll_up
                           A   305    
000C38 CD 40 0C 00         A   306    os_esdok		call os_parse_cmd_chk_ps		                           A   307    
000C3C C3 25 0B 00         A   308    post_csb		jp os_main_loop
                           A   309    
                           A   310    	
                           A   311    ;----------------------------------------------
                           A   312    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   313    
000C40                     A   314    os_parse_cmd_chk_ps
                           A   315    
000C40 CD 53 0C 00         A   316    				call os_parse_command_line
000C44 FEFE                A   317    				cp 0feh							000C46 C0                  A   318    				ret nz
000C47 01500000            A   319    				ld bc,max_buffer_chars			000C4B 11 00 61 00         A   320    				ld de,commandstring				000C4F EDB0                A   321    				ldir
000C51 18 ED               A   322    				jr os_parse_cmd_chk_ps
                           A   323    
                           A   324    	
                           A   325    ;----------------------------------------------
                           A   326    	
000C53                     A   327    os_parse_command_line
                           A   328    
000C53 3E01                A   329    				ld a,1
000C55 32 7B 60 00         A   330    				ld (store_registers),a			                           A   331    
000C59 21 00 61 00         A   332    				ld hl,commandstring				000C5D 0650                A   333    				ld b,max_buffer_chars			000C5F CD B9 0F 00         A   334    				call os_scan_for_non_space		000C63 B7                  A   335    				or a							000C64 C8                  A   336    				ret z
000C65 11 63 56 00         A   337    				ld de,dictionary-1				000C69 D5                  A   338    				push de
000C6A D1                  A   339    compcstr		pop de
000C6B E5                  A   340    				push hl
000C6C FDE1                A   341    				pop iy
000C6E 13                  A   342    notacmd			inc de
000C6F 1A                  A   343    				ld a,(de)
000C70 FE01                A   344    				cp 1							000C72 CA 0C 0D 00         A   345    				jp z,os_no_kernal_command_found
000C76 CB7F                A   346    				bit 7,a
000C78 28 F4               A   347    				jr z,notacmd					000C7A E67F                A   348    				and 07fh
000C7C 4F                  A   349    				ld c,a							000C7D D5                  A   350    				push de
000C7E 13                  A   351    cmdnscan		inc de
000C7F FD7E00              A   352    				ld a,(iy)						000C82 CD 24 12 00         A   353    				call os_uppercasify
000C86 47                  A   354    				ld b,a
000C87 1A                  A   355    				ld a,(de)						000C88 B8                  A   356    				cp b
000C89 FD23                A   357    				inc iy
000C8B 28 F1               A   358    				jr z,cmdnscan					000C8D 1A                  A   359    nomatch			ld a,(de)						000C8E B7                  A   360    				or a
000C8F 28 04               A   361    				jr z,posmatch					000C91 CB7F                A   362    				bit 7,a			
000C93 28 D5               A   363    				jr z,compcstr					000C95 FD7EFF              A   364    posmatch		ld a,(iy-1)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C98 FE20                A   365    				cp 32
000C9A 20 CE               A   366    				jr nz,compcstr					                           A   367    	
000C9C D1                  A   368    				pop de				
000C9D FDE5                A   369    				push iy							000C9F E1                  A   370    				pop hl
000CA0 CD B9 0F 00         A   371    				call os_scan_for_non_space
000CA4 22 A4 61 00         A   372    				ld (os_args_loc),hl				                           A   373    	
000CA8 21 02 5C 00         A   374    				ld hl,os_cmd_locs
000CAC 11030000            A   375    				ld de,3
000CB0 51                  A   376    				ld d,c
000CB1 ED5C                A   377    				mlt de							000CB3 19                  A   378    				add hl,de
000CB4 ED37                A   379    				ld ix,(hl)						                           A   380    
000CB6 2A A4 61 00         A   381    				ld hl,(os_args_loc)				000CBA CD EE 0E 00         A   382    				call os_run_command				                           A   383    
000CBE C8                  A   384    				ret z							000CBF B7                  A   385    				or a
000CC0 20 13               A   386    				jr nz,show_erm
000CC2 78                  A   387    os_hwe1			ld a,b							000CC3 21 67 59 00         A   388    os_hwerr		ld hl,hex_byte_txt		
000CC7 CD 66 10 00         A   389    				call hexbyte_to_ascii	
000CCB 21 F3 5A 00         A   390    				ld hl,hw_err_msg
000CCF CD FA 13 00         A   391    				call os_show_packed_text
000CD3 AF                  A   392    				xor a
000CD4 C9                  A   393    				ret
                           A   394    
000CD5 01000000            A   395    show_erm		ld bc,0							000CD9 4F                  A   396    				ld c,a
000CDA D680                A   397    				sub 080h						000CDC 38 11               A   398    				jr c,no_trans					000CDE 21 27 5D 00         A   399    				ld hl,kernal_error_code_transla
000CE2 CB77                A   400    				bit 6,a							000CE4 28 06               A   401    				jr z,not_fs_err					000CE6 21 35 5D 00         A   402    				ld hl,fs_error_code_translation
000CEA D640                A   403    				sub 040h
000CEC 4F                  A   404    not_fs_err		ld c,a
000CED 09                  A   405    				add hl,bc
000CEE 4E                  A   406    				ld c,(hl)
000CEF 0600                A   407    no_trans		ld b,0
000CF1 21 68 5C 00         A   408    				ld hl,packed_msg_list
000CF5 7E                  A   409    findmsg			ld a,(hl)
000CF6 FEFF                A   410    				cp 0ffh
000CF8 C8                  A   411    				ret z							000CF9 23                  A   412    				inc hl
000CFA B7                  A   413    				or a
000CFB 20 F8               A   414    				jr nz,findmsg					000CFD 04                  A   415    				inc b
000CFE 79                  A   416    				ld a,c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CFF B8                  A   417    				cp b
000D00 20 F3               A   418    				jr nz,findmsg
000D02 CD FA 13 00         A   419    				call os_show_packed_text
000D06 CD C3 13 00         A   420    				call os_new_line
000D0A AF                  A   421    				xor a
000D0B C9                  A   422    				ret
                           A   423    	
                           A   424    
000D0C                     A   425    os_no_kernal_command_found
                           A   426    
000D0C 3E30                A   427    				ld a,030h						000D0E 32 09 5F 00         A   428    fvolcmd			ld (vol_txt+4),a				000D12 F5                  A   429    				push af			
000D13 11 06 5F 00         A   430    				ld de,vol_txt+1		
000D17 0605                A   431    				ld b,5			
000D19 CD EA 11 00         A   432    				call os_compare_strings	
000D1D 28 08               A   433    				jr z,gotvolcmd		
000D1F F1                  A   434    				pop af				
000D20 3C                  A   435    				inc a			
000D21 FE38                A   436    				cp 030h+max_volumes		
000D23 20 E9               A   437    				jr nz,fvolcmd		
000D25 18 0B               A   438    				jr novolcmd		
000D27 F1                  A   439    gotvolcmd		pop af
000D28 D630                A   440    				sub 030h
000D2A CD C7 1A 00         A   441    				call os_change_volume
000D2E C3 D3 0E 00         A   442    				jp extcmderf					                           A   443    		
                           A   444    
                           A   445    
000D32 7E                  A   446    novolcmd		ld a,(hl)						000D33 FE47                A   447    				cp 'G'							000D35 20 29               A   448    				jr nz,not_g_cmd					000D37 23                  A   449    				inc hl
000D38 7E                  A   450    				ld a,(hl)
000D39 2B                  A   451    				dec hl
000D3A FE20                A   452    				cp ' '
000D3C 20 22               A   453    				jr nz,not_g_cmd
000D3E 23                  A   454    				inc hl
000D3F CD B9 0F 00         A   455    				call os_scan_for_non_space
000D43 22 A4 61 00         A   456    				ld (os_args_loc),hl				000D47 B7                  A   457    				or a
000D48 20 04               A   458    				jr nz,gotgargs
000D4A 3E1F                A   459    				ld a,01fh						000D4C 18 87               A   460    				jr show_erm
000D4E CD A5 10 00         A   461    gotgargs		call ascii_to_hex_no_scan		000D52 B7                  A   462    				or a
000D53 20 80               A   463    				jr nz,show_erm
000D55 CD 13 3D 00         A   464    				call enable_button_nmi			000D59 D5                  A   465    				push de
000D5A DDE1                A   466    				pop ix			
000D5C C3 EE 0E 00         A   467    				jp os_run_command				                           A   468    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   469    				
                           A   470    
000D60 22 A4 61 00         A   471    not_g_cmd		ld (os_args_loc),hl				000D64 22 A7 61 00         A   472    				ld (os_args_pos_cache),hl
000D68 CD ED 0F 00         A   473    				call os_args_to_fn_append_ezp	                           A   474    	
000D6C CD F8 0E 00         A   475    				call cache_dir_block			                           A   476    
000D70 CD 0F 48 00         A   477    				call fs_check_disk_format		000D74 38 3C               A   478    				jr c,os_ndfxc
000D76 B7                  A   479    				or a							000D77 20 39               A   480    				jr nz,os_ndfxc
                           A   481    	
000D79 CD B1 49 00         A   482    				call fs_open_file_command		000D7D DA C3 0C 00         A   483    				jp c,os_hwerr			 		000D81 B7                  A   484    				or a
000D82 28 38               A   485    				jr z,os_gecmd					                           A   486    
000D84 CD 82 49 00         A   487    				call fs_goto_root_dir_command	000D88 21 C4 55 00         A   488    				ld hl,os_dos_cmds_txt
000D8C CD 10 52 00         A   489    				call fs_hl_to_filename
000D90 CD 5D 49 00         A   490    				call fs_change_dir_command		000D94 DA C3 0C 00         A   491    				jp c,os_hwerr
000D98 B7                  A   492    				or a
000D99 20 17               A   493    				jr nz,os_ndfxc					                           A   494    	
000D9B 2A A7 61 00         A   495    				ld hl,(os_args_pos_cache)		000D9F 22 A4 61 00         A   496    				ld (os_args_loc),hl
000DA3 CD ED 0F 00         A   497    				call os_args_to_fn_append_ezp	000DA7 CD B1 49 00         A   498    				call fs_open_file_command		000DAB DA C3 0C 00         A   499    				jp c,os_hwerr
000DAF B7                  A   500    				or a
000DB0 28 0A               A   501    				jr z,os_gecmd
000DB2 CD 04 0F 00         A   502    os_ndfxc		call restore_dir_block			000DB6 3E0B                A   503    				ld a,0bh						000DB8 C3 D5 0C 00         A   504    				jp show_erm
                           A   505    
000DBC 2A A4 61 00         A   506    os_gecmd		ld hl,(os_args_loc)				000DC0 CD B9 0F 00         A   507    				call os_scan_for_non_space		000DC4 22 A4 61 00         A   508    				ld (os_args_loc),hl
                           A   509    
000DC8 11100000            A   510    				ld de,16
000DCC CD 37 16 00         A   511    				call os_set_load_length			000DD0 21 32 68 00         A   512    				ld hl,scratch_pad
000DD4 22 70 54 00         A   513    				ld (fs_ez80_address),hl
000DD8 CD FC 49 00         A   514    				call fs_read_data_command
000DDC DA C3 0C 00         A   515    				jp c,os_hwerr					000DE0 B7                  A   516    				or a
000DE1 C2 D5 0C 00         A   517    				jp nz,show_erm					000DE5 2A 34 68 00         A   518    				ld hl,(scratch_pad+2)
000DE9 1150524F            A   519    				ld de,04f5250h					000DED AF                  A   520    				xor a	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DEE ED52                A   521    				sbc hl,de
000DF0 28 0A               A   522    				jr z,loc_header
000DF2 CD 04 0F 00         A   523    				call restore_dir_block			000DF6 3E1A                A   524    				ld a,01ah						000DF8 C3 D5 0C 00         A   525    				jp show_erm						                           A   526    				
000DFC 3A 41 68 00         A   527    loc_header		ld a,(scratch_pad+15)			000E00 32 77 60 00         A   528    				ld (store_adl),a			
000E04 CD B1 49 00         A   529    				call fs_open_file_command		000E08 DA C3 0C 00         A   530    				jp c,os_hwerr
000E0C B7                  A   531    				or a	
000E0D 20 A3               A   532    				jr nz,os_ndfxc
000E0F 2A 37 68 00         A   533    				ld hl,(scratch_pad+5)			000E13 22 70 54 00         A   534    				ld (fs_ez80_address),hl
000E17 ED5B 47 60 00       A   535    				ld de,(sysram_os_highest)
000E1C AF                  A   536    				xor a
000E1D E5                  A   537    				push hl
000E1E ED52                A   538    				sbc hl,de
000E20 E1                  A   539    				pop hl
000E21 30 0A               A   540    				jr nc,osmemok
000E23 CD 04 0F 00         A   541    				call restore_dir_block			000E27 3E26                A   542    				ld a,026h
000E29 C3 D5 0C 00         A   543    				jp show_erm
                           A   544    
000E2D ED5B 3D 68 00       A   545    osmemok			ld de,(scratch_pad+11)			000E32 7B                  A   546    				ld a,e
000E33 B2                  A   547    				or d
000E34 28 14               A   548    				jr z,noprov_spec				000E36 21330000            A   549    				ld hl,prose_version
000E3A AF                  A   550    				xor a
000E3B 40ED52              A   551    				sbc.sis hl,de					000E3E 30 0A               A   552    				jr nc,noprov_spec
000E40 CD 04 0F 00         A   553    				call restore_dir_block
000E44 3E1B                A   554    				ld a,01bh						000E46 C3 D5 0C 00         A   555    				jp show_erm
                           A   556    				
000E4A CD 4B 40 00         A   557    noprov_spec		call hwsc_get_version			000E4E 2A 3F 68 00         A   558    				ld hl,(scratch_pad+13)			000E52 EB                  A   559    				ex de,hl						000E53 7B                  A   560    				ld a,e
000E54 B2                  A   561    				or d
000E55 28 10               A   562    				jr z,nohwv_spec					000E57 AF                  A   563    				xor a
000E58 40ED52              A   564    				sbc.sis hl,de					000E5B 30 0A               A   565    				jr nc,nohwv_spec
000E5D CD 04 0F 00         A   566    				call restore_dir_block
000E61 3E2B                A   567    				ld a,02bh						000E63 C3 D5 0C 00         A   568    				jp show_erm
                           A   569    
000E67 ED5B 3A 68 00       A   570    nohwv_spec		ld de,(scratch_pad+8)			000E6C 3A 3C 68 00         A   571    				ld a,(scratch_pad+10)			000E70 B2                  A   572    				or d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E71 B3                  A   573    				or e
000E72 28 04               A   574    				jr z,readcode					000E74 CD 37 16 00         A   575    				call os_set_load_length			                           A   576    		
000E78 2A 37 68 00         A   577    readcode		ld hl,(scratch_pad+5)
000E7C 22 AD 61 00         A   578    				ld (os_extcmd_jmp_addr),hl		000E80 CD FC 49 00         A   579    				call fs_read_data_command
000E84 F5                  A   580    				push af
000E85 CD 04 0F 00         A   581    				call restore_dir_block			000E89 F1                  A   582    				pop af
000E8A DA C3 0C 00         A   583    				jp c,os_hwerr					000E8E B7                  A   584    				or a
000E8F C2 D5 0C 00         A   585    				jp nz,show_erm					                           A   586    	
000E93 CD 13 3D 00         A   587    				call enable_button_nmi			000E97 DD2A AD 61 00       A   588    				ld ix,(os_extcmd_jmp_addr)		000E9C 2A A4 61 00         A   589    				ld hl,(os_args_loc)				000EA0 C3 EE 0E 00         A   590    				jp os_run_command				                           A   591    
000EA4 F5                  A   592    extcmd_return	push af							000EA5 CD 06 40 00         A   593    				call hwsc_default_hw_settings	000EA9 3A 7B 60 00         A   594    				ld a,(store_registers)
000EAD B7                  A   595    				or a
000EAE 28 06               A   596    				jr z,skp_strg
000EB0 F1                  A   597    				pop af
000EB1 CD 3C 13 00         A   598    				call os_store_CPU_regs			000EB5 F5                  A   599    				push af
000EB6 F1                  A   600    skp_strg		pop af
                           A   601    
000EB7 F5                  A   602    cntuasr			push af
000EB8 21 32 68 00         A   603    				ld hl,scratch_pad				000EBC CD 66 10 00         A   604    				call hexbyte_to_ascii
000EC0 3600                A   605    				ld (hl),0
000EC2 11 32 68 00         A   606    				ld de,scratch_pad
000EC6 21 3D 56 00         A   607    				ld hl,error_txt
000ECA CD 71 1B 00         A   608    				call os_set_envar
000ECE CD 1E 3D 00         A   609    				call disable_button_nmi			000ED2 F1                  A   610    				pop af
000ED3 28 12               A   611    extcmderf		jr z,not_errc					000ED5 B7                  A   612    				or a
000ED6 CA C2 0C 00         A   613    				jp z,os_hwe1					000EDA FEFF                A   614    				cp 0ffh							000EDC CA 56 0A 00         A   615    				jp z,os_cold_start
000EE0 FEFE                A   616    				cp 0feh							000EE2 C8                  A   617    				ret z
000EE3 C3 D5 0C 00         A   618    				jp show_erm						000EE7 FEFF                A   619    not_errc		cp 0ffh							000EE9 CA 56 0A 00         A   620    				jp z,os_cold_start
000EED C9                  A   621    				ret
                           A   622    				
                           A   623    ;----------------------------------------------
                           A   624    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EEE                     A   625    os_run_command									000EEE ED3906              A   626    				out0 (port_nmi_ack),a			000EF1 DD22 7C 60 00       A   627    				ld (com_start_addr),ix			000EF6 DDE9                A   628    				jp (ix)							                           A   629    
                           A   630    ;----------------------------------------------
                           A   631    
000EF8                     A   632    cache_dir_block
                           A   633    
                           A   634    	
000EF8 D5                  A   635    				push de
000EF9 CD 6B 1A 00         A   636    				call fs_get_dir_cluster	
000EFD ED53 AA 61 00       A   637    				ld (os_dir_block_cache),de
000F02 D1                  A   638    				pop de	
000F03 C9                  A   639    				ret
                           A   640    		
                           A   641    
000F04                     A   642    restore_dir_block
                           A   643    
000F04 D5                  A   644    				push de
000F05 ED5B AA 61 00       A   645    				ld de,(os_dir_block_cache)
000F0A CD 77 1A 00         A   646    				call fs_update_dir_cluster
000F0E D1                  A   647    				pop de
000F0F C9                  A   648    				ret
                           A   649    		
                           A   650    ;==============================================
                           A   651    ; Routines called by command line
                           A   652    ;==============================================
                           A   653    
                           A   654    ; Set:-
                           A   655    ; HL to address of string
                           A   656    ; c = y
                           A   657    ; b = x
                           A   658    
000F10                     A   659    ext_print_string
                           A   660    
000F10 CC AE 15 00         A   661    				call z,mbase_hl
000F14 18 05               A   662    				jr os_print_string
                           A   663    
000F16                     A   664    os_print_string_cond
                           A   665    
000F16 CD 1E 1A 00         A   666    				call test_quiet_mode
000F1A C0                  A   667    				ret nz
                           A   668    
000F1B                     A   669    os_print_string
                           A   670    
000F1B D5                  A   671    				push de
000F1C C5                  A   672    				push bc
000F1D ED4B E2 60 00       A   673    				ld bc,(cursor_pos)				000F22 7E                  A   674    prstr_lp		ld a,(hl)
000F23 23                  A   675    				inc hl
000F24 B7                  A   676    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F25 20 09               A   677    				jr nz,prstr_ne
000F27 ED43 E2 60 00       A   678    				ld (cursor_pos),bc
000F2C C1                  A   679    				pop bc
000F2D D1                  A   680    				pop de
000F2E AF                  A   681    				xor a							000F2F C9                  A   682    				ret
                           A   683    
000F30 FE0D                A   684    prstr_ne		cp 13
000F32 20 04               A   685    				jr nz,not_cr
000F34 0600                A   686    				ld b,0
000F36 18 EA               A   687    				jr prstr_lp
000F38 FE0A                A   688    not_cr			cp 10
000F3A 28 12               A   689    				jr z,line_feed				
000F3C FE0B                A   690    				cp 11
000F3E 28 0C               A   691    				jr z,next_line
000F40 CD 9C 3E 00         A   692    				call hwsc_plot_char
000F44 04                  A   693    				inc b
000F45 3A A6 5E 00         A   694    				ld a,(charmap_columns)
000F49 B8                  A   695    				cp b
000F4A 20 D6               A   696    				jr nz,prstr_lp
000F4C 0600                A   697    next_line		ld b,0
000F4E 0C                  A   698    line_feed		inc c
000F4F 3A A3 5E 00         A   699    				ld a,(charmap_rows)
000F53 B9                  A   700    				cp c
000F54 20 CC               A   701    				jr nz,prstr_lp
000F56 0D                  A   702    				dec c
000F57 CD 61 3E 00         A   703    				call hwsc_scroll_up
000F5B 18 C5               A   704    				jr prstr_lp
                           A   705    
                           A   706    ;----------------------------------------------
                           A   707    
000F5D 21 F0 61 00         A   708    os_print_char	ld hl,char_to_print
000F61 77                  A   709    				ld (hl),a
000F62 18 B7               A   710    				jr os_print_string
                           A   711    
                           A   712    ;----------------------------------------------
                           A   713    
000F64 F5                  A   714    home_cursor		push af
000F65 AF                  A   715    				xor a
000F66 32 E3 60 00         A   716    				ld (cursor_x),a
000F6A F1                  A   717    				pop af
000F6B C9                  A   718    				ret
                           A   719    				
                           A   720    ;----------------------------------------------
                           A   721    
000F6C                     A   722    os_cursor_flash
                           A   723    
000F6C 21 E5 60 00         A   724    				ld hl,cursorflashtimer
000F70 34                  A   725    				inc (hl)
000F71 7E                  A   726    				ld a,(hl)
000F72 FE19                A   727    				cp 25
000F74 C0                  A   728    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F75 3600                A   729    				ld (hl),0
000F77 3A E6 60 00         A   730    				ld a,(cursor_status)
000F7B EE01                A   731    				xor 1
000F7D 32 E6 60 00         A   732    				ld (cursor_status),a
000F81 28 15               A   733    				jr z,no_cursor
000F83 3E5F                A   734    				ld a,05fh
000F85 21 A0 5E 00         A   735    				ld hl,overwrite_mode
000F89 CB46                A   736    				bit 0,(hl)
000F8B 28 02               A   737    				jr z,cursor_selected
000F8D 3E7F                A   738    				ld a,07fh
                           A   739    				
000F8F CD 9E 0F 00         A   740    cursor_selected	call os_set_cursor_image
000F93 CD EF 3E 00         A   741    				call hwsc_draw_cursor			000F97 C9                  A   742    				ret
                           A   743    
000F98 CD D5 3E 00         A   744    no_cursor		call hwsc_remove_cursor
000F9C C9                  A   745    				ret
                           A   746    
                           A   747    
                           A   748    ;----------------------------------------------
                           A   749    
000F9D                     A   750    ext_set_cursor_image
                           A   751    
000F9D 7B                  A   752    				ld a,e
                           A   753    				
000F9E                     A   754    os_set_cursor_image
                           A   755    			
000F9E 32 A1 5E 00         A   756    				ld (cursor_image_char),a
000FA2 BF                  A   757    				cp a
000FA3 C9                  A   758    				ret
                           A   759    
                           A   760    ;----------------------------------------------
                           A   761    
000FA4                     A   762    os_next_arg
                           A   763    
000FA4 CD B0 0F 00         A   764    				call os_scan_for_space
000FA8 B7                  A   765    				or a
000FA9 C8                  A   766    				ret z
000FAA CD B9 0F 00         A   767    				call os_scan_for_non_space
000FAE B7                  A   768    				or a
000FAF C9                  A   769    				ret
                           A   770    
                           A   771    
                           A   772    ;----------------------------------------------
                           A   773    	
                           A   774    
000FB0                     A   775    os_scan_for_space
                           A   776    
000FB0 7E                  A   777    os_sfspl 		ld a,(hl)						000FB1 B7                  A   778    				or a							000FB2 C8                  A   779    				ret z
000FB3 FE20                A   780    				cp ' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FB5 C8                  A   781    				ret z
000FB6 23                  A   782    				inc hl
000FB7 18 F7               A   783    				jr os_sfspl
                           A   784    	
                           A   785    
                           A   786    ;----------------------------------------------
                           A   787    	
                           A   788    
000FB9                     A   789    os_scan_for_non_space
                           A   790    
000FB9 2B                  A   791    				dec hl							000FBA 23                  A   792    os_nsplp		inc hl			
000FBB 7E                  A   793    				ld a,(hl)			
000FBC B7                  A   794    				or a			
000FBD C8                  A   795    				ret z							000FBE FE20                A   796    				cp ' '
000FC0 28 F8               A   797    				jr z,os_nsplp
000FC2 C9                  A   798    				ret
                           A   799    	
                           A   800    	
                           A   801    ;----------------------------------------------
                           A   802    
000FC3                     A   803    os_args_to_alt_filename
                           A   804    
000FC3 CD 1D 10 00         A   805    				call os_atfn_pre				000FC7 C8                  A   806    				ret z
000FC8 CD 0A 52 00         A   807    				call fs_hl_to_alt_filename
000FCC 18 09               A   808    				jr os_atfrl
                           A   809    	
                           A   810    	
                           A   811    	
                           A   812    		
000FCE                     A   813    os_args_to_filename
                           A   814    
000FCE CD 1D 10 00         A   815    				call os_atfn_pre				000FD2 C8                  A   816    				ret z
000FD3 CD 10 52 00         A   817    				call fs_hl_to_filename	
                           A   818    
000FD7 7E                  A   819    os_atfrl		ld a,(hl)						000FD8 B7                  A   820    				or a							000FD9 28 0B               A   821    				jr z,os_cfne
000FDB FE20                A   822    				cp 32
000FDD 28 07               A   823    				jr z,os_cfne
000FDF FE2F                A   824    				cp 02fh
000FE1 28 03               A   825    				jr z,os_cfne
000FE3 23                  A   826    				inc hl
000FE4 18 F1               A   827    				jr os_atfrl	
000FE6 22 A4 61 00         A   828    os_cfne			ld (os_args_loc),hl				000FEA 79                  A   829    				ld a,c			
000FEB B7                  A   830    				or a							000FEC C9                  A   831    				ret
                           A   832    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   833    
                           A   834    
                           A   835    
000FED                     A   836    os_args_to_fn_append_ezp
                           A   837    
                           A   838    	
000FED CD 1D 10 00         A   839    				call os_atfn_pre				000FF1 C8                  A   840    				ret z
000FF2 11 7F 60 00         A   841    				ld de,temp_string
000FF6 7E                  A   842    ccmdtlp			ld a,(hl)						000FF7 B7                  A   843    				or a
000FF8 28 0D               A   844    				jr z,goteocmd
000FFA FE20                A   845    				cp ' '
000FFC 28 09               A   846    				jr z,goteocmd
000FFE FE2E                A   847    				cp '.'
001000 28 05               A   848    				jr z,goteocmd
001002 12                  A   849    				ld (de),a
001003 13                  A   850    				inc de
001004 23                  A   851    				inc hl
001005 18 EF               A   852    				jr ccmdtlp
                           A   853    	
001007 E5                  A   854    goteocmd		push hl
001008 21 17 56 00         A   855    				ld hl,ezp_extension_txt
00100C 01050000            A   856    				ld bc,5
001010 EDB0                A   857    				ldir 
001012 21 7F 60 00         A   858    				ld hl,temp_string
001016 CD 10 52 00         A   859    				call fs_hl_to_filename
00101A E1                  A   860    				pop hl
00101B 18 BA               A   861    				jr os_atfrl
                           A   862    	
                           A   863    
                           A   864    
                           A   865    
00101D                     A   866    os_atfn_pre
                           A   867    
00101D 2A A4 61 00         A   868    				ld hl,(os_args_loc)				001021 CD B9 0F 00         A   869    				call os_scan_for_non_space
001025 B7                  A   870    				or a
001026 C8                  A   871    				ret z
001027 7E                  A   872    				ld a,(hl)
001028 FE2F                A   873    				cp 02fh							00102A 20 01               A   874    				jr nz,notfsl1
00102C 23                  A   875    				inc hl
00102D AF                  A   876    notfsl1			xor a
00102E 3C                  A   877    				inc a
00102F C9                  A   878    				ret
                           A   879    
                           A   880    
                           A   881    ;--------- Number <-> String functions --------
                           A   882    
                           A   883    
001030                     A   884    os_clear_output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   885    
001030 C5                  A   886    				push bc
001031 E5                  A   887    				push hl			
001032 21 52 61 00         A   888    				ld hl,output_line
001036 01500000            A   889    				ld bc,max_buffer_chars
00103A 3E20                A   890    				ld a,32
00103C CD 87 15 00         A   891    				call os_bchl_memfill
001040 E1                  A   892    				pop hl
001041 C1                  A   893    				pop bc
001042 C9                  A   894    				ret
                           A   895    	
                           A   896    	
                           A   897    	
001043                     A   898    os_skip_leading_ascii_zeros
                           A   899    
001043 7E                  A   900    slazlp			ld a,(hl)						001044 FE30                A   901    				cp '0'							001046 C0                  A   902    				ret nz
001047 23                  A   903    				inc hl
001048 10 F9               A   904    				djnz slazlp
00104A C9                  A   905    				ret
                           A   906    	
                           A   907    
                           A   908    
00104B                     A   909    os_leading_ascii_zeros_to_spaces
                           A   910    
00104B E5                  A   911    				push hl
00104C 7E                  A   912    clazlp			ld a,(hl)						00104D FE30                A   913    				cp '0'							00104F 20 05               A   914    				jr nz,claze	
001051 3620                A   915    				ld (hl),' '
001053 23                  A   916    				inc hl
001054 10 F6               A   917    				djnz clazlp
001056 E1                  A   918    claze			pop hl
001057 C9                  A   919    				ret
                           A   920    	
                           A   921    
                           A   922    
                           A   923    		
001058                     A   924    n_hexbytes_to_ascii
                           A   925    
001058 1A                  A   926    				ld a,(de)						001059 CD 66 10 00         A   927    				call hexbyte_to_ascii			00105D 1B                  A   928    				dec de
00105E 10 F8               A   929    				djnz n_hexbytes_to_ascii
001060 C9                  A   930    				ret
                           A   931    			
                           A   932    			
                           A   933    
001061                     A   934    ext_hexbyte_to_ascii
                           A   935    
001061 CC AE 15 00         A   936    				call z,mbase_hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001065 7B                  A   937    				ld a,e
                           A   938    
001066                     A   939    hexbyte_to_ascii
                           A   940    
001066 C5                  A   941    				push bc
001067 47                  A   942    				ld b,a							001068 CB3F                A   943    				srl a							00106A CB3F                A   944    				srl a
00106C CB3F                A   945    				srl a
00106E CB3F                A   946    				srl a
001070 CD 82 10 00         A   947    				call hxdigconv
001074 77                  A   948    				ld (hl),a
001075 23                  A   949    				inc hl
001076 78                  A   950    				ld a,b
001077 E60F                A   951    				and 0fh
001079 CD 82 10 00         A   952    				call hxdigconv
00107D 77                  A   953    				ld (hl),a
00107E 23                  A   954    				inc hl
00107F C1                  A   955    				pop bc
001080 AF                  A   956    				xor a							001081 C9                  A   957    				ret
                           A   958    				
001082 C630                A   959    hxdigconv		add a,030h
001084 FE3A                A   960    				cp 03ah
001086 38 02               A   961    				jr c,hxdone
001088 C607                A   962    				add a,7
00108A C9                  A   963    hxdone			ret
                           A   964    
                           A   965    
                           A   966    
                           A   967    
00108B                     A   968    hexword_to_ascii	
                           A   969    
00108B 7A                  A   970    				ld a,d							00108C CD 66 10 00         A   971    				call hexbyte_to_ascii
001090 7B                  A   972    				ld a,e
001091 CD 66 10 00         A   973    				call hexbyte_to_ascii
001095 C9                  A   974    				ret
                           A   975    	
                           A   976    
                           A   977    
                           A   978    
001096                     A   979    ext_ascii_to_hexword
                           A   980    		
001096 CC AE 15 00         A   981    				call z,mbase_hl
                           A   982    
00109A                     A   983    ascii_to_hexword
                           A   984    	
00109A CD B9 0F 00         A   985    				call os_scan_for_non_space		00109E B7                  A   986    				or a
00109F 20 04               A   987    				jr nz,ascii_to_hex_no_scan
0010A1 3E81                A   988    				ld a,081h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010A3 B7                  A   989    				or a
0010A4 C9                  A   990    				ret	
                           A   991    
                           A   992    	
0010A5                     A   993    ascii_to_hex_no_scan
                           A   994    
0010A5 DDE5                A   995    				push ix
0010A7 C5                  A   996    				push bc
0010A8 DD210000 00         A   997    				ld ix,0
0010AD 0606                A   998    				ld b,6							0010AF CD DB 10 00         A   999    athlp			call ascii_to_hex_digit
0010B3 FEF0                A  1000    				cp 0f0h							0010B5 28 17               A  1001    				jr z,athend
0010B7 FED0                A  1002    				cp 0d0h
0010B9 28 13               A  1003    				jr z,athend						0010BB FE10                A  1004    				cp 16
0010BD 30 17               A  1005    				jr nc,badhex					0010BF DD29                A  1006    				add ix,ix						0010C1 DD29                A  1007    				add ix,ix
0010C3 DD29                A  1008    				add ix,ix
0010C5 DD29                A  1009    				add ix,ix
0010C7 DDB5                A  1010    				or a,ixl
0010C9 DD6F                A  1011    				ld ixl,a
0010CB 23                  A  1012    				inc hl
0010CC 10 E1               A  1013    				djnz athlp
0010CE DDE5                A  1014    athend			push ix
0010D0 D1                  A  1015    				pop de
0010D1 AF                  A  1016    				xor a
0010D2 C1                  A  1017    ath_quit		pop bc
0010D3 DDE1                A  1018    				pop ix							0010D5 C9                  A  1019    				ret
                           A  1020    		
0010D6 3E82                A  1021    badhex			ld a,82h						0010D8 B7                  A  1022    				or a
0010D9 18 F7               A  1023    				jr ath_quit
                           A  1024    				
                           A  1025    	
                           A  1026    		
0010DB                     A  1027    ascii_to_hex_digit
                           A  1028    
0010DB 7E                  A  1029    				ld a,(hl)						0010DC FE61                A  1030    				cp 061h
0010DE 38 02               A  1031    				jr c,hc_uppercase
0010E0 D620                A  1032    				sub 020h						0010E2 D63A                A  1033    hc_uppercase	sub 03ah						0010E4 38 02               A  1034    				jr c,zeronine
0010E6 C6F9                A  1035    				add a,0f9h
0010E8 C60A                A  1036    zeronine		add a,0ah
0010EA C9                  A  1037    				ret
                           A  1038    
                           A  1039    
                           A  1040    ;--------- Text Input / Non-numeric string func
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1041    
                           A  1042    ; Waits for user to enter a string of character
                           A  1043    ; Before calling, set:  HL = destination of str
                           A  1044    ;                        E = max number of char
                           A  1045    ; Returns:   A  = number of characters in enter
                           A  1046    
                           A  1047    
0010EB                     A  1048    ext_user_input
0010EB CC AE 15 00         A  1049    				call z,mbase_hl
                           A  1050    				
0010EF                     A  1051    os_user_input
0010EF AF                  A  1052    				xor a
0010F0 32 73 5E 00         A  1053    				ld (ui_index),a
0010F4 22 75 5E 00         A  1054    				ld (ui_string_addr),hl
0010F8 7B                  A  1055    				ld a,e
0010F9 32 74 5E 00         A  1056    				ld (ui_maxchars),a
                           A  1057    				
0010FD 3A A0 5E 00         A  1058    				ld a,(overwrite_mode)
001101 32 FF 60 00         A  1059    				ld (ui_im_cache),a
001105 AF                  A  1060    				xor a
001106 32 A0 5E 00         A  1061    				ld (overwrite_mode),a			                           A  1062    				
00110A CD EF 3E 00         A  1063    ui_loop			call hwsc_draw_cursor			00110E CD A1 43 00         A  1064    				call os_wait_key_press			001112 32 17 62 00         A  1065    				ld (current_scancode),a
001116 78                  A  1066    				ld a,b
001117 32 18 62 00         A  1067    				ld (current_asciicode),a		00111B CD D5 3E 00         A  1068    				call hwsc_remove_cursor
                           A  1069    	
00111F 3A 17 62 00         A  1070    				ld a,(current_scancode)
001123 FE66                A  1071    				cp 066h							001125 20 1F               A  1072    				jr nz,os_nuibs
001127 3A 73 5E 00         A  1073    				ld a,(ui_index)
00112B B7                  A  1074    				or a
00112C 28 DC               A  1075    				jr z,ui_loop					00112E 21 E3 60 00         A  1076    				ld hl,cursor_x					001132 35                  A  1077    				dec (hl)						001133 46                  A  1078    os_uixok		ld b,(hl)		
001134 3A E2 60 00         A  1079    				ld a,(cursor_y)
001138 4F                  A  1080    				ld c,a
001139 3E20                A  1081    				ld a,32
00113B CD 9C 3E 00         A  1082    				call hwsc_plot_char
00113F 21 73 5E 00         A  1083    				ld hl,ui_index
001143 35                  A  1084    				dec (hl)						001144 18 C4               A  1085    				jr ui_loop
                           A  1086    
001146 FE76                A  1087    os_nuibs		cp 076h							001148 28 6B               A  1088    				jr z,ui_aborted
00114A FE5A                A  1089    				cp 05ah							00114C 28 46               A  1090    				jr z,ui_enter_pressed
                           A  1091    	
00114E 3A 73 5E 00         A  1092    				ld a,(ui_index)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001152 21 74 5E 00         A  1093    				ld hl,ui_maxchars
001156 BE                  A  1094    				cp (hl)
001157 28 B1               A  1095    				jr z,ui_loop	
                           A  1096    
001159 3A 18 62 00         A  1097    				ld a,(current_asciicode)		00115D FE20                A  1098    				cp 32							00115F 38 A9               A  1099    				jr c,ui_loop					                           A  1100    
001161 57                  A  1101    ui_gtcha		ld d,a
001162 2A 75 5E 00         A  1102    				ld hl,(ui_string_addr)
001166 3A 73 5E 00         A  1103    				ld a,(ui_index)
00116A 01000000            A  1104    				ld bc,0
00116E 4F                  A  1105    				ld c,a
00116F 09                  A  1106    				add hl,bc
001170 72                  A  1107    				ld (hl),d						001171 3C                  A  1108    				inc a
001172 32 73 5E 00         A  1109    				ld (ui_index),a					                           A  1110    				
001176 ED4B E2 60 00       A  1111    				ld bc,(cursor_y)				00117B 7A                  A  1112    				ld a,d
00117C CD 9C 3E 00         A  1113    				call hwsc_plot_char		
001180 21 E3 60 00         A  1114    				ld hl,cursor_x					001184 34                  A  1115    				inc (hl)
001185 3A A6 5E 00         A  1116    				ld a,(charmap_columns)			001189 BE                  A  1117    				cp (hl)
00118A C2 0A 11 00         A  1118    				jp nz,ui_loop
00118E 3600                A  1119    				ld (hl),0
001190 C3 0A 11 00         A  1120    				jp ui_loop
                           A  1121    
001194                     A  1122    ui_enter_pressed
                           A  1123    				
001194 3A FF 60 00         A  1124    				ld a,(ui_im_cache)				001198 32 A0 5E 00         A  1125    				ld (overwrite_mode),a
00119C 3A 73 5E 00         A  1126    				ld a,(ui_index)					0011A0 B7                  A  1127    				or a
0011A1 20 04               A  1128    				jr nz,ui_data
0011A3 3E81                A  1129    				ld a,081h						0011A5 B7                  A  1130    				or a
0011A6 C9                  A  1131    				ret
0011A7 2A 75 5E 00         A  1132    ui_data			ld hl,(ui_string_addr)
0011AB 11000000            A  1133    				ld de,0
0011AF 5F                  A  1134    				ld e,a
0011B0 19                  A  1135    				add hl,de
0011B1 3600                A  1136    				ld (hl),0						0011B3 BF                  A  1137    				cp a							0011B4 C9                  A  1138    				ret
                           A  1139    
0011B5 3A FF 60 00         A  1140    ui_aborted		ld a,(ui_im_cache)				0011B9 32 A0 5E 00         A  1141    				ld (overwrite_mode),a
0011BD 3E80                A  1142    				ld a,080h						0011BF B7                  A  1143    				or a							0011C0 C9                  A  1144    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1145    		
                           A  1146    ;----------------------------------------------
                           A  1147    	
0011C1                     A  1148    os_count_lines
                           A  1149    
0011C1 E5                  A  1150    				push hl							0011C2 0679                A  1151    				ld b,'y'						0011C4 21 E7 60 00         A  1152    				ld hl,os_linecount			
0011C8 34                  A  1153    				inc (hl)						0011C9 3A A3 5E 00         A  1154    				ld a,(charmap_rows)
0011CD D604                A  1155    				sub 4
0011CF BE                  A  1156    				cp (hl)
0011D0 20 0E               A  1157    				jr nz,os_nntpo
0011D2 3600                A  1158    				ld (hl),0
0011D4 21 1C 56 00         A  1159    				ld hl,os_more_txt
0011D8 CD 1B 0F 00         A  1160    				call os_print_string
0011DC CD A1 43 00         A  1161    				call os_wait_key_press	
0011E0 E1                  A  1162    os_nntpo		pop hl
0011E1 C9                  A  1163    				ret
                           A  1164    
                           A  1165    ;----------------------------------------------
                           A  1166    
0011E2                     A  1167    ext_compare_strings
                           A  1168    	
0011E2 CC AE 15 00         A  1169    				call z,mbase_hl
0011E6 CC BF 15 00         A  1170    				call z,mbase_de
                           A  1171    				
0011EA                     A  1172    os_compare_strings
                           A  1173    
                           A  1174    ; both strings at HL/DE should be zero terminat
                           A  1175    ; compare will fail if string lengths are diffe
                           A  1176    ; unless count (B) is reached first
                           A  1177    ; Case is ignored
                           A  1178    ; Zero flag set on return if same
                           A  1179    
0011EA E5                  A  1180    				push hl							0011EB D5                  A  1181    				push de							0011EC 1A                  A  1182    ocslp			ld a,(de)						0011ED B7                  A  1183    				or a
0011EE 28 0C               A  1184    				jr z,ocsbt
0011F0 CD 2D 12 00         A  1185    				call case_insensitive_compare	0011F4 20 0E               A  1186    				jr nz,ocs_diff
0011F6 13                  A  1187    				inc de
0011F7 23                  A  1188    				inc hl
0011F8 10 F2               A  1189    				djnz ocslp
0011FA 18 04               A  1190    				jr ocs_same
0011FC 1A                  A  1191    ocsbt			ld a,(de)						0011FD B6                  A  1192    				or (hl)
0011FE 20 04               A  1193    				jr nz,ocs_diff
001200 D1                  A  1194    ocs_same		pop de
001201 E1                  A  1195    				pop hl
001202 AF                  A  1196    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001203 C9                  A  1197    				ret
001204 D1                  A  1198    ocs_diff		pop de
001205 E1                  A  1199    				pop hl
001206 AF                  A  1200    				xor a							001207 3C                  A  1201    				inc a
001208 C9                  A  1202    				ret
                           A  1203    
                           A  1204    
                           A  1205    ;----------------------------------------------
                           A  1206    
001209                     A  1207    os_copy_ascii_run
                           A  1208    
                           A  1209    ;INPUT HL = source ($00 or $20 terminates)
                           A  1210    ;      DE = dest
                           A  1211    ;       b = max chars
                           A  1212    
                           A  1213    ;OUTPUT HL/DE = end of runs
                           A  1214    ;           c = char count
                           A  1215    	
001209 0E00                A  1216    				ld c,0
00120B 7E                  A  1217    cpyar_lp		ld a,(hl)
00120C B7                  A  1218    				or a
00120D C8                  A  1219    				ret z
00120E FE20                A  1220    				cp 32
001210 C8                  A  1221    				ret z
001211 12                  A  1222    				ld (de),a
001212 23                  A  1223    				inc hl
001213 13                  A  1224    				inc de
001214 0C                  A  1225    				inc c
001215 10 F4               A  1226    				djnz cpyar_lp
001217 C9                  A  1227    				ret
                           A  1228    
                           A  1229    ;----------------------------------------------
                           A  1230    
001218                     A  1231    uppercasify_string
                           A  1232    
                           A  1233    ; Set HL to string location ($00 quits)
                           A  1234    ; Set B to max number of chars
                           A  1235    
001218 7E                  A  1236    				ld a,(hl)
001219 B7                  A  1237    				or a
00121A C8                  A  1238    				ret z
00121B CD 24 12 00         A  1239    				call os_uppercasify
00121F 77                  A  1240    				ld (hl),a
001220 23                  A  1241    				inc hl
001221 10 F5               A  1242    				djnz uppercasify_string	
001223 C9                  A  1243    				ret
                           A  1244    	
                           A  1245    
001224                     A  1246    os_uppercasify
                           A  1247    
                           A  1248    ; INPUT/OUTPUT A = ascii char to make uppercase
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1249    
001224 FE61                A  1250    				cp 061h			
001226 D8                  A  1251    				ret c
001227 FE7B                A  1252    				cp 07bh
001229 D0                  A  1253    				ret nc
00122A D620                A  1254    				sub 020h				
00122C C9                  A  1255    				ret
                           A  1256    
                           A  1257    ;----------------------------------------------
                           A  1258    
00122D                     A  1259    case_insensitive_compare
                           A  1260    
                           A  1261    ; compares A with (HL) disregarding the case of
                           A  1262    ; Zero flag set if the characters are the same
                           A  1263    ; all registers are preserved.
                           A  1264    
00122D C5                  A  1265    				push bc					
00122E 4F                  A  1266    				ld c,a
                           A  1267    
00122F CD 24 12 00         A  1268    				call os_uppercasify				001233 47                  A  1269    				ld b,a
001234 7E                  A  1270    				ld a,(hl)
001235 CD 24 12 00         A  1271    				call os_uppercasify
001239 B8                  A  1272    				cp b
                           A  1273    
00123A 79                  A  1274    				ld a,c
00123B C1                  A  1275    				pop bc
00123C C9                  A  1276    				ret
                           A  1277    
                           A  1278    ;----------------------------------------------
                           A  1279    
00123D                     A  1280    os_decimal_add
                           A  1281    
                           A  1282    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1283    
00123D C5                  A  1284    				push bc
00123E 0E00                A  1285    				ld c,0
001240 1A                  A  1286    decdlp			ld a,(de)
001241 86                  A  1287    				add a,(hl)
001242 81                  A  1288    				add a,c
001243 FE0A                A  1289    				cp 10
001245 38 0B               A  1290    				jr c,daddnc
001247 D60A                A  1291    				sub 10
001249 0E01                A  1292    				ld c,1
00124B 12                  A  1293    decnclp			ld (de),a
00124C 23                  A  1294    				inc hl
00124D 13                  A  1295    				inc de
00124E 10 F0               A  1296    				djnz decdlp
001250 C1                  A  1297    				pop bc
001251 C9                  A  1298    				ret
001252 0E00                A  1299    daddnc			ld c,0
001254 18 F5               A  1300    				jr decnclp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1301    	
                           A  1302    ;----------------------------------------------
                           A  1303    
001256                     A  1304    os_hex_to_decimal
                           A  1305    
                           A  1306    ; INPUT xDE hex longword
                           A  1307    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1308    
       00006832            A  1309    hex_to_convert		equ scratch_pad
       00006835            A  1310    decimal_digits		equ scratch_pad+3
       0000683D            A  1311    decimal_add_digits	equ scratch_pad+3+8
                           A  1312    
001256 ED53 32 68 00       A  1313    				ld (hex_to_convert),de
                           A  1314    		
00125B 21 3D 68 00         A  1315    				ld hl,decimal_add_digits
00125F E5                  A  1316    				push hl
001260 11 35 68 00         A  1317    				ld de,decimal_digits
001264 AF                  A  1318    				xor a
001265 0608                A  1319    				ld b,8
001267 12                  A  1320    setupdec		ld (de),a
001268 77                  A  1321    				ld (hl),a
001269 23                  A  1322    				inc hl
00126A 13                  A  1323    				inc de
00126B 10 FA               A  1324    				djnz setupdec
00126D E1                  A  1325    				pop hl
00126E 3601                A  1326    				ld (hl),1
                           A  1327    	
001270 21 32 68 00         A  1328    				ld hl,hex_to_convert
001274 0603                A  1329    				ld b,3
001276 C5                  A  1330    decconvlp		push bc
001277 7E                  A  1331    				ld a,(hl)
001278 CD 96 12 00         A  1332    				call decadder
00127C CD AF 12 00         A  1333    				call decaddx16
001280 7E                  A  1334    				ld a,(hl)
001281 0F                  A  1335    				rrca
001282 0F                  A  1336    				rrca
001283 0F                  A  1337    				rrca
001284 0F                  A  1338    				rrca
001285 CD 96 12 00         A  1339    				call decadder
001289 CD AF 12 00         A  1340    				call decaddx16
00128D C1                  A  1341    				pop bc
00128E 23                  A  1342    				inc hl
00128F 10 E5               A  1343    				djnz decconvlp
001291 21 35 68 00         A  1344    				ld hl,decimal_digits
001295 C9                  A  1345    				ret
                           A  1346    
                           A  1347    
                           A  1348    
001296 E60F                A  1349    decadder		and 15
001298 C8                  A  1350    				ret z
001299 47                  A  1351    				ld b,a
00129A E5                  A  1352    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00129B C5                  A  1353    daddlp			push bc
00129C 11 35 68 00         A  1354    				ld de,decimal_digits
0012A0 21 3D 68 00         A  1355    				ld hl,decimal_add_digits
0012A4 0608                A  1356    				ld b,8
0012A6 CD 3D 12 00         A  1357    				call os_decimal_add
0012AA C1                  A  1358    				pop bc
0012AB 10 EE               A  1359    				djnz daddlp	
0012AD E1                  A  1360    				pop hl
0012AE C9                  A  1361    				ret
                           A  1362    			
                           A  1363    				
0012AF E5                  A  1364    decaddx16		push hl
0012B0 0604                A  1365    				ld b,4							0012B2 C5                  A  1366    x16loop			push bc
0012B3 11 3D 68 00         A  1367    				ld de,decimal_add_digits
0012B7 21 3D 68 00         A  1368    				ld hl,decimal_add_digits
0012BB 0608                A  1369    				ld b,8
0012BD CD 3D 12 00         A  1370    				call os_decimal_add
0012C1 C1                  A  1371    				pop bc
0012C2 10 EE               A  1372    				djnz x16loop	
0012C4 E1                  A  1373    				pop hl
0012C5 C9                  A  1374    				ret
                           A  1375    	
                           A  1376    	
                           A  1377    ;----------------------------------------------
                           A  1378    
0012C6                     A  1379    os_show_decimal
                           A  1380    
0012C6 11 52 61 00         A  1381    				ld de,output_line				0012CA 01090000            A  1382    				ld bc,9
0012CE 09                  A  1383    				add hl,bc
0012CF 060A                A  1384    				ld b,10
0012D1 7E                  A  1385    shdeclp			ld a,(hl)
0012D2 B7                  A  1386    				or a
0012D3 28 04               A  1387    				jr z,dnodigit
0012D5 C630                A  1388    				add a,030h
0012D7 12                  A  1389    				ld (de),a
0012D8 13                  A  1390    				inc de
0012D9 2B                  A  1391    dnodigit		dec hl
0012DA 10 F5               A  1392    				djnz shdeclp
0012DC AF                  A  1393    				xor a
0012DD 12                  A  1394    				ld (de),a
0012DE CD 26 13 00         A  1395    				call os_print_output_line
0012E2 C9                  A  1396    				ret
                           A  1397    				
                           A  1398    ;----------------------------------------------
                           A  1399    		
0012E3                     A  1400    os_copy_to_output_line
                           A  1401    	
0012E3 D5                  A  1402    				push de
0012E4 C5                  A  1403    				push bc
0012E5 11 52 61 00         A  1404    				ld de,output_line				Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012E9 01510000            A  1405    				ld bc,max_buffer_chars+1		0012ED EDA0                A  1406    os_cloll		ldi
0012EF 7E                  A  1407    				ld a,(hl)
0012F0 B7                  A  1408    				or a
0012F1 28 04               A  1409    				jr z,os_clold
0012F3 78                  A  1410    				ld a,b
0012F4 B1                  A  1411    				or c
0012F5 20 F6               A  1412    				jr nz,os_cloll
0012F7 12                  A  1413    os_clold		ld (de),a
0012F8 C1                  A  1414    				pop bc
0012F9 D1                  A  1415    				pop de
0012FA C9                  A  1416    				ret
                           A  1417    
                           A  1418    
                           A  1419    ;----------------------------------------------
                           A  1420    
0012FB                     A  1421    os_show_hex_address
                           A  1422    
0012FB E5                  A  1423    				push hl							0012FC 21 52 61 00         A  1424    				ld hl,output_line
001300 ED53 F4 60 00       A  1425    				ld (hex_address),de
001305 3A F6 60 00         A  1426    				ld a,(hex_address+2)
001309 CD 66 10 00         A  1427    				call hexbyte_to_ascii
00130D 18 10               A  1428    				jr shw_nt
                           A  1429    				
                           A  1430    
00130F                     A  1431    os_show_hex_byte
                           A  1432    
00130F E5                  A  1433    				push hl							001310 21 52 61 00         A  1434    				ld hl,output_line
001314 CD 66 10 00         A  1435    				call hexbyte_to_ascii
001318 18 09               A  1436    				jr shb_nt
                           A  1437    
                           A  1438    
                           A  1439    
00131A                     A  1440    os_show_hex_word
                           A  1441    
00131A E5                  A  1442    				push hl							00131B 21 52 61 00         A  1443    				ld hl,output_line
00131F CD 8B 10 00         A  1444    shw_nt			call hexword_to_ascii
001323 3600                A  1445    shb_nt			ld (hl),0
001325 E1                  A  1446    				pop hl
                           A  1447    
                           A  1448    	
                           A  1449    
001326                     A  1450    os_print_output_line
                           A  1451    
001326 E5                  A  1452    				push hl
001327 21 52 61 00         A  1453    				ld hl,output_line
00132B CD 1B 0F 00         A  1454    cproline		call os_print_string
00132F E1                  A  1455    				pop hl
001330 C9                  A  1456    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1457    
                           A  1458    
                           A  1459    
001331                     A  1460    os_print_output_line_skip_zeroes
                           A  1461    
001331 E5                  A  1462    				push hl
001332 21 52 61 00         A  1463    				ld hl,output_line
001336 CD 43 10 00         A  1464    				call os_skip_leading_ascii_zero
00133A 18 EF               A  1465    				jr cproline
                           A  1466    				
                           A  1467    		
                           A  1468    ;----------------------------------------------
                           A  1469    
00133C                     A  1470    os_store_CPU_regs
                           A  1471    
00133C F3                  A  1472    				di								                           A  1473    
00133D 33                  A  1474    				inc sp							00133E 33                  A  1475    				inc sp
00133F 33                  A  1476    				inc sp
001340 ED73 70 60 00       A  1477    				ld (store_spl),sp
001345 3B                  A  1478    				dec sp							001346 3B                  A  1479    				dec sp
001347 3B                  A  1480    				dec sp
                           A  1481    				
001348 F5                  A  1482    				push af
001349 32 53 60 00         A  1483    				ld (store_a1),a					00134D 08                  A  1484    				ex af,af'
00134E 32 5D 60 00         A  1485    				ld (store_a2),a
001352 08                  A  1486    				ex af,af'
001353 ED43 54 60 00       A  1487    				ld (store_bc1),bc		
001358 ED53 57 60 00       A  1488    				ld (store_de1),de
00135D 22 5A 60 00         A  1489    				ld (store_hl1),hl
001361 D9                  A  1490    				exx
001362 ED43 5E 60 00       A  1491    				ld (store_bc2),bc
001367 ED53 61 60 00       A  1492    				ld (store_de2),de
00136C 22 64 60 00         A  1493    				ld (store_hl2),hl
001370 D9                  A  1494    				exx
001371 DD22 67 60 00       A  1495    				ld (store_ix),ix
001376 FD22 6A 60 00       A  1496    				ld (store_iy),iy
                           A  1497    				
00137B ED6E                A  1498    			    ld a,MB
00137D 32 75 60 00         A  1499    				ld (store_mbase),a
                           A  1500    								
001381 C5                  A  1501    				push bc
001382 0600                A  1502    				ld b,0
001384 20 02               A  1503    				jr nz,zfstzero					001386 CBF0                A  1504    				set 6,b
                           A  1505    
001388 30 02               A  1506    zfstzero		jr nc,cfstzero					00138A CBC0                A  1507    				set 0,b
                           A  1508    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00138C F2 92 13 00         A  1509    cfstzero		jp p,sfstzero					001390 CBF8                A  1510    				set 7,b
                           A  1511    
001392 EA 98 13 00         A  1512    sfstzero		jp pe,pfstzero					001396 CBD0                A  1513    				set 2,b
                           A  1514    
001398 ED57                A  1515    pfstzero		ld a,i			
00139A EA A0 13 00         A  1516    				jp pe,ifstzero					00139E CBE0                A  1517    				set 4,b
                           A  1518    
0013A0 78                  A  1519    ifstzero		ld a,b
0013A1 32 76 60 00         A  1520    				ld (store_f),a
                           A  1521    				
0013A5 3E00                A  1522    				ld a,os_location/65536			0013A7 ED6D                A  1523    				ld MB,a							0013A9 40ED73 73 60        A  1524    				ld.sis (store_sps),sp
0013AE 3A 75 60 00         A  1525    				ld a,(store_mbase)				0013B2 ED6D                A  1526    				ld MB,a
                           A  1527    				
0013B4 C1                  A  1528    				pop bc
0013B5 F1                  A  1529    				pop af
0013B6 FB                  A  1530    				ei
0013B7 C9                  A  1531    				ret
                           A  1532    
                           A  1533    
                           A  1534    
0013B8                     A  1535    os_dont_store_registers
                           A  1536    
0013B8 AF                  A  1537    				xor a
0013B9 32 7B 60 00         A  1538    				ld (store_registers),a			0013BD C9                  A  1539    				ret
                           A  1540    	
                           A  1541    	
                           A  1542    ;----------------------------------------------
                           A  1543    
0013BE                     A  1544    os_new_line_cond
                           A  1545    
0013BE CD 1E 1A 00         A  1546    				call test_quiet_mode
0013C2 C0                  A  1547    				ret nz
                           A  1548    
                           A  1549    	
0013C3                     A  1550    os_new_line
                           A  1551    
0013C3 E5                  A  1552    				push hl
0013C4 21 34 56 00         A  1553    				ld hl,crlfx2_txt+1
0013C8 CD 1B 0F 00         A  1554    				call os_print_string
0013CC E1                  A  1555    				pop hl
0013CD C9                  A  1556    				ret
                           A  1557    				
                           A  1558    ;----------------------------------------------
                           A  1559    
0013CE                     A  1560    os_set_cursor_position
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1561    				
                           A  1562    												0013CE 3A A3 5E 00         A  1563    				ld a,(charmap_rows)				0013D2 3D                  A  1564    				dec a							0013D3 B9                  A  1565    				cp c
0013D4 38 14               A  1566    				jr c,badpos
0013D6 79                  A  1567    				ld a,c
0013D7 32 E2 60 00         A  1568    				ld (cursor_y),a
                           A  1569    				
0013DB 3A A6 5E 00         A  1570    				ld a,(charmap_columns)
0013DF 3D                  A  1571    				dec a
0013E0 B8                  A  1572    				cp b
0013E1 38 07               A  1573    				jr c,badpos
0013E3 78                  A  1574    				ld a,b
0013E4 32 E3 60 00         A  1575    				ld (cursor_x),a
0013E8 AF                  A  1576    				xor a
0013E9 C9                  A  1577    				ret				
                           A  1578    
0013EA 3E88                A  1579    badpos			ld a,88h						0013EC B7                  A  1580    				or a
0013ED C9                  A  1581    				ret
                           A  1582    
                           A  1583    
                           A  1584    					
                           A  1585    	
                           A  1586    	
0013EE                     A  1587    os_get_cursor_position
                           A  1588    
0013EE ED4B E2 60 00       A  1589    				ld bc,(cursor_pos)				0013F3 BF                  A  1590    				cp a							0013F4 C9                  A  1591    				ret
                           A  1592    
                           A  1593    
                           A  1594    ;----------------------------------------------
                           A  1595    
0013F5                     A  1596    os_show_packed_text_cond
                           A  1597    
0013F5 CD 1E 1A 00         A  1598    				call test_quiet_mode
0013F9 C0                  A  1599    				ret nz
                           A  1600    
                           A  1601    	
0013FA                     A  1602    os_show_packed_text
                           A  1603    
                           A  1604    ; Construct sentence from internal dictionary u
                           A  1605    	
0013FA C5                  A  1606    				push bc
0013FB D5                  A  1607    				push de
0013FC DDE5                A  1608    				push ix
0013FE DD21 52 61 00       A  1609    				ld ix,output_line
001403 7E                  A  1610    readpind		ld a,(hl)
001404 B7                  A  1611    				or a
001405 20 10               A  1612    				jr nz,getword					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001407 DD2B                A  1613    				dec ix							001409 DD7700              A  1614    				ld (ix),a						                           A  1615    			
00140C E5                  A  1616    				push hl
00140D CD 26 13 00         A  1617    				call os_print_output_line
001411 E1                  A  1618    				pop hl
                           A  1619    			
001412 DDE1                A  1620    				pop ix
001414 D1                  A  1621    				pop de
001415 C1                  A  1622    				pop bc
001416 C9                  A  1623    				ret
                           A  1624    				
001417 11 63 56 00         A  1625    getword			ld de,dictionary-1
00141B 0E00                A  1626    				ld c,0
00141D 13                  A  1627    dictloop		inc de
00141E 1A                  A  1628    				ld a,(de)
00141F B7                  A  1629    				or a							001420 28 04               A  1630    				jr z,faword
001422 CB7F                A  1631    				bit 7,a							001424 28 F7               A  1632    				jr z,dictloop	
                           A  1633    			
001426 0C                  A  1634    faword			inc c							001427 79                  A  1635    				ld a,c
001428 BE                  A  1636    				cp (hl)
001429 20 F2               A  1637    				jr nz,dictloop
00142B 13                  A  1638    copytol			inc de							00142C 1A                  A  1639    				ld a,(de)
00142D B7                  A  1640    				or a
00142E 28 0B               A  1641    				jr z,eoword						001430 CB7F                A  1642    				bit 7,a
001432 20 07               A  1643    				jr nz,eoword
001434 DD7700              A  1644    				ld (ix),a						001437 DD23                A  1645    				inc ix
001439 18 F0               A  1646    				jr copytol
00143B DD360020            A  1647    eoword			ld (ix),32						00143F DD23                A  1648    				inc ix
001441 23                  A  1649    				inc hl
001442 18 BF               A  1650    				jr readpind
                           A  1651    
                           A  1652    
                           A  1653    		
                           A  1654    ;--------- Mouse functions --------------------
                           A  1655    
001444                     A  1656    os_set_mouse_window
                           A  1657    
                           A  1658    ; Set: HL/DE = window size mouse pointer is to 
                           A  1659    	
001444 22 29 62 00         A  1660    				ld (mouse_window_size_x),hl	 
001448 ED53 2C 62 00       A  1661    				ld (mouse_window_size_y),de
00144D 21000000            A  1662    				ld hl,0
001451 22 2F 62 00         A  1663    				ld (mouse_abs_x),hl
001455 22 32 62 00         A  1664    				ld (mouse_abs_y),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001459 3E01                A  1665    				ld a,1
00145B 32 41 62 00         A  1666    				ld (mouse_new_window),a
00145F AF                  A  1667    				xor a
001460 C9                  A  1668    				ret
                           A  1669    				
                           A  1670    			
001461                     A  1671    os_get_mouse_motion
                           A  1672    			
                           A  1673    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1674    ;          ZF = Not set: Mouse driver not initi
                           A  1675    			
001461 3A 46 60 00         A  1676    				ld a,(devices_connected)
001465 E602                A  1677    				and 2
001467 EE02                A  1678    				xor 2
001469 C0                  A  1679    				ret nz
00146A AF                  A  1680    ms_reread		xor a
00146B 32 28 62 00         A  1681    				ld (mouse_updated),a
00146F 2A 21 62 00         A  1682    				ld hl,(mouse_disp_x)			001473 ED5B 24 62 00       A  1683    				ld de,(mouse_disp_y)
001478 3A 28 62 00         A  1684    				ld a,(mouse_updated)			00147C B7                  A  1685    				or a
00147D 20 EB               A  1686    				jr nz,ms_reread
00147F AF                  A  1687    mouse_end		xor a
001480 3A 27 62 00         A  1688    				ld a,(mouse_wheel)
001484 47                  A  1689    				ld b,a
001485 3A 20 62 00         A  1690    				ld a,(mouse_buttons)
001489 C9                  A  1691    				ret
                           A  1692    			
                           A  1693    			
00148A                     A  1694    os_get_mouse_position
                           A  1695    
                           A  1696    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1697    ;          ZF = Not set: Mouse driver not initi
                           A  1698    				
00148A CD 61 14 00         A  1699    				call os_get_mouse_motion
00148E C0                  A  1700    				ret nz
00148F 22 3B 62 00         A  1701    				ld (mouse_disp_x_buffer),hl
001493 ED53 3E 62 00       A  1702    				ld (mouse_disp_y_buffer),de
001498 3A 41 62 00         A  1703    				ld a,(mouse_new_window)
00149C B7                  A  1704    				or a
00149D 20 6C               A  1705    				jr nz,ms_nmw
                           A  1706    
00149F ED5B 35 62 00       A  1707    				ld de,(mouse_disp_x_old)
0014A4 AF                  A  1708    				xor a
0014A5 ED52                A  1709    				sbc hl,de
0014A7 EB                  A  1710    				ex de,hl
0014A8 2A 2F 62 00         A  1711    				ld hl,(mouse_abs_x)
0014AC 19                  A  1712    				add hl,de
0014AD E5                  A  1713    				push hl
0014AE C1                  A  1714    				pop bc
0014AF DD210000 80         A  1715    				ld ix,800000h					0014B4 DD09                A  1716    				add ix,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014B6 30 06               A  1717    				jr nc,ms_x_ok1
0014B8 01000000            A  1718    				ld bc,0
0014BC 18 10               A  1719    				jr ms_x_ok2
0014BE ED5B 29 62 00       A  1720    ms_x_ok1		ld de,(mouse_window_size_x)
0014C3 AF                  A  1721    				xor a
0014C4 ED52                A  1722    				sbc hl,de
0014C6 38 06               A  1723    				jr c,ms_x_ok2
0014C8 ED4B 29 62 00       A  1724    				ld bc,(mouse_window_size_x)		0014CD 0B                  A  1725    				dec bc
0014CE ED43 2F 62 00       A  1726    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1727    					
0014D3 2A 3E 62 00         A  1728    				ld hl,(mouse_disp_y_buffer)
0014D7 ED5B 38 62 00       A  1729    				ld de,(mouse_disp_y_old)
0014DC AF                  A  1730    				xor a
0014DD ED52                A  1731    				sbc hl,de
0014DF EB                  A  1732    				ex de,hl
0014E0 2A 32 62 00         A  1733    				ld hl,(mouse_abs_y)
0014E4 19                  A  1734    				add hl,de
0014E5 E5                  A  1735    				push hl
0014E6 C1                  A  1736    				pop bc
0014E7 DD210000 80         A  1737    				ld ix,800000h					0014EC DD09                A  1738    				add ix,bc
0014EE 30 06               A  1739    				jr nc,ms_y_ok1
0014F0 01000000            A  1740    				ld bc,0
0014F4 18 10               A  1741    				jr ms_y_ok2
0014F6 ED5B 2C 62 00       A  1742    ms_y_ok1		ld de,(mouse_window_size_y)
0014FB AF                  A  1743    				xor a
0014FC ED52                A  1744    				sbc hl,de
0014FE 38 06               A  1745    				jr c,ms_y_ok2
001500 ED4B 2C 62 00       A  1746    				ld bc,(mouse_window_size_y)		001505 0B                  A  1747    				dec bc
001506 ED43 32 62 00       A  1748    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1749    
                           A  1750    				
00150B 2A 3B 62 00         A  1751    ms_nmw			ld hl,(mouse_disp_x_buffer)
00150F 22 35 62 00         A  1752    				ld (mouse_disp_x_old),hl
001513 2A 3E 62 00         A  1753    				ld hl,(mouse_disp_y_buffer)
001517 22 38 62 00         A  1754    				ld (mouse_disp_y_old),hl
                           A  1755    				
00151B 2A 2F 62 00         A  1756    				ld hl,(mouse_abs_x)
00151F ED5B 32 62 00       A  1757    				ld de,(mouse_abs_y)
                           A  1758    				
001524 AF                  A  1759    				xor a
001525 32 41 62 00         A  1760    				ld (mouse_new_window),a
001529 C3 7F 14 00         A  1761    				jp mouse_end
                           A  1762    				
                           A  1763    	
                           A  1764    ;==============================================
                           A  1765    ;----- General Subroutines --------------------
                           A  1766    ;==============================================
                           A  1767    
                           A  1768    ; .--------------.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1769    ; ! CRC Checksum !
                           A  1770    ; '--------------'
                           A  1771    
                           A  1772    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1773    
00152D                     A  1774    crc_checksum
                           A  1775    
00152D 21FFFF00            A  1776    				ld hl,0ffffh		
001531 1A                  A  1777    crcloop			ld a,(de)			
001532 AC                  A  1778    				xor h			
001533 67                  A  1779    				ld h,a			
001534 0608                A  1780    				ld b,8
001536 4029                A  1781    crcbyte			add.sis hl,hl					001538 30 08               A  1782    				jr nc,crcnext
00153A 7C                  A  1783    				ld a,h
00153B EE10                A  1784    				xor 10h
00153D 67                  A  1785    				ld h,a
00153E 7D                  A  1786    				ld a,l
00153F EE21                A  1787    				xor 21h
001541 6F                  A  1788    				ld l,a
001542 10 F2               A  1789    crcnext			djnz crcbyte
001544 13                  A  1790    				inc de
001545 0D                  A  1791    				dec c
001546 20 E9               A  1792    				jr nz,crcloop
001548 C9                  A  1793    				ret
                           A  1794    
                           A  1795    
                           A  1796    ;----------------------------------------------
                           A  1797    
001549                     A  1798    os_get_key_mod_flags
                           A  1799    
001549 3A 16 62 00         A  1800    				ld a,(key_mod_flags)
00154D BF                  A  1801    				cp a							00154E C9                  A  1802    				ret
                           A  1803    
                           A  1804    ;----------------------------------------------
                           A  1805    
00154F                     A  1806    os_get_vmode
                           A  1807    			
00154F 3A A3 5E 00         A  1808    				ld a,(charmap_rows)
001553 4F                  A  1809    				ld c,a
001554 3A A6 5E 00         A  1810    				ld a,(charmap_columns)
001558 47                  A  1811    				ld b,a
001559 3A 78 5E 00         A  1812    				ld a,(video_mode)
00155D BF                  A  1813    				cp a						; Z
00155E C9                  A  1814    				ret
                           A  1815    
                           A  1816    ;----------------------------------------------
                           A  1817    
00155F 7B                  A  1818    ext_set_vmode	ld a,e
                           A  1819    
001560 FE04                A  1820    os_set_vmode	cp 4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001562 38 04               A  1821    				jr c,vm_range_ok
001564 3E88                A  1822    				ld a,88h					;ou
001566 B7                  A  1823    				or a
001567 C9                  A  1824    				ret
                           A  1825    				
001568 32 78 5E 00         A  1826    vm_range_ok		ld (video_mode),a
00156C 21030000            A  1827    				ld hl,3
001570 67                  A  1828    				ld h,a
001571 ED6C                A  1829    				mlt hl
001573 11 A9 5E 00         A  1830    				ld de,vmode_parameter_list
001577 19                  A  1831    				add hl,de
001578 7E                  A  1832    				ld a,(hl)
001579 23                  A  1833    				inc hl
00157A 46                  A  1834    				ld b,(hl)
00157B 23                  A  1835    				inc hl
00157C 4E                  A  1836    				ld c,(hl)
00157D CD 89 3D 00         A  1837    				call set_charmap_parameters
                           A  1838    				
001581 CD 26 3E 00         A  1839    				call hwsc_clear_screen
                           A  1840    
001585 AF                  A  1841    				xor a				
001586 C9                  A  1842    				ret
                           A  1843    
                           A  1844    
                           A  1845    ;----------------------------------------------
                           A  1846    
001587                     A  1847    os_bchl_memfill
                           A  1848    
                           A  1849    ; fill memory from xHL with A. Count in xBC.
                           A  1850    		
001587 77                  A  1851    mf_loop			ld (hl),a
001588 EDA1                A  1852    				cpi								00158A EA 87 15 00         A  1853    				jp pe,mf_loop
00158E C9                  A  1854    				ret
                           A  1855    	
                           A  1856    ;----------------------------------------------
                           A  1857    
00158F 7B                  A  1858    ext_set_pen		ld a,e
                           A  1859    
001590 32 79 5E 00         A  1860    os_set_pen		ld (current_pen),a
001594 BF                  A  1861    				cp a							001595 C9                  A  1862    				ret
                           A  1863    
                           A  1864    ;----------------------------------------------
                           A  1865    	
001596 3A 79 5E 00         A  1866    os_get_pen		ld a,(current_pen)
00159A BF                  A  1867    				cp a							00159B C9                  A  1868    				ret	
                           A  1869    
                           A  1870    ;----------------------------------------------
                           A  1871    
00159C                     A  1872    ext_background_colours
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1873    				
00159C CC AE 15 00         A  1874    				call z,mbase_hl
0015A0 C3 1A 3E 00         A  1875    				jp hswc_set_ui_colours
                           A  1876    				
                           A  1877    				
                           A  1878    ;----------------------------------------------
                           A  1879    
0015A4                     A  1880    os_get_xde_msb	
                           A  1881    			
0015A4 ED53 FA 60 00       A  1882    				ld (xrr_temp),de				0015A9 3A FC 60 00         A  1883    				ld a,(xrr_temp+2)
0015AD C9                  A  1884    				ret
                           A  1885    
                           A  1886    ;----------------------------------------------
                           A  1887    
0015AE F5                  A  1888    mbase_hl		push af
0015AF 22 FA 60 00         A  1889    				ld (xrr_temp),hl				0015B3 ED6E                A  1890    				ld a,MB
0015B5 32 FC 60 00         A  1891    				ld (xrr_temp+2),a
0015B9 2A FA 60 00         A  1892    				ld hl,(xrr_temp)
0015BD F1                  A  1893    				pop af
0015BE C9                  A  1894    				ret
                           A  1895    				
0015BF F5                  A  1896    mbase_de		push af
0015C0 ED53 FA 60 00       A  1897    				ld (xrr_temp),de				0015C5 ED6E                A  1898    				ld a,MB
0015C7 32 FC 60 00         A  1899    				ld (xrr_temp+2),a
0015CB ED5B FA 60 00       A  1900    				ld de,(xrr_temp)
0015D0 F1                  A  1901    				pop af
0015D1 C9                  A  1902    				ret
                           A  1903    
                           A  1904    
                           A  1905    ;----------------------------------------------
                           A  1906    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1907    ;----------------------------------------------
                           A  1908    
0015D2                     A  1909    unpack_rle
                           A  1910    
                           A  1911    ;set xHL = source address of packed file
                           A  1912    ;set xDE = destination address for unpacked dat
                           A  1913    ;set xBC = length of packed file
                           A  1914    
0015D2 E5                  A  1915    			push hl	
0015D3 DDE1                A  1916    			pop ix
0015D5 0B                  A  1917    			dec bc								0015D6 23                  A  1918    			inc hl
0015D7 DD7E00              A  1919    unp_gtok	ld a,(ix)							0015DA BE                  A  1920    unp_next	cp (hl)								0015DB 28 07               A  1921    			jr z,unp_brun						0015DD EDA0                A  1922    			ldi									0015DF EA DA 15 00         A  1923    			jp pe,unp_next						0015E3 C9                  A  1924    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1925    	
0015E4 C5                  A  1926    unp_brun	push bc								0015E5 23                  A  1927    			inc hl		
0015E6 7E                  A  1928    			ld a,(hl)							0015E7 23                  A  1929    			inc hl		
0015E8 46                  A  1930    			ld b,(hl)							0015E9 23                  A  1931    			inc hl
                           A  1932    	
0015EA 12                  A  1933    unp_rllp	ld (de),a							0015EB 13                  A  1934    			inc de			
0015EC 10 FC               A  1935    			djnz unp_rllp
                           A  1936    	
0015EE C1                  A  1937    			pop bc	
0015EF 0B                  A  1938    			dec bc								0015F0 0B                  A  1939    			dec bc
0015F1 0B                  A  1940    			dec bc
0015F2 E5                  A  1941    			push hl								0015F3 21000000            A  1942    			ld hl,0
0015F7 B7                  A  1943    			or a
0015F8 ED4A                A  1944    			adc hl,bc
0015FA E1                  A  1945    			pop hl
0015FB 20 DA               A  1946    			jr nz,unp_gtok
0015FD C9                  A  1947    			ret	
                           A  1948    	
                           A  1949    ;----------------------------------------------
                           A  1950    ; Commonly called error messages - gets message
                           A  1951    ;----------------------------------------------
                           A  1952    
                           A  1953    
0015FE 3E0D                A  1954    os_no_fn_error		ld a,0dh
001600 B7                  A  1955    					or a
001601 C9                  A  1956    					ret
                           A  1957    			
001602 3E15                A  1958    os_fn_too_long		ld a,15h
001604 B7                  A  1959    					or a
001605 C9                  A  1960    					ret
                           A  1961    				
001606 3E16                A  1962    os_no_start_addr	ld a,16h
001608 B7                  A  1963    					or a
001609 C9                  A  1964    					ret
                           A  1965    			
00160A 3E17                A  1966    os_no_filesize		ld a,17h
00160C B7                  A  1967    					or a
00160D C9                  A  1968    					ret
                           A  1969    			
00160E 3E18                A  1970    os_abort_save		ld a,18h
001610 B7                  A  1971    					or a
001611 C9                  A  1972    					ret
                           A  1973    			
001612 3E1C                A  1974    os_no_e_addr_error	ld a,1ch
001614 B7                  A  1975    					or a
001615 C9                  A  1976    					ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1977    			
001616 3E1D                A  1978    os_no_d_addr_error	ld a,1dh
001618 B7                  A  1979    					or a
001619 C9                  A  1980    					ret
                           A  1981    				
00161A 3E1E                A  1982    os_range_error		ld a,1eh
00161C B7                  A  1983    					or a
00161D C9                  A  1984    					ret
                           A  1985    			
00161E 3E1F                A  1986    os_no_args_error	ld a,1fh
001620 B7                  A  1987    					or a
001621 C9                  A  1988    					ret	
                           A  1989    
                           A  1990    ;----------------------------------------------
                           A  1991    
                           A  1992    ; Set xHL to address of zero terminated filenam
                           A  1993    ; RETURNS:	C:xDE  = File length
                           A  1994    ;    		HL     = Start cluster of file
                           A  1995    
001622 CC AE 15 00         A  1996    ext_find_file	call z,mbase_hl
                           A  1997    
001626 CD 10 52 00         A  1998    os_find_file	call fs_hl_to_filename
00162A CD B1 49 00         A  1999    				call fs_open_file_command		00162E 38 02               A  2000    				jr c,os_fferr					001630 B7                  A  2001    				or a							001631 C9                  A  2002    				ret 		
                           A  2003    								
001632 47                  A  2004    os_fferr		ld b,a							001633 AF                  A  2005    				xor a			
001634 4F                  A  2006    				ld c,a
001635 0C                  A  2007    				inc c							001636 C9                  A  2008    				ret	
                           A  2009    
                           A  2010    ;----------------------------------------------
                           A  2011    
001637                     A  2012    os_set_load_length
                           A  2013    
001637 ED53 67 54 00       A  2014    				ld (fs_file_transfer_length),de
00163C BF                  A  2015    				cp a							00163D C9                  A  2016    				ret
                           A  2017    				
                           A  2018    ;----------------------------------------------
                           A  2019    
00163E                     A  2020    ext_set_file_pointer
                           A  2021    
00163E 79                  A  2022    				ld a,c
                           A  2023    				
00163F                     A  2024    os_set_file_pointer
                           A  2025    
                           A  2026    ; Moves the 'start of file' pointer allowing ra
                           A  2027    ; Note: File pointer is reset by opening a file
                           A  2028    ; by normal read function.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2029    
00163F ED53 5B 54 00       A  2030    				ld (fs_file_pointer),de			001644 32 5E 54 00         A  2031    				ld (fs_file_pointer+3),a
001648 F5                  A  2032    				push af
001649 AF                  A  2033    				xor a
00164A 32 8D 54 00         A  2034    				ld (fs_filepointer_valid),a		00164E F1                  A  2035    				pop af
00164F BF                  A  2036    				cp a							001650 C9                  A  2037    				ret
                           A  2038    				
                           A  2039    ;----------------------------------------------
                           A  2040    
                           A  2041    ; set xHL = load address 
                           A  2042    ; (Before calling this routine, call os_find_fi
                           A  2043    
001651                     A  2044    ext_read_bytes_from_file
                           A  2045    
001651 CC AE 15 00         A  2046    				call z,mbase_hl					                           A  2047    				
001655                     A  2048    os_read_bytes_from_file
                           A  2049    
001655 22 70 54 00         A  2050    				ld (fs_ez80_address),hl			001659 CD FC 49 00         A  2051    				call fs_read_data_command
00165D 38 D3               A  2052    				jr c,os_fferr
00165F B7                  A  2053    				or a
001660 C9                  A  2054    				ret
                           A  2055    
                           A  2056    ;----------------------------------------------
                           A  2057    
                           A  2058    ; Before calling, set xHL = address of zero ter
                           A  2059    
001661 CC AE 15 00         A  2060    ext_create_file	call z,mbase_hl
                           A  2061    
001665 CD 10 52 00         A  2062    os_create_file	call fs_hl_to_filename
001669 CD B2 4C 00         A  2063    				call fs_create_file_command		00166D DA 32 16 00         A  2064    				jp c,os_fferr					001671 B7                  A  2065    				or a
001672 C9                  A  2066    				ret
                           A  2067    
                           A  2068    ;----------------------------------------------
                           A  2069    
001673                     A  2070    ext_write_bytes_to_file
                           A  2071    
001673 CC AE 15 00         A  2072    				call z,mbase_hl
001677 CC BF 15 00         A  2073    				call z,mbase_de
                           A  2074    
00167B                     A  2075    os_write_bytes_to_file
                           A  2076    
                           A  2077    ; Before calling, set..
                           A  2078    
                           A  2079    ; xDE   = address to save data from
                           A  2080    ; xBC   = number of bytes to save
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2081    ; xHL   = address of null-terminated ascii name
                           A  2082    
                           A  2083    ; On return:
                           A  2084    
                           A  2085    ; If zero flag NOT set, there was an error.
                           A  2086    ; If   A = $00, b = hardware error code
                           A  2087    ; Else A = File system error code
                           A  2088    
                           A  2089    ; NOTE:
                           A  2090    ; Will return 'file not found' if the file has 
                           A  2091    				
00167B ED43 67 54 00       A  2092    				ld (fs_file_transfer_length),bc
001680 ED53 70 54 00       A  2093    				ld (fs_ez80_address),de	 	
001685 CD 10 52 00         A  2094    				call fs_hl_to_filename
001689 CD E4 4C 00         A  2095    				call fs_write_bytes_to_file_com
00168D DA 32 16 00         A  2096    				jp c,os_fferr
001691 B7                  A  2097    				or a
001692 C9                  A  2098    				ret
                           A  2099    		
                           A  2100    		
                           A  2101    ;----------------------------------------------
                           A  2102    	
                           A  2103    
001693                     A  2104    os_check_volume_format
                           A  2105    
001693 CD 0F 48 00         A  2106    				call fs_check_disk_format
001697 DA 32 16 00         A  2107    os_rffsc		jp c,os_fferr
00169B B7                  A  2108    				or a
00169C C9                  A  2109    				ret
                           A  2110    
                           A  2111    ;----------------------------------------------
                           A  2112    
                           A  2113    
00169D 7B                  A  2114    ext_format		ld a,e
00169E CC AE 15 00         A  2115    				call z,mbase_hl					                           A  2116    
0016A2 E5                  A  2117    os_format		push hl							0016A3 CD B1 1A 00         A  2118    				call dev_to_driver_lookup
0016A7 E1                  A  2119    				pop hl
0016A8 38 04               A  2120    				jr c,sdevok
0016AA 3ED0                A  2121    				ld a,0d0h						0016AC B7                  A  2122    				or a
0016AD C9                  A  2123    				ret
                           A  2124    
0016AE F5                  A  2125    sdevok			push af				
0016AF 11 37 54 00         A  2126    				ld de,fs_sought_filename
0016B3 CD 1F 53 00         A  2127    				call fs_clear_filename
0016B7 060B                A  2128    				ld b,11
0016B9 CD 09 12 00         A  2129    				call os_copy_ascii_run
0016BD F1                  A  2130    				pop af
                           A  2131    				
0016BE 21 02 5F 00         A  2132    				ld hl,current_driver
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016C2 46                  A  2133    				ld b,(hl)
0016C3 77                  A  2134    				ld (hl),a
0016C4 C5                  A  2135    				push bc
0016C5 E5                  A  2136    				push hl
0016C6 CD 84 46 00         A  2137    				call fs_format_device_command
0016CA E1                  A  2138    				pop hl
0016CB C1                  A  2139    				pop bc
0016CC 70                  A  2140    				ld (hl),b
0016CD 18 C8               A  2141    				jr os_rffsc
                           A  2142    
                           A  2143    
                           A  2144    ;----------------------------------------------
                           A  2145    
                           A  2146    
0016CF CC AE 15 00         A  2147    ext_make_dir	call z,mbase_hl					                           A  2148    
0016D3 CD 10 52 00         A  2149    os_make_dir		call fs_hl_to_filename
0016D7 CD 2A 4B 00         A  2150    				call fs_make_dir_command
0016DB 18 BA               A  2151    				jr os_rffsc
                           A  2152    
                           A  2153    
                           A  2154    ;----------------------------------------------
                           A  2155    
                           A  2156    
0016DD CC AE 15 00         A  2157    ext_change_dir	call z,mbase_hl					                           A  2158    
0016E1 CD 10 52 00         A  2159    os_change_dir	call fs_hl_to_filename
0016E5 CD 5D 49 00         A  2160    				call fs_change_dir_command
0016E9 18 AC               A  2161    				jr os_rffsc
                           A  2162    				
                           A  2163    	
                           A  2164    ;----------------------------------------------
                           A  2165    	
                           A  2166    	
0016EB CD 8E 49 00         A  2167    os_parent_dir	call fs_parent_dir_command
0016EF 18 A6               A  2168    				jr os_rffsc
                           A  2169    				
                           A  2170    
                           A  2171    ;----------------------------------------------
                           A  2172    
                           A  2173    	
0016F1 CD 82 49 00         A  2174    os_root_dir		call fs_goto_root_dir_command
0016F5 18 A0               A  2175    				jr os_rffsc
                           A  2176    
                           A  2177    
                           A  2178    ;----------------------------------------------
                           A  2179    
                           A  2180    
0016F7 CC AE 15 00         A  2181    ext_erase_file	call z,mbase_hl					                           A  2182    
0016FB CD 10 52 00         A  2183    os_erase_file	call fs_hl_to_filename
0016FF CD 73 4E 00         A  2184    				call fs_erase_file_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001703 18 92               A  2185    				jr os_rffsc
                           A  2186    	
                           A  2187    
                           A  2188    ;----------------------------------------------
                           A  2189    
                           A  2190    
001705                     A  2191    os_goto_first_dir_entry	
                           A  2192    
001705 CD CE 4E 00         A  2193    				call fs_goto_first_dir_entry
001709 18 8C               A  2194    				jr os_rffsc
                           A  2195    
                           A  2196    
                           A  2197    ;----------------------------------------------
                           A  2198    
                           A  2199    
00170B                     A  2200    os_get_dir_entry		
                           A  2201    
00170B CD E5 4E 00         A  2202    				call fs_get_dir_entry	
00170F 18 86               A  2203    				jr os_rffsc
                           A  2204    
                           A  2205    
                           A  2206    ;----------------------------------------------
                           A  2207    
                           A  2208    
001711                     A  2209    os_goto_next_dir_entry	
                           A  2210    	
001711 CD 72 4F 00         A  2211    				call fs_goto_next_dir_entry	
001715 18 80               A  2212    				jr os_rffsc
                           A  2213    
                           A  2214    
                           A  2215    ;----------------------------------------------
                           A  2216    
                           A  2217    
001717                     A  2218    os_get_current_dir_name
                           A  2219    
001717 CD D6 52 00         A  2220    				call fs_get_current_dir_name
00171B C3 97 16 00         A  2221    				jr os_rffsc
                           A  2222    				
                           A  2223    
                           A  2224    ;----------------------------------------------
                           A  2225    
                           A  2226    
00171F CC AE 15 00         A  2227    ext_rename_file	call z,mbase_hl
001723 CC BF 15 00         A  2228    				call z,mbase_de
                           A  2229    
001727 D5                  A  2230    os_rename_file	push de
001728 CD 0A 52 00         A  2231    				call fs_hl_to_alt_filename		00172C E1                  A  2232    				pop hl				
00172D CD 10 52 00         A  2233    				call fs_hl_to_filename	
001731 CD 8A 4E 00         A  2234    				call fs_rename_command
001735 C3 97 16 00         A  2235    				jr os_rffsc
                           A  2236    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2237    
                           A  2238    ;----------------------------------------------
                           A  2239    
                           A  2240    
001739 CC AE 15 00         A  2241    ext_delete_dir	call z,mbase_hl					                           A  2242    
00173D CD 10 52 00         A  2243    os_delete_dir	call fs_hl_to_filename
001741 CD 03 4C 00         A  2244    				call fs_delete_dir_command
001745 C3 97 16 00         A  2245    				jp os_rffsc
                           A  2246    	
                           A  2247    	
                           A  2248    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2249    
                           A  2250    
001749                     A  2251    ext_read_sector
001749 CD 94 17 00         A  2252    				call ext_sector_access_preamble
00174D C0                  A  2253    				ret nz
00174E 32 02 5F 00         A  2254    				ld (current_driver),a
001752 CD AD 53 00         A  2255    				call fs_read_sector
001756 20 11               A  2256    				jr nz,sect_done
001758 38 0F               A  2257    				jr c,sect_done
00175A 21 32 66 00         A  2258    				ld hl,sector_buffer
00175E ED5B 12 5F 00       A  2259    				ld de,(sector_rd_wr_addr)
001763 01000200            A  2260    				ld bc,512
001767 EDB0                A  2261    				ldir			
001769 F5                  A  2262    sect_done		push af
00176A 3A 38 60 00         A  2263    				ld a,(sys_driver_backup)		00176E 32 02 5F 00         A  2264    				ld (current_driver),a
001772 F1                  A  2265    				pop af
001773 C3 97 16 00         A  2266    				jp os_rffsc
                           A  2267    				
                           A  2268    
001777                     A  2269    ext_write_sector
                           A  2270    			
001777 CD 94 17 00         A  2271    				call ext_sector_access_preamble
00177B C0                  A  2272    				ret nz
00177C 32 02 5F 00         A  2273    				ld (current_driver),a
001780 2A 12 5F 00         A  2274    				ld hl,(sector_rd_wr_addr)
001784 11 32 66 00         A  2275    				ld de,sector_buffer
001788 01000200            A  2276    				ld bc,512
00178C EDB0                A  2277    				ldir			
00178E CD C5 53 00         A  2278    				call fs_write_sector
001792 18 D5               A  2279    				jr sect_done
                           A  2280    
                           A  2281    
001794                     A  2282    ext_sector_access_preamble
                           A  2283    
001794 CC AE 15 00         A  2284    				call z,mbase_hl
001798 22 12 5F 00         A  2285    				ld (sector_rd_wr_addr),hl
                           A  2286    				
00179C 78                  A  2287    				ld a,b
00179D F5                  A  2288    				push af							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00179E DD21 DE 60 00       A  2289    				ld ix,sector_lba0
0017A3 DD1F00              A  2290    				ld (ix),de						0017A6 DD7103              A  2291    				ld (ix+3),c
0017A9 CD B1 1A 00         A  2292    				call dev_to_driver_lookup		0017AD E5                  A  2293    				push hl
0017AE DDE1                A  2294    				pop ix
0017B0 2A DE 60 00         A  2295    				ld hl,(sector_lba0)				0017B4 3A E1 60 00         A  2296    				ld a,(sector_lba3)				0017B8 DD0701              A  2297    				ld bc,(ix+1)					0017BB B7                  A  2298    				or a							0017BC ED42                A  2299    				sbc hl,bc
0017BE DD9E04              A  2300    				sbc a,(ix+4)
0017C1 38 05               A  2301    				jr c,range_ok
0017C3 F1                  A  2302    				pop af
0017C4 3ED5                A  2303    				ld a,0d5h						0017C6 B7                  A  2304    				or a							0017C7 C9                  A  2305    				ret
                           A  2306    	
0017C8 3A 02 5F 00         A  2307    range_ok		ld a,(current_driver)
0017CC 32 38 60 00         A  2308    				ld (sys_driver_backup),a
0017D0 F1                  A  2309    				pop af							0017D1 CD B1 1A 00         A  2310    				call dev_to_driver_lookup
0017D5 30 02               A  2311    				jr nc,bad_dev
0017D7 BF                  A  2312    os_null			cp a							0017D8 C9                  A  2313    				ret
                           A  2314    					
0017D9 3ED0                A  2315    bad_dev			ld a,0d0h						0017DB B7                  A  2316    				or a							0017DC C9                  A  2317    				ret	
                           A  2318    			
                           A  2319    
                           A  2320    ;----------------------------------------------
                           A  2321    
                           A  2322    
0017DD                     A  2323    os_get_device_info
                           A  2324    
0017DD 21 B3 5F 00         A  2325    				ld hl,host_device_hardware_info
0017E1 11 15 5F 00         A  2326    				ld de,driver_table
0017E5 3A 03 5F 00         A  2327    				ld a,(device_count)
0017E9 47                  A  2328    				ld b,a
0017EA 3A 02 5F 00         A  2329    				ld a,(current_driver)
0017EE BF                  A  2330    				cp a
0017EF C9                  A  2331    				ret
                           A  2332    
                           A  2333    
                           A  2334    
                           A  2335    
0017F0                     A  2336    os_get_volume_info
                           A  2337    
0017F0 21 33 5F 00         A  2338    				ld hl,volume_mount_list	
0017F4 3A 04 5F 00         A  2339    				ld a,(volume_count)
0017F8 47                  A  2340    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017F9 3A 01 5F 00         A  2341    				ld a,(current_volume)
0017FD C9                  A  2342    				ret
                           A  2343    				
                           A  2344    		
                           A  2345    ;----------------------------------------------
                           A  2346    
                           A  2347    
0017FE                     A  2348    ext_serial_get_header
                           A  2349    
0017FE CC AE 15 00         A  2350    				call z,mbase_hl
001802 7B                  A  2351    				ld a,e
001803 CD 17 44 00         A  2352    				call serial_get_header
001807 DDE5                A  2353    				push ix
001809 D1                  A  2354    				pop de
00180A C9                  A  2355    				ret
                           A  2356    				
                           A  2357    				
00180B                     A  2358    ext_serial_receive_file
                           A  2359    				
00180B CC AE 15 00         A  2360    				call z,mbase_hl
00180F CD B2 44 00         A  2361    				call serial_receive_file
001813 C9                  A  2362    				ret
                           A  2363    				
                           A  2364    	
001814                     A  2365    ext_serial_send_file
                           A  2366    
001814 CC AE 15 00         A  2367    				call z,mbase_hl					001818 CC BF 15 00         A  2368    				call z,mbase_de					00181C D5                  A  2369    				push de	
00181D DDE1                A  2370    				pop ix							00181F C5                  A  2371    				push bc							001820 D1                  A  2372    				pop de							001821 CD 7B 45 00         A  2373    				call serial_send_file
001825 C9                  A  2374    				ret
                           A  2375    
                           A  2376    
001826                     A  2377    ext_serial_tx
001826 7B                  A  2378    				ld a,e
001827 CD 65 3D 00         A  2379    				call send_serial_byte
00182B AF                  A  2380    				xor a							00182C C9                  A  2381    				ret
                           A  2382    
                           A  2383    
00182D                     A  2384    ext_serial_rx
00182D 7B                  A  2385    				ld a,e
00182E 32 D1 5E 00         A  2386    				ld (serial_timeout),a
001832 CD 2A 3D 00         A  2387    				call receive_serial_byte
001836 C9                  A  2388    				ret
                           A  2389    				
                           A  2390    
                           A  2391    ;----------------------------------------------
                           A  2392    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001837                     A  2393    ext_mount_volumes
                           A  2394    
001837 7B                  A  2395    				ld a,e
                           A  2396    
001838                     A  2397    os_mount_volumes
                           A  2398    				
001838 32 39 60 00         A  2399    				ld (os_quiet_mode),a			                           A  2400    				
00183C 21 BB 55 00         A  2401    				ld hl,storage_txt
001840 CD 16 0F 00         A  2402    				call os_print_string_cond
001844 CD 6C 18 00         A  2403    				call mount_go
001848 AF                  A  2404    				xor a
001849 32 01 5F 00         A  2405    tvloop			ld (current_volume),a
00184D CD C7 1A 00         A  2406    				call os_change_volume			001851 C8                  A  2407    				ret z							001852 3A 01 5F 00         A  2408    				ld a,(current_volume)			001856 3C                  A  2409    				inc a
001857 FE08                A  2410    				cp max_volumes
001859 20 EE               A  2411    				jr nz,tvloop
00185B 3A 03 5F 00         A  2412    				ld a,(device_count)
00185F B7                  A  2413    				or a
001860 20 08               A  2414    				jr nz,mfsdevs
001862 21 FF 5C 00         A  2415    				ld hl,none_found_msg
001866 CD F5 13 00         A  2416    				call os_show_packed_text_cond
00186A AF                  A  2417    mfsdevs			xor a
00186B C9                  A  2418    				ret
                           A  2419    
                           A  2420    
                           A  2421    
00186C 21 33 5F 00         A  2422    mount_go		ld hl,volume_mount_list			001870 01800000            A  2423    				ld bc,max_volumes*16
001874 AF                  A  2424    clrdl_lp		xor a
001875 CD 87 15 00         A  2425    				call os_bchl_memfill
                           A  2426    								
001879 21 1B 5F 00         A  2427    				ld hl,volume_dir_clusters		00187D 01180000            A  2428    				ld bc,max_volumes*3		
001881 AF                  A  2429    				xor a	
001882 CD 87 15 00         A  2430    				call os_bchl_memfill	
                           A  2431    			
001886 11 B3 5F 00         A  2432    				ld de,host_device_hardware_info
00188A ED53 33 60 00       A  2433    				ld (dhwn_temp_pointer),de
                           A  2434    				
00188F FD21 33 5F 00       A  2435    				ld iy,volume_mount_list
001894 AF                  A  2436    				xor a
001895 32 04 5F 00         A  2437    				ld (volume_count),a
001899 32 03 5F 00         A  2438    				ld (device_count),a
00189D 32 02 5F 00         A  2439    mnt_loop		ld (current_driver),a			0018A1 CD 3D 1A 00         A  2440    				call locate_driver_base			0018A5 21000000            A  2441    				ld hl,0
0018A9 AF                  A  2442    				xor a
0018AA ED5A                A  2443    				adc hl,de
0018AC C8                  A  2444    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018AD EB                  A  2445    				ex de,hl						0018AE FDE5                A  2446    				push iy
0018B0 CD C1 18 00         A  2447    				call find_dev					0018B4 FDE1                A  2448    				pop iy							0018B6 DC C2 18 00         A  2449    				call c,got_dev		
0018BA 3A 02 5F 00         A  2450    nxt_drv			ld a,(current_driver)			0018BE 3C                  A  2451    				inc a
0018BF 18 DC               A  2452    				jr mnt_loop
                           A  2453    
                           A  2454    				
0018C1 E9                  A  2455    find_dev		jp (hl)
                           A  2456    			
                           A  2457    			
0018C2 E5                  A  2458    got_dev			push hl							0018C3 D5                  A  2459    				push de							0018C4 C5                  A  2460    				push bc
0018C5 CD BE 13 00         A  2461    				call os_new_line_cond			0018C9 015B0100            A  2462    				ld bc,015bh
0018CD CD 4E 1A 00         A  2463    				call os_print_multiple_chars_co
0018D1 3A 02 5F 00         A  2464    				ld a,(current_driver)
0018D5 CD 3D 1A 00         A  2465    				call locate_driver_base
0018D9 210C0000            A  2466    				ld hl,0ch
0018DD 19                  A  2467    				add hl,de
0018DE CD 16 0F 00         A  2468    				call os_print_string_cond		0018E2 015D0100            A  2469    				ld bc,015dh
0018E6 CD 4E 1A 00         A  2470    				call os_print_multiple_chars_co
0018EA C1                  A  2471    				pop bc
0018EB D1                  A  2472    				pop de
0018EC AF                  A  2473    				xor a
0018ED 32 37 60 00         A  2474    				ld (vols_on_device_temp),a
                           A  2475    				
0018F1 21 03 5F 00         A  2476    				ld hl,device_count
0018F5 34                  A  2477    				inc (hl)						0018F6 3A 02 5F 00         A  2478    				ld a,(current_driver)
0018FA 2A 33 60 00         A  2479    				ld hl,(dhwn_temp_pointer)	
0018FE 77                  A  2480    				ld (hl),a
0018FF 23                  A  2481    				inc hl
001900 73                  A  2482    				ld (hl),e						001901 FD7304              A  2483    				ld (iy+4),e						001904 23                  A  2484    				inc hl							001905 72                  A  2485    				ld (hl),d
001906 FD7205              A  2486    				ld (iy+5),d
001909 23                  A  2487    				inc hl
00190A 71                  A  2488    				ld (hl),c			
00190B FD7106              A  2489    				ld (iy+6),c
00190E 23                  A  2490    				inc hl
00190F 70                  A  2491    				ld (hl),b						001910 23                  A  2492    				inc hl
001911 D1                  A  2493    				pop de
001912 EB                  A  2494    				ex de,hl
001913 01160000            A  2495    				ld bc,22
001917 EDB0                A  2496    				ldir							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001919 AF                  A  2497    				xor a
00191A 0605                A  2498    				ld b,5		
00191C 12                  A  2499    clrrode			ld (de),a						00191D 13                  A  2500    				inc de
00191E 10 FC               A  2501    				djnz clrrode
001920 ED53 33 60 00       A  2502    				ld (dhwn_temp_pointer),de		                           A  2503    					
001925 AF                  A  2504    				xor a							001926 FDE5                A  2505    fnxtpart		push iy
001928 CD AD 47 00         A  2506    				call fs_get_partition_info
00192C FDE1                A  2507    				pop iy
00192E 38 31               A  2508    				jr c,nxt_dev					001930 FECE                A  2509    				cp 0ceh							001932 28 2D               A  2510    				jr z,nxt_dev
001934 F5                  A  2511    				push af
001935 FD360001            A  2512    				ld (iy),1						001939 3A 02 5F 00         A  2513    				ld a,(current_driver)
00193D FD7701              A  2514    				ld (iy+1),a						001940 3A 36 60 00         A  2515    				ld a,(partition_temp)	
001944 FD7707              A  2516    				ld (iy+7),a						001947 F1                  A  2517    				pop af
001948 B7                  A  2518    				or a
001949 28 35               A  2519    				jr z,dev_mbr
00194B AF                  A  2520    				xor a
00194C FD7708              A  2521    				ld (iy+8),a						00194F FD7709              A  2522    				ld (iy+9),a						001952 FD770A              A  2523    				ld (iy+10),a					001955 FD770B              A  2524    				ld (iy+11),a
001958 CD CC 19 00         A  2525    				call show_vol_info
00195C CD BD 19 00         A  2526    				call test_max_vol
001960 C8                  A  2527    				ret z							                           A  2528    			
001961 3A 37 60 00         A  2529    nxt_dev			ld a,(vols_on_device_temp)		001965 B7                  A  2530    				or a
001966 C0                  A  2531    				ret nz		
001967 CD 1E 1A 00         A  2532    				call test_quiet_mode
00196B 20 06               A  2533    				jr nz,skp_cu
00196D 3E0A                A  2534    				ld a,10
00196F 32 E3 60 00         A  2535    				ld (cursor_x),a
001973 21 FC 5C 00         A  2536    skp_cu			ld hl,no_vols_msg				001977 CD F5 13 00         A  2537    				call os_show_packed_text_cond
00197B CD BE 13 00         A  2538    				call os_new_line_cond
00197F C9                  A  2539    				ret
                           A  2540    				
                           A  2541    			
001980 11040000            A  2542    dev_mbr			ld de,4
001984 19                  A  2543    				add hl,de
001985 7E                  A  2544    				ld a,(hl)						001986 B7                  A  2545    				or a
001987 C8                  A  2546    				ret z							001988 19                  A  2547    				add hl,de
                           A  2548    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001989 FDE5                A  2549    				push iy
00198B 0604                A  2550    				ld b,4
00198D 7E                  A  2551    sfmbrlp			ld a,(hl)						00198E FD7708              A  2552    				ld (iy+8),a
001991 23                  A  2553    				inc hl
001992 FD23                A  2554    				inc iy
001994 10 F7               A  2555    				djnz sfmbrlp
001996 FDE1                A  2556    				pop iy
001998 FDE5                A  2557    				push iy
00199A 0603                A  2558    				ld b,3	
00199C 7E                  A  2559    nsivlp			ld a,(hl)
00199D FD7704              A  2560    				ld (iy+4),a						0019A0 23                  A  2561    				inc hl
0019A1 FD23                A  2562    				inc iy
0019A3 10 F7               A  2563    				djnz nsivlp
0019A5 FDE1                A  2564    				pop iy
                           A  2565    				
0019A7 CD CC 19 00         A  2566    				call show_vol_info
0019AB CD BD 19 00         A  2567    				call test_max_vol	
0019AF C8                  A  2568    				ret z							0019B0 3A 36 60 00         A  2569    				ld a,(partition_temp)
0019B4 3C                  A  2570    				inc a
0019B5 FE04                A  2571    				cp 4							0019B7 C2 26 19 00         A  2572    				jp nz,fnxtpart
0019BB 18 A4               A  2573    				jr nxt_dev
                           A  2574    				
                           A  2575    
0019BD                     A  2576    test_max_vol
                           A  2577    			
0019BD 11100000            A  2578    				ld de,16
0019C1 FD19                A  2579    				add iy,de			
0019C3 21 04 5F 00         A  2580    				ld hl,volume_count
0019C7 34                  A  2581    				inc (hl)
0019C8 7E                  A  2582    				ld a,(hl)
0019C9 FE08                A  2583    				cp max_volumes
0019CB C9                  A  2584    				ret
                           A  2585    			
                           A  2586    			
0019CC                     A  2587    show_vol_info
                           A  2588    				
0019CC CD 1E 1A 00         A  2589    				call test_quiet_mode
0019D0 20 06               A  2590    				jr nz,skp_cm2
0019D2 3E09                A  2591    				ld a,9			
0019D4 32 E3 60 00         A  2592    				ld (cursor_x),a
0019D8 3A 04 5F 00         A  2593    skp_cm2			ld a,(volume_count)
0019DC F5                  A  2594    				push af
0019DD C630                A  2595    				add a,30h		
0019DF 32 09 5F 00         A  2596    				ld (vol_txt+4),a	
0019E3 21 05 5F 00         A  2597    				ld hl,vol_txt
0019E7 CD 16 0F 00         A  2598    				call os_print_string_cond		0019EB 21 37 60 00         A  2599    				ld hl,vols_on_device_temp
0019EF CBC6                A  2600    				set 0,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2601    			
0019F1 F1                  A  2602    				pop af
0019F2 FDE5                A  2603    				push iy
0019F4 CD C7 1A 00         A  2604    				call os_change_volume			0019F8 28 0A               A  2605    				jr z,vform_ok					0019FA 21 AC 5C 00         A  2606    svi_fe			ld hl,format_err_msg		
0019FE CD F5 13 00         A  2607    svi_pem			call os_show_packed_text_cond	001A02 18 0D               A  2608    				jr skpsvl
                           A  2609    			
001A04 CD C9 4F 00         A  2610    vform_ok		call fs_get_volume_label
001A08 38 0E               A  2611    				jr c,svi_hwe
001A0A B7                  A  2612    				or a
001A0B 20 ED               A  2613    				jr nz,svi_fe
001A0D CD 16 0F 00         A  2614    				call os_print_string_cond		                           A  2615    			
001A11 CD BE 13 00         A  2616    skpsvl			call os_new_line_cond
001A15 FDE1                A  2617    				pop iy
001A17 C9                  A  2618    				ret
                           A  2619    				
001A18 21 F8 5A 00         A  2620    svi_hwe			ld hl,disk_err_msg
001A1C 18 E0               A  2621    				jr svi_pem
                           A  2622    			
                           A  2623    			
001A1E                     A  2624    test_quiet_mode
                           A  2625    			
001A1E 3A 39 60 00         A  2626    				ld a,(os_quiet_mode)
001A22 B7                  A  2627    				or a
001A23 C9                  A  2628    				ret
                           A  2629    
                           A  2630    ;----------------------------------------------
                           A  2631    
                           A  2632    
001A24                     A  2633    show_dev_driver_name
                           A  2634    	
                           A  2635    	
001A24 CD 3D 1A 00         A  2636    				call locate_driver_base			001A28 EB                  A  2637    				ex de,hl
001A29 110C0000            A  2638    				ld de,0ch
001A2D 19                  A  2639    				add hl,de
001A2E CD 1B 0F 00         A  2640    				call os_print_string			001A32 C5                  A  2641    				push bc
001A33 01200100            A  2642    				ld bc,0120h
001A37 CD 53 1A 00         A  2643    				call os_print_multiple_chars	001A3B C1                  A  2644    				pop bc
001A3C C9                  A  2645    				ret
                           A  2646    
                           A  2647    
001A3D                     A  2648    locate_driver_base
                           A  2649    
001A3D E5                  A  2650    				push hl							001A3E 11030000            A  2651    				ld de,3							001A42 57                  A  2652    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A43 ED5C                A  2653    				mlt de
001A45 21 15 5F 00         A  2654    				ld hl,driver_table
001A49 19                  A  2655    				add hl,de
001A4A ED17                A  2656    				ld de,(hl)
001A4C E1                  A  2657    				pop hl
001A4D C9                  A  2658    				ret
                           A  2659    				
                           A  2660    		
                           A  2661    ;----------------------------------------------
                           A  2662    
001A4E                     A  2663    os_print_multiple_chars_cond
                           A  2664    
001A4E CD 1E 1A 00         A  2665    				call test_quiet_mode
001A52 C0                  A  2666    				ret nz
                           A  2667    			
001A53                     A  2668    os_print_multiple_chars
                           A  2669    
                           A  2670    ;c = char
                           A  2671    ;b = count
001A53 C5                  A  2672    				push bc
001A54 E5                  A  2673    				push hl
001A55 79                  A  2674    				ld a,c
001A56 21 36 56 00         A  2675    				ld hl,rep_char_txt
001A5A 77                  A  2676    				ld (hl),a
001A5B E5                  A  2677    pmch_lp			push hl
001A5C CD 1B 0F 00         A  2678    				call os_print_string
001A60 E1                  A  2679    				pop hl
001A61 10 F8               A  2680    				djnz pmch_lp
001A63 E1                  A  2681    				pop hl
001A64 C1                  A  2682    				pop bc
001A65 C9                  A  2683    				ret
                           A  2684    
                           A  2685    ;----------------------------------------------
                           A  2686    
                           A  2687    
001A66 7B                  A  2688    ext_plot_char	ld a,e
001A67 C3 9C 3E 00         A  2689    				jp hwsc_plot_char
                           A  2690    				
                           A  2691    
                           A  2692    ;----------------------------------------------
                           A  2693    ; Some file system related routines 
                           A  2694    ;----------------------------------------------
                           A  2695    
                           A  2696    
001A6B                     A  2697    fs_get_dir_cluster
                           A  2698    
                           A  2699    
001A6B F5                  A  2700    				push af							001A6C E5                  A  2701    				push hl			
001A6D CD 83 1A 00         A  2702    				call fs_get_dir_cluster_address
001A71 ED17                A  2703    				ld de,(hl)
001A73 E1                  A  2704    dclopdone		pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A74 F1                  A  2705    				pop af
001A75 BF                  A  2706    				cp a							001A76 C9                  A  2707    				ret
                           A  2708    				
                           A  2709    
                           A  2710    
                           A  2711    
                           A  2712    
001A77                     A  2713    fs_update_dir_cluster
                           A  2714    
001A77 F5                  A  2715    				push af							001A78 E5                  A  2716    				push hl			
001A79 D5                  A  2717    				push de			
001A7A CD 83 1A 00         A  2718    				call fs_get_dir_cluster_address
001A7E D1                  A  2719    				pop de
001A7F ED1F                A  2720    				ld (hl),de
001A81 18 F0               A  2721    				jr dclopdone
                           A  2722    			
                           A  2723    
                           A  2724    
                           A  2725    
                           A  2726    
001A83                     A  2727    fs_get_dir_cluster_address
                           A  2728    
001A83 21 1B 5F 00         A  2729    				ld hl,volume_dir_clusters		001A87 3A 01 5F 00         A  2730    				ld a,(current_volume)	
001A8B 11030000            A  2731    				ld de,3
001A8F 57                  A  2732    				ld d,a
001A90 ED5C                A  2733    				mlt de
001A92 19                  A  2734    				add hl,de
001A93 C9                  A  2735    				ret
                           A  2736    				
                           A  2737    	
                           A  2738    
                           A  2739    	
                           A  2740    	
001A94                     A  2741    fs_get_total_sectors
                           A  2742    
                           A  2743    
001A94 F5                  A  2744    				push af
001A95 E5                  A  2745    				push hl							001A96 CD A5 1A 00         A  2746    				call fs_calc_volume_offset	
001A9A 21 37 5F 00         A  2747    				ld hl,volume_mount_list+4
001A9E 19                  A  2748    				add hl,de
001A9F ED17                A  2749    				ld de,(hl)
001AA1 E1                  A  2750    				pop hl
001AA2 F1                  A  2751    				pop af
001AA3 BF                  A  2752    				cp a							001AA4 C9                  A  2753    				ret
                           A  2754    
                           A  2755    
                           A  2756    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2757    
                           A  2758    
001AA5                     A  2759    fs_calc_volume_offset
                           A  2760    
001AA5 3A 01 5F 00         A  2761    				ld a,(current_volume)			001AA9 11100000            A  2762    calc_vol		ld de,16
001AAD 57                  A  2763    				ld d,a
001AAE ED5C                A  2764    				mlt de
001AB0 C9                  A  2765    				ret
                           A  2766    
                           A  2767    
                           A  2768    
                           A  2769    
                           A  2770    
001AB1                     A  2771    dev_to_driver_lookup
                           A  2772    
001AB1 21 03 5F 00         A  2773    				ld hl,device_count				001AB5 BE                  A  2774    				cp (hl)							001AB6 D0                  A  2775    				ret nc
001AB7 11200000            A  2776    				ld de,32						001ABB 57                  A  2777    				ld d,a
001ABC ED5C                A  2778    				mlt de
001ABE 21 B3 5F 00         A  2779    				ld hl,host_device_hardware_info
001AC2 19                  A  2780    				add hl,de
001AC3 7E                  A  2781    				ld a,(hl)
001AC4 37                  A  2782    				scf
001AC5 C9                  A  2783    				ret
                           A  2784    				
                           A  2785    
                           A  2786    
001AC6                     A  2787    ext_change_volume
                           A  2788    
001AC6 7B                  A  2789    				ld a,e
                           A  2790    
001AC7                     A  2791    os_change_volume
                           A  2792    
001AC7 47                  A  2793    				ld b,a							001AC8 FE08                A  2794    				cp max_volumes		
001ACA 30 23               A  2795    				jr nc,fs_ccv2					                           A  2796    			
001ACC 3A 01 5F 00         A  2797    				ld a,(current_volume)			001AD0 F5                  A  2798    				push af
001AD1 78                  A  2799    				ld a,b
001AD2 32 01 5F 00         A  2800    				ld (current_volume),a			001AD6 CD F3 1A 00         A  2801    				call fs_set_driver_for_volume	                           A  2802    				
001ADA CD 0F 48 00         A  2803    				call fs_check_disk_format		001ADE 38 06               A  2804    				jr c,fs_cant_chg_vols	
001AE0 B7                  A  2805    				or a
001AE1 20 03               A  2806    				jr nz,fs_cant_chg_vols
001AE3 F1                  A  2807    				pop af							001AE4 AF                  A  2808    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AE5 C9                  A  2809    				ret
                           A  2810    
                           A  2811    
001AE6                     A  2812    fs_cant_chg_vols
                           A  2813    			
001AE6 F1                  A  2814    				pop af
001AE7 32 01 5F 00         A  2815    				ld (current_volume),a			001AEB CD F3 1A 00         A  2816    				call fs_set_driver_for_volume	                           A  2817    				
001AEF 3ECF                A  2818    fs_ccv2			ld a,0cfh						001AF1 B7                  A  2819    				or a
001AF2 C9                  A  2820    				ret
                           A  2821    					
                           A  2822    	
001AF3                     A  2823    fs_set_driver_for_volume
                           A  2824    
001AF3 CD A5 1A 00         A  2825    				call fs_calc_volume_offset		001AF7 21 34 5F 00         A  2826    				ld hl,volume_mount_list+1
001AFB 19                  A  2827    				add hl,de
001AFC 7E                  A  2828    				ld a,(hl)
001AFD 32 02 5F 00         A  2829    				ld (current_driver),a
001B01 C9                  A  2830    				ret
                           A  2831    
                           A  2832    
                           A  2833    ;----------------------------------------------
                           A  2834    
001B02                     A  2835    ext_file_sector_list
                           A  2836    
                           A  2837    ;Input HL = cluster, E = sector offset
                           A  2838    
                           A  2839    ;Output HL = new cluster, E = new sector number
                           A  2840    ;       IX = address of LBA0 LSB of sector (int
                           A  2841    
                           A  2842    				
001B02 3A 20 54 00         A  2843    				ld a,(fs_cluster_size)
001B06 BB                  A  2844    				cp e
001B07 20 0A               A  2845    				jr nz,fsl_sc
001B09 CD 55 52 00         A  2846    				call get_fat_entry_for_cluster
001B0D DA 32 16 00         A  2847    				jp c,os_fferr
001B11 1E00                A  2848    				ld e,0
001B13 CD 2C 53 00         A  2849    fsl_sc			call cluster_and_offset_to_lba
001B17 1C                  A  2850    				inc e
001B18 01 DE 60 00         A  2851    fsl_done		ld bc,sector_lba0
001B1C BF                  A  2852    				cp a							001B1D C9                  A  2853    				ret
                           A  2854    				
                           A  2855    ;----------------------------------------------
                           A  2856    
                           A  2857    
001B1E E5                  A  2858    os_count_chars	push hl							001B1F 01000000            A  2859    				ld bc,0
001B23 7E                  A  2860    cch_lp			ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B24 B7                  A  2861    				or a
001B25 28 04               A  2862    				jr z,cch_end
001B27 23                  A  2863    				inc hl
001B28 03                  A  2864    				inc bc
001B29 18 F8               A  2865    				jr cch_lp
001B2B E1                  A  2866    cch_end			pop hl
001B2C C9                  A  2867    				ret
                           A  2868    				
                           A  2869    			
                           A  2870    ;----------------------------------------------
                           A  2871    ; Environment variable code V0.01
                           A  2872    ;----------------------------------------------
                           A  2873    
       00000100            A  2874    envar_buffer_size equ 256
                           A  2875    
                           A  2876    ;----------------------------------------------
                           A  2877    
001B2D                     A  2878    ext_get_envar
001B2D CC AE 15 00         A  2879    				call z,mbase_hl
                           A  2880    
001B31                     A  2881    os_get_envar
                           A  2882    
                           A  2883    ;Set: 		HL = name of required variable
                           A  2884    ;Returns:	ZF Set: DE = address of variable's 
                           A  2885    ;        	ZF Not Set: Couldn't find variable
                           A  2886    				
001B31 DD21 42 62 00       A  2887    				ld ix,envar_list-1
001B36 CD 1E 1B 00         A  2888    env_fname		call os_count_chars				001B3A 78                  A  2889    				ld a,b
001B3B B1                  A  2890    				or c
001B3C 28 27               A  2891    				jr z,env_bad
                           A  2892    								
001B3E ED1201              A  2893    env_cname		lea de,ix+1
001B41 1A                  A  2894    				ld a,(de)
001B42 FEFF                A  2895    				cp 0ffh
001B44 28 1F               A  2896    				jr z,env_bad
001B46 C5                  A  2897    				push bc
001B47 41                  A  2898    				ld b,c
001B48 CD EA 11 00         A  2899    				call os_compare_strings
001B4C C1                  A  2900    				pop bc
001B4D 20 06               A  2901    				jr nz,env_nomatch
001B4F 03                  A  2902    				inc bc							001B50 EB                  A  2903    				ex de,hl
001B51 09                  A  2904    				add hl,bc
001B52 EB                  A  2905    				ex de,hl						001B53 AF                  A  2906    				xor a
001B54 C9                  A  2907    				ret			
                           A  2908    				
001B55 DD23                A  2909    env_nomatch		inc ix							001B57 CD FD 1B 00         A  2910    				call check_envar_bounds
001B5B 20 08               A  2911    				jr nz,env_bad
001B5D DD7E00              A  2912    				ld a,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B60 B7                  A  2913    				or a
001B61 28 DB               A  2914    				jr z,env_cname
001B63 18 F0               A  2915    				jr env_nomatch
                           A  2916    
001B65 3E82                A  2917    env_bad			ld a,82h						001B67 B7                  A  2918    				or a
001B68 C9                  A  2919    				ret	
                           A  2920    				
                           A  2921    ;----------------------------------------------
                           A  2922    
001B69                     A  2923    ext_set_envar
                           A  2924    
                           A  2925    ;HL = addr of variable name (zero terminated)
                           A  2926    ;DE = addr of data for variable (zero terminate
                           A  2927    
                           A  2928    ;Returns:
                           A  2929    ;ZF = Set: OK
                           A  2930    ;ZF = Not Set: No enough space for new variable
                           A  2931    		
001B69 CC AE 15 00         A  2932    				call z,mbase_hl
001B6D CC BF 15 00         A  2933    				call z,mbase_de
                           A  2934    
001B71 7E                  A  2935    os_set_envar	ld a,(hl)						001B72 B7                  A  2936    				or a
001B73 28 F0               A  2937    				jr z,env_bad
001B75 1A                  A  2938    				ld a,(de)
001B76 B7                  A  2939    				or a
001B77 28 EC               A  2940    				jr z,env_bad
                           A  2941    
001B79 E5                  A  2942    				push hl
001B7A D5                  A  2943    				push de
001B7B CD C7 1B 00         A  2944    				call os_delete_envar			001B7F D1                  A  2945    				pop de
001B80 E1                  A  2946    				pop hl
                           A  2947    				
001B81 DD2A 4D 63 00       A  2948    				ld ix,(envar_top_loc)			001B86 CD FD 1B 00         A  2949    env_enlp		call check_envar_bounds
001B8A 20 D9               A  2950    				jr nz,env_bad
001B8C 7E                  A  2951    				ld a,(hl)						001B8D DD7700              A  2952    				ld (ix),a
001B90 B7                  A  2953    				or a
001B91 28 05               A  2954    				jr z,env_ndone
001B93 23                  A  2955    				inc hl
001B94 DD23                A  2956    				inc ix
001B96 18 EE               A  2957    				jr env_enlp
                           A  2958    				
001B98 CD FD 1B 00         A  2959    env_ndone		call check_envar_bounds			001B9C 20 C7               A  2960    				jr nz,env_bad
001B9E DD36003D            A  2961    				ld (ix),'='
001BA2 DD23                A  2962    				inc ix
                           A  2963    
001BA4 CD FD 1B 00         A  2964    env_evlp		call check_envar_bounds			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BA8 20 BB               A  2965    				jr nz,env_bad
001BAA 1A                  A  2966    				ld a,(de)
001BAB DD7700              A  2967    				ld (ix),a
001BAE B7                  A  2968    				or a
001BAF 28 05               A  2969    				jr z,env_vdone
001BB1 13                  A  2970    				inc de
001BB2 DD23                A  2971    				inc ix
001BB4 18 EE               A  2972    				jr env_evlp
                           A  2973    
001BB6 DD23                A  2974    env_vdone		inc ix
001BB8 DD3600FF            A  2975    				ld (ix),0ffh
001BBC DD22 4D 63 00       A  2976    				ld (envar_top_loc),ix			001BC1 AF                  A  2977    				xor a
001BC2 C9                  A  2978    				ret
                           A  2979    
                           A  2980    	
                           A  2981    ;----------------------------------------------
                           A  2982    
001BC3                     A  2983    ext_delete_envar
                           A  2984    
001BC3 CC AE 15 00         A  2985    				call z,mbase_hl
                           A  2986    
001BC7                     A  2987    os_delete_envar
                           A  2988    
                           A  2989    ;HL = name of required variable (null terminate
                           A  2990    ;ZF = Set: OK
                           A  2991    ;ZF = Not Set: Didnt find named variable
                           A  2992    
                           A  2993    
001BC7 CD 31 1B 00         A  2994    				call os_get_envar				001BCB C0                  A  2995    				ret nz
                           A  2996    				
001BCC D5                  A  2997    				push de
001BCD E1                  A  2998    				pop hl
001BCE AF                  A  2999    				xor a
001BCF ED42                A  3000    				sbc hl,bc						                           A  3001    				
001BD1 13                  A  3002    env_fnxt		inc de							001BD2 D5                  A  3003    				push de
001BD3 DDE1                A  3004    				pop ix
001BD5 CD FD 1B 00         A  3005    				call check_envar_bounds
001BD9 20 8A               A  3006    				jr nz,env_bad
001BDB 1A                  A  3007    				ld a,(de)
001BDC B7                  A  3008    				or a
001BDD 20 F2               A  3009    				jr nz,env_fnxt
                           A  3010    
001BDF 13                  A  3011    env_gnxt		inc de							001BE0 EB                  A  3012    				ex de,hl
001BE1 7E                  A  3013    env_collp		ld a,(hl)
001BE2 12                  A  3014    				ld (de),a						001BE3 FEFF                A  3015    				cp 0ffh
001BE5 28 0F               A  3016    				jr z,env_clspd					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BE7 E5                  A  3017    				push hl
001BE8 DDE1                A  3018    				pop ix
001BEA CD FD 1B 00         A  3019    				call check_envar_bounds
001BEE C2 65 1B 00         A  3020    				jr nz,env_bad
001BF2 23                  A  3021    				inc hl
001BF3 13                  A  3022    				inc de
001BF4 18 EB               A  3023    				jr env_collp
                           A  3024    
001BF6 ED53 4D 63 00       A  3025    env_clspd		ld (envar_top_loc),de			001BFB AF                  A  3026    				xor a
001BFC C9                  A  3027    				ret
                           A  3028    				
                           A  3029    ;----------------------------------------------
                           A  3030    
001BFD                     A  3031    check_envar_bounds
                           A  3032    
001BFD C5                  A  3033    				push bc
001BFE E5                  A  3034    				push hl
001BFF DDE5                A  3035    				push ix
001C01 E1                  A  3036    				pop hl
001C02 01 44 63 00         A  3037    				ld bc,1+(envar_list+envar_buffe
001C06 AF                  A  3038    				xor a
001C07 ED42                A  3039    				sbc hl,bc
001C09 38 05               A  3040    				jr c,env_bok
001C0B AF                  A  3041    				xor a
001C0C 3C                  A  3042    				inc a
001C0D E1                  A  3043    				pop hl
001C0E C1                  A  3044    				pop bc
001C0F C9                  A  3045    				ret
                           A  3046    
001C10 AF                  A  3047    env_bok			xor a
001C11 E1                  A  3048    				pop hl
001C12 C1                  A  3049    				pop bc
001C13 C9                  A  3050    				ret
                           A  3051    						
                           A  3052    ;----------------------------------------------
                           A  3053    
001C14                     A  3054    os_get_keymap_location
                           A  3055    
001C14 21 4D 5D 00         A  3056    				ld hl,unshifted_keymap
001C18 BF                  A  3057    				cp a							001C19 C9                  A  3058    				ret
                           A  3059    
                           A  3060    
                           A  3061    ;----------------------------------------------
                           A  3062    
                           A  3063    
001C1A CC AE 15 00         A  3064    ext_play_audio	call z,mbase_hl
                           A  3065    				
001C1E CD 0E 43 00         A  3066    os_play_audio	call hwsc_play_audio
001C22 C9                  A  3067    				ret
                           A  3068    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3069    				
                           A  3070    ;==============================================
                           A  3071    ; Internal OS command routines
                           A  3072    ;==============================================
                           A  3073    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C23                     B     5    os_cmd_c
                           B     6    
001C23 CD 59 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C27 CD 82 1C 00         B     9    				call hexword_or_bust			001C2B CA 16 16 00         B    10    				jp z,os_no_d_addr_error
001C2F ED53 F1 60 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C34 CD 47 1C 00         B    13    				call test_mem_range				001C38 DA 1A 16 00         B    14    				jp c,os_range_error				001C3C ED5B F1 60 00       B    15    				ld de,(copy_dest_address)
001C41 EDB0                B    16    				ldir
                           B    17    
001C43 3E20                B    18    copy_done		ld a,020h						001C45 B7                  B    19    				or a
001C46 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C47                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C47 2A EE 60 00         B    33    				ld hl,(cmdop_end_address)	
001C4B ED4B EB 60 00       B    34    				ld bc,(cmdop_start_address)
001C50 C5                  B    35    				push bc
001C51 AF                  B    36    				xor a
001C52 ED42                B    37    				sbc hl,bc
001C54 E5                  B    38    				push hl
001C55 C1                  B    39    				pop bc
001C56 03                  B    40    				inc bc
001C57 E1                  B    41    				pop hl
001C58 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C59                     B    46    get_start_and_end
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    47    			
001C59 CD 9A 10 00         B    48    				call ascii_to_hexword			001C5D ED53 EB 60 00       B    49    				ld (cmdop_start_address),de
001C62 23                  B    50    				inc hl
001C63 28 09               B    51    				jr z,st_addrok
001C65 E1                  B    52    				pop hl							001C66 FE82                B    53    				cp 82h							001C68 28 02               B    54    				jr z,c_badhex
001C6A 3E16                B    55    				ld a,016h						001C6C B7                  B    56    c_badhex		or a
001C6D C9                  B    57    				ret
                           B    58    				
001C6E CD 9A 10 00         B    59    st_addrok		call ascii_to_hexword			001C72 ED53 EE 60 00       B    60    				ld (cmdop_end_address),de
001C77 23                  B    61    				inc hl
001C78 B7                  B    62    				or a
001C79 C8                  B    63    				ret z
001C7A E1                  B    64    				pop hl							001C7B FE82                B    65    				cp 82h							001C7D 28 ED               B    66    				jr z,c_badhex
001C7F 3E1C                B    67    				ld a,01ch						001C81 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C82                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C82 CD 9A 10 00         B    79    				call ascii_to_hexword		
001C86 FE82                B    80    				cp 82h
001C88 20 03               B    81    				jr nz,hex_good
001C8A E1                  B    82    				pop hl						; r
001C8B B7                  B    83    				or a	
001C8C C9                  B    84    				ret			 
001C8D FE81                B    85    hex_good		cp 081h						; n
001C8F C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C90                     B     5    os_cmd_cd	
                           B     6    
001C90 CD 93 16 00         B     7    				call os_check_volume_format	
001C94 C0                  B     8    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B     9    			
                           B    10    			
001C95 7E                  B    11    				ld a,(hl)						001C96 B7                  B    12    				or a				
001C97 CA 3E 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C9B 7E                  B    16    				ld a,(hl)						001C9C 23                  B    17    				inc hl
001C9D 46                  B    18    				ld b,(hl)
001C9E 2B                  B    19    				dec hl
001C9F FE2E                B    20    				cp '.'			
001CA1 20 08               B    21    				jr nz,cd_nual
001CA3 B8                  B    22    				cp b
001CA4 20 05               B    23    				jr nz,cd_nual
001CA6 CD EB 16 00         B    24    				call os_parent_dir	
001CAA C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CAB FE2F                B    28    cd_nual			cp 02fh			
001CAD 20 05               B    29    				jr nz,cd_nogor					001CAF CD F1 16 00         B    30    				call os_root_dir	
001CB3 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CB4 FE25                B    34    cd_nogor		cp '%'							001CB6 20 1F               B    35    				jr nz,cd_no_assign
001CB8 CD 31 1B 00         B    36    				call os_get_envar
001CBC 28 04               B    37    				jr z,cd_evok
001CBE 3ED1                B    38    				ld a,0d1h						001CC0 B7                  B    39    				or a
001CC1 C9                  B    40    				ret
001CC2 11000000            B    41    cd_evok			ld de,0
001CC6 5E                  B    42    				ld e,(hl)
001CC7 23                  B    43    				inc hl
001CC8 56                  B    44    				ld d,(hl)
001CC9 23                  B    45    				inc hl
001CCA 7E                  B    46    				ld a,(hl)
001CCB D5                  B    47    				push de
001CCC CD C7 1A 00         B    48    				call os_change_volume
001CD0 D1                  B    49    				pop de
001CD1 C0                  B    50    				ret nz
001CD2 CD 77 1A 00         B    51    				call fs_update_dir_cluster
001CD6 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CD7                     B    55    cd_no_assign
                           B    56    			
001CD7 3A 01 5F 00         B    57    				ld a,(current_volume)
001CDB 32 35 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CDF E5                  B    60    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CE0 DDE1                B    61    				pop ix
001CE2 DD7E04              B    62    				ld a,(ix+4)
001CE5 FE3A                B    63    				cp ':'							001CE7 20 25               B    64    				jr nz,cd_nchvol
001CE9 11 06 5F 00         B    65    				ld de,vol_txt+1
001CED 0603                B    66    				ld b,3
001CEF CD EA 11 00         B    67    				call os_compare_strings
001CF3 20 19               B    68    				jr nz,cd_nchvol
001CF5 11050000            B    69    				ld de,5
001CF9 19                  B    70    				add hl,de
001CFA 22 A4 61 00         B    71    				ld (os_args_loc),hl				001CFE DD7E03              B    72    				ld a,(ix+3)						001D01 D630                B    73    				sub 030h
001D03 CD C7 1A 00         B    74    				call os_change_volume
001D07 C0                  B    75    				ret nz							001D08 CD F1 16 00         B    76    				call os_root_dir				001D0C 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D0E CD 6B 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D12 ED53 32 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D17 E5                  B    83    cd_mollp		push hl
001D18 CD E1 16 00         B    84    				call os_change_dir				001D1C E1                  B    85    				pop hl
001D1D 20 0A               B    86    				jr nz,cd_dcherr
001D1F 7E                  B    87    cd_mol			ld a,(hl)						001D20 23                  B    88    				inc hl
001D21 B7                  B    89    				or a
001D22 C8                  B    90    				ret z
001D23 FE2F                B    91    				cp 02fh
001D25 28 F0               B    92    				jr z,cd_mollp
001D27 18 F6               B    93    				jr cd_mol
                           B    94    					
001D29                     B    95    cd_dcherr	
                           B    96    			
001D29 F5                  B    97    				push af							001D2A ED5B 32 68 00       B    98    				ld de,(original_dir_cd_cmd)
001D2F CD 77 1A 00         B    99    				call fs_update_dir_cluster
001D33 3A 35 68 00         B   100    				ld a,(original_vol_cd_cmd)
001D37 CD C7 1A 00         B   101    				call os_change_volume	
001D3B F1                  B   102    				pop af
001D3C B7                  B   103    				or a
001D3D C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D3E                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D3E 0610                B   113    				ld b,max_dirs
001D40 0E00                B   114    				ld c,0
001D42 C5                  B   115    lp1				push bc
001D43 CD 6B 1A 00         B   116    				call fs_get_dir_cluster
001D47 C1                  B   117    				pop bc
001D48 D5                  B   118    				push de
001D49 0C                  B   119    				inc c
001D4A C5                  B   120    				push bc
001D4B CD EB 16 00         B   121    				call os_parent_dir
001D4F C1                  B   122    				pop bc
001D50 20 02               B   123    				jr nz,shdir_lp
001D52 10 EE               B   124    				djnz lp1
                           B   125    				
001D54 D1                  B   126    shdir_lp		pop de
001D55 C5                  B   127    				push bc
001D56 CD 77 1A 00         B   128    				call fs_update_dir_cluster
001D5A CD 17 17 00         B   129    				call os_get_current_dir_name
001D5E CD 1B 0F 00         B   130    				call os_print_string
001D62 21 74 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D66 CD 1B 0F 00         B   132    				call os_print_string
001D6A C1                  B   133    				pop bc
001D6B 0D                  B   134    				dec c
001D6C 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D6E CD C3 13 00         B   137    				call os_new_line	
001D72 AF                  B   138    				xor a
001D73 C9                  B   139    				ret
                           B   140    			
001D74 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006832            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006835            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D76                     B     5    os_cmd_cls
                           B     6    
001D76 CD 26 3E 00         B     7    				call hwsc_clear_screen
001D7A AF                  B     8    				xor a
001D7B C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
                           B     3    ;----------------------------------------------
                           B     4    
001D7C                     B     5    os_cmd_colon
                           B     6    	
001D7C CD 82 1C 00         B     7    				call hexword_or_bust			001D80 CA 06 16 00         B     8    				jp z,os_no_start_addr			001D84 D5                  B     9    				push de
001D85 DDE1                B    10    				pop ix							                           B    11    			
001D87 CD 82 1C 00         B    12    wmblp			call hexword_or_bust			001D8B 28 07               B    13    				jr z,os_ccmdn
001D8D DD7300              B    14    				ld (ix),e						001D90 DD23                B    15    				inc ix
001D92 18 F3               B    16    				jr wmblp
                           B    17    
001D94 AF                  B    18    os_ccmdn		xor a
001D95 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001D96 FD21 7D 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D9B FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001D9F CD 82 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DA3 28 05               B    10    				jr z,d_no_hex					001DA5 ED53 F4 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001DAA 3A A3 5E 00         B    13    d_no_hex		ld a,(charmap_rows)				001DAE D602                B    14    				sub a,2
001DB0 47                  B    15    				ld b,a
001DB1 C5                  B    16    dis_loop		push bc
                           B    17    				
001DB2 DD2A F4 28 00       B    18    				ld ix,(dis_addr)				001DB7 CD 5F 23 00         B    19    				call show_ix					001DBB 3E20                B    20    				ld a,' '
001DBD CD 53 23 00         B    21    				call show_ascii_char
                           B    22    
001DC1 FD21 7D 23 00       B    23    				ld iy,prefix_bits_loc
001DC6 FD360000            B    24    				ld (iy),0						001DCA CD 06 1E 00         B    25    				call dis_instr					001DCE DD23                B    26    				inc ix							                           B    27    				
001DD0 3E1A                B    28    				ld a,26							001DD2 32 E3 60 00         B    29    				ld (cursor_pos+1),a				001DD6 ED4B F4 28 00       B    30    				ld bc,(dis_addr)
001DDB DD22 F4 28 00       B    31    				ld (dis_addr),ix				Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DE0 DDE5                B    32    				push ix
001DE2 E1                  B    33    				pop hl
001DE3 AF                  B    34    				xor a
001DE4 ED42                B    35    				sbc hl,bc						001DE6 7D                  B    36    				ld a,l
001DE7 E607                B    37    				and 7
001DE9 6F                  B    38    				ld l,a
001DEA 0A                  B    39    shexoplp		ld a,(bc)						001DEB CD 42 23 00         B    40    				call show_hex_byte
001DEF 3E20                B    41    				ld a,' '
001DF1 CD 53 23 00         B    42    				call show_ascii_char
001DF5 03                  B    43    				inc bc
001DF6 2D                  B    44    				dec l
001DF7 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DF9 CD C3 13 00         B    47    				call os_new_line
001DFD C1                  B    48    				pop bc
001DFE 10 B1               B    49    				djnz dis_loop
                           B    50    
001E00 CD C3 13 00         B    51    				call os_new_line
001E04 AF                  B    52    				xor a
001E05 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E06 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E09 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E0D 28 04               B    73    			jr z,z80_list					; T
001E0F FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E13                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E13 FE40                B    79    			cp 40h
001E15 20 0A               B    80    			jr nz,not_sis
001E17 FDCB00B6            B    81    			res il_prefix,(iy)
001E1B FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E1F 18 28               B    83    			jr set_adl_pf
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B    84    			
001E21 FE49                B    85    not_sis		cp 49h
001E23 20 0A               B    86    			jr nz,not_lis
001E25 FDCB00B6            B    87    			res il_prefix,(iy)
001E29 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E2D 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E2F FE52                B    91    not_lis		cp 52h
001E31 20 0A               B    92    			jr nz,not_sil
001E33 FDCB00F6            B    93    			set il_prefix,(iy)
001E37 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E3B 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E3D FE5B                B    97    not_sil		cp 5bh
001E3F 20 11               B    98    			jr nz,not_adl_prefix_byte
001E41 FDCB00F6            B    99    			set il_prefix,(iy)
001E45 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E49 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E4D DD23                B   103    			inc ix
001E4F DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E52                     B   108    not_adl_prefix_byte			
                           B   109    			
001E52 FECB                B   110    			cp 0cbh								001E54 20 08               B   111    			jr nz,not_cb
001E56 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E5A DD23                B   113    			inc ix
001E5C 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E5E FEED                B   116    not_cb		cp 0edh
001E60 20 08               B   117    			jr nz,not_ed
001E62 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E66 DD23                B   119    			inc ix
001E68 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E6A FEDD                B   122    not_ed		cp 0ddh
001E6C 20 18               B   123    			jr nz,not_dd
001E6E CD A1 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E72 28 92               B   125    			jr z,dis_instr						001E74 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E78 FECB                B   127    xdcb_query	cp 0cbh								001E7A 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E7C FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E80 DD23                B   130    			inc ix								001E82 DD23                B   131    			inc ix								001E84 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E86 FEFD                B   134    not_dd		cp 0fdh
001E88 20 0E               B   135    			jr nz,not_traditional_prefix_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E8A CD A1 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E8E CA 06 1E 00         B   137    			jr z,dis_instr	
001E92 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E96 18 E0               B   139    			jr xdcb_query
                           B   140    
001E98                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E98 DD7E00              B   145    			ld a,(ix)	
001E9B E6C0                B   146    			and 11000000b			; seperate 
001E9D 07                  B   147    			rlca
001E9E 07                  B   148    			rlca
001E9F FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EA2 DD7E00              B   151    			ld a,(ix)
001EA5 E638                B   152    			and 00111000b
001EA7 CB3F                B   153    			srl a
001EA9 CB3F                B   154    			srl a
001EAB CB3F                B   155    			srl a	
001EAD FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EB0 DD7E00              B   158    			ld a,(ix)
001EB3 E607                B   159    			and 00000111b
001EB5 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001EB8 DD7E00              B   162    			ld a,(ix)
001EBB E630                B   163    			and 00110000b
001EBD CB3F                B   164    			srl a
001EBF CB3F                B   165    			srl a
001EC1 CB3F                B   166    			srl a
001EC3 CB3F                B   167    			srl a
001EC5 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001EC8 DD7E00              B   170    			ld a,(ix)
001ECB E608                B   171    			and 00001000b
001ECD CB3F                B   172    			srl a
001ECF CB3F                B   173    			srl a
001ED1 CB3F                B   174    			srl a
001ED3 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001ED6 CD AF 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001EDA 78                  B   181    index_table	ld a,b							; a
001EDB B7                  B   182    			or a
001EDC 28 07               B   183    			jr z,parse_instr				; m
001EDE CB7E                B   184    d_filp		bit 7,(hl)						; w
001EE0 23                  B   185    			inc hl							; o
001EE1 28 FB               B   186    			jr z,d_filp					
001EE3 10 F9               B   187    			djnz d_filp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   188    										
                           B   189    			
001EE5 FD21 7D 23 00       B   190    parse_instr	ld iy,opcode_vars
001EEA 01000000            B   191    			ld bc,0
001EEE 7E                  B   192    			ld a,(hl)						;ge
001EEF FE80                B   193    			cp 80h
001EF1 C8                  B   194    			ret z
001EF2 E67F                B   195    			and 7fh
                           B   196    			
001EF4 FE26                B   197    			cp '&'							;sy
001EF6 20 28               B   198    			jr nz,not_adlsym
001EF8 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001EFC CA 8A 20 00         B   200    			jr z,next_opcode_ascii_char
001F00 0600                B   201    			ld b,0
001F02 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F06 28 02               B   203    			jr z,naplsb
001F08 CBC0                B   204    			set 0,b
001F0A FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F0E 28 02               B   206    			jr z,napmsb
001F10 CBC8                B   207    			set 1,b
001F12 E5                  B   208    napmsb		push hl
001F13 21 DC 28 00         B   209    			ld hl,adl_prefix_list
001F17 CD DA 1E 00         B   210    			call index_table				; r
001F1B E1                  B   211    			pop hl
001F1C C3 8A 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F20 FE5E                B   214    not_adlsym	cp '^'							;sy
001F22 20 0D               B   215    			jr nz,d_not_imm8
001F24 DD23                B   216    			inc ix							;th
001F26 DD7E00              B   217    			ld a,(ix)
001F29 CD 42 23 00         B   218    			call show_hex_byte
001F2D C3 8A 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F31 FE21                B   221    d_not_imm8	cp '!'							;sy
001F33 20 26               B   222    			jr nz,d_not_imm16					001F35 11020000            B   223    			ld de,2
001F39 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F3D 28 08               B   225    			jr z,imm16
001F3F 13                  B   226    			inc de
001F40 DD7E03              B   227    			ld a,(ix+3)
001F43 CD 42 23 00         B   228    			call show_hex_byte
001F47 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F4A CD 42 23 00         B   230    			call show_hex_byte			
001F4E DD7E01              B   231    			ld a,(ix+1)						;th
001F51 CD 42 23 00         B   232    			call show_hex_byte
001F55 DD19                B   233    			add ix,de						;ad
001F57 C3 8A 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F5B FE2F                B   236    d_not_imm16	cp '/'							;sy
001F5D 20 36               B   237    			jr nz,d_not_sb
001F5F FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F63 28 05               B   239    			jr z,norm_dbyte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F65 DD7EFF              B   240    			ld a,(ix-1)						;if
001F68 18 05               B   241    			jr xdcb_dbyte
001F6A DD23                B   242    norm_dbyte	inc ix
001F6C DD7E00              B   243    			ld a,(ix)						;th
001F6F CB7F                B   244    xdcb_dbyte	bit 7,a
001F71 20 10               B   245    			jr nz,d_sbin					;sh
001F73 F5                  B   246    			push af
001F74 3E2B                B   247    			ld a,'+'
001F76 CD 53 23 00         B   248    			call show_ascii_char
001F7A F1                  B   249    			pop af
001F7B CD 42 23 00         B   250    			call show_hex_byte
001F7F C3 8A 20 00         B   251    			jp next_opcode_ascii_char
001F83 F5                  B   252    d_sbin		push af
001F84 3E2D                B   253    			ld a,'-'
001F86 CD 53 23 00         B   254    			call show_ascii_char
001F8A F1                  B   255    			pop af
001F8B ED44                B   256    			neg
001F8D CD 42 23 00         B   257    			call show_hex_byte
001F91 C3 8A 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F95 FE64                B   260    d_not_sb	cp 'd'							;sy
001F97 20 1E               B   261    			jr nz,d_not_pcdip
001F99 DD23                B   262    			inc ix
001F9B 01000000            B   263    			ld bc,0
001F9F DD7E00              B   264    			ld a,(ix)
001FA2 CB7F                B   265    			bit 7,a
001FA4 28 01               B   266    			jr z,d_spcd_pos
001FA6 0B                  B   267    			dec bc
001FA7 4F                  B   268    d_spcd_pos	ld c,a
001FA8 03                  B   269    			inc bc
001FA9 DDE5                B   270    			push ix
001FAB DD09                B   271    			add ix,bc
001FAD CD 5F 23 00         B   272    			call show_ix
001FB1 DDE1                B   273    			pop ix
001FB3 C3 8A 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FB7 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FB9 20 16               B   277    			jr nz,d_not_sdig
001FBB 23                  B   278    			inc hl							;th
001FBC 01000000            B   279    			ld bc,0
001FC0 4E                  B   280    			ld c,(hl)
001FC1 FD21 7D 23 00       B   281    			ld iy,opcode_vars
001FC6 FD09                B   282    			add iy,bc
001FC8 FD7E00              B   283    			ld a,(iy)						;a 
001FCB C630                B   284    			add a,30h						;co
001FCD C3 86 20 00         B   285    			jp d_output_char
                           B   286    
001FD1 FE5F                B   287    d_not_sdig	cp '_'
001FD3 20 12               B   288    			jr nz,d_nhlsubst				; s
001FD5 E5                  B   289    			push hl
001FD6 21 B4 28 00         B   290    			ld hl,hl_subs
001FDA CD 92 20 00         B   291    hl_subst	call prefix_to_offset
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FDE CD DA 1E 00         B   292    			call index_table				; r
001FE2 E1                  B   293    			pop hl
001FE3 C3 8A 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FE7 FE7C                B   296    d_nhlsubst	cp '|'
001FE9 20 07               B   297    			jr nz,d_noinvhls
001FEB E5                  B   298    			push hl
001FEC 21 BA 28 00         B   299    			ld hl,inv_hl_subs
001FF0 18 E8               B   300    			jr hl_subst
                           B   301    			
001FF2 FE68                B   302    d_noinvhls	cp 'h'							;sy
001FF4 20 07               B   303    			jr nz,d_nhsubst
001FF6 E5                  B   304    			push hl
001FF7 21 C0 28 00         B   305    			ld hl,h_subs
001FFB 18 DD               B   306    			jr hl_subst
                           B   307    			
001FFD FE6C                B   308    d_nhsubst	cp 'l'							;sy
001FFF 20 07               B   309    			jr nz,d_nlsubst
002001 E5                  B   310    			push hl
002002 21 C7 28 00         B   311    			ld hl,l_subs
002006 18 D2               B   312    			jr hl_subst
                           B   313    			
002008 FE24                B   314    d_nlsubst	cp '$'
00200A 20 07               B   315    			jr nz,d_nihlsubst				; s
00200C E5                  B   316    			push hl
00200D 21 CE 28 00         B   317    			ld hl,ind_hl_subs
002011 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002013                     B   321    d_nihlsubst	
                           B   322    
002013 FE7E                B   323    			cp '~'							; s
002015 20 1F               B   324    			jr nz,ntable_r
002017 11 09 28 00         B   325    			ld de,table_r
00201B 23                  B   326    do_table 	inc hl
00201C 01000000            B   327    			ld bc,0							; t
002020 4E                  B   328    			ld c,(hl)
002021 FD21 7D 23 00       B   329    			ld iy,opcode_vars
002026 FD09                B   330    			add iy,bc
002028 FD4600              B   331    			ld b,(iy)						;in
00202B E5                  B   332    			push hl
00202C EB                  B   333    			ex de,hl
00202D CD DA 1E 00         B   334    			call index_table				; r
002031 E1                  B   335    			pop hl
002032 C3 8A 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002036 11 14 28 00         B   338    ntable_r	ld de,table_r2					; s
00203A FE3D                B   339    			cp '='
00203C 28 DD               B   340    			jr z,do_table
                           B   341    			
00203E 11 1F 28 00         B   342    			ld de,table_rp					; s
002042 FE40                B   343    			cp '@'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002044 28 D5               B   344    			jr z,do_table 
                           B   345    			
002046 11 26 28 00         B   346    			ld de,table_rp2					; s
00204A FE2A                B   347    			cp '*'
00204C 28 CD               B   348    			jr z,do_table
                           B   349    			
00204E 11 8C 28 00         B   350    			ld de,table_rp3					; s
002052 FE3C                B   351    			cp '<'
002054 28 C5               B   352    			jr z,do_table
                           B   353    			
002056 11 94 28 00         B   354    			ld de,table_rp4					; s
00205A FE7D                B   355    			cp '}'
00205C 28 BD               B   356    			jr z,do_table
                           B   357    			
00205E 11 2E 28 00         B   358    			ld de,table_cc					; s
002062 FE23                B   359    			cp '#'
002064 28 B5               B   360    			jr z,do_table 
                           B   361    			
002066 11 3A 28 00         B   362    			ld de,table_alu					; s
00206A FE3A                B   363    			cp ':'
00206C 28 AD               B   364    			jr z,do_table 
                           B   365    			
00206E 11 66 28 00         B   366    			ld de,table_rot					; s
002072 FE25                B   367    			cp '%'
002074 28 A5               B   368    			jr z,do_table 
                           B   369    			
002076 11 A4 28 00         B   370    			ld de,table_rst					; s
00207A FE3B                B   371    			cp ';'
00207C 28 9D               B   372    			jr z,do_table 
                           B   373    
00207E 11 9C 28 00         B   374    			ld de,table_rp5					; s
002082 FE7B                B   375    			cp '{'
002084 28 95               B   376    			jr z,do_table 
                           B   377    
002086                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
002086                     B   382    d_output_char
                           B   383    
002086 CD 53 23 00         B   384    			call show_ascii_char
                           B   385    
00208A                     B   386    next_opcode_ascii_char
                           B   387    
00208A CB7E                B   388    			bit 7,(hl)						;if
00208C C0                  B   389    			ret nz
00208D 23                  B   390    			inc hl
00208E C3 E5 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   396    
002092                     B   397    prefix_to_offset
                           B   398    
002092 0602                B   399    			ld b,2							;se
002094 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
002098 C0                  B   401    			ret nz
002099 05                  B   402    			dec b
00209A FDCB0056            B   403    			bit sub_ix_prefix,(iy)
00209E C0                  B   404    			ret nz
00209F 05                  B   405    			dec b
0020A0 C9                  B   406    			ret
                           B   407    			
                           B   408    			
0020A1                     B   409    check_nxt_byte_prefix			
                           B   410    
0020A1 DD23                B   411    			inc ix
0020A3 DD7E00              B   412    			ld a,(ix)
0020A6 FEDD                B   413    			cp 0ddh
0020A8 C8                  B   414    			ret z
0020A9 FEED                B   415    			cp 0edh
0020AB C8                  B   416    			ret z
0020AC FEFD                B   417    			cp 0fdh
0020AE C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020AF                     B   428    find_instruction_ascii
                           B   429    
0020AF 0600                B   430    			ld b,0						; defau
                           B   431    
0020B1 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020B5 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020B7 21 E3 27 00         B   434    			ld hl,ddcb_fdcb_z6		
0020BB FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020BE FD7E 03             B   436    			ld a,(iy+var_z)
0020C1 FE06                B   437    			cp 6
0020C3 C8                  B   438    			ret z
0020C4 21 AB 27 00         B   439    			ld hl,ddcb_fdcb_zn6					0020C8 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
0020C9                     B   444    not_ddcb_fdcb_inst
                           B   445    
0020C9 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
0020CD 28 08               B   447    			jr z,not_cb_inst
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020CF 21 33 25 00         B   448    			ld hl,cb_group		
0020D3 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020D6 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
0020D7                     B   454    not_cb_inst
                           B   455    
0020D7 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020DB CA FC 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020DF FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020E2 B7                  B   460    			or a
0020E3 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020E5 FD7E 03             B   464    			ld a,(iy+var_z)				
0020E8 B7                  B   465    			or a
0020E9 20 0D               B   466    			jr nz,notedx0z0
0020EB 21 5A 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020EF FD7E 02             B   468    			ld a,(iy+var_y)
0020F2 FE06                B   469    			cp 6
0020F4 C0                  B   470    			ret nz
0020F5 0601                B   471    			ld b,1
0020F7 C9                  B   472    			ret
                           B   473    
0020F8 FE01                B   474    notedx0z0	cp 1
0020FA 20 0D               B   475    			jr nz,notedx0z1
0020FC 21 6B 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
002100 FD7E 02             B   477    			ld a,(iy+var_y)
002103 FE06                B   478    			cp 6
002105 C0                  B   479    			ret nz
002106 0601                B   480    			ld b,1
002108 C9                  B   481    			ret
                           B   482    
002109 FE02                B   483    notedx0z1	cp 2
00210B 20 05               B   484    			jr nz,notedx0z2
00210D 21 81 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
002111 C9                  B   486    			ret
                           B   487    
002112 FE03                B   488    notedx0z2	cp 3
002114 20 05               B   489    			jr nz,notedx0z3
002116 21 8D 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
00211A C9                  B   491    			ret
                           B   492    			
00211B FE04                B   493    notedx0z3	cp 4
00211D 20 05               B   494    			jr nz,notedx0z4
00211F 21 99 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002123 C9                  B   496    			ret
                           B   497    
002124 FE06                B   498    notedx0z4	cp 6
002126 20 05               B   499    			jr nz,notedx0z6				;x0 / z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002128 21 A3 25 00         B   500    			ld hl,ed_x0_z6
00212C C9                  B   501    			ret
                           B   502    
00212D FE07                B   503    notedx0z6	cp 7
00212F C2 06 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002133 21 AE 25 00         B   505    			ld hl,ed_x0_z7
002137 FD46 05             B   506    			ld b,(iy+var_q)
00213A C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
00213B FE01                B   511    notedx0		cp 1	
00213D 20 68               B   512    			jr nz,ed_xn1
                           B   513    
00213F FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002142 B7                  B   515    			or a
002143 20 0D               B   516    			jr nz,ed_x1_zn0
002145 21 C3 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002149 FD7E 02             B   518    			ld a,(iy+var_y)
00214C FE06                B   519    			cp 6
00214E C0                  B   520    			ret nz
00214F 0601                B   521    			ld b,1
002151 C9                  B   522    			ret
                           B   523    			
002152 FE01                B   524    ed_x1_zn0	cp 1
002154 20 0D               B   525    			jr nz,ed_x1_zn1
002156 21 D3 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
00215A FD7E 02             B   527    			ld a,(iy+var_y)
00215D FE06                B   528    			cp 6
00215F C0                  B   529    			ret nz
002160 0601                B   530    			ld b,1
002162 C9                  B   531    			ret
                           B   532    		
002163 FE02                B   533    ed_x1_zn1	cp 2
002165 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002167 21 E8 25 00         B   535    			ld hl,ed_x1_z2	
00216B FD46 05             B   536    			ld b,(iy+var_q)
00216E C9                  B   537    			ret
                           B   538    
00216F FE03                B   539    ed_x1_zn2	cp 3
002171 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002173 21 FE 25 00         B   541    			ld hl,ed_x1_z3	
002177 FD46 05             B   542    			ld b,(iy+var_q)
00217A C9                  B   543    			ret
                           B   544    			
00217B FE04                B   545    ed_x1_zn3	cp 4							;z 
00217D 20 08               B   546    			jr nz,ed_x1_zn4
00217F 21 13 26 00         B   547    			ld hl,ed_x1_z4
002183 FD46 02             B   548    			ld b,(iy+var_y)
002186 C9                  B   549    			ret
                           B   550    			
002187 FE05                B   551    ed_x1_zn4	cp 5
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002189 20 08               B   552    			jr nz,ed_x1_zn5
00218B 21 4B 26 00         B   553    			ld hl,ed_x1_z5					;z 
00218F FD46 02             B   554    			ld b,(iy+var_y)
002192 C9                  B   555    			ret
                           B   556    			
002193 FE06                B   557    ed_x1_zn5	cp 6
002195 20 08               B   558    			jr nz,ed_x1_zn6					;z=
002197 21 7A 26 00         B   559    			ld hl,ed_x1_z6
00219B FD46 02             B   560    			ld b,(iy+var_y)
00219E C9                  B   561    			ret
                           B   562    			
00219F 21 9F 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021A3 FD46 02             B   564    			ld b,(iy+var_y)
0021A6 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021A7 FE02                B   569    ed_xn1		cp 2
0021A9 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021AB FD46 02             B   572    			ld b,(iy+var_y)
0021AE FD7E 03             B   573    			ld a,(iy+var_z)
0021B1 B7                  B   574    			or a
0021B2 20 05               B   575    			jr nz,edx2zn0
0021B4 21 C3 26 00         B   576    			ld hl,ed_x2_z0					;x=
0021B8 C9                  B   577    			ret
                           B   578    
0021B9 FE01                B   579    edx2zn0		cp 1
0021BB 20 05               B   580    			jr nz,edx2zn1
0021BD 21 DD 26 00         B   581    			ld hl,ed_x2_z1					;x=
0021C1 C9                  B   582    			ret
                           B   583    
0021C2 FE02                B   584    edx2zn1		cp 2
0021C4 20 05               B   585    			jr nz,edx2zn2
0021C6 21 F7 26 00         B   586    			ld hl,ed_x2_z2					;x=
0021CA C9                  B   587    			ret
                           B   588    
0021CB FE03                B   589    edx2zn2		cp 3
0021CD 20 05               B   590    			jr nz,edx2zn3
0021CF 21 27 27 00         B   591    			ld hl,ed_x2_z3					;x=
0021D3 C9                  B   592    			ret
                           B   593    
0021D4 21 59 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
0021D8 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021D9 FE03                B   599    ed_xn2		cp 3
0021DB 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021DD FD46 02             B   602    			ld b,(iy+var_y)
0021E0 FD7E 03             B   603    			ld a,(iy+var_z)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021E3 FE02                B   604    			cp 2
0021E5 20 05               B   605    			jr nz,edx3zn2
0021E7 21 8F 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021EB C9                  B   607    			ret
0021EC FE03                B   608    edx3zn2		cp 3
0021EE 20 05               B   609    			jr nz,edx3zn3
0021F0 21 9D 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021F4 C9                  B   611    			ret
                           B   612    
0021F5                     B   613    edx3zn3
                           B   614    
0021F5                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
0021F5                     B   619    invalid_op
0021F5 21 06 28 00         B   620    			ld hl,bad_opcode				; x
0021F9 0600                B   621    			ld b,0
0021FB C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021FC FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
0021FF B7                  B   629    			or a
002200 C2 98 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002204 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002207 B7                  B   636    			or a
002208 20 14               B   637    			jr nz,x0_z_not_zero
00220A 21 85 23 00         B   638    			ld hl,x0_z0
00220E FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
002211 47                  B   640    			ld b,a
002212 D604                B   641    			sub 4
002214 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002217 78                  B   643    			ld a,b
002218 FE04                B   644    			cp 4
00221A D8                  B   645    			ret c
00221B 0604                B   646    			ld b,4						;if y >
00221D C9                  B   647    			ret
                           B   648    			
00221E                     B   649    x0_z_not_zero		
                           B   650    			
00221E FE01                B   651    			cp 1
002220 20 1A               B   652    			jr nz,x0_z_not_one
002222 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002225 FE06                B   654    			cp 6
002227 20 0B               B   655    			jr nz,x0z1yn6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002229 CD 38 23 00         B   656    			call test_ixiy_prefix		;if y=6
00222D 28 05               B   657    			jr z,x0z1yn6				;altern
00222F 21 B8 23 00         B   658    			ld hl,x0_z1_y6
002233 C9                  B   659    			ret
                           B   660    
002234 21 A5 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002238 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
00223B C9                  B   663    			ret 
                           B   664    			
00223C                     B   665    x0_z_not_one
                           B   666    
00223C FE02                B   667    			cp 2
00223E 20 08               B   668    			jr nz,x0_z_not_two
002240 21 C0 23 00         B   669    			ld hl,x0_z2
002244 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002247 C9                  B   671    			ret
                           B   672    			
002248                     B   673    x0_z_not_two
                           B   674    
002248 FE03                B   675    			cp 3
00224A 20 08               B   676    			jr nz,x0_z_not_three
00224C 21 0C 24 00         B   677    			ld hl,x0_z3
002250 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002253 C9                  B   679    			ret
                           B   680    			
002254                     B   681    x0_z_not_three
                           B   682    
002254 FE04                B   683    			cp 4
002256 20 05               B   684    			jr nz,x0_z_not_four
002258 21 1C 24 00         B   685    			ld hl,x0_z4					;no ini
00225C C9                  B   686    			ret			
                           B   687    			
00225D                     B   688    x0_z_not_four
                           B   689    
00225D FE05                B   690    			cp 5
00225F 20 05               B   691    			jr nz,x0_z_not_five
002261 21 24 24 00         B   692    			ld hl,x0_z5					;no ini
002265 C9                  B   693    			ret				
                           B   694    			
002266                     B   695    x0_z_not_five
                           B   696    
002266 FE06                B   697    			cp 6
002268 20 1A               B   698    			jr nz,x0_z_not_six
00226A 21 2C 24 00         B   699    			ld hl,x0_z6					;normal
00226E FD7E 02             B   700    			ld a,(iy+var_y)
002271 FE07                B   701    			cp 7
002273 C0                  B   702    			ret nz
002274 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
002278 20 05               B   704    			jr nz,altx0z6
00227A FDCB005E            B   705    			bit sub_iy_prefix,(iy)
00227E C8                  B   706    			ret z	
00227F 21 35 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002283 C9                  B   708    			ret
                           B   709    
                           B   710    
002284                     B   711    x0_z_not_six
                           B   712    			
002284 21 3D 24 00         B   713    			ld hl,x0_z7					;x=0, z
002288 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
00228B CD 38 23 00         B   715    			call test_ixiy_prefix
00228F C8                  B   716    			ret z
002290 21 57 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
002294 FD46 05             B   718    			ld b,(iy+var_q)				;this i
002297 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
002298 FE01                B   723    x_not_zero	cp 1						; is x 
00229A 20 32               B   724    			jr nz,x_not_one
                           B   725    			
00229C 21 69 24 00         B   726    			ld hl,x1_table				; x=1
0022A0 CD 38 23 00         B   727    			call test_ixiy_prefix
0022A4 20 11               B   728    			jr nz,pref_x1
0022A6 FD7E 02             B   729    			ld a,(iy+var_y)
0022A9 FE06                B   730    			cp 6
0022AB C0                  B   731    			ret nz
0022AC FD7E 03             B   732    			ld a,(iy+var_z)
0022AF FE06                B   733    			cp 6
0022B1 C0                  B   734    			ret nz
0022B2 21 87 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022B6 C9                  B   736    			ret
                           B   737    
0022B7 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022BA FE06                B   739    			cp 6
0022BC 20 05               B   740    			jr nz,x1yn6
0022BE 21 73 24 00         B   741    			ld hl,x1_y6
0022C2 C9                  B   742    			ret
                           B   743    			
0022C3 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
0022C6 FE06                B   745    			cp 6
0022C8 C0                  B   746    			ret nz
0022C9 21 7D 24 00         B   747    			ld hl,x1_z6
0022CD C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
0022CE FE02                B   752    x_not_one	cp 2						; is x 
0022D0 20 05               B   753    			jr nz,x_not_two
0022D2 21 8B 24 00         B   754    			ld hl,x2_table				; no in
0022D6 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022D7 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022DA B7                  B   760    			or a
0022DB 20 05               B   761    			jr nz,x3_z_not_zero
0022DD 21 90 24 00         B   762    			ld hl,x3_z0					; no in
0022E1 C9                  B   763    			ret
                           B   764    						
0022E2                     B   765    x3_z_not_zero
                           B   766    
0022E2 FE01                B   767    			cp 1
0022E4 20 11               B   768    			jr nz,x3_z_not_one
0022E6 21 98 24 00         B   769    			ld hl,x3_z1_q0
0022EA FD7E 05             B   770    			ld a,(iy+var_q)
0022ED B7                  B   771    			or a
0022EE C8                  B   772    			ret z						; no in
0022EF 21 A0 24 00         B   773    			ld hl,x3_z1_q1
0022F3 FD46 04             B   774    			ld b,(iy+var_p)				; index
0022F6 C9                  B   775    			ret
                           B   776    
0022F7                     B   777    x3_z_not_one
                           B   778    
0022F7 FE02                B   779    			cp 2
0022F9 20 05               B   780    			jr nz,x3_z_not_two
0022FB 21 B7 24 00         B   781    			ld hl,x3_z2					;no ini
0022FF C9                  B   782    			ret
                           B   783    
002300                     B   784    x3_z_not_two
                           B   785    
002300 FE03                B   786    			cp 3
002302 20 08               B   787    			jr nz,x3_z_not_three
002304 21 C0 24 00         B   788    			ld hl,x3_z3
002308 FD46 02             B   789    			ld b,(iy+var_y)				;index 
00230B C9                  B   790    			ret
                           B   791    
00230C                     B   792    x3_z_not_three
                           B   793    
00230C FE04                B   794    			cp 4
00230E 20 05               B   795    			jr nz,x3_z_not_four
002310 21 F5 24 00         B   796    			ld hl,x3_z4				;no initial
002314 C9                  B   797    			ret						
                           B   798    
                           B   799    
002315                     B   800    x3_z_not_four
                           B   801    
002315 FE05                B   802    			cp 5
002317 20 11               B   803    			jr nz,x3_z_not_five
002319 21 00 25 00         B   804    			ld hl,x3_z5_q0
00231D FD7E 05             B   805    			ld a,(iy+var_q)
002320 B7                  B   806    			or a
002321 C8                  B   807    			ret z						;no ind
002322 21 09 25 00         B   808    			ld hl,x3_z5_q1
002326 FD46 04             B   809    			ld b,(iy+var_p)				;else i
002329 C9                  B   810    			ret
                           B   811    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232A                     B   812    x3_z_not_five
                           B   813    
00232A FE06                B   814    			cp 6
00232C 20 05               B   815    			jr nz,x3_z_not_six
00232E 21 27 25 00         B   816    			ld hl,x3_z6					;no ind
002332 C9                  B   817    			ret
                           B   818    
002333                     B   819    x3_z_not_six
                           B   820    
002333 21 2B 25 00         B   821    			ld hl,x3_z7					;x=3, z
002337 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002338                     B   827    test_ixiy_prefix
                           B   828    
002338 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00233C C0                  B   830    			ret nz
00233D FDCB005E            B   831    			bit sub_iy_prefix,(iy)
002341 C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002342                     B   837    show_hex_byte
                           B   838    
002342 E5                  B   839    			push hl
002343 21 EF 28 00         B   840    			ld hl,output_byte_txt
002347 E5                  B   841    			push hl
002348 CD 66 10 00         B   842    			call hexbyte_to_ascii
00234C E1                  B   843    			pop hl
00234D CD 1B 0F 00         B   844    			call os_print_string
002351 E1                  B   845    			pop hl
002352 C9                  B   846    			ret
                           B   847    			
                           B   848    
002353                     B   849    show_ascii_char
                           B   850    
002353 E5                  B   851    			push hl
002354 21 F2 28 00         B   852    			ld hl,output_char_txt
002358 77                  B   853    			ld (hl),a
002359 CD 1B 0F 00         B   854    			call os_print_string
00235D E1                  B   855    			pop hl
00235E C9                  B   856    			ret
                           B   857    		
                           B   858    		
00235F DD22 EC 28 00       B   859    show_ix		ld (d_work_address),ix
002364 3A EE 28 00         B   860    			ld a,(d_work_address+2)
002368 CD 42 23 00         B   861    			call show_hex_byte
00236C 3A ED 28 00         B   862    			ld a,(d_work_address+1)
002370 CD 42 23 00         B   863    			call show_hex_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002374 3A EC 28 00         B   864    			ld a,(d_work_address)
002378 CD 42 23 00         B   865    			call show_hex_byte
00237C C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
00237D                     B   896    opcode_vars
                           B   897    
00237D 00                  B   898    prefix_bits_loc	db 0	
00237E 00                  B   899    var_x_loc		db 0	
00237F 00                  B   900    var_y_loc		db 0	
002380 00                  B   901    var_z_loc		db 0	
002381 00                  B   902    var_p_loc		db 0	
002382 00                  B   903    var_q_loc		db 0
002383 00                  B   904    var_calc_loc	db 0
002384 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
002385 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
002388 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
002390 A7 
002391 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
002398 4A522064 80         B   922    			db 'JR ','d',80h			; y3
00239D 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023A5 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023AB 2C2180 
0023AE 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023B6 04 80 
0023B8 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023C0 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
0023C8 2CC1 
0023CA 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023D2 43A9 
0023D4 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023DC 2CC1 
0023DE 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023E6 45A9 
0023E8 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023F0 DF 
0023F1 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023F9 A9 
0023FA 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002402 C1 
002403 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
00240B A9 
                           B   937    
00240C 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002413 80 
002414 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
00241B 80 
                           B   940    			
00241C 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002423 80 
                           B   942    
002424 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
00242B 80 
                           B   944    			
00242C 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002432 2C5E80 
002435 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00243D 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
002441 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002445 524CC1              B   950    			db 'RL','A'+80h			;y=2
002448 5252C1              B   951    			db 'RR','A'+80h			;y=3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00244B 4441C1              B   952    			db 'DA','A'+80h			;y=4
00244E 4350CC              B   953    			db 'CP','L'+80h			;y=5
002451 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002454 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002457 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
00245D 2C2480 
002460 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
002468 80 
                           B   959    		
                           B   960    
                           B   961    
002469 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
00246F 2C7E 03 80 
002473 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		002479 2C3D 03 80 
00247D 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002483 2C7E 03 80 
                           B   965    
002487 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
00248B 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
002490 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
002497 80 
                           B   975    
002498 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
00249F 80 
0024A0 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024A5 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024A8 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024AE 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024B6 80 
                           B   981    
0024B7 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024BD 2C2180 
                           B   983    
0024C0 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
0024C6 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
0024CD 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024D5 C1 
0024D6 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024DE 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024E6 2C5F80 
0024E9 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024F1 44C9                B   990    			db 'D','I'+80h			;y = 6
0024F3 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024F5 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024FD 2C2180 
                           B   994    
002500 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002508 80 
002509 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
002511 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002518 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
00251F 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002527 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
00252B 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002532 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002533 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002539 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002540 2C7E 03 80 
002544 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
00254B 2C7E 03 80 
00254F 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002556 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
00255A 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
002560 2C285EA9 
002564 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
00256B 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002573 2C7E 02 80 
002577 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			00257F 5FA9 
                           B  1022    
002581 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	002588 2C49582F 80 
00258D 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
002594 2C49592F 80 
002599 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025A1 02 80 
                           B  1026    
0025A3 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025AB 7D 04 80 
                           B  1028    
0025AE 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025B4 2C285FA9 
0025B8 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0025C0 3C 04 80 
                           B  1031    
0025C3 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
0025C8 2C284243 A9 
0025CD 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
0025D3 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025DB 2C7E 02 80 
0025DF 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025E7 B0 
                           B  1037    
0025E8 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025F0 40 04 80 
0025F3 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025FB 40 04 80 
                           B  1040    
0025FE 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002606 40 04 80 
002609 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	00260F 2C2821A9 
                           B  1043    
002613 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002616 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00261C 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002624 49592F80 
002628 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
00262E 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002636 80 
002637 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00263D 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002645 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
00264B 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
002651 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002657 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
00265F 49582F80 
002663 BF                  B  1056    				db '?'+80h					;y=
002664 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
00266C 80 
00266D 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002674 BF                  B  1059    				db '?'+80h					;y=
002675 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
00267A 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
00267E BF                  B  1064    				db '?'+80h					;y=
00267F 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002683 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002687 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
00268F 80 
002690 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
002697 534CD0              B  1069    				db 'SL','P'+80h				;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00269A 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
00269F 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026A5 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026AB 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026B1 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
0026B7 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026BA 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026BD 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026C0 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
0026C3 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026C7 4C444926 80         B  1083    				db 'LDI&',80h					0026CC 4C444426 80         B  1084    				db 'LDD&',80h					0026D1 4C444952 2680       B  1085    				db 'LDIR&',80h					0026D7 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026DD BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026E1 43504926 80         B  1089    				db 'CPI&',80h					0026E6 43504426 80         B  1090    				db 'CPD&',80h					0026EB 43504952 2680       B  1091    				db 'CPIR&',80h					0026F1 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026F7 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026FD 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
002703 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
00270A 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
002711 494E4926 80         B  1098    				db 'INI&',80h		; y4
002716 494E4426 80         B  1099    				db 'IND&',80h		; y5
00271B 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
002721 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002727 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00272D 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002733 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
00273A 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
002741 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002747 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00274D 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002753 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002759 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
00275F 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002765 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
00276C 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002773 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
00277A 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
002781 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
002788 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1122    
00278F 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
002796 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
00279D 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027A4 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027AB 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027B1 2C25 02 202480 
0027B7 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027BE 2C2480 
0027C1 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
0027C7 2C524553 26203E 02 
0027CF 2C2480 
0027D2 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027D8 2C534554 26203E 02 
0027E0 2C2480 
                           B  1137    
0027E3 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027E8 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027EF 2C2480 
0027F2 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		0027F9 2C2480 
0027FC 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002803 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002806 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002809 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002811 2480C1 
                           B  1151    
002814 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00281C 2480C1 
                           B  1153    
00281F 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002826 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
00282E 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002836 50C5D0CD 
                           B  1159    	
00283A 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002842 44432620 41AC5355 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00284A 4226A053 42432041 
002852 26AC 
002854 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
00285C 26A04F52 26A04350 
002864 26A0 
                           B  1162    			
002866 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
00286E 2680524C 26805252 
002876 2680 
002878 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
002880 2680534C 4C268053 
002888 524C2680 
                           B  1165    	
00288C 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
002894 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
00289C 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028A4 30B0                B  1172    table_rst	db '0','0'+80h
0028A6 30B8                B  1173    			db '0','8'+80h
0028A8 31B0                B  1174    			db '1','0'+80h
0028AA 31B8                B  1175    			db '1','8'+80h
0028AC 32B0                B  1176    			db '2','0'+80h
0028AE 32B8                B  1177    			db '2','8'+80h	
0028B0 33B0                B  1178    			db '3','0'+80h
0028B2 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028B4 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028BA 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028C0 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
0028C7 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
0028CE 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028D6 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028DC                     B  1198    adl_prefix_list
                           B  1199    
0028DC 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028E4 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1203    
0028EC 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028EF 2D2D00              B  1206    output_byte_txt	db "--",0
0028F2 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028F4 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028F7                     B     6    os_cmd_del
                           B     7    	
0028F7 CD 93 16 00         B     8    				call os_check_volume_format	
0028FB C0                  B     9    				ret nz
                           B    10    			
0028FC CD 04 29 00         B    11    				call filename_or_bust
                           B    12    				
002900 C3 FB 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
002904                     B    18    filename_or_bust
                           B    19    			
002904 7E                  B    20    				ld a,(hl)					;is
002905 B7                  B    21    				or a
002906 C0                  B    22    				ret nz
002907 E1                  B    23    				pop hl						;ot
002908 C3 FE 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
00290C                     B     5    os_cmd_dir
                           B     6    
00290C CD 93 16 00         B     7    				call os_check_volume_format	
002910 C0                  B     8    				ret nz
                           B     9    				
002911 CD EB 29 00         B    10    				call div_line
002915 CD D6 52 00         B    11    				call fs_get_current_dir_name	002919 D8                  B    12    				ret c
00291A C0                  B    13    				ret nz
00291B CD 1B 0F 00         B    14    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
00291F CD 6B 1A 00         B    15    				call fs_get_dir_cluster			002923 7A                  B    16    				ld a,d
002924 B3                  B    17    				or e
002925 20 08               B    18    				jr nz,dcmdnr
002927 CD C9 4F 00         B    19    				call fs_get_volume_label
00292B CD 1B 0F 00         B    20    				call os_print_string
00292F CD C3 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002933 CD EB 29 00         B    23    nrootdir		call div_line
002937 CD CE 4E 00         B    24    				call fs_goto_first_dir_entry
00293B D8                  B    25    				ret c
00293C 20 6F               B    26    				jr nz,os_dlr
00293E AF                  B    27    				xor a
00293F 32 E7 60 00         B    28    				ld (os_linecount),a
                           B    29    				
002943 CD E5 4E 00         B    30    os_dfllp		call fs_get_dir_entry			002947 D8                  B    31    				ret c
002948 20 63               B    32    				jr nz,os_dlr					00294A C5                  B    33    				push bc
00294B CD 1B 0F 00         B    34    				call os_print_string			00294F CD EE 13 00         B    35    				call os_get_cursor_position		002953 060E                B    36    				ld b,14
002955 CD CE 13 00         B    37    				call os_set_cursor_position	
002959 C1                  B    38    				pop bc
00295A CB40                B    39    				bit 0,b							00295C 28 06               B    40    				jr z,os_deif		
00295E 21 F8 29 00         B    41    				ld hl,dir_txt					002962 18 32               B    42    				jr os_dpl
                           B    43    				
002964 21 D9 55 00         B    44    os_deif			ld hl,os_hex_prefix_txt			002968 CD 1B 0F 00         B    45    				call os_print_string
00296C ED53 32 68 00       B    46    				ld (scratch_pad),de
002971 79                  B    47    				ld a,c
002972 32 35 68 00         B    48    				ld (scratch_pad+3),a
002976 21 52 61 00         B    49    				ld hl,output_line
00297A E5                  B    50    				push hl
00297B ED5B 34 68 00       B    51    				ld de,(scratch_pad+2)
002980 CD 8B 10 00         B    52    				call hexword_to_ascii
002984 ED5B 32 68 00       B    53    				ld de,(scratch_pad)
002989 CD 8B 10 00         B    54    				call hexword_to_ascii
00298D 3600                B    55    				ld (hl),0
00298F E1                  B    56    				pop hl
002990 0607                B    57    				ld b,7							002992 CD 43 10 00         B    58    				call os_skip_leading_ascii_zero
002996 CD 1B 0F 00         B    59    os_dpl			call os_print_string
00299A CD C3 13 00         B    60    				call os_new_line
                           B    61    				
00299E CD 72 4F 00         B    62    				call fs_goto_next_dir_entry
0029A2 20 09               B    63    				jr nz,os_dlr					0029A4 CD C1 11 00         B    64    				call os_count_lines
0029A8 3E79                B    65    				ld a,'y'
0029AA B8                  B    66    				cp b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0029AB 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029AD CD EB 29 00         B    69    os_dlr			call div_line					0029B1 CD 01 49 00         B    70    				call fs_calc_free_space
0029B5 D8                  B    71    				ret c	
0029B6 CD C4 29 00         B    72    				call show_hlde_decimal
0029BA 21 FE 29 00         B    73    				ld hl,kb_spare_txt
0029BE CD 1B 0F 00         B    74    				call os_print_string
0029C2 AF                  B    75    				xor a
0029C3 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
0029C4                     B    80    show_hlde_decimal
                           B    81    
0029C4 CD 56 12 00         B    82    				call os_hex_to_decimal			0029C8 11070000            B    83    				ld de,7
0029CC 19                  B    84    				add hl,de						0029CD 43                  B    85    				ld b,e
0029CE 11 52 61 00         B    86    				ld de,output_line
0029D2 D5                  B    87    				push de
0029D3 7E                  B    88    dec2strlp		ld a,(hl)						0029D4 B7                  B    89    				or a
0029D5 20 03               B    90    				jr nz,foundlnz
0029D7 2B                  B    91    				dec hl
0029D8 10 F9               B    92    				djnz dec2strlp
0029DA 04                  B    93    foundlnz		inc b
0029DB 7E                  B    94    ndecchar		ld a,(hl)						0029DC C630                B    95    				add a,030h
0029DE 12                  B    96    				ld (de),a
0029DF 13                  B    97    				inc de
0029E0 2B                  B    98    				dec hl
0029E1 10 F8               B    99    				djnz ndecchar
0029E3 AF                  B   100    				xor a
0029E4 12                  B   101    				ld (de),a
0029E5 E1                  B   102    				pop hl							0029E6 CD 1B 0F 00         B   103    				call os_print_string
0029EA C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
0029EB 0E2D                B   108    div_line		ld c,'-'
0029ED 0613                B   109    				ld b,19
0029EF CD 53 1A 00         B   110    				call os_print_multiple_chars
0029F3 CD C3 13 00         B   111    				call os_new_line
0029F7 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
0029F8 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
0029FE 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A06 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A08                     B     5    os_cmd_f			
                           B     6    
002A08 CD 59 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A0C CD 82 1C 00         B     9    				call hexword_or_bust			002A10 CA 1E 16 00         B    10    				jp z,os_no_args_error			002A14 7B                  B    11    				ld a,e
002A15 32 FE 60 00         B    12    				ld (fillbyte),a
                           B    13    					
002A19 CD 47 1C 00         B    14    				call test_mem_range
002A1D DA 1A 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A21 3A FE 60 00         B    17    				ld a,(fillbyte)
002A25 77                  B    18    f_floop			ld (hl),a
002A26 EDA1                B    19    				cpi								002A28 EA 25 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A2C 3E20                B    22    				ld a,020h						002A2E B7                  B    23    				or a
002A2F C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A30                     B     9    os_cmd_format
                           B    10    
002A30 7E                  B    11    				ld a,(hl)						002A31 B7                  B    12    				or a
002A32 20 04               B    13    				jr nz,fgotargs					002A34 3E1F                B    14    				ld a,01fh						002A36 B7                  B    15    				or a
002A37 C9                  B    16    				ret
                           B    17    			
002A38                     B    18    fgotargs	
002A38 11 37 54 00         B    19    				ld de,fs_sought_filename
002A3C CD 1F 53 00         B    20    				call fs_clear_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A40 E5                  B    21    				push hl							002A41 CD A4 0F 00         B    22    				call os_next_arg
002A45 20 04               B    23    				jr nz,fgotlab
002A47 21 78 2B 00         B    24    				ld hl,default_label
002A4B 060B                B    25    fgotlab			ld b,11
002A4D CD 09 12 00         B    26    				call os_copy_ascii_run
002A51 E1                  B    27    				pop hl
                           B    28    				
002A52 3A 03 5F 00         B    29    				ld a,(device_count)				002A56 B7                  B    30    				or a
002A57 28 25               B    31    				jr z,fno_dev
002A59 47                  B    32    				ld b,a
002A5A 0E00                B    33    				ld c,0							002A5C DD21 B3 5F 00       B    34    				ld ix,host_device_hardware_info
002A61 DD7E00              B    35    fdev_lp			ld a,(ix)						002A64 CD 3D 1A 00         B    36    				call locate_driver_base			002A68 D5                  B    37    				push de
002A69 FDE1                B    38    				pop iy
002A6B ED130C              B    39    				lea de,iy+0ch					002A6E C5                  B    40    				push bc
002A6F 0607                B    41    				ld b,7
002A71 CD EA 11 00         B    42    				call os_compare_strings
002A75 C1                  B    43    				pop bc
002A76 28 0A               B    44    				jr z,format_dev
002A78 ED3220              B    45    				lea ix,ix+20h					002A7B 0C                  B    46    				inc c
002A7C 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002A7E 3ED0                B    49    fno_dev			ld a,0d0h						002A80 B7                  B    50    				or a
002A81 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
002A82 C5                  B    58    format_dev		push bc
002A83 CD C3 13 00         B    59    				call os_new_line
002A87 21 49 2B 00         B    60    				ld hl,form_dev_warn1
002A8B CD FA 13 00         B    61    				call os_show_packed_text
002A8F C1                  B    62    				pop bc
                           B    63    				
002A90 79                  B    64    				ld a,c							002A91 C630                B    65    				add a,030h
002A93 32 0F 5F 00         B    66    				ld (dev_txt+3),a
002A97 21 0C 5F 00         B    67    				ld hl,dev_txt	
002A9B CD 1B 0F 00         B    68    				call os_print_string			                           B    69    				
002A9F 79                  B    70    				ld a,c
002AA0 CD B1 1A 00         B    71    				call dev_to_driver_lookup		002AA4 E5                  B    72    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AA5 32 02 5F 00         B    73    				ld (current_driver),a
002AA9 CD 24 1A 00         B    74    				call show_dev_driver_name		002AAD DDE1                B    75    				pop ix
002AAF DD1701              B    76    				ld de,(ix+1)
002AB2 FD21 FA 60 00       B    77    				ld iy,xrr_temp
002AB7 FD1F00              B    78    				ld (iy),de						002ABA FDCB023E            B    79    				srl (iy+2)
002ABE FDCB011E            B    80    				rr (iy+1)
002AC2 FDCB001E            B    81    				rr (iy+0)						002AC6 FD1700              B    82    				ld de,(iy)						002AC9 CD C4 29 00         B    83    				call show_hlde_decimal			002ACD 21 83 2B 00         B    84    				ld hl,kb_txt
002AD1 CD 1B 0F 00         B    85    				call os_print_string
002AD5 ED2205              B    86    				lea hl,ix+5		
002AD8 CD 1B 0F 00         B    87    				call os_print_string			002ADC 3E29                B    88    				ld a,')'
002ADE CD 5D 0F 00         B    89    				call os_print_char
                           B    90    				
002AE2 CD C3 13 00         B    91    				call os_new_line
002AE6 CD C3 13 00         B    92    				call os_new_line
002AEA 21 50 2B 00         B    93    				ld hl,form_dev_warn2
002AEE CD 40 2B 00         B    94    				call show_packed_text_and_cr
002AF2 CD 28 2B 00         B    95    				call confirm_yes
002AF6 20 28               B    96    				jr nz,ab_form
                           B    97    				
002AF8 21 5A 2B 00         B    98    				ld hl,formatting_txt			002AFC CD 1B 0F 00         B    99    				call os_print_string
                           B   100    				
002B00 CD 84 46 00         B   101    				call fs_format_device_command
002B04 38 10               B   102    				jr c,form_err
002B06 B7                  B   103    				or a
002B07 20 0D               B   104    				jr nz,form_err
                           B   105    			
002B09 21 6A 2B 00         B   106    				ld hl,ok_txt					002B0D CD 1B 0F 00         B   107    				call os_print_string
                           B   108    				
002B11 CD 1D 32 00         B   109    f_end			call os_cmd_remount				002B15 C9                  B   110    				ret
                           B   111    			
002B16                     B   112    form_err
002B16 21 6F 2B 00         B   113    				ld hl,ferr_txt
002B1A CD 1B 0F 00         B   114    				call os_print_string
002B1E 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
002B20 CD C3 13 00         B   121    ab_form			call os_new_line
002B24 3E24                B   122    				ld a,024h						002B26 B7                  B   123    				or a
002B27 C9                  B   124    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   125    				
002B28                     B   126    confirm_yes
                           B   127    			
002B28 21 32 68 00         B   128    				ld hl,scratch_pad
002B2C 1E03                B   129    				ld e,3
002B2E E5                  B   130    				push hl
002B2F CD EF 10 00         B   131    				call os_user_input
002B33 E1                  B   132    				pop hl
002B34 C0                  B   133    				ret nz
002B35 0603                B   134    				ld b,3
002B37 11 C5 59 00         B   135    				ld de,yes_txt+1
002B3B CD EA 11 00         B   136    				call os_compare_strings
002B3F C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B40                     B   140    show_packed_text_and_cr
                           B   141    			
002B40 CD FA 13 00         B   142    				call os_show_packed_text
002B44 CD C3 13 00         B   143    				call os_new_line
002B48 C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B49                     B   148    form_dev_warn1
                           B   149    
002B49 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
002B50                     B   152    form_dev_warn2
                           B   153    
002B50 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B58 9700 
                           B   155    
002B5A                     B   156    formatting_txt
                           B   157    
002B5A 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002B62 74696E67 2E2E2000 
                           B   159    
002B6A 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002B6F 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002B77 00 
                           B   163    
002B78                     B   164    default_label	
                           B   165    
002B78 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002B80 534B00 
                           B   167    
002B83 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00006836            B   172    fs_drive_sel_cache		equ scratch_pad+4		Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B88 CD 59 1C 00         B     5    os_cmd_h		call get_start_and_end			002B8C 22 F7 60 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002B90 CD 47 1C 00         B     8    				call test_mem_range
002B94 DA 1A 16 00         B     9    				jp c,os_range_error				                           B    10    			
002B98 AF                  B    11    				xor a
002B99 32 35 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002B9D 2A F7 60 00         B    14    				ld hl,(find_hexstringascii)
002BA1 0600                B    15    				ld b,0
002BA3 7E                  B    16    h_lfascii		ld a,(hl)						002BA4 B7                  B    17    				or a
002BA5 28 28               B    18    				jr z,h_no_text					002BA7 FE22                B    19    				cp 022h
002BA9 28 03               B    20    				jr z,h_found_quote
002BAB 23                  B    21    				inc hl
002BAC 18 F5               B    22    				jr h_lfascii
002BAE 23                  B    23    h_found_quote	inc hl
002BAF 22 F7 60 00         B    24    				ld (find_hexstringascii),hl
002BB3 7E                  B    25    h_fasc_len		ld a,(hl)
002BB4 B7                  B    26    				or a
002BB5 CA 1E 16 00         B    27    				jp z,os_no_args_error			002BB9 FE22                B    28    				cp 022h
002BBB 28 04               B    29    				jr z,h_startas
002BBD 23                  B    30    				inc hl
002BBE 04                  B    31    				inc b
002BBF 18 F2               B    32    				jr h_fasc_len
                           B    33    
002BC1 78                  B    34    h_startas		ld a,b
002BC2 B7                  B    35    				or a
002BC3 CA 1E 16 00         B    36    				jp z,os_no_args_error			002BC7 3E01                B    37    				ld a,1
002BC9 32 35 2C 00         B    38    				ld (h_ascii_mode),a
002BCD 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002BCF 2A F7 60 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002BD3 0600                B    43    				ld b,0							002BD5 CD 82 1C 00         B    44    cntfbyts		call hexword_or_bust			002BD9 28 04               B    45    				jr z,gthexstr
002BDB 04                  B    46    				inc b
002BDC 23                  B    47    				inc hl
002BDD 18 F6               B    48    				jr cntfbyts
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BDF 78                  B    49    gthexstr		ld a,b
002BE0 B7                  B    50    				or a
002BE1 CA 1E 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002BE5                     B    54    h_start_search
                           B    55    	
002BE5 DD2A EB 60 00       B    56    				ld ix,(cmdop_start_address)		002BEA DDE5                B    57    fndloop1		push ix
002BEC FDE1                B    58    				pop iy
002BEE 48                  B    59    				ld c,b							002BEF 2A F7 60 00         B    60    				ld hl,(find_hexstringascii)
002BF3 3A 35 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002BF7 B7                  B    62    				or a
002BF8 28 08               B    63    				jr z,h_hex
002BFA FD7E00              B    64    				ld a,(iy)
002BFD BE                  B    65    				cp (hl)
002BFE 20 23               B    66    				jr nz,nofmatch
002C00 18 0A               B    67    				jr h_matched
002C02 CD 9A 10 00         B    68    h_hex			call ascii_to_hexword			002C06 FD7E00              B    69    				ld a,(iy)
002C09 BB                  B    70    				cp e
002C0A 20 17               B    71    				jr nz,nofmatch
002C0C FD23                B    72    h_matched		inc iy
002C0E 23                  B    73    				inc hl
002C0F 0D                  B    74    				dec c
002C10 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C12 DDE5                B    77    				push ix							002C14 D1                  B    78    				pop de							002C15 DDE5                B    79    				push ix
002C17 C5                  B    80    				push bc
002C18 CD FB 12 00         B    81    				call os_show_hex_address
002C1C CD C3 13 00         B    82    				call os_new_line
002C20 C1                  B    83    				pop bc
002C21 DDE1                B    84    				pop ix
                           B    85    				
002C23 DDE5                B    86    nofmatch		push ix
002C25 DD23                B    87    				inc ix
002C27 D1                  B    88    				pop de
002C28 2A EE 60 00         B    89    				ld hl,(cmdop_end_address)
002C2C AF                  B    90    				xor a
002C2D ED52                B    91    				sbc hl,de
002C2F 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C31 3E20                B    94    				ld a,020h						002C33 B7                  B    95    				or a
002C34 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C35 00                  B   100    h_ascii_mode	db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C36                     B     5    os_cmd_help		
002C36 AF                  B     6    				xor a
002C37 32 E7 60 00         B     7    				ld (os_linecount),a
                           B     8    				
002C3B 21 05 5B 00         B     9    				ld hl,packed_help1
002C3F CD FA 13 00         B    10    show_page		call os_show_packed_text
002C43 E5                  B    11    				push hl
002C44 CD C3 13 00         B    12    				call os_new_line
002C48 E1                  B    13    				pop hl
002C49 23                  B    14    				inc hl						;sk
002C4A 7E                  B    15    				ld a,(hl)
002C4B FEFF                B    16    				cp 0ffh						;la
002C4D 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C4F CD C1 11 00         B    19    				call os_count_lines
002C53 78                  B    20    				ld a,b
002C54 FE79                B    21    				cp 'y'
002C56 28 E7               B    22    				jr z,show_page
                           B    23    
002C58                     B    24    last_help_page
002C58 AF                  B    25    				xor a
002C59 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C5A                     B     5    os_cmd_gtr
                           B     6    
002C5A CD 82 1C 00         B     7    				call hexword_or_bust			002C5E CA 06 16 00         B     8    				jp z,os_no_start_addr
002C62 23                  B     9    fndquot1		inc hl
002C63 7E                  B    10    				ld a,(hl)
002C64 B7                  B    11    				or a
002C65 CA 1E 16 00         B    12    				jp z,os_no_args_error
002C69 FE22                B    13    				cp 022h							002C6B 20 F5               B    14    				jr nz,fndquot1
002C6D 23                  B    15    				inc hl
002C6E E5                  B    16    				push hl
002C6F 7E                  B    17    fndquot2		ld a,(hl)
002C70 23                  B    18    				inc hl
002C71 B7                  B    19    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002C72 28 15               B    20    				jr z,noquot2
002C74 FE22                B    21    				cp 022h							002C76 20 F7               B    22    				jr nz,fndquot2
002C78 E1                  B    23    				pop hl
                           B    24    					
002C79 7E                  B    25    wmbalp			ld a,(hl)						002C7A FE22                B    26    				cp 022h
002C7C 28 09               B    27    				jr z,os_gtrdn					002C7E FE7D                B    28    				cp 07dh
002C80 28 01               B    29    				jr z,skpnasc
002C82 12                  B    30    				ld (de),a
002C83 13                  B    31    skpnasc			inc de
002C84 23                  B    32    				inc hl
002C85 18 F2               B    33    				jr wmbalp
002C87 AF                  B    34    os_gtrdn		xor a
002C88 C9                  B    35    				ret	
                           B    36    				
002C89 E1                  B    37    noquot2			pop hl							002C8A 3E12                B    38    				ld a,012h
002C8C B7                  B    39    				or a
002C8D C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002C8E                     B     5    os_cmd_lb
                           B     6    	
002C8E CD 93 16 00         B     7    				call os_check_volume_format	
002C92 C0                  B     8    				ret nz
                           B     9    				
002C93 CD 04 29 00         B    10    				call filename_or_bust			002C97 CD 26 16 00         B    11    				call os_find_file				002C9B C0                  B    12    				ret nz
002C9C ED53 35 68 00       B    13    				ld (filesize_cache),de			002CA1 2A 3A 60 00         B    14    				ld hl,(default_load_addr)
002CA5 22 32 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CA9 2A A4 61 00         B    17    				ld hl,(os_args_loc)
002CAD CD A4 0F 00         B    18    				call os_next_arg
                           B    19    
002CB1 CD 82 1C 00         B    20    				call hexword_or_bust			002CB5 28 05               B    21    				jr z,os_lbnao					002CB7 ED53 32 68 00       B    22    				ld (data_load_addr),de
                           B    23    
002CBC ED5B 32 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002CC1 2A 47 60 00         B    25    				ld hl,(sysram_os_highest)		002CC5 2B                  B    26    				dec hl
002CC6 AF                  B    27    				xor a
002CC7 ED52                B    28    				sbc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002CC9 38 04               B    29    				jr c,os_lbprok
002CCB 3E26                B    30    				ld a,026h						002CCD B7                  B    31    				or a
002CCE C9                  B    32    				ret
                           B    33    				
002CCF 2A 32 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002CD3 CD 55 16 00         B    35    				call os_read_bytes_from_file
002CD7 C0                  B    36    				ret nz
                           B    37    			
002CD8                     B    38    report_bytes_loaded
                           B    39    
002CD8 21 D9 55 00         B    40    				ld hl,os_hex_prefix_txt			002CDC CD 1B 0F 00         B    41    				call os_print_string			                           B    42    				
002CE0 11 37 68 00         B    43    				ld de,filesize_cache+2			002CE4 21 52 61 00         B    44    				ld hl,output_line
002CE8 0603                B    45    				ld b,3
002CEA CD 58 10 00         B    46    				call n_hexbytes_to_ascii
002CEE 3600                B    47    				ld (hl),0	
002CF0 0605                B    48    				ld b,5							002CF2 CD 31 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002CF6 21 A3 5C 00         B    51    				ld hl,bytes_loaded_msg			002CFA CD FA 13 00         B    52    				call os_show_packed_text
                           B    53    				
002CFE 21 38 56 00         B    54    				ld hl,to_txt					002D02 CD 1B 0F 00         B    55    				call os_print_string
                           B    56    
002D06 21 D9 55 00         B    57    				ld hl,os_hex_prefix_txt			002D0A CD 1B 0F 00         B    58    				call os_print_string	
                           B    59    
002D0E ED5B 32 68 00       B    60    				ld de,(data_load_addr)			002D13 CD FB 12 00         B    61    				call os_show_hex_address
                           B    62    
002D17 CD C3 13 00         B    63    				call os_new_line
002D1B AF                  B    64    				xor a
002D1C C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006832            B    69    data_load_addr	equ scratch_pad
       00006835            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D1D CD 82 1C 00         B     7    os_cmd_m		call hexword_or_bust			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D21 28 05               B     8    				jr z,m_no_hex					002D23 ED53 E8 60 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D28 0610                B    11    m_no_hex		ld b,16							002D2A C5                  B    12    smbllp			push bc							                           B    13    				
002D2B 21 64 2D 00         B    14    				ld hl,colon_cmd_prefix			002D2F CD 1B 0F 00         B    15    				call os_print_string
002D33 ED5B E8 60 00       B    16    				ld de,(mem_mon_addr)
002D38 CD FB 12 00         B    17    				call os_show_hex_address
                           B    18    
002D3C 21 52 61 00         B    19    				ld hl,output_line
002D40 0610                B    20    				ld b,bytes_per_line				002D42 3620                B    21    mmbllp			ld (hl),' '
002D44 23                  B    22    				inc hl
002D45 1A                  B    23    				ld a,(de)	
002D46 CD 66 10 00         B    24    				call hexbyte_to_ascii
002D4A 13                  B    25    				inc de
002D4B 10 F5               B    26    				djnz mmbllp
                           B    27    
002D4D ED53 E8 60 00       B    28    				ld (mem_mon_addr),de
002D52 360B                B    29    				ld (hl),11
002D54 23                  B    30    				inc hl
002D55 3600                B    31    				ld (hl),0
002D57 21 52 61 00         B    32    				ld hl,output_line
002D5B CD 1B 0F 00         B    33    				call os_print_string
002D5F C1                  B    34    				pop bc
002D60 10 C8               B    35    				djnz smbllp
                           B    36    				
002D62 AF                  B    37    				xor a
002D63 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002D64 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D67                     B     5    os_cmd_md
                           B     6    	
002D67 CD 93 16 00         B     7    				call os_check_volume_format	
002D6B C0                  B     8    				ret nz
                           B     9    			
002D6C CD 04 29 00         B    10    				call filename_or_bust
                           B    11    				
002D70 C3 D3 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002D74                     B     5    os_cmd_r	
002D74 DD21 53 60 00       B     6    				ld ix,store_a1					002D79 21 1E 2E 00         B     7    				ld hl,register_txt
002D7D CD 1B 0F 00         B     8    rcmdloop2		call os_print_string
002D81 7E                  B     9    rcmdloop		ld a,(hl)
002D82 FE01                B    10    				cp 1
002D84 28 0B               B    11    				jr z,showbyte
002D86 FE02                B    12    				cp 2
002D88 28 15               B    13    				jr z,showword16
002D8A FE03                B    14    				cp 3
002D8C 28 2E               B    15    				jr z,showaddr
002D8E 23                  B    16    				inc hl
002D8F 18 F0               B    17    				jr rcmdloop
                           B    18    				
002D91 DD7E00              B    19    showbyte		ld a,(ix)
002D94 DD23                B    20    				inc ix
002D96 DDE5                B    21    				push ix
002D98 E5                  B    22    				push hl
002D99 CD 0F 13 00         B    23    				call os_show_hex_byte
002D9D 18 2A               B    24    				jr showreg
                           B    25    
002D9F DD7E01              B    26    showword16		ld a,(ix+1)
002DA2 DDE5                B    27    				push ix
002DA4 E5                  B    28    				push hl
002DA5 CD 0F 13 00         B    29    				call os_show_hex_byte
002DA9 E1                  B    30    				pop hl
002DAA DDE1                B    31    				pop ix
002DAC DD7E00              B    32    				ld a,(ix)
002DAF DD23                B    33    				inc ix
002DB1 DD23                B    34    				inc ix
002DB3 DDE5                B    35    				push ix
002DB5 E5                  B    36    				push hl
002DB6 CD 0F 13 00         B    37    				call os_show_hex_byte
002DBA 18 0D               B    38    				jr showreg
                           B    39    
002DBC DD1700              B    40    showaddr		ld de,(ix)
002DBF ED3203              B    41    				lea ix,ix+3
002DC2 DDE5                B    42    				push ix
002DC4 E5                  B    43    				push hl
002DC5 CD FB 12 00         B    44    				call os_show_hex_address
002DC9 E1                  B    45    showreg			pop hl
002DCA DDE1                B    46    				pop ix
002DCC 23                  B    47    				inc hl
002DCD 7E                  B    48    				ld a,(hl)
002DCE B7                  B    49    				or a
002DCF 20 AC               B    50    				jr nz,rcmdloop2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B    51    			
002DD1 CD C3 13 00         B    52    				call os_new_line				002DD5 21 82 2E 00         B    53    				ld hl,flag_txt
002DD9 CD E3 12 00         B    54    				call os_copy_to_output_line
002DDD 21 56 61 00         B    55    				ld hl,output_line+4
002DE1 01050000            B    56    				ld bc,5
002DE5 3A 76 60 00         B    57    				ld a,(store_f)
002DE9 CB77                B    58    				bit 6,a							002DEB 28 02               B    59    				jr z,zfzero
002DED 3631                B    60    				ld (hl),'1'
002DEF 09                  B    61    zfzero			add hl,bc
002DF0 CB47                B    62    				bit 0,a							002DF2 28 02               B    63    				jr z,cfzero
002DF4 3631                B    64    				ld (hl),'1'
002DF6 09                  B    65    cfzero			add hl,bc
002DF7 CB7F                B    66    				bit 7,a							002DF9 28 02               B    67    				jr z,sfzero
002DFB 364D                B    68    				ld (hl),'M'
002DFD 09                  B    69    sfzero			add hl,bc
002DFE CB57                B    70    				bit 2,a							002E00 28 02               B    71    				jr z,pfzero
002E02 364F                B    72    				ld (hl),'O'
002E04 09                  B    73    pfzero			add hl,bc
002E05 23                  B    74    				inc hl
002E06 CB67                B    75    				bit 4,a							002E08 28 02               B    76    				jr z,iffzero
002E0A 3631                B    77    				ld (hl),'1'
002E0C                     B    78    iffzero			
002E0C 01060000            B    79    				ld bc,6
002E10 09                  B    80    				add hl,bc
002E11 3A 77 60 00         B    81    				ld a,(store_adl)
002E15 C630                B    82    				add a,30h
002E17 77                  B    83    				ld (hl),a
002E18 CD 26 13 00         B    84    				call os_print_output_line
002E1C AF                  B    85    				xor a
002E1D C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E1E 20413D00 01         B    91    register_txt		db ' A=',0,1
002E23 20204243 3D0003     B    92    					db '  BC=',0,3
002E2A 20204445 3D0003     B    93    					db '  DE=',0,3
002E31 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E38 0B                  B    96    					db 11
                           B    97    
002E39 27413D00 01         B    98    					db 027h,'A=',0,1
002E3E 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E45 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E4C 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E53 0B                  B   103    					db 11
                           B   104    
002E54 2049583D 0003       B   105    					db ' IX=',0,3
002E5A 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002E60 0B                  B   108    					db 11
                           B   109    					
002E61 2050433D 0003       B   110    					db ' PC=',0,3
002E67 204C5350 3D0003     B   111    					db ' LSP=',0,3
002E6E 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002E75 0B                  B   114    					db 11
                           B   115    					
002E76 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002E7E 010000 
                           B   117    					
002E81 0B                  B   118    					db 11
                           B   119    
002E82 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002E8A 3D302053 463D5020 
002E92 50563D45 20494646 
002E9A 3D302041 444C3D30 
002EA2 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EA5                     B     5    os_cmd_rd
                           B     6    
002EA5 CD 93 16 00         B     7    				call os_check_volume_format	
002EA9 C0                  B     8    				ret nz
                           B     9    				
002EAA CD 04 29 00         B    10    				call filename_or_bust
                           B    11    			
002EAE C3 3D 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EB2                     B     5    os_cmd_rn
                           B     6    	
002EB2 CD 93 16 00         B     7    				call os_check_volume_format	
002EB6 C0                  B     8    				ret nz
                           B     9    			
002EB7 CD 04 29 00         B    10    				call filename_or_bust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
002EBB E5                  B    11    				push hl
002EBC D1                  B    12    				pop de
002EBD CD A4 0F 00         B    13    				call os_next_arg
002EC1 7E                  B    14    				ld a,(hl)						002EC2 B7                  B    15    				or a
002EC3 20 04               B    16    				jr nz,rn_grfn
002EC5 3E1F                B    17    				ld a,01fh						002EC7 B7                  B    18    				or a
002EC8 C9                  B    19    				ret
                           B    20    
002EC9 EB                  B    21    rn_grfn			ex de,hl
002ECA C3 27 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002ECE                     B     5    os_cmd_sb
                           B     6    	
002ECE CD 93 16 00         B     7    				call os_check_volume_format		002ED2 C0                  B     8    				ret nz
                           B     9    					
002ED3 CD 04 29 00         B    10    				call filename_or_bust			002ED7 22 38 68 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002EDB 2A A4 61 00         B    13    				ld hl,(os_args_loc)
002EDF CD A4 0F 00         B    14    				call os_next_arg
002EE3 CD 82 1C 00         B    15    				call hexword_or_bust			002EE7 CA 06 16 00         B    16    				jp z,os_no_start_addr			002EEB ED53 32 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002EF0 CD 82 1C 00         B    19    				call hexword_or_bust			002EF4 CA 0A 16 00         B    20    				jp z,os_no_filesize
002EF8 ED53 35 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
002EFD 2A 38 68 00         B    23    				ld hl,(sb_save_name_addr)		002F01 CD 65 16 00         B    24    				call os_create_file
002F05 28 18               B    25    				jr z,os_sfapp
002F07 FEC9                B    26    				cp 0c9h							002F09 C0                  B    27    				ret nz			
002F0A 21 CC 5A 00         B    28    				ld hl,save_append_msg			002F0E CD FA 13 00         B    29    				call os_show_packed_text
002F12 CD A1 43 00         B    30    				call os_wait_key_press
002F16 3E79                B    31    				ld a,'y'
002F18 B8                  B    32    				cp b
002F19 28 04               B    33    				jr z,os_sfapp
002F1B 3E2C                B    34    				ld a,2ch						002F1D B7                  B    35    				or a
002F1E C9                  B    36    				ret
                           B    37    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002F1F 2A 38 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F23 ED5B 32 68 00       B    39    				ld de,(sb_save_addr)			002F28 ED4B 35 68 00       B    40    				ld bc,(sb_save_length)			002F2D CD 7B 16 00         B    41    				call os_write_bytes_to_file
002F31 C0                  B    42    				ret nz	
                           B    43    				
002F32 3E20                B    44    				ld a,020h						002F34 B7                  B    45    				or a
002F35 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006832            B    51    sb_save_addr		equ scratch_pad
       00006835            B    52    sb_save_length		equ scratch_pad+3
       00006838            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006932            B     6    buffer_addr				 equ os_max_addr		       00006832            B     7    rx_buffer_ptr			 equ scratch_pad
       00006835            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F36 7E                  B    11    os_cmd_rx		ld a,(hl)						002F37 B7                  B    12    				or a
002F38 CA FE 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F3C 3E3E                B    15    				ld a,'>'						002F3E BE                  B    16    				cp (hl)
002F3F C2 02 30 00         B    17    				jp nz,rx_nrs
002F43 23                  B    18    				inc hl
002F44 3E20                B    19    				ld a,' '
002F46 BE                  B    20    				cp (hl)
002F47 2B                  B    21    				dec hl
002F48 C2 02 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F4C CD 93 16 00         B    24    				call os_check_volume_format		002F50 C0                  B    25    				ret nz		
                           B    26    				
002F51 112A0000            B    27    				ld de,02ah						002F55 ED53 BE 5E 00       B    28    				ld (serial_filename),de			002F5A CD 06 31 00         B    29    				call rx_get_header
002F5E C0                  B    30    				ret nz
002F5F CD 74 45 00         B    31    				call s_holdack					                           B    32    				
002F63 21 D2 5E 00         B    33    				ld hl,serial_fileheader			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002F67 CD 65 16 00         B    34    				call os_create_file
002F6B C2 E1 2F 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002F6F 21 EC 5A 00         B    37    				ld hl,ser_recsave_msg
002F73 CD FA 13 00         B    38    				call os_show_packed_text
                           B    39    				
002F77 2A E2 5E 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002F7B 22 35 68 00         B    41    				ld (serial_file_length_cache),h
002F7F 21 32 69 00         B    42    				ld hl,buffer_addr
002F83 22 32 68 00         B    43    				ld (rx_buffer_ptr),hl
002F87 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002F89 CD 5C 45 00         B    46    rx_lnb			call s_goodack
002F8D CD 06 45 00         B    47    				call s_getblock
002F91 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002F93 F5                  B    50    				push af							002F94 CD 6D 45 00         B    51    				call s_badack					002F98 21 D2 5E 00         B    52    				ld hl,serial_fileheader			002F9C CD FB 16 00         B    53    				call os_erase_file
002FA0 F1                  B    54    				pop af
002FA1 C9                  B    55    				ret
                           B    56    
002FA2 CD 74 45 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FA6 21 32 66 00         B    59    				ld hl,sector_buffer
002FAA ED5B 32 68 00       B    60    				ld de,(rx_buffer_ptr)
002FAF 01000100            B    61    				ld bc,256
002FB3 EDB0                B    62    				ldir
002FB5 ED53 32 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002FBA 2A E2 5E 00         B    65    				ld hl,(serial_fileheader+16)
002FBE 11000100            B    66    				ld de,256
002FC2 AF                  B    67    				xor a
002FC3 ED52                B    68    				sbc hl,de
002FC5 22 E2 5E 00         B    69    				ld (serial_fileheader+16),hl
002FC9 28 1D               B    70    				jr z,rx_lbr
002FCB 38 1B               B    71    				jr c,rx_lbr
002FCD 10 BA               B    72    				djnz rx_lnb
                           B    73    
002FCF 01008000            B    74    				ld bc,buffer_blocks*256
002FD3 11 32 69 00         B    75    				ld de,buffer_addr
002FD7 21 D2 5E 00         B    76    				ld hl,serial_fileheader
002FDB CD 7B 16 00         B    77    				call os_write_bytes_to_file
002FDF 28 96               B    78    				jr z,rx_rnblk
002FE1 F5                  B    79    rxwtd_fail		push af
002FE2 CD 6D 45 00         B    80    				call s_badack
002FE6 F1                  B    81    				pop af
002FE7 C9                  B    82    				ret
                           B    83    				
002FE8 CD 5C 45 00         B    84    rx_lbr			call s_goodack
002FEC ED4B 35 68 00       B    85    				ld bc,(serial_file_length_cache
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FF1 11 32 69 00         B    86    				ld de,buffer_addr
002FF5 21 D2 5E 00         B    87    				ld hl,serial_fileheader
002FF9 CD 7B 16 00         B    88    				call os_write_bytes_to_file
002FFD C0                  B    89    				ret nz	
                           B    90    				
002FFE 3E20                B    91    rxtd_done		ld a,020h						003000 B7                  B    92    				or a
003001 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
003002 3E21                B    98    rx_nrs			ld a,'!'						003004 BE                  B    99    				cp (hl)							003005 C2 B0 30 00         B   100    				jr nz,notrxe
003009 23                  B   101    				inc hl
00300A 3E20                B   102    				ld a,' '
00300C BE                  B   103    				cp (hl)
00300D 2B                  B   104    				dec hl
00300E C2 B0 30 00         B   105    				jr nz,notrxe
003012 112A0000            B   106    				ld de,02ah						003016 ED53 BE 5E 00       B   107    				ld (serial_filename),de			00301B CD 06 31 00         B   108    				call rx_get_header
00301F C0                  B   109    				ret nz
003020 21 E2 5A 00         B   110    				ld hl,ser_rec2_msg
003024 CD FA 13 00         B   111    				call os_show_packed_text
003028 CD 5C 45 00         B   112    				call s_goodack
00302C 3E01                B   113    				ld a,1							00302E 32 D1 5E 00         B   114    				ld (serial_timeout),a
003032 CD 06 45 00         B   115    				call s_getblock					003036 28 07               B   116    				jr z,rxe_fblok
003038 F5                  B   117    rxe_badblock	push af							003039 CD 6D 45 00         B   118    				call s_badack					00303D F1                  B   119    				pop af
00303E C9                  B   120    				ret
                           B   121    	
00303F 2A 34 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003043 1150524F            B   123    				ld de,04f5250h					003047 AF                  B   124    				xor a
003048 28 04               B   125    				jr z,rxe_ok
00304A 3E1A                B   126    				ld a,1ah						00304C B7                  B   127    				or a
00304D C9                  B   128    				ret
00304E 2A 37 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003052 22 B5 5E 00         B   130    				ld (serial_ez80_address),hl
003056 01000100            B   131    				ld bc,256						00305A DD21 D2 5E 00       B   132    				ld ix,serial_fileheader
00305F AF                  B   133    				xor a
003060 DDB612              B   134    				or (ix+18)						003063 20 0A               B   135    				jr nz,mtones
003065 DDB611              B   136    				or a,(ix+17)					003068 20 05               B   137    				jr nz,mtones
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00306A 0600                B   138    				ld b,0
00306C DD4E10              B   139    				ld c,(ix+16)					00306F 21 32 66 00         B   140    mtones			ld hl,sector_buffer				003073 ED5B B5 5E 00       B   141    				ld de,(serial_ez80_address)		003078 EDB0                B   142    				ldir
                           B   143    				
00307A D5                  B   144    				push de
00307B CD 5C 45 00         B   145    				call s_goodack		
00307F DDE1                B   146    				pop ix							003081 2A E2 5E 00         B   147    				ld hl,(serial_fileheader+16)	003085 11000100            B   148    				ld de,256
003089 AF                  B   149    				xor a
00308A ED52                B   150    				sbc hl,de						00308C 28 18               B   151    				jr z,rxe_done
00308E 38 16               B   152    				jr c,rxe_done
003090 EB                  B   153    				ex de,hl
003091 ED53 E2 5E 00       B   154    				ld (serial_fileheader+16),de	003096 DD2A B5 5E 00       B   155    				ld ix,(serial_ez80_address)
00309B 01000100            B   156    				ld bc,256
00309F DD09                B   157    				add ix,bc
0030A1 CD C4 44 00         B   158    				call s_gbloop					0030A5 C0                  B   159    				ret nz
0030A6 E1                  B   160    rxe_done		pop hl							0030A7 CD 13 3D 00         B   161    				call enable_button_nmi			0030AB 2A B5 5E 00         B   162    				ld hl,(serial_ez80_address)
0030AF E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
0030B0 CD 4D 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
0030B4 0610                B   169    				ld b,16							0030B6 11 BE 5E 00         B   170    				ld de,serial_filename
0030BA CD 09 12 00         B   171    				call os_copy_ascii_run			0030BE 79                  B   172    				ld a,c
0030BF 32 D0 5E 00         B   173    				ld (serial_fn_length),a
0030C3 CD B0 0F 00         B   174    				call os_scan_for_space
                           B   175    				
0030C7 CD 82 1C 00         B   176    				call hexword_or_bust			0030CB CA 06 16 00         B   177    				jp z,os_no_start_addr			0030CF ED53 32 68 00       B   178    				ld (data_load_addr),de			0030D4 2A 47 60 00         B   179    				ld hl,(sysram_os_highest)		0030D8 2B                  B   180    				dec hl
0030D9 AF                  B   181    				xor a
0030DA ED52                B   182    				sbc hl,de
0030DC 38 04               B   183    				jr c,os_prok
0030DE 3E26                B   184    				ld a,026h						0030E0 B7                  B   185    				or a
0030E1 C9                  B   186    				ret
                           B   187    
0030E2 CD 06 31 00         B   188    os_prok			call rx_get_header
0030E6 C0                  B   189    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   190    
0030E7 21 E2 5A 00         B   191    				ld hl,ser_rec2_msg
0030EB CD FA 13 00         B   192    				call os_show_packed_text
                           B   193    	
0030EF 2A 32 68 00         B   194    				ld hl,(data_load_addr)			0030F3 CD B2 44 00         B   195    				call serial_receive_file
0030F7 C0                  B   196    				ret nz							                           B   197    
0030F8 ED5B E2 5E 00       B   198    				ld de,(serial_fileheader+16)	0030FD ED53 35 68 00       B   199    				ld (filesize_cache),de
003102 C3 D8 2C 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
003106                     B   204    rx_get_header
003106 21 DE 5A 00         B   205    				ld hl,ser_rec_msg
00310A CD FA 13 00         B   206    				call os_show_packed_text
                           B   207    				
00310E 3E00                B   208    				ld a,0
003110 32 F3 5E 00         B   209    				ld (anim_wait_count),a			003114 3A F3 5E 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
003118 3C                  B   211    				inc a
003119 47                  B   212    				ld b,a
00311A FE06                B   213    				cp 6
00311C 20 07               B   214    				jr nz,notsix
00311E 0E20                B   215    				ld c,' '
003120 0605                B   216    				ld b,5
003122 AF                  B   217    				xor a
003123 18 02               B   218    				jr mcharset
003125 0E2E                B   219    notsix			ld c,'.'
003127 32 F3 5E 00         B   220    mcharset		ld (anim_wait_count),a
00312B CD 53 1A 00         B   221    				call os_print_multiple_chars
00312F CD 64 0F 00         B   222    				call home_cursor
                           B   223    				
003133 21 BE 5E 00         B   224    				ld hl,serial_filename			003137 3E01                B   225    				ld a,1							003139 CD 17 44 00         B   226    				call serial_get_header
00313D C8                  B   227    				ret z
00313E FE83                B   228    				cp 083h							003140 C0                  B   229    				ret nz
003141 CD FC 43 00         B   230    				call os_get_key_press
003145 FE76                B   231    				cp 076h
003147 20 CB               B   232    				jr nz,get_hdr_loop
003149 3E80                B   233    				ld a,080h						00314B B7                  B   234    notsto			or a
00314C C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00314D                     B   240    clear_serial_filename
                           B   241    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00314D E5                  B   242    				push hl							00314E 21 BE 5E 00         B   243    				ld hl,serial_filename
003152 01100000            B   244    				ld bc,16
003156 AF                  B   245    				xor a
003157 CD 87 15 00         B   246    				call os_bchl_memfill
00315B E1                  B   247    				pop hl
00315C C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00315D 7E                  B     5    os_cmd_tx		ld a,(hl)						00315E B7                  B     6    				or a
00315F CA FE 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003163 E5                  B     9    				push hl							003164 21 BE 5E 00         B    10    				ld hl,serial_filename
003168 01100000            B    11    				ld bc,16
00316C AF                  B    12    				xor a
00316D CD 87 15 00         B    13    				call os_bchl_memfill
003171 E1                  B    14    				pop hl
                           B    15    			
003172 0610                B    16    				ld b,16							003174 11 BE 5E 00         B    17    				ld de,serial_filename
003178 CD 09 12 00         B    18    				call os_copy_ascii_run			00317C 79                  B    19    				ld a,c
00317D 32 D0 5E 00         B    20    				ld (serial_fn_length),a
003181 CD B0 0F 00         B    21    				call os_scan_for_space
                           B    22    							
003185 CD 82 1C 00         B    23    				call hexword_or_bust			003189 CA 06 16 00         B    24    				jp z,os_no_start_addr			00318D ED53 B5 5E 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003192 CD 82 1C 00         B    27    				call hexword_or_bust			003196 CA 0A 16 00         B    28    				jp z,os_no_filesize
00319A ED53 B8 5E 00       B    29    				ld (serial_file_length),de
00319F 21000000            B    30    				ld hl,0
0031A3 3E07                B    31    				ld a,07h						0031A5 B7                  B    32    				or a
0031A6 ED5A                B    33    				adc hl,de
0031A8 28 1D               B    34    				jr z,s_error
                           B    35    				
0031AA 21 E7 5A 00         B    36    				ld hl,ser_send_msg
0031AE CD FA 13 00         B    37    				call os_show_packed_text
                           B    38    			
0031B2 ED5B B8 5E 00       B    39    				ld de,(serial_file_length)
0031B7 21 BE 5E 00         B    40    				ld hl,serial_filename			0031BB DD2A B5 5E 00       B    41    				ld ix,(serial_ez80_address)
0031C0 CD 7B 45 00         B    42    				call serial_send_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
0031C4 C0                  B    43    				ret nz			
                           B    44    			
0031C5 3E20                B    45    				ld a,020h						0031C7 B7                  B    46    s_error			or a
0031C8 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0031C9 CD 82 1C 00         B     5    os_cmd_t		call hexword_or_bust			0031CD 28 05               B     6    				jr z,t_no_hex					0031CF ED53 E8 60 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0031D4 0610                B     9    t_no_hex		ld b,16
0031D6 C5                  B    10    smaalp			push bc
                           B    11    				
0031D7 21 1A 32 00         B    12    				ld hl,gtr_cmd_prefix			0031DB CD 1B 0F 00         B    13    				call os_print_string
0031DF ED5B E8 60 00       B    14    				ld de,(mem_mon_addr)
0031E4 CD FB 12 00         B    15    				call os_show_hex_address
                           B    16    
0031E8 21 52 61 00         B    17    				ld hl,output_line
0031EC 3620                B    18    				ld (hl),' '
0031EE 23                  B    19    				inc hl
0031EF 3622                B    20    				ld (hl),022h
0031F1 0610                B    21    				ld b,16
0031F3 23                  B    22    mabllp			inc hl
0031F4 1A                  B    23    				ld a,(de)	
0031F5 FE20                B    24    				cp 020h
0031F7 38 04               B    25    				jr c,chchar
0031F9 FE7F                B    26    				cp 07fh
0031FB 38 02               B    27    				jr c,nchchar
0031FD 3E7C                B    28    chchar			ld a,07ch
0031FF 77                  B    29    nchchar			ld (hl),a
003200 13                  B    30    				inc de
003201 10 F0               B    31    				djnz mabllp
                           B    32    
003203 ED53 E8 60 00       B    33    				ld (mem_mon_addr),de
003208 23                  B    34    				inc hl
003209 3622                B    35    				ld (hl),022h
00320B 23                  B    36    				inc hl
00320C 360B                B    37    				ld (hl),11
00320E 23                  B    38    				inc hl
00320F 3600                B    39    				ld (hl),0
003211 CD 26 13 00         B    40    				call os_print_output_line
003215 C1                  B    41    				pop bc
003216 10 BE               B    42    				djnz smaalp
003218 AF                  B    43    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
003219 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
00321A 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00321D                     B     5    os_cmd_remount
                           B     6    
00321D 3E00                B     7    				ld a,0							00321F CD 38 18 00         B     8    				call os_mount_volumes
003223 CD C3 13 00         B     9    				call os_new_line
003227 AF                  B    10    				xor a
003228 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
003229                     B     5    os_cmd_vers
                           B     6    
003229 21 DB 55 00         B     7    				ld hl,os_version_txt
00322D CD 1B 0F 00         B     8    				call os_print_string
                           B     9    			
003231 CD 4B 40 00         B    10    				call hwsc_get_version
003235 D5                  B    11    				push de
003236 EB                  B    12    				ex de,hl
003237 CD 1A 13 00         B    13    				call os_show_hex_word
                           B    14    				
00323B 21 FE 55 00         B    15    				ld hl,fwd_slash_txt
00323F CD 1B 0F 00         B    16    				call os_print_string
                           B    17    				
003243 21 E9 55 00         B    18    				ld hl,hw_version_txt
003247 CD 1B 0F 00         B    19    				call os_print_string
00324B D1                  B    20    				pop de
00324C CD 1A 13 00         B    21    				call os_show_hex_word
                           B    22    				
003250 CD C3 13 00         B    23    				call os_new_line
003254 CD C3 13 00         B    24    				call os_new_line	
003258 AF                  B    25    				xor a
003259 C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
00325A 21 B9 61 00         B    22    os_cmd_exec		ld hl,script_flags				00325E CB46                B    23    				bit scr_in_script,(hl)
003260 C2 F1 33 00         B    24    				jp nz,script_error
003264 E5                  B    25    				push hl
003265 CD 6D 32 00         B    26    				call do_script
003269 E1                  B    27    				pop hl
00326A CB86                B    28    				res scr_in_script,(hl)
00326C C9                  B    29    				ret
                           B    30    				
00326D CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
00326F 2A A4 61 00         B    33    				ld hl,(os_args_loc)				003273 11 D1 60 00         B    34    				ld de,script_fn					003277 060D                B    35    				ld b,13
003279 CD 09 12 00         B    36    				call os_copy_ascii_run
00327D AF                  B    37    				xor a
00327E 12                  B    38    				ld (de),a
                           B    39    				
00327F CD 6B 1A 00         B    40    				call fs_get_dir_cluster			003283 ED53 B0 61 00       B    41    				ld (script_dir),de
                           B    42    				
003288 CD 93 16 00         B    43    				call os_check_volume_format		00328C C0                  B    44    				ret nz
                           B    45    				
00328D CD BD 33 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
003291 3A 16 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003295 E602                B    52    				and 2
003297 28 12               B    53    				jr z,no_quit_script	
003299 CD FC 43 00         B    54    				call os_get_key_press
00329D FE21                B    55    				cp 021h							00329F 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
0032A1 21 FB 5A 00         B    58    				ld hl,script_aborted_msg
0032A5 CD FA 13 00         B    59    				call os_show_packed_text
0032A9 AF                  B    60    				xor a							0032AA C9                  B    61    				ret
                           B    62    					
                           B    63    
0032AB CD D0 33 00         B    64    no_quit_script	call open_script				0032AF C0                  B    65    				ret nz
0032B0 CD FB 33 00         B    66    				call read_script				0032B4 C0                  B    67    				ret nz
0032B5 21 B9 61 00         B    68    				ld hl,script_flags				0032B9 CB5E                B    69    				bit scr_end,(hl)
0032BB 28 02               B    70    				jr z,scr_to_do
0032BD AF                  B    71    scr_done		xor a
0032BE C9                  B    72    				ret
                           B    73    				
0032BF 21 00 61 00         B    74    scr_to_do		ld hl,commandstring				0032C3 7E                  B    75    				ld a,(hl)
0032C4 FE5B                B    76    				cp '['
0032C6 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
0032C8 11 43 56 00         B    79    				ld de,if_command_txt			0032CC 0603                B    80    				ld b,3
0032CE CD EA 11 00         B    81    				call os_compare_strings
0032D2 28 18               B    82    				jr z,do_exec_if
                           B    83    				
0032D4 11 46 56 00         B    84    				ld de,end_command_txt			0032D8 0604                B    85    				ld b,4
0032DA CD EA 11 00         B    86    				call os_compare_strings
0032DE 28 DD               B    87    				jr z,scr_done
                           B    88    			
0032E0 CD 40 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
0032E4 21 B9 61 00         B    91    exec_scr_next	ld hl,script_flags
0032E8 CBCE                B    92    				set scr_find_new_line,(hl)
0032EA 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0032EC 21 02 61 00         B   104    do_exec_if		ld hl,commandstring+2			0032F0 CD B9 0F 00         B   105    				call os_scan_for_non_space
0032F4 CA F1 33 00         B   106    				jr z,script_error				0032F8 11 BA 61 00         B   107    				ld de,if_name_txt
0032FC 0610                B   108    				ld b,max_if_chars
0032FE CD 09 12 00         B   109    				call os_copy_ascii_run			003302 AF                  B   110    				xor a
003303 12                  B   111    				ld (de),a
                           B   112    				
003304 CD B9 0F 00         B   113    				call os_scan_for_non_space		003308 CA F1 33 00         B   114    				jr z,script_error
00330C DD21 B9 61 00       B   115    				ld ix,script_flags
003311 DDCB0096            B   116    				res scr_if_condition,(ix)
003315 7E                  B   117    				ld a,(hl)
003316 FE3D                B   118    				cp '='
003318 28 04               B   119    				jr z,if_equals
00331A DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
00331E CD B0 0F 00         B   122    if_equals		call os_scan_for_space			003322 CD B9 0F 00         B   123    				call os_scan_for_non_space		003326 CA F1 33 00         B   124    				jr z,script_error
00332A 11 CC 61 00         B   125    				ld de,if_value_txt				00332E 0610                B   126    				ld b,max_if_chars
003330 CD 09 12 00         B   127    				call os_copy_ascii_run
003334 AF                  B   128    				xor a
003335 12                  B   129    				ld (de),a
                           B   130    				
003336 CD B9 0F 00         B   131    				call os_scan_for_non_space
00333A CA F1 33 00         B   132    				jr z,script_error
00333E 11 DE 61 00         B   133    				ld de,if_label_txt				003342 0610                B   134    				ld b,max_if_chars
003344 CD 09 12 00         B   135    				call os_copy_ascii_run			003348 AF                  B   136    				xor a
003349 12                  B   137    				ld (de),a						                           B   138    								
00334A 21 BA 61 00         B   139    				ld hl,if_name_txt				00334E CD 31 1B 00         B   140    				call os_get_envar				003352 C2 E4 32 00         B   141    				jp nz,exec_scr_next				                           B   142    								
003356 21 CC 61 00         B   143    				ld hl,if_value_txt
00335A DD21 B9 61 00       B   144    				ld ix,script_flags
00335F DDCB0056            B   145    				bit scr_if_condition,(ix)
003363 20 0A               B   146    				jr nz,if_cond_diff
003365 CD EA 11 00         B   147    				call os_compare_strings			003369 C2 E4 32 00         B   148    				jp nz,exec_scr_next				00336D 18 08               B   149    				jr if_cond_met
00336F CD EA 11 00         B   150    if_cond_diff	call os_compare_strings			003373 CA E4 32 00         B   151    				jp z,exec_scr_next				                           B   152    
003377 CD BD 33 00         B   153    if_cond_met		call new_script					                           B   154    
00337B CD D0 33 00         B   155    find_if_label	call open_script				Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00337F C0                  B   156    				ret nz
                           B   157    
003380 CD FB 33 00         B   158    				call read_script
003384 C0                  B   159    				ret nz
003385 21 B9 61 00         B   160    				ld hl,script_flags
003389 CB5E                B   161    				bit scr_end,(hl)
00338B C2 BD 32 00         B   162    				jp nz,scr_done
                           B   163    				
00338F 21 00 61 00         B   164    				ld hl,commandstring				003393 7E                  B   165    				ld a,(hl)
003394 FE5B                B   166    				cp '['
003396 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
003398 23                  B   169    if_find_csb		inc hl
003399 7E                  B   170    				ld a,(hl)
00339A B7                  B   171    				or a
00339B 28 18               B   172    				jr z,not_a_label				00339D FE5D                B   173    				cp ']'							00339F 20 F7               B   174    				jr nz,if_find_csb
0033A1 3600                B   175    				ld (hl),0						0033A3 21 01 61 00         B   176    				ld hl,commandstring+1
0033A7 11 DE 61 00         B   177    				ld de,if_label_txt				0033AB 0610                B   178    				ld b,max_if_chars
0033AD CD EA 11 00         B   179    				call os_compare_strings
0033B1 CA E4 32 00         B   180    				jp z,exec_scr_next				                           B   181    
0033B5 21 B9 61 00         B   182    not_a_label		ld hl,script_flags
0033B9 CBCE                B   183    				set scr_find_new_line,(hl)		0033BB 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
0033BD E5                  B   188    new_script		push hl
0033BE 21000000            B   189    				ld hl,0
0033C2 22 B3 61 00         B   190    				ld (script_file_offset),hl		0033C6 21 B9 61 00         B   191    				ld hl,script_flags
0033CA CB8E                B   192    				res scr_find_new_line,(hl)		0033CC CB9E                B   193    				res scr_end,(hl)
0033CE E1                  B   194    				pop hl
0033CF C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
0033D0 CD 6B 1A 00         B   199    open_script		call fs_get_dir_cluster			0033D4 D5                  B   200    				push de
0033D5 ED5B B0 61 00       B   201    				ld de,(script_dir)				0033DA CD 77 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
0033DE 21 D1 60 00         B   204    				ld hl,script_fn					0033E2 CD 26 16 00         B   205    				call os_find_file				0033E6 ED53 B6 61 00       B   206    				ld (script_length),de			0033EB D1                  B   207    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033EC C0                  B   208    				ret nz
0033ED 79                  B   209    				ld a,c							0033EE B7                  B   210    				or a
0033EF 28 04               B   211    				jr z,scr_flok
                           B   212    				
0033F1 3E8C                B   213    script_error	ld a,08ch
0033F3 B7                  B   214    				or a
0033F4 C9                  B   215    				ret
                           B   216    				
0033F5 CD 77 1A 00         B   217    scr_flok		call fs_update_dir_cluster		0033F9 AF                  B   218    				xor a
0033FA C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
0033FB 21 00 61 00         B   224    read_script		ld hl,commandstring				0033FF 01500000            B   225    				ld bc,max_buffer_chars			003403 3E20                B   226    				ld a,32
003405 CD 87 15 00         B   227    				call os_bchl_memfill
                           B   228    				
003409 11500000            B   229    				ld de,max_buffer_chars			00340D CD 37 16 00         B   230    				call os_set_load_length
                           B   231    				
003411 AF                  B   232    				xor a
003412 2A B6 61 00         B   233    				ld hl,(script_length)
003416 ED5B B3 61 00       B   234    				ld de,(script_file_offset)		00341B 37                  B   235    				scf
00341C ED52                B   236    				sbc hl,de						00341E 30 08               B   237    				jr nc,not_eoscr					003420 21 B9 61 00         B   238    				ld hl,script_flags
003424 CBDE                B   239    				set scr_end,(hl)				003426 AF                  B   240    				xor a
003427 C9                  B   241    				ret
003428 CD 3F 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
00342C 21 00 61 00         B   244    				ld hl,commandstring				003430 CD 55 16 00         B   245    				call os_read_bytes_from_file
003434 B7                  B   246    				or a			
003435 28 03               B   247    				jr z,scr_load_ok
003437 FECC                B   248    				cp 0cch							003439 C0                  B   249    				ret nz							                           B   250    
00343A 21 B9 61 00         B   251    scr_load_ok		ld hl,script_flags
00343E CB4E                B   252    				bit scr_find_new_line,(hl)		003440 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003442 21 00 61 00         B   255    				ld hl,commandstring				003446 0650                B   256    				ld b,max_buffer_chars
003448 7E                  B   257    scr_fcr			ld a,(hl)
003449 FE20                B   258    				cp 32
00344B 38 05               B   259    				jr c,scr_gotclcr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00344D 23                  B   260    				inc hl
00344E 10 F8               B   261    				djnz scr_fcr
003450 AF                  B   262    				xor a
003451 C9                  B   263    				ret
003452 3620                B   264    scr_gotclcr		ld (hl),32						003454 23                  B   265    				inc hl
003455 10 FB               B   266    				djnz scr_gotclcr
003457 AF                  B   267    				xor a
003458 C9                  B   268    				ret
                           B   269    
003459 FD2A B3 61 00       B   270    scr_fnl			ld iy,(script_file_offset)
00345E 21 00 61 00         B   271    				ld hl,commandstring	
003462 7E                  B   272    scr_find_cr		ld a,(hl)						003463 B7                  B   273    				or a
003464 20 07               B   274    				jr nz,scr_neocl					003466 FD22 B3 61 00       B   275    scr_eocl		ld (script_file_offset),iy
00346B 18 8E               B   276    				jr read_script				
00346D FE20                B   277    scr_neocl		cp 20h							00346F 38 05               B   278    				jr c,scr_got_cr
003471 23                  B   279    				inc hl
003472 FD23                B   280    				inc iy
003474 18 EC               B   281    				jr scr_find_cr
                           B   282    				
003476 7E                  B   283    scr_got_cr		ld a,(hl)
003477 B7                  B   284    				or a							003478 28 EC               B   285    				jr z,scr_eocl					00347A FE20                B   286    				cp 20h
00347C 30 05               B   287    				jr nc,scr_got_ch				00347E 23                  B   288    				inc hl
00347F FD23                B   289    				inc iy
003481 18 F3               B   290    				jr scr_got_cr
                           B   291    
003483 FD22 B3 61 00       B   292    scr_got_ch		ld (script_file_offset),iy
003488 21 B9 61 00         B   293    				ld hl,script_flags				00348C CB8E                B   294    				res scr_find_new_line,(hl)
00348E C3 FB 33 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
                           B     6    
003492                     B     7    os_cmd_ltn
                           B     8    
003492 AF                  B     9    				xor a
003493 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003494                     B     5    os_cmd_pen
                           B     6    	
003494 0612                B     7    				ld b,18							003496 DD21 79 5E 00       B     8    				ld ix,current_pen
                           B     9    				
00349B CD 82 1C 00         B    10    chpenlp			call hexword_or_bust			00349F 28 0D               B    11    				jr z,pendone					0034A1 23                  B    12    				inc hl
0034A2 DD7300              B    13    				ld (ix),e
0034A5 DD7201              B    14    				ld (ix+1),d
0034A8 DD23                B    15    				inc ix
0034AA DD23                B    16    				inc ix
0034AC 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034AE 21 7D 5E 00         B    19    pendone			ld hl,pen_palette				0034B2 CD 1A 3E 00         B    20    				call hswc_set_ui_colours
0034B6 AF                  B    21    				xor a
0034B7 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034B8                     B     5    os_cmd_palette
                           B     6    
0034B8 0610                B     7    				ld b,16							0034BA DD21 7D 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
0034BF 0E00                B    10    				ld c,0
0034C1 C5                  B    11    chcollp			push bc
0034C2 CD 82 1C 00         B    12    				call hexword_or_bust			0034C6 C1                  B    13    				pop bc
0034C7 28 0E               B    14    				jr z,colrdone					0034C9 0C                  B    15    				inc c
0034CA 23                  B    16    				inc hl
0034CB DD7300              B    17    				ld (ix),e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
0034CE DD7201              B    18    				ld (ix+1),d
0034D1 DD23                B    19    				inc ix
0034D3 DD23                B    20    				inc ix
0034D5 10 EA               B    21    				djnz chcollp
                           B    22    			
0034D7 79                  B    23    colrdone		ld a,c
0034D8 B7                  B    24    				or a
0034D9 20 04               B    25    				jr nz,pal_ok
0034DB 3E81                B    26    				ld a,81h						0034DD B7                  B    27    				or a
0034DE C9                  B    28    				ret
0034DF 21 7D 5E 00         B    29    pal_ok			ld hl,pen_palette
0034E3 CD 1A 3E 00         B    30    				call hswc_set_ui_colours	
0034E7 AF                  B    31    				xor a
0034E8 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
0034E9                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
0034E9 CD 7A 3B 00         B    15    				call disable_ms_irq
                           B    16    
0034ED 21 46 60 00         B    17    				ld hl,devices_connected
0034F1 CB8E                B    18    				res 1,(hl)
                           B    19    		
0034F3 CD 90 41 00         B    20    				call init_mouse
0034F7 C0                  B    21    				ret nz
                           B    22    			
0034F8 AF                  B    23    				xor a
0034F9 32 1F 62 00         B    24    				ld (mouse_packet_index),a
0034FD 32 20 62 00         B    25    				ld (mouse_buttons),a
003501 21000000            B    26    				ld hl,0
003505 22 21 62 00         B    27    				ld (mouse_disp_x),hl
003509 22 24 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00350D 21800200            B    30    				ld hl,window_width_pixels
003511 11E00100            B    31    				ld de,window_height_pixels
003515 CD 44 14 00         B    32    				call os_set_mouse_window
                           B    33    
003519 CD 74 3B 00         B    34    				call enable_ms_irq
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
                           B    35    
00351D 21 46 60 00         B    36    				ld hl,devices_connected
003521 CBCE                B    37    				set 1,(hl)
003523 AF                  B    38    				xor a
003524 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
003525                     B     5    os_cmd_vmode
                           B     6    	
003525 CD 82 1C 00         B     7    				call hexword_or_bust			003529 20 04               B     8    				jr nz,vm_data					00352B 3E81                B     9    				ld a,81h						00352D B7                  B    10    				or a
00352E C9                  B    11    				ret
                           B    12    
00352F 7B                  B    13    vm_data			ld a,e
003530 CD 60 15 00         B    14    				call os_set_vmode
003534 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003535                     B     5    os_cmd_font
                           B     6    	
003535 CD 93 16 00         B     7    				call os_check_volume_format	
003539 C0                  B     8    				ret nz
                           B     9    				
00353A CD 04 29 00         B    10    				call filename_or_bust			00353E 22 32 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
003542 CD 6B 1A 00         B    13    				call fs_get_dir_cluster			003546 ED53 35 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00354B CD F1 16 00         B    16    				call os_root_dir				00354F C0                  B    17    				ret nz
003550 21 BE 35 00         B    18    				ld hl,fonts_fn
003554 CD E1 16 00         B    19    				call os_change_dir
003558 20 1E               B    20    				jr nz,no_font
                           B    21    				
00355A 2A 32 68 00         B    22    				ld hl,(scratch_pad)
00355E CD 26 16 00         B    23    				call os_find_file				003562 20 14               B    24    				jr nz,no_font
                           B    25    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
003564 11000800            B    26    				ld de,800h
003568 CD 37 16 00         B    27    				call os_set_load_length			                           B    28    
00356C 21000080            B    29    				ld hl,vram_a_addr				003570 CD 55 16 00         B    30    				call os_read_bytes_from_file
003574 CD 84 35 00         B    31    				call convert_font
                           B    32    				
003578 F5                  B    33    no_font			push af
003579 ED5B 35 68 00       B    34    				ld de,(scratch_pad+3)			00357E CD 77 1A 00         B    35    				call fs_update_dir_cluster
003582 F1                  B    36    				pop af
003583 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
003584 1EFF                B    42    convert_font	ld e,255						003586 01080000            B    43    				ld bc,8
00358A 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
00358E CD 99 35 00         B    45    conv_allch		call char_to_font
003592 AF                  B    46    				xor a
003593 ED42                B    47    				sbc hl,bc
003595 1D                  B    48    				dec e
003596 20 F6               B    49    				jr nz,conv_allch
003598 C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
003599 E5                  B    57    char_to_font	push hl
00359A C5                  B    58    				push bc
00359B 01400000            B    59    				ld bc,64
00359F 43                  B    60    				ld b,e
0035A0 ED4C                B    61    				mlt bc
0035A2 DD210000 80         B    62    				ld ix,vram_a_addr
0035A7 DD09                B    63    				add ix,bc
0035A9 CD B1 35 00         B    64    				call conv_char
0035AD C1                  B    65    				pop bc
0035AE E1                  B    66    				pop hl
0035AF AF                  B    67    				xor a
0035B0 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
0035B1 0608                B    72    conv_char		ld b,8
0035B3 7E                  B    73    bfontlp1		ld a,(hl)
0035B4 DD7700              B    74    				ld (ix),a
0035B7 23                  B    75    				inc hl
0035B8 ED3208              B    76    				lea ix,ix+8
0035BB 10 F6               B    77    				djnz bfontlp1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
0035BD C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
0035BE 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
0035C4 7E                  B     8    os_cmd_set		ld a,(hl)					; i
0035C5 B7                  B     9    				or a
0035C6 28 3B               B    10    				jr z,show_envars
                           B    11    
0035C8 11 35 68 00         B    12    				ld de,scratch_pad+3			; p
0035CC 7E                  B    13    evsalp1			ld a,(hl)
0035CD 12                  B    14    				ld (de),a
0035CE B7                  B    15    				or a
0035CF 28 2E               B    16    				jr z,set_bad_args
0035D1 FE3D                B    17    				cp '='
0035D3 28 04               B    18    				jr z,evsadone1
0035D5 23                  B    19    				inc hl
0035D6 13                  B    20    				inc de
0035D7 18 F3               B    21    				jr evsalp1
0035D9 AF                  B    22    evsadone1		xor a
0035DA 12                  B    23    				ld (de),a
0035DB 13                  B    24    				inc de
0035DC 23                  B    25    				inc hl
0035DD ED53 32 68 00       B    26    				ld (scratch_pad),de
                           B    27    
0035E2 7E                  B    28    evsalp2			ld a,(hl)
0035E3 12                  B    29    				ld (de),a
0035E4 FE20                B    30    				cp ' '
0035E6 28 07               B    31    				jr z,evsadone2
0035E8 B7                  B    32    				or a
0035E9 28 14               B    33    				jr z,set_bad_args
0035EB 23                  B    34    				inc hl
0035EC 13                  B    35    				inc de
0035ED 18 F3               B    36    				jr evsalp2
0035EF AF                  B    37    evsadone2		xor a
0035F0 12                  B    38    				ld (de),a
                           B    39    				
0035F1 21 35 68 00         B    40    				ld hl,scratch_pad+3
0035F5 ED5B 32 68 00       B    41    				ld de,(scratch_pad)
0035FA CD 71 1B 00         B    42    				call os_set_envar
0035FE C9                  B    43    				ret
                           B    44    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0035FF 3E82                B    45    set_bad_args	ld a,82h
003601 B7                  B    46    				or a
003602 C9                  B    47    				ret
                           B    48    				
                           B    49    
003603 21 43 62 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003607 7E                  B    52    show_envlp		ld a,(hl)
003608 FEFF                B    53    				cp 0ffh
00360A 28 12               B    54    				jr z,set_done
00360C E5                  B    55    				push hl
00360D CD 1B 0F 00         B    56    				call os_print_string
003611 CD C3 13 00         B    57    				call os_new_line
003615 E1                  B    58    				pop hl
                           B    59    				
003616 23                  B    60    set_fnl			inc hl
003617 7E                  B    61    				ld a,(hl)
003618 B7                  B    62    				or a
003619 20 FB               B    63    				jr nz,set_fnl
00361B 23                  B    64    				inc hl
00361C 18 E9               B    65    				jr show_envlp
                           B    66    				
00361E AF                  B    67    set_done		xor a
00361F C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003620 FD21 7D 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003625 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
003629 C3 9F 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
00362D 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003631 ED53 C0 36 00       B     6    				ld (aud_per),de
003636 3E40                B     7    				ld a,64
003638 32 C2 36 00         B     8    				ld (aud_vol),a
00363C 3E11                B     9    				ld a,11h
00363E 32 C3 36 00         B    10    				ld (aud_chans),a
                           B    11    				
003642 CD 82 1C 00         B    12    				call hexword_or_bust			003646 20 06               B    13    				jr nz,alocok					003648 CD 5B 43 00         B    14    				call hwsc_disable_audio			00364C AF                  B    15    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
00364D C9                  B    16    				ret
00364E ED53 B4 36 00       B    17    alocok			ld (aud_loc),de
003653 ED53 BA 36 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
003658 CD 82 1C 00         B    20    				call hexword_or_bust
00365C 20 04               B    21    				jr nz,gotaudlen
00365E 3E8D                B    22    missaudpar		ld a,8dh						003660 B7                  B    23    				or a
003661 C9                  B    24    				ret				
003662 ED53 B7 36 00       B    25    gotaudlen		ld (aud_len),de
003667 ED53 BD 36 00       B    26    				ld (aud_len_loop),de
                           B    27    				
00366C CD 82 1C 00         B    28    				call hexword_or_bust
003670 28 33               B    29    				jr z,play_sound
003672 7B                  B    30    				ld a,e
003673 32 C0 36 00         B    31    				ld (aud_per),a
003677 7A                  B    32    				ld a,d
003678 32 C1 36 00         B    33    				ld (aud_per+1),a
                           B    34    				
00367C CD 82 1C 00         B    35    				call hexword_or_bust
003680 28 23               B    36    				jr z,play_sound
003682 7B                  B    37    				ld a,e
003683 32 C2 36 00         B    38    				ld (aud_vol),a
                           B    39    				
003687 CD 82 1C 00         B    40    				call hexword_or_bust
00368B 28 18               B    41    				jr z,play_sound
00368D 7B                  B    42    				ld a,e
00368E 32 C3 36 00         B    43    				ld (aud_chans),a
                           B    44    				
003692 CD 82 1C 00         B    45    				call hexword_or_bust
003696 28 0D               B    46    				jr z,play_sound
003698 7B                  B    47    				ld a,e
003699 B7                  B    48    				or a
00369A 20 09               B    49    				jr nz,play_sound
00369C 11010000            B    50    				ld de,1
0036A0 ED53 BD 36 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036A5 21 B4 36 00         B    53    play_sound		ld hl,audio_structure
0036A9 3A C3 36 00         B    54    				ld a,(aud_chans)
0036AD 4F                  B    55    				ld c,a
0036AE CD 0E 43 00         B    56    				call hwsc_play_audio
0036B2 AF                  B    57    				xor a
0036B3 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
0036B4                     B    63    audio_structure
                           B    64    
0036B4 000000              B    65    aud_loc			dw24 0			;loc
0036B7 000000              B    66    aud_len			dw24 0			;len
0036BA 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
0036BD 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
0036C0 FFFF                B    70    aud_per			dw 0ffffh		;per
0036C2 40                  B    71    aud_vol			db 64			;vol
                           B    72    
0036C3 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3108    
0036C4 C9                  A  3109    os_cmd_unused	ret		; <- dummy command, sho
                           A  3110    
                           A  3111    ;----------------------------------------------
                           A  3112    
0036C5                     A  3113    os_get_mem_high
                           A  3114    
0036C5 2A 47 60 00         A  3115    		ld hl,(sysram_os_highest)
0036C9 ED5B 4A 60 00       A  3116    		ld de,(vram_a_os_highest)
0036CE ED4B 4D 60 00       A  3117    		ld bc,(vram_b_os_highest)
0036D3 AF                  A  3118    		xor a
0036D4 C9                  A  3119    		ret
                           A  3120    
                           A  3121    ;----------------------------------------------
                           A  3122    
0036D5                     A  3123    test_amoeba_vers
                           A  3124    
0036D5 CD 4B 40 00         A  3125    				call hwsc_get_version			0036D9 21060100            A  3126    				ld hl,amoeba_version_required-1
0036DD AF                  A  3127    				xor a
0036DE ED52                A  3128    				sbc hl,de
0036E0 D8                  A  3129    				ret c
                           A  3130    				
0036E1 21 5F 56 00         A  3131    				ld hl,hw_warn_txt2
0036E5 11070100            A  3132    				ld de,amoeba_version_required
0036E9 CD 8B 10 00         A  3133    				call hexword_to_ascii
                           A  3134    				
0036ED 21004080            A  3135    				ld hl,vram_a_addr+16384			0036F1 222010FF            A  3136    				ld (bitmap_parameters),hl		0036F5 3600                A  3137    				ld (hl),0
0036F7 E5                  A  3138    				push hl
0036F8 D1                  A  3139    				pop de
0036F9 13                  A  3140    				inc de
0036FA 01002C01            A  3141    				ld bc,320*240
0036FE EDB0                A  3142    				ldir
                           A  3143    					
003700 DD2138D1 80         A  3144    				ld ix,vram_a_addr+16384+(320*11
003705 FD21 4A 56 00       A  3145    				ld iy,hw_warn_txt1				00370A FD7E00              A  3146    nextwchar		ld a,(iy)
00370D B7                  A  3147    				or a
00370E 28 3B               A  3148    				jr z,wmsg_done
003710 21400000            A  3149    				ld hl,64
003714 67                  A  3150    				ld h,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003715 ED6C                A  3151    				mlt hl
003717 11000080            A  3152    				ld de,vram_a_addr
00371B 19                  A  3153    				add hl,de						00371C 0E08                A  3154    				ld c,8
00371E 7E                  A  3155    wpixlp2			ld a,(hl)
00371F 0608                A  3156    				ld b,8
003721 CB17                A  3157    wpixlp1			rl a
003723 30 06               A  3158    				jr nc,nowpix
003725 DD360001            A  3159    				ld (ix),1
003729 18 04               A  3160    				jr wpixd
00372B DD360000            A  3161    nowpix			ld (ix),0
00372F DD23                A  3162    wpixd			inc ix
003731 10 EE               A  3163    				djnz wpixlp1
003733 11380100            A  3164    				ld de,320-8
003737 DD19                A  3165    				add ix,de
003739 11080000            A  3166    				ld de,8
00373D 19                  A  3167    				add hl,de
00373E 0D                  A  3168    				dec c
00373F 20 DD               A  3169    				jr nz,wpixlp2
                           A  3170    				
003741 1108F6FF            A  3171    				ld de,8-(320*8)
003745 DD19                A  3172    				add ix,de
003747 FD23                A  3173    				inc iy
003749 18 BF               A  3174    				jr nextwchar
                           A  3175    
                           A  3176    
00374B CD 85 41 00         A  3177    wmsg_done		call purge_keyboard
00374F CD 4B 3B 00         A  3178    				call set_irq_vector
003753 CD 5D 3B 00         A  3179    				call enable_os_irqs
003757 FB                  A  3180    				ei
                           A  3181    
003758 CD F6 3F 00         A  3182    wmsg_loop		call hwsc_wait_vrt			;	                           A  3183    				
00375C 11CC0C00            A  3184    				ld de,ccch
003760 21 E5 60 00         A  3185    				ld hl,cursorflashtimer
003764 34                  A  3186    				inc (hl)
003765 7E                  A  3187    				ld a,(hl)
003766 E640                A  3188    				and 64
003768 28 04               A  3189    				jr z,got_wcolour
00376A 11000000            A  3190    				ld de,000h
00376E ED530200 FF         A  3191    got_wcolour		ld (hw_palette+2),de
                           A  3192    								
003773 CD FC 43 00         A  3193    				call os_get_key_press
003777 FE76                A  3194    				cp 76h
003779 20 DD               A  3195    				jr nz,wmsg_loop
00377B C3000000            A  3196    				jp 0
                           A  3197    				
                           A  3198    ;----------------------------------------------
                           A  3199    ; Drivers
                           A  3200    ;----------------------------------------------
                           A  3201    
                           B     0    	include		'prose_sdcard_driver.asm'		Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
00377F                     B    49    sd_card_driver				; label of driver c
                           B    50    
00377F C3 93 37 00         B    51    	jp sdc_get_id			; $00 : init / get 
003783 C3 5D 39 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003787 C3 AD 39 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
00378B 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
003793                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
003793 3E01                B    72    				ld a,1							003795 32 E3 3A 00         B    73    				ld (sdc_sdc),a			
                           B    74    
003799 CD 2A 3B 00         B    75    				call sdc_power_off				00379D CD 35 3B 00         B    76    				call sdc_slow_clock				0037A1 CD 03 3B 00         B    77    				call sdc_select_card			                           B    78    
0037A5 11004000            B    79    				ld de,16384						0037A9 CD 66 40 00         B    80    				call hwsc_time_delay
                           B    81    				
0037AD CD 1F 3B 00         B    82    				call sdc_power_on				                           B    83    
0037B1 11830000            B    84    				ld de,131						0037B5 CD 66 40 00         B    85    				call hwsc_time_delay
                           B    86    
0037B9 CD 0E 3B 00         B    87    				call sdc_deselect_card			                           B    88    	
0037BD 060A                B    89    				ld b,10							0037BF CD 9B 3A 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
0037C3 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
0037C5 CD 03 3B 00         B    93    				call sdc_select_card			                           B    94    	
0037C9 3E40                B    95    				ld a,040h						0037CB 01009500            B    96    				ld bc,09500h					0037CF 11000000            B    97    				ld de,00000h
0037D3 CD 49 3A 00         B    98    				call sdc_send_command		 
0037D7 CD F4 3A 00         B    99    				call sdc_get_byte				0037DB CD 6E 3A 00         B   100    				call sdc_wait_ncr				0037DF EE01                B   101    				xor 01h							0037E1 C2 A2 3A 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0037E5 01401F00            B   105    				ld bc,8000						0037E9 C5                  B   106    sdc_iwl			push bc							0037EA 3E77                B   107    				ld a,077h						0037EC CD 41 3A 00         B   108    				call sdc_send_command_null_args
0037F0 CD F4 3A 00         B   109    				call sdc_get_byte				0037F4 CD F4 3A 00         B   110    				call sdc_get_byte				0037F8 3E69                B   111    				ld a,069h						0037FA CD 41 3A 00         B   112    				call sdc_send_command_null_args
0037FE CD F4 3A 00         B   113    				call sdc_get_byte
003802 C1                  B   114    				pop bc
003803 CD 6E 3A 00         B   115    				call sdc_wait_ncr				003807 CB57                B   116    				bit 2,a							003809 20 0C               B   117    				jr nz,mmc_init			
00380B B7                  B   118    				or a
00380C 28 2A               B   119    				jr z,sdc_init_done				00380E 0B                  B   120    				dec bc
00380F 78                  B   121    				ld a,b
003810 B1                  B   122    				or c
003811 20 D6               B   123    				jr nz,sdc_iwl
003813 C3 B0 3A 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
003817 AF                  B   127    mmc_init		xor a							003818 32 E3 3A 00         B   128    				ld (sdc_sdc),a
00381C 01401F00            B   129    				ld bc,8000						003820 C5                  B   130    mmc_iwl			push bc
003821 3E41                B   131    				ld a,041h						003823 CD 41 3A 00         B   132    				call sdc_send_command_null_args
003827 C1                  B   133    				pop bc
003828 CD 6E 3A 00         B   134    				call sdc_wait_ncr				00382C B7                  B   135    				or a							00382D 28 09               B   136    				jr z,sdc_init_done
00382F 0B                  B   137    				dec bc
003830 78                  B   138    				ld a,b
003831 B1                  B   139    				or c
003832 20 EC               B   140    				jr nz,mmc_iwl
003834 C3 AC 3A 00         B   141    				jp mmc_init_fail
                           B   142    
003838                     B   143    sdc_init_done
                           B   144    
003838 3E49                B   145    				ld a,049h						00383A CD 41 3A 00         B   146    				call sdc_send_command_null_args
00383E CD 6E 3A 00         B   147    				call sdc_wait_ncr				003842 B7                  B   148    				or a							003843 C2 B4 3A 00         B   149    				jp nz,sdc_id_fail
003847 CD 82 3A 00         B   150    				call sdc_wait_data_token		00384B B7                  B   151    				or a
00384C C2 B4 3A 00         B   152    				jp nz,sdc_id_fail
003850 21 32 66 00         B   153    				ld hl,sector_buffer				003854 CD 4A 39 00         B   154    				call sdc_read_id_bytes	
                           B   155    
003858 3E4A                B   156    				ld a,04ah						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00385A CD 41 3A 00         B   157    				call sdc_send_command_null_args
00385E CD 6E 3A 00         B   158    				call sdc_wait_ncr				003862 B7                  B   159    				or a							003863 C2 B4 3A 00         B   160    				jp nz,sdc_id_fail
003867 CD 82 3A 00         B   161    				call sdc_wait_data_token		00386B B7                  B   162    				or a
00386C C2 B4 3A 00         B   163    				jp nz,sdc_id_fail
003870 21 42 66 00         B   164    				ld hl,sector_buffer+16			003874 CD 4A 39 00         B   165    				call sdc_read_id_bytes
003878 CD 0E 3B 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
00387C                     B   169    sdc_quit	
                           B   170    
00387C 21 45 66 00         B   171    				ld hl,sector_buffer+013h		003880 11 52 66 00         B   172    				ld de,sector_buffer+020h
003884 01050000            B   173    				ld bc,5
003888 3A E3 3A 00         B   174    				ld a,(sdc_sdc)
00388C B7                  B   175    				or a
00388D 20 01               B   176    				jr nz,sdc_cn5
00388F 03                  B   177    				inc bc
003890 EDB0                B   178    sdc_cn5			ldir
003892 E5                  B   179    				push hl
003893 D5                  B   180    				push de
003894 21 C8 3A 00         B   181    				ld hl,sdc_vnchars
003898 011A0000            B   182    				ld bc,26
00389C EDB0                B   183    				ldir
00389E D1                  B   184    				pop de
00389F E1                  B   185    				pop hl
0038A0 13                  B   186    				inc de
0038A1 13                  B   187    				inc de
0038A2 7E                  B   188    				ld a,(hl)
0038A3 CB3F                B   189    				srl a
0038A5 CB3F                B   190    				srl a
0038A7 CB3F                B   191    				srl a
0038A9 CB3F                B   192    				srl a
0038AB C630                B   193    				add a,030h						0038AD 12                  B   194    				ld (de),a
0038AE 13                  B   195    				inc de
0038AF 13                  B   196    				inc de
0038B0 7E                  B   197    				ld a,(hl)
0038B1 E60F                B   198    				and 0fh
0038B3 C630                B   199    				add a,030h
0038B5 12                  B   200    				ld (de),a						0038B6 13                  B   201    				inc de
0038B7 13                  B   202    				inc de
0038B8 13                  B   203    				inc de
0038B9 13                  B   204    				inc de
0038BA 13                  B   205    				inc de
0038BB 23                  B   206    				inc hl
0038BC 0604                B   207    				ld b,4
0038BE 7E                  B   208    sdc_snulp		ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0038BF CB3F                B   209    				srl a
0038C1 CB3F                B   210    				srl a
0038C3 CB3F                B   211    				srl a
0038C5 CB3F                B   212    				srl a
0038C7 C630                B   213    				add a,030h
0038C9 FE3A                B   214    				cp 03ah
0038CB 38 02               B   215    				jr c,sdc_hvl1
0038CD C607                B   216    				add a,07h
0038CF 12                  B   217    sdc_hvl1		ld (de),a
0038D0 13                  B   218    				inc de
0038D1 7E                  B   219    				ld a,(hl)
0038D2 E60F                B   220    				and 0fh
0038D4 C630                B   221    				add a,030h
0038D6 FE3A                B   222    				cp 03ah
0038D8 38 02               B   223    				jr c,sdc_hvl2
0038DA C607                B   224    				add a,07h
0038DC 12                  B   225    sdc_hvl2		ld (de),a
0038DD 13                  B   226    				inc de
0038DE 23                  B   227    				inc hl
0038DF 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
0038E1 DD21 32 66 00       B   232    				ld ix,sector_buffer				0038E6 DD7E06              B   233    				ld a,(ix+6)
0038E9 E603                B   234    				and 00000011b
0038EB 57                  B   235    				ld d,a
0038EC DD5E07              B   236    				ld e,(ix+7)
0038EF DD7E08              B   237    				ld a,(ix+8)
0038F2 E6C0                B   238    				and 11000000b
0038F4 CB27                B   239    				sla a
0038F6 CB13                B   240    				rl e
0038F8 CB12                B   241    				rl d
0038FA CB27                B   242    				sla a
0038FC CB13                B   243    				rl e
0038FE CB12                B   244    				rl d							                           B   245    	
003900 DD7E09              B   246    				ld a,(ix+9)
003903 E603                B   247    				and 00000011b
003905 47                  B   248    				ld b,a
003906 DD7E0A              B   249    				ld a,(ix+10)
003909 E680                B   250    				and 10000000b
00390B CB27                B   251    				sla a
00390D CB10                B   252    				rl b							                           B   253    	
00390F 04                  B   254    				inc b
003910 04                  B   255    				inc b
003911 21000000            B   256    				ld hl,0
003915 CB23                B   257    sdc_cmsh		sla e
003917 CB12                B   258    				rl d
003919 CB15                B   259    				rl l
00391B CB14                B   260    				rl h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00391D 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
00391F DD7E05              B   263    				ld a,(ix+5)
003922 E60F                B   264    				and 00001111b					003924 28 17               B   265    				jr z,sdc_nbls
003926 47                  B   266    				ld b,a
003927 CB23                B   267    sdc_blsh		sla e
003929 CB12                B   268    				rl d
00392B CB15                B   269    				rl l
00392D CB14                B   270    				rl h
00392F 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
003931 0609                B   273    				ld b,9							003933 CB3C                B   274    sdc_cbsec		srl h
003935 CB1D                B   275    				rr l
003937 CB1A                B   276    				rr d
003939 CB1B                B   277    				rr e
00393B 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
00393D E5                  B   280    sdc_nbls		push hl
00393E C1                  B   281    				pop bc							00393F 21 52 66 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
003943 CD 40 3B 00         B   284    				call sdc_fast_clock				003947 AF                  B   285    				xor a
003948 37                  B   286    				scf
003949 C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
00394A                     B   292    sdc_read_id_bytes
                           B   293    
00394A 0610                B   294    				ld b,16
00394C CD F4 3A 00         B   295    sdc_csdlp		call sdc_get_byte
003950 77                  B   296    				ld (hl),a
003951 23                  B   297    				inc hl
003952 10 F8               B   298    				djnz sdc_csdlp
003954 CD F4 3A 00         B   299    				call sdc_get_byte				003958 CD F4 3A 00         B   300    				call sdc_get_byte				00395C C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
00395D                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
00395D CD 03 3B 00         B   310    				call sdc_select_card
                           B   311    
003961 21 DE 60 00         B   312    				ld hl,sector_lba0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003965 5E                  B   313    				ld e,(hl)						003966 23                  B   314    				inc hl
003967 56                  B   315    				ld d,(hl)
003968 23                  B   316    				inc hl
003969 4E                  B   317    				ld c,(hl)
00396A CB23                B   318    				sla e							00396C CB12                B   319    				rl d
00396E CB11                B   320    				rl c
003970 3E51                B   321    				ld a,051h						003972 0601                B   322    				ld b,001h						003974 CD 49 3A 00         B   323    				call sdc_send_command		
003978 CD 6E 3A 00         B   324    				call sdc_wait_ncr				00397C B7                  B   325    				or a							00397D C2 B8 3A 00         B   326    				jp nz,sdc_bcr_error			
003981 CD 82 3A 00         B   327    				call sdc_wait_data_token		003985 B7                  B   328    				or a
003986 C2 BC 3A 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
00398A 21 32 66 00         B   331    				ld hl,sector_buffer				00398E 0600                B   332    				ld b,0
003990 CD F4 3A 00         B   333    sdc_rslp		call sdc_get_byte
003994 77                  B   334    				ld (hl),a
003995 23                  B   335    				inc hl
003996 CD F4 3A 00         B   336    				call sdc_get_byte
00399A 77                  B   337    				ld (hl),a
00399B 23                  B   338    				inc hl
00399C 10 F2               B   339    				djnz sdc_rslp
00399E CD F4 3A 00         B   340    				call sdc_get_byte				0039A2 CD F4 3A 00         B   341    				call sdc_get_byte				                           B   342    
0039A6 CD 0E 3B 00         B   343    				call sdc_deselect_card
0039AA AF                  B   344    				xor a
0039AB 37                  B   345    				scf
0039AC C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
0039AD                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
0039AD CD 03 3B 00         B   354    				call sdc_select_card
                           B   355    
0039B1 21 DE 60 00         B   356    				ld hl,sector_lba0
0039B5 5E                  B   357    				ld e,(hl)						0039B6 23                  B   358    				inc hl
0039B7 56                  B   359    				ld d,(hl)
0039B8 23                  B   360    				inc hl
0039B9 4E                  B   361    				ld c,(hl)
0039BA CB23                B   362    				sla e							0039BC CB12                B   363    				rl d
0039BE CB11                B   364    				rl c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0039C0 3E58                B   365    				ld a,058h						0039C2 0601                B   366    				ld b,001h						0039C4 CD 49 3A 00         B   367    				call sdc_send_command		
0039C8 CD 6E 3A 00         B   368    				call sdc_wait_ncr				0039CC B7                  B   369    				or a							0039CD C2 B8 3A 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
0039D1 CD 9B 3A 00         B   372    				call sdc_send_eight_clocks		                           B   373    
0039D5 3EFE                B   374    				ld a,0feh
0039D7 CD E4 3A 00         B   375    				call sdc_send_byte				                           B   376    
0039DB 21 32 66 00         B   377    				ld hl,sector_buffer				0039DF 0600                B   378    				ld b,0
0039E1 7E                  B   379    sdc_wslp		ld a,(hl)
0039E2 CD E4 3A 00         B   380    				call sdc_send_byte
0039E6 23                  B   381    				inc hl
0039E7 7E                  B   382    				ld a,(hl)
0039E8 CD E4 3A 00         B   383    				call sdc_send_byte
0039EC 23                  B   384    				inc hl
0039ED 10 F2               B   385    				djnz sdc_wslp
                           B   386    
0039EF CD 9B 3A 00         B   387    				call sdc_send_eight_clocks		0039F3 CD 9B 3A 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
0039F7 CD F4 3A 00         B   390    				call sdc_get_byte				0039FB E61F                B   391    				and 01fh
0039FD CB3F                B   392    				srl a
0039FF FE02                B   393    				cp 002h
003A01 C2 C0 3A 00         B   394    				jp nz,sdc_write_fail
                           B   395    
003A05 0150C300            B   396    				ld bc,50000						003A09 CD F4 3A 00         B   397    sdc_wcbsy		call sdc_get_byte				003A0D FEFF                B   398    				cp 0ffh
003A0F 28 09               B   399    				jr z,sdc_nbusy
003A11 0B                  B   400    				dec bc
003A12 78                  B   401    				ld a,b
003A13 B1                  B   402    				or c
003A14 20 F3               B   403    				jr nz,sdc_wcbsy
003A16 C3 C4 3A 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
003A1A 3E4D                B   406    sdc_nbusy		ld a,04dh						003A1C 01000100            B   407    				ld bc,0100h			
003A20 11000000            B   408    				ld de,0000h
003A24 CD 49 3A 00         B   409    				call sdc_send_command
003A28 CD 6E 3A 00         B   410    				call sdc_wait_ncr				003A2C B7                  B   411    				or a							003A2D C2 C0 3A 00         B   412    				jp nz,sdc_write_fail
003A31 CD F4 3A 00         B   413    				call sdc_get_byte				003A35 B7                  B   414    				or a							003A36 C2 C0 3A 00         B   415    				jp nz,sdc_write_fail		
003A3A CD 0E 3B 00         B   416    				call sdc_deselect_card			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003A3E AF                  B   417    				xor a
003A3F 37                  B   418    				scf
003A40 C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
003A41                     B   423    sdc_send_command_null_args
                           B   424    
003A41 01000100            B   425    				ld bc,0100h				
003A45 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
003A49                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
003A49 F5                  B   433    				push af				
003A4A CD 9B 3A 00         B   434    				call sdc_send_eight_clocks		003A4E F1                  B   435    				pop af
                           B   436    
003A4F CD E4 3A 00         B   437    				call sdc_send_byte				003A53 79                  B   438    				ld a,c							003A54 CD E4 3A 00         B   439    				call sdc_send_byte
003A58 7A                  B   440    				ld a,d
003A59 CD E4 3A 00         B   441    				call sdc_send_byte
003A5D 7B                  B   442    				ld a,e
003A5E CD E4 3A 00         B   443    				call sdc_send_byte
003A62 3E00                B   444    				ld a,0
003A64 CD E4 3A 00         B   445    				call sdc_send_byte
003A68 78                  B   446    				ld a,b							003A69 CD E4 3A 00         B   447    				call sdc_send_byte
003A6D C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
003A6E                     B   452    sdc_wait_ncr
                           B   453    	
003A6E C5                  B   454    				push bc
003A6F 01000000            B   455    				ld bc,0
003A73 CD F4 3A 00         B   456    sdc_wncrl		call sdc_get_byte				003A77 CB7F                B   457    				bit 7,a							003A79 28 05               B   458    				jr z,sdc_gcr
003A7B 0B                  B   459    				dec bc
003A7C 78                  B   460    			 	ld a,b
003A7D B1                  B   461    				or c
003A7E 20 F3               B   462    				jr nz,sdc_wncrl
003A80 C1                  B   463    sdc_gcr			pop bc
003A81 C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
003A82                     B   468    sdc_wait_data_token
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   469    
003A82 C5                  B   470    				push bc
003A83 01000000            B   471    				ld bc,0
003A87 CD F4 3A 00         B   472    sdc_wdt			call sdc_get_byte				003A8B FEFE                B   473    				cp 0feh
003A8D 28 09               B   474    				jr z,sdc_gdt
003A8F 0B                  B   475    				dec bc
003A90 78                  B   476    			 	ld a,b
003A91 B1                  B   477    				or c
003A92 20 F3               B   478    				jr nz,sdc_wdt
003A94 C1                  B   479    				pop bc
003A95 3E01                B   480    				ld a,1							003A97 C9                  B   481    				ret
                           B   482    
003A98 C1                  B   483    sdc_gdt			pop bc
003A99 AF                  B   484    				xor a							003A9A C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
003A9B                     B   489    sdc_send_eight_clocks
                           B   490    
003A9B 3EFF                B   491    				ld a,0ffh
003A9D CD E4 3A 00         B   492    				call sdc_send_byte
003AA1 C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
003AA2                     B   497    init_spi_mode_fail	
                           B   498    
003AA2 3E00                B   499    				ld a,sdc_error_spi_mode_failed
003AA4 F5                  B   500    fail_ret		push af
003AA5 CD 0E 3B 00         B   501    				call sdc_deselect_card
003AA9 F1                  B   502    				pop af
003AAA B7                  B   503    				or a
003AAB C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
003AAC                     B   508    mmc_init_fail
                           B   509    
003AAC 3E01                B   510    				ld a,sdc_error_bad_init_mmc
003AAE 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
003AB0                     B   515    sdc_init_fail
                           B   516    
003AB0 3E02                B   517    				ld a,sdc_error_bad_init
003AB2 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   521    ;----------------------------------------------
                           B   522    
003AB4                     B   523    sdc_id_fail
                           B   524    
003AB4 3E03                B   525    				ld a,sdc_error_bad_id
003AB6 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
003AB8                     B   530    sdc_bcr_error
                           B   531    
003AB8 3E04                B   532    				ld a,sdc_error_bad_command_resp
003ABA 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
003ABC                     B   537    sdc_dt_timeout
                           B   538    
003ABC 3E05                B   539    				ld a,sdc_error_data_token_timeo
003ABE 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003AC0                     B   544    sdc_write_fail
                           B   545    	
003AC0 3E07                B   546    				ld a,sdc_error_write_failed
003AC2 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
003AC4                     B   551    sdc_card_busy_timeout
                           B   552    
003AC4 3E06                B   553    				ld a,sdc_error_write_timeout
003AC6 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
003AC8 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
003AD0 3A303030 30303030 
003AD8 30202020 20202000 
003AE0 000000 
                           B   559    
003AE3 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C     3    ;----------------------------------------------
                           C     4    
003AE4                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003AE4 C5                  C     9    					push bc
003AE5 01030000            C    10    					ld bc,port_sdc_data
003AE9 ED79                C    11    					out (bc),a					                           C    12    	
003AEB 0E01                C    13    					ld c,port_hw_flags			003AED ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
003AF0 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
003AF2 C1                  C    17    					pop bc
003AF3 C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
003AF4                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
003AF4 3EFF                C    26    					ld a,0ffh
003AF6 CD E4 3A 00         C    27    					call sdc_send_byte
003AFA C5                  C    28    					push bc
003AFB 01030000            C    29    					ld bc,port_sdc_data
003AFF ED78                C    30    					in a,(bc)					003B01 C1                  C    31    					pop bc
003B02 C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
003B03                     C    36    sdc_select_card
                           C    37    	
003B03 C5                  C    38    					push bc
003B04 01020000            C    39    					ld bc,port_sdc_ctrl
003B08 3E02                C    40    					ld a,1<<sdc_cs				003B0A ED79                C    41    					out (bc),a
003B0C C1                  C    42    					pop bc
003B0D C9                  C    43    					ret
                           C    44    
                           C    45    
003B0E                     C    46    sdc_deselect_card
                           C    47    
003B0E C5                  C    48    					push bc
003B0F 01020000            C    49    					ld bc,port_sdc_ctrl
003B13 3E82                C    50    					ld a,080h+(1<<sdc_cs)		003B15 ED79                C    51    					out (bc),a
003B17 C1                  C    52    					pop bc
                           C    53    				
003B18 3EFF                C    54    					ld a,0ffh					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003B1A CD E4 3A 00         C    55    					call sdc_send_byte
003B1E C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
003B1F                     C    60    sdc_power_on
                           C    61    
003B1F C5                  C    62    					push bc
003B20 01020000            C    63    					ld bc,port_sdc_ctrl
003B24 3E81                C    64    					ld a,80h+(1<<sdc_power)		003B26 ED79                C    65    					out (bc),a
003B28 C1                  C    66    					pop bc
003B29 C9                  C    67    					ret
                           C    68    	
                           C    69    
003B2A                     C    70    sdc_power_off
                           C    71    	
003B2A C5                  C    72    					push bc						003B2B 01020000            C    73    					ld bc,port_sdc_ctrl
003B2F 3E01                C    74    					ld a,1<<sdc_power			003B31 ED79                C    75    					out (bc),a					003B33 C1                  C    76    					pop bc						003B34 C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
003B35                     C    82    sdc_slow_clock
                           C    83    
003B35 C5                  C    84    					push bc
003B36 01020000            C    85    					ld bc,port_sdc_ctrl
003B3A 3E04                C    86    					ld a,1<<sdc_speed			003B3C ED79                C    87    					out (bc),a
003B3E C1                  C    88    					pop bc
003B3F C9                  C    89    					ret
                           C    90    
                           C    91    
003B40                     C    92    sdc_fast_clock
                           C    93    	
003B40 C5                  C    94    					push bc
003B41 01020000            C    95    					ld bc,port_sdc_ctrl
003B45 3E84                C    96    					ld a,080h+(1<<sdc_speed)	003B47 ED79                C    97    					out (bc),a
003B49 C1                  C    98    					pop bc
003B4A C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3203    
                           A  3204    
                           A  3205    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3206    ; IO routines
                           A  3207    ;----------------------------------------------
                           A  3208    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003B4B                     B     5    set_irq_vector
                           B     6    
003B4B AF                  B     7    				xor a
003B4C ED47                B     8    				ld i,a
003B4E 3EC3                B     9    				ld a,c3h						003B50 32320000            B    10    				ld (032h),a	
003B54 21 86 3B 00         B    11    				ld hl,int_routine				003B58 22330000            B    12    				ld (033h),hl
003B5C C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003B5D 21 46 60 00         B    17    enable_os_irqs	ld hl,devices_connected			003B61 CB46                B    18    				bit 0,(hl)
003B63 C4 6E 3B 00         B    19    				call nz,enable_kb_irq
003B67 CB4E                B    20    				bit 1,(hl)
003B69 C4 74 3B 00         B    21    				call nz,enable_ms_irq
003B6D C9                  B    22    				ret
                           B    23    
                           B    24    
003B6E 3E81                B    25    enable_kb_irq	ld a,10000001b
003B70 ED3905              B    26    				out0 (port_irq_ctrl),a			003B73 C9                  B    27    				ret
                           B    28    
003B74 3E82                B    29    enable_ms_irq	ld a,10000010b
003B76 ED3905              B    30    				out0 (port_irq_ctrl),a			003B79 C9                  B    31    				ret
                           B    32    
003B7A 3E02                B    33    disable_ms_irq	ld a,00000010b
003B7C ED3905              B    34    				out0 (port_irq_ctrl),a			003B7F C9                  B    35    				ret
                           B    36    
003B80 3E3F                B    37    disable_irqs	ld a,00111111b
003B82 ED3905              B    38    				out0 (port_irq_ctrl),a			003B85 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003B86                     B    44    int_routine
003B86 F5                  B    45    				push af							003B87 ED3807              B    46    				in0 a,(port_ps2_ctrl)			003B8A CB67                B    47    				bit 4,a
003B8C C4 9E 3B 00         B    48    				call nz,kb_interrupt_handler
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003B90 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003B93 CB6F                B    50    				bit 5,a
003B95 C4 40 3C 00         B    51    				call nz,ms_interrupt_handler
003B99 F1                  B    52    				pop af
                           B    53    
003B9A FB                  B    54    				ei								003B9B 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003B9E                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003B9E E5                  B    77    				push hl							003B9F C5                  B    78    				push bc
                           B    79    				
003BA0 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003BA3 47                  B    81    				ld b,a
                           B    82    
003BA4 3A 14 62 00         B    83    				ld a,(key_release_mode)
003BA8 B7                  B    84    				or a
003BA9 28 20               B    85    				jr z,key_pressed
                           B    86    			
003BAB 78                  B    87    				ld a,b							003BAC FEE0                B    88    				cp 0e0h							003BAE 28 61               B    89    				jr z,kirq_done	
003BB0 FEE1                B    90    				cp 0e1h
003BB2 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003BB4 CD 1B 3C 00         B    93    				call qualifiers					003BB8 7D                  B    94    				ld a,l
003BB9 2F                  B    95    				cpl
003BBA 6F                  B    96    				ld l,a
003BBB 3A 16 62 00         B    97    				ld a,(key_mod_flags)
003BBF A5                  B    98    				and l							003BC0 32 16 62 00         B    99    				ld (key_mod_flags),a
003BC4 AF                  B   100    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BC5 32 14 62 00         B   101    				ld (key_release_mode),a
003BC9 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003BCB 78                  B   105    key_pressed		ld a,b							003BCC FEE0                B   106    				cp 0e0h							003BCE 28 41               B   107    				jr z,kirq_done	
003BD0 FEE1                B   108    				cp 0e1h
003BD2 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003BD4 FEF0                B   111    				cp 0f0h							003BD6 20 08               B   112    				jr nz,not_krel
003BD8 3E01                B   113    				ld a,1							003BDA 32 14 62 00         B   114    				ld (key_release_mode),a			003BDE 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003BE0 CD 1B 3C 00         B   118    not_krel		call qualifiers					003BE4 3A 16 62 00         B   119    				ld a,(key_mod_flags)			003BE8 B5                  B   120    				or l
003BE9 32 16 62 00         B   121    				ld (key_mod_flags),a			003BED 68                  B   122    				ld l,b
003BEE 01000000            B   123    				ld bc,0
003BF2 3A 12 62 00         B   124    				ld a,(key_buf_wr_idx)
003BF6 4F                  B   125    				ld c,a
003BF7 7D                  B   126    				ld a,l
003BF8 21 F2 61 00         B   127    				ld hl,scancode_buffer
003BFC 09                  B   128    				add hl,bc
003BFD 77                  B   129    				ld (hl),a						003BFE 0E10                B   130    				ld c,16
003C00 09                  B   131    				add hl,bc
003C01 3A 16 62 00         B   132    				ld a,(key_mod_flags)			003C05 77                  B   133    				ld (hl),a	
003C06 3A 12 62 00         B   134    				ld a,(key_buf_wr_idx)
003C0A 3C                  B   135    				inc a
003C0B E60F                B   136    				and 15
003C0D 32 12 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003C11 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003C14 CB67                B   140    				bit 4,a	
003C16 20 88               B   141    				jr nz,key_loop
                           B   142    
003C18 C1                  B   143    				pop bc
003C19 E1                  B   144    				pop hl
003C1A C9                  B   145    				ret
                           B   146    
                           B   147    
003C1B 2E40                B   148    qualifiers		ld l,040h		;apps
003C1D FE2F                B   149    				cp 02fh
003C1F C8                  B   150    				ret z
                           B   151    			
003C20 2E20                B   152    				ld l,020h		;r gui
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C22 FE27                B   153    				cp 027h
003C24 C8                  B   154    				ret z
                           B   155    			
003C25 2E10                B   156    				ld l,010h		;r shift
003C27 FE59                B   157    				cp 059h
003C29 C8                  B   158    				ret z
                           B   159    			
003C2A 2E08                B   160    				ld l,08h		; alt
003C2C FE11                B   161    				cp 011h
003C2E C8                  B   162    				ret z
                           B   163    			
003C2F 2E04                B   164    				ld l,04h		; l gui
003C31 FE1F                B   165    				cp 01fh
                           B   166    			
003C33 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003C35 FE14                B   168    				cp 14h
003C37 C8                  B   169    				ret z
                           B   170    			
003C38 2E01                B   171    				ld l,01h		;l shift
003C3A FE12                B   172    				cp 12h
003C3C C8                  B   173    				ret z
                           B   174    				
003C3D 2E00                B   175    				ld l,0
003C3F C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003C40                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003C40 C5                  B   198    				push bc							003C41 D5                  B   199    				push de							003C42 E5                  B   200    				push hl							                           B   201    							
003C43 11000000            B   202    ms_loop			ld de,0		
003C47 3A 1F 62 00         B   203    				ld a,(mouse_packet_index)		003C4B 5F                  B   204    				ld e,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C4C 21 1B 62 00         B   205    				ld hl,mouse_packet	
003C50 19                  B   206    				add hl,de
003C51 ED3806              B   207    				in0 a,(port_mouse_data)
003C54 77                  B   208    				ld (hl),a
                           B   209    								
003C55 21 1A 62 00         B   210    				ld hl,mouse_packet_size
003C59 1C                  B   211    				inc e							003C5A 7B                  B   212    				ld a,e
003C5B BE                  B   213    				cp (hl)
003C5C 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003C5E 3A 1B 62 00         B   216    				ld a,(mouse_packet)				003C62 4F                  B   217    				ld c,a	
003C63 E607                B   218    				and 0111b
003C65 32 20 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003C69 11000000            B   221    				ld de,0							003C6D CB61                B   222    				bit 4,c
003C6F 28 01               B   223    				jr z,mxsignpos
003C71 1B                  B   224    				dec de
003C72 3A 1C 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003C76 5F                  B   226    				ld e,a
003C77 2A 21 62 00         B   227    				ld hl,(mouse_disp_x)
003C7B 19                  B   228    				add hl,de
003C7C 22 21 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003C80 11000000            B   231    				ld de,0							003C84 CB69                B   232    				bit 5,c
003C86 28 01               B   233    				jr z,mysignpos
003C88 1B                  B   234    				dec de
003C89 3A 1D 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003C8D 5F                  B   236    				ld e,a
003C8E 2A 24 62 00         B   237    				ld hl,(mouse_disp_y)			003C92 AF                  B   238    				xor a							003C93 ED52                B   239    				sbc hl,de
003C95 22 24 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003C99 21 1E 62 00         B   242    				ld hl,mouse_packet+3			003C9D 3A 27 62 00         B   243    				ld a,(mouse_wheel)
003CA1 86                  B   244    				add a,(hl)
003CA2 32 27 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003CA6 3E01                B   247    				ld a,1
003CA8 32 28 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003CAC AF                  B   250    				xor a
003CAD 32 1F 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003CB1 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003CB4 CB6F                B   254    				bit 5,a
003CB6 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003CB8 E1                  B   257    				pop hl
003CB9 D1                  B   258    				pop de
003CBA C1                  B   259    				pop bc
003CBB C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.03
                           B   264    ;----------------------------------------------
                           B   265    
003CBC F5                  B   266    nmi_routine		push af							003CBD ED3805              B   267    				in0 a,(port_irq_flags)			003CC0 CB77                B   268    				bit 6,a							003CC2 20 09               B   269    				jr nz,freeze
003CC4 3E20                B   270    				ld a,00100000b					003CC6 ED3909              B   271    				out0 (port_clear_flags),a		003CC9 F1                  B   272    				pop af
003CCA 5BED45              B   273    				retn.l
                           B   274    				
003CCD F1                  B   275    freeze			pop af
003CCE CD 3C 13 00         B   276    				call os_store_CPU_regs
                           B   277    				
003CD2 21000000            B   278    				ld hl,0
003CD6 39                  B   279    				add hl,sp
003CD7 7E                  B   280    				ld a,(hl)						003CD8 E601                B   281    				and 1
003CDA 32 77 60 00         B   282    				ld (store_adl),a
003CDE 20 0A               B   283    				jr nz,adl_freeze
003CE0 23                  B   284    				inc hl
003CE1 5E                  B   285    				ld e,(hl)						003CE2 23                  B   286    				inc hl
003CE3 56                  B   287    				ld d,(hl)
003CE4 CD BF 15 00         B   288    				call mbase_de
003CE8 18 02               B   289    				jr got_pc
                           B   290    				
003CEA 33                  B   291    adl_freeze		inc sp
003CEB D1                  B   292    				pop de							003CEC ED53 6D 60 00       B   293    got_pc			ld (store_pc),de				                           B   294    				
003CF1 CD 1E 3D 00         B   295    				call disable_button_nmi
003CF5 3E40                B   296    				ld a,01000000b
003CF7 ED3909              B   297    				out0 (port_clear_flags),a		003CFA 3E01                B   298    				ld a,1
003CFC 32 44 60 00         B   299    				ld (frozen),a
003D00 C3 56 0A 00         B   300    				jp os_cold_start				                           B   301    
                           B   302    ;----------------------------------------------
                           B   303    
                           B   304    ;nmi_routine
                           B   305    ;
                           B   306    ;				push af							                           B   307    ;				push bc
                           B   308    ;				ld a,0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   309    ;				ld (hw_palette),a
                           B   310    ;				ld b,0
                           B   311    ;nmi_testlp2		djnz nmi_testlp2
                           B   312    ;				ld a,0
                           B   313    ;				ld (hw_palette),a
                           B   314    ;				pop bc
                           B   315    ;				ld a,01100000b
                           B   316    ;				out0 (port_clear_flags)
                           B   317    ;				pop af
                           B   318    ;				retn.l							                           B   319    
                           B   320    ;----------------------------------------------
                           B   321    
003D04                     B   322    set_nmi_vector
                           B   323    
003D04 3EC3                B   324    				ld a,0c3h						003D06 32660000            B   325    				ld (066h),a
003D0A 21 BC 3C 00         B   326    				ld hl,nmi_routine				003D0E 22670000            B   327    				ld (067h),hl
003D12 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
003D13                     B   332    enable_button_nmi
                           B   333    
003D13 3E40                B   334    				ld a,01000000b
003D15 ED3909              B   335    				out0 (port_clear_flags),a		003D18 3EC0                B   336    				ld a,11000000b					003D1A ED3905              B   337    				out0 (port_irq_ctrl),a			003D1D C9                  B   338    				ret
                           B   339    
                           B   340    
003D1E                     B   341    disable_button_nmi
                           B   342    
003D1E 3E40                B   343    				ld a,01000000b					003D20 ED3905              B   344    				out0 (port_irq_ctrl),a
003D23 C9                  B   345    				ret
                           B   346    
                           B   347    
003D24                     B   348    disable_all_nmis
                           B   349    
003D24 3E60                B   350    				ld a,01100000b					003D26 ED3905              B   351    				out0 (port_irq_ctrl),a
003D29 C9                  B   352    				ret
                           B   353    				
                           B   354    ;----------------------------------------------
                           B   355    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003D2A                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003D2A C5                  B    10    				push bc
003D2B 3A D1 5E 00         B    11    				ld a,(serial_timeout)
003D2F 47                  B    12    				ld b,a
003D30 3ECC                B    13    rx_set_timer	ld a,cch
003D32 ED3981              B    14    				out0 (TMR0_RR_L),a				003D35 3E0C                B    15    				ld a,0ch
003D37 ED3982              B    16    				out0 (TMR0_RR_H),a				003D3A 3E03                B    17    				ld a,00000011b					003D3C ED3980              B    18    				out0 (TMR0_CTL),a				003D3F ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003D42 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003D44 ED7401              B    22    				tstio 1							003D47 20 0E               B    23    				jr nz,rx_in_buffer
003D49 AF                  B    24    				xor a
003D4A B0                  B    25    				or b
003D4B 28 13               B    26    				jr z,rx_time_out
003D4D 0E80                B    27    				ld c,TMR0_CTL	
003D4F ED7480              B    28    				tstio 128						003D52 28 EE               B    29    				jr z,rx_byte_lp		
003D54 05                  B    30    				dec b
003D55 18 D9               B    31    				jr rx_set_timer
                           B    32    
003D57 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003D5B ED78                B    34    				in a,(bc)						003D5D C1                  B    35    				pop bc
003D5E BF                  B    36    				cp a							003D5F C9                  B    37    				ret
                           B    38    
003D60 C1                  B    39    rx_time_out		pop bc
003D61 3E83                B    40    				ld a,083h						003D63 B7                  B    41    				or a							003D64 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003D65                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003D65 C5                  B    52    				push bc
003D66 0EC5                B    53    				ld c,UART0_LSR					003D68 ED7420              B    54    rs232_swait		tstio 020h						003D6B 28 FB               B    55    				jr z,rs232_swait
003D6D 01C00000            B    56    				ld bc,UART0_THR
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003D71 ED79                B    57    				out (c),a						003D73 C1                  B    58    				pop bc
003D74 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003D75                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003D75 7A                  B    68    				ld a,d
003D76 CD 65 3D 00         B    69    				call send_serial_byte
003D7A 7B                  B    70    				ld a,e
003D7B CD 65 3D 00         B    71    				call send_serial_byte
003D7F C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003D80                     B    76    hwsc_flush_serial_buffer
                           B    77    
003D80 C5                  B    78    				push bc
003D81 01C00000            B    79    				ld bc,UART0_RBR
003D85 ED78                B    80    				in a,(bc)						003D87 C1                  B    81    				pop bc
003D88 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003D89                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003D89 E603                B    15    				and 3
003D8B 32 A2 5E 00         B    16    				ld (video_doubling),a
003D8F 79                  B    17    				ld a,c
003D90 32 A3 5E 00         B    18    				ld (charmap_rows),a
003D94 78                  B    19    				ld a,b
003D95 32 A6 5E 00         B    20    				ld (charmap_columns),a
003D99 21000000            B    21    				ld hl,0
003D9D 69                  B    22    				ld l,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D9E 60                  B    23    				ld h,b
003D9F ED6C                B    24    				mlt hl
003DA1 29                  B    25    				add hl,hl
003DA2 22 50 60 00         B    26    				ld (charmap_size),hl
003DA6 11004080            B    27    				ld de,charmap_addr
003DAA 19                  B    28    				add hl,de
003DAB 22 4A 60 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
003DAF CD B5 3D 00         B    31    				call os_set_video_hw_regs
003DB3 AF                  B    32    				xor a
003DB4 C9                  B    33    				ret
                           B    34    				
                           B    35    
003DB5                     B    36    os_set_video_hw_regs
                           B    37    
003DB5 3A A2 5E 00         B    38    				ld a,(video_doubling)
003DB9 CB27                B    39    				sla a
003DBB F618                B    40    				or 00011000b
003DBD 320018FF            B    41    				ld (video_control),a			003DC1 AF                  B    42    				xor a
003DC2 320218FF            B    43    				ld (bgnd_palette_select),a
003DC6 3E63                B    44    				ld a,99
003DC8 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003DCC DD210010 FF         B    47    				ld ix,tilemap_parameters		003DD1 21004080            B    48    				ld hl,charmap_addr
003DD5 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003DD8 21020000            B    51    				ld hl,2
003DDC DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
003DDF 21000008            B    54    				ld hl,80000h
003DE3 11000000            B    55    				ld de,0
003DE7 3A A6 5E 00         B    56    				ld a,(charmap_columns)
003DEB 5F                  B    57    				ld e,a
003DEC AF                  B    58    				xor a
003DED ED52                B    59    				sbc hl,de
003DEF AF                  B    60    				xor a
003DF0 ED52                B    61    				sbc hl,de
003DF2 DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003DF5 21000000            B    64    				ld hl,0
003DF9 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003DFC 3A A6 5E 00         B    67    				ld a,(charmap_columns)
003E00 3D                  B    68    				dec a
003E01 DD7710              B    69    				ld (ix+10h),a					                           B    70    				
003E04 3E00                B    71    				ld a,0
003E06 DD7711              B    72    				ld (ix+11h),a					003E09 DD7712              B    73    				ld (ix+12h),a					                           B    74    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E0C 21 7D 5E 00         B    75    				ld hl,pen_palette
003E10 CD 1A 3E 00         B    76    				call hswc_set_ui_colours
                           B    77    				
003E14 CD 45 40 00         B    78    				call hwsc_disable_sprites
                           B    79    				
003E18 AF                  B    80    				xor a							003E19 C9                  B    81    				ret
                           B    82    
                           B    83    ;----------------------------------------------
                           B    84    				
003E1A                     B    85    hswc_set_ui_colours
                           B    86    
003E1A 110000FF            B    87    				ld de,hw_palette
003E1E 01200000            B    88    				ld bc,16*2
003E22 EDB0                B    89    				ldir
003E24 AF                  B    90    				xor a							003E25 C9                  B    91    				ret
                           B    92    
                           B    93    
                           B    94    ;----------------------------------------------
                           B    95    
003E26                     B    96    hwsc_clear_screen
                           B    97    
003E26 21004080            B    98    				ld hl,charmap_addr				003E2A 3620                B    99    				ld (hl),32						003E2C 23                  B   100    				inc hl
003E2D CD 4C 3E 00         B   101    				call get_fill_attr
003E31 77                  B   102    				ld (hl),a
003E32 23                  B   103    				inc hl
003E33 EB                  B   104    				ex de,hl
003E34 21004080            B   105    				ld hl,charmap_addr
003E38 ED4B 50 60 00       B   106    				ld bc,(charmap_size)
003E3D 0B                  B   107    				dec bc
003E3E 0B                  B   108    				dec bc
003E3F EDB0                B   109    				ldir
                           B   110    				
003E41 01000000            B   111    				ld bc,0
003E45 ED43 E2 60 00       B   112    				ld (cursor_y),bc
003E4A AF                  B   113    				xor a							003E4B C9                  B   114    				ret
                           B   115    				
                           B   116    				
003E4C D5                  B   117    get_fill_attr	push de
003E4D 3A 79 5E 00         B   118    				ld a,(current_pen)
003E51 E60F                B   119    				and 0fh
003E53 5F                  B   120    				ld e,a
003E54 3A 7B 5E 00         B   121    				ld a,(background_colour)
003E58 0F                  B   122    				rrca
003E59 0F                  B   123    				rrca
003E5A 0F                  B   124    				rrca
003E5B 0F                  B   125    				rrca
003E5C E6F0                B   126    				and 0f0h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E5E B3                  B   127    				or e
003E5F D1                  B   128    				pop de
003E60 C9                  B   129    				ret
                           B   130    				
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003E61                     B   134    hwsc_scroll_up	
                           B   135    				
003E61 C5                  B   136    				push bc
003E62 D5                  B   137    				push de
003E63 E5                  B   138    				push hl
                           B   139    
003E64 2A 50 60 00         B   140    				ld hl,(charmap_size)
003E68 ED5B A6 5E 00       B   141    				ld de,(charmap_columns)
003E6D AF                  B   142    				xor a
003E6E ED52                B   143    				sbc hl,de
003E70 ED52                B   144    				sbc hl,de						003E72 E5                  B   145    				push hl
003E73 C1                  B   146    				pop bc							003E74 21004080            B   147    				ld hl,charmap_addr
003E78 E5                  B   148    				push hl
003E79 19                  B   149    				add hl,de
003E7A 19                  B   150    				add hl,de
003E7B D1                  B   151    				pop de
003E7C EDB0                B   152    				ldir
                           B   153    				
003E7E EB                  B   154    				ex de,hl						003E7F E5                  B   155    				push hl
003E80 3620                B   156    				ld (hl),32
003E82 23                  B   157    				inc hl
003E83 CD 4C 3E 00         B   158    				call get_fill_attr
003E87 77                  B   159    				ld (hl),a
003E88 2A A6 5E 00         B   160    				ld hl,(charmap_columns)
003E8C 2B                  B   161    				dec hl
003E8D 29                  B   162    				add hl,hl
003E8E E5                  B   163    				push hl
003E8F C1                  B   164    				pop bc
003E90 E1                  B   165    				pop hl
003E91 E5                  B   166    				push hl
003E92 D1                  B   167    				pop de
003E93 13                  B   168    				inc de
003E94 13                  B   169    				inc de
003E95 EDB0                B   170    				ldir
                           B   171    				
003E97 E1                  B   172    				pop hl
003E98 D1                  B   173    				pop de
003E99 C1                  B   174    				pop bc
003E9A AF                  B   175    				xor a							003E9B C9                  B   176    				ret
                           B   177    
                           B   178    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   179    ;----------------------------------------------
                           B   180    
003E9C                     B   181    hwsc_plot_char
                           B   182    
                           B   183    ; Set:
                           B   184    ; ----
                           B   185    ; A = ascii char
                           B   186    ; B = x character coordinate 
                           B   187    ; C = y character coordinate
                           B   188    
003E9C E5                  B   189    				push hl							003E9D D5                  B   190    				push de
003E9E F5                  B   191    				push af
                           B   192    
003E9F 3A A3 5E 00         B   193    				ld a,(charmap_rows)				003EA3 3D                  B   194    				dec a
003EA4 B9                  B   195    				cp c							003EA5 38 08               B   196    				jr c,win_err
003EA7 3A A6 5E 00         B   197    				ld a,(charmap_columns)
003EAB 3D                  B   198    				dec a
003EAC B8                  B   199    				cp b
003EAD 30 07               B   200    				jr nc,win_ok
003EAF F1                  B   201    win_err			pop af
003EB0 D1                  B   202    				pop de
003EB1 E1                  B   203    				pop hl
003EB2 3E88                B   204    				ld a,88h						003EB4 B7                  B   205    				or a
003EB5 C9                  B   206    				ret
                           B   207    				
003EB6 2A A6 5E 00         B   208    win_ok			ld hl,(charmap_columns)			003EBA 61                  B   209    				ld h,c
003EBB ED6C                B   210    				mlt hl
003EBD 11000000            B   211    				ld de,0
003EC1 58                  B   212    				ld e,b
003EC2 19                  B   213    				add hl,de
003EC3 29                  B   214    				add hl,hl
003EC4 11004080            B   215    				ld de,charmap_addr
003EC8 19                  B   216    				add hl,de
003EC9 F1                  B   217    				pop af
003ECA 77                  B   218    				ld (hl),a
003ECB 23                  B   219    				inc hl
003ECC 3A 79 5E 00         B   220    				ld a,(current_pen)
003ED0 77                  B   221    				ld (hl),a
003ED1 D1                  B   222    				pop de
003ED2 E1                  B   223    				pop hl
003ED3 AF                  B   224    				xor a
003ED4 C9                  B   225    				ret
                           B   226    				
                           B   227    				
                           B   228    ;----------------------------------------------
                           B   229    
003ED5                     B   230    hwsc_remove_cursor
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   231    
003ED5 3A 9F 5E 00         B   232    				ld a,(cursor_present)			003ED9 B7                  B   233    				or a
003EDA C8                  B   234    				ret z
003EDB ED4B E2 60 00       B   235    				ld bc,(cursor_y)
003EE0 CD 43 3F 00         B   236    				call hwsc_get_charmap_addr_xy
003EE4 3A 9E 5E 00         B   237    				ld a,(char_under_cursor)
003EE8 77                  B   238    				ld (hl),a
003EE9 AF                  B   239    				xor a
003EEA 32 9F 5E 00         B   240    				ld (cursor_present),a
003EEE C9                  B   241    				ret
                           B   242    
                           B   243    
003EEF                     B   244    hwsc_draw_cursor
                           B   245    								
003EEF 3A 9F 5E 00         B   246    				ld a,(cursor_present)			003EF3 B7                  B   247    				or a
003EF4 C0                  B   248    				ret nz
003EF5 3C                  B   249    				inc a
003EF6 32 9F 5E 00         B   250    				ld (cursor_present),a
                           B   251    				
003EFA ED4B E2 60 00       B   252    				ld bc,(cursor_y)
003EFF CD 43 3F 00         B   253    				call hwsc_get_charmap_addr_xy
003F03 7E                  B   254    				ld a,(hl)						003F04 32 9E 5E 00         B   255    				ld (char_under_cursor),a		003F08 36FF                B   256    				ld (hl),ffh						                           B   257    				
003F0A 11400000            B   258    				ld de,64						003F0E 57                  B   259    				ld d,a
003F0F ED5C                B   260    				mlt de
003F11 FD210000 80         B   261    				ld iy,vram_a_addr				003F16 FD19                B   262    				add iy,de						                           B   263    				
003F18 21400000            B   264    				ld hl,64
003F1C 3A A1 5E 00         B   265    				ld a,(cursor_image_char)
003F20 67                  B   266    				ld h,a
003F21 ED6C                B   267    				mlt hl
003F23 11000080            B   268    				ld de,vram_a_addr
003F27 19                  B   269    				add hl,de
                           B   270    				
003F28 DD21C03F 80         B   271    				ld ix,vram_a_addr+03fc0h
003F2D 11080000            B   272    				ld de,8
003F31 0608                B   273    				ld b,8
003F33 FD7E00              B   274    cur_loop		ld a,(iy)						003F36 AE                  B   275    				xor (hl)						003F37 DD7700              B   276    				ld (ix),a						003F3A FD19                B   277    				add iy,de
003F3C DD19                B   278    				add ix,de
003F3E 19                  B   279    				add hl,de
003F3F 10 F2               B   280    				djnz cur_loop
                           B   281    				
003F41 AF                  B   282    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F42 C9                  B   283    				ret
                           B   284    				
                           B   285    
                           B   286    ;----------------------------------------------
                           B   287    
003F43                     B   288    hwsc_get_charmap_addr_xy
                           B   289    
                           B   290    ; returns address of charmap in xHL for charact
                           B   291    ; and attrmap in xDE
                           B   292    				
003F43 2A A6 5E 00         B   293    				ld hl,(charmap_columns)			003F47 61                  B   294    				ld h,c
003F48 ED6C                B   295    				mlt hl
003F4A 11000000            B   296    				ld de,0
003F4E 58                  B   297    				ld e,b
003F4F 19                  B   298    				add hl,de
003F50 29                  B   299    				add hl,hl
003F51 11004080            B   300    				ld de,charmap_addr
003F55 19                  B   301    				add hl,de
003F56 E5                  B   302    				push hl
003F57 D1                  B   303    				pop de
003F58 13                  B   304    				inc de
003F59 AF                  B   305    				xor a
003F5A C9                  B   306    				ret
                           B   307    								
                           B   308    ;----------------------------------------------
                           B   309    
003F5B                     B   310    hwsc_chars_left
                           B   311    
                           B   312    ; moves characters (in character map) on the cu
                           B   313    
003F5B E5                  B   314    				push hl
003F5C D5                  B   315    				push de
003F5D C5                  B   316    				push bc
                           B   317    				
003F5E 2A A6 5E 00         B   318    				ld hl,(charmap_columns)
003F62 3A E2 60 00         B   319    				ld a,(cursor_y)
003F66 67                  B   320    				ld h,a
003F67 ED6C                B   321    				mlt hl
003F69 11000000            B   322    				ld de,0
003F6D 58                  B   323    				ld e,b
003F6E 19                  B   324    				add hl,de
003F6F 29                  B   325    				add hl,hl
003F70 11004080            B   326    				ld de,charmap_addr
003F74 19                  B   327    				add hl,de
                           B   328    				
003F75 3A A6 5E 00         B   329    				ld a,(charmap_columns)
003F79 90                  B   330    				sub b
003F7A CB27                B   331    				sla a
003F7C 01000000            B   332    				ld bc,0
003F80 4F                  B   333    				ld c,a
003F81 E5                  B   334    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F82 D1                  B   335    				pop de
003F83 1B                  B   336    				dec de
003F84 1B                  B   337    				dec de
003F85 EDB0                B   338    				ldir
                           B   339    				
003F87 3E20                B   340    				ld a,32						;pu
003F89 12                  B   341    				ld (de),a
003F8A 13                  B   342    				inc de
003F8B CD 4C 3E 00         B   343    				call get_fill_attr
003F8F 12                  B   344    				ld (de),a
                           B   345    				
003F90 C1                  B   346    				pop bc
003F91 D1                  B   347    				pop de
003F92 E1                  B   348    				pop hl
003F93 C9                  B   349    				ret
                           B   350    
                           B   351    
                           B   352    ;----------------------------------------------
                           B   353    
                           B   354    
003F94                     B   355    hwsc_chars_right
                           B   356    
                           B   357    ; moves characters on current line right from c
                           B   358    
003F94 C5                  B   359    				push bc
003F95 D5                  B   360    				push de
003F96 E5                  B   361    				push hl
                           B   362    	
003F97 21 E3 60 00         B   363    				ld hl,cursor_x				
003F9B 3A A6 5E 00         B   364    				ld a,(charmap_columns)
003F9F 3D                  B   365    				dec a
003FA0 BE                  B   366    				cp (hl)			
003FA1 28 30               B   367    				jr z,chright_end
003FA3 46                  B   368    				ld b,(hl)
                           B   369    				
003FA4 2A A6 5E 00         B   370    				ld hl,(charmap_columns)
003FA8 3A E2 60 00         B   371    				ld a,(cursor_y)
003FAC 3C                  B   372    				inc a							003FAD 67                  B   373    				ld h,a
003FAE ED6C                B   374    				mlt hl
003FB0 29                  B   375    				add hl,hl
003FB1 11004080            B   376    				ld de,charmap_addr
003FB5 19                  B   377    				add hl,de					
003FB6 2B                  B   378    				dec hl							003FB7 E5                  B   379    				push hl
003FB8 D1                  B   380    				pop de							003FB9 2B                  B   381    				dec hl
003FBA 2B                  B   382    				dec hl							003FBB 3A A6 5E 00         B   383    				ld a,(charmap_columns)
003FBF 90                  B   384    				sub b
003FC0 3D                  B   385    				dec a
003FC1 CB27                B   386    				sla a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FC3 01000000            B   387    				ld bc,0
003FC7 4F                  B   388    				ld c,a							003FC8 EDB8                B   389    				lddr
003FCA 23                  B   390    				inc hl							003FCB 3620                B   391    				ld (hl),32
003FCD 23                  B   392    				inc hl
003FCE CD 4C 3E 00         B   393    				call get_fill_attr
003FD2 77                  B   394    				ld (hl),a
                           B   395    							
003FD3 E1                  B   396    chright_end		pop hl	
003FD4 D1                  B   397    				pop de
003FD5 C1                  B   398    				pop bc
003FD6 C9                  B   399    				ret
                           B   400    
                           B   401    ;----------------------------------------------
                           B   402    
                           B   403    
003FD7                     B   404    hwsc_charline_to_command_string	
                           B   405    				
                           B   406    				
003FD7 2A A6 5E 00         B   407    				ld hl,(charmap_columns)			003FDB 3A E2 60 00         B   408    				ld a,(cursor_y)
003FDF 67                  B   409    				ld h,a
003FE0 ED6C                B   410    				mlt hl
003FE2 29                  B   411    				add hl,hl
003FE3 11004080            B   412    				ld de,charmap_addr
003FE7 19                  B   413    				add hl,de
003FE8 11 00 61 00         B   414    				ld de,commandstring
003FEC 0650                B   415    				ld b,max_buffer_chars			003FEE 7E                  B   416    copy_to_cmdline	ld a,(hl)
003FEF 12                  B   417    				ld (de),a
003FF0 13                  B   418    				inc de
003FF1 23                  B   419    				inc hl
003FF2 23                  B   420    				inc hl
003FF3 10 F9               B   421    				djnz copy_to_cmdline
003FF5 C9                  B   422    				ret
                           B   423    
                           B   424    ;----------------------------------------------
                           B   425    
                           B   426    
003FF6 C5                  B   427    hwsc_wait_vrt	push bc
                           B   428    
003FF7 0E01                B   429    				ld c,1
003FF9 ED0909              B   430    				out0 (port_clear_flags),c
                           B   431    
003FFC 0E01                B   432    				ld c,port_hw_flags
003FFE ED7420              B   433    ewaitvrtlp1		tstio 1<<vrt
004001 28 FB               B   434    				jr z,ewaitvrtlp1
                           B   435    				
004003 C1                  B   436    				pop bc
004004 BF                  B   437    				cp a							004005 C9                  B   438    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   439    
                           B   440    
                           B   441    ;----------------------------------------------
                           B   442    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
004006                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
004006 3E48                B     9    					ld a,01001000b				004008 ED39AA              B    10    					out0 (CS0_CTL),a
00400B 3E00                B    11    					ld a,000h					00400D ED39A8              B    12    					out0 (CS0_LBR),a
004010 3EFF                B    13    					ld a,0ffh	
004012 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004015 3E58                B    16    					ld a,01011000b
004017 ED39AD              B    17    					out0 (CS1_CTL),a			00401A 3E00                B    18    					ld a,0
00401C ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
00401F 3EFF                B    23    					ld a,0ffh
004021 ED399F              B    24    					out0 (PC_DDR),a				004024 AF                  B    25    					xor a
004025 ED39A0              B    26    					out0 (PC_ALT1),a
004028 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
00402B 3EFF                B    29    					ld a,0ffh					00402D ED39A3              B    30    					out0 (PD_DDR),a				004030 AF                  B    31    					xor a	
004031 ED39A4              B    32    					out0 (PD_ALT1),a			004034 3E0F                B    33    					ld a,00fh				
004036 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004039 ED3892              B    38    					in0 a,(TMR_ISS)
00403C E6FC                B    39    					and 11111100b
00403E F601                B    40    					or  00000001b
004040 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
004043 AF                  B    43    					xor a
004044 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    48    
004045                     B    49    hwsc_disable_sprites
                           B    50    
004045 AF                  B    51    					xor a
004046 320118FF            B    52    					ld (sprite_control),a		00404A C9                  B    53    					ret
                           B    54    					
                           B    55    ;----------------------------------------------
                           B    56    
                           B    57    
00404B 11000000            B    58    hwsc_get_version	ld de,0
00404F 0610                B    59    					ld b,16
004051 78                  B    60    gethwvlp			ld a,b
004052 3D                  B    61    					dec a
004053 ED3908              B    62    					out0 (port_selector),a		004056 DB01                B    63    					in a,(port_hw_flags)		004058 CB27                B    64    					sla a
00405A CB13                B    65    					rl e
00405C CB12                B    66    					rl d
00405E 10 F1               B    67    					djnz gethwvlp				                           B    68    									
004060 21330000            B    69    					ld hl,prose_version
004064 BF                  B    70    					cp a						004065 C9                  B    71    					ret
                           B    72    
                           B    73    
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    ; Timer related 
                           B    77    ;----------------------------------------------
                           B    78    
004066                     B    79    hwsc_time_delay
                           B    80    
                           B    81    ; set DE to 32768Hz ticks to wait
                           B    82    
004066 CD 72 40 00         B    83    					call set_timeout
00406A CD 83 40 00         B    84    twaitlp				call test_timeout
00406E 28 FA               B    85    					jr z,twaitlp
004070 AF                  B    86    					xor a						004071 C9                  B    87    					ret			
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    
004072 7B                  B    91    set_timeout			ld a,e						004073 ED3981              B    92    					out0 (TMR0_RR_L),a			004076 7A                  B    93    					ld a,d
004077 ED3982              B    94    					out0 (TMR0_RR_H),a			00407A 3E03                B    95    					ld a,00000011b				00407C ED3980              B    96    					out0 (TMR0_CTL),a			00407F ED3880              B    97    					in0 a,(TMR0_CTL)			004082 C9                  B    98    					ret
                           B    99    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004083 ED3880              B   100    test_timeout		in0 a,(TMR0_CTL)			004086 CB7F                B   101    					bit 7,a
004088 C9                  B   102    					ret
                           B   103    			
                           B   104    ;----------------------------------------------
                           B   105    
004089                     B   106    hwsc_read_rtc
004089 D5                  B   107    					push de
00408A C5                  B   108    					push bc
00408B 0EE0                B   109    hwsc_rtc_rlp		ld c,RTC_SEC
00408D 0608                B   110    					ld b,8
00408F 21 3D 60 00         B   111    					ld hl,time_data
004093 ED92                B   112    					inimr						004095 0EE0                B   113    					ld c,RTC_SEC
004097 0600                B   114    					ld b,0
004099 1E08                B   115    					ld e,8
00409B 21 3D 60 00         B   116    					ld hl,time_data
00409F ED78                B   117    timevloop			in a,(bc)					0040A1 BE                  B   118    					cp (hl)						0040A2 20 E7               B   119    					jr nz,hwsc_rtc_rlp			0040A4 23                  B   120    					inc hl
0040A5 0C                  B   121    					inc c
0040A6 1D                  B   122    					dec e
0040A7 20 F6               B   123    					jr nz,timevloop
0040A9 21 3D 60 00         B   124    					ld hl,time_data
0040AD C1                  B   125    					pop bc
0040AE D1                  B   126    					pop de
0040AF BF                  B   127    					cp a						0040B0 C9                  B   128    					ret
                           B   129    
                           B   130    
0040B1                     B   131    hwsc_write_rtc	
                           B   132    
                           B   133    ; set HL to location of BCD data for RTC: sec/m
                           B   134    
0040B1 E5                  B   135    					push hl
0040B2 C5                  B   136    					push bc
0040B3 3E21                B   137    					ld a,00100001b				0040B5 ED39ED              B   138    					out0 (RTC_CTRL),a
0040B8 0EE0                B   139    					ld c,RTC_SEC
0040BA 0608                B   140    					ld b,8
0040BC ED93                B   141    					otimr
0040BE 3E20                B   142    					ld a,00100000b				0040C0 ED39ED              B   143    					out0 (RTC_CTRL),a
0040C3 C1                  B   144    					pop bc
0040C4 E1                  B   145    					pop hl
0040C5 BF                  B   146    					cp a						0040C6 C9                  B   147    					ret	
                           B   148    
                           B   149    
                           B   150    ;----------------------------------------------
                           B   151    ; INIT KEYBOARD ROUTINE 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   152    ;----------------------------------------------
                           B   153    
                           B   154    ; ZF set and A = 0 if all OK, else error code i
                           B   155    
0040C7                     B   156    init_keyboard
                           B   157    
0040C7 11004000            B   158    			ld de,16384							0040CB CD 66 40 00         B   159    			call hwsc_time_delay
0040CF F3                  B   160    			di
0040D0 CD 85 41 00         B   161    			call purge_keyboard
0040D4 CD DE 40 00         B   162    			call rs_keyboard
0040D8 FB                  B   163    			ei
0040D9 D0                  B   164    			ret nc
0040DA 3E8B                B   165    			ld a,08bh							0040DC B7                  B   166    			or a
0040DD C9                  B   167    			ret
                           B   168    			
                           B   169    			
0040DE                     B   170    rs_keyboard
                           B   171    
0040DE 3EFF                B   172    			ld a,0ffh
0040E0 CD FD 40 00         B   173    			call write_to_keyboard
0040E4 30 04               B   174    			jr nc,kb_connected
0040E6 3E8A                B   175    			ld a,08ah							0040E8 B7                  B   176    			or a
0040E9 C9                  B   177    			ret
                           B   178    
0040EA                     B   179    kb_connected
                           B   180    			
0040EA 0605                B   181    			ld b,5
0040EC C5                  B   182    kb_initlp	push bc
0040ED CD 69 41 00         B   183    			call wait_kb_byte					0040F1 C1                  B   184    			pop bc
0040F2 D8                  B   185    			ret c
0040F3 FEAA                B   186    			cp 0aah
0040F5 28 04               B   187    			jr z,kb_postok
0040F7 10 F3               B   188    			djnz kb_initlp						0040F9 37                  B   189    			scf									0040FA C9                  B   190    			ret
                           B   191    			
                           B   192    			
0040FB AF                  B   193    kb_postok	xor a
0040FC C9                  B   194    			ret
                           B   195    	
                           B   196    	
                           B   197    ;----------------------------------------------
                           B   198    				
0040FD                     B   199    write_to_keyboard
                           B   200    
                           B   201    ; Put byte to send to keyboard in A
                           B   202    
0040FD 4F                  B   203    			ld c,a								Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040FE 3E01                B   204    			ld a,01b							004100 ED3907              B   205    			out0 (port_ps2_ctrl),a
                           B   206    
004103 110A0000            B   207    			ld de,10
004107 CD 66 40 00         B   208    			call hwsc_time_delay				                           B   209    
00410B 3E03                B   210    			ld a,11b
00410D ED3907              B   211    			out0 (port_ps2_ctrl),a				                           B   212    			
004110 3E02                B   213    			ld a,10b
004112 ED3907              B   214    			out0 (port_ps2_ctrl),a				                           B   215    			
004115 CD E5 42 00         B   216    			call wait_kb_clk_high
                           B   217    			
004119 1601                B   218    			ld d,1								00411B 0608                B   219    			ld b,8								00411D CD B8 42 00         B   220    kdoloop		call wait_kb_clk_low	
004121 D8                  B   221    			ret c
004122 AF                  B   222    			xor a
004123 CBCF                B   223    			set 1,a
004125 CB41                B   224    			bit 0,c
004127 28 03               B   225    			jr z,kdbzero
004129 CB8F                B   226    			res 1,a
00412B 14                  B   227    			inc d
00412C ED3907              B   228    kdbzero		out0 (port_ps2_ctrl),a				00412F CD E5 42 00         B   229    			call wait_kb_clk_high
004133 D8                  B   230    			ret c
004134 CB19                B   231    			rr c
004136 10 E5               B   232    			djnz kdoloop
                           B   233    
004138 CD B8 42 00         B   234    			call wait_kb_clk_low
00413C D8                  B   235    			ret c
00413D AF                  B   236    			xor a
00413E CB42                B   237    			bit 0,d
004140 20 02               B   238    			jr nz,kparone
004142 CBCF                B   239    			set 1,a
004144 ED3907              B   240    kparone		out0 (port_ps2_ctrl),a				004147 CD E5 42 00         B   241    			call wait_kb_clk_high
00414B D8                  B   242    			ret c
                           B   243    			
00414C CD B8 42 00         B   244    			call wait_kb_clk_low
004150 D8                  B   245    			ret c
004151 AF                  B   246    			xor a
004152 ED3907              B   247    			out0 (port_ps2_ctrl),a				                           B   248    
004155 CD B4 42 00         B   249    			call wait_kb_data_low				004159 D8                  B   250    			ret c
00415A CD B8 42 00         B   251    			call wait_kb_clk_low				00415E D8                  B   252    			ret c
                           B   253    				
00415F CD E1 42 00         B   254    			call wait_kb_data_high				004163 D8                  B   255    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004164 CD E5 42 00         B   256    			call wait_kb_clk_high				004168 C9                  B   257    			ret 
                           B   258    
                           B   259    
                           B   260    ;----------------------------------------------
                           B   261    
                           B   262    
004169                     B   263    wait_kb_byte
                           B   264    
004169 11008000            B   265    			ld de,8000h
00416D CD 72 40 00         B   266    			call set_timeout					                           B   267    
004171 ED3807              B   268    wait_kloop	in0 a,(port_ps2_ctrl)
004174 CB67                B   269    			bit 4,a
004176 20 08               B   270    			jr nz,rec_kbyte
                           B   271    			
004178 CD 83 40 00         B   272    			call test_timeout
00417C 28 F3               B   273    			jr z,wait_kloop
00417E 37                  B   274    			scf									00417F C9                  B   275    			ret
                           B   276    			
004180 ED3802              B   277    rec_kbyte	in0 a,(port_keyboard_data)			004183 B7                  B   278    			or a
004184 C9                  B   279    			ret
                           B   280    
                           B   281    
                           B   282    ;----------------------------------------------
                           B   283    
004185                     B   284    purge_keyboard
                           B   285    			
004185 ED3807              B   286    			in0 a,(port_ps2_ctrl)
004188 CB67                B   287    			bit 4,a
00418A C8                  B   288    			ret z
00418B ED3802              B   289    			in0 a,(port_keyboard_data)			00418E 18 F5               B   290    			jr purge_keyboard
                           B   291    
                           B   292    
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    ; INIT MOUSE ROUTINE 
                           B   296    ;----------------------------------------------
                           B   297    
                           B   298    ; ZF set and A = 0 if all OK, else error code i
                           B   299    
004190                     B   300    init_mouse		
004190 F3                  B   301    			di
004191 CD A9 42 00         B   302    			call purge_mouse
004195 CD 9F 41 00         B   303    			call rs_mouse
004199 FB                  B   304    			ei
00419A D0                  B   305    			ret nc
00419B 3E8B                B   306    			ld a,08bh							00419D B7                  B   307    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00419E C9                  B   308    			ret
                           B   309    
                           B   310    
00419F                     B   311    rs_mouse
00419F 3EFF                B   312    			ld a,0ffh							0041A1 CD 21 42 00         B   313    			call write_to_mouse		
0041A5 30 04               B   314    			jr nc,mouse_connected
0041A7 3E8A                B   315    			ld a,08ah							0041A9 B7                  B   316    			or a
0041AA C9                  B   317    			ret
                           B   318    
                           B   319    
0041AB                     B   320    mouse_connected
                           B   321    
0041AB 0605                B   322    			ld b,5
0041AD C5                  B   323    ms_initlp	push bc
0041AE CD 8D 42 00         B   324    			call wait_mouse_byte				0041B2 C1                  B   325    			pop bc
0041B3 D8                  B   326    			ret c
0041B4 FEAA                B   327    			cp 0aah
0041B6 28 04               B   328    			jr z,ms_postok
0041B8 10 F3               B   329    			djnz ms_initlp
0041BA 18 43               B   330    			jr bad_mouse
                           B   331    			
0041BC CD 8D 42 00         B   332    ms_postok	call wait_mouse_byte				0041C0 D8                  B   333    			ret c
0041C1 B7                  B   334    			or a
0041C2 20 3B               B   335    			jr nz,bad_mouse						                           B   336    			
0041C4 3E03                B   337    			ld a,3
0041C6 32 1A 62 00         B   338    			ld (mouse_packet_size),a
                           B   339    
0041CA 21 F4 5E 00         B   340    			ld hl,intellimouse_seq
0041CE 0606                B   341    			ld b,6
0041D0 CD 03 42 00         B   342    			call mouse_sequence
0041D4 D8                  B   343    			ret c
                           B   344    			
0041D5 3EF2                B   345    			ld a,0f2h
0041D7 CD 12 42 00         B   346    			call write_mouse_wait_ack			0041DB D8                  B   347    			ret c
0041DC CD 8D 42 00         B   348    			call wait_mouse_byte				0041E0 D8                  B   349    			ret c
0041E1 32 19 62 00         B   350    			ld (mouse_id),a
0041E5 B7                  B   351    			or a								0041E6 28 0A               B   352    			jr z,standard_mouse
0041E8 FE03                B   353    			cp 3
0041EA 20 13               B   354    			jr nz,bad_mouse						0041EC 3E04                B   355    			ld a,4
0041EE 32 1A 62 00         B   356    			ld (mouse_packet_size),a
                           B   357    
0041F2                     B   358    standard_mouse
                           B   359    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041F2 21 FA 5E 00         B   360    			ld hl,mouse_settings_seq
0041F6 0606                B   361    			ld b,6
0041F8 CD 03 42 00         B   362    			call mouse_sequence
0041FC D8                  B   363    			ret c
0041FD AF                  B   364    			xor a								0041FE C9                  B   365    			ret
                           B   366    
                           B   367    
0041FF 3E89                B   368    bad_mouse	ld a,089h							004201 B7                  B   369    			or a
004202 C9                  B   370    			ret
                           B   371    
                           B   372    
004203                     B   373    mouse_sequence
                           B   374    
004203 7E                  B   375    mseqlp		ld a,(hl)
004204 E5                  B   376    			push hl
004205 C5                  B   377    			push bc
004206 CD 12 42 00         B   378    			call write_mouse_wait_ack
00420A C1                  B   379    			pop bc
00420B E1                  B   380    			pop hl
00420C D8                  B   381    			ret c
00420D 23                  B   382    			inc hl
00420E 10 F3               B   383    			djnz mseqlp
004210 AF                  B   384    			xor a
004211 C9                  B   385    			ret
                           B   386    
                           B   387    
004212                     B   388    write_mouse_wait_ack
                           B   389    			
004212 CD 21 42 00         B   390    			call write_to_mouse
004216 D8                  B   391    			ret c
004217 CD 8D 42 00         B   392    			call wait_mouse_byte				00421B D8                  B   393    			ret c
00421C FEFA                B   394    			cp 0fah								00421E C8                  B   395    			ret z
00421F 37                  B   396    			scf
004220 C9                  B   397    			ret
                           B   398    			
                           B   399    ;----------------------------------------------
                           B   400    				
004221                     B   401    write_to_mouse
                           B   402    
                           B   403    ; Put byte to send to mouse in A
                           B   404    
004221 4F                  B   405    			ld c,a								004222 3E04                B   406    			ld a,0100b							004224 ED3907              B   407    			out0 (port_ps2_ctrl),a
                           B   408    
004227 110A0000            B   409    			ld de,10
00422B CD 66 40 00         B   410    			call hwsc_time_delay				                           B   411    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00422F 3E0C                B   412    			ld a,1100b
004231 ED3907              B   413    			out0 (port_ps2_ctrl),a				                           B   414    			
004234 3E08                B   415    			ld a,1000b
004236 ED3907              B   416    			out0 (port_ps2_ctrl),a				                           B   417    			
004239 CD ED 42 00         B   418    			call wait_mouse_clk_high
                           B   419    			
00423D 1601                B   420    			ld d,1								00423F 0608                B   421    			ld b,8								004241 CD C0 42 00         B   422    mdoloop		call wait_mouse_clk_low	
004245 D8                  B   423    			ret c
004246 AF                  B   424    			xor a
004247 CBDF                B   425    			set 3,a
004249 CB41                B   426    			bit 0,c
00424B 28 03               B   427    			jr z,mdbzero
00424D CB9F                B   428    			res 3,a
00424F 14                  B   429    			inc d
004250 ED3907              B   430    mdbzero		out0 (port_ps2_ctrl),a				004253 CD ED 42 00         B   431    			call wait_mouse_clk_high
004257 D8                  B   432    			ret c
004258 CB19                B   433    			rr c
00425A 10 E5               B   434    			djnz mdoloop
                           B   435    
00425C CD C0 42 00         B   436    			call wait_mouse_clk_low
004260 D8                  B   437    			ret c
004261 AF                  B   438    			xor a
004262 CB42                B   439    			bit 0,d
004264 20 02               B   440    			jr nz,parone
004266 CBDF                B   441    			set 3,a
004268 ED3907              B   442    parone		out0 (port_ps2_ctrl),a				00426B CD ED 42 00         B   443    			call wait_mouse_clk_high
00426F D8                  B   444    			ret c
                           B   445    			
004270 CD C0 42 00         B   446    			call wait_mouse_clk_low
004274 D8                  B   447    			ret c
004275 AF                  B   448    			xor a
004276 ED3907              B   449    			out0 (port_ps2_ctrl),a				                           B   450    
004279 CD BC 42 00         B   451    			call wait_mouse_data_low			00427D D8                  B   452    			ret c
00427E CD C0 42 00         B   453    			call wait_mouse_clk_low				004282 D8                  B   454    			ret c
                           B   455    				
004283 CD E9 42 00         B   456    			call wait_mouse_data_high			004287 D8                  B   457    			ret c
004288 CD ED 42 00         B   458    			call wait_mouse_clk_high			00428C C9                  B   459    			ret 
                           B   460    
                           B   461    ;----------------------------------------------
                           B   462    
                           B   463    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00428D                     B   464    wait_mouse_byte
                           B   465    
00428D 11008000            B   466    			ld de,8000h
004291 CD 72 40 00         B   467    			call set_timeout					                           B   468    
004295 ED3807              B   469    wait_mloop	in0 a,(port_ps2_ctrl)
004298 CB6F                B   470    			bit 5,a
00429A 20 08               B   471    			jr nz,rec_mbyte
                           B   472    			
00429C CD 83 40 00         B   473    			call test_timeout
0042A0 28 F3               B   474    			jr z,wait_mloop
0042A2 37                  B   475    			scf									0042A3 C9                  B   476    			ret
                           B   477    			
0042A4 ED3806              B   478    rec_mbyte	in0 a,(port_mouse_data)				0042A7 B7                  B   479    			or a
0042A8 C9                  B   480    			ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
0042A9                     B   484    purge_mouse
                           B   485    			
0042A9 ED3807              B   486    			in0 a,(port_ps2_ctrl)
0042AC CB6F                B   487    			bit 5,a
0042AE C8                  B   488    			ret z
0042AF ED3806              B   489    			in0 a,(port_mouse_data)			; r
0042B2 18 F5               B   490    			jr purge_mouse
                           B   491    
                           B   492    
                           B   493    ;----------------------------------------------
                           B   494    
                           B   495    
0042B4                     B   496    wait_kb_data_low
                           B   497    
0042B4 3E02                B   498    			ld a,2
0042B6 18 0A               B   499    			jr test_lo_ps2
                           B   500    			
0042B8                     B   501    wait_kb_clk_low
                           B   502    
0042B8 3E01                B   503    			ld a,1
0042BA 18 06               B   504    			jr test_lo_ps2			
                           B   505    
0042BC                     B   506    wait_mouse_data_low
                           B   507    
0042BC 3E08                B   508    			ld a,8
0042BE 18 02               B   509    			jr test_lo_ps2
                           B   510    
0042C0                     B   511    wait_mouse_clk_low
                           B   512    
0042C0 3E04                B   513    			ld a,4
                           B   514    
0042C2 C5                  B   515    test_lo_ps2	push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042C3 D5                  B   516    			push de
0042C4 4F                  B   517    			ld c,a
0042C5 11004000            B   518    			ld de,04000h					; a
0042C9 CD 72 40 00         B   519    			call set_timeout
                           B   520    
0042CD CD 83 40 00         B   521    nkb_lw		call test_timeout				; t
0042D1 28 04               B   522    			jr z,nkb_lnto
0042D3 D1                  B   523    			pop de
0042D4 C1                  B   524    			pop bc
0042D5 37                  B   525    			scf								; c
0042D6 C9                  B   526    			ret
0042D7 ED3807              B   527    nkb_lnto	in0 a,(port_ps2_ctrl)
0042DA A1                  B   528    			and c
0042DB 20 F0               B   529    			jr nz,nkb_lw
                           B   530    					
0042DD D1                  B   531    			pop de
0042DE C1                  B   532    			pop bc
0042DF AF                  B   533    			xor a
0042E0 C9                  B   534    			ret					
                           B   535    
                           B   536    
                           B   537    
                           B   538    
0042E1                     B   539    wait_kb_data_high
                           B   540    
0042E1 3E02                B   541    			ld a,2
0042E3 18 0A               B   542    			jr test_hi_ps2
                           B   543    			
0042E5                     B   544    wait_kb_clk_high
                           B   545    
0042E5 3E01                B   546    			ld a,1
0042E7 18 06               B   547    			jr test_hi_ps2
                           B   548    
                           B   549    
0042E9                     B   550    wait_mouse_data_high
                           B   551    			
0042E9 3E08                B   552    			ld a,8
0042EB 18 02               B   553    			jr test_hi_ps2
                           B   554    			 
0042ED                     B   555    wait_mouse_clk_high
                           B   556    
0042ED 3E04                B   557    			ld a,4
                           B   558    
0042EF C5                  B   559    test_hi_ps2	push bc
0042F0 D5                  B   560    			push de
0042F1 4F                  B   561    			ld c,a
0042F2 11004000            B   562    			ld de,04000h					; a
0042F6 CD 72 40 00         B   563    			call set_timeout
                           B   564    
0042FA CD 83 40 00         B   565    nkb_hw		call test_timeout				; t
0042FE 28 04               B   566    			jr z,nkb_hnto
004300 D1                  B   567    			pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004301 C1                  B   568    			pop bc
004302 37                  B   569    			scf								; c
004303 C9                  B   570    			ret
004304 ED3807              B   571    nkb_hnto	in0 a,(port_ps2_ctrl)
004307 A1                  B   572    			and c
004308 28 F0               B   573    			jr z,nkb_hw
                           B   574    					
00430A D1                  B   575    			pop de
00430B C1                  B   576    			pop bc
00430C AF                  B   577    			xor a							; c
00430D C9                  B   578    			ret
                           B   579    
                           B   580    
                           B   581    ;==============================================
                           B   582    
00430E                     B   583    hwsc_play_audio
                           B   584    
                           B   585    ; set HL register to location of an audio data 
                           B   586    
                           B   587    ; 0 - start 
                           B   588    ; 3 - length
                           B   589    ; 6 - loop start
                           B   590    ; 9 - loop length
                           B   591    ; c - frequency constant
                           B   592    ; e - volume
                           B   593    
                           B   594    ; set C register to set channels wave is to pla
                           B   595    
00430E E5                  B   596    				push hl
00430F FDE1                B   597    				pop iy
004311 DD210014 FF         B   598    				ld ix,hw_audio_registers
004316 CD 4B 43 00         B   599    				call audio_reg_wait				                           B   600    				
00431A 0608                B   601    				ld b,8
00431C CB39                B   602    audchanloop		srl c
00431E 30 24               B   603    				jr nc,not_this_chan
                           B   604    				
004320 FD1700              B   605    				ld de,(iy)
004323 DD1F00              B   606    				ld (ix),de						                           B   607    
004326 FD1703              B   608    				ld de,(iy+3)
004329 DD1F04              B   609    				ld (ix+04h),de					                           B   610    				
00432C FD170C              B   611    				ld de,(iy+0ch)
00432F DD1F08              B   612    				ld (ix+08h),de					                           B   613    				
004332 FD5E0E              B   614    				ld e,(iy+0eh)
004335 DD1F0C              B   615    				ld (ix+0ch),de					                           B   616    				
004338 FD1706              B   617    				ld de,(iy+6)
00433B DD1F10              B   618    				ld (ix+10h),de					                           B   619    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00433E FD1709              B   620    				ld de,(iy+9)
004341 DD1F14              B   621    				ld (ix+14h),de					                           B   622    
004344                     B   623    not_this_chan	
004344 ED3220              B   624    				lea ix,ix+20h			
004347 10 D3               B   625    				djnz audchanloop
004349 AF                  B   626    				xor a
00434A C9                  B   627    				ret
                           B   628    
                           B   629    
                           B   630    ;----------------------------------------------
                           B   631    
00434B                     B   632    audio_reg_wait	
                           B   633    
00434B 3E01                B   634    				ld a,1
00434D 320314FF            B   635    				ld (hw_audio_registers+3),a		                           B   636    				
004351 ED3801              B   637    wait_audreg		in0 a,(port_hw_flags)			004354 E640                B   638    				and 040h
004356 28 F9               B   639    				jr z,wait_audreg				004358 AF                  B   640    				xor a
004359 C9                  B   641    				ret
00435A C9                  B   642    				ret
                           B   643    
                           B   644    
                           B   645    ;----------------------------------------------
                           B   646    				
                           B   647    				
00435B                     B   648    hwsc_disable_audio
                           B   649    
00435B AF                  B   650    				xor a
00435C 320314FF            B   651    				ld (hw_audio_registers+3),a		                           B   652    				
004360 DD210014 FF         B   653    				ld ix,hw_audio_registers		004365 0608                B   654    				ld b,8
004367 11000000            B   655    				ld de,0
00436B DD1F0C              B   656    disaud_lp		ld (ix+0ch),de
00436E ED3220              B   657    				lea ix,ix+020h
004371 10 F8               B   658    				djnz disaud_lp
004373 C9                  B   659    				ret
                           B   660    				
                           B   661    ;----------------------------------------------
                           B   662    
004374                     B   663    hwsc_get_joysticks
                           B   664    
004374 ED389E              B   665    				in0 a,(PC_DR)				
004377 2F                  B   666    				cpl
004378 47                  B   667    				ld b,a
004379 E60F                B   668    				and 0fh
00437B 5F                  B   669    				ld e,a
00437C 78                  B   670    				ld a,b
00437D 0F                  B   671    				rrca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00437E 0F                  B   672    				rrca
00437F 0F                  B   673    				rrca
004380 0F                  B   674    				rrca
004381 E60F                B   675    				and 0fh
004383 57                  B   676    				ld d,a
                           B   677    				
004384 ED38A2              B   678    				in0 a,(PD_DR)	
004387 CB67                B   679    				bit 4,a						; f
004389 20 02               B   680    				jr nz,noj1b1
00438B CBEA                B   681    				set 5,d
                           B   682    
00438D CB6F                B   683    noj1b1			bit 5,a						; f
00438F 20 02               B   684    				jr nz,noj1b0
004391 CBE2                B   685    				set 4,d
                           B   686    				
004393 CB77                B   687    noj1b0			bit 6,a						; f
004395 20 02               B   688    				jr nz,noj0b1
004397 CBEB                B   689    				set 5,e
                           B   690    
004399 CB7F                B   691    noj0b1			bit 7,a						; f
00439B 20 02               B   692    				jr nz,noj0b0
00439D CBE3                B   693    				set 4,e
                           B   694    
00439F AF                  B   695    noj0b0			xor a
0043A0 C9                  B   696    				ret
                           B   697    				
                           B   698    				
                           B   699    ;----------------------------------------------
                           B   700    			
                           B   701    				
                           B   702    				
                           A  3213    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
0043A1                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
0043A1 D5                  B    13    				push de
0043A2 51                  B    14    				ld d,c
0043A3 E5                  B    15    				push hl
                           B    16    				
0043A4 CD 0E 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		0043A8 BE                  B    18    				cp (hl)							0043A9 28 F9               B    19    				jr z,wait_kbuf		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    20    			
0043AB 01000000            B    21    new_key			ld bc,0							0043AF 4F                  B    22    				ld c,a
0043B0 21 F2 61 00         B    23    				ld hl,scancode_buffer	
0043B4 09                  B    24    				add hl,bc
0043B5 7E                  B    25    				ld a,(hl)						                           B    26    
0043B6 0E10                B    27    				ld c,16
0043B8 09                  B    28    				add hl,bc						0043B9 4F                  B    29    				ld c,a							0043BA 7E                  B    30    				ld a,(hl)						                           B    31    
0043BB 1E00                B    32    				ld e,0							0043BD 21 4D 5D 00         B    33    				ld hl,unshifted_keymap			                           B    34    
0043C1 CB4F                B    35    				bit 1,a
0043C3 28 04               B    36    				jr z,not_ctrl					0043C5 1E60                B    37    				ld e,96							0043C7 18 16               B    38    				jr got_keymap					                           B    39    							
0043C9 CB47                B    40    not_ctrl		bit 0,a
0043CB 20 04               B    41    				jr nz,shifted
0043CD CB67                B    42    				bit 4,a
0043CF 28 06               B    43    				jr z,not_shifted
0043D1 21 AF 5D 00         B    44    shifted			ld hl,shifted_keymap			0043D5 18 08               B    45    				jr got_keymap
                           B    46    				
0043D7 CB5F                B    47    not_shifted		bit 3,a
0043D9 28 04               B    48    				jr z,got_keymap	
0043DB 21 11 5E 00         B    49    				ld hl,alted_keymap				                           B    50    
0043DF 79                  B    51    got_keymap		ld a,c							0043E0 FE62                B    52    				cp 062h
0043E2 30 07               B    53    				jr nc,gotkdone
0043E4 09                  B    54    				add hl,bc						0043E5 7E                  B    55    				ld a,(hl)						0043E6 93                  B    56    				sub a,e							0043E7 30 01               B    57    				jr nc,subkey_ok	
0043E9 AF                  B    58    				xor a							0043EA 47                  B    59    subkey_ok		ld b,a
                           B    60    				
0043EB 3A 13 62 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			0043EF 3C                  B    62    				inc a							0043F0 E60F                B    63    				and 15
0043F2 32 13 62 00         B    64    				ld (key_buf_rd_idx),a			0043F6 79                  B    65    				ld a,c							0043F7 E1                  B    66    				pop hl
0043F8 4A                  B    67    				ld c,d
0043F9 D1                  B    68    				pop de
0043FA BF                  B    69    				cp a							0043FB C9                  B    70    				ret
                           B    71    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
0043FC                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
0043FC D5                  B    82    				push de
0043FD 51                  B    83    				ld d,c
0043FE E5                  B    84    				push hl
0043FF CD 0E 44 00         B    85    				call get_kb_buffer_indexes		004403 BE                  B    86    				cp (hl)							004404 20 A5               B    87    				jr nz,new_key					004406 3E81                B    88    				ld a,81h			
004408 47                  B    89    				ld b,a
004409 B7                  B    90    				or a
00440A E1                  B    91    				pop hl
00440B 4A                  B    92    				ld c,d
00440C D1                  B    93    				pop de
00440D C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
00440E                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
00440E 21 12 62 00         B   101    				ld hl,key_buf_wr_idx			004412 3A 13 62 00         B   102    				ld a,(key_buf_rd_idx)			004416 C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004417                     B    21    serial_get_header
                           B    22    
004417 32 D1 5E 00         B    23    				ld (serial_timeout),a			00441B 22 BB 5E 00         B    24    				ld (serial_fn_addr),hl
00441F CD 80 3D 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004423 CD 06 45 00         B    27    				call s_getblock					004427 28 0C               B    28    				jr z,s_gbfhok					004429 F5                  B    29    				push af							00442A 3A F2 5E 00         B    30    				ld a,(serial_transfer_started)
00442E B7                  B    31    				or a							00442F C4 6D 45 00         B    32    				call nz,s_badack				004433 F1                  B    33    				pop af
004434 C9                  B    34    				ret
                           B    35    	
004435 21 E6 5E 00         B    36    s_gbfhok		ld hl,serial_header_id			004439 11 46 66 00         B    37    				ld de,sector_buffer+20			00443D 060C                B    38    				ld b,12
00443F CD EA 11 00         B    39    				call os_compare_strings
004443 20 0F               B    40    				jr nz,s_nfhdr
004445 06E0                B    41    				ld b,256-32						004447 21 52 66 00         B    42    				ld hl,sector_buffer+32
00444B 7E                  B    43    s_chdr			ld a,(hl)
00444C 23                  B    44    				inc hl
00444D B7                  B    45    				or a
00444E 20 04               B    46    				jr nz,s_nfhdr
004450 10 F9               B    47    				djnz s_chdr
004452 18 08               B    48    				jr s_fhcsok
                           B    49    				
004454 CD 6D 45 00         B    50    s_nfhdr			call s_badack					004458 3E85                B    51    				ld a,085h						00445A B7                  B    52    				or a
00445B C9                  B    53    				ret
                           B    54    		
00445C 21 42 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			004460 11 E2 5E 00         B    56    				ld de,serial_fileheader+16
004464 01040000            B    57    				ld bc,4
004468 EDB0                B    58    				ldir
                           B    59    				
00446A 21 32 66 00         B    60    				ld hl,sector_buffer
00446E 11 D2 5E 00         B    61    				ld de,serial_fileheader			004472 0610                B    62    				ld b,16							004474 7E                  B    63    s_tuclp			ld a,(hl)						004475 B7                  B    64    				or a
004476 28 0B               B    65    				jr z,s_ffhswz	
004478 CD 24 12 00         B    66    				call os_uppercasify
00447C 12                  B    67    				ld (de),a
00447D 23                  B    68    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00447E 13                  B    69    				inc de
00447F 10 F3               B    70    				djnz s_tuclp
004481 18 04               B    71    				jr s_tucdone
004483 12                  B    72    s_ffhswz		ld (de),a
004484 13                  B    73    				inc de
004485 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004487 2A BB 5E 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			00448B 7E                  B    77    				ld a,(hl)
00448C FE2A                B    78    				cp '*'
00448E 28 14               B    79    				jr z,s_rffns					004490 11 D2 5E 00         B    80    				ld de,serial_fileheader
004494 0610                B    81    				ld b,16
004496 CD EA 11 00         B    82    				call os_compare_strings
00449A 28 08               B    83    				jr z,s_rffns
00449C CD 6D 45 00         B    84    s_rfnbad		call s_badack
0044A0 3E87                B    85    				ld a,087h						0044A2 B7                  B    86    				or a
0044A3 C9                  B    87    				ret
                           B    88    				
0044A4 DD21 D2 5E 00       B    89    s_rffns			ld ix,serial_fileheader			0044A9 AF                  B    90    				xor a
0044AA C9                  B    91    				ret
                           B    92    
0044AB F5                  B    93    s_fail			push af				
0044AC CD 6D 45 00         B    94    				call s_badack		 
0044B0 F1                  B    95    				pop af
0044B1 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
0044B2                     B   114    serial_receive_file
                           B   115    
0044B2 3E0A                B   116    				ld a,10							0044B4 32 D1 5E 00         B   117    				ld (serial_timeout),a
0044B8 E5                  B   118    				push hl
0044B9 CD 5C 45 00         B   119    				call s_goodack					0044BD DDE1                B   120    				pop ix							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044BF ED5B E2 5E 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
0044C4 CD 06 45 00         B   123    s_gbloop		call s_getblock
0044C8 20 E1               B   124    				jr nz,s_fail
0044CA 0E00                B   125    				ld c,0							0044CC FD21 32 66 00       B   126    				ld iy,sector_buffer
0044D1 FD7E00              B   127    s_rfloop		ld a,(iy)
0044D4 DD7700              B   128    				ld (ix),a						0044D7 1B                  B   129    				dec de							0044D8 21000000            B   130    				ld hl,0
0044DC AF                  B   131    				xor a
0044DD ED5A                B   132    				adc hl,de						0044DF 28 1A               B   133    				jr z,s_rfabr					0044E1 C5                  B   134    				push bc
0044E2 01010000            B   135    				ld bc,1
0044E6 DD09                B   136    				add ix,bc						0044E8 C1                  B   137    				pop bc
0044E9 30 05               B   138    				jr nc,s_nbt
0044EB 3E84                B   139    				ld a,84h						0044ED B7                  B   140    				or a
0044EE 18 BB               B   141    				jr s_fail
0044F0 FD23                B   142    s_nbt			inc iy
0044F2 0D                  B   143    				dec c
0044F3 20 DC               B   144    				jr nz,s_rfloop
0044F5 CD 5C 45 00         B   145    				call s_goodack					0044F9 18 C9               B   146    				jr s_gbloop
                           B   147    			
0044FB CD 5C 45 00         B   148    s_rfabr			call s_goodack					0044FF DD21 D2 5E 00       B   149    				ld ix,serial_fileheader			004504 AF                  B   150    				xor a							004505 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004506                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004506 AF                  B   159    				xor a
004507 32 F2 5E 00         B   160    				ld (serial_transfer_started),a	00450B E5                  B   161    				push hl							00450C D5                  B   162    				push de
00450D C5                  B   163    				push bc
00450E 21 32 66 00         B   164    				ld hl,sector_buffer				004512 0600                B   165    				ld b,0
004514 D9                  B   166    				exx
004515 21FFFF00            B   167    				ld hl,0ffffh					004519 D9                  B   168    				exx
00451A CD 2A 3D 00         B   169    s_lgb			call receive_serial_byte
00451E 20 38               B   170    				jr nz,s_gberr					004520 F5                  B   171    				push af
004521 3E01                B   172    				ld a,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004523 32 F2 5E 00         B   173    				ld (serial_transfer_started),a
004527 F1                  B   174    				pop af
004528 77                  B   175    				ld (hl),a
004529 D9                  B   176    				exx
00452A AC                  B   177    				xor h							00452B 67                  B   178    				ld h,a			
00452C 0608                B   179    				ld b,8
00452E 4029                B   180    rxcrcbyte		add.sis hl,hl					004530 30 08               B   181    				jr nc,rxcrcnext
004532 7C                  B   182    				ld a,h
004533 EE10                B   183    				xor 10h
004535 67                  B   184    				ld h,a
004536 7D                  B   185    				ld a,l
004537 EE21                B   186    				xor 21h
004539 6F                  B   187    				ld l,a
00453A 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
00453C D9                  B   189    				exx
00453D 23                  B   190    				inc hl
00453E 10 DA               B   191    				djnz s_lgb
004540 D9                  B   192    				exx								                           B   193    			
004541 CD 2A 3D 00         B   194    				call receive_serial_byte		004545 20 11               B   195    				jr nz,s_gberr
004547 4F                  B   196    				ld c,a
004548 CD 2A 3D 00         B   197    				call receive_serial_byte
00454C 20 0A               B   198    				jr nz,s_gberr		
00454E 47                  B   199    				ld b,a
                           B   200    				
00454F AF                  B   201    				xor a							004550 52ED42              B   202    				sbc.s hl,bc						004553 28 03               B   203    				jr z,s_gberr
                           B   204    			
004555 3E86                B   205    				ld a,86h						004557 B7                  B   206    				or a							004558 C1                  B   207    s_gberr			pop bc
004559 D1                  B   208    				pop de
00455A E1                  B   209    				pop hl
00455B C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
00455C C5                  B   214    s_goodack		push bc
00455D 014F4B00            B   215    				ld bc,04b4fh					004561 79                  B   216    ackbytes		ld a,c
004562 CD 65 3D 00         B   217    				call send_serial_byte
004566 78                  B   218    				ld a,b
004567 CD 65 3D 00         B   219    				call send_serial_byte
00456B C1                  B   220    				pop bc
00456C C9                  B   221    				ret
                           B   222    
00456D C5                  B   223    s_badack		push bc
00456E 01585800            B   224    				ld bc,05858h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004572 18 ED               B   225    				jr ackbytes
                           B   226    
004574 C5                  B   227    s_holdack		push bc
004575 01575700            B   228    				ld bc,05757h					004579 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
00457B                     B   249    serial_send_file
                           B   250    			
00457B 3E01                B   251    				ld a,1							00457D 32 D1 5E 00         B   252    				ld (serial_timeout),a
                           B   253    			
004581 DD22 B5 5E 00       B   254    				ld (serial_ez80_address),ix
004586 ED53 E2 5E 00       B   255    				ld (serial_fileheader+10h),de	00458B E5                  B   256    				push hl
00458C 21000000            B   257    				ld hl,0
004590 AF                  B   258    				xor a
004591 ED5A                B   259    				adc hl,de
004593 20 05               B   260    				jr nz,s_flok
004595 E1                  B   261    				pop hl
004596 3E81                B   262    				ld a,081h						004598 B7                  B   263    				or a							004599 C9                  B   264    				ret
                           B   265    			
00459A 21 D2 5E 00         B   266    s_flok			ld hl,serial_fileheader			00459E 01100000            B   267    				ld bc,16
0045A2 AF                  B   268    				xor a
0045A3 CD 87 15 00         B   269    				call os_bchl_memfill
0045A7 E1                  B   270    				pop hl							0045A8 11 D2 5E 00         B   271    				ld de,serial_fileheader
0045AC 0610                B   272    				ld b,16
0045AE CD 09 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
0045B2 21 E6 5E 00         B   275    				ld hl,serial_header_id			0045B6 11 E6 5E 00         B   276    				ld de,serial_fileheader+014h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045BA 010C0000            B   277    				ld bc,12		
0045BE EDB0                B   278    				ldir
                           B   279    			
0045C0 DD21 D2 5E 00       B   280    				ld ix,serial_fileheader			0045C5 11200000            B   281    				ld de,32
0045C9 CD FF 45 00         B   282    				call s_makeblock			
0045CD C0                  B   283    				ret nz
0045CE CD 37 46 00         B   284    				call s_sendblock
0045D2 C0                  B   285    				ret nz
0045D3 CD 64 46 00         B   286    				call s_waitack					0045D7 C0                  B   287    				ret nz							                           B   288    				
0045D8 DD2A B5 5E 00       B   289    				ld ix,(serial_ez80_address)
0045DD ED5B E2 5E 00       B   290    				ld de,(serial_fileheader+16)	0045E2 CD FF 45 00         B   291    s_sbloop		call s_makeblock				0045E6 38 16               B   292    				jr c,s_rerr
0045E8 CD 37 46 00         B   293    				call s_sendblock				0045EC 38 10               B   294    				jr c,s_rerr	
0045EE CD 64 46 00         B   295    				call s_waitack					0045F2 38 0A               B   296    				jr c,s_rerr
0045F4 21000000            B   297    				ld hl,0
0045F8 AF                  B   298    				xor a
0045F9 ED5A                B   299    				adc hl,de
0045FB 20 E5               B   300    				jr nz,s_sbloop					0045FD AF                  B   301    				xor a							0045FE C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0045FF                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0045FF 21 32 66 00         B   312    				ld hl,sector_buffer				004603 01000100            B   313    				ld bc,256						004607 AF                  B   314    				xor a							004608 CD 87 15 00         B   315    				call os_bchl_memfill			                           B   316    				
00460C 0600                B   317    				ld b,0							00460E FD21 32 66 00       B   318    				ld iy,sector_buffer	
004613 DD7E00              B   319    s_sloop			ld a,(ix)
004616 FD7700              B   320    				ld (iy),a
004619 1B                  B   321    				dec de							00461A 21000000            B   322    				ld hl,0
00461E AF                  B   323    				xor a
00461F ED5A                B   324    				adc hl,de
004621 28 12               B   325    				jr z,s_mbend	
004623 FD23                B   326    				inc iy							004625 C5                  B   327    				push bc
004626 01010000            B   328    				ld bc,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00462A DD09                B   329    				add ix,bc						00462C C1                  B   330    				pop bc							00462D 20 04               B   331    				jr nz,s_sbok
00462F 3E84                B   332    				ld a,84h						004631 B7                  B   333    				or a
004632 C9                  B   334    				ret
004633 10 DE               B   335    s_sbok			djnz s_sloop
004635 AF                  B   336    s_mbend			xor a
004636 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004637                     B   341    s_sendblock
                           B   342    
004637 E5                  B   343    				push hl
004638 D5                  B   344    				push de							004639 C5                  B   345    				push bc				
00463A 21 32 66 00         B   346    				ld hl,sector_buffer			
00463E 1E00                B   347    				ld e,0
004640 7E                  B   348    s_sblklp		ld a,(hl)
004641 CD 65 3D 00         B   349    				call send_serial_byte
004645 23                  B   350    				inc hl
004646 1D                  B   351    				dec e
004647 20 F7               B   352    				jr nz,s_sblklp
004649 11 32 66 00         B   353    				ld de,sector_buffer
00464D 01000000            B   354    				ld bc,0
004651 CD 2D 15 00         B   355    				call crc_checksum
004655 7D                  B   356    				ld a,l
004656 CD 65 3D 00         B   357    				call send_serial_byte
00465A 7C                  B   358    				ld a,h
00465B CD 65 3D 00         B   359    				call send_serial_byte
00465F AF                  B   360    				xor a
004660 C1                  B   361    s_popall		pop bc
004661 D1                  B   362    				pop de
004662 E1                  B   363    				pop hl
004663 C9                  B   364    				ret
                           B   365    	
                           B   366    
004664                     B   367    s_waitack
004664 E5                  B   368    				push hl
004665 D5                  B   369    				push de
004666 C5                  B   370    				push bc
004667 CD 2A 3D 00         B   371    				call receive_serial_byte		00466B 20 F3               B   372    				jr nz,s_popall
00466D 47                  B   373    				ld b,a
00466E CD 2A 3D 00         B   374    				call receive_serial_byte
004672 20 EC               B   375    				jr nz,s_popall
004674 4F                  B   376    				ld c,a
004675 264F                B   377    				ld h,'O'
004677 2E4B                B   378    				ld l,'K'
004679 AF                  B   379    				xor a
00467A 52ED42              B   380    				sbc.s hl,bc						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00467D 28 E1               B   381    				jr z,s_popall					                           B   382    			
00467F 3E85                B   383    				ld a,085h						004681 B7                  B   384    				or a
004682 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
004684                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
004684 3A 03 5F 00         B    57    				ld a,(device_count)				004688 47                  B    58    				ld b,a							004689 DD21 B3 5F 00       B    59    				ld ix,host_device_hardware_info
00468E 3A 02 5F 00         B    60    fdevinfo		ld a,(current_driver)
004692 DDBE00              B    61    				cp (ix)
004695 28 09               B    62    				jr z,got_dev_info
004697 ED3220              B    63    				lea ix,ix+32
00469A 10 F2               B    64    				djnz fdevinfo
00469C AF                  B    65    				xor a
00469D 3ED0                B    66    				ld a,0d0h						00469F C9                  B    67    				ret	
                           B    68    	
0046A0 CD 33 51 00         B    69    got_dev_info	call fs_clear_sector_buffer		0046A4 11000000            B    70    				ld de,0							0046A8 CD 98 47 00         B    71    form_ws			call set_lba_and_write_sector
0046AC D8                  B    72    				ret c
0046AD 13                  B    73    				inc de
0046AE 7A                  B    74    				ld a,d
0046AF FE03                B    75    				cp 3
0046B1 20 F5               B    76    				jr nz,form_ws
                           B    77    	
0046B3 21 E1 53 00         B    78    				ld hl,bootsector_stub			0046B7 11 32 66 00         B    79    				ld de,sector_buffer				0046BB 013F0000            B    80    				ld bc,03fh
0046BF EDB0                B    81    				ldir
                           B    82    	
0046C1 DD7E04              B    83    				ld a,(ix+4)						0046C4 B7                  B    84    				or a
0046C5 20 0C               B    85    				jr nz,above_2gb
0046C7 2100FF3F            B    86    				ld hl,3fff00h					0046CB DD1701              B    87    				ld de,(ix+1)					0046CE AF                  B    88    				xor a			
0046CF ED52                B    89    				sbc hl,de						0046D1 30 08               B    90    				jr nc,lessthan2gb				0046D3 3E40                B    91    above_2gb		ld a,40h						0046D5 1100FF3F            B    92    				ld de,3fff00h					0046D9 18 11               B    93    				jr spcvalok
                           B    94    
0046DB DD4E03              B    95    lessthan2gb		ld c,(ix+3)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0046DE 0C                  B    96    				inc c							0046DF 3E01                B    97    spc_loop		ld a,1							0046E1 B9                  B    98    spc_comp		cp c							0046E2 28 08               B    99    				jr z,spcvalok
0046E4 07                  B   100    				rlca
0046E5 FE80                B   101    				cp 080h							0046E7 20 F8               B   102    				jr nz,spc_comp
0046E9 0C                  B   103    				inc c			
0046EA 18 F3               B   104    				jr spc_loop						                           B   105    							
0046EC DD21 32 66 00       B   106    spcvalok		ld ix,sector_buffer
0046F1 DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
0046F4 CD A4 15 00         B   109    				call os_get_xde_msb				0046F8 4F                  B   110    				ld c,a							0046F9 B7                  B   111    				or a							0046FA 20 08               B   112    				jr nz,ts_dword					0046FC DD7313              B   113    				ld (ix+13h),e					0046FF DD7214              B   114    				ld (ix+14h),d
004702 18 07               B   115    				jr ts_done
004704 DD1F20              B   116    ts_dword		ld (ix+20h),de					004707 DD362300            B   117    				ld (ix+23h),0
                           B   118    
00470B EB                  B   119    ts_done			ex de,hl						00470C 11000000            B   120    				ld de,0						
004710 DD560D              B   121    				ld d,(ix+0dh)					004713 01000000            B   122    				ld bc,0							004717 AF                  B   123    div_tscls		xor a							004718 ED52                B   124    				sbc hl,de
00471A 28 05               B   125    				jr z,gotfats
00471C 38 03               B   126    				jr c,gotfats	
00471E 03                  B   127    				inc bc
00471F 18 F6               B   128    				jr div_tscls
004721 03                  B   129    gotfats			inc bc
004722 DD7116              B   130    				ld (ix+16h),c					004725 DD7017              B   131    				ld (ix+17h),b
004728 ED43 31 54 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
00472D 010055AA            B   134    				ld bc,0aa5500h
004731 ED43 2F 68 00       B   135    				ld (sector_buffer+1fdh),bc		004736 11000000            B   136    				ld de,0
00473A CD 98 47 00         B   137    				call set_lba_and_write_sector	00473E D8                  B   138    				ret c
                           B   139    				
00473F 21000000            B   140    				ld hl,0
004743 DD6E0E              B   141    				ld l,(ix+0eh)					004746 DD660F              B   142    				ld h,(ix+0fh)
004749 19                  B   143    				add hl,de
00474A EB                  B   144    				ex de,hl						                           B   145    				
00474B CD 33 51 00         B   146    				call fs_clear_sector_buffer		00474F DD3600FF            B   147    				ld (ix+0),0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004753 DD3601F8            B   148    				ld (ix+1),0f8h
004757 DD3602FF            B   149    				ld (ix+2),0ffh
00475B DD3603FF            B   150    				ld (ix+3),0ffh
00475F CD 98 47 00         B   151    				call set_lba_and_write_sector	004763 D8                  B   152    				ret c
                           B   153    
004764 2A 31 54 00         B   154    				ld hl,(fs_sectors_per_fat)	
004768 19                  B   155    				add hl,de
004769 EB                  B   156    				ex de,hl
00476A CD 98 47 00         B   157    				call set_lba_and_write_sector 	00476E D8                  B   158    				ret c	
                           B   159    				
00476F D5                  B   160    				push de							004770 CD 33 51 00         B   161    				call fs_clear_sector_buffer
004774 21 37 54 00         B   162    				ld hl,fs_sought_filename
004778 11 32 66 00         B   163    				ld de,sector_buffer
00477C 010B0000            B   164    				ld bc,11
004780 EDB0                B   165    				ldir							004782 D1                  B   166    				pop de							004783 DD360B08            B   167    				ld (ix+0bh),8					004787 DD361821            B   168    				ld (ix+018h),021h				00478B 2A 31 54 00         B   169    				ld hl,(fs_sectors_per_fat)		00478F 19                  B   170    				add hl,de
004790 EB                  B   171    				ex de,hl
004791 CD 98 47 00         B   172    				call set_lba_and_write_sector	004795 D8                  B   173    				ret c	
                           B   174    			
004796 AF                  B   175    				xor a							004797 C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
004798                     B   180    set_lba_and_write_sector
                           B   181    
004798 DDE5                B   182    				push ix
00479A DD21 DE 60 00       B   183    				ld ix,sector_lba0				00479F DD1F00              B   184    				ld (ix),de						0047A2 DD360300            B   185    				ld (ix+3),0
0047A6 DDE1                B   186    				pop ix
0047A8 CD C5 53 00         B   187    				call fs_write_sector
0047AC C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
0047AD                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   200    
                           B   201    
0047AD 32 36 60 00         B   202    				ld (partition_temp),a
                           B   203    				
0047B1 21000000            B   204    				ld hl,0							0047B5 22 DE 60 00         B   205    				ld (sector_lba0),hl
0047B9 7D                  B   206    				ld a,l
0047BA 32 E1 60 00         B   207    				ld (sector_lba3),a
0047BE CD AD 53 00         B   208    				call fs_read_sector
0047C2 D8                  B   209    				ret c
                           B   210    			
0047C3 CD FE 47 00         B   211    				call fs_check_fat_sig			0047C7 20 42               B   212    				jr nz,formbad
                           B   213    			
0047C9 CD EF 47 00         B   214    				call check_fat16_id				0047CD 28 1C               B   215    				jr z,at_pbs						                           B   216    				
0047CF 3A F4 67 00         B   217    				ld a,(sector_buffer+01c2h)		0047D3 E604                B   218    				and 4							0047D5 28 34               B   219    				jr z,formbad	
0047D7 11000000            B   220    				ld de,0
0047DB 3A 36 60 00         B   221    				ld a,(partition_temp)
0047DF 5F                  B   222    				ld e,a
0047E0 1610                B   223    				ld d,16
0047E2 ED5C                B   224    				mlt de
0047E4 21 F0 67 00         B   225    				ld hl,sector_buffer+01beh
0047E8 19                  B   226    				add hl,de						0047E9 AF                  B   227    				xor a
0047EA C9                  B   228    				ret
                           B   229    					
0047EB AF                  B   230    at_pbs			xor a
0047EC 3ED3                B   231    				ld a,0d3h						0047EE C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
0047EF                     B   236    check_fat16_id
                           B   237    		
0047EF 21 68 66 00         B   238    				ld hl,sector_buffer+036h		0047F3 11 02 59 00         B   239    				ld de,fat16_txt			
0047F7 0605                B   240    				ld b,5
0047F9 CD EA 11 00         B   241    				call os_compare_strings
0047FD C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
0047FE                     B   247    fs_check_fat_sig
                           B   248    
0047FE 2A 30 68 00         B   249    				ld hl,(sector_buffer+01feh)		004802 1155AA00            B   250    				ld de,0aa55h
004806 AF                  B   251    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004807 52ED52              B   252    				sbc.s hl,de						00480A C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
00480B AF                  B   257    formbad			xor a
00480C 3ECE                B   258    				ld a,0ceh						00480E C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
00480F                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
00480F C5                  B   268    				push bc
004810 D5                  B   269    				push de
004811 E5                  B   270    				push hl
004812 CD 1A 48 00         B   271    				call go_checkf
004816 E1                  B   272    				pop hl
004817 D1                  B   273    				pop de
004818 C1                  B   274    				pop bc
004819 C9                  B   275    				ret
                           B   276    				
00481A CD A5 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
00481E 21 33 5F 00         B   278    				ld hl,volume_mount_list
004822 19                  B   279    				add hl,de
004823 7E                  B   280    				ld a,(hl)
004824 B7                  B   281    				or a							004825 20 04               B   282    				jr nz,fs_volpre
004827 AF                  B   283    				xor a
004828 3ECF                B   284    				ld a,cfh						00482A C9                  B   285    				ret
                           B   286    			
00482B 11080000            B   287    fs_volpre		ld de,8							00482F 19                  B   288    				add hl,de
004830 11 DE 60 00         B   289    				ld de,sector_lba0
004834 01040000            B   290    				ld bc,4
004838 EDB0                B   291    				ldir
00483A CD AD 53 00         B   292    				call fs_read_sector
00483E D8                  B   293    				ret c	
                           B   294    				
00483F CD FE 47 00         B   295    				call fs_check_fat_sig			004843 20 C6               B   296    				jr nz,formbad		
                           B   297    			
004845 CD EF 47 00         B   298    				call check_fat16_id				004849 20 C0               B   299    				jr nz,formbad
                           B   300    			
00484B DD21 32 66 00       B   301    				ld ix,sector_buffer
004850 DD270B              B   302    				ld hl,(ix+0bh)					004853 11000200            B   303    				ld de,512						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004857 AF                  B   304    				xor a
004858 52ED52              B   305    				sbc.s hl,de						00485B 20 AE               B   306    				jr nz,formbad
                           B   307    			
00485D DD7E0D              B   308    				ld a,(ix+0dh)					004860 32 20 54 00         B   309    				ld (fs_cluster_size),a
004864 CB27                B   310    				sla a
004866 32 22 54 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
00486A 21000000            B   313    				ld hl,0
00486E DD6E0E              B   314    				ld l,(ix+0eh)					004871 DD660F              B   315    				ld h,(ix+0fh)
004874 22 24 54 00         B   316    				ld (fs_fat1_position),hl		004878 11000000            B   317    				ld de,0
00487C DD5E16              B   318    				ld e,(ix+16h)					00487F DD5617              B   319    				ld d,(ix+17h)
004882 ED53 31 54 00       B   320    				ld (fs_sectors_per_fat),de
004887 19                  B   321    				add hl,de
004888 22 27 54 00         B   322    				ld (fs_fat2_position),hl		00488C 19                  B   323    				add hl,de
00488D 22 2A 54 00         B   324    				ld (fs_root_dir_position),hl 	004891 EB                  B   325    				ex de,hl
004892 DD6E11              B   326    				ld l,(ix+11h)					004895 DD6612              B   327    				ld h,(ix+12h)					004898 7C                  B   328    				ld a,h
004899 B5                  B   329    				or l
00489A CA 0B 48 00         B   330    				jr z,formbad					00489E 29                  B   331    				add hl,hl						00489F 29                  B   332    				add hl,hl						0048A0 29                  B   333    				add hl,hl
0048A1 29                  B   334    				add hl,hl
0048A2 EB                  B   335    				ex de,hl
0048A3 7A                  B   336    				ld a,d
0048A4 32 30 54 00         B   337    				ld (fs_root_dir_sectors),a		0048A8 01000000            B   338    				ld bc,0
0048AC 4A                  B   339    				ld c,d
0048AD 09                  B   340    				add hl,bc				
0048AE 22 2D 54 00         B   341    				ld (fs_data_area),hl			                           B   342    												0048B2 21000000            B   343    				ld hl,0
0048B6 01000000            B   344    				ld bc,0
0048BA DD4E22              B   345    				ld c,(ix+022h)					0048BD DD4623              B   346    				ld b,(ix+023h)
0048C0 DD6E13              B   347    				ld l,(ix+013h)					0048C3 DD6614              B   348    				ld h,(ix+014h)
0048C6 7C                  B   349    				ld a,h							0048C7 B5                  B   350    				or l
0048C8 20 06               B   351    				jr nz,got_tsfbs
0048CA DD6E20              B   352    				ld l,(ix+020h)					0048CD DD6621              B   353    				ld h,(ix+021h)
0048D0 ED5B 2D 54 00       B   354    got_tsfbs 		ld de,(fs_data_area)
0048D5 AF                  B   355    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048D6 52ED52              B   356    				sbc.s hl,de						0048D9 30 02               B   357    				jr nc,nomxcb
0048DB 520B                B   358    				dec.s bc
0048DD 3A 20 54 00         B   359    nomxcb			ld a,(fs_cluster_size)
0048E1 CB3F                B   360    fmaxcl			srl a
0048E3 28 08               B   361    				jr z,got_cmaxc					0048E5 CB39                B   362    				srl c				
0048E7 CB1C                B   363    				rr h
0048E9 CB1D                B   364    				rr l
0048EB 18 F4               B   365    				jr fmaxcl
0048ED E5                  B   366    got_cmaxc		push hl							0048EE 11F0FF00            B   367    				ld de,0fff0h
0048F2 AF                  B   368    				xor a
0048F3 52ED52              B   369    				sbc.s hl,de						0048F6 38 02               B   370    				jr c,cmaxok
0048F8 E1                  B   371    				pop hl
0048F9 D5                  B   372    				push de
0048FA E1                  B   373    cmaxok			pop hl
0048FB 22 34 54 00         B   374    				ld (fs_max_data_clusters),hl
0048FF AF                  B   375    				xor a
004900 C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
004901                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
004901 ED5B 34 54 00       B   384    				ld de,(fs_max_data_clusters)
004906 13                  B   385    				inc de
004907 13                  B   386    				inc de							004908 D5                  B   387    				push de
004909 DDE1                B   388    				pop ix
                           B   389    			
00490B AF                  B   390    				xor a
00490C 32 79 54 00         B   391    cfs_lp2			ld (fs_working_sector),a
004910 2A 24 54 00         B   392    				ld hl,(fs_fat1_position)
004914 CD 83 53 00         B   393    				call set_abs_lba_and_read_secto
004918 D8                  B   394    				ret c
                           B   395    				
004919 21 32 66 00         B   396    				ld hl,sector_buffer
00491D 0600                B   397    				ld b,0
00491F AF                  B   398    cfs_lp1			xor a
004920 B6                  B   399    				or a,(hl)						004921 23                  B   400    				inc hl							004922 20 03               B   401    				jr nz,cfs_ciu					004924 B6                  B   402    				or a,(hl)
004925 28 02               B   403    				jr z,cfs_ddcc
004927 DD2B                B   404    cfs_ciu			dec ix							004929 23                  B   405    cfs_ddcc		inc hl
00492A 1B                  B   406    				dec de
00492B 7A                  B   407    				ld a,d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00492C B3                  B   408    				or e
00492D 28 09               B   409    				jr z,cfs_ok						00492F 10 EE               B   410    				djnz cfs_lp1
004931 3A 79 54 00         B   411    				ld a,(fs_working_sector)
004935 3C                  B   412    				inc a
004936 18 D4               B   413    				jr cfs_lp2
                           B   414    				
004938 3A 20 54 00         B   415    cfs_ok			ld a,(fs_cluster_size)			00493C CB3F                B   416    cltoslp			srl a
00493E 28 04               B   417    				jr z,powdone
004940 DD29                B   418    				add ix,ix
004942 18 F8               B   419    				jr cltoslp	
004944 FD21 FA 60 00       B   420    powdone			ld iy,xrr_temp
004949 FD3E00              B   421    				ld (iy),ix						00494C FDCB023E            B   422    				srl (iy+2)
004950 FDCB011E            B   423    				rr (iy+1)
004954 FDCB001E            B   424    				rr (iy+0)						004958 FD1700              B   425    				ld de,(iy)						00495B AF                  B   426    				xor a
00495C C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
00495D                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
00495D CD 45 51 00         B   436    				call fs_find_filename			004961 D8                  B   437    				ret c							004962 FEC2                B   438    				cp 0c2h							004964 20 04               B   439    				jr nz,founddir
004966 AF                  B   440    				xor a							004967 3ED1                B   441    				ld a,0d1h						004969 C9                  B   442    				ret
00496A AF                  B   443    founddir		xor a							00496B 3E04                B   444    				ld a,04h						00496D DDCB0B66            B   445    				bit 4,(ix+0bh)
004971 C8                  B   446    				ret z
004972 11000000            B   447    				ld de,0
004976 DD5E1A              B   448    				ld e,(ix+01ah)
004979 DD561B              B   449    				ld d,(ix+01bh)					00497C CD 77 1A 00         B   450    				call fs_update_dir_cluster
004980 AF                  B   451    				xor a
004981 C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
004982                     B   458    fs_goto_root_dir_command
                           B   459    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004982 D5                  B   460    				push de
004983 11000000            B   461    				ld de,0
004987 CD 77 1A 00         B   462    				call fs_update_dir_cluster
00498B D1                  B   463    				pop de
00498C AF                  B   464    				xor a
00498D C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
00498E                     B   470    fs_parent_dir_command
                           B   471    
00498E CD 6B 1A 00         B   472    				call fs_get_dir_cluster
004992 7A                  B   473    				ld a,d
004993 B3                  B   474    				or e
004994 20 03               B   475    				jr nz,pdnaroot
004996 3ECA                B   476    				ld a,0cah						004998 C9                  B   477    				ret
004999 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					00499D 22 37 54 00         B   479    				ld (fs_sought_filename),hl		0049A1 21 3A 54 00         B   480    				ld hl,fs_sought_filename+3		0049A5 3E20                B   481    				ld a,32
0049A7 01080000            B   482    				ld bc,8
0049AB CD 87 15 00         B   483    				call os_bchl_memfill
0049AF 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
0049B1                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
0049B1 CD 45 51 00         B   497    				call fs_find_filename			0049B5 D8                  B   498    				ret c							0049B6 C0                  B   499    				ret nz							                           B   500    								
0049B7 3EC6                B   501    				ld a,0c6h						0049B9 DDCB0B66            B   502    				bit 4,(ix+0bh)
0049BD C0                  B   503    				ret nz
                           B   504    
0049BE AF                  B   505    				xor a
0049BF 32 8D 54 00         B   506    				ld (fs_filepointer_valid),a		0049C3 21000000            B   507    				ld hl,0
0049C7 22 5B 54 00         B   508    				ld (fs_file_pointer),hl			0049CB 32 5E 54 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
0049CF DD171C              B   511    				ld de,(ix+01ch)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049D2 D5                  B   512    				push de
0049D3 E1                  B   513    				pop hl
0049D4 DD4E1F              B   514    				ld c,(ix+01fh)					0049D7 ED53 5F 54 00       B   515    				ld (fs_file_length),de			0049DC 79                  B   516    				ld a,c
0049DD 32 62 54 00         B   517    				ld (fs_file_length+3),a			0049E1 B7                  B   518    				or a							0049E2 28 04               B   519    				jr z,fs_dflsm					0049E4 21FFFFFF            B   520    				ld hl,0ffffffh
0049E8 22 67 54 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
0049EC 21000000            B   523    				ld hl,0
0049F0 DD6E1A              B   524    				ld l,(ix+01ah)		
0049F3 DD661B              B   525    				ld h,(ix+01bh)
0049F6 22 6A 54 00         B   526    				ld (fs_file_start_cluster),hl	0049FA AF                  B   527    				xor a
0049FB C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
0049FC                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
0049FC 2A 67 54 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
004A00 11000000            B   540    				ld de,0
004A04 AF                  B   541    				xor a
004A05 ED5A                B   542    				adc hl,de
004A07 20 04               B   543    				jr nz,fs_btrok
004A09 AF                  B   544    fs_fliz			xor a							004A0A 3EC7                B   545    				ld a,0c7h						004A0C C9                  B   546    				ret
                           B   547    			 
004A0D 2A 70 54 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			004A11 22 73 54 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
004A15 2A 5F 54 00         B   551    				ld hl,(fs_file_length)			004A19 ED4B 5B 54 00       B   552    				ld bc,(fs_file_pointer)			004A1E 3A 5E 54 00         B   553    				ld a,(fs_file_pointer+3)		004A22 5F                  B   554    				ld e,a
004A23 3A 62 54 00         B   555    				ld a,(fs_file_length+3)
004A27 B7                  B   556    				or a							004A28 ED42                B   557    				sbc hl,bc
004A2A 9B                  B   558    				sbc a,e
004A2B 38 09               B   559    				jr c,fs_fpbad
004A2D 01000000            B   560    				ld bc,0
004A31 AF                  B   561    				xor a
004A32 ED4A                B   562    				adc hl,bc
004A34 20 04               B   563    				jr nz,fs_fpok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A36 AF                  B   564    fs_fpbad		xor a
004A37 3ECC                B   565    				ld a,0cch						004A39 C9                  B   566    				ret
                           B   567    			
                           B   568    	
004A3A 3A 8D 54 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		004A3E B7                  B   570    				or a							004A3F 28 1B               B   571    				jr z,seek_strt
                           B   572    			
004A41 ED5B 73 54 00       B   573    				ld de,(fs_ez80_working_address)
004A46 ED4B 8E 54 00       B   574    				ld bc,(fs_sector_pos_cnt)		004A4B C5                  B   575    				push bc
004A4C ED4B 76 54 00       B   576    				ld bc,(fs_in_sector_offset)
004A51 21 32 68 00         B   577    				ld hl,sector_buffer+0200h		004A55 AF                  B   578    				xor a
004A56 ED42                B   579    				sbc hl,bc		
004A58 C3 E8 4A 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
004A5C 3E01                B   583    seek_strt		ld a,1
004A5E 32 8D 54 00         B   584    				ld (fs_filepointer_valid),a
004A62 2A 6A 54 00         B   585    				ld hl,(fs_file_start_cluster)	004A66 22 6D 54 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
004A6A 3A 5E 54 00         B   588    				ld a,(fs_file_pointer+3)		004A6E 2A 5B 54 00         B   589    				ld hl,(fs_file_pointer)			004A72 ED4B 21 54 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004A77 AF                  B   591    				xor a
004A78 ED42                B   592    				sbc hl,bc						004A7A DE00                B   593    				sbc a,0
004A7C 38 14               B   594    				jr c,fs_fpgbo
004A7E E5                  B   595    fs_fpgnb		push hl				
004A7F 2A 6D 54 00         B   596    				ld hl,(fs_file_working_cluster)
004A83 CD 55 52 00         B   597    				call get_fat_entry_for_cluster
004A87 30 02               B   598    				jr nc,fs_ghok					004A89 E1                  B   599    				pop hl
004A8A C9                  B   600    				ret
004A8B 22 6D 54 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
004A8F E1                  B   602    				pop hl
004A90 18 E0               B   603    				jr fs_fpblp
                           B   604    			
004A92 09                  B   605    fs_fpgbo		add hl,bc						004A93 4C                  B   606    				ld c,h
004A94 CB39                B   607    				srl c							004A96 3A 20 54 00         B   608    				ld a,(fs_cluster_size)
004A9A 91                  B   609    				sub c
004A9B 47                  B   610    				ld b,a							004A9C 7C                  B   611    				ld a,h
004A9D E601                B   612    				and 01h
004A9F 67                  B   613    				ld h,a
004AA0 22 76 54 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004AA4 79                  B   616    fs_flns			ld a,c				
004AA5 2A 6D 54 00         B   617    				ld hl,(fs_file_working_cluster)
004AA9 CD 2C 53 00         B   618    				call cluster_and_offset_to_lba
004AAD CD AD 53 00         B   619    				call fs_read_sector				004AB1 D8                  B   620    				ret c							                           B   621    			
004AB2 C5                  B   622    				push bc							004AB3 11000000            B   623    				ld de,0
004AB7 2A 76 54 00         B   624    				ld hl,(fs_in_sector_offset)		004ABB 5D                  B   625    				ld e,l
004ABC 54                  B   626    				ld d,h
004ABD 21000200            B   627    				ld hl,512
004AC1 AF                  B   628    				xor a
004AC2 ED52                B   629    				sbc hl,de						004AC4 44                  B   630    				ld b,h
004AC5 4D                  B   631    				ld c,l							004AC6 21 32 66 00         B   632    				ld hl,sector_buffer				004ACA 19                  B   633    				add hl,de						004ACB ED5B 73 54 00       B   634    				ld de,(fs_ez80_working_address)
004AD0 EDA0                B   635    fs_cblp			ldi 							                           B   636    
004AD2 7A                  B   637    				ld a,d							004AD3 B3                  B   638    				or e
004AD4 20 0C               B   639    				jr nz,fs_edaok
004AD6 ED53 73 54 00       B   640    				ld (fs_ez80_working_address),de
004ADB 3A 75 54 00         B   641    				ld a,(fs_ez80_working_address+2
004ADF B7                  B   642    				or a
004AE0 28 43               B   643    				jr z,fs_mem_error
                           B   644    
004AE2 CD B5 52 00         B   645    fs_edaok		call transfer_length_countdown	004AE6 28 30               B   646    				jr z,fs_bdld
004AE8 78                  B   647    fs_dadok		ld a,b							004AE9 B1                  B   648    				or c
004AEA 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
004AEC ED43 76 54 00       B   651    				ld (fs_in_sector_offset),bc		004AF1 ED53 73 54 00       B   652    				ld (fs_ez80_working_address),de
004AF6 C1                  B   653    				pop bc							004AF7 0C                  B   654    				inc c							004AF8 10 AA               B   655    				djnz fs_flns					                           B   656    			
004AFA 2A 6D 54 00         B   657    				ld hl,(fs_file_working_cluster)
004AFE CD 55 52 00         B   658    				call get_fat_entry_for_cluster	004B02 D8                  B   659    				ret c							004B03 22 6D 54 00         B   660    				ld (fs_file_working_cluster),hl
004B07 CD FE 4F 00         B   661    				call fs_compare_hl_fff8			004B0B D2 36 4A 00         B   662    				jp nc,fs_fpbad			
004B0F 0E00                B   663    fs_nfbok		ld c,0							004B11 3A 20 54 00         B   664    				ld a,(fs_cluster_size)	
004B15 47                  B   665    				ld b,a							004B16 18 8C               B   666    				jr fs_flns		
                           B   667    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B18 ED43 76 54 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		004B1D C1                  B   669    				pop bc							004B1E ED43 8E 54 00       B   670    				ld (fs_sector_pos_cnt),bc
004B23 AF                  B   671    				xor a							004B24 C9                  B   672    				ret
                           B   673    				
004B25 3EC8                B   674    fs_mem_error	ld a,0c8h						004B27 C1                  B   675    fs_flerr		pop bc
004B28 B7                  B   676    				or a							004B29 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
004B2A                     B   681    fs_make_dir_command		
                           B   682    				
004B2A CD 45 51 00         B   683    				call fs_find_filename			004B2E D8                  B   684    				ret c
004B2F FEC2                B   685    				cp 0c2h							004B31 28 04               B   686    				jr z,mdirfnde
004B33 AF                  B   687    				xor a							004B34 3EC9                B   688    				ld a,0c9h						004B36 C9                  B   689    				ret
                           B   690    			
004B37 CD 0B 50 00         B   691    mdirfnde		call fs_find_free_cluster		004B3B D8                  B   692    				ret c							004B3C C0                  B   693    				ret nz							                           B   694    							
004B3D 2A 7D 54 00         B   695    				ld hl,(fs_free_cluster)
004B41 22 80 54 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
004B45 CD 5C 50 00         B   698    				call fs_find_free_dir_entry		004B49 D8                  B   699    				ret c							004B4A C0                  B   700    				ret nz							                           B   701    			
004B4B DDE5                B   702    				push ix							004B4D D1                  B   703    				pop de
004B4E 21 37 54 00         B   704    				ld hl,fs_sought_filename
004B52 010B0000            B   705    				ld bc,11
004B56 EDB0                B   706    				ldir
004B58 AF                  B   707    				xor a							004B59 0615                B   708    				ld b,21
004B5B 12                  B   709    clrdiren		ld (de),a
004B5C 13                  B   710    				inc de
004B5D 10 FC               B   711    				djnz clrdiren
004B5F DD360B10            B   712    				ld (ix+0bh),010h				004B63 DD361821            B   713    				ld (ix+018h),021h				004B67 ED5B 80 54 00       B   714    				ld de,(fs_new_file_cluster)
004B6C DD731A              B   715    				ld (ix+01ah),e					004B6F DD721B              B   716    				ld (ix+01bh),d
004B72 CD C5 53 00         B   717    				call fs_write_sector			004B76 D8                  B   718    				ret c							                           B   719    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B77 CD 33 51 00         B   720    				call fs_clear_sector_buffer
004B7B DD21 32 66 00       B   721    				ld ix,sector_buffer				004B80 DD36002E            B   722    				ld (ix+00h),02eh				004B84 DD360120            B   723    				ld (ix+01h),020h
004B88 DD36202E            B   724    				ld (ix+020h),02eh
004B8C DD36212E            B   725    				ld (ix+021h),02eh
004B90 DD360B10            B   726    				ld (ix+0bh),010h
004B94 DD362B10            B   727    				ld (ix+02bh),010h
004B98 ED5B 80 54 00       B   728    				ld de,(fs_new_file_cluster)		004B9D DD731A              B   729    				ld (ix+01ah),e
004BA0 DD721B              B   730    				ld (ix+01bh),d
004BA3 CD 6B 1A 00         B   731    				call fs_get_dir_cluster			004BA7 DD733A              B   732    				ld (ix+03ah),e
004BAA DD723B              B   733    				ld (ix+03bh),d
004BAD DD361821            B   734    				ld (ix+018h),021h				004BB1 DD363821            B   735    				ld (ix+038h),021h				004BB5 0609                B   736    				ld b,9
004BB7 DD360220            B   737    mndelp			ld (ix+002h),32
004BBB DD362220            B   738    				ld (ix+022h),32
004BBF DD23                B   739    				inc ix
004BC1 10 F4               B   740    				djnz mndelp
004BC3 2A 80 54 00         B   741    				ld hl,(fs_new_file_cluster)		004BC7 AF                  B   742    				xor a
004BC8 CD 2C 53 00         B   743    				call cluster_and_offset_to_lba
004BCC CD C5 53 00         B   744    				call fs_write_sector
004BD0 D8                  B   745    				ret c							                           B   746    			
004BD1 CD 33 51 00         B   747    				call fs_clear_sector_buffer		004BD5 AF                  B   748    				xor a
004BD6 3C                  B   749    wroslp			inc a
004BD7 32 79 54 00         B   750    				ld (fs_working_sector),a
004BDB 21 20 54 00         B   751    				ld hl,fs_cluster_size
004BDF BE                  B   752    				cp (hl)
004BE0 28 13               B   753    				jr z,allsclr
004BE2 2A 80 54 00         B   754    				ld hl,(fs_new_file_cluster)
004BE6 CD 2C 53 00         B   755    				call cluster_and_offset_to_lba
004BEA CD C5 53 00         B   756    				call fs_write_sector
004BEE D8                  B   757    				ret c
004BEF 3A 79 54 00         B   758    				ld a,(fs_working_sector)
004BF3 18 E1               B   759    				jr wroslp
                           B   760    			
004BF5 2A 80 54 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004BF9 11FFFF00            B   762    				ld de,0ffffh
004BFD CD 81 52 00         B   763    				call update_fat_entry_for_clust
004C01 AF                  B   764    				xor a
004C02 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
004C03                     B   771    fs_delete_dir_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   772    
004C03 CD 45 51 00         B   773    				call fs_find_filename			004C07 D8                  B   774    				ret c
004C08 28 04               B   775    				jr z,ddc_gotd
004C0A 3ED1                B   776    				ld a,0d1h						004C0C B7                  B   777    				or a
004C0D C9                  B   778    				ret
                           B   779    				
004C0E DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					004C12 20 04               B   781    				jr nz,okdeldir
004C14 AF                  B   782    				xor a
004C15 3EC4                B   783    				ld a,0c4h						004C17 C9                  B   784    				ret
                           B   785    				
004C18 DD22 83 54 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004C1D CD 8B 53 00         B   787    				call backup_sector_lba
004C21 DD6E1A              B   788    				ld l,(ix+01ah)					004C24 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004C27 3A 20 54 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004C2B 47                  B   792    				ld b,a							004C2C 0E00                B   793    				ld c,0			
004C2E 79                  B   794    fs_cne2 		ld a,c
004C2F CD 2C 53 00         B   795    				call cluster_and_offset_to_lba
004C33 CD AD 53 00         B   796    				call fs_read_sector
004C37 D8                  B   797    				ret c							                           B   798    				
004C38 C5                  B   799    				push bc
004C39 0610                B   800    				ld b,16							004C3B DD21 32 66 00       B   801    				ld ix,sector_buffer
004C40 11200000            B   802    				ld de,020h
004C44 DD7E00              B   803    fs_cne1			ld a,(ix)
004C47 B7                  B   804    				or a
004C48 28 0D               B   805    				jr z,fs_chnde
004C4A FEE5                B   806    				cp 0e5h
004C4C 28 09               B   807    				jr z,fs_chnde
004C4E FE2E                B   808    				cp '.'
004C50 28 05               B   809    				jr z,fs_chnde
004C52 C1                  B   810    				pop bc
004C53 AF                  B   811    				xor a							004C54 3EC5                B   812    				ld a,0c5h						004C56 C9                  B   813    				ret
                           B   814    			
004C57 DD19                B   815    fs_chnde		add ix,de
004C59 10 E9               B   816    				djnz fs_cne1
004C5B C1                  B   817    				pop bc
004C5C 0C                  B   818    				inc c
004C5D 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004C5F CD 55 52 00         B   821    				call get_fat_entry_for_cluster	004C63 D8                  B   822    				ret c
004C64 CD FE 4F 00         B   823    				call fs_compare_hl_fff8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C68 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004C6A CD A0 53 00         B   826    dir_empty		call restore_sector_lba			004C6E CD AD 53 00         B   827    				call fs_read_sector
004C72 D8                  B   828    				ret c							004C73 2A 83 54 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004C77 36E5                B   830    fs_delco		ld (hl),0e5h					004C79 CD C5 53 00         B   831    				call fs_write_sector
004C7D D8                  B   832    				ret c
                           B   833    			
004C7E E5                  B   834    				push hl
004C7F DDE1                B   835    				pop ix
004C81 DD6E1A              B   836    				ld l,(ix+01ah)
004C84 DD661B              B   837    				ld h,(ix+01bh)
004C87 22 7A 54 00         B   838    				ld (fs_working_cluster),hl
004C8B 7C                  B   839    				ld a,h							004C8C B5                  B   840    				or l							004C8D C8                  B   841    				ret z							                           B   842    				
004C8E 2A 7A 54 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
004C92 CD 55 52 00         B   844    				call get_fat_entry_for_cluster
004C96 D8                  B   845    				ret c
004C97 EB                  B   846    				ex de,hl
                           B   847    				
004C98 2A 7A 54 00         B   848    				ld hl,(fs_working_cluster)
004C9C ED53 7A 54 00       B   849    				ld (fs_working_cluster),de
004CA1 11000000            B   850    				ld de,0
004CA5 CD 81 52 00         B   851    				call update_fat_entry_for_clust
004CA9 D8                  B   852    				ret c
                           B   853    				
004CAA CD FE 4F 00         B   854    				call fs_compare_hl_fff8			004CAE 38 DE               B   855    				jr c,clrfatlp
004CB0 AF                  B   856    				xor a
004CB1 C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
004CB2                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
004CB2 CD 45 51 00         B   867    				call fs_find_filename			004CB6 D8                  B   868    				ret c
004CB7 FEC2                B   869    				cp 0c2h							004CB9 28 04               B   870    				jr z,mfilefnde
004CBB AF                  B   871    				xor a							004CBC 3EC9                B   872    				ld a,0c9h						004CBE C9                  B   873    				ret
                           B   874    			
004CBF CD 5C 50 00         B   875    mfilefnde		call fs_find_free_dir_entry		Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CC3 D8                  B   876    				ret c							004CC4 C0                  B   877    				ret nz							                           B   878    			
004CC5 DDE5                B   879    				push ix							004CC7 D1                  B   880    				pop de
004CC8 21 37 54 00         B   881    				ld hl,fs_sought_filename
004CCC 010B0000            B   882    				ld bc,11
004CD0 EDB0                B   883    				ldir
004CD2 AF                  B   884    				xor a							004CD3 0615                B   885    				ld b,21
004CD5 12                  B   886    clrfnen			ld (de),a
004CD6 13                  B   887    				inc de
004CD7 10 FC               B   888    				djnz clrfnen
004CD9 DD361821            B   889    				ld (ix+018h),021h				004CDD CD C5 53 00         B   890    				call fs_write_sector			004CE1 D8                  B   891    				ret c							004CE2 AF                  B   892    				xor a
004CE3 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
004CE4                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
004CE4 ED5B 67 54 00       B   906    				ld de,(fs_file_transfer_length)
004CE9 21000000            B   907    				ld hl,0
004CED AF                  B   908    				xor a
004CEE ED5A                B   909    				adc hl,de
004CF0 CA 09 4A 00         B   910    				jp z,fs_fliz					                           B   911    				 
004CF4 CD 45 51 00         B   912    				call fs_find_filename			004CF8 D8                  B   913    				ret c							004CF9 FEC2                B   914    				cp 0c2h				
004CFB C8                  B   915    				ret z							004CFC DDCB0B66            B   916    				bit 4,(ix+0bh)					004D00 28 04               B   917    				jr z,fs_oknad					004D02 AF                  B   918    				xor a							004D03 3EC6                B   919    				ld a,0c6h						004D05 C9                  B   920    				ret
                           B   921    
004D06 CD 8B 53 00         B   922    fs_oknad		call backup_sector_lba
004D0A DD22 83 54 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004D0F DD311C              B   925    				ld iy,(ix+01ch)					004D12 DD7E1F              B   926    				ld a,(ix+01fh)
004D15 FD22 63 54 00       B   927    				ld (fs_existing_file_length),iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D1A 32 63 54 00         B   928    				ld (fs_existing_file_length),a
004D1E ED5B 67 54 00       B   929    				ld de,(fs_file_transfer_length)
004D23 FD19                B   930    				add iy,de						004D25 CE00                B   931    				adc a,0
004D27 DD3E1C              B   932    				ld (ix+01ch),iy					004D2A DD771F              B   933    				ld (ix+01fh),a					004D2D 30 04               B   934    				jr nc,nfsizeok
004D2F AF                  B   935    				xor a
004D30 3EC7                B   936    				ld a,0c7h						004D32 C9                  B   937    				ret
                           B   938    
004D33 11000000            B   939    nfsizeok		ld de,0
004D37 DD5E1A              B   940    				ld e,(ix+01ah)					004D3A DD561B              B   941    				ld d,(ix+01bh)					004D3D ED53 6D 54 00       B   942    				ld (fs_file_working_cluster),de
004D42 CD C5 53 00         B   943    				call fs_write_sector			004D46 D8                  B   944    				ret c
004D47 7A                  B   945    				ld a,d
004D48 B3                  B   946    				or e
004D49 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004D4B CD 0B 50 00         B   949    				call fs_find_free_cluster		004D4F D8                  B   950    				ret c
004D50 C0                  B   951    				ret nz
004D51 2A 7D 54 00         B   952    				ld hl,(fs_free_cluster)
004D55 22 6D 54 00         B   953    				ld (fs_file_working_cluster),hl
004D59 11FFFF00            B   954    				ld de,0ffffh
004D5D CD 81 52 00         B   955    				call update_fat_entry_for_clust
004D61 D8                  B   956    				ret c
                           B   957    			
004D62 CD A0 53 00         B   958    				call restore_sector_lba			004D66 CD AD 53 00         B   959    				call fs_read_sector
004D6A D8                  B   960    				ret c
004D6B DD2A 83 54 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004D70 ED5B 6D 54 00       B   962    				ld de,(fs_file_working_cluster)
004D75 DD731A              B   963    				ld (ix+01ah),e
004D78 DD721B              B   964    				ld (ix+01bh),d
004D7B CD C5 53 00         B   965    				call fs_write_sector			004D7F D8                  B   966    				ret c
                           B   967    				
                           B   968    					
004D80 2A 6D 54 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004D84 CD 55 52 00         B   970    				call get_fat_entry_for_cluster
004D88 D8                  B   971    				ret c
004D89 CD FE 4F 00         B   972    				call fs_compare_hl_fff8
004D8D 30 1C               B   973    				jr nc,atlclif
004D8F 22 6D 54 00         B   974    				ld (fs_file_working_cluster),hl
004D93 01000000            B   975    				ld bc,0
004D97 3A 20 54 00         B   976    				ld a,(fs_cluster_size)
004D9B CB27                B   977    				sla a
004D9D 47                  B   978    				ld b,a
004D9E 2A 63 54 00         B   979    				ld hl,(fs_existing_file_length)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004DA2 AF                  B   980    				xor a							004DA3 ED42                B   981    				sbc hl,bc						004DA5 22 63 54 00         B   982    				ld (fs_existing_file_length),hl
004DA9 18 D5               B   983    				jr apenclch
                           B   984    				
004DAB ED4B 63 54 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004DB0 CB38                B   986    				srl b				
004DB2 48                  B   987    				ld c,b							004DB3 3A 20 54 00         B   988    				ld a,(fs_cluster_size)
004DB7 91                  B   989    				sub c
004DB8 47                  B   990    				ld b,a							004DB9 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004DBB 2A 6D 54 00         B   993    				ld hl,(fs_file_working_cluster)
004DBF 79                  B   994    				ld a,c
004DC0 CD 2C 53 00         B   995    				call cluster_and_offset_to_lba
004DC4 CD AD 53 00         B   996    				call fs_read_sector
004DC8 D8                  B   997    				ret c
004DC9 C5                  B   998    				push bc							                           B   999    				
004DCA 11000000            B  1000    				ld de,0
004DCE 3A 63 54 00         B  1001    				ld a,(fs_existing_file_length)
004DD2 5F                  B  1002    				ld e,a
004DD3 3A 64 54 00         B  1003    				ld a,(fs_existing_file_length+1
004DD7 E601                B  1004    				and 1
004DD9 57                  B  1005    				ld d,a							004DDA 21000200            B  1006    				ld hl,512	
004DDE AF                  B  1007    				xor a
004DDF ED52                B  1008    				sbc hl,de						004DE1 E5                  B  1009    				push hl
004DE2 C1                  B  1010    				pop bc							004DE3 21 32 66 00         B  1011    				ld hl,sector_buffer
004DE7 19                  B  1012    				add hl,de
004DE8 EB                  B  1013    				ex de,hl						004DE9 7C                  B  1014    				ld a,h			
004DEA B5                  B  1015    				or l
004DEB 20 04               B  1016    				jr nz,fs_dcsb					004DED CD 33 51 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
004DF1 2A 70 54 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			004DF5 EDA0                B  1019    fs_cbsb			ldi								004DF7 7C                  B  1020    				ld a,h							004DF8 B5                  B  1021    				or l
004DF9 20 0D               B  1022    				jr nz,fs_srcadok
004DFB 22 70 54 00         B  1023    				ld (fs_ez80_address),hl
004DFF 3A 72 54 00         B  1024    				ld a,(fs_ez80_address+2)
004E03 B7                  B  1025    				or a
004E04 CA 25 4B 00         B  1026    				jp z,fs_mem_error
004E08 CD B5 52 00         B  1027    fs_srcadok		call transfer_length_countdown
004E0C 28 54               B  1028    				jr z,fs_lbof					004E0E 78                  B  1029    fs_sadok		ld a,b							004E0F B1                  B  1030    				or c
004E10 20 E3               B  1031    				jr nz,fs_cbsb					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1032    
004E12 22 70 54 00         B  1033    				ld (fs_ez80_address),hl			004E16 C1                  B  1034    				pop bc							004E17 79                  B  1035    				ld a,c
004E18 2A 6D 54 00         B  1036    				ld hl,(fs_file_working_cluster)
004E1C CD 2C 53 00         B  1037    				call cluster_and_offset_to_lba
004E20 CD C5 53 00         B  1038    				call fs_write_sector			004E24 D8                  B  1039    				ret c							004E25 0C                  B  1040    				inc c							004E26 05                  B  1041    				dec b
004E27 28 0B               B  1042    				jr z,fs_sfncl					004E29 C5                  B  1043    fs_sfns			push bc				
004E2A 01000200            B  1044    				ld bc,512						004E2E 11 32 66 00         B  1045    				ld de,sector_buffer				004E32 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
004E34 CD 0B 50 00         B  1048    fs_sfncl		call fs_find_free_cluster		004E38 D8                  B  1049    				ret c							004E39 C0                  B  1050    				ret nz							004E3A 2A 6D 54 00         B  1051    				ld hl,(fs_file_working_cluster)
004E3E ED5B 7D 54 00       B  1052    				ld de,(fs_free_cluster)
004E43 CD 81 52 00         B  1053    				call update_fat_entry_for_clust
004E47 D8                  B  1054    				ret c
004E48 2A 7D 54 00         B  1055    				ld hl,(fs_free_cluster)
004E4C 22 6D 54 00         B  1056    				ld (fs_file_working_cluster),hl
004E50 11FFFF00            B  1057    				ld de,0ffffh
004E54 CD 81 52 00         B  1058    				call update_fat_entry_for_clust
004E58 D8                  B  1059    				ret c
004E59 3A 20 54 00         B  1060    				ld a,(fs_cluster_size)
004E5D 47                  B  1061    				ld b,a							004E5E 0E00                B  1062    				ld c,0							004E60 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
004E62 C1                  B  1065    fs_lbof			pop bc
004E63 79                  B  1066    				ld a,c							004E64 2A 6D 54 00         B  1067    				ld hl,(fs_file_working_cluster)
004E68 CD 2C 53 00         B  1068    				call cluster_and_offset_to_lba
004E6C CD C5 53 00         B  1069    				call fs_write_sector	
004E70 D8                  B  1070    				ret c
004E71 AF                  B  1071    				xor a							004E72 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004E73                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004E73 CD 45 51 00         B  1079    				call fs_find_filename			004E77 D8                  B  1080    				ret c
004E78 C0                  B  1081    				ret nz
                           B  1082    				
004E79 DDCB0B66            B  1083    				bit 4,(ix+0bh)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E7D 28 04               B  1084    				jr z,okdelf
004E7F AF                  B  1085    				xor a
004E80 3EC6                B  1086    				ld a,0c6h						004E82 C9                  B  1087    				ret
                           B  1088    				
004E83 DDE5                B  1089    okdelf			push ix
004E85 E1                  B  1090    				pop hl
004E86 C3 77 4C 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
004E8A                     B  1097    fs_rename_command
                           B  1098    
004E8A CD 45 51 00         B  1099    				call fs_find_filename			004E8E D8                  B  1100    				ret c							004E8F FEC2                B  1101    				cp 0c2h							004E91 28 04               B  1102    				jr z,fs_nfnok					004E93 AF                  B  1103    				xor a							004E94 3EC9                B  1104    				ld a,0c9h						004E96 C9                  B  1105    				ret
                           B  1106    			
004E97 21 37 54 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		004E9B 11 4F 54 00         B  1108    				ld de,fs_filename_buffer
004E9F 010B0000            B  1109    				ld bc,11
004EA3 EDB0                B  1110    				ldir
004EA5 21 43 54 00         B  1111    				ld hl,fs_alt_filename			004EA9 11 37 54 00         B  1112    				ld de,fs_sought_filename
004EAD 010B0000            B  1113    				ld bc,11
004EB1 EDB0                B  1114    				ldir
004EB3 CD 45 51 00         B  1115    				call fs_find_filename			004EB7 D8                  B  1116    				ret c
004EB8 FEC2                B  1117    				cp 0c2h
004EBA C8                  B  1118    				ret z							                           B  1119    				
004EBB DDE5                B  1120    				push ix
004EBD D1                  B  1121    				pop de
004EBE 21 4F 54 00         B  1122    				ld hl,fs_filename_buffer	 	004EC2 010B0000            B  1123    				ld bc,11
004EC6 EDB0                B  1124    				ldir							004EC8 CD C5 53 00         B  1125    				call fs_write_sector			                           B  1126    				
004ECC AF                  B  1127    fs_rndone		xor a
004ECD C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
004ECE                     B  1134    fs_goto_first_dir_entry
                           B  1135    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004ECE CD 6B 1A 00         B  1136    				call fs_get_dir_cluster
004ED2 ED53 86 54 00       B  1137    				ld (fs_dir_entry_cluster),de
004ED7 AF                  B  1138    				xor a
004ED8 32 8C 54 00         B  1139    				ld (fs_dir_entry_sector),a		004EDC 11000000            B  1140    				ld de,0
004EE0 ED53 89 54 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
004EE5                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
004EE5 3A 8C 54 00         B  1156    				ld a,(fs_dir_entry_sector)		004EE9 4F                  B  1157    				ld c,a
004EEA 2A 86 54 00         B  1158    				ld hl,(fs_dir_entry_cluster)	004EEE CD 2C 53 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
004EF2 7C                  B  1161    				ld a,h							004EF3 B5                  B  1162    				or l							004EF4 20 09               B  1163    				jr nz,nr_read					004EF6 2A 2A 54 00         B  1164    				ld hl,(fs_root_dir_position)	004EFA 79                  B  1165    				ld a,c
004EFB CD 72 53 00         B  1166    				call set_absolute_lba
                           B  1167    				
004EFF CD AD 53 00         B  1168    nr_read			call fs_read_sector				004F03 D8                  B  1169    				ret c							                           B  1170    				
004F04 ED5B 89 54 00       B  1171    				ld de,(fs_dir_entry_line_offset
004F09 DD21 32 66 00       B  1172    dscan_int_loop	ld ix,sector_buffer
004F0E DD19                B  1173    				add ix,de
004F10 DD7E00              B  1174    ds_int_loop		ld a,(ix)
004F13 B7                  B  1175    				or a							004F14 28 0E               B  1176    				jr z,fs_dir_entry_free		
004F16 FEE5                B  1177    				cp 0e5h							004F18 28 0A               B  1178    				jr z,fs_dir_entry_free	
004F1A FE05                B  1179    				cp 05h							004F1C 28 06               B  1180    				jr z,fs_dir_entry_free	
004F1E DDCB0B5E            B  1181    				bit 3,(ix+0bh)					004F22 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
004F24                     B  1184    fs_dir_entry_free
                           B  1185    
004F24 EB                  B  1186    				ex de,hl
004F25 11200000            B  1187    				ld de,32
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F29 19                  B  1188    				add hl,de
004F2A EB                  B  1189    				ex de,hl
004F2B CB4A                B  1190    				bit 1,d
004F2D 28 DA               B  1191    				jr z,dscan_int_loop
004F2F 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
004F31                     B  1194    fs_dir_entry_in_use
                           B  1195    				
004F31 ED53 89 54 00       B  1196    				ld (fs_dir_entry_line_offset),d
004F36 DDE5                B  1197    				push ix
004F38 E1                  B  1198    				pop hl
004F39 CD 30 10 00         B  1199    				call os_clear_output_line
004F3D 0608                B  1200    				ld b,8							004F3F 11 52 61 00         B  1201    				ld de,output_line
004F43 7E                  B  1202    dcopyn			ld a,(hl)
004F44 FE20                B  1203    				cp ' '							004F46 28 02               B  1204    				jr z,digchar
004F48 12                  B  1205    				ld (de),a
004F49 13                  B  1206    				inc de
004F4A 23                  B  1207    digchar			inc hl
004F4B 10 F6               B  1208    				djnz dcopyn
004F4D 7E                  B  1209    				ld a,(hl)						004F4E FE20                B  1210    				cp ' '							004F50 28 0A               B  1211    				jr z,dirnoex
004F52 3E2E                B  1212    				ld a,'.'						004F54 12                  B  1213    				ld (de),a
004F55 13                  B  1214    				inc de	
004F56 01030000            B  1215    				ld bc,3							004F5A EDB0                B  1216    				ldir
004F5C AF                  B  1217    dirnoex			xor a 
004F5D 12                  B  1218    				ld (de),a						                           B  1219    				
004F5E 47                  B  1220    				ld b,a
004F5F DDCB0B66            B  1221    				bit 4,(ix+0bh)					004F63 28 01               B  1222    				jr z,fs_fniaf		
004F65 04                  B  1223    				inc b							004F66 DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					004F69 DD4E1F              B  1225    				ld c,(ix+01fh)
004F6C 21 52 61 00         B  1226    				ld hl,output_line				004F70 AF                  B  1227    				xor a
004F71 C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
004F72                     B  1233    fs_goto_next_dir_entry
                           B  1234    
004F72 11200000            B  1235    				ld de,32
004F76 2A 89 54 00         B  1236    				ld hl,(fs_dir_entry_line_offset
004F7A 19                  B  1237    				add hl,de
004F7B 22 89 54 00         B  1238    				ld (fs_dir_entry_line_offset),h
004F7F CB4C                B  1239    				bit 1,h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F81 CA E5 4E 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
004F85 21000000            B  1242    dscan_new_sect	ld hl,0				
004F89 22 89 54 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
004F8D 21 8C 54 00         B  1245    				ld hl,fs_dir_entry_sector
004F91 34                  B  1246    				inc (hl)						                           B  1247    			
004F92 ED5B 86 54 00       B  1248    				ld de,(fs_dir_entry_cluster)
004F97 7A                  B  1249    				ld a,d
004F98 B3                  B  1250    				or e							004F99 20 0B               B  1251    				jr nz,nonroot2
004F9B 3A 30 54 00         B  1252    				ld a,(fs_root_dir_sectors)
004F9F BE                  B  1253    				cp (hl)
004FA0 28 23               B  1254    				jr z,endofdir			
004FA2 C3 E5 4E 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												004FA6 3A 20 54 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
004FAA BE                  B  1258    				cp (hl)							004FAB C2 E5 4E 00         B  1259    				jp nz,fs_get_dir_entry
004FAF 3600                B  1260    				ld (hl),0						004FB1 2A 86 54 00         B  1261    				ld hl,(fs_dir_entry_cluster)
004FB5 CD 55 52 00         B  1262    				call get_fat_entry_for_cluster
004FB9 22 86 54 00         B  1263    				ld (fs_dir_entry_cluster),hl
004FBD CD FE 4F 00         B  1264    				call fs_compare_hl_fff8			004FC1 DA E5 4E 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
004FC5 3ED2                B  1267    endofdir		ld a,0d2h
004FC7 B7                  B  1268    				or a							004FC8 C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
004FC9                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
004FC9 2A 2A 54 00         B  1279    				ld hl,(fs_root_dir_position)
004FCD AF                  B  1280    				xor a
004FCE CD 83 53 00         B  1281    				call set_abs_lba_and_read_secto
004FD2 D8                  B  1282    				ret c
004FD3 0E10                B  1283    				ld c,16							004FD5 DD21 32 66 00       B  1284    				ld ix,sector_buffer
004FDA DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
004FDD FE08                B  1286    				cp 08h
004FDF 20 11               B  1287    				jr nz,not_label
004FE1 DD360B00            B  1288    				ld (ix+0bh),0					004FE5 DDE5                B  1289    				push ix
004FE7 E1                  B  1290    				pop hl
004FE8 E5                  B  1291    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FE9 060B                B  1292    				ld b,11
004FEB CD 18 12 00         B  1293    				call uppercasify_string
004FEF E1                  B  1294    				pop hl
004FF0 AF                  B  1295    				xor a
004FF1 C9                  B  1296    				ret
                           B  1297    				
004FF2 11200000            B  1298    not_label		ld de,32						004FF6 DD19                B  1299    				add ix,de						004FF8 10 E0               B  1300    				djnz find_vl
004FFA AF                  B  1301    				xor a
004FFB 3ED4                B  1302    				ld a,0d4h						004FFD C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
004FFE                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
004FFE E5                  B  1315    				push hl
004FFF D5                  B  1316    				push de
005000 11F8FF00            B  1317    				ld de,0fff8h			
005004 B7                  B  1318    				or a							005005 52ED52              B  1319    				sbc.s hl,de						005008 D1                  B  1320    				pop de
005009 E1                  B  1321    				pop hl
00500A C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
00500B                     B  1327    fs_find_free_cluster
                           B  1328    	
00500B DD210000 00         B  1329    				ld ix,0							005010 ED5B 24 54 00       B  1330    				ld de,(fs_fat1_position)		005015 AF                  B  1331    				xor a				
005016 32 79 54 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
00501A D5                  B  1333    				push de
00501B E1                  B  1334    				pop hl
00501C 3A 79 54 00         B  1335    				ld a,(fs_working_sector)
005020 CD 83 53 00         B  1336    				call set_abs_lba_and_read_secto
005024 D8                  B  1337    				ret c
005025 21 32 66 00         B  1338    				ld hl,sector_buffer
005029 0600                B  1339    				ld b,0
00502B 7E                  B  1340    fs_ffcl1		ld a,(hl)						00502C 23                  B  1341    				inc hl
00502D B6                  B  1342    				or (hl)
00502E 23                  B  1343    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00502F 28 14               B  1344    				jr z,fs_gotfc
005031 DD23                B  1345    				inc ix
005033 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
005035 2A 31 54 00         B  1348    				ld hl,(fs_sectors_per_fat)
005039 3A 79 54 00         B  1349    				ld a,(fs_working_sector)		00503D 3C                  B  1350    				inc a				
00503E BD                  B  1351    				cp l		
00503F 20 D5               B  1352    				jr nz,fs_ffcl2					005041 3EC1                B  1353    fs_dfull		ld a,c1h						005043 B7                  B  1354    				or a							005044 C9                  B  1355    				ret
                           B  1356    			
005045 DDE5                B  1357    fs_gotfc		push ix							005047 E1                  B  1358    				pop hl							005048 2B                  B  1359    				dec hl							005049 2B                  B  1360    				dec hl							00504A ED5B 34 54 00       B  1361    				ld de,(fs_max_data_clusters)
00504F AF                  B  1362    				xor a
005050 52ED52              B  1363    				sbc.s hl,de						005053 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
005055 DD22 7D 54 00       B  1366    				ld (fs_free_cluster),ix
00505A AF                  B  1367    				xor a
00505B C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
00505C                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
00505C CD 6B 1A 00         B  1380    				call fs_get_dir_cluster			005060 EB                  B  1381    				ex de,hl
005061 22 6D 54 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
005065 AF                  B  1383    				xor a
005066 32 79 54 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
00506A 2A 2A 54 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	00506E 3A 79 54 00         B  1387    				ld a,(fs_working_sector)
005072 CD 72 53 00         B  1388    				call set_absolute_lba
                           B  1389    				
005076 CD 6B 1A 00         B  1390    				call fs_get_dir_cluster			00507A 7A                  B  1391    				ld a,d
00507B B3                  B  1392    				or e
00507C 28 0C               B  1393    				jr z,at_rootd
00507E 2A 6D 54 00         B  1394    				ld hl,(fs_file_working_cluster)
005082 3A 79 54 00         B  1395    				ld a,(fs_working_sector)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005086 CD 2C 53 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
00508A CD AD 53 00         B  1398    at_rootd		call fs_read_sector
00508E D8                  B  1399    				ret c
00508F 0610                B  1400    				ld b,16							005091 11200000            B  1401    				ld de,32
005095 DD21 32 66 00       B  1402    				ld ix,sector_buffer
00509A DD7E00              B  1403    scdirfe			ld a,(ix)						00509D B7                  B  1404    				or a
00509E 28 65               B  1405    				jr z,got_fde
0050A0 FEE5                B  1406    				cp 0e5h
0050A2 28 61               B  1407    				jr z,got_fde
0050A4 DD19                B  1408    				add ix,de						0050A6 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
0050A8 21 79 54 00         B  1411    				ld hl,fs_working_sector			0050AC 34                  B  1412    				inc (hl)
                           B  1413    				
0050AD CD 6B 1A 00         B  1414    				call fs_get_dir_cluster			0050B1 7A                  B  1415    				ld a,d
0050B2 B3                  B  1416    				or e
0050B3 20 0B               B  1417    				jr nz,ffenotroo
0050B5 3A 30 54 00         B  1418    				ld a,(fs_root_dir_sectors)		0050B9 BE                  B  1419    				cp (hl)							0050BA 20 AE               B  1420    				jr nz,ffenxtsec
0050BC AF                  B  1421    fenotfnd		xor a							0050BD 3EC3                B  1422    				ld a,0c3h						0050BF C9                  B  1423    				ret
                           B  1424    			
0050C0 3A 20 54 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			0050C4 BE                  B  1426    				cp (hl)
0050C5 20 A3               B  1427    				jr nz,ffenxtsec
0050C7 2A 6D 54 00         B  1428    				ld hl,(fs_file_working_cluster)
0050CB CD 55 52 00         B  1429    				call get_fat_entry_for_cluster	0050CF D8                  B  1430    				ret c
0050D0 CD FE 4F 00         B  1431    				call fs_compare_hl_fff8			0050D4 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
0050D6 CD 0B 50 00         B  1434    				call fs_find_free_cluster		0050DA D8                  B  1435    				ret c							0050DB C0                  B  1436    				ret nz							0050DC ED5B 7D 54 00       B  1437    				ld de,(fs_free_cluster)
0050E1 2A 6D 54 00         B  1438    				ld hl,(fs_file_working_cluster)
0050E5 CD 81 52 00         B  1439    				call update_fat_entry_for_clust
0050E9 D8                  B  1440    				ret c
0050EA EB                  B  1441    				ex de,hl						0050EB 11FFFF00            B  1442    				ld de,0ffffh
0050EF CD 81 52 00         B  1443    				call update_fat_entry_for_clust
0050F3 D8                  B  1444    				ret c
                           B  1445    			
0050F4 2A 7D 54 00         B  1446    				ld hl,(fs_free_cluster)			0050F8 CD 07 51 00         B  1447    				call fs_clear_cluster			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050FC D8                  B  1448    				ret c
0050FD 2A 7D 54 00         B  1449    				ld hl,(fs_free_cluster)			005101 C3 61 50 00         B  1450    				jp ffenxtclu					                           B  1451    			
005105 AF                  B  1452    got_fde			xor a
005106 C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
005107                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
005107 22 7A 54 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
00510B CD 33 51 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
00510F AF                  B  1466    				xor a				
005110 32 79 54 00         B  1467    				ld (fs_working_sector),a		005114 3A 79 54 00         B  1468    wipeclulp		ld a,(fs_working_sector)		005118 2A 7A 54 00         B  1469    				ld hl,(fs_working_cluster)		00511C CD 2C 53 00         B  1470    				call cluster_and_offset_to_lba	005120 CD C5 53 00         B  1471    				call fs_write_sector
005124 D8                  B  1472    				ret c
005125 21 79 54 00         B  1473    				ld hl,fs_working_sector
005129 34                  B  1474    				inc (hl)
00512A 3A 20 54 00         B  1475    				ld a,(fs_cluster_size)
00512E BE                  B  1476    				cp (hl)
00512F 20 E3               B  1477    				jr nz,wipeclulp
005131 AF                  B  1478    				xor a
005132 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
005133                     B  1482    fs_clear_sector_buffer
                           B  1483    			
005133 E5                  B  1484    				push hl
005134 C5                  B  1485    				push bc
005135 21 32 66 00         B  1486    				ld hl,sector_buffer			
005139 01000200            B  1487    				ld bc,512				
00513D AF                  B  1488    				xor a				
00513E CD 87 15 00         B  1489    				call os_bchl_memfill	
005142 C1                  B  1490    				pop bc
005143 E1                  B  1491    				pop hl
005144 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
005145                     B  1498    fs_find_filename
                           B  1499    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005145 AF                  B  1500    				xor a
                           B  1501    
005146                     B  1502    fs_search	
                           B  1503    				
005146 32 94 54 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
00514A CD 6B 1A 00         B  1508    				call fs_get_dir_cluster
00514E ED53 6D 54 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
005153 AF                  B  1510    				xor a
005154 32 79 54 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
005158 2A 2A 54 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	00515C 3A 79 54 00         B  1514    				ld a,(fs_working_sector)
005160 CD 72 53 00         B  1515    				call set_absolute_lba
                           B  1516    				
005164 CD 6B 1A 00         B  1517    				call fs_get_dir_cluster			005168 7A                  B  1518    				ld a,d
005169 B3                  B  1519    				or e
00516A 28 0C               B  1520    				jr z,at_rootd2
00516C 2A 6D 54 00         B  1521    				ld hl,(fs_file_working_cluster)
005170 3A 79 54 00         B  1522    				ld a,(fs_working_sector)
005174 CD 2C 53 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
005178 CD AD 53 00         B  1525    at_rootd2		call fs_read_sector
00517C D8                  B  1526    				ret c
00517D 0E10                B  1527    				ld c,16							00517F DD21 32 66 00       B  1528    				ld ix,sector_buffer
005184 DDE5                B  1529    ndirentr		push ix
005186 D1                  B  1530    				pop de
005187 3A 94 54 00         B  1531    				ld a,(fs_search_type)
00518B B7                  B  1532    				or a
00518C 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
00518E DD7E00              B  1535    				ld a,(ix)						005191 FE80                B  1536    				cp 080h							005193 30 35               B  1537    				jr nc,fnnotsame
005195 FE20                B  1538    				cp 020h
005197 38 31               B  1539    				jr c,fnnotsame
005199 ED5B 91 54 00       B  1540    				ld de,(fs_stash_dir_block)		00519E DD7E1A              B  1541    				ld a,(ix+01ah)
0051A1 BB                  B  1542    				cp e
0051A2 20 26               B  1543    				jr nz,fnnotsame
0051A4 DD7E1B              B  1544    				ld a,(ix+01bh)
0051A7 BA                  B  1545    				cp d
0051A8 28 1E               B  1546    				jr z,fs_found
0051AA 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
0051AC FD21 37 54 00       B  1549    fs_ststr		ld iy,fs_sought_filename		0051B1 060B                B  1550    				ld b,11							0051B3 1A                  B  1551    cmpfnlp			ld a,(de)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0051B4 CD 24 12 00         B  1552    				call os_uppercasify				0051B8 6F                  B  1553    				ld l,a
0051B9 FD7E00              B  1554    				ld a,(iy)
0051BC CD 24 12 00         B  1555    				call os_uppercasify
0051C0 BD                  B  1556    				cp l				
0051C1 20 07               B  1557    				jr nz,fnnotsame
0051C3 FD23                B  1558    				inc iy
0051C5 13                  B  1559    				inc de
0051C6 10 EB               B  1560    				djnz cmpfnlp
0051C8 AF                  B  1561    fs_found		xor a							0051C9 C9                  B  1562    				ret
                           B  1563    			
0051CA 11200000            B  1564    fnnotsame		ld de,32						0051CE DD19                B  1565    				add ix,de
0051D0 0D                  B  1566    				dec c
0051D1 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
0051D3 21 79 54 00         B  1569    				ld hl,fs_working_sector			0051D7 34                  B  1570    				inc (hl)
                           B  1571    				
0051D8 CD 6B 1A 00         B  1572    				call fs_get_dir_cluster			0051DC 7A                  B  1573    				ld a,d
0051DD B3                  B  1574    				or e
0051DE 20 0D               B  1575    				jr nz,notrootdir
0051E0 3A 30 54 00         B  1576    				ld a,(fs_root_dir_sectors)		0051E4 BE                  B  1577    				cp (hl)							0051E5 C2 58 51 00         B  1578    				jp nz,ffnnxtsec
0051E9 3EC2                B  1579    fnnotfnd		ld a,0c2h						0051EB B7                  B  1580    				or a
0051EC C9                  B  1581    				ret
                           B  1582    			
0051ED                     B  1583    notrootdir
                           B  1584    				
0051ED 3A 20 54 00         B  1585    				ld a,(fs_cluster_size)			0051F1 BE                  B  1586    				cp (hl)
0051F2 C2 58 51 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
0051F6 2A 6D 54 00         B  1589    				ld hl,(fs_file_working_cluster)
0051FA CD 55 52 00         B  1590    				call get_fat_entry_for_cluster
0051FE D8                  B  1591    				ret c
0051FF CD FE 4F 00         B  1592    				call fs_compare_hl_fff8			005203 30 E4               B  1593    				jr nc,fnnotfnd					005205 EB                  B  1594    				ex de,hl						005206 C3 4E 51 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
00520A                     B  1600    fs_hl_to_alt_filename
                           B  1601    
00520A 11 43 54 00         B  1602    				ld de,fs_alt_filename
00520E 18 04               B  1603    				jr hltofngo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1604    
                           B  1605    
005210                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
005210 11 37 54 00         B  1612    				ld de,fs_sought_filename
005214 CD 1F 53 00         B  1613    hltofngo		call fs_clear_filename			005218 D5                  B  1614    				push de			
005219 DDE1                B  1615    				pop ix							                           B  1616    				
00521B 0E00                B  1617    				ld c,0
00521D 0608                B  1618    				ld b,8
00521F 7E                  B  1619    csfnlp2			ld a,(hl)						005220 B7                  B  1620    				or a
005221 C8                  B  1621    				ret z							005222 FE20                B  1622    				cp 32
005224 C8                  B  1623    				ret z							005225 FE2F                B  1624    				cp 02fh
005227 C8                  B  1625    				ret z							005228 FE2E                B  1626    				cp '.'
00522A 28 16               B  1627    				jr z,dofn_ext					00522C 12                  B  1628    				ld (de),a
00522D 13                  B  1629    				inc de
00522E 23                  B  1630    				inc hl
00522F 0C                  B  1631    				inc c							005230 10 ED               B  1632    				djnz csfnlp2					005232 7E                  B  1633    find_ext		ld a,(hl)
005233 FE2E                B  1634    				cp '.'							005235 28 0B               B  1635    				jr z,dofn_ext	
005237 FE20                B  1636    				cp ' '							005239 C8                  B  1637    				ret z
00523A FE2F                B  1638    				cp 02fh
00523C C8                  B  1639    				ret z
00523D B7                  B  1640    				or a
00523E C8                  B  1641    				ret z
00523F 23                  B  1642    				inc hl
005240 18 F0               B  1643    				jr find_ext
                           B  1644    				
005242 23                  B  1645    dofn_ext		inc hl							005243 0603                B  1646    				ld b,3				
005245 7E                  B  1647    fnextlp			ld a,(hl)						005246 B7                  B  1648    				or a
005247 C8                  B  1649    				ret z							005248 FE20                B  1650    				cp 32
00524A C8                  B  1651    				ret z
00524B DD7708              B  1652    				ld (ix+8),a
00524E DD23                B  1653    				inc ix
005250 23                  B  1654    				inc hl
005251 0C                  B  1655    				inc c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005252 10 F1               B  1656    				djnz fnextlp
005254 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
005255                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
005255 C5                  B  1666    				push bc
005256 D5                  B  1667    				push de
005257 01000000            B  1668    				ld bc,0
00525B 4D                  B  1669    				ld c,l
00525C 7C                  B  1670    				ld a,h
00525D 2A 24 54 00         B  1671    				ld hl,(fs_fat1_position)
005261 CD 83 53 00         B  1672    				call set_abs_lba_and_read_secto
005265 38 17               B  1673    				jr c,hwerr
005267 DDE5                B  1674    				push ix
005269 DD21 32 66 00       B  1675    				ld ix,sector_buffer
00526E DD09                B  1676    				add ix,bc
005270 DD09                B  1677    				add ix,bc
005272 21000000            B  1678    				ld hl,0
005276 DD6E00              B  1679    				ld l,(ix)
005279 DD6601              B  1680    				ld h,(ix+1)
00527C DDE1                B  1681    				pop ix
00527E D1                  B  1682    hwerr			pop de
00527F C1                  B  1683    				pop bc
005280 C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
005281                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
005281 C5                  B  1695    				push bc
005282 E5                  B  1696    				push hl
005283 01000000            B  1697    				ld bc,0
005287 4D                  B  1698    				ld c,l
005288 7C                  B  1699    				ld a,h
005289 2A 24 54 00         B  1700    				ld hl,(fs_fat1_position)		00528D CD A1 52 00         B  1701    				call fat_upd
005291 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
005293 E1                  B  1704    				pop hl
005294 E5                  B  1705    				push hl
005295 7C                  B  1706    				ld a,h
005296 2A 27 54 00         B  1707    				ld hl,(fs_fat2_position)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00529A CD A1 52 00         B  1708    				call fat_upd
00529E E1                  B  1709    fup_end			pop hl
00529F C1                  B  1710    				pop bc
0052A0 C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
0052A1 CD 83 53 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
0052A5 38 0D               B  1715    				jr c,ufehwerr
0052A7 21 32 66 00         B  1716    				ld hl,sector_buffer
0052AB 09                  B  1717    				add hl,bc
0052AC 09                  B  1718    				add hl,bc
0052AD 73                  B  1719    				ld (hl),e
0052AE 23                  B  1720    				inc hl
0052AF 72                  B  1721    				ld (hl),d
0052B0 CD C5 53 00         B  1722    				call fs_write_sector
0052B4 C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
0052B5                     B  1728    transfer_length_countdown
                           B  1729    
0052B5 E5                  B  1730    				push hl							0052B6 C5                  B  1731    				push bc
                           B  1732    			
0052B7 0604                B  1733    				ld b,4
0052B9 21 5B 54 00         B  1734    				ld hl,fs_file_pointer			0052BD 34                  B  1735    fpinclp			inc (hl)
0052BE 20 03               B  1736    				jr nz,fs_fpino
0052C0 23                  B  1737    				inc hl
0052C1 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
0052C3 2A 67 54 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
0052C7 2B                  B  1741    				dec hl
0052C8 22 67 54 00         B  1742    				ld (fs_file_transfer_length),hl
0052CC 01000000            B  1743    				ld bc,0
0052D0 B7                  B  1744    				or a
0052D1 ED4A                B  1745    				adc hl,bc						                           B  1746    				
0052D3 C1                  B  1747    				pop bc
0052D4 E1                  B  1748    				pop hl
0052D5 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
0052D6                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
0052D6 CD 6B 1A 00         B  1757    				call fs_get_dir_cluster			0052DA 7A                  B  1758    				ld a,d
0052DB B3                  B  1759    				or e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052DC 20 10               B  1760    				jr nz,fs_dnnr
0052DE 21 06 5F 00         B  1761    				ld hl,vol_txt+1					0052E2 3A 01 5F 00         B  1762    				ld a,(current_volume)
0052E6 C630                B  1763    				add a,030h
0052E8 32 09 5F 00         B  1764    				ld (vol_txt+4),a
0052EC AF                  B  1765    				xor a
0052ED C9                  B  1766    				ret
                           B  1767    					
0052EE ED53 91 54 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
0052F3 CD 8E 49 00         B  1769    				call fs_parent_dir_command		0052F7 D8                  B  1770    				ret c
0052F8 B7                  B  1771    				or a
0052F9 C0                  B  1772    				ret nz
0052FA 3E01                B  1773    				ld a,1
0052FC CD 46 51 00         B  1774    				call fs_search					005300 D8                  B  1775    				ret c
005301 C0                  B  1776    				ret nz
                           B  1777    					
005302 DDE5                B  1778    fs_gdbn			push ix
005304 E1                  B  1779    				pop hl
005305 060B                B  1780    				ld b,11							005307 7E                  B  1781    ntdirn			ld a,(hl)
005308 FE20                B  1782    				cp ' '
00530A 28 03               B  1783    				jr z,rdirfsp
00530C 23                  B  1784    				inc hl
00530D 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
00530F 3600                B  1787    rdirfsp			ld (hl),0
005311 DDE5                B  1788    				push ix
005313 ED5B 91 54 00       B  1789    				ld de,(fs_stash_dir_block)
005318 CD 77 1A 00         B  1790    				call fs_update_dir_cluster		00531C E1                  B  1791    				pop hl	
00531D AF                  B  1792    				xor a							00531E C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
00531F                     B  1797    fs_clear_filename
                           B  1798    
00531F D5                  B  1799    				push de							005320 C5                  B  1800    				push bc
005321 060C                B  1801    				ld b,12
005323 3E20                B  1802    				ld a,' '
005325 12                  B  1803    clrfnlp			ld (de),a
005326 13                  B  1804    				inc de
005327 10 FC               B  1805    				djnz clrfnlp
005329 C1                  B  1806    				pop bc
00532A D1                  B  1807    				pop de
00532B C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1812    
00532C                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
00532C C5                  B  1817    				push bc
00532D D5                  B  1818    				push de
00532E E5                  B  1819    				push hl
00532F DDE5                B  1820    				push ix
                           B  1821    
005331 2B                  B  1822    				dec hl							005332 2B                  B  1823    				dec hl							005333 11000000            B  1824    				ld de,0							005337 01000000            B  1825    				ld bc,0
00533B 5F                  B  1826    				ld e,a
00533C 3A 20 54 00         B  1827    				ld a,(fs_cluster_size)			005340 CB3F                B  1828    caotllp			srl a
005342 28 03               B  1829    				jr z,clusdone
005344 29                  B  1830    				add hl,hl						005345 18 F9               B  1831    				jr caotllp
                           B  1832    			
005347 ED4B 2D 54 00       B  1833    clusdone		ld bc,(fs_data_area)			00534C 09                  B  1834    				add hl,bc						00534D 19                  B  1835    				add hl,de						                           B  1836    				
00534E E5                  B  1837    add_ptn_offset	push hl							00534F CD A5 1A 00         B  1838    				call fs_calc_volume_offset
005353 DD21 33 5F 00       B  1839    				ld ix,volume_mount_list
005358 DD19                B  1840    				add ix,de
00535A E1                  B  1841    				pop hl
00535B DD0708              B  1842    				ld bc,(ix+08h)					00535E DD7E0B              B  1843    				ld a,(ix+0bh)
005361 09                  B  1844    				add hl,bc
005362 CE00                B  1845    				adc a,0
005364 22 DE 60 00         B  1846    				ld (sector_lba0),hl				005368 32 E1 60 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
00536C DDE1                B  1849    				pop ix
00536E E1                  B  1850    				pop hl
00536F D1                  B  1851    				pop de
005370 C1                  B  1852    				pop bc
005371 C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
005372                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
005372 C5                  B  1862    				push bc							005373 D5                  B  1863    				push de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005374 E5                  B  1864    				push hl							005375 DDE5                B  1865    				push ix							005377 01000000            B  1866    				ld bc,0
00537B 11000000            B  1867    				ld de,0
00537F 5F                  B  1868    				ld e,a
005380 19                  B  1869    				add hl,de
005381 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
005383                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
005383 CD 72 53 00         B  1875    				call set_absolute_lba
005387 C3 AD 53 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
00538B                     B  1881    backup_sector_lba
                           B  1882    
00538B C5                  B  1883    				push bc
00538C D5                  B  1884    				push de
00538D E5                  B  1885    				push hl
00538E 21 DE 60 00         B  1886    				ld hl,sector_lba0
005392 11 95 54 00         B  1887    				ld de,fs_backed_up_sector_lba0
005396 01040000            B  1888    lbabur			ld bc,4
00539A EDB0                B  1889    				ldir
00539C E1                  B  1890    				pop hl
00539D D1                  B  1891    				pop de
00539E C1                  B  1892    				pop bc
00539F C9                  B  1893    				ret
                           B  1894    
                           B  1895    
0053A0                     B  1896    restore_sector_lba
                           B  1897    
0053A0 C5                  B  1898    				push bc
0053A1 D5                  B  1899    				push de
0053A2 E5                  B  1900    				push hl
0053A3 21 95 54 00         B  1901    				ld hl,fs_backed_up_sector_lba0
0053A7 11 DE 60 00         B  1902    				ld de,sector_lba0
0053AB 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
0053AD                     B  1907    fs_read_sector
                           B  1908    			
0053AD C5                  B  1909    				push bc
0053AE D5                  B  1910    				push de
0053AF E5                  B  1911    				push hl
0053B0 DDE5                B  1912    				push ix
0053B2 FDE5                B  1913    				push iy
0053B4 01040000            B  1914    				ld bc,04h						0053B8 CD D6 53 00         B  1915    				call sector_access_redirect
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0053BC FDE1                B  1916    secaccend		pop iy
0053BE DDE1                B  1917    				pop ix
0053C0 E1                  B  1918    				pop hl
0053C1 D1                  B  1919    				pop de
0053C2 C1                  B  1920    				pop bc
0053C3 3F                  B  1921    				ccf								0053C4 C9                  B  1922    				ret								                           B  1923    
                           B  1924    
0053C5                     B  1925    fs_write_sector	
                           B  1926    				
0053C5 C5                  B  1927    				push bc
0053C6 D5                  B  1928    				push de
0053C7 E5                  B  1929    				push hl
0053C8 DDE5                B  1930    				push ix
0053CA FDE5                B  1931    				push iy
0053CC 01080000            B  1932    				ld bc,08h						0053D0 CD D6 53 00         B  1933    				call sector_access_redirect
0053D4 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
0053D6                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
0053D6 3A 02 5F 00         B  1941    				ld a,(current_driver)			0053DA CD 3D 1A 00         B  1942    				call locate_driver_base			0053DE EB                  B  1943    				ex de,hl
0053DF 09                  B  1944    				add hl,bc						0053E0 E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
0053E1                     B  1949    bootsector_stub
                           B  1950    
0053E1 EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
0053E9 352E3000 02004000 
0053F1 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
0053F9 3F00FF00 00000000 
005401 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
005409 E636984E 4F204E41 
005411 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
005419 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
005420 00                  B  1958    fs_cluster_size				db 0
005421 000000              B  1959    fs_bytes_per_cluster		dw24 0
005424 000000              B  1960    fs_fat1_position			dw24 0		; offse
005427 000000              B  1961    fs_fat2_position			dw24 0		; offse
00542A 000000              B  1962    fs_root_dir_position		dw24 0		; offse
00542D 000000              B  1963    fs_data_area				dw24 0		; offse
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005430 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
005431 000000              B  1966    fs_sectors_per_fat			dw24 0
005434 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
005437 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
00543D 00 00 00 00 00 00 
005443 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
005449 00 00 00 00 00 00 
00544F 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
005455 00 00 00 00 00 00 
                           B  1972    
00545B 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
00545F 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
005463 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
005467 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
00546A 000000              B  1979    fs_file_start_cluster		dw24 0
00546D 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
005470 000000              B  1982    fs_ez80_address				dw24 0
005473 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
005476 000000              B  1985    fs_in_sector_offset			dw24 0
005479 00                  B  1986    fs_working_sector			db 0
                           B  1987    
00547A 000000              B  1988    fs_working_cluster			dw24 0
00547D 000000              B  1989    fs_free_cluster				dw24 0
005480 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
005483 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
005486 000000              B  1994    fs_dir_entry_cluster		dw24 0
005489 000000              B  1995    fs_dir_entry_line_offset	dw24 0
00548C 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
00548D 00                  B  1998    fs_filepointer_valid		db 0
00548E 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
005491 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
005494 00                  B  2003    fs_search_type				db 0
                           B  2004    
005495 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3217    
                           A  3218    ;----------------------------------------------
                           A  3219    ; OS Data 
                           A  3220    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3221    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005499                     B     9    kernal_table
                           B    10    
005499 371800              B    11    	dw24 ext_mount_volumes			;00		
00549C DD1700              B    12    	dw24 os_get_device_info			;01		
00549F 931600              B    13    	dw24 os_check_volume_format		;02		
0054A2 C61A00              B    14    	dw24 ext_change_volume			;03		
0054A5 F01700              B    15    	dw24 os_get_volume_info			;04		
0054A8 9D1600              B    16    	dw24 ext_format					;05		
0054AB CF1600              B    17    	dw24 ext_make_dir				;06		
0054AE DD1600              B    18    	dw24 ext_change_dir				;07		
0054B1 EB1600              B    19    	dw24 os_parent_dir				;08		
0054B4 F11600              B    20    	dw24 os_root_dir				;09		
0054B7 391700              B    21    	dw24 ext_delete_dir				;0a		
0054BA 221600              B    22    	dw24 ext_find_file				;0b		
0054BD 3E1600              B    23    	dw24 ext_set_file_pointer		;0c		
0054C0 371600              B    24    	dw24 os_set_load_length			;0d		
0054C3 511600              B    25    	dw24 ext_read_bytes_from_file	;0e		
0054C6 F71600              B    26    	dw24 ext_erase_file				;0f		
0054C9 1F1700              B    27    	dw24 ext_rename_file			;10		
0054CC 611600              B    28    	dw24 ext_create_file			;11		
0054CF 731600              B    29    	dw24 ext_write_bytes_to_file	;12		
0054D2 941A00              B    30    	dw24 fs_get_total_sectors		;13		
0054D5 051700              B    31    	dw24 os_goto_first_dir_entry	;14		 
0054D8 0B1700              B    32    	dw24 os_get_dir_entry			;15		
0054DB 111700              B    33    	dw24 os_goto_next_dir_entry		;16		
0054DE 491700              B    34    	dw24 ext_read_sector			;17		
0054E1 771700              B    35    	dw24 ext_write_sector			;18		
0054E4 021B00              B    36    	dw24 ext_file_sector_list		;19		
0054E7 6B1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0054EA 771A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0054ED 171700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0054F0 A14300              B    41    	dw24 os_wait_key_press			;1d		
0054F3 FC4300              B    42    	dw24 os_get_key_press			;1e		
0054F6 491500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0054F9 FE1700              B    45    	dw24 ext_serial_get_header		;20		
0054FC 0B1800              B    46    	dw24 ext_serial_receive_file	;21		 
0054FF 141800              B    47    	dw24 ext_serial_send_file		;22		 
005502 261800              B    48    	dw24 ext_serial_tx				;23		
005505 2D1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005508 100F00              B    51    	dw24 ext_print_string			;25		
00550B 263E00              B    52    	dw24 hwsc_clear_screen			;26		
00550E F63F00              B    53    	dw24 hwsc_wait_vrt				;27		
005511 CE1300              B    54    	dw24 os_set_cursor_position		;28		
005514 661A00              B    55    	dw24 ext_plot_char				;29		
005517 8F1500              B    56    	dw24 ext_set_pen				;2a		
00551A 9C1500              B    57    	dw24 ext_background_colours		;2b		
00551D EF3E00              B    58    	dw24 hwsc_draw_cursor			;2c		
005520 961500              B    59    	dw24 os_get_pen					;2d		
005523 613E00              B    60    	dw24 hwsc_scroll_up				;2e		
005526 B53D00              B    61    	dw24 os_set_video_hw_regs		;2f		
005529 4F1500              B    62    	dw24 os_get_vmode				;30			00552C 433F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
00552F EE1300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005532 691B00              B    66    	dw24 ext_set_envar				;33		
005535 2D1B00              B    67    	dw24 ext_get_envar				;34		
005538 C31B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
00553B 441400              B    70    	dw24 os_set_mouse_window		;36		
00553E 8A1400              B    71    	dw24 os_get_mouse_position		;37		
005541 611400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005544 664000              B    74    	dw24 hwsc_time_delay			;39		
005547 E21100              B    75    	dw24 ext_compare_strings		;3a		
00554A 611000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
00554D 961000              B    77    	dw24 ext_ascii_to_hexword		;3c		
005550 EB1000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005553 4B4000              B    80    	dw24 hwsc_get_version			;3e		
005556 B81300              B    81    	dw24 os_dont_store_registers	;3f		
005559 C43600              B    82    	dw24 os_cmd_unused				;40 		00555C 894000              B    83    	dw24 hwsc_read_rtc				;41     
00555F B14000              B    84    	dw24 hwsc_write_rtc				;42		 
005562 141C00              B    85    	dw24 os_get_keymap_location		;43		 
005565 C53600              B    86    	dw24 os_get_mem_high			;44
005568 1A1C00              B    87    	dw24 ext_play_audio				;45
00556B 5B4300              B    88    	dw24 hwsc_disable_audio			;46
00556E 744300              B    89    	dw24 hwsc_get_joysticks			;47
005571 5F1500              B    90    	dw24 ext_set_vmode				;48
005574 9D0F00              B    91    	dw24 ext_set_cursor_image		;49
005577 D53E00              B    92    	dw24 hwsc_remove_cursor			;4a
00557A 993500              B    93    	dw24 char_to_font				;4b
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    ; Non-packed Text Strings
                           B    97    ;----------------------------------------------
                           B    98    
00557D 50524F53 4520666F   B    99    welcome_message			db "PROSE for EZ80P by 
005585 7220455A 38305020 
00558D 62792050 68696C20 
005595 52757374 6F6E2032 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00559D 3031310B 0B 
0055A2 53595354 454D2052   B   100    						db "SYSTEM RAM free abo
0055AA 414D2066 72656520 
0055B2 61626F76 653A2024 
0055BA 00 
0055BB 44726976 65733A0B   B   101    storage_txt				db "Drives:",11,0
0055C3 00 
0055C4 434F4D4D 414E4453   B   102    os_dos_cmds_txt			db "COMMANDS",0
0055CC 00 
0055CD 53544152 5455502E   B   103    startup_script_fn		db "STARTUP.SCR",0
0055D5 53435200 
0055D9 2400                B   104    os_hex_prefix_txt		db "$",0
0055DB 4F532056 65727369   B   105    os_version_txt			db "OS Version: $",0	0055E3 6F6E3A20 2400 
0055E9 414D4F45 42412048   B   106    hw_version_txt			db "AMOEBA HW Version: 
0055F1 57205665 7273696F 
0055F9 6E3A2024 00 
0055FE 202F2000            B   107    fwd_slash_txt			db " / ",0
005602 4C6F6164 696E672E   B   108    loading_txt				db "Loading..",11,0
00560A 2E0B00 
00560D 53617669 6E672E2E   B   109    saving_txt				db "Saving..",11,0
005615 0B00 
005617 2E657A70 20         B   110    ezp_extension_txt		db ".ezp",32
00561C 0B4D6F72 653F0B0B   B   111    os_more_txt				db 11,"More?",11,11,0
005624 00 
005625 52656769 73746572   B   112    nmi_freeze_txt			db "Register Dump:"
00562D 2044756D 703A 
005633 0B0B00              B   113    crlfx2_txt				db 11,11,0
005636 7800                B   114    rep_char_txt			db "x",0
005638 20746F20 00         B   115    to_txt					db " to ",0
00563D 4552524F 5200       B   116    error_txt				db "ERROR",0
005643 494620              B   117    if_command_txt			db "IF "
005646 454E4420            B   118    end_command_txt			db "END "
00564A 4F532052 45515549   B   119    hw_warn_txt1			db "OS REQUIRES AMOEBA 
005652 52455320 414D4F45 
00565A 42412056 3A 
00565F 2D2D2D2D 00         B   120    hw_warn_txt2			db "----",0
                           B   121    
                           B   122    ;----------------------------------------------
                           B   123    ; Packed text section
                           B   124    ;----------------------------------------------
                           B   125    
005664 00444542 5547       B   126    dictionary				db 0,"DEBUG"			00566A 002D2D2D 2D2D       B   127    						db 0,"-----"			005670 00494F              B   128    						db 0,"IO"				005673 002D2D              B   129    						db 0,"--"				005676 004D4953 43         B   130    						db 0,"MISC"				00567B 002D2D2D 2D         B   131    						db 0,"----"				005680 00616464 72         B   132    						db 0,"addr"				005685 0050524F 5345       B   133    						db 0,"PROSE"			00568B 00612062 2063       B   134    						db 0,"a b c"			005691 00416464 72657373   B   135    						db 0,"Address"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005699 00427974 6573       B   136    						db 0,"Bytes"			00569F 00457865 63757461   B   137    						db 0,"Executable"		0056A7 626C65 
0056AA 0048756E 74         B   138    						db 0,"Hunt"				0056AF 0046696C 6C         B   139    						db 0,"Fill"				0056B4 00476F74 6F         B   140    						db 0,"Goto"				                           B   141    						
0056B9 0053686F 77         B   142    						db 0,"Show"				0056BE 00435055            B   143    						db 0,"CPU"				0056C2 00526567 69737465   B   144    						db 0,"Registers"		0056CA 7273 
0056CC 004173              B   145    						db 0,"As"				0056CF 00415343 4949       B   146    						db 0,"ASCII"			0056D5 00436C65 6172       B   147    						db 0,"Clear"			0056DB 00536372 65656E     B   148    						db 0,"Screen"			0056E2 00446973 61737365   B   149    						db 0,"Disassemble"		0056EA 6D626C65 
0056EE 00537769 746368     B   150    						db 0,"Switch"			0056F5 00436F70 79         B   151    						db 0,"Copy"				0056FA 00446576 696365     B   152    						db 0,"Device"			005701 00436861 6E6765     B   153    						db 0,"Change"			005708 00447269 7665       B   154    						db 0,"Drive"			00570E 00446972            B   155    						db 0,"Dir"				005712 002F                B   156    						db 0,"/"				005714 00666E              B   157    						db 0,"fn"				                           B   158    						
005717 0044656C 657465     B   159    						db 0,"Delete"			00571E 0046696C 65         B   160    						db 0,"File"				005723 00496E66 6F         B   161    						db 0,"Info"				005728 00564F4C 783A       B   162    						db 0,"VOLx:"			00572E 004D616B 65         B   163    						db 0,"Make"				005733 0052656D 6F756E74   B   164    						db 0,"Remount"			00573B 00537461 7274       B   165    						db 0,"Start"			005741 00576172 6E696E67   B   166    						db 0,"Warning!"			005749 21 
00574A 00416C6C            B   167    						db 0,"All"				00574E 0052656D 6F7665     B   168    						db 0,"Remove"			005755 0052656E 616D65     B   169    						db 0,"Rename"			00575C 004F72              B   170    						db 0,"Or"				00575F 00526563 65697665   B   171    						db 0,"Receive"			005767 00536176 65         B   172    						db 0,"Save"				00576C 00547261 6E736D69   B   173    						db 0,"Transmit"			005774 74 
005775 004C6F61 64         B   174    						db 0,"Load"				                           B   175    						
00577A 004F532F 4857       B   176    						db 0,"OS/HW"			005780 00566572 73696F6E   B   177    						db 0,"Version"			005788 005B7065 6E207061   B   178    						db 0,"[pen paper]"		005790 7065725D 
005794 803A                B   179    						db 80h,":"				005796 813E                B   180    						db 81h,">"				005798 82534F55 4E44       B   181    						db 82h,"SOUND"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00579E 00566F6C 756D6573   B   182    						db 0,"Volumes"			0057A6 8343                B   183    						db 83h,"C"				0057A8 844344              B   184    						db 84h,"CD"				0057AB 85434C53            B   185    						db 85h,"CLS"			0057AF 8650454E            B   186    						db 86h,"PEN"			0057B3 8744                B   187    						db 87h,"D"				0057B5 8844454C            B   188    						db 88h,"DEL"			0057B9 89444952            B   189    						db 89h,"DIR"			0057BD 8A48                B   190    						db 8ah,"H"				0057BF 8B46                B   191    						db 8bh,"F"				                           B   192    						
0057C1 004F6E              B   193    						db 0,"On"				0057C4 8C464F52 4D4154     B   194    						db 8ch,"FORMAT"			0057CB 0047                B   195    						db 0,"G"				0057CD 8D4C42              B   196    						db 8dh,"LB"				0057D0 8E4D                B   197    						db 8eh,"M"				0057D2 8F4D4F55 4E54       B   198    						db 8fh,"MOUNT"			0057D8 004265              B   199    						db 0,"Be"				0057DB 9052                B   200    						db 90h,"R"				0057DD 915244              B   201    						db 91h,"RD"				0057E0 92524E              B   202    						db 92h,"RN"				0057E3 935258              B   203    						db 93h,"RX"				0057E6 945342              B   204    						db 94h,"SB"				0057E9 9554                B   205    						db 95h,"T"				0057EB 965458              B   206    						db 96h,"TX"				0057EE 97564552 53         B   207    						db 97h,"VERS"			0057F3 00577269 7465       B   208    						db 0,"Write"			                           B   209    						
0057F9 004D656D            B   210    						db 0,"Mem"				0057FD 00227478 7422       B   211    						db 0,22h,"txt",22h		005803 0057696C 6C         B   212    						db 0,"Will"				005808 00526174 65         B   213    						db 0,"Rate"				00580D 0061                B   214    						db 0,"a"				00580F 00507265 70         B   215    						db 0,"Prep"				005814 984D44              B   216    						db 98h,"MD"				005817 00447269 766573     B   217    						db 0,"Drives"			00581E 006F6C64 666E       B   218    						db 0,"oldfn"			005824 006E6577 666E       B   219    						db 0,"newfn"			00582A 006C656E            B   220    						db 0,"len"				00582E 00436F6C 6F757273   B   221    						db 0,"Colours"			005836 993F                B   222    						db 99h,"?"				005838 00436F6D 6D616E64   B   223    						db 0,"Commands"			005840 73 
005841 0020                B   224    						db 0," "				005843 002D                B   225    						db 0,"-"				                           B   226    						
005845 00566F6C 756D65     B   227    						db 0,"Volume"			00584C 0046756C 6C         B   228    						db 0,"Full"				005851 004E6F74            B   229    						db 0,"Not"				005855 00466F75 6E64       B   230    						db 0,"Found"			00585B 004C656E 677468     B   231    						db 0,"Length"			005862 005A6572 6F         B   232    						db 0,"Zero"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005867 004F7574            B   233    						db 0,"Out"				00586B 004F66              B   234    						db 0,"Of"				00586E 0052616E 6765       B   235    						db 0,"Range"			005874 00416C72 65616479   B   236    						db 0,"Already"			00587C 00457869 737473     B   237    						db 0,"Exists"			005883 004174              B   238    						db 0,"At"				005886 00526F6F 74         B   239    						db 0,"Root"				00588B 004D6973 6D617463   B   240    						db 0,"Mismatch"			005893 68 
005894 00526571 75657374   B   241    						db 0,"Request"			00589C 00446174 61         B   242    						db 0,"Data"				                           B   243    				
0058A1 00454F46            B   244    						db 0,"EOF"				0058A5 00416674 6572       B   245    						db 0,"After"			0058AB 00556E6B 6E6F776E   B   246    						db 0,"Unknown"			0058B3 00436F6D 6D616E64   B   247    						db 0,"Command"			0058BB 00426164            B   248    						db 0,"Bad"				0058BF 00486578            B   249    						db 0,"Hex"				0058C3 004E6F              B   250    						db 0,"No"				0058C6 0041626F 72746564   B   251    						db 0,"Aborted"			0058CE 00507265 73656E74   B   252    						db 0,"Present"			0058D6 00436865 636B7375   B   253    						db 0,"Checksum"			0058DE 6D 
0058DF 004C6F61 646564     B   254    						db 0,"Loaded"			0058E6 00436F6D 6D73       B   255    						db 0,"Comms"			0058EC 00457272 6F72       B   256    						db 0,"Error"			0058F2 00417267 756D656E   B   257    						db 0,"Arguments"		0058FA 7473 
0058FC 004C6F73 74         B   258    						db 0,"Lost"				                           B   259    						
005901 00                  B   260    						db 0
005902 46415431 36         B   261    fat16_txt				db "FAT16"				                           B   262    
005907 00536572 69616C     B   263    						db 0,"Serial"			00590E 0054696D 65         B   264    						db 0,"Time"				005913 00466F6E 74         B   265    						db 0,"Font"				005918 00546F6F            B   266    						db 0,"Too"				00591C 004C6F6E 67         B   267    						db 0,"Long"				005921 00446573 74696E61   B   268    						db 0,"Destination"		005929 74696F6E 
00592D 0053656C 65637465   B   269    						db 0,"Selected"			005935 64 
005936 00496E76 616C6964   B   270    						db 0,"Invalid"			00593E 004D6973 73696E67   B   271    						db 0,"Missing"			005946 004F4B              B   272    						db 0,"OK"				005949 004F53              B   273    						db 0,"OS"				00594C 0050726F 74656374   B   274    						db 0,"Protected"		005954 6564 
005956 0041                B   275    						db 0,"A"				005958 004973              B   276    						db 0,"Is"				00595B 00456D70 7479       B   277    						db 0,"Empty"			005961 00456E64            B   278    						db 0,"End"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   279    						
005965 0024                B   280    						db 0,"$"
005967 7878                B   281    hex_byte_txt			db "xx"					                           B   282    						
005969 00417070 656E64     B   283    						db 0,"Append"			005970 003F                B   284    						db 0,"?"				005972 0024                B   285    						db 0,"$"				005974 00417761 6974696E   B   286    						db 0,"Awaiting"			00597C 67 
00597D 00526563 65697669   B   287    						db 0,"Receiving"		005985 6E67 
005987 0053656E 64696E67   B   288    						db 0,"Sending"			00598F 000B                B   289    						db 0,11					005991 002E2E              B   290    						db 0,".."				005994 004E616D 65         B   291    						db 0,"Name"				005999 00204279 746573     B   292    						db 0," Bytes"			0059A0 00507265 7373       B   293    						db 0,"Press"			0059A6 00416E79            B   294    						db 0,"Any"				0059AA 004B6579            B   295    						db 0,"Key"				0059AE 00456E74 6572       B   296    						db 0,"Enter"			0059B4 9A455845 43         B   297    						db 9ah,"EXEC"			                           B   298    				
0059B9 0052756E            B   299    						db 0,"Run"				0059BD 00536372 697074     B   300    						db 0,"Script"			0059C4 00594553            B   301    yes_txt					db 0,"YES" 				0059C8 00546F              B   302    						db 0,"To"				0059CB 00536574            B   303    						db 0,"Set"				0059CF 00436F6E 74696E75   B   304    						db 0,"Continue"			0059D7 65 
0059D8 004E6F6E 65         B   305    						db 0,"None"				0059DD 00447269 766572     B   306    						db 0,"Driver"			0059E4 9B3C                B   307    						db 9bh,"<"				0059E6 004E6577 6572       B   308    						db 0,"Newer"			0059EC 00526571 75697265   B   309    						db 0,"Required"			0059F4 64 
0059F5 00465047 4120636F   B   310    						db 0,"FPGA config"		0059FD 6E666967 
005A01 00556E63 68616E67   B   311    						db 0,"Unchanged"		005A09 6564 
005A0B 006C6F63 206C656E   B   312    						db 0,"loc len [per vol 
005A13 205B7065 7220766F 
005A1B 6C206368 616E7320 
005A23 6C6F6F70 3F5D20 
005A2A 9C50414C 45545445   B   313    						db 9ch,"PALETTE"		005A32 0070616C 65747465   B   314    						db 0,"palette"			                           B   315    						
005A3A 9D4D4F55 5345       B   316    						db 9dh,"MOUSE"			005A40 00456E61 626C65     B   317    						db 0,"Enable"			005A47 004B6579 626F6172   B   318    						db 0,"Keyboard"			005A4F 64 
005A50 00446574 65637465   B   319    						db 0,"Detected"			005A58 64 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005A59 004D6F75 7365       B   320    						db 0,"Mouse"			005A5F 00536563 746F72     B   321    						db 0,"Sector"			005A66 00496E63 6F727265   B   322    						db 0,"Incorrect"		005A6E 6374 
005A70 9E564D4F 4445       B   323    						db 9eh,"VMODE"			005A76 00566964 656F       B   324    						db 0,"Video"			005A7C 004D6F64 65         B   325    						db 0,"Mode"				005A81 9F464F4E 54         B   326    						db 9fh,"FONT"			005A86 00416E64            B   327    						db 0,"And"				005A8A 00536176 696E67     B   328    						db 0,"Saving"			005A91 00556E73 7570706F   B   329    						db 0,"Unsupported"		005A99 72746564 
005A9D A0534554            B   330    						db 0a0h,"SET"			005AA1 005B7661 723D7374   B   331    						db 0,"[var=string]"		005AA9 72696E67 5D 
                           B   332    
005AAE 00456E76 6172       B   333    						db 0,"Envar"			005AB4 A1445A              B   334    						db 0a1h,"DZ"			005AB7 0041444C            B   335    						db 0,"ADL"				005ABB 005A3830            B   336    						db 0,"Z80"				005ABF 00506C61 79         B   337    						db 0,"Play"				005AC4 00417564 696F       B   338    						db 0,"Audio"			                           B   339    						
005ACA 0001                B   340    						db 0,1					                           B   341    
                           B   342    
                           B   343    
                           B   344    
                           B   345    
005ACC 2199696A 5F916F92   B   346    save_append_msg			db 021h,099h,069h,06ah,
005AD4 9700 
005AD6 2F0A9300            B   347    os_loadaddress_msg 		db 02fh,00ah,093h,0		005ADA 21649300            B   348    os_filesize_msg			db 021h,064h,093h,0		005ADE 94219700            B   349    ser_rec_msg				db 094h,021h,097h,0		005AE2 956F9897 00         B   350    ser_rec2_msg			db 095h,06fh,098h,097h,
005AE7 966F9897 00         B   351    ser_send_msg			db 096h,06fh,098h,097h,
005AEC 9521BBBC 989700     B   352    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005AF3 A77C9097 00         B   353    hw_err_msg				db 0a7h,07ch,090h,097h,
005AF8 607C00              B   354    disk_err_msg			db 060h,07ch,0			005AFB A1779797 00         B   355    script_aborted_msg		db 0a1h,077h,097h,097h,
005B00 76B2B397 00         B   356    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   357    
005B05 9700                B   358    packed_help1				db 097h,0
005B07 0100                B   359    							db 001h,0			005B09 0200                B   360    							db 002h,0			005B0B 3307095F 4F500B00   B   361    							db 033h,007h,009h,0
005B13 3407515F 4F1400     B   362    							db 034h,007h,051h,0
005B1A 37070707 5F195000   B   363    							db 037h,007h,007h,0
005B22 3B075FC2 1700       B   364    							db 03bh,007h,05fh,0
005B28 C1075FC3 1700       B   365    							db 0c1h,007h,05fh,0
005B2E 3F070754 5F0E5000   B   366    							db 03fh,007h,007h,0
005B36 42075F0F 0A00       B   367    							db 042h,007h,05fh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B3C 3E070709 5F0D5000   B   368    							db 03eh,007h,007h,0
005B44 44075F10 500B00     B   369    							db 044h,007h,05fh,0
005B4B 475F1011 1200       B   370    							db 047h,05fh,010h,0
005B51 4C075F10 50131400   B   371    							db 04ch,007h,05fh,0
                           B   372    	
005B59 9700                B   373    							db 097h,0
005B5B 0300                B   374    							db 003h,0			005B5D 0400                B   375    							db 004h,0			005B5F 38231E1D 5F1B601E   B   376    							db 038h,023h,01eh,0
005B67 1D00 
005B69 3C1F5F20 2100       B   377    							db 03ch,01fh,05fh,0
005B6F 3D5F101D 00         B   378    							db 03dh,05fh,010h,0
005B74 411A995F 551C00     B   379    							db 041h,01ah,099h,0
005B7B 431F075F 2F2100     B   380    							db 043h,01fh,007h,0
005B82 561D5F24 1D00       B   381    							db 056h,01dh,05fh,0
005B88 455F2557 00         B   382    							db 045h,05fh,025h,0
005B8D 481D5F29 1D00       B   383    							db 048h,01dh,05fh,0
005B93 4958595F 2A2100     B   384    							db 049h,058h,059h,0
005B9A 4A1F075F 2C2100     B   385    							db 04ah,01fh,007h,0
005BA1 4B1F075A 5F2D2100   B   386    							db 04bh,01fh,007h,0
005BA9 4D1F075A 5F2E2100   B   387    							db 04dh,01fh,007h,0
005BB1 235F1860 00         B   388    							db 023h,05fh,018h,0
                           B   389    
005BB6 9700                B   390    							db 097h,0
005BB8 0500                B   391    							db 005h,0			005BBA 0600                B   392    							db 006h,0			005BBC 395F1516 00         B   393    							db 039h,05fh,015h,0
005BC1 9F1F5FA0 A100       B   394    							db 09fh,01fh,05fh,0
005BC7 BA1F5F1B 8200       B   395    							db 0bah,01fh,05fh,0
005BCD B05FB1B0 A700       B   396    							db 0b0h,05fh,0b1h,0
005BD3 AE095F1B AF00       B   397    							db 0aeh,09h,05fh,01
005BD9 3A325F1B 5B00       B   398    							db 03ah,032h,05fh,0
005BDF BEBF5FA4 C000       B   399    							db 0beh,0bfh,05fh,0
005BE5 35AD5FC4 5013C500   B   400    							db 035h,0adh,05fh,0
005BED 4E5F1030 3100       B   401    							db 04eh,05fh,010h,0
005BF3 B7095F1B B8B900     B   402    							db 0b7h,09h,5fh,01b
005BFA 5C5F105D 00         B   403    							db 05ch,05fh,010h,0
005BFF 9700                B   404    							db 097h,0
005C01 FF                  B   405    							db 0ffh
                           B   406    
                           B   407    
                           B   408    
                           B   409    
005C02 7C1D00              B   410    os_cmd_locs					dw24 os_cmd_colon	005C05 5A2C00              B   411    							dw24 os_cmd_gtr		005C08 2D3600              B   412    							dw24 os_cmd_sound	005C0B 231C00              B   413    							dw24 os_cmd_c		005C0E 901C00              B   414    							dw24 os_cmd_cd		005C11 761D00              B   415    							dw24 os_cmd_cls		005C14 943400              B   416    							dw24 os_cmd_pen		005C17 961D00              B   417    							dw24 os_cmd_d		                           B   418    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C1A F72800              B   419    							dw24 os_cmd_del		005C1D 0C2900              B   420    							dw24 os_cmd_dir		005C20 882B00              B   421    							dw24 os_cmd_h		005C23 082A00              B   422    							dw24 os_cmd_f		005C26 302A00              B   423    							dw24 os_cmd_format	005C29 8E2C00              B   424    							dw24 os_cmd_lb		005C2C 1D2D00              B   425    							dw24 os_cmd_m		005C2F 1D3200              B   426    							dw24 os_cmd_remount
                           B   427    
005C32 742D00              B   428    							dw24 os_cmd_r		005C35 A52E00              B   429    							dw24 os_cmd_rd		005C38 B22E00              B   430    							dw24 os_cmd_rn		005C3B 362F00              B   431    							dw24 os_cmd_rx		005C3E CE2E00              B   432    							dw24 os_cmd_sb		005C41 C93100              B   433    							dw24 os_cmd_t		005C44 5D3100              B   434    							dw24 os_cmd_tx		005C47 293200              B   435    							dw24 os_cmd_vers	                           B   436    							
005C4A 672D00              B   437    							dw24 os_cmd_md		005C4D 362C00              B   438    							dw24 os_cmd_help	005C50 5A3200              B   439    							dw24 os_cmd_exec	005C53 923400              B   440    							dw24 os_cmd_ltn		005C56 B83400              B   441    							dw24 os_cmd_palette
005C59 E93400              B   442    							dw24 os_cmd_mouse	005C5C 253500              B   443    							dw24 os_cmd_vmode	005C5F 353500              B   444    							dw24 os_cmd_font	                           B   445    							
005C62 C43500              B   446    							dw24 os_cmd_set		005C65 203600              B   447    							dw24 os_cmd_dz		                           B   448    							
                           B   449    								
005C68 00                  B   450    packed_msg_list				db 0				                           B   451    		
005C69 606100              B   452    							db 060h,061h,0		005C6C 21626300            B   453    							db 021h,062h,063h,0
005C70 1D6100              B   454    							db 01dh,061h,0		005C73 628C1D00            B   455    							db 062h,08ch,01dh,0
005C77 1D8D628E 00         B   456    							db 01dh,08dh,062h,0
005C7C 628C2100            B   457    							db 062h,08ch,021h,0
005C80 21648D65 00         B   458    							db 021h,064h,08dh,0
005C85 0A666768 00         B   459    							db 00ah,066h,067h,0
005C8A 2199696A 00         B   460    							db 021h,099h,069h,0
005C8F 696B6C00            B   461    							db 069h,06bh,06ch,0
                           B   462    					
005C93 727300              B   463    							db 072h,073h,0		005C96 877500              B   464    							db 087h,075h,0		005C99 76219900            B   465    							db 076h,021h,099h,0
                           B   466    					
005C9D 87B500              B   467    							db 087h,0b5h,0		005CA0 797400              B   468    							db 079h,074h,0		005CA3 9A7A00              B   469    bytes_loaded_msg			db 09ah,07ah,0		005CA6 7B7C00              B   470    							db 07bh,07ch,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005CA9 747D00              B   471    							db 074h,07dh,0		                           B   472    
005CAC 627F00              B   473    format_err_msg				db 062h,07fh,0		                           B   474    
005CAF 816600              B   475    							db 081h,066h,0		005CB2 21998384 00         B   476    							db 021h,099h,083h,0
005CB7 76260A00            B   477    							db 076h,026h,00ah,0
005CBB 76216400            B   478    							db 076h,021h,064h,0
005CBF 2D7700              B   479    							db 02dh,077h,0		005CC2 2D7C6B85 00         B   480    							db 02dh,07ch,06bh,0
005CC7 628C080C 00         B   481    							db 062h,08ch,08h,0c
005CCC A9316708 AA00       B   482    							db 0a9h,031h,067h,0
005CD2 768F0A00            B   483    							db 076h,08fh,00ah,0
005CD6 76850A00            B   484    							db 076h,085h,00ah,0
                           B   485    					
005CDA 746800              B   486    							db 074h,068h,0		005CDD 887D00              B   487    							db 088h,07dh,0		005CE0 8900                B   488    ok_msg						db 089h,0			                           B   489    					
005CE2 876000              B   490    							db 087h,060h,0		005CE5 1A627800            B   491    							db 01ah,062h,078h,0
                           B   492    					
005CE9 1D626300            B   493    							db 01dh,062h,063h,0
005CED 7700                B   494    							db 077h,0			                           B   495    					
005CEF 21996D00            B   496    							db 021h,099h,06dh,0
005CF3 8A508B00            B   497    							db 08ah,050h,08bh,0
005CF7 6F71706E 00         B   498    							db 06fh,071h,070h,0
005CFC 763600              B   499    no_vols_msg					db 076h,036h,0		005CFF 97A66300            B   500    none_found_msg				db 097h,0a6h,063h,0
                           B   501    							
005D03 B62100              B   502    							db 0b6h,021h,0		005D06 A9316708 AA00       B   503    							db 0a9h,031h,067h,0
005D0C 21AC00              B   504    							db 021h,0ach,0		                           B   505    							
005D0F 766F00              B   506    							db 076h,06fh,0		005D12 746F00              B   507    							db 074h,06fh,0		005D15 66676800            B   508    							db 066h,067h,068h,0
005D19 BD1A00              B   509    							db 0bdh,01ah,0		005D1C 1A62B300            B   510    							db 01ah,062h,0b3h,0
005D20 1A7C00              B   511    							db 01ah,07ch,0		005D23 A17C00              B   512    							db 0a1h,07ch,0		                           B   513    							
005D26 FF                  B   514    							db 0ffh				                           B   515    
                           B   516    ;----------------------------------------------
                           B   517    
005D27                     B   518    kernal_error_code_translation
                           B   519    
005D27 242D2E14 08110F2A   B   520    					db 24h,2dh,2eh,14h, 08h,11h
005D2F 2F303132 331F 
                           B   521    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D35                     B   522    fs_error_code_translation
                           B   523    
005D35 00010203 04050607   B   524    					db 00h,01h,02h,03h,04h,05h,
005D3D 08090A0B 0C0D1321 
005D45 22232425 260E0000   B   525    					db 22h,23h,24h,25h,26h,0eh,
                           B   526    
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    ; Scancode to ASCII keymaps
                           B   530    ;----------------------------------------------
                           B   531    
                           C     0    include	'UK_keymap.asm'
005D4D                     C     1    keymap:
005D4D 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005D55 00000000 00006000 
005D5D 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005D65 00007A73 61773200 
005D6D 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005D75 00207666 74723500 
005D7D 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005D85 00006D6A 75373800 
005D8D 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005D95 002E2F6C 3B702D00 
005D9D 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005DA5 0000005D 00230000 
005DAD 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005DB5 00000000 00000000 
005DBD AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005DC5 21000000 5A534157 
005DCD 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005DD5 A3000020 56465452 
005DDD 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005DE5 5E000000 4D4A5526 
005DED 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005DF5 2800003E 3F4C3A50 
005DFD 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005E05 00000000 007D007E 
005E0D 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005E15 00000000 00000000 
005E1D 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005E25 00000000 00000000 
005E2D 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005E35 00000000 00000000 
005E3D 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005E45 00000000 00000000 
005E4D 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005E55 00000000 00000000 
005E5D 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005E65 00000000 00000000 
005E6D 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   533    
       00005D4D            B   534    unshifted_keymap equ keymap+00h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
       00005DAF            B   535    shifted_keymap   equ keymap+62h
       00005E11            B   536    alted_keymap	 equ keymap+c4h
                           B   537    	
                           B   538    ;----------------------------------------------
                           B   539    
005E73 00                  B   540    ui_index				db 0				; u
005E74 00                  B   541    ui_maxchars				db 0				; "
005E75 000000              B   542    ui_string_addr			dw24 0				; "
                           B   543    
                           B   544    ;----------------------------------------------
                           B   545    ; OS Display parameters
                           B   546    ;----------------------------------------------
                           B   547    
005E78 00                  B   548    video_mode				db 0
005E79 0700                B   549    current_pen				dw 07h				; C
005E7B 0000                B   550    background_colour		dw 00h				; F
                           B   551    
005E7D 00000F00 000F0F0F   B   552    pen_palette				dw 0000h,000fh,0f00h,0f
005E85 F000FF00 F00FFF0F 
005E8D 55059909 CC0C710F   B   553    						dw 0555h,0999h,0ccch,0f
005E95 7F00F80D 40088C03 
                           B   554    
005E9D 00                  B   555    plotchar_colour			db 0				; c
                           B   556    
005E9E 00                  B   557    char_under_cursor		db 0			
005E9F 00                  B   558    cursor_present			db 0				; 1
005EA0 00                  B   559    overwrite_mode			db 0
005EA1 00                  B   560    cursor_image_char		db 0
                           B   561    
                           B   562    ;----------------------------------------------
                           B   563    
005EA2                     B   564    display_parameters
                           B   565    
005EA2 00                  B   566    video_doubling			db 0
005EA3 000000              B   567    charmap_rows			dw24 0					005EA6 000000              B   568    charmap_columns			dw24 0				
                           B   569    
                           B   570    ;----------------------------------------------
                           B   571    
005EA9                     B   572    vmode_parameter_list
                           B   573    
005EA9 00503C              B   574    				db 00b, 80,60	; vmode 0 (vide
005EAC 01501E              B   575    				db 01b, 80,30	; vmode 1
005EAF 02283C              B   576    				db 10b, 40,60	; vmode 2	
005EB2 03281E              B   577    				db 11b, 40,30	; vmode 3
                           B   578    				
                           B   579    ;==============================================
                           B   580    ;  Serial Routine Data
                           B   581    ;==============================================
                           B   582    
005EB5 000000              B   583    serial_ez80_address		dw24 0
005EB8 000000              B   584    serial_file_length		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005EBB 000000              B   585    serial_fn_addr			dw24 0
005EBE 00 00 00 00 00 00   B   586    serial_filename			blkb 18,0		
005EC4 00 00 00 00 00 00 
005ECA 00 00 00 00 00 00 
005ED0 00                  B   587    serial_fn_length		db 0
005ED1 00                  B   588    serial_timeout			db 0
                           B   589    
005ED2 00 00 00 00 00 00   B   590    serial_fileheader		blkb 20,0
005ED8 00 00 00 00 00 00 
005EDE 00 00 00 00 00 00 
005EE4 00 00 
005EE6 5A383050 2E464845   B   591    serial_header_id		db "Z80P.FHEADER"		005EEE 41444552 
005EF2 00                  B   592    serial_transfer_started	db 0
                           B   593    
005EF3 00                  B   594    anim_wait_count			db 0
                           B   595    
                           B   596    ;==============================================
                           B   597    
005EF4 F3C8                B   598    intellimouse_seq	db 0f3h,200
005EF6 F364                B   599    					db 0f3h,100
005EF8 F350                B   600    					db 0f3h,80
                           B   601    
005EFA E803                B   602    mouse_settings_seq	db 0e8h,default_resolution
005EFC E6                  B   603    					db default_scaling
005EFD F364                B   604    					db 0f3h,default_sample_rate
005EFF F4                  B   605    					db 0f4h
                           B   606    					
                           B   607    ;----------------------------------------------
                           B   608    ; FILE SYSTEM RELATED VARIABLES
                           B   609    ;----------------------------------------------
                           B   610    
005F00 00                  B   611    boot_drive			db 0
                           B   612    
005F01 00                  B   613    current_volume		db 0
                           B   614    	
005F02 00                  B   615    current_driver		db 0			;normally u
                           B   616    
005F03 00                  B   617    device_count		db 0			;IE: the nu
                           B   618    
005F04 00                  B   619    volume_count		db 0
                           B   620    				
005F05 20564F4C 303A00     B   621    vol_txt				db " VOL0:",0	;space pref
005F0C 44455630 3A00       B   622    dev_txt				db "DEV0:",0
                           B   623    
005F12 000000              B   624    sector_rd_wr_addr	dw24 0
                           B   625    
                           B   626    ;==============================================
                           B   627    
                           B   628    ; Add storage device drivers here, end with 0
                           B   629    
005F15 7F3700              B   630    driver_table		dw24 sd_card_driver	;Device
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F18 000000              B   631    					dw24 0				;last d
                           B   632    
                           B   633    ; Each driver's code should have a header in th
                           B   634    ; ---------------------------------------------
                           B   635    ; $0    = JP to get ID routin
                           B   636    ; $4    = JP to read sector routine
                           B   637    ; $8    = JP to write sector routinee
                           B   638    ; $c    = ASCII name of device type (null termi
                           B   639    ;==============================================
                           B   640    
005F1B                     B   641    volume_dir_clusters
                           B   642    
005F1B 00 00 00 00 00 00   B   643    					blkb max_volumes*3,0
005F21 00 00 00 00 00 00 
005F27 00 00 00 00 00 00 
005F2D 00 00 00 00 00 00 
                           B   644    	
005F33                     B   645    volume_mount_list
                           B   646    
005F33 00 00 00 00 00 00   B   647    					blkb max_volumes*16,0
005F39 00 00 00 00 00 00 
005F3F 00 00 00 00 00 00 
005F45 00 00 00 00 00 00 
005F4B 00 00 00 00 00 00 
005F51 00 00 00 00 00 00 
005F57 00 00 00 00 00 00 
005F5D 00 00 00 00 00 00 
005F63 00 00 00 00 00 00 
005F69 00 00 00 00 00 00 
005F6F 00 00 00 00 00 00 
005F75 00 00 00 00 00 00 
005F7B 00 00 00 00 00 00 
005F81 00 00 00 00 00 00 
005F87 00 00 00 00 00 00 
005F8D 00 00 00 00 00 00 
005F93 00 00 00 00 00 00 
005F99 00 00 00 00 00 00 
005F9F 00 00 00 00 00 00 
005FA5 00 00 00 00 00 00 
005FAB 00 00 00 00 00 00 
005FB1 00 00 
                           B   648    
                           B   649    ; Each entry is 16 bytes in the form:
                           B   650    
                           B   651    ; OFFSETS
                           B   652    ; -------
                           B   653    ; $00 - Volume is present (0/1)
                           B   654    ; $01 - Volume's host driver number (1 byte)	                           B   655    ; $02 - [reserved]
                           B   656    ; $03 - [reserved]
                           B   657    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   658    ; $07 - Partition number on host drive (0/1/2/3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   659    ; $08 - Offset in sectors from MBR to partition
                           B   660    ; $0c - [reserved]
                           B   661    ; $0d - [reserved]	
                           B   662    ; $0e - [reserved]
                           B   663    ; $0f - [reserved]
                           B   664    
                           B   665    ;==============================================
                           B   666    
005FB3                     B   667    host_device_hardware_info
                           B   668    
005FB3 00 00 00 00 00 00   B   669    					blkb 32*4,0
005FB9 00 00 00 00 00 00 
005FBF 00 00 00 00 00 00 
005FC5 00 00 00 00 00 00 
005FCB 00 00 00 00 00 00 
005FD1 00 00 00 00 00 00 
005FD7 00 00 00 00 00 00 
005FDD 00 00 00 00 00 00 
005FE3 00 00 00 00 00 00 
005FE9 00 00 00 00 00 00 
005FEF 00 00 00 00 00 00 
005FF5 00 00 00 00 00 00 
005FFB 00 00 00 00 00 00 
006001 00 00 00 00 00 00 
006007 00 00 00 00 00 00 
00600D 00 00 00 00 00 00 
006013 00 00 00 00 00 00 
006019 00 00 00 00 00 00 
00601F 00 00 00 00 00 00 
006025 00 00 00 00 00 00 
00602B 00 00 00 00 00 00 
006031 00 00 
                           B   670    
                           B   671    ; Each entry is 32 bytes..
                           B   672    ;
                           B   673    ; OFFSETS
                           B   674    ; -------
                           B   675    ; $00 - Device driver number
                           B   676    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   677    ; $05 - Zero terminated hardware name (22 ASCII
                           B   678    ; (remaining bytes to $1F currently unused)
                           B   679    
                           B   680    ;----------------------------------------------
                           B   681    
006033 000000              B   682    dhwn_temp_pointer		dw24 0
                           B   683    
006036 00                  B   684    partition_temp			db 0
006037 00                  B   685    vols_on_device_temp		db 0
006038 00                  B   686    sys_driver_backup		db 0
006039 00                  B   687    os_quiet_mode			db 0
                           B   688    
00603A 326900              B   689    default_load_addr		dw24 os_max_addr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   690    
                           B   691    ;----------------------------------------------
                           B   692    
00603D 00 00 00 00 00 00   B   693    time_data				blkb	7,0
006043 00 
                           B   694    
006044 00                  B   695    frozen					db 0
006045 01                  B   696    first_run				db 1
006046 01                  B   697    devices_connected		db 1					                           B   698    
                           B   699    ;----------------------------------------------
                           B   700    
006047 326900              B   701    sysram_os_highest		dw24 os_max_addr
00604A 000080              B   702    vram_a_os_highest		dw24 vram_a_addr
00604D 0000C0              B   703    vram_b_os_highest		dw24 vram_b_addr
                           B   704    
006050 000000              B   705    charmap_size			dw24 0
                           B   706    
                           B   707    ;----------------------------------------------
                           B   708    
006053 00                  B   709    store_a1				db 0		
006054 000000              B   710    store_bc1				dw24 0
006057 000000              B   711    store_de1				dw24 0
00605A 000000              B   712    store_hl1				dw24 0
00605D 00                  B   713    store_a2				db 0
00605E 000000              B   714    store_bc2				dw24 0
006061 000000              B   715    store_de2				dw24 0
006064 000000              B   716    store_hl2				dw24 0
006067 000000              B   717    store_ix				dw24 0
00606A 000000              B   718    store_iy				dw24 0
00606D 000000              B   719    store_pc				dw24 0		;only relev
006070 000000              B   720    store_spl				dw24 0
006073 0000                B   721    store_sps				dw 0
006075 00                  B   722    store_mbase				db 0
006076 00                  B   723    store_f	 				db 0
006077 00                  B   724    store_adl				db 0
                           B   725    
                           B   726    ;----------------------------------------------
006078                     B   727    os_variables
                           B   728    ;----------------------------------------------
                           B   729    
006078 000000              B   730    kernal_ix_cache			dw24 0
                           B   731    
00607B 00                  B   732    store_registers			db 0
00607C 000000              B   733    com_start_addr			dw24 0
                           B   734    
00607F 00 00 00 00 00 00   B   735    temp_string				blkb max_buffer_chars+2
006085 00 00 00 00 00 00 
00608B 00 00 00 00 00 00 
006091 00 00 00 00 00 00 
006097 00 00 00 00 00 00 
00609D 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0060A3 00 00 00 00 00 00 
0060A9 00 00 00 00 00 00 
0060AF 00 00 00 00 00 00 
0060B5 00 00 00 00 00 00 
0060BB 00 00 00 00 00 00 
0060C1 00 00 00 00 00 00 
0060C7 00 00 00 00 00 00 
0060CD 00 00 00 00 
0060D1 00 00 00 00 00 00   B   736    script_fn				blkb 13,0
0060D7 00 00 00 00 00 00 
0060DD 00 
                           B   737    
0060DE 00                  B   738    sector_lba0				db 0			; keep 
0060DF 00                  B   739    sector_lba1				db 0
0060E0 00                  B   740    sector_lba2				db 0
0060E1 00                  B   741    sector_lba3				db 0
                           B   742    
                           B   743    ;----------------------------------------------
                           B   744    
0060E2 000000              B   745    cursor_pos				dw24 0			; 3rd b
                           B   746    
       000060E2            B   747    cursor_y 				equ cursor_pos
       000060E3            B   748    cursor_x 				equ cursor_pos+1
                           B   749    						
0060E5 00                  B   750    cursorflashtimer		db 0
0060E6 00                  B   751    cursor_status			db 0
0060E7 00                  B   752    os_linecount			db 0
                           B   753    		
0060E8 000000              B   754    mem_mon_addr			dw24 0
0060EB 000000              B   755    cmdop_start_address		dw24 0
0060EE 000000              B   756    cmdop_end_address		dw24 0
0060F1 000000              B   757    copy_dest_address		dw24 0
0060F4 000000              B   758    hex_address				dw24 0
                           B   759    
0060F7 000000              B   760    find_hexstringascii 	dw24 0
0060FA 000000              B   761    xrr_temp				dw24 0
0060FD 00                  B   762    temphex					db 0
0060FE 00                  B   763    fillbyte				db 0 
0060FF 00                  B   764    ui_im_cache				db 0
                           B   765    
006100 00 00 00 00 00 00   B   766    commandstring			blkb max_buffer_chars+2
006106 00 00 00 00 00 00 
00610C 00 00 00 00 00 00 
006112 00 00 00 00 00 00 
006118 00 00 00 00 00 00 
00611E 00 00 00 00 00 00 
006124 00 00 00 00 00 00 
00612A 00 00 00 00 00 00 
006130 00 00 00 00 00 00 
006136 00 00 00 00 00 00 
00613C 00 00 00 00 00 00 
006142 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006148 00 00 00 00 00 00 
00614E 00 00 00 00 
006152 00 00 00 00 00 00   B   767    output_line				blkb max_buffer_chars+2
006158 00 00 00 00 00 00 
00615E 00 00 00 00 00 00 
006164 00 00 00 00 00 00 
00616A 00 00 00 00 00 00 
006170 00 00 00 00 00 00 
006176 00 00 00 00 00 00 
00617C 00 00 00 00 00 00 
006182 00 00 00 00 00 00 
006188 00 00 00 00 00 00 
00618E 00 00 00 00 00 00 
006194 00 00 00 00 00 00 
00619A 00 00 00 00 00 00 
0061A0 00 00 00 00 
                           B   768    				
0061A4 000000              B   769    os_args_loc				dw24 0
0061A7 000000              B   770    os_args_pos_cache		dw24 0
                           B   771    
0061AA 000000              B   772    os_dir_block_cache  	dw24 0
0061AD 000000              B   773    os_extcmd_jmp_addr		dw24 0
                           B   774    
                           B   775    
0061B0 000000              B   776    script_dir				dw24 0
0061B3 000000              B   777    script_file_offset		dw24 0
0061B6 000000              B   778    script_length			dw24 0
                           B   779    
0061B9 00                  B   780    script_flags			db 0
                           B   781    
0061BA 00 00 00 00 00 00   B   782    if_name_txt				blkb max_if_chars+2,0
0061C0 00 00 00 00 00 00 
0061C6 00 00 00 00 00 00 
0061CC 00 00 00 00 00 00   B   783    if_value_txt			blkb max_if_chars+2,0
0061D2 00 00 00 00 00 00 
0061D8 00 00 00 00 00 00 
0061DE 00 00 00 00 00 00   B   784    if_label_txt			blkb max_if_chars+2,0
0061E4 00 00 00 00 00 00 
0061EA 00 00 00 00 00 00 
                           B   785    
                           B   786    
0061F0 0000                B   787    char_to_print			db 0,0	; zero terminat
                           B   788    
                           B   789    ;----------------------------------------------
                           B   790    ; Keyboard buffer and registers
                           B   791    ;----------------------------------------------
                           B   792    
0061F2 00 00 00 00 00 00   B   793    scancode_buffer			blkb 32,0
0061F8 00 00 00 00 00 00 
0061FE 00 00 00 00 00 00 
006204 00 00 00 00 00 00 
00620A 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006210 00 00 
                           B   794    
006212 00                  B   795    key_buf_wr_idx			db 0
006213 00                  B   796    key_buf_rd_idx			db 0
006214 00                  B   797    key_release_mode		db 0		
006215 00                  B   798    not_currently_used		db 0
006216 00                  B   799    key_mod_flags			db 0
006217 00                  B   800    current_scancode		db 0
006218 00                  B   801    current_asciicode		db 0
                           B   802    
                           B   803    ;----------------------------------------------
                           B   804    ; Mouse related registers
                           B   805    ;----------------------------------------------
                           B   806    
006219 00                  B   807    mouse_id				db 0
00621A 00                  B   808    mouse_packet_size		db 0
                           B   809    
00621B 00 00 00 00         B   810    mouse_packet			blkb 4,0			; t
00621F 00                  B   811    mouse_packet_index		db 0				;
006220 00                  B   812    mouse_buttons			db 0				;
006221 000000              B   813    mouse_disp_x			dw24 0				; c
006224 000000              B   814    mouse_disp_y			dw24 0				; c
006227 00                  B   815    mouse_wheel				db 0				; m
006228 00                  B   816    mouse_updated			db 0
                           B   817    
006229 000000              B   818    mouse_window_size_x		dw24 0				; t
00622C 000000              B   819    mouse_window_size_y		dw24 0
00622F 000000              B   820    mouse_abs_x				dw24 0
006232 000000              B   821    mouse_abs_y				dw24 0
006235 000000              B   822    mouse_disp_x_old		dw24 0
006238 000000              B   823    mouse_disp_y_old		dw24 0
00623B 000000              B   824    mouse_disp_x_buffer		dw24 0
00623E 000000              B   825    mouse_disp_y_buffer		dw24 0
006241 00                  B   826    mouse_new_window		db 0
                           B   827    
                           B   828    ;----------------------------------------------
       000060E2            B   829    first_os_var			equ cursor_y
006242 00                  B   830    last_os_var				db 0
                           B   831    ;----------------------------------------------
                           B   832    
                           B   833    ;==============================================
                           B   834    ; Environment variables
                           B   835    ;==============================================
                           B   836    
006243 4552524F 523D3030   B   837    envar_list				db "ERROR=00",0
00624B 00 
00624C FF                  B   838    first_ext_ev_entry		db 0ffh
00624D 00 00 00 00 00 00   B   839    						blkb envar_buffer_size,
006253 00 00 00 00 00 00 
006259 00 00 00 00 00 00 
00625F 00 00 00 00 00 00 
006265 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00626B 00 00 00 00 00 00 
006271 00 00 00 00 00 00 
006277 00 00 00 00 00 00 
00627D 00 00 00 00 00 00 
006283 00 00 00 00 00 00 
006289 00 00 00 00 00 00 
00628F 00 00 00 00 00 00 
006295 00 00 00 00 00 00 
00629B 00 00 00 00 00 00 
0062A1 00 00 00 00 00 00 
0062A7 00 00 00 00 00 00 
0062AD 00 00 00 00 00 00 
0062B3 00 00 00 00 00 00 
0062B9 00 00 00 00 00 00 
0062BF 00 00 00 00 00 00 
0062C5 00 00 00 00 00 00 
0062CB 00 00 00 00 00 00 
0062D1 00 00 00 00 00 00 
0062D7 00 00 00 00 00 00 
0062DD 00 00 00 00 00 00 
0062E3 00 00 00 00 00 00 
0062E9 00 00 00 00 00 00 
0062EF 00 00 00 00 00 00 
0062F5 00 00 00 00 00 00 
0062FB 00 00 00 00 00 00 
006301 00 00 00 00 00 00 
006307 00 00 00 00 00 00 
00630D 00 00 00 00 00 00 
006313 00 00 00 00 00 00 
006319 00 00 00 00 00 00 
00631F 00 00 00 00 00 00 
006325 00 00 00 00 00 00 
00632B 00 00 00 00 00 00 
006331 00 00 00 00 00 00 
006337 00 00 00 00 00 00 
00633D 00 00 00 00 00 00 
006343 00 00 00 00 00 00 
006349 00 00 00 00 
                           B   840    
00634D 4C6200              B   841    envar_top_loc			dw24 first_ext_ev_entry
                           B   842    
                           B   843    ;==============================================
                           B   844    
                           B     0    	include		'phil_font_packed.asm'			006350                     B     1    packed_font_start
006350 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006358 3C3C1800 181800EE 
006360 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006368 6CFE6C6C 00187EE0 
006370 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006378 3870E6C6 0078ECEC 
006380 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006388 01000518 30016003 
006390 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006398 18300010 5438FE38 
0063A0 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
0063A8 18010007 38387001 
0063B0 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
0063B8 0000060E 1C3870E0 
0063C0 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
0063C8 00387801 38047C00 
0063D0 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
0063D8 FE0C180C 0ECE7C00 
0063E0 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
0063E8 FEE0FC01 0E03FC00 
0063F0 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
0063F8 FE060C18 01380300 
006400 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
006408 7C01CE03 7E0E7C01 
006410 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
006418 00033030 00303060 
006420 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
006428 00037E00 7E010003 
006430 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006438 7CEE0E3C 38003800 
006440 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006448 7CE6E6FE 01E60300 
006450 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006458 7CE601E0 03E67C00 
006460 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006468 E0F8E0E0 FE00FEE0 
006470 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
006478 E0EEE6E6 7C0001E6 
006480 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006488 38057C00 7E011C04 
006490 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006498 E6030001 E006FE00 
0064A0 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
0064A8 E6F6FEFE EEE6E600 
0064B0 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
0064B8 E603FCE0 E0007C01 
0064C0 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
0064C8 E603FCE6 E6007CEE 
0064D0 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
0064D8 38060001 E6067C00 
0064E0 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
0064E8 04D6FE6C 00E6E66C 
0064F0 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
0064F8 7E06FC00 FE0E1C38 
006500 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
006508 3C00C0E0 70381C0E 
006510 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
006518 10386CC6 01000BFE 
006520 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006528 E67E0000 E0E0FCE6 
006530 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006538 037C0000 06067EE6 
006540 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006548 E07C0000 3E70FC01 
006550 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006558 7E067C00 E0E0FC01 
006560 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006568 387C0000 1C00011C 
006570 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
006578 EE000078 0138047C 
006580 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006588 010003FC 01E60401 
006590 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006598 0003FCE6 E6FCE0E0 
0065A0 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
0065A8 0000DCE6 01E00301 
0065B0 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
0065B8 00387E01 38031E01 
0065C0 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
0065C8 0301E603 6C380100 
0065D0 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
0065D8 03E67C38 7CE60100 
0065E0 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
0065E8 00FE1C38 70FE003C 
0065F0 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
0065F8 18070078 18180C18 
006600 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
006608 0501FE07 0100FF01 
006610 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
006618 BC010029 7CC6BAA2 
006620 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
006628 060100FF 0100FF01 
006630 009C                B    48                    db 000h,09Ch
006632                     B    49    packed_font_end
                           A  3224    
006632 00 00 00 00 00 00   A  3225    sector_buffer	blkb 512,0
006638 00 00 00 00 00 00 
00663E 00 00 00 00 00 00 
006644 00 00 00 00 00 00 
00664A 00 00 00 00 00 00 
006650 00 00 00 00 00 00 
006656 00 00 00 00 00 00 
00665C 00 00 00 00 00 00 
006662 00 00 00 00 00 00 
006668 00 00 00 00 00 00 
00666E 00 00 00 00 00 00 
006674 00 00 00 00 00 00 
00667A 00 00 00 00 00 00 
006680 00 00 00 00 00 00 
006686 00 00 00 00 00 00 
00668C 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006692 00 00 00 00 00 00 
006698 00 00 00 00 00 00 
00669E 00 00 00 00 00 00 
0066A4 00 00 00 00 00 00 
0066AA 00 00 00 00 00 00 
0066B0 00 00 00 00 00 00 
0066B6 00 00 00 00 00 00 
0066BC 00 00 00 00 00 00 
0066C2 00 00 00 00 00 00 
0066C8 00 00 00 00 00 00 
0066CE 00 00 00 00 00 00 
0066D4 00 00 00 00 00 00 
0066DA 00 00 00 00 00 00 
0066E0 00 00 00 00 00 00 
0066E6 00 00 00 00 00 00 
0066EC 00 00 00 00 00 00 
0066F2 00 00 00 00 00 00 
0066F8 00 00 00 00 00 00 
0066FE 00 00 00 00 00 00 
006704 00 00 00 00 00 00 
00670A 00 00 00 00 00 00 
006710 00 00 00 00 00 00 
006716 00 00 00 00 00 00 
00671C 00 00 00 00 00 00 
006722 00 00 00 00 00 00 
006728 00 00 00 00 00 00 
00672E 00 00 00 00 00 00 
006734 00 00 00 00 00 00 
00673A 00 00 00 00 00 00 
006740 00 00 00 00 00 00 
006746 00 00 00 00 00 00 
00674C 00 00 00 00 00 00 
006752 00 00 00 00 00 00 
006758 00 00 00 00 00 00 
00675E 00 00 00 00 00 00 
006764 00 00 00 00 00 00 
00676A 00 00 00 00 00 00 
006770 00 00 00 00 00 00 
006776 00 00 00 00 00 00 
00677C 00 00 00 00 00 00 
006782 00 00 00 00 00 00 
006788 00 00 00 00 00 00 
00678E 00 00 00 00 00 00 
006794 00 00 00 00 00 00 
00679A 00 00 00 00 00 00 
0067A0 00 00 00 00 00 00 
0067A6 00 00 00 00 00 00 
0067AC 00 00 00 00 00 00 
0067B2 00 00 00 00 00 00 
0067B8 00 00 00 00 00 00 
0067BE 00 00 00 00 00 00 
0067C4 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0067CA 00 00 00 00 00 00 
0067D0 00 00 00 00 00 00 
0067D6 00 00 00 00 00 00 
0067DC 00 00 00 00 00 00 
0067E2 00 00 00 00 00 00 
0067E8 00 00 00 00 00 00 
0067EE 00 00 00 00 00 00 
0067F4 00 00 00 00 00 00 
0067FA 00 00 00 00 00 00 
006800 00 00 00 00 00 00 
006806 00 00 00 00 00 00 
00680C 00 00 00 00 00 00 
006812 00 00 00 00 00 00 
006818 00 00 00 00 00 00 
00681E 00 00 00 00 00 00 
006824 00 00 00 00 00 00 
00682A 00 00 00 00 00 00 
006830 00 00 
                           A  3226    
006832 00 00 00 00 00 00   A  3227    scratch_pad		blkb 256,0
006838 00 00 00 00 00 00 
00683E 00 00 00 00 00 00 
006844 00 00 00 00 00 00 
00684A 00 00 00 00 00 00 
006850 00 00 00 00 00 00 
006856 00 00 00 00 00 00 
00685C 00 00 00 00 00 00 
006862 00 00 00 00 00 00 
006868 00 00 00 00 00 00 
00686E 00 00 00 00 00 00 
006874 00 00 00 00 00 00 
00687A 00 00 00 00 00 00 
006880 00 00 00 00 00 00 
006886 00 00 00 00 00 00 
00688C 00 00 00 00 00 00 
006892 00 00 00 00 00 00 
006898 00 00 00 00 00 00 
00689E 00 00 00 00 00 00 
0068A4 00 00 00 00 00 00 
0068AA 00 00 00 00 00 00 
0068B0 00 00 00 00 00 00 
0068B6 00 00 00 00 00 00 
0068BC 00 00 00 00 00 00 
0068C2 00 00 00 00 00 00 
0068C8 00 00 00 00 00 00 
0068CE 00 00 00 00 00 00 
0068D4 00 00 00 00 00 00 
0068DA 00 00 00 00 00 00 
0068E0 00 00 00 00 00 00 
0068E6 00 00 00 00 00 00 
0068EC 00 00 00 00 00 00 
0068F2 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     15:37:21     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0068F8 00 00 00 00 00 00 
0068FE 00 00 00 00 00 00 
006904 00 00 00 00 00 00 
00690A 00 00 00 00 00 00 
006910 00 00 00 00 00 00 
006916 00 00 00 00 00 00 
00691C 00 00 00 00 00 00 
006922 00 00 00 00 00 00 
006928 00 00 00 00 00 00 
00692E 00 00 00 00 
                           A  3228    
                           A  3229    ;==============================================
                           A  3230    	
006932 00                  A  3231    os_max_addr		db 0							                           A  3232    	
                           A  3233    
                           A  3234    ;==============================================
                           A  3235    
                           A  3236    				end	
                           A  3237    				
                           A  3238    ;==============================================
                           A  3239    	


Errors: 0
Warnings: 0
Lines Assembled: 12427
