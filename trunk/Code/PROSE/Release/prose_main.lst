Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       00000030            A    17    prose_version	equ 30h
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 A9 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 87 56 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 E1 60 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD 08 3B 00         A    88    				call disable_irqs
000A5C CD 90 3C 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A 26 62 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD B5 42 00         A    94    				call init_keyboard
000A6B 28 06               A    95    				jr z,kb_ok
000A6D 21 27 62 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 26 62 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 56 62 00         A   102    				ld hl,os_variables				000A7C 01 C8 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 5A 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 7D 60 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD F6 41 00         A   110    				call hwsc_default_hw_settings
000A91 CD 49 45 00         A   111    				call hwsc_disable_audio
                           A   112    				
000A95 3A 40 60 00         A   113    				ld a,(video_mode)
000A99 CD 0E 35 00         A   114    				call set_vmode					                           A   115    
000A9D 21 2C 65 00         A   116    				ld hl,packed_font_start
000AA1 ED5B 7A 60 00       A   117    				ld de,(font_addr)
000AA6 01 DF 02 00         A   118    				ld bc,packed_font_end-packed_fo
000AAA CD B8 15 00         A   119    				call unpack_rle
                           A   120    
000AAE 3E5F                A   121    				ld a,5fh
000AB0 32 66 60 00         A   122    				ld (req_cursor_image),a
                           A   123    
000AB4 21 5F 57 00         A   124    				ld hl,welcome_message			000AB8 CD 20 0F 00         A   125    				call os_print_string
000ABC CD F7 36 00         A   126    				call os_get_mem_high			000AC0 EB                  A   127    				ex de,hl
000AC1 CD F8 12 00         A   128    				call os_show_hex_address
                           A   129    
000AC5 CD C0 13 00         A   130    				call os_new_line
000AC9 CD C0 13 00         A   131    				call os_new_line
000ACD CD 0F 32 00         A   132    				call os_cmd_vers				000AD1 CD 03 32 00         A   133    				call os_cmd_remount				                           A   134    
000AD5 CD C0 13 00         A   135    				call os_new_line				                           A   136    
000AD9 CD 73 43 00         A   137    				call purge_keyboard
                           A   138    				
000ADD CD D3 3A 00         A   139    				call set_irq_vector
000AE1 CD E5 3A 00         A   140    				call enable_os_irqs
000AE5 FB                  A   141    				ei
000AE6 CD 78 3C 00         A   142    				call set_nmi_vector
                           A   143    				
000AEA 21 27 62 00         A   144    				ld hl,devices_connected			000AEE CB46                A   145    				bit 0,(hl)
000AF0 20 08               A   146    				jr nz,kb_present
000AF2 21 C8 5C 00         A   147    				ld hl,no_keyboard_msg
000AF6 CD F7 13 00         A   148    				call os_show_packed_text
000AFA                     A   149    kb_present				
000AFA 21 AF 57 00         A   150    				ld hl,startup_script_fn
000AFE 22 7F 63 00         A   151    				ld (os_args_loc),hl
000B02 CD 40 32 00         A   152    				call os_cmd_exec				                           A   153    									
000B06 3A 25 62 00         A   154    				ld a,(frozen)					000B0A B7                  A   155    				or a
000B0B 28 11               A   156    				jr z,os_main_loop
000B0D AF                  A   157    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0E 32 25 62 00         A   158    				ld (frozen),a
000B12 21 07 58 00         A   159    				ld hl,nmi_freeze_txt
000B16 CD 20 0F 00         A   160    				call os_print_string
000B1A CD 5A 2D 00         A   161    				call os_cmd_r
                           A   162    				
                           A   163    	
                           A   164    ;==============================================
                           A   165    
000B1E                     A   166    os_main_loop
                           A   167    								
000B1E CD E6 41 00         A   168    				call hwsc_wait_vrt				                           A   169    
000B22 CD 71 0F 00         A   170    				call os_cursor_flash
                           A   171    
000B26 CD EA 45 00         A   172    				call os_get_key_press
000B2A 20 F2               A   173    				jr nz,os_main_loop
                           A   174    	
000B2C 32 F3 63 00         A   175    				ld (current_scancode),a
000B30 78                  A   176    				ld a,b
000B31 32 F4 63 00         A   177    				ld (current_asciicode),a		                           A   178    	
000B35 CD 2E 40 00         A   179    				call hwsc_remove_cursor
000B39 3E18                A   180    				ld a,24							000B3B 32 C0 62 00         A   181    				ld (cursorflashtimer),a			000B3F AF                  A   182    				xor a
000B40 32 C1 62 00         A   183    				ld (cursor_status),a
                           A   184    				
000B44 3A F3 63 00         A   185    				ld a,(current_scancode)			000B48 FE70                A   186    				cp 70h
000B4A 20 16               A   187    				jr nz,os_notins
000B4C 3A F2 63 00         A   188     				ld a,(insert_mode)
000B50 EE01                A   189    				xor 1
000B52 32 F2 63 00         A   190    				ld (insert_mode),a
000B56 3E5F                A   191    				ld a,5fh
000B58 28 02               A   192    				jr z,linecurs
000B5A 3E7F                A   193    				ld a,7fh
000B5C 32 66 60 00         A   194    linecurs		ld (req_cursor_image),a
000B60 18 BC               A   195    				jr os_main_loop
                           A   196    
000B62 21 BE 62 00         A   197    os_notins		ld hl,cursor_x					000B66 FE6B                A   198    				cp 06bh			
000B68 20 0E               A   199    				jr nz,os_ntlft
000B6A 35                  A   200    				dec (hl)
000B6B 7E                  A   201    				ld a,(hl)
000B6C FEFF                A   202    				cp 0ffh	
000B6E 20 AE               A   203    				jr nz,os_main_loop
000B70 3A 6B 60 00         A   204    				ld a,(window_columns)
000B74 3D                  A   205    				dec a
000B75 77                  A   206    				ld (hl),a						000B76 18 A6               A   207    				jr os_main_loop
                           A   208    
000B78 FE74                A   209    os_ntlft		cp 074h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B7A 20 0C               A   210    				jr nz,os_ntrig
000B7C 34                  A   211    				inc (hl)
000B7D 3A 6B 60 00         A   212    				ld a,(window_columns)
000B81 BE                  A   213    				cp (hl)
000B82 20 9A               A   214    				jr nz,os_main_loop
000B84 3600                A   215    				ld (hl),0						000B86 18 96               A   216    				jr os_main_loop
                           A   217    
000B88 21 BD 62 00         A   218    os_ntrig		ld hl,cursor_y
000B8C FE75                A   219    				cp 075h							000B8E 20 09               A   220    				jr nz,os_ntup
000B90 35                  A   221    				dec (hl)
000B91 CB7E                A   222    				bit 7,(hl)
000B93 28 89               A   223    				jr z,os_main_loop
000B95 3600                A   224    				ld (hl),0						000B97 18 85               A   225    				jr os_main_loop
                           A   226    
000B99 FE72                A   227    os_ntup			cp 072h
000B9B 20 14               A   228    				jr nz,os_ntdwn					000B9D 34                  A   229    				inc (hl)
000B9E 3A 68 60 00         A   230    				ld a,(window_rows)
000BA2 BE                  A   231    				cp (hl)
000BA3 C2 1E 0B 00         A   232    				jr nz,os_main_loop
000BA7 3D                  A   233    				dec a
000BA8 77                  A   234    				ld (hl),a						000BA9 CD 5D 3E 00         A   235    				call hwsc_scroll_up
000BAD C3 1E 0B 00         A   236    				jr os_main_loop
                           A   237    
000BB1 FE71                A   238    os_ntdwn		cp 071h							000BB3 20 08               A   239    				jr nz,os_nodel		
000BB5 3A BE 62 00         A   240    				ld a,(cursor_x)					000BB9 47                  A   241    				ld b,a
000BBA 04                  A   242    				inc b
000BBB 18 13               A   243    				jr os_chrbk
                           A   244    
000BBD FE66                A   245    os_nodel		cp 066h							000BBF 20 17               A   246    				jr nz,os_nbksp
000BC1 3A BE 62 00         A   247    				ld a,(cursor_x)					000BC5 B7                  A   248    				or a							000BC6 CA 1E 0B 00         A   249    				jp z,os_main_loop
000BCA 47                  A   250    				ld b,a
000BCB 3D                  A   251    				dec a
000BCC 32 BE 62 00         A   252    				ld (cursor_x),a					000BD0 CD F7 40 00         A   253    os_chrbk		call hwsc_chars_left			000BD4 C3 1E 0B 00         A   254    				jp os_main_loop
                           A   255    
000BD8 FE5A                A   256    os_nbksp		cp 05ah							000BDA CA 22 0C 00         A   257    				jp z,os_enter_pressed
                           A   258    	
000BDE 3A F4 63 00         A   259    				ld a,(current_asciicode)		000BE2 FE20                A   260    				cp 32							000BE4 38 38               A   261    				jr c,os_nvdun					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   262    
000BE6 FE7B                A   263    				cp 07bh							000BE8 30 12               A   264    				jr nc,os_gtcha					000BEA FE61                A   265    				cp 061h
000BEC 38 04               A   266    				jr c,os_ntupc
000BEE D620                A   267    				sub 020h
000BF0 18 0A               A   268    				jr os_gtcha
000BF2 FE5B                A   269    os_ntupc		cp 05bh
000BF4 30 06               A   270    				jr nc,os_gtcha
000BF6 FE41                A   271    				cp 041h
000BF8 38 02               A   272    				jr c,os_gtcha
000BFA C620                A   273    				add a,020h
000BFC 57                  A   274    os_gtcha		ld d,a							000BFD 3A F2 63 00         A   275    				ld a,(insert_mode)				000C01 B7                  A   276    				or a
000C02 CC 3E 41 00         A   277    				call z,hwsc_chars_right
                           A   278    				
000C06 ED4B BD 62 00       A   279    os_schi			ld bc,(cursor_pos)				000C0B 7A                  A   280    				ld a,d							000C0C CD 01 3F 00         A   281    				call hwsc_plot_char		
000C10 21 BE 62 00         A   282    				ld hl,cursor_x					000C14 34                  A   283    				inc (hl)
000C15 3A 6B 60 00         A   284    				ld a,(window_columns)
000C19 BE                  A   285    				cp (hl)							000C1A 20 02               A   286    				jr nz,os_nvdun
000C1C 3600                A   287    				ld (hl),0
                           A   288    
000C1E C3 1E 0B 00         A   289    os_nvdun		jp os_main_loop
                           A   290    	
                           A   291    
                           A   292    ;----------------------------------------------
                           A   293    
000C22                     A   294    os_enter_pressed
                           A   295    	
000C22 CD C9 41 00         A   296    				call hwsc_charline_to_command_s
                           A   297    
000C26 AF                  A   298    				xor a
000C27 32 BE 62 00         A   299    				ld (cursor_x),a					000C2B 21 BD 62 00         A   300    				ld hl,cursor_y					000C2F 34                  A   301    				inc (hl)
000C30 3A 68 60 00         A   302    				ld a,(window_rows)
000C34 BE                  A   303    				cp (hl)
000C35 20 06               A   304    				jr nz,os_esdok
000C37 3D                  A   305    				dec a
000C38 77                  A   306    				ld (hl),a
000C39 CD 5D 3E 00         A   307    				call hwsc_scroll_up
                           A   308    
000C3D CD 45 0C 00         A   309    os_esdok		call os_parse_cmd_chk_ps		                           A   310    
000C41 C3 1E 0B 00         A   311    post_csb		jp os_main_loop
                           A   312    
                           A   313    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   314    ;----------------------------------------------
                           A   315    
                           A   316    
000C45                     A   317    os_parse_cmd_chk_ps
                           A   318    
000C45 CD 58 0C 00         A   319    				call os_parse_command_line
000C49 FEFE                A   320    				cp 0feh							000C4B C0                  A   321    				ret nz
000C4C 01500000            A   322    				ld bc,max_buffer_chars			000C50 11 DB 62 00         A   323    				ld de,commandstring				000C54 EDB0                A   324    				ldir
000C56 18 ED               A   325    				jr os_parse_cmd_chk_ps
                           A   326    
                           A   327    	
                           A   328    ;----------------------------------------------
                           A   329    	
000C58                     A   330    os_parse_command_line
                           A   331    
000C58 3E01                A   332    				ld a,1
000C5A 32 56 62 00         A   333    				ld (store_registers),a			                           A   334    
000C5E 21 DB 62 00         A   335    				ld hl,commandstring				000C62 0650                A   336    				ld b,max_buffer_chars			000C64 CD B6 0F 00         A   337    				call os_scan_for_non_space		000C68 B7                  A   338    				or a							000C69 C8                  A   339    				ret z
000C6A 11 2B 58 00         A   340    				ld de,dictionary-1				000C6E D5                  A   341    				push de
000C6F D1                  A   342    compcstr		pop de
000C70 E5                  A   343    				push hl
000C71 FDE1                A   344    				pop iy
000C73 13                  A   345    notacmd			inc de
000C74 1A                  A   346    				ld a,(de)
000C75 FE01                A   347    				cp 1							000C77 CA 11 0D 00         A   348    				jp z,os_no_kernal_command_found
000C7B CB7F                A   349    				bit 7,a
000C7D 28 F4               A   350    				jr z,notacmd					000C7F E67F                A   351    				and 07fh
000C81 4F                  A   352    				ld c,a							000C82 D5                  A   353    				push de
000C83 13                  A   354    cmdnscan		inc de
000C84 FD7E00              A   355    				ld a,(iy)						000C87 CD 21 12 00         A   356    				call os_uppercasify
000C8B 47                  A   357    				ld b,a
000C8C 1A                  A   358    				ld a,(de)						000C8D B8                  A   359    				cp b
000C8E FD23                A   360    				inc iy
000C90 28 F1               A   361    				jr z,cmdnscan					000C92 1A                  A   362    nomatch			ld a,(de)						000C93 B7                  A   363    				or a
000C94 28 04               A   364    				jr z,posmatch					000C96 CB7F                A   365    				bit 7,a			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C98 28 D5               A   366    				jr z,compcstr					000C9A FD7EFF              A   367    posmatch		ld a,(iy-1)						000C9D FE20                A   368    				cp 32
000C9F 20 CE               A   369    				jr nz,compcstr					                           A   370    	
000CA1 D1                  A   371    				pop de				
000CA2 FDE5                A   372    				push iy							000CA4 E1                  A   373    				pop hl
000CA5 CD B6 0F 00         A   374    				call os_scan_for_non_space
000CA9 22 7F 63 00         A   375    				ld (os_args_loc),hl				                           A   376    	
000CAD 21 CA 5D 00         A   377    				ld hl,os_cmd_locs
000CB1 11030000            A   378    				ld de,3
000CB5 51                  A   379    				ld d,c
000CB6 ED5C                A   380    				mlt de							000CB8 19                  A   381    				add hl,de
000CB9 ED37                A   382    				ld ix,(hl)						                           A   383    
000CBB 2A 7F 63 00         A   384    				ld hl,(os_args_loc)				000CBF CD F3 0E 00         A   385    				call os_run_command				                           A   386    
000CC3 C8                  A   387    				ret z							000CC4 B7                  A   388    				or a
000CC5 20 13               A   389    				jr nz,show_erm
000CC7 78                  A   390    os_hwe1			ld a,b							000CC8 21 2F 5B 00         A   391    os_hwerr		ld hl,hex_byte_txt		
000CCC CD 63 10 00         A   392    				call hexbyte_to_ascii	
000CD0 21 BB 5C 00         A   393    				ld hl,hw_err_msg
000CD4 CD F7 13 00         A   394    				call os_show_packed_text
000CD8 AF                  A   395    				xor a
000CD9 C9                  A   396    				ret
                           A   397    
000CDA 01000000            A   398    show_erm		ld bc,0							000CDE 4F                  A   399    				ld c,a
000CDF D680                A   400    				sub 080h						000CE1 38 11               A   401    				jr c,no_trans					000CE3 21 EF 5E 00         A   402    				ld hl,kernal_error_code_transla
000CE7 CB77                A   403    				bit 6,a							000CE9 28 06               A   404    				jr z,not_fs_err					000CEB 21 FD 5E 00         A   405    				ld hl,fs_error_code_translation
000CEF D640                A   406    				sub 040h
000CF1 4F                  A   407    not_fs_err		ld c,a
000CF2 09                  A   408    				add hl,bc
000CF3 4E                  A   409    				ld c,(hl)
000CF4 0600                A   410    no_trans		ld b,0
000CF6 21 30 5E 00         A   411    				ld hl,packed_msg_list
000CFA 7E                  A   412    findmsg			ld a,(hl)
000CFB FEFF                A   413    				cp 0ffh
000CFD C8                  A   414    				ret z							000CFE 23                  A   415    				inc hl
000CFF B7                  A   416    				or a
000D00 20 F8               A   417    				jr nz,findmsg					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D02 04                  A   418    				inc b
000D03 79                  A   419    				ld a,c							000D04 B8                  A   420    				cp b
000D05 20 F3               A   421    				jr nz,findmsg
000D07 CD F7 13 00         A   422    				call os_show_packed_text
000D0B CD C0 13 00         A   423    				call os_new_line
000D0F AF                  A   424    				xor a
000D10 C9                  A   425    				ret
                           A   426    	
                           A   427    
000D11                     A   428    os_no_kernal_command_found
                           A   429    
000D11 3E30                A   430    				ld a,030h						000D13 32 EA 60 00         A   431    fvolcmd			ld (vol_txt+4),a				000D17 F5                  A   432    				push af			
000D18 11 E7 60 00         A   433    				ld de,vol_txt+1		
000D1C 0605                A   434    				ld b,5			
000D1E CD E7 11 00         A   435    				call os_compare_strings	
000D22 28 08               A   436    				jr z,gotvolcmd		
000D24 F1                  A   437    				pop af				
000D25 3C                  A   438    				inc a			
000D26 FE38                A   439    				cp 030h+max_volumes		
000D28 20 E9               A   440    				jr nz,fvolcmd		
000D2A 18 0B               A   441    				jr novolcmd		
000D2C F1                  A   442    gotvolcmd		pop af
000D2D D630                A   443    				sub 030h
000D2F CD A5 1A 00         A   444    				call os_change_volume
000D33 C3 D8 0E 00         A   445    				jp extcmderf					                           A   446    		
                           A   447    
                           A   448    
000D37 7E                  A   449    novolcmd		ld a,(hl)						000D38 FE47                A   450    				cp 'G'							000D3A 20 29               A   451    				jr nz,not_g_cmd					000D3C 23                  A   452    				inc hl
000D3D 7E                  A   453    				ld a,(hl)
000D3E 2B                  A   454    				dec hl
000D3F FE20                A   455    				cp ' '
000D41 20 22               A   456    				jr nz,not_g_cmd
000D43 23                  A   457    				inc hl
000D44 CD B6 0F 00         A   458    				call os_scan_for_non_space
000D48 22 7F 63 00         A   459    				ld (os_args_loc),hl				000D4C B7                  A   460    				or a
000D4D 20 04               A   461    				jr nz,gotgargs
000D4F 3E1F                A   462    				ld a,01fh						000D51 18 87               A   463    				jr show_erm
000D53 CD A2 10 00         A   464    gotgargs		call ascii_to_hex_no_scan		000D57 B7                  A   465    				or a
000D58 20 80               A   466    				jr nz,show_erm
000D5A CD 87 3C 00         A   467    				call enable_nmi					000D5E D5                  A   468    				push de
000D5F DDE1                A   469    				pop ix			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D61 C3 F3 0E 00         A   470    				jp os_run_command				                           A   471    				
                           A   472    				
                           A   473    
000D65 22 7F 63 00         A   474    not_g_cmd		ld (os_args_loc),hl				000D69 22 82 63 00         A   475    				ld (os_args_pos_cache),hl
000D6D CD EA 0F 00         A   476    				call os_args_to_fn_append_ezp	                           A   477    	
000D71 CD FD 0E 00         A   478    				call cache_dir_block			                           A   479    
000D75 CD FD 49 00         A   480    				call fs_check_disk_format		000D79 38 3C               A   481    				jr c,os_ndfxc
000D7B B7                  A   482    				or a							000D7C 20 39               A   483    				jr nz,os_ndfxc
                           A   484    	
000D7E CD 9F 4B 00         A   485    				call fs_open_file_command		000D82 DA C8 0C 00         A   486    				jp c,os_hwerr			 		000D86 B7                  A   487    				or a
000D87 28 38               A   488    				jr z,os_gecmd					                           A   489    
000D89 CD 70 4B 00         A   490    				call fs_goto_root_dir_command	000D8D 21 A6 57 00         A   491    				ld hl,os_dos_cmds_txt
000D91 CD FE 53 00         A   492    				call fs_hl_to_filename
000D95 CD 4B 4B 00         A   493    				call fs_change_dir_command		000D99 DA C8 0C 00         A   494    				jp c,os_hwerr
000D9D B7                  A   495    				or a
000D9E 20 17               A   496    				jr nz,os_ndfxc					                           A   497    	
000DA0 2A 82 63 00         A   498    				ld hl,(os_args_pos_cache)		000DA4 22 7F 63 00         A   499    				ld (os_args_loc),hl
000DA8 CD EA 0F 00         A   500    				call os_args_to_fn_append_ezp	000DAC CD 9F 4B 00         A   501    				call fs_open_file_command		000DB0 DA C8 0C 00         A   502    				jp c,os_hwerr
000DB4 B7                  A   503    				or a
000DB5 28 0A               A   504    				jr z,os_gecmd
000DB7 CD 09 0F 00         A   505    os_ndfxc		call restore_dir_block			000DBB 3E0B                A   506    				ld a,0bh						000DBD C3 DA 0C 00         A   507    				jp show_erm
                           A   508    
000DC1 2A 7F 63 00         A   509    os_gecmd		ld hl,(os_args_loc)				000DC5 CD B6 0F 00         A   510    				call os_scan_for_non_space		000DC9 22 7F 63 00         A   511    				ld (os_args_loc),hl
                           A   512    
000DCD 11100000            A   513    				ld de,16
000DD1 CD 1D 16 00         A   514    				call os_set_load_length			000DD5 21 0B 6A 00         A   515    				ld hl,scratch_pad
000DD9 22 5E 56 00         A   516    				ld (fs_ez80_address),hl
000DDD CD EA 4B 00         A   517    				call fs_read_data_command
000DE1 DA C8 0C 00         A   518    				jp c,os_hwerr					000DE5 B7                  A   519    				or a
000DE6 C2 DA 0C 00         A   520    				jp nz,show_erm					000DEA 2A 0D 6A 00         A   521    				ld hl,(scratch_pad+2)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DEE 1150524F            A   522    				ld de,04f5250h					000DF2 AF                  A   523    				xor a	
000DF3 ED52                A   524    				sbc hl,de
000DF5 28 0A               A   525    				jr z,loc_header
000DF7 CD 09 0F 00         A   526    				call restore_dir_block			000DFB 3E1A                A   527    				ld a,01ah						000DFD C3 DA 0C 00         A   528    				jp show_erm						                           A   529    				
000E01 3A 1A 6A 00         A   530    loc_header		ld a,(scratch_pad+15)			000E05 32 55 62 00         A   531    				ld (store_adl),a			
000E09 CD 9F 4B 00         A   532    				call fs_open_file_command		000E0D DA C8 0C 00         A   533    				jp c,os_hwerr
000E11 B7                  A   534    				or a	
000E12 20 A3               A   535    				jr nz,os_ndfxc
000E14 2A 10 6A 00         A   536    				ld hl,(scratch_pad+5)			000E18 22 5E 56 00         A   537    				ld (fs_ez80_address),hl
000E1C ED5B 28 62 00       A   538    				ld de,(sys_ram_high)
000E21 AF                  A   539    				xor a
000E22 E5                  A   540    				push hl
000E23 ED52                A   541    				sbc hl,de
000E25 E1                  A   542    				pop hl
000E26 30 0A               A   543    				jr nc,osmemok
000E28 CD 09 0F 00         A   544    				call restore_dir_block			000E2C 3E26                A   545    				ld a,026h
000E2E C3 DA 0C 00         A   546    				jp show_erm
                           A   547    
000E32 ED5B 16 6A 00       A   548    osmemok			ld de,(scratch_pad+11)			000E37 7B                  A   549    				ld a,e
000E38 B2                  A   550    				or d
000E39 28 14               A   551    				jr z,noprov_spec				000E3B 21300000            A   552    				ld hl,prose_version
000E3F AF                  A   553    				xor a
000E40 40ED52              A   554    				sbc.sis hl,de					000E43 30 0A               A   555    				jr nc,noprov_spec
000E45 CD 09 0F 00         A   556    				call restore_dir_block
000E49 3E1B                A   557    				ld a,01bh						000E4B C3 DA 0C 00         A   558    				jp show_erm
                           A   559    				
000E4F CD 39 42 00         A   560    noprov_spec		call hwsc_get_version			000E53 2A 18 6A 00         A   561    				ld hl,(scratch_pad+13)			000E57 EB                  A   562    				ex de,hl						000E58 7B                  A   563    				ld a,e
000E59 B2                  A   564    				or d
000E5A 28 10               A   565    				jr z,nohwv_spec					000E5C AF                  A   566    				xor a
000E5D 40ED52              A   567    				sbc.sis hl,de					000E60 30 0A               A   568    				jr nc,nohwv_spec
000E62 CD 09 0F 00         A   569    				call restore_dir_block
000E66 3E2B                A   570    				ld a,02bh						000E68 C3 DA 0C 00         A   571    				jp show_erm
                           A   572    
000E6C ED5B 13 6A 00       A   573    nohwv_spec		ld de,(scratch_pad+8)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E71 3A 15 6A 00         A   574    				ld a,(scratch_pad+10)			000E75 B2                  A   575    				or d
000E76 B3                  A   576    				or e
000E77 28 04               A   577    				jr z,readcode					000E79 CD 1D 16 00         A   578    				call os_set_load_length			                           A   579    		
000E7D 2A 10 6A 00         A   580    readcode		ld hl,(scratch_pad+5)
000E81 22 88 63 00         A   581    				ld (os_extcmd_jmp_addr),hl		000E85 CD EA 4B 00         A   582    				call fs_read_data_command
000E89 F5                  A   583    				push af
000E8A CD 09 0F 00         A   584    				call restore_dir_block			000E8E F1                  A   585    				pop af
000E8F DA C8 0C 00         A   586    				jp c,os_hwerr					000E93 B7                  A   587    				or a
000E94 C2 DA 0C 00         A   588    				jp nz,show_erm					                           A   589    	
000E98 CD 87 3C 00         A   590    				call enable_nmi					000E9C DD2A 88 63 00       A   591    				ld ix,(os_extcmd_jmp_addr)		000EA1 2A 7F 63 00         A   592    				ld hl,(os_args_loc)				000EA5 C3 F3 0E 00         A   593    				jp os_run_command				                           A   594    
000EA9 F5                  A   595    extcmd_return	push af							000EAA CD F6 41 00         A   596    				call hwsc_default_hw_settings	000EAE 3A 56 62 00         A   597    				ld a,(store_registers)
000EB2 B7                  A   598    				or a
000EB3 28 06               A   599    				jr z,skp_strg
000EB5 F1                  A   600    				pop af
000EB6 CD 39 13 00         A   601    				call os_store_CPU_regs			000EBA F5                  A   602    				push af
000EBB F1                  A   603    skp_strg		pop af
                           A   604    
000EBC F5                  A   605    cntuasr			push af
000EBD 21 0B 6A 00         A   606    				ld hl,scratch_pad				000EC1 CD 63 10 00         A   607    				call hexbyte_to_ascii
000EC5 3600                A   608    				ld (hl),0
000EC7 11 0B 6A 00         A   609    				ld de,scratch_pad
000ECB 21 1F 58 00         A   610    				ld hl,error_txt
000ECF CD 50 1B 00         A   611    				call os_set_envar
000ED3 CD 90 3C 00         A   612    				call disable_nmi				000ED7 F1                  A   613    				pop af
000ED8 28 12               A   614    extcmderf		jr z,not_errc					000EDA B7                  A   615    				or a
000EDB CA C7 0C 00         A   616    				jp z,os_hwe1					000EDF FEFF                A   617    				cp 0ffh							000EE1 CA 48 0A 00         A   618    				jp z,os_cold_start
000EE5 FEFE                A   619    				cp 0feh							000EE7 C8                  A   620    				ret z
000EE8 C3 DA 0C 00         A   621    				jp show_erm						000EEC FEFF                A   622    not_errc		cp 0ffh							000EEE CA 48 0A 00         A   623    				jp z,os_cold_start
000EF2 C9                  A   624    				ret
                           A   625    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   626    ;----------------------------------------------
                           A   627    
000EF3                     A   628    os_run_command									000EF3 ED3906              A   629    				out0 (port_nmi_ack),a			000EF6 DD22 57 62 00       A   630    				ld (com_start_addr),ix			000EFB DDE9                A   631    				jp (ix)							                           A   632    
                           A   633    ;----------------------------------------------
                           A   634    
000EFD                     A   635    cache_dir_block
                           A   636    
                           A   637    	
000EFD D5                  A   638    				push de
000EFE CD 49 1A 00         A   639    				call fs_get_dir_cluster	
000F02 ED53 85 63 00       A   640    				ld (os_dir_block_cache),de
000F07 D1                  A   641    				pop de	
000F08 C9                  A   642    				ret
                           A   643    		
                           A   644    
000F09                     A   645    restore_dir_block
                           A   646    
000F09 D5                  A   647    				push de
000F0A ED5B 85 63 00       A   648    				ld de,(os_dir_block_cache)
000F0F CD 55 1A 00         A   649    				call fs_update_dir_cluster
000F13 D1                  A   650    				pop de
000F14 C9                  A   651    				ret
                           A   652    		
                           A   653    ;==============================================
                           A   654    ; Routines called by command line
                           A   655    ;==============================================
                           A   656    
                           A   657    ; Set:-
                           A   658    ; HL to address of string
                           A   659    ; c = y
                           A   660    ; b = x
                           A   661    
000F15                     A   662    ext_print_string
                           A   663    
000F15 CC 81 15 00         A   664    				call z,mbase_hl
000F19 18 05               A   665    				jr os_print_string
                           A   666    
000F1B                     A   667    os_print_string_cond
                           A   668    
000F1B CD FC 19 00         A   669    				call test_quiet_mode
000F1F C0                  A   670    				ret nz
                           A   671    
000F20                     A   672    os_print_string
                           A   673    
000F20 D5                  A   674    				push de
000F21 C5                  A   675    				push bc
000F22 ED4B BD 62 00       A   676    				ld bc,(cursor_pos)				000F27 7E                  A   677    prstr_lp		ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F28 23                  A   678    				inc hl
000F29 B7                  A   679    				or a
000F2A 20 09               A   680    				jr nz,prstr_ne
000F2C ED43 BD 62 00       A   681    				ld (cursor_pos),bc
000F31 C1                  A   682    				pop bc
000F32 D1                  A   683    				pop de
000F33 AF                  A   684    				xor a							000F34 C9                  A   685    				ret
                           A   686    
000F35 FE0D                A   687    prstr_ne		cp 13
000F37 20 04               A   688    				jr nz,not_cr
000F39 0600                A   689    				ld b,0
000F3B 18 EA               A   690    				jr prstr_lp
000F3D FE0A                A   691    not_cr			cp 10
000F3F 28 12               A   692    				jr z,line_feed				
000F41 FE0B                A   693    				cp 11
000F43 28 0C               A   694    				jr z,next_line
000F45 CD 01 3F 00         A   695    				call hwsc_plot_char
000F49 04                  A   696    				inc b
000F4A 3A 6B 60 00         A   697    				ld a,(window_columns)
000F4E B8                  A   698    				cp b
000F4F 20 D6               A   699    				jr nz,prstr_lp
000F51 0600                A   700    next_line		ld b,0
000F53 0C                  A   701    line_feed		inc c
000F54 3A 68 60 00         A   702    				ld a,(window_rows)
000F58 B9                  A   703    				cp c
000F59 20 CC               A   704    				jr nz,prstr_lp
000F5B 0D                  A   705    				dec c
000F5C CD 5D 3E 00         A   706    				call hwsc_scroll_up
000F60 18 C5               A   707    				jr prstr_lp
                           A   708    
                           A   709    ;----------------------------------------------
                           A   710    
000F62 21 CB 63 00         A   711    os_print_char	ld hl,char_to_print
000F66 77                  A   712    				ld (hl),a
000F67 18 B7               A   713    				jr os_print_string
                           A   714    
                           A   715    ;----------------------------------------------
                           A   716    
000F69 F5                  A   717    home_cursor		push af
000F6A AF                  A   718    				xor a
000F6B 32 BE 62 00         A   719    				ld (cursor_x),a
000F6F F1                  A   720    				pop af
000F70 C9                  A   721    				ret
                           A   722    				
                           A   723    ;----------------------------------------------
                           A   724    
000F71                     A   725    os_cursor_flash
                           A   726    
000F71 21 C0 62 00         A   727    				ld hl,cursorflashtimer
000F75 34                  A   728    				inc (hl)
000F76 7E                  A   729    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F77 FE19                A   730    				cp 25
000F79 C0                  A   731    				ret nz
000F7A 3600                A   732    				ld (hl),0
000F7C 3A C1 62 00         A   733    				ld a,(cursor_status)
000F80 EE01                A   734    				xor 1
000F82 32 C1 62 00         A   735    				ld (cursor_status),a
000F86 28 05               A   736    				jr z,no_cursor
000F88 CD 41 40 00         A   737    				call hwsc_draw_cursor			000F8C C9                  A   738    				ret
000F8D CD 2E 40 00         A   739    no_cursor		call hwsc_remove_cursor
000F91 C9                  A   740    				ret
                           A   741    
                           A   742    ;----------------------------------------------
                           A   743    
000F92                     A   744    os_refresh_screen
                           A   745    
000F92 0E00                A   746    				ld c,0							000F94 CD A1 41 00         A   747    rs_yloop		call hwsc_redraw_ui_line
000F98 0C                  A   748    				inc c
000F99 3A 68 60 00         A   749    				ld a,(window_rows)		
000F9D B9                  A   750    				cp c
000F9E 20 F4               A   751    				jr nz,rs_yloop
000FA0 C9                  A   752    				ret
                           A   753    
                           A   754    ;----------------------------------------------
                           A   755    
000FA1                     A   756    os_next_arg
                           A   757    
000FA1 CD AD 0F 00         A   758    				call os_scan_for_space
000FA5 B7                  A   759    				or a
000FA6 C8                  A   760    				ret z
000FA7 CD B6 0F 00         A   761    				call os_scan_for_non_space
000FAB B7                  A   762    				or a
000FAC C9                  A   763    				ret
                           A   764    
                           A   765    
                           A   766    ;----------------------------------------------
                           A   767    	
                           A   768    
000FAD                     A   769    os_scan_for_space
                           A   770    
000FAD 7E                  A   771    os_sfspl 		ld a,(hl)						000FAE B7                  A   772    				or a							000FAF C8                  A   773    				ret z
000FB0 FE20                A   774    				cp ' '
000FB2 C8                  A   775    				ret z
000FB3 23                  A   776    				inc hl
000FB4 18 F7               A   777    				jr os_sfspl
                           A   778    	
                           A   779    
                           A   780    ;----------------------------------------------
                           A   781    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   782    
000FB6                     A   783    os_scan_for_non_space
                           A   784    
000FB6 2B                  A   785    				dec hl							000FB7 23                  A   786    os_nsplp		inc hl			
000FB8 7E                  A   787    				ld a,(hl)			
000FB9 B7                  A   788    				or a			
000FBA C8                  A   789    				ret z							000FBB FE20                A   790    				cp ' '
000FBD 28 F8               A   791    				jr z,os_nsplp
000FBF C9                  A   792    				ret
                           A   793    	
                           A   794    	
                           A   795    ;----------------------------------------------
                           A   796    
000FC0                     A   797    os_args_to_alt_filename
                           A   798    
000FC0 CD 1A 10 00         A   799    				call os_atfn_pre				000FC4 C8                  A   800    				ret z
000FC5 CD F8 53 00         A   801    				call fs_hl_to_alt_filename
000FC9 18 09               A   802    				jr os_atfrl
                           A   803    	
                           A   804    	
                           A   805    	
                           A   806    		
000FCB                     A   807    os_args_to_filename
                           A   808    
000FCB CD 1A 10 00         A   809    				call os_atfn_pre				000FCF C8                  A   810    				ret z
000FD0 CD FE 53 00         A   811    				call fs_hl_to_filename	
                           A   812    
000FD4 7E                  A   813    os_atfrl		ld a,(hl)						000FD5 B7                  A   814    				or a							000FD6 28 0B               A   815    				jr z,os_cfne
000FD8 FE20                A   816    				cp 32
000FDA 28 07               A   817    				jr z,os_cfne
000FDC FE2F                A   818    				cp 02fh
000FDE 28 03               A   819    				jr z,os_cfne
000FE0 23                  A   820    				inc hl
000FE1 18 F1               A   821    				jr os_atfrl	
000FE3 22 7F 63 00         A   822    os_cfne			ld (os_args_loc),hl				000FE7 79                  A   823    				ld a,c			
000FE8 B7                  A   824    				or a							000FE9 C9                  A   825    				ret
                           A   826    
                           A   827    
                           A   828    
                           A   829    
000FEA                     A   830    os_args_to_fn_append_ezp
                           A   831    
                           A   832    	
000FEA CD 1A 10 00         A   833    				call os_atfn_pre				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FEE C8                  A   834    				ret z
000FEF 11 5A 62 00         A   835    				ld de,temp_string
000FF3 7E                  A   836    ccmdtlp			ld a,(hl)						000FF4 B7                  A   837    				or a
000FF5 28 0D               A   838    				jr z,goteocmd
000FF7 FE20                A   839    				cp ' '
000FF9 28 09               A   840    				jr z,goteocmd
000FFB FE2E                A   841    				cp '.'
000FFD 28 05               A   842    				jr z,goteocmd
000FFF 12                  A   843    				ld (de),a
001000 13                  A   844    				inc de
001001 23                  A   845    				inc hl
001002 18 EF               A   846    				jr ccmdtlp
                           A   847    	
001004 E5                  A   848    goteocmd		push hl
001005 21 F9 57 00         A   849    				ld hl,ezp_extension_txt
001009 01050000            A   850    				ld bc,5
00100D EDB0                A   851    				ldir 
00100F 21 5A 62 00         A   852    				ld hl,temp_string
001013 CD FE 53 00         A   853    				call fs_hl_to_filename
001017 E1                  A   854    				pop hl
001018 18 BA               A   855    				jr os_atfrl
                           A   856    	
                           A   857    
                           A   858    
                           A   859    
00101A                     A   860    os_atfn_pre
                           A   861    
00101A 2A 7F 63 00         A   862    				ld hl,(os_args_loc)				00101E CD B6 0F 00         A   863    				call os_scan_for_non_space
001022 B7                  A   864    				or a
001023 C8                  A   865    				ret z
001024 7E                  A   866    				ld a,(hl)
001025 FE2F                A   867    				cp 02fh							001027 20 01               A   868    				jr nz,notfsl1
001029 23                  A   869    				inc hl
00102A AF                  A   870    notfsl1			xor a
00102B 3C                  A   871    				inc a
00102C C9                  A   872    				ret
                           A   873    
                           A   874    
                           A   875    ;--------- Number <-> String functions --------
                           A   876    
                           A   877    
00102D                     A   878    os_clear_output_line
                           A   879    
00102D C5                  A   880    				push bc
00102E E5                  A   881    				push hl			
00102F 21 2D 63 00         A   882    				ld hl,output_line
001033 01500000            A   883    				ld bc,max_buffer_chars
001037 3E20                A   884    				ld a,32
001039 CD 5A 15 00         A   885    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00103D E1                  A   886    				pop hl
00103E C1                  A   887    				pop bc
00103F C9                  A   888    				ret
                           A   889    	
                           A   890    	
                           A   891    	
001040                     A   892    os_skip_leading_ascii_zeros
                           A   893    
001040 7E                  A   894    slazlp			ld a,(hl)						001041 FE30                A   895    				cp '0'							001043 C0                  A   896    				ret nz
001044 23                  A   897    				inc hl
001045 10 F9               A   898    				djnz slazlp
001047 C9                  A   899    				ret
                           A   900    	
                           A   901    
                           A   902    
001048                     A   903    os_leading_ascii_zeros_to_spaces
                           A   904    
001048 E5                  A   905    				push hl
001049 7E                  A   906    clazlp			ld a,(hl)						00104A FE30                A   907    				cp '0'							00104C 20 05               A   908    				jr nz,claze	
00104E 3620                A   909    				ld (hl),' '
001050 23                  A   910    				inc hl
001051 10 F6               A   911    				djnz clazlp
001053 E1                  A   912    claze			pop hl
001054 C9                  A   913    				ret
                           A   914    	
                           A   915    
                           A   916    
                           A   917    		
001055                     A   918    n_hexbytes_to_ascii
                           A   919    
001055 1A                  A   920    				ld a,(de)						001056 CD 63 10 00         A   921    				call hexbyte_to_ascii			00105A 1B                  A   922    				dec de
00105B 10 F8               A   923    				djnz n_hexbytes_to_ascii
00105D C9                  A   924    				ret
                           A   925    			
                           A   926    			
                           A   927    
00105E                     A   928    ext_hexbyte_to_ascii
                           A   929    
00105E CC 81 15 00         A   930    				call z,mbase_hl
001062 7B                  A   931    				ld a,e
                           A   932    
001063                     A   933    hexbyte_to_ascii
                           A   934    
001063 C5                  A   935    				push bc
001064 47                  A   936    				ld b,a							001065 CB3F                A   937    				srl a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001067 CB3F                A   938    				srl a
001069 CB3F                A   939    				srl a
00106B CB3F                A   940    				srl a
00106D CD 7F 10 00         A   941    				call hxdigconv
001071 77                  A   942    				ld (hl),a
001072 23                  A   943    				inc hl
001073 78                  A   944    				ld a,b
001074 E60F                A   945    				and 0fh
001076 CD 7F 10 00         A   946    				call hxdigconv
00107A 77                  A   947    				ld (hl),a
00107B 23                  A   948    				inc hl
00107C C1                  A   949    				pop bc
00107D AF                  A   950    				xor a							00107E C9                  A   951    				ret
                           A   952    				
00107F C630                A   953    hxdigconv		add a,030h
001081 FE3A                A   954    				cp 03ah
001083 38 02               A   955    				jr c,hxdone
001085 C607                A   956    				add a,7
001087 C9                  A   957    hxdone			ret
                           A   958    
                           A   959    
                           A   960    
                           A   961    
001088                     A   962    hexword_to_ascii	
                           A   963    
001088 7A                  A   964    				ld a,d							001089 CD 63 10 00         A   965    				call hexbyte_to_ascii
00108D 7B                  A   966    				ld a,e
00108E CD 63 10 00         A   967    				call hexbyte_to_ascii
001092 C9                  A   968    				ret
                           A   969    	
                           A   970    
                           A   971    
                           A   972    
001093                     A   973    ext_ascii_to_hexword
                           A   974    		
001093 CC 81 15 00         A   975    				call z,mbase_hl
                           A   976    
001097                     A   977    ascii_to_hexword
                           A   978    	
001097 CD B6 0F 00         A   979    				call os_scan_for_non_space		00109B B7                  A   980    				or a
00109C 20 04               A   981    				jr nz,ascii_to_hex_no_scan
00109E 3E81                A   982    				ld a,081h						0010A0 B7                  A   983    				or a
0010A1 C9                  A   984    				ret	
                           A   985    
                           A   986    	
0010A2                     A   987    ascii_to_hex_no_scan
                           A   988    
0010A2 DDE5                A   989    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010A4 C5                  A   990    				push bc
0010A5 DD210000 00         A   991    				ld ix,0
0010AA 0606                A   992    				ld b,6							0010AC CD D8 10 00         A   993    athlp			call ascii_to_hex_digit
0010B0 FEF0                A   994    				cp 0f0h							0010B2 28 17               A   995    				jr z,athend
0010B4 FED0                A   996    				cp 0d0h
0010B6 28 13               A   997    				jr z,athend						0010B8 FE10                A   998    				cp 16
0010BA 30 17               A   999    				jr nc,badhex					0010BC DD29                A  1000    				add ix,ix						0010BE DD29                A  1001    				add ix,ix
0010C0 DD29                A  1002    				add ix,ix
0010C2 DD29                A  1003    				add ix,ix
0010C4 DDB5                A  1004    				or a,ixl
0010C6 DD6F                A  1005    				ld ixl,a
0010C8 23                  A  1006    				inc hl
0010C9 10 E1               A  1007    				djnz athlp
0010CB DDE5                A  1008    athend			push ix
0010CD D1                  A  1009    				pop de
0010CE AF                  A  1010    				xor a
0010CF C1                  A  1011    ath_quit		pop bc
0010D0 DDE1                A  1012    				pop ix							0010D2 C9                  A  1013    				ret
                           A  1014    		
0010D3 3E82                A  1015    badhex			ld a,82h						0010D5 B7                  A  1016    				or a
0010D6 18 F7               A  1017    				jr ath_quit
                           A  1018    				
                           A  1019    	
                           A  1020    		
0010D8                     A  1021    ascii_to_hex_digit
                           A  1022    
0010D8 7E                  A  1023    				ld a,(hl)						0010D9 FE61                A  1024    				cp 061h
0010DB 38 02               A  1025    				jr c,hc_uppercase
0010DD D620                A  1026    				sub 020h						0010DF D63A                A  1027    hc_uppercase	sub 03ah						0010E1 38 02               A  1028    				jr c,zeronine
0010E3 C6F9                A  1029    				add a,0f9h
0010E5 C60A                A  1030    zeronine		add a,0ah
0010E7 C9                  A  1031    				ret
                           A  1032    
                           A  1033    
                           A  1034    ;--------- Text Input / Non-numeric string func
                           A  1035    
                           A  1036    ; Waits for user to enter a string of character
                           A  1037    ; Before calling, set:  HL = destination of str
                           A  1038    ;                        E = max number of char
                           A  1039    ; Returns:   A  = number of characters in enter
                           A  1040    
                           A  1041    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010E8                     A  1042    ext_user_input
0010E8 CC 81 15 00         A  1043    				call z,mbase_hl
                           A  1044    				
0010EC                     A  1045    os_user_input
0010EC AF                  A  1046    				xor a
0010ED 32 3B 60 00         A  1047    				ld (ui_index),a
0010F1 22 3D 60 00         A  1048    				ld (ui_string_addr),hl
0010F5 7B                  A  1049    				ld a,e
0010F6 32 3C 60 00         A  1050    				ld (ui_maxchars),a
                           A  1051    				
0010FA 3A F2 63 00         A  1052    				ld a,(insert_mode)
0010FE 32 DA 62 00         A  1053    				ld (ui_im_cache),a
001102 AF                  A  1054    				xor a
001103 32 F2 63 00         A  1055    				ld (insert_mode),a				                           A  1056    				
001107 CD 41 40 00         A  1057    ui_loop			call hwsc_draw_cursor			00110B CD 8F 45 00         A  1058    				call os_wait_key_press			00110F 32 F3 63 00         A  1059    				ld (current_scancode),a
001113 78                  A  1060    				ld a,b
001114 32 F4 63 00         A  1061    				ld (current_asciicode),a		001118 CD 2E 40 00         A  1062    				call hwsc_remove_cursor
                           A  1063    	
00111C 3A F3 63 00         A  1064    				ld a,(current_scancode)
001120 FE66                A  1065    				cp 066h							001122 20 1F               A  1066    				jr nz,os_nuibs
001124 3A 3B 60 00         A  1067    				ld a,(ui_index)
001128 B7                  A  1068    				or a
001129 28 DC               A  1069    				jr z,ui_loop					00112B 21 BE 62 00         A  1070    				ld hl,cursor_x					00112F 35                  A  1071    				dec (hl)						001130 46                  A  1072    os_uixok		ld b,(hl)		
001131 3A BD 62 00         A  1073    				ld a,(cursor_y)
001135 4F                  A  1074    				ld c,a
001136 3E20                A  1075    				ld a,32
001138 CD 01 3F 00         A  1076    				call hwsc_plot_char
00113C 21 3B 60 00         A  1077    				ld hl,ui_index
001140 35                  A  1078    				dec (hl)						001141 18 C4               A  1079    				jr ui_loop
                           A  1080    
001143 FE76                A  1081    os_nuibs		cp 076h							001145 28 6B               A  1082    				jr z,ui_aborted
001147 FE5A                A  1083    				cp 05ah							001149 28 46               A  1084    				jr z,ui_enter_pressed
                           A  1085    	
00114B 3A 3B 60 00         A  1086    				ld a,(ui_index)					00114F 21 3C 60 00         A  1087    				ld hl,ui_maxchars
001153 BE                  A  1088    				cp (hl)
001154 28 B1               A  1089    				jr z,ui_loop	
                           A  1090    
001156 3A F4 63 00         A  1091    				ld a,(current_asciicode)		00115A FE20                A  1092    				cp 32							00115C 38 A9               A  1093    				jr c,ui_loop					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1094    
00115E 57                  A  1095    ui_gtcha		ld d,a
00115F 2A 3D 60 00         A  1096    				ld hl,(ui_string_addr)
001163 3A 3B 60 00         A  1097    				ld a,(ui_index)
001167 01000000            A  1098    				ld bc,0
00116B 4F                  A  1099    				ld c,a
00116C 09                  A  1100    				add hl,bc
00116D 72                  A  1101    				ld (hl),d						00116E 3C                  A  1102    				inc a
00116F 32 3B 60 00         A  1103    				ld (ui_index),a					                           A  1104    				
001173 ED4B BD 62 00       A  1105    				ld bc,(cursor_y)				001178 7A                  A  1106    				ld a,d
001179 CD 01 3F 00         A  1107    				call hwsc_plot_char		
00117D 21 BE 62 00         A  1108    				ld hl,cursor_x					001181 34                  A  1109    				inc (hl)
001182 3A 6B 60 00         A  1110    				ld a,(window_columns)			001186 BE                  A  1111    				cp (hl)
001187 C2 07 11 00         A  1112    				jp nz,ui_loop
00118B 3600                A  1113    				ld (hl),0
00118D C3 07 11 00         A  1114    				jp ui_loop
                           A  1115    
001191                     A  1116    ui_enter_pressed
                           A  1117    				
001191 3A DA 62 00         A  1118    				ld a,(ui_im_cache)				001195 32 F2 63 00         A  1119    				ld (insert_mode),a
001199 3A 3B 60 00         A  1120    				ld a,(ui_index)					00119D B7                  A  1121    				or a
00119E 20 04               A  1122    				jr nz,ui_data
0011A0 3E81                A  1123    				ld a,081h						0011A2 B7                  A  1124    				or a
0011A3 C9                  A  1125    				ret
0011A4 2A 3D 60 00         A  1126    ui_data			ld hl,(ui_string_addr)
0011A8 11000000            A  1127    				ld de,0
0011AC 5F                  A  1128    				ld e,a
0011AD 19                  A  1129    				add hl,de
0011AE 3600                A  1130    				ld (hl),0						0011B0 BF                  A  1131    				cp a							0011B1 C9                  A  1132    				ret
                           A  1133    
0011B2 3A DA 62 00         A  1134    ui_aborted		ld a,(ui_im_cache)				0011B6 32 F2 63 00         A  1135    				ld (insert_mode),a
0011BA 3E80                A  1136    				ld a,080h						0011BC B7                  A  1137    				or a							0011BD C9                  A  1138    				ret
                           A  1139    		
                           A  1140    ;----------------------------------------------
                           A  1141    	
0011BE                     A  1142    os_count_lines
                           A  1143    
0011BE E5                  A  1144    				push hl							0011BF 0679                A  1145    				ld b,'y'						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011C1 21 C2 62 00         A  1146    				ld hl,os_linecount			
0011C5 34                  A  1147    				inc (hl)						0011C6 3A 68 60 00         A  1148    				ld a,(window_rows)
0011CA D604                A  1149    				sub 4
0011CC BE                  A  1150    				cp (hl)
0011CD 20 0E               A  1151    				jr nz,os_nntpo
0011CF 3600                A  1152    				ld (hl),0
0011D1 21 FE 57 00         A  1153    				ld hl,os_more_txt
0011D5 CD 20 0F 00         A  1154    				call os_print_string
0011D9 CD 8F 45 00         A  1155    				call os_wait_key_press	
0011DD E1                  A  1156    os_nntpo		pop hl
0011DE C9                  A  1157    				ret
                           A  1158    
                           A  1159    ;----------------------------------------------
                           A  1160    
0011DF                     A  1161    ext_compare_strings
                           A  1162    	
0011DF CC 81 15 00         A  1163    				call z,mbase_hl
0011E3 CC 92 15 00         A  1164    				call z,mbase_de
                           A  1165    				
0011E7                     A  1166    os_compare_strings
                           A  1167    
                           A  1168    ; both strings at HL/DE should be zero terminat
                           A  1169    ; compare will fail if string lengths are diffe
                           A  1170    ; unless count (B) is reached first
                           A  1171    ; Case is ignored
                           A  1172    ; Zero flag set on return if same
                           A  1173    
0011E7 E5                  A  1174    				push hl							0011E8 D5                  A  1175    				push de							0011E9 1A                  A  1176    ocslp			ld a,(de)						0011EA B7                  A  1177    				or a
0011EB 28 0C               A  1178    				jr z,ocsbt
0011ED CD 2A 12 00         A  1179    				call case_insensitive_compare	0011F1 20 0E               A  1180    				jr nz,ocs_diff
0011F3 13                  A  1181    				inc de
0011F4 23                  A  1182    				inc hl
0011F5 10 F2               A  1183    				djnz ocslp
0011F7 18 04               A  1184    				jr ocs_same
0011F9 1A                  A  1185    ocsbt			ld a,(de)						0011FA B6                  A  1186    				or (hl)
0011FB 20 04               A  1187    				jr nz,ocs_diff
0011FD D1                  A  1188    ocs_same		pop de
0011FE E1                  A  1189    				pop hl
0011FF AF                  A  1190    				xor a							001200 C9                  A  1191    				ret
001201 D1                  A  1192    ocs_diff		pop de
001202 E1                  A  1193    				pop hl
001203 AF                  A  1194    				xor a							001204 3C                  A  1195    				inc a
001205 C9                  A  1196    				ret
                           A  1197    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1198    
                           A  1199    ;----------------------------------------------
                           A  1200    
001206                     A  1201    os_copy_ascii_run
                           A  1202    
                           A  1203    ;INPUT HL = source ($00 or $20 terminates)
                           A  1204    ;      DE = dest
                           A  1205    ;       b = max chars
                           A  1206    
                           A  1207    ;OUTPUT HL/DE = end of runs
                           A  1208    ;           c = char count
                           A  1209    	
001206 0E00                A  1210    				ld c,0
001208 7E                  A  1211    cpyar_lp		ld a,(hl)
001209 B7                  A  1212    				or a
00120A C8                  A  1213    				ret z
00120B FE20                A  1214    				cp 32
00120D C8                  A  1215    				ret z
00120E 12                  A  1216    				ld (de),a
00120F 23                  A  1217    				inc hl
001210 13                  A  1218    				inc de
001211 0C                  A  1219    				inc c
001212 10 F4               A  1220    				djnz cpyar_lp
001214 C9                  A  1221    				ret
                           A  1222    
                           A  1223    ;----------------------------------------------
                           A  1224    
001215                     A  1225    uppercasify_string
                           A  1226    
                           A  1227    ; Set HL to string location ($00 quits)
                           A  1228    ; Set B to max number of chars
                           A  1229    
001215 7E                  A  1230    				ld a,(hl)
001216 B7                  A  1231    				or a
001217 C8                  A  1232    				ret z
001218 CD 21 12 00         A  1233    				call os_uppercasify
00121C 77                  A  1234    				ld (hl),a
00121D 23                  A  1235    				inc hl
00121E 10 F5               A  1236    				djnz uppercasify_string	
001220 C9                  A  1237    				ret
                           A  1238    	
                           A  1239    
001221                     A  1240    os_uppercasify
                           A  1241    
                           A  1242    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1243    
001221 FE61                A  1244    				cp 061h			
001223 D8                  A  1245    				ret c
001224 FE7B                A  1246    				cp 07bh
001226 D0                  A  1247    				ret nc
001227 D620                A  1248    				sub 020h				
001229 C9                  A  1249    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1250    
                           A  1251    ;----------------------------------------------
                           A  1252    
00122A                     A  1253    case_insensitive_compare
                           A  1254    
                           A  1255    ; compares A with (HL) disregarding the case of
                           A  1256    ; Zero flag set if the characters are the same
                           A  1257    ; all registers are preserved.
                           A  1258    
00122A C5                  A  1259    				push bc					
00122B 4F                  A  1260    				ld c,a
                           A  1261    
00122C CD 21 12 00         A  1262    				call os_uppercasify				001230 47                  A  1263    				ld b,a
001231 7E                  A  1264    				ld a,(hl)
001232 CD 21 12 00         A  1265    				call os_uppercasify
001236 B8                  A  1266    				cp b
                           A  1267    
001237 79                  A  1268    				ld a,c
001238 C1                  A  1269    				pop bc
001239 C9                  A  1270    				ret
                           A  1271    
                           A  1272    ;----------------------------------------------
                           A  1273    
00123A                     A  1274    os_decimal_add
                           A  1275    
                           A  1276    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1277    
00123A C5                  A  1278    				push bc
00123B 0E00                A  1279    				ld c,0
00123D 1A                  A  1280    decdlp			ld a,(de)
00123E 86                  A  1281    				add a,(hl)
00123F 81                  A  1282    				add a,c
001240 FE0A                A  1283    				cp 10
001242 38 0B               A  1284    				jr c,daddnc
001244 D60A                A  1285    				sub 10
001246 0E01                A  1286    				ld c,1
001248 12                  A  1287    decnclp			ld (de),a
001249 23                  A  1288    				inc hl
00124A 13                  A  1289    				inc de
00124B 10 F0               A  1290    				djnz decdlp
00124D C1                  A  1291    				pop bc
00124E C9                  A  1292    				ret
00124F 0E00                A  1293    daddnc			ld c,0
001251 18 F5               A  1294    				jr decnclp
                           A  1295    	
                           A  1296    ;----------------------------------------------
                           A  1297    
001253                     A  1298    os_hex_to_decimal
                           A  1299    
                           A  1300    ; INPUT xDE hex longword
                           A  1301    ; OUTPUT xHL = decimal LSB address (8 digits) 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1302    
       00006A0B            A  1303    hex_to_convert		equ scratch_pad
       00006A0E            A  1304    decimal_digits		equ scratch_pad+3
       00006A16            A  1305    decimal_add_digits	equ scratch_pad+3+8
                           A  1306    
001253 ED53 0B 6A 00       A  1307    				ld (hex_to_convert),de
                           A  1308    		
001258 21 16 6A 00         A  1309    				ld hl,decimal_add_digits
00125C E5                  A  1310    				push hl
00125D 11 0E 6A 00         A  1311    				ld de,decimal_digits
001261 AF                  A  1312    				xor a
001262 0608                A  1313    				ld b,8
001264 12                  A  1314    setupdec		ld (de),a
001265 77                  A  1315    				ld (hl),a
001266 23                  A  1316    				inc hl
001267 13                  A  1317    				inc de
001268 10 FA               A  1318    				djnz setupdec
00126A E1                  A  1319    				pop hl
00126B 3601                A  1320    				ld (hl),1
                           A  1321    	
00126D 21 0B 6A 00         A  1322    				ld hl,hex_to_convert
001271 0603                A  1323    				ld b,3
001273 C5                  A  1324    decconvlp		push bc
001274 7E                  A  1325    				ld a,(hl)
001275 CD 93 12 00         A  1326    				call decadder
001279 CD AC 12 00         A  1327    				call decaddx16
00127D 7E                  A  1328    				ld a,(hl)
00127E 0F                  A  1329    				rrca
00127F 0F                  A  1330    				rrca
001280 0F                  A  1331    				rrca
001281 0F                  A  1332    				rrca
001282 CD 93 12 00         A  1333    				call decadder
001286 CD AC 12 00         A  1334    				call decaddx16
00128A C1                  A  1335    				pop bc
00128B 23                  A  1336    				inc hl
00128C 10 E5               A  1337    				djnz decconvlp
00128E 21 0E 6A 00         A  1338    				ld hl,decimal_digits
001292 C9                  A  1339    				ret
                           A  1340    
                           A  1341    
                           A  1342    
001293 E60F                A  1343    decadder		and 15
001295 C8                  A  1344    				ret z
001296 47                  A  1345    				ld b,a
001297 E5                  A  1346    				push hl
001298 C5                  A  1347    daddlp			push bc
001299 11 0E 6A 00         A  1348    				ld de,decimal_digits
00129D 21 16 6A 00         A  1349    				ld hl,decimal_add_digits
0012A1 0608                A  1350    				ld b,8
0012A3 CD 3A 12 00         A  1351    				call os_decimal_add
0012A7 C1                  A  1352    				pop bc
0012A8 10 EE               A  1353    				djnz daddlp	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012AA E1                  A  1354    				pop hl
0012AB C9                  A  1355    				ret
                           A  1356    			
                           A  1357    				
0012AC E5                  A  1358    decaddx16		push hl
0012AD 0604                A  1359    				ld b,4							0012AF C5                  A  1360    x16loop			push bc
0012B0 11 16 6A 00         A  1361    				ld de,decimal_add_digits
0012B4 21 16 6A 00         A  1362    				ld hl,decimal_add_digits
0012B8 0608                A  1363    				ld b,8
0012BA CD 3A 12 00         A  1364    				call os_decimal_add
0012BE C1                  A  1365    				pop bc
0012BF 10 EE               A  1366    				djnz x16loop	
0012C1 E1                  A  1367    				pop hl
0012C2 C9                  A  1368    				ret
                           A  1369    	
                           A  1370    	
                           A  1371    ;----------------------------------------------
                           A  1372    
0012C3                     A  1373    os_show_decimal
                           A  1374    
0012C3 11 2D 63 00         A  1375    				ld de,output_line				0012C7 01090000            A  1376    				ld bc,9
0012CB 09                  A  1377    				add hl,bc
0012CC 060A                A  1378    				ld b,10
0012CE 7E                  A  1379    shdeclp			ld a,(hl)
0012CF B7                  A  1380    				or a
0012D0 28 04               A  1381    				jr z,dnodigit
0012D2 C630                A  1382    				add a,030h
0012D4 12                  A  1383    				ld (de),a
0012D5 13                  A  1384    				inc de
0012D6 2B                  A  1385    dnodigit		dec hl
0012D7 10 F5               A  1386    				djnz shdeclp
0012D9 AF                  A  1387    				xor a
0012DA 12                  A  1388    				ld (de),a
0012DB CD 23 13 00         A  1389    				call os_print_output_line
0012DF C9                  A  1390    				ret
                           A  1391    				
                           A  1392    ;----------------------------------------------
                           A  1393    		
0012E0                     A  1394    os_copy_to_output_line
                           A  1395    	
0012E0 D5                  A  1396    				push de
0012E1 C5                  A  1397    				push bc
0012E2 11 2D 63 00         A  1398    				ld de,output_line				0012E6 01510000            A  1399    				ld bc,max_buffer_chars+1		0012EA EDA0                A  1400    os_cloll		ldi
0012EC 7E                  A  1401    				ld a,(hl)
0012ED B7                  A  1402    				or a
0012EE 28 04               A  1403    				jr z,os_clold
0012F0 78                  A  1404    				ld a,b
0012F1 B1                  A  1405    				or c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012F2 20 F6               A  1406    				jr nz,os_cloll
0012F4 12                  A  1407    os_clold		ld (de),a
0012F5 C1                  A  1408    				pop bc
0012F6 D1                  A  1409    				pop de
0012F7 C9                  A  1410    				ret
                           A  1411    
                           A  1412    
                           A  1413    ;----------------------------------------------
                           A  1414    
0012F8                     A  1415    os_show_hex_address
                           A  1416    
0012F8 E5                  A  1417    				push hl							0012F9 21 2D 63 00         A  1418    				ld hl,output_line
0012FD ED53 CF 62 00       A  1419    				ld (hex_address),de
001302 3A D1 62 00         A  1420    				ld a,(hex_address+2)
001306 CD 63 10 00         A  1421    				call hexbyte_to_ascii
00130A 18 10               A  1422    				jr shw_nt
                           A  1423    				
                           A  1424    
00130C                     A  1425    os_show_hex_byte
                           A  1426    
00130C E5                  A  1427    				push hl							00130D 21 2D 63 00         A  1428    				ld hl,output_line
001311 CD 63 10 00         A  1429    				call hexbyte_to_ascii
001315 18 09               A  1430    				jr shb_nt
                           A  1431    
                           A  1432    
                           A  1433    
001317                     A  1434    os_show_hex_word
                           A  1435    
001317 E5                  A  1436    				push hl							001318 21 2D 63 00         A  1437    				ld hl,output_line
00131C CD 88 10 00         A  1438    shw_nt			call hexword_to_ascii
001320 3600                A  1439    shb_nt			ld (hl),0
001322 E1                  A  1440    				pop hl
                           A  1441    
                           A  1442    	
                           A  1443    
001323                     A  1444    os_print_output_line
                           A  1445    
001323 E5                  A  1446    				push hl
001324 21 2D 63 00         A  1447    				ld hl,output_line
001328 CD 20 0F 00         A  1448    cproline		call os_print_string
00132C E1                  A  1449    				pop hl
00132D C9                  A  1450    				ret
                           A  1451    
                           A  1452    
                           A  1453    
00132E                     A  1454    os_print_output_line_skip_zeroes
                           A  1455    
00132E E5                  A  1456    				push hl
00132F 21 2D 63 00         A  1457    				ld hl,output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001333 CD 40 10 00         A  1458    				call os_skip_leading_ascii_zero
001337 18 EF               A  1459    				jr cproline
                           A  1460    				
                           A  1461    		
                           A  1462    ;----------------------------------------------
                           A  1463    
001339                     A  1464    os_store_CPU_regs
                           A  1465    
001339 F3                  A  1466    				di								                           A  1467    
00133A 33                  A  1468    				inc sp							00133B 33                  A  1469    				inc sp
00133C 33                  A  1470    				inc sp
00133D ED73 4E 62 00       A  1471    				ld (store_spl),sp
001342 3B                  A  1472    				dec sp							001343 3B                  A  1473    				dec sp
001344 3B                  A  1474    				dec sp
                           A  1475    				
001345 F5                  A  1476    				push af
001346 32 31 62 00         A  1477    				ld (store_a1),a					00134A 08                  A  1478    				ex af,af'
00134B 32 3B 62 00         A  1479    				ld (store_a2),a
00134F 08                  A  1480    				ex af,af'
001350 ED43 32 62 00       A  1481    				ld (store_bc1),bc		
001355 ED53 35 62 00       A  1482    				ld (store_de1),de
00135A 22 38 62 00         A  1483    				ld (store_hl1),hl
00135E D9                  A  1484    				exx
00135F ED43 3C 62 00       A  1485    				ld (store_bc2),bc
001364 ED53 3F 62 00       A  1486    				ld (store_de2),de
001369 22 42 62 00         A  1487    				ld (store_hl2),hl
00136D D9                  A  1488    				exx
00136E DD22 45 62 00       A  1489    				ld (store_ix),ix
001373 FD22 48 62 00       A  1490    				ld (store_iy),iy
                           A  1491    				
001378 ED6E                A  1492    			    ld a,MB
00137A 32 53 62 00         A  1493    				ld (store_mbase),a
                           A  1494    								
00137E C5                  A  1495    				push bc
00137F 0600                A  1496    				ld b,0
001381 20 02               A  1497    				jr nz,zfstzero					001383 CBF0                A  1498    				set 6,b
                           A  1499    
001385 30 02               A  1500    zfstzero		jr nc,cfstzero					001387 CBC0                A  1501    				set 0,b
                           A  1502    
001389 F2 8F 13 00         A  1503    cfstzero		jp p,sfstzero					00138D CBF8                A  1504    				set 7,b
                           A  1505    
00138F EA 95 13 00         A  1506    sfstzero		jp pe,pfstzero					001393 CBD0                A  1507    				set 2,b
                           A  1508    
001395 ED57                A  1509    pfstzero		ld a,i			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001397 EA 9D 13 00         A  1510    				jp pe,ifstzero					00139B CBE0                A  1511    				set 4,b
                           A  1512    
00139D 78                  A  1513    ifstzero		ld a,b
00139E 32 54 62 00         A  1514    				ld (store_f),a
                           A  1515    				
0013A2 3E00                A  1516    				ld a,os_location/65536			0013A4 ED6D                A  1517    				ld MB,a							0013A6 40ED73 51 62        A  1518    				ld.sis (store_sps),sp
0013AB 3A 53 62 00         A  1519    				ld a,(store_mbase)				0013AF ED6D                A  1520    				ld MB,a
                           A  1521    				
0013B1 C1                  A  1522    				pop bc
0013B2 F1                  A  1523    				pop af
0013B3 FB                  A  1524    				ei
0013B4 C9                  A  1525    				ret
                           A  1526    
                           A  1527    
                           A  1528    
0013B5                     A  1529    os_dont_store_registers
                           A  1530    
0013B5 AF                  A  1531    				xor a
0013B6 32 56 62 00         A  1532    				ld (store_registers),a			0013BA C9                  A  1533    				ret
                           A  1534    	
                           A  1535    	
                           A  1536    ;----------------------------------------------
                           A  1537    
0013BB                     A  1538    os_new_line_cond
                           A  1539    
0013BB CD FC 19 00         A  1540    				call test_quiet_mode
0013BF C0                  A  1541    				ret nz
                           A  1542    
                           A  1543    	
0013C0                     A  1544    os_new_line
                           A  1545    
0013C0 E5                  A  1546    				push hl
0013C1 21 16 58 00         A  1547    				ld hl,crlfx2_txt+1
0013C5 CD 20 0F 00         A  1548    				call os_print_string
0013C9 E1                  A  1549    				pop hl
0013CA C9                  A  1550    				ret
                           A  1551    				
                           A  1552    ;----------------------------------------------
                           A  1553    
0013CB                     A  1554    os_set_cursor_position
                           A  1555    				
                           A  1556    												0013CB 3A 68 60 00         A  1557    				ld a,(window_rows)				0013CF 3D                  A  1558    				dec a							0013D0 B9                  A  1559    				cp c
0013D1 38 14               A  1560    				jr c,badpos
0013D3 79                  A  1561    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013D4 32 BD 62 00         A  1562    				ld (cursor_y),a
                           A  1563    				
0013D8 3A 6B 60 00         A  1564    				ld a,(window_columns)
0013DC 3D                  A  1565    				dec a
0013DD B8                  A  1566    				cp b
0013DE 38 07               A  1567    				jr c,badpos
0013E0 78                  A  1568    				ld a,b
0013E1 32 BE 62 00         A  1569    				ld (cursor_x),a
0013E5 AF                  A  1570    				xor a
0013E6 C9                  A  1571    				ret				
                           A  1572    
0013E7 3E82                A  1573    badpos			ld a,82h
0013E9 B7                  A  1574    				or a
0013EA C9                  A  1575    				ret
                           A  1576    
                           A  1577    
                           A  1578    					
                           A  1579    	
                           A  1580    	
0013EB                     A  1581    os_get_cursor_position
                           A  1582    
0013EB ED4B BD 62 00       A  1583    				ld bc,(cursor_pos)				0013F0 BF                  A  1584    				cp a							0013F1 C9                  A  1585    				ret
                           A  1586    
                           A  1587    
                           A  1588    ;----------------------------------------------
                           A  1589    
0013F2                     A  1590    os_show_packed_text_cond
                           A  1591    
0013F2 CD FC 19 00         A  1592    				call test_quiet_mode
0013F6 C0                  A  1593    				ret nz
                           A  1594    
                           A  1595    	
0013F7                     A  1596    os_show_packed_text
                           A  1597    
                           A  1598    ; Construct sentence from internal dictionary u
                           A  1599    	
0013F7 C5                  A  1600    				push bc
0013F8 D5                  A  1601    				push de
0013F9 DDE5                A  1602    				push ix
0013FB DD21 2D 63 00       A  1603    				ld ix,output_line
001400 7E                  A  1604    readpind		ld a,(hl)
001401 B7                  A  1605    				or a
001402 20 10               A  1606    				jr nz,getword					001404 DD2B                A  1607    				dec ix							001406 DD7700              A  1608    				ld (ix),a						                           A  1609    			
001409 E5                  A  1610    				push hl
00140A CD 23 13 00         A  1611    				call os_print_output_line
00140E E1                  A  1612    				pop hl
                           A  1613    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00140F DDE1                A  1614    				pop ix
001411 D1                  A  1615    				pop de
001412 C1                  A  1616    				pop bc
001413 C9                  A  1617    				ret
                           A  1618    				
001414 11 2B 58 00         A  1619    getword			ld de,dictionary-1
001418 0E00                A  1620    				ld c,0
00141A 13                  A  1621    dictloop		inc de
00141B 1A                  A  1622    				ld a,(de)
00141C B7                  A  1623    				or a							00141D 28 04               A  1624    				jr z,faword
00141F CB7F                A  1625    				bit 7,a							001421 28 F7               A  1626    				jr z,dictloop	
                           A  1627    			
001423 0C                  A  1628    faword			inc c							001424 79                  A  1629    				ld a,c
001425 BE                  A  1630    				cp (hl)
001426 20 F2               A  1631    				jr nz,dictloop
001428 13                  A  1632    copytol			inc de							001429 1A                  A  1633    				ld a,(de)
00142A B7                  A  1634    				or a
00142B 28 0B               A  1635    				jr z,eoword						00142D CB7F                A  1636    				bit 7,a
00142F 20 07               A  1637    				jr nz,eoword
001431 DD7700              A  1638    				ld (ix),a						001434 DD23                A  1639    				inc ix
001436 18 F0               A  1640    				jr copytol
001438 DD360020            A  1641    eoword			ld (ix),32						00143C DD23                A  1642    				inc ix
00143E 23                  A  1643    				inc hl
00143F 18 BF               A  1644    				jr readpind
                           A  1645    
                           A  1646    
                           A  1647    		
                           A  1648    ;--------- Mouse functions --------------------
                           A  1649    
001441                     A  1650    os_set_mouse_window
                           A  1651    
                           A  1652    ; Set: HL/DE = window size mouse pointer is to 
                           A  1653    	
001441 22 05 64 00         A  1654    				ld (mouse_window_size_x),hl	 
001445 ED53 08 64 00       A  1655    				ld (mouse_window_size_y),de
00144A 21000000            A  1656    				ld hl,0
00144E 22 0B 64 00         A  1657    				ld (mouse_abs_x),hl
001452 22 0E 64 00         A  1658    				ld (mouse_abs_y),hl
001456 3E01                A  1659    				ld a,1
001458 32 1D 64 00         A  1660    				ld (mouse_new_window),a
00145C AF                  A  1661    				xor a
00145D C9                  A  1662    				ret
                           A  1663    				
                           A  1664    			
00145E                     A  1665    os_get_mouse_motion
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1666    			
                           A  1667    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1668    ;          ZF = Not set: Mouse driver not initi
                           A  1669    			
00145E 3A 27 62 00         A  1670    				ld a,(devices_connected)
001462 E602                A  1671    				and 2
001464 EE02                A  1672    				xor 2
001466 C0                  A  1673    				ret nz
001467 AF                  A  1674    ms_reread		xor a
001468 32 04 64 00         A  1675    				ld (mouse_updated),a
00146C 2A FD 63 00         A  1676    				ld hl,(mouse_disp_x)			001470 ED5B 00 64 00       A  1677    				ld de,(mouse_disp_y)
001475 3A 04 64 00         A  1678    				ld a,(mouse_updated)			001479 B7                  A  1679    				or a
00147A 20 EB               A  1680    				jr nz,ms_reread
00147C AF                  A  1681    mouse_end		xor a
00147D 3A 03 64 00         A  1682    				ld a,(mouse_wheel)
001481 47                  A  1683    				ld b,a
001482 3A FC 63 00         A  1684    				ld a,(mouse_buttons)
001486 C9                  A  1685    				ret
                           A  1686    			
                           A  1687    			
001487                     A  1688    os_get_mouse_position
                           A  1689    
                           A  1690    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1691    ;          ZF = Not set: Mouse driver not initi
                           A  1692    				
001487 CD 5E 14 00         A  1693    				call os_get_mouse_motion
00148B C0                  A  1694    				ret nz
00148C 22 17 64 00         A  1695    				ld (mouse_disp_x_buffer),hl
001490 ED53 1A 64 00       A  1696    				ld (mouse_disp_y_buffer),de
001495 3A 1D 64 00         A  1697    				ld a,(mouse_new_window)
001499 B7                  A  1698    				or a
00149A 20 6C               A  1699    				jr nz,ms_nmw
                           A  1700    
00149C ED5B 11 64 00       A  1701    				ld de,(mouse_disp_x_old)
0014A1 AF                  A  1702    				xor a
0014A2 ED52                A  1703    				sbc hl,de
0014A4 EB                  A  1704    				ex de,hl
0014A5 2A 0B 64 00         A  1705    				ld hl,(mouse_abs_x)
0014A9 19                  A  1706    				add hl,de
0014AA E5                  A  1707    				push hl
0014AB C1                  A  1708    				pop bc
0014AC DD210000 80         A  1709    				ld ix,800000h					0014B1 DD09                A  1710    				add ix,bc
0014B3 30 06               A  1711    				jr nc,ms_x_ok1
0014B5 01000000            A  1712    				ld bc,0
0014B9 18 10               A  1713    				jr ms_x_ok2
0014BB ED5B 05 64 00       A  1714    ms_x_ok1		ld de,(mouse_window_size_x)
0014C0 AF                  A  1715    				xor a
0014C1 ED52                A  1716    				sbc hl,de
0014C3 38 06               A  1717    				jr c,ms_x_ok2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C5 ED4B 05 64 00       A  1718    				ld bc,(mouse_window_size_x)		0014CA 0B                  A  1719    				dec bc
0014CB ED43 0B 64 00       A  1720    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1721    					
0014D0 2A 1A 64 00         A  1722    				ld hl,(mouse_disp_y_buffer)
0014D4 ED5B 14 64 00       A  1723    				ld de,(mouse_disp_y_old)
0014D9 AF                  A  1724    				xor a
0014DA ED52                A  1725    				sbc hl,de
0014DC EB                  A  1726    				ex de,hl
0014DD 2A 0E 64 00         A  1727    				ld hl,(mouse_abs_y)
0014E1 19                  A  1728    				add hl,de
0014E2 E5                  A  1729    				push hl
0014E3 C1                  A  1730    				pop bc
0014E4 DD210000 80         A  1731    				ld ix,800000h					0014E9 DD09                A  1732    				add ix,bc
0014EB 30 06               A  1733    				jr nc,ms_y_ok1
0014ED 01000000            A  1734    				ld bc,0
0014F1 18 10               A  1735    				jr ms_y_ok2
0014F3 ED5B 08 64 00       A  1736    ms_y_ok1		ld de,(mouse_window_size_y)
0014F8 AF                  A  1737    				xor a
0014F9 ED52                A  1738    				sbc hl,de
0014FB 38 06               A  1739    				jr c,ms_y_ok2
0014FD ED4B 08 64 00       A  1740    				ld bc,(mouse_window_size_y)		001502 0B                  A  1741    				dec bc
001503 ED43 0E 64 00       A  1742    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1743    
                           A  1744    				
001508 2A 17 64 00         A  1745    ms_nmw			ld hl,(mouse_disp_x_buffer)
00150C 22 11 64 00         A  1746    				ld (mouse_disp_x_old),hl
001510 2A 1A 64 00         A  1747    				ld hl,(mouse_disp_y_buffer)
001514 22 14 64 00         A  1748    				ld (mouse_disp_y_old),hl
                           A  1749    				
001518 2A 0B 64 00         A  1750    				ld hl,(mouse_abs_x)
00151C ED5B 0E 64 00       A  1751    				ld de,(mouse_abs_y)
                           A  1752    				
001521 AF                  A  1753    				xor a
001522 32 1D 64 00         A  1754    				ld (mouse_new_window),a
001526 C3 7C 14 00         A  1755    				jp mouse_end
                           A  1756    				
                           A  1757    	
                           A  1758    ;==============================================
                           A  1759    ;----- General Subroutines --------------------
                           A  1760    ;==============================================
                           A  1761    
                           A  1762    ; .--------------.
                           A  1763    ; ! CRC Checksum !
                           A  1764    ; '--------------'
                           A  1765    
                           A  1766    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1767    
00152A                     A  1768    crc_checksum
                           A  1769    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00152A 21FFFF00            A  1770    				ld hl,0ffffh		
00152E 1A                  A  1771    crcloop			ld a,(de)			
00152F AC                  A  1772    				xor h			
001530 67                  A  1773    				ld h,a			
001531 0608                A  1774    				ld b,8
001533 4029                A  1775    crcbyte			add.sis hl,hl					001535 30 08               A  1776    				jr nc,crcnext
001537 7C                  A  1777    				ld a,h
001538 EE10                A  1778    				xor 10h
00153A 67                  A  1779    				ld h,a
00153B 7D                  A  1780    				ld a,l
00153C EE21                A  1781    				xor 21h
00153E 6F                  A  1782    				ld l,a
00153F 10 F2               A  1783    crcnext			djnz crcbyte
001541 13                  A  1784    				inc de
001542 0D                  A  1785    				dec c
001543 20 E9               A  1786    				jr nz,crcloop
001545 C9                  A  1787    				ret
                           A  1788    
                           A  1789    
                           A  1790    ;----------------------------------------------
                           A  1791    
001546                     A  1792    os_get_key_mod_flags
                           A  1793    
001546 3A F1 63 00         A  1794    				ld a,(key_mod_flags)
00154A BF                  A  1795    				cp a							00154B C9                  A  1796    				ret
                           A  1797    
                           A  1798    ;----------------------------------------------
                           A  1799    
00154C                     A  1800    os_get_display_size
                           A  1801    			
00154C F5                  A  1802    				push af
00154D 3A 68 60 00         A  1803    				ld a,(window_rows)
001551 4F                  A  1804    				ld c,a
001552 3A 6B 60 00         A  1805    				ld a,(window_columns)
001556 47                  A  1806    				ld b,a
001557 F1                  A  1807    				pop af
001558 BF                  A  1808    				cp a						; Z
001559 C9                  A  1809    				ret
                           A  1810    
                           A  1811    ;----------------------------------------------
                           A  1812    
00155A                     A  1813    os_bchl_memfill
                           A  1814    
                           A  1815    ; fill memory from xHL with A. Count in xBC.
                           A  1816    		
00155A 77                  A  1817    mf_loop			ld (hl),a
00155B EDA1                A  1818    				cpi								00155D EA 5A 15 00         A  1819    				jp pe,mf_loop
001561 C9                  A  1820    				ret
                           A  1821    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1822    ;----------------------------------------------
                           A  1823    
001562 7B                  A  1824    ext_set_pen		ld a,e
                           A  1825    
001563 32 41 60 00         A  1826    os_set_pen		ld (current_pen),a
001567 BF                  A  1827    				cp a							001568 C9                  A  1828    				ret
                           A  1829    
                           A  1830    ;----------------------------------------------
                           A  1831    	
001569 3A 41 60 00         A  1832    os_get_pen		ld a,(current_pen)
00156D BF                  A  1833    				cp a							00156E C9                  A  1834    				ret	
                           A  1835    
                           A  1836    ;----------------------------------------------
                           A  1837    
00156F                     A  1838    ext_background_colours
                           A  1839    				
00156F CC 81 15 00         A  1840    				call z,mbase_hl
001573 C3 08 3E 00         A  1841    				jp hswc_set_ui_colours
                           A  1842    				
                           A  1843    				
                           A  1844    ;----------------------------------------------
                           A  1845    
001577                     A  1846    os_get_xde_msb	
                           A  1847    			
001577 ED53 D5 62 00       A  1848    				ld (xrr_temp),de				00157C 3A D7 62 00         A  1849    				ld a,(xrr_temp+2)
001580 C9                  A  1850    				ret
                           A  1851    
                           A  1852    ;----------------------------------------------
                           A  1853    
001581 F5                  A  1854    mbase_hl		push af
001582 22 D5 62 00         A  1855    				ld (xrr_temp),hl				001586 ED6E                A  1856    				ld a,MB
001588 32 D7 62 00         A  1857    				ld (xrr_temp+2),a
00158C 2A D5 62 00         A  1858    				ld hl,(xrr_temp)
001590 F1                  A  1859    				pop af
001591 C9                  A  1860    				ret
                           A  1861    				
001592 F5                  A  1862    mbase_de		push af
001593 ED53 D5 62 00       A  1863    				ld (xrr_temp),de				001598 ED6E                A  1864    				ld a,MB
00159A 32 D7 62 00         A  1865    				ld (xrr_temp+2),a
00159E ED5B D5 62 00       A  1866    				ld de,(xrr_temp)
0015A3 F1                  A  1867    				pop af
0015A4 C9                  A  1868    				ret
                           A  1869    
0015A5 F5                  A  1870    mbase_ix		push af
0015A6 DD22 D5 62 00       A  1871    				ld (xrr_temp),ix				0015AB ED6E                A  1872    				ld a,MB
0015AD 32 D7 62 00         A  1873    				ld (xrr_temp+2),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015B1 DD2A D5 62 00       A  1874    				ld ix,(xrr_temp)
0015B6 F1                  A  1875    				pop af
0015B7 C9                  A  1876    				ret
                           A  1877    							
                           A  1878    ;----------------------------------------------
                           A  1879    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1880    ;----------------------------------------------
                           A  1881    
0015B8                     A  1882    unpack_rle
                           A  1883    
                           A  1884    ;set xHL = source address of packed file
                           A  1885    ;set xDE = destination address for unpacked dat
                           A  1886    ;set xBC = length of packed file
                           A  1887    
0015B8 E5                  A  1888    			push hl	
0015B9 DDE1                A  1889    			pop ix
0015BB 0B                  A  1890    			dec bc								0015BC 23                  A  1891    			inc hl
0015BD DD7E00              A  1892    unp_gtok	ld a,(ix)							0015C0 BE                  A  1893    unp_next	cp (hl)								0015C1 28 07               A  1894    			jr z,unp_brun						0015C3 EDA0                A  1895    			ldi									0015C5 EA C0 15 00         A  1896    			jp pe,unp_next						0015C9 C9                  A  1897    			ret
                           A  1898    	
0015CA C5                  A  1899    unp_brun	push bc								0015CB 23                  A  1900    			inc hl		
0015CC 7E                  A  1901    			ld a,(hl)							0015CD 23                  A  1902    			inc hl		
0015CE 46                  A  1903    			ld b,(hl)							0015CF 23                  A  1904    			inc hl
                           A  1905    	
0015D0 12                  A  1906    unp_rllp	ld (de),a							0015D1 13                  A  1907    			inc de			
0015D2 10 FC               A  1908    			djnz unp_rllp
                           A  1909    	
0015D4 C1                  A  1910    			pop bc	
0015D5 0B                  A  1911    			dec bc								0015D6 0B                  A  1912    			dec bc
0015D7 0B                  A  1913    			dec bc
0015D8 E5                  A  1914    			push hl								0015D9 21000000            A  1915    			ld hl,0
0015DD B7                  A  1916    			or a
0015DE ED4A                A  1917    			adc hl,bc
0015E0 E1                  A  1918    			pop hl
0015E1 20 DA               A  1919    			jr nz,unp_gtok
0015E3 C9                  A  1920    			ret	
                           A  1921    	
                           A  1922    ;----------------------------------------------
                           A  1923    ; Commonly called error messages - gets message
                           A  1924    ;----------------------------------------------
                           A  1925    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1926    
0015E4 3E0D                A  1927    os_no_fn_error		ld a,0dh
0015E6 B7                  A  1928    					or a
0015E7 C9                  A  1929    					ret
                           A  1930    			
0015E8 3E15                A  1931    os_fn_too_long		ld a,15h
0015EA B7                  A  1932    					or a
0015EB C9                  A  1933    					ret
                           A  1934    				
0015EC 3E16                A  1935    os_no_start_addr	ld a,16h
0015EE B7                  A  1936    					or a
0015EF C9                  A  1937    					ret
                           A  1938    			
0015F0 3E17                A  1939    os_no_filesize		ld a,17h
0015F2 B7                  A  1940    					or a
0015F3 C9                  A  1941    					ret
                           A  1942    			
0015F4 3E18                A  1943    os_abort_save		ld a,18h
0015F6 B7                  A  1944    					or a
0015F7 C9                  A  1945    					ret
                           A  1946    			
0015F8 3E1C                A  1947    os_no_e_addr_error	ld a,1ch
0015FA B7                  A  1948    					or a
0015FB C9                  A  1949    					ret
                           A  1950    			
0015FC 3E1D                A  1951    os_no_d_addr_error	ld a,1dh
0015FE B7                  A  1952    					or a
0015FF C9                  A  1953    					ret
                           A  1954    				
001600 3E1E                A  1955    os_range_error		ld a,1eh
001602 B7                  A  1956    					or a
001603 C9                  A  1957    					ret
                           A  1958    			
001604 3E1F                A  1959    os_no_args_error	ld a,1fh
001606 B7                  A  1960    					or a
001607 C9                  A  1961    					ret	
                           A  1962    
                           A  1963    ;----------------------------------------------
                           A  1964    
                           A  1965    ; Set xHL to address of zero terminated filenam
                           A  1966    ; RETURNS:	C:xDE  = File length
                           A  1967    ;    		HL     = Start cluster of file
                           A  1968    
001608 CC 81 15 00         A  1969    ext_find_file	call z,mbase_hl
                           A  1970    
00160C CD FE 53 00         A  1971    os_find_file	call fs_hl_to_filename
001610 CD 9F 4B 00         A  1972    				call fs_open_file_command		001614 38 02               A  1973    				jr c,os_fferr					001616 B7                  A  1974    				or a							001617 C9                  A  1975    				ret 		
                           A  1976    								
001618 47                  A  1977    os_fferr		ld b,a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001619 AF                  A  1978    				xor a			
00161A 4F                  A  1979    				ld c,a
00161B 0C                  A  1980    				inc c							00161C C9                  A  1981    				ret	
                           A  1982    
                           A  1983    ;----------------------------------------------
                           A  1984    
00161D                     A  1985    os_set_load_length
                           A  1986    
00161D ED53 55 56 00       A  1987    				ld (fs_file_transfer_length),de
001622 BF                  A  1988    				cp a							001623 C9                  A  1989    				ret
                           A  1990    				
                           A  1991    ;----------------------------------------------
                           A  1992    
001624                     A  1993    ext_set_file_pointer
                           A  1994    
001624 79                  A  1995    				ld a,c
                           A  1996    				
001625                     A  1997    os_set_file_pointer
                           A  1998    
                           A  1999    ; Moves the 'start of file' pointer allowing ra
                           A  2000    ; Note: File pointer is reset by opening a file
                           A  2001    ; by normal read function.
                           A  2002    
001625 ED53 49 56 00       A  2003    				ld (fs_file_pointer),de			00162A 32 4C 56 00         A  2004    				ld (fs_file_pointer+3),a
00162E F5                  A  2005    				push af
00162F AF                  A  2006    				xor a
001630 32 7B 56 00         A  2007    				ld (fs_filepointer_valid),a		001634 F1                  A  2008    				pop af
001635 BF                  A  2009    				cp a							001636 C9                  A  2010    				ret
                           A  2011    				
                           A  2012    ;----------------------------------------------
                           A  2013    
                           A  2014    ; set xHL = load address 
                           A  2015    ; (Before calling this routine, call os_find_fi
                           A  2016    
001637                     A  2017    ext_read_bytes_from_file
                           A  2018    
001637 CC 81 15 00         A  2019    				call z,mbase_hl					                           A  2020    				
00163B                     A  2021    os_read_bytes_from_file
                           A  2022    
00163B 22 5E 56 00         A  2023    				ld (fs_ez80_address),hl			00163F CD EA 4B 00         A  2024    				call fs_read_data_command
001643 38 D3               A  2025    				jr c,os_fferr
001645 B7                  A  2026    				or a
001646 C9                  A  2027    				ret
                           A  2028    
                           A  2029    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2030    
                           A  2031    ; Before calling, set xHL = address of zero ter
                           A  2032    
001647 CC 81 15 00         A  2033    ext_create_file	call z,mbase_hl
                           A  2034    
00164B CD FE 53 00         A  2035    os_create_file	call fs_hl_to_filename
00164F CD A0 4E 00         A  2036    				call fs_create_file_command		001653 DA 18 16 00         A  2037    				jp c,os_fferr					001657 B7                  A  2038    				or a
001658 C9                  A  2039    				ret
                           A  2040    
                           A  2041    ;----------------------------------------------
                           A  2042    
001659                     A  2043    ext_write_bytes_to_file
                           A  2044    
001659 CC 81 15 00         A  2045    				call z,mbase_hl
00165D CC 92 15 00         A  2046    				call z,mbase_de
                           A  2047    
001661                     A  2048    os_write_bytes_to_file
                           A  2049    
                           A  2050    ; Before calling, set..
                           A  2051    
                           A  2052    ; xDE   = address to save data from
                           A  2053    ; xBC   = number of bytes to save
                           A  2054    ; xHL   = address of null-terminated ascii name
                           A  2055    
                           A  2056    ; On return:
                           A  2057    
                           A  2058    ; If zero flag NOT set, there was an error.
                           A  2059    ; If   A = $00, b = hardware error code
                           A  2060    ; Else A = File system error code
                           A  2061    
                           A  2062    ; NOTE:
                           A  2063    ; Will return 'file not found' if the file has 
                           A  2064    				
001661 ED43 55 56 00       A  2065    				ld (fs_file_transfer_length),bc
001666 ED53 5E 56 00       A  2066    				ld (fs_ez80_address),de	 	
00166B CD FE 53 00         A  2067    				call fs_hl_to_filename
00166F CD D2 4E 00         A  2068    				call fs_write_bytes_to_file_com
001673 DA 18 16 00         A  2069    				jp c,os_fferr
001677 B7                  A  2070    				or a
001678 C9                  A  2071    				ret
                           A  2072    		
                           A  2073    		
                           A  2074    ;----------------------------------------------
                           A  2075    	
                           A  2076    
001679                     A  2077    os_check_volume_format
                           A  2078    
001679 CD FD 49 00         A  2079    				call fs_check_disk_format
00167D DA 18 16 00         A  2080    os_rffsc		jp c,os_fferr
001681 B7                  A  2081    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001682 C9                  A  2082    				ret
                           A  2083    
                           A  2084    ;----------------------------------------------
                           A  2085    
                           A  2086    
001683 7B                  A  2087    ext_format		ld a,e
001684 CC 81 15 00         A  2088    				call z,mbase_hl					                           A  2089    
001688 E5                  A  2090    os_format		push hl							001689 CD 8F 1A 00         A  2091    				call dev_to_driver_lookup
00168D E1                  A  2092    				pop hl
00168E 38 04               A  2093    				jr c,sdevok
001690 3ED0                A  2094    				ld a,0d0h						001692 B7                  A  2095    				or a
001693 C9                  A  2096    				ret
                           A  2097    
001694 F5                  A  2098    sdevok			push af				
001695 11 25 56 00         A  2099    				ld de,fs_sought_filename
001699 CD 0D 55 00         A  2100    				call fs_clear_filename
00169D 060B                A  2101    				ld b,11
00169F CD 06 12 00         A  2102    				call os_copy_ascii_run
0016A3 F1                  A  2103    				pop af
                           A  2104    				
0016A4 21 E3 60 00         A  2105    				ld hl,current_driver
0016A8 46                  A  2106    				ld b,(hl)
0016A9 77                  A  2107    				ld (hl),a
0016AA C5                  A  2108    				push bc
0016AB E5                  A  2109    				push hl
0016AC CD 72 48 00         A  2110    				call fs_format_device_command
0016B0 E1                  A  2111    				pop hl
0016B1 C1                  A  2112    				pop bc
0016B2 70                  A  2113    				ld (hl),b
0016B3 18 C8               A  2114    				jr os_rffsc
                           A  2115    
                           A  2116    
                           A  2117    ;----------------------------------------------
                           A  2118    
                           A  2119    
0016B5 CC 81 15 00         A  2120    ext_make_dir	call z,mbase_hl					                           A  2121    
0016B9 CD FE 53 00         A  2122    os_make_dir		call fs_hl_to_filename
0016BD CD 18 4D 00         A  2123    				call fs_make_dir_command
0016C1 18 BA               A  2124    				jr os_rffsc
                           A  2125    
                           A  2126    
                           A  2127    ;----------------------------------------------
                           A  2128    
                           A  2129    
0016C3 CC 81 15 00         A  2130    ext_change_dir	call z,mbase_hl					                           A  2131    
0016C7 CD FE 53 00         A  2132    os_change_dir	call fs_hl_to_filename
0016CB CD 4B 4B 00         A  2133    				call fs_change_dir_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016CF 18 AC               A  2134    				jr os_rffsc
                           A  2135    				
                           A  2136    	
                           A  2137    ;----------------------------------------------
                           A  2138    	
                           A  2139    	
0016D1 CD 7C 4B 00         A  2140    os_parent_dir	call fs_parent_dir_command
0016D5 18 A6               A  2141    				jr os_rffsc
                           A  2142    				
                           A  2143    
                           A  2144    ;----------------------------------------------
                           A  2145    
                           A  2146    	
0016D7 CD 70 4B 00         A  2147    os_root_dir		call fs_goto_root_dir_command
0016DB 18 A0               A  2148    				jr os_rffsc
                           A  2149    
                           A  2150    
                           A  2151    ;----------------------------------------------
                           A  2152    
                           A  2153    
0016DD CC 81 15 00         A  2154    ext_erase_file	call z,mbase_hl					                           A  2155    
0016E1 CD FE 53 00         A  2156    os_erase_file	call fs_hl_to_filename
0016E5 CD 61 50 00         A  2157    				call fs_erase_file_command
0016E9 18 92               A  2158    				jr os_rffsc
                           A  2159    	
                           A  2160    
                           A  2161    ;----------------------------------------------
                           A  2162    
                           A  2163    
0016EB                     A  2164    os_goto_first_dir_entry	
                           A  2165    
0016EB CD BC 50 00         A  2166    				call fs_goto_first_dir_entry
0016EF 18 8C               A  2167    				jr os_rffsc
                           A  2168    
                           A  2169    
                           A  2170    ;----------------------------------------------
                           A  2171    
                           A  2172    
0016F1                     A  2173    os_get_dir_entry		
                           A  2174    
0016F1 CD D3 50 00         A  2175    				call fs_get_dir_entry	
0016F5 18 86               A  2176    				jr os_rffsc
                           A  2177    
                           A  2178    
                           A  2179    ;----------------------------------------------
                           A  2180    
                           A  2181    
0016F7                     A  2182    os_goto_next_dir_entry	
                           A  2183    	
0016F7 CD 60 51 00         A  2184    				call fs_goto_next_dir_entry	
0016FB 18 80               A  2185    				jr os_rffsc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2186    
                           A  2187    
                           A  2188    ;----------------------------------------------
                           A  2189    
                           A  2190    
0016FD                     A  2191    os_get_current_dir_name
                           A  2192    
0016FD CD C4 54 00         A  2193    				call fs_get_current_dir_name
001701 C3 7D 16 00         A  2194    				jr os_rffsc
                           A  2195    				
                           A  2196    
                           A  2197    ;----------------------------------------------
                           A  2198    
                           A  2199    
001705 CC 81 15 00         A  2200    ext_rename_file	call z,mbase_hl
001709 CC 92 15 00         A  2201    				call z,mbase_de
                           A  2202    
00170D D5                  A  2203    os_rename_file	push de
00170E CD F8 53 00         A  2204    				call fs_hl_to_alt_filename		001712 E1                  A  2205    				pop hl				
001713 CD FE 53 00         A  2206    				call fs_hl_to_filename	
001717 CD 78 50 00         A  2207    				call fs_rename_command
00171B C3 7D 16 00         A  2208    				jr os_rffsc
                           A  2209    				
                           A  2210    
                           A  2211    ;----------------------------------------------
                           A  2212    
                           A  2213    
00171F CC 81 15 00         A  2214    ext_delete_dir	call z,mbase_hl					                           A  2215    
001723 CD FE 53 00         A  2216    os_delete_dir	call fs_hl_to_filename
001727 CD F1 4D 00         A  2217    				call fs_delete_dir_command
00172B C3 7D 16 00         A  2218    				jp os_rffsc
                           A  2219    	
                           A  2220    	
                           A  2221    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2222    
                           A  2223    
00172F                     A  2224    ext_read_sector
00172F CD 7A 17 00         A  2225    				call ext_sector_access_preamble
001733 C0                  A  2226    				ret nz
001734 32 E3 60 00         A  2227    				ld (current_driver),a
001738 CD 9B 55 00         A  2228    				call fs_read_sector
00173C 20 11               A  2229    				jr nz,sect_done
00173E 38 0F               A  2230    				jr c,sect_done
001740 21 0B 68 00         A  2231    				ld hl,sector_buffer
001744 ED5B F3 60 00       A  2232    				ld de,(sector_rd_wr_addr)
001749 01000200            A  2233    				ld bc,512
00174D EDB0                A  2234    				ldir			
00174F F5                  A  2235    sect_done		push af
001750 3A 19 62 00         A  2236    				ld a,(sys_driver_backup)		001754 32 E3 60 00         A  2237    				ld (current_driver),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001758 F1                  A  2238    				pop af
001759 C3 7D 16 00         A  2239    				jp os_rffsc
                           A  2240    				
                           A  2241    
00175D                     A  2242    ext_write_sector
                           A  2243    			
00175D CD 7A 17 00         A  2244    				call ext_sector_access_preamble
001761 C0                  A  2245    				ret nz
001762 32 E3 60 00         A  2246    				ld (current_driver),a
001766 2A F3 60 00         A  2247    				ld hl,(sector_rd_wr_addr)
00176A 11 0B 68 00         A  2248    				ld de,sector_buffer
00176E 01000200            A  2249    				ld bc,512
001772 EDB0                A  2250    				ldir			
001774 CD B3 55 00         A  2251    				call fs_write_sector
001778 18 D5               A  2252    				jr sect_done
                           A  2253    
                           A  2254    
00177A                     A  2255    ext_sector_access_preamble
                           A  2256    
00177A CC 81 15 00         A  2257    				call z,mbase_hl
00177E 22 F3 60 00         A  2258    				ld (sector_rd_wr_addr),hl
                           A  2259    				
001782 78                  A  2260    				ld a,b
001783 F5                  A  2261    				push af							001784 DD21 B9 62 00       A  2262    				ld ix,sector_lba0
001789 DD1F00              A  2263    				ld (ix),de						00178C DD7103              A  2264    				ld (ix+3),c
00178F CD 8F 1A 00         A  2265    				call dev_to_driver_lookup		001793 E5                  A  2266    				push hl
001794 DDE1                A  2267    				pop ix
001796 2A B9 62 00         A  2268    				ld hl,(sector_lba0)				00179A 3A BC 62 00         A  2269    				ld a,(sector_lba3)				00179E DD0701              A  2270    				ld bc,(ix+1)					0017A1 B7                  A  2271    				or a							0017A2 ED42                A  2272    				sbc hl,bc
0017A4 DD9E04              A  2273    				sbc a,(ix+4)
0017A7 38 05               A  2274    				jr c,range_ok
0017A9 F1                  A  2275    				pop af
0017AA 3ED5                A  2276    				ld a,0d5h						0017AC B7                  A  2277    				or a							0017AD C9                  A  2278    				ret
                           A  2279    	
0017AE 3A E3 60 00         A  2280    range_ok		ld a,(current_driver)
0017B2 32 19 62 00         A  2281    				ld (sys_driver_backup),a
0017B6 F1                  A  2282    				pop af							0017B7 CD 8F 1A 00         A  2283    				call dev_to_driver_lookup
0017BB 30 02               A  2284    				jr nc,bad_dev
0017BD BF                  A  2285    os_null			cp a							0017BE C9                  A  2286    				ret
                           A  2287    					
0017BF 3ED0                A  2288    bad_dev			ld a,0d0h						0017C1 B7                  A  2289    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017C2 C9                  A  2290    				ret	
                           A  2291    			
                           A  2292    
                           A  2293    ;----------------------------------------------
                           A  2294    
                           A  2295    
0017C3                     A  2296    os_get_device_info
                           A  2297    
0017C3 21 94 61 00         A  2298    				ld hl,host_device_hardware_info
0017C7 11 F6 60 00         A  2299    				ld de,driver_table
0017CB 3A E4 60 00         A  2300    				ld a,(device_count)
0017CF 47                  A  2301    				ld b,a
0017D0 3A E3 60 00         A  2302    				ld a,(current_driver)
0017D4 BF                  A  2303    				cp a
0017D5 C9                  A  2304    				ret
                           A  2305    
                           A  2306    
                           A  2307    
                           A  2308    
0017D6                     A  2309    os_get_volume_info
                           A  2310    
0017D6 21 14 61 00         A  2311    				ld hl,volume_mount_list	
0017DA 3A E5 60 00         A  2312    				ld a,(volume_count)
0017DE 47                  A  2313    				ld b,a
0017DF 3A E2 60 00         A  2314    				ld a,(current_volume)
0017E3 C9                  A  2315    				ret
                           A  2316    				
                           A  2317    		
                           A  2318    ;----------------------------------------------
                           A  2319    
                           A  2320    
0017E4                     A  2321    ext_serial_get_header
                           A  2322    
0017E4 CC 81 15 00         A  2323    				call z,mbase_hl
0017E8 7B                  A  2324    				ld a,e
0017E9 CD 05 46 00         A  2325    				call serial_get_header
0017ED C9                  A  2326    				ret
                           A  2327    				
                           A  2328    				
0017EE                     A  2329    ext_serial_receive_file
                           A  2330    				
0017EE CC 81 15 00         A  2331    				call z,mbase_hl
0017F2 CD A0 46 00         A  2332    				call serial_receive_file
0017F6 C9                  A  2333    				ret
                           A  2334    				
                           A  2335    	
0017F7                     A  2336    ext_serial_send_file
                           A  2337    
0017F7 CC 81 15 00         A  2338    				call z,mbase_hl
0017FB CC A5 15 00         A  2339    				call z,mbase_ix				
0017FF CD 69 47 00         A  2340    				call serial_send_file
001803 C9                  A  2341    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2342    
                           A  2343    
001804                     A  2344    ext_serial_tx
001804 7B                  A  2345    				ld a,e
001805 CD D1 3C 00         A  2346    				call send_serial_byte
001809 AF                  A  2347    				xor a							00180A C9                  A  2348    				ret
                           A  2349    
                           A  2350    
00180B                     A  2351    ext_serial_rx
00180B 7B                  A  2352    				ld a,e
00180C 32 B2 60 00         A  2353    				ld (serial_timeout),a
001810 CD 96 3C 00         A  2354    				call receive_serial_byte
001814 C9                  A  2355    				ret
                           A  2356    				
                           A  2357    
                           A  2358    ;----------------------------------------------
                           A  2359    
001815                     A  2360    ext_mount_volumes
                           A  2361    
001815 7B                  A  2362    				ld a,e
                           A  2363    
001816                     A  2364    os_mount_volumes
                           A  2365    				
001816 32 1A 62 00         A  2366    				ld (os_quiet_mode),a			                           A  2367    				
00181A 21 9D 57 00         A  2368    				ld hl,storage_txt
00181E CD 1B 0F 00         A  2369    				call os_print_string_cond
001822 CD 4A 18 00         A  2370    				call mount_go
001826 AF                  A  2371    				xor a
001827 32 E2 60 00         A  2372    tvloop			ld (current_volume),a
00182B CD A5 1A 00         A  2373    				call os_change_volume			00182F C8                  A  2374    				ret z							001830 3A E2 60 00         A  2375    				ld a,(current_volume)			001834 3C                  A  2376    				inc a
001835 FE08                A  2377    				cp max_volumes
001837 20 EE               A  2378    				jr nz,tvloop
001839 3A E4 60 00         A  2379    				ld a,(device_count)
00183D B7                  A  2380    				or a
00183E 20 08               A  2381    				jr nz,mfsdevs
001840 21 C7 5E 00         A  2382    				ld hl,none_found_msg
001844 CD F2 13 00         A  2383    				call os_show_packed_text_cond
001848 AF                  A  2384    mfsdevs			xor a
001849 C9                  A  2385    				ret
                           A  2386    
                           A  2387    
                           A  2388    
00184A 21 14 61 00         A  2389    mount_go		ld hl,volume_mount_list			00184E 01800000            A  2390    				ld bc,max_volumes*16
001852 AF                  A  2391    clrdl_lp		xor a
001853 CD 5A 15 00         A  2392    				call os_bchl_memfill
                           A  2393    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001857 21 FC 60 00         A  2394    				ld hl,volume_dir_clusters		00185B 01180000            A  2395    				ld bc,max_volumes*3		
00185F AF                  A  2396    				xor a	
001860 CD 5A 15 00         A  2397    				call os_bchl_memfill	
                           A  2398    			
001864 11 94 61 00         A  2399    				ld de,host_device_hardware_info
001868 ED53 14 62 00       A  2400    				ld (dhwn_temp_pointer),de
                           A  2401    				
00186D FD21 14 61 00       A  2402    				ld iy,volume_mount_list
001872 AF                  A  2403    				xor a
001873 32 E5 60 00         A  2404    				ld (volume_count),a
001877 32 E4 60 00         A  2405    				ld (device_count),a
00187B 32 E3 60 00         A  2406    mnt_loop		ld (current_driver),a			00187F CD 1B 1A 00         A  2407    				call locate_driver_base			001883 21000000            A  2408    				ld hl,0
001887 AF                  A  2409    				xor a
001888 ED5A                A  2410    				adc hl,de
00188A C8                  A  2411    				ret z							00188B EB                  A  2412    				ex de,hl						00188C FDE5                A  2413    				push iy
00188E CD 9F 18 00         A  2414    				call find_dev					001892 FDE1                A  2415    				pop iy							001894 DC A0 18 00         A  2416    				call c,got_dev		
001898 3A E3 60 00         A  2417    nxt_drv			ld a,(current_driver)			00189C 3C                  A  2418    				inc a
00189D 18 DC               A  2419    				jr mnt_loop
                           A  2420    
                           A  2421    				
00189F E9                  A  2422    find_dev		jp (hl)
                           A  2423    			
                           A  2424    			
0018A0 E5                  A  2425    got_dev			push hl							0018A1 D5                  A  2426    				push de							0018A2 C5                  A  2427    				push bc
0018A3 CD BB 13 00         A  2428    				call os_new_line_cond			0018A7 015B0100            A  2429    				ld bc,015bh
0018AB CD 2C 1A 00         A  2430    				call os_print_multiple_chars_co
0018AF 3A E3 60 00         A  2431    				ld a,(current_driver)
0018B3 CD 1B 1A 00         A  2432    				call locate_driver_base
0018B7 210C0000            A  2433    				ld hl,0ch
0018BB 19                  A  2434    				add hl,de
0018BC CD 1B 0F 00         A  2435    				call os_print_string_cond		0018C0 015D0100            A  2436    				ld bc,015dh
0018C4 CD 2C 1A 00         A  2437    				call os_print_multiple_chars_co
0018C8 C1                  A  2438    				pop bc
0018C9 D1                  A  2439    				pop de
0018CA AF                  A  2440    				xor a
0018CB 32 18 62 00         A  2441    				ld (vols_on_device_temp),a
                           A  2442    				
0018CF 21 E4 60 00         A  2443    				ld hl,device_count
0018D3 34                  A  2444    				inc (hl)						0018D4 3A E3 60 00         A  2445    				ld a,(current_driver)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018D8 2A 14 62 00         A  2446    				ld hl,(dhwn_temp_pointer)	
0018DC 77                  A  2447    				ld (hl),a
0018DD 23                  A  2448    				inc hl
0018DE 73                  A  2449    				ld (hl),e						0018DF FD7304              A  2450    				ld (iy+4),e						0018E2 23                  A  2451    				inc hl							0018E3 72                  A  2452    				ld (hl),d
0018E4 FD7205              A  2453    				ld (iy+5),d
0018E7 23                  A  2454    				inc hl
0018E8 71                  A  2455    				ld (hl),c			
0018E9 FD7106              A  2456    				ld (iy+6),c
0018EC 23                  A  2457    				inc hl
0018ED 70                  A  2458    				ld (hl),b						0018EE 23                  A  2459    				inc hl
0018EF D1                  A  2460    				pop de
0018F0 EB                  A  2461    				ex de,hl
0018F1 01160000            A  2462    				ld bc,22
0018F5 EDB0                A  2463    				ldir							0018F7 AF                  A  2464    				xor a
0018F8 0605                A  2465    				ld b,5		
0018FA 12                  A  2466    clrrode			ld (de),a						0018FB 13                  A  2467    				inc de
0018FC 10 FC               A  2468    				djnz clrrode
0018FE ED53 14 62 00       A  2469    				ld (dhwn_temp_pointer),de		                           A  2470    					
001903 AF                  A  2471    				xor a							001904 FDE5                A  2472    fnxtpart		push iy
001906 CD 9B 49 00         A  2473    				call fs_get_partition_info
00190A FDE1                A  2474    				pop iy
00190C 38 31               A  2475    				jr c,nxt_dev					00190E FECE                A  2476    				cp 0ceh							001910 28 2D               A  2477    				jr z,nxt_dev
001912 F5                  A  2478    				push af
001913 FD360001            A  2479    				ld (iy),1						001917 3A E3 60 00         A  2480    				ld a,(current_driver)
00191B FD7701              A  2481    				ld (iy+1),a						00191E 3A 17 62 00         A  2482    				ld a,(partition_temp)	
001922 FD7707              A  2483    				ld (iy+7),a						001925 F1                  A  2484    				pop af
001926 B7                  A  2485    				or a
001927 28 35               A  2486    				jr z,dev_mbr
001929 AF                  A  2487    				xor a
00192A FD7708              A  2488    				ld (iy+8),a						00192D FD7709              A  2489    				ld (iy+9),a						001930 FD770A              A  2490    				ld (iy+10),a					001933 FD770B              A  2491    				ld (iy+11),a
001936 CD AA 19 00         A  2492    				call show_vol_info
00193A CD 9B 19 00         A  2493    				call test_max_vol
00193E C8                  A  2494    				ret z							                           A  2495    			
00193F 3A 18 62 00         A  2496    nxt_dev			ld a,(vols_on_device_temp)		001943 B7                  A  2497    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001944 C0                  A  2498    				ret nz		
001945 CD FC 19 00         A  2499    				call test_quiet_mode
001949 20 06               A  2500    				jr nz,skp_cu
00194B 3E0A                A  2501    				ld a,10
00194D 32 BE 62 00         A  2502    				ld (cursor_x),a
001951 21 C4 5E 00         A  2503    skp_cu			ld hl,no_vols_msg				001955 CD F2 13 00         A  2504    				call os_show_packed_text_cond
001959 CD BB 13 00         A  2505    				call os_new_line_cond
00195D C9                  A  2506    				ret
                           A  2507    				
                           A  2508    			
00195E 11040000            A  2509    dev_mbr			ld de,4
001962 19                  A  2510    				add hl,de
001963 7E                  A  2511    				ld a,(hl)						001964 B7                  A  2512    				or a
001965 C8                  A  2513    				ret z							001966 19                  A  2514    				add hl,de
                           A  2515    				
001967 FDE5                A  2516    				push iy
001969 0604                A  2517    				ld b,4
00196B 7E                  A  2518    sfmbrlp			ld a,(hl)						00196C FD7708              A  2519    				ld (iy+8),a
00196F 23                  A  2520    				inc hl
001970 FD23                A  2521    				inc iy
001972 10 F7               A  2522    				djnz sfmbrlp
001974 FDE1                A  2523    				pop iy
001976 FDE5                A  2524    				push iy
001978 0603                A  2525    				ld b,3	
00197A 7E                  A  2526    nsivlp			ld a,(hl)
00197B FD7704              A  2527    				ld (iy+4),a						00197E 23                  A  2528    				inc hl
00197F FD23                A  2529    				inc iy
001981 10 F7               A  2530    				djnz nsivlp
001983 FDE1                A  2531    				pop iy
                           A  2532    				
001985 CD AA 19 00         A  2533    				call show_vol_info
001989 CD 9B 19 00         A  2534    				call test_max_vol	
00198D C8                  A  2535    				ret z							00198E 3A 17 62 00         A  2536    				ld a,(partition_temp)
001992 3C                  A  2537    				inc a
001993 FE04                A  2538    				cp 4							001995 C2 04 19 00         A  2539    				jp nz,fnxtpart
001999 18 A4               A  2540    				jr nxt_dev
                           A  2541    				
                           A  2542    
00199B                     A  2543    test_max_vol
                           A  2544    			
00199B 11100000            A  2545    				ld de,16
00199F FD19                A  2546    				add iy,de			
0019A1 21 E5 60 00         A  2547    				ld hl,volume_count
0019A5 34                  A  2548    				inc (hl)
0019A6 7E                  A  2549    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019A7 FE08                A  2550    				cp max_volumes
0019A9 C9                  A  2551    				ret
                           A  2552    			
                           A  2553    			
0019AA                     A  2554    show_vol_info
                           A  2555    				
0019AA CD FC 19 00         A  2556    				call test_quiet_mode
0019AE 20 06               A  2557    				jr nz,skp_cm2
0019B0 3E09                A  2558    				ld a,9			
0019B2 32 BE 62 00         A  2559    				ld (cursor_x),a
0019B6 3A E5 60 00         A  2560    skp_cm2			ld a,(volume_count)
0019BA F5                  A  2561    				push af
0019BB C630                A  2562    				add a,30h		
0019BD 32 EA 60 00         A  2563    				ld (vol_txt+4),a	
0019C1 21 E6 60 00         A  2564    				ld hl,vol_txt
0019C5 CD 1B 0F 00         A  2565    				call os_print_string_cond		0019C9 21 18 62 00         A  2566    				ld hl,vols_on_device_temp
0019CD CBC6                A  2567    				set 0,(hl)						                           A  2568    			
0019CF F1                  A  2569    				pop af
0019D0 FDE5                A  2570    				push iy
0019D2 CD A5 1A 00         A  2571    				call os_change_volume			0019D6 28 0A               A  2572    				jr z,vform_ok					0019D8 21 74 5E 00         A  2573    svi_fe			ld hl,format_err_msg		
0019DC CD F2 13 00         A  2574    svi_pem			call os_show_packed_text_cond	0019E0 18 0D               A  2575    				jr skpsvl
                           A  2576    			
0019E2 CD B7 51 00         A  2577    vform_ok		call fs_get_volume_label
0019E6 38 0E               A  2578    				jr c,svi_hwe
0019E8 B7                  A  2579    				or a
0019E9 20 ED               A  2580    				jr nz,svi_fe
0019EB CD 1B 0F 00         A  2581    				call os_print_string_cond		                           A  2582    			
0019EF CD BB 13 00         A  2583    skpsvl			call os_new_line_cond
0019F3 FDE1                A  2584    				pop iy
0019F5 C9                  A  2585    				ret
                           A  2586    				
0019F6 21 C0 5C 00         A  2587    svi_hwe			ld hl,disk_err_msg
0019FA 18 E0               A  2588    				jr svi_pem
                           A  2589    			
                           A  2590    			
0019FC                     A  2591    test_quiet_mode
                           A  2592    			
0019FC 3A 1A 62 00         A  2593    				ld a,(os_quiet_mode)
001A00 B7                  A  2594    				or a
001A01 C9                  A  2595    				ret
                           A  2596    
                           A  2597    ;----------------------------------------------
                           A  2598    
                           A  2599    
001A02                     A  2600    show_dev_driver_name
                           A  2601    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2602    	
001A02 CD 1B 1A 00         A  2603    				call locate_driver_base			001A06 EB                  A  2604    				ex de,hl
001A07 110C0000            A  2605    				ld de,0ch
001A0B 19                  A  2606    				add hl,de
001A0C CD 20 0F 00         A  2607    				call os_print_string			001A10 C5                  A  2608    				push bc
001A11 01200100            A  2609    				ld bc,0120h
001A15 CD 31 1A 00         A  2610    				call os_print_multiple_chars	001A19 C1                  A  2611    				pop bc
001A1A C9                  A  2612    				ret
                           A  2613    
                           A  2614    
001A1B                     A  2615    locate_driver_base
                           A  2616    
001A1B E5                  A  2617    				push hl							001A1C 11030000            A  2618    				ld de,3							001A20 57                  A  2619    				ld d,a
001A21 ED5C                A  2620    				mlt de
001A23 21 F6 60 00         A  2621    				ld hl,driver_table
001A27 19                  A  2622    				add hl,de
001A28 ED17                A  2623    				ld de,(hl)
001A2A E1                  A  2624    				pop hl
001A2B C9                  A  2625    				ret
                           A  2626    				
                           A  2627    		
                           A  2628    ;----------------------------------------------
                           A  2629    
001A2C                     A  2630    os_print_multiple_chars_cond
                           A  2631    
001A2C CD FC 19 00         A  2632    				call test_quiet_mode
001A30 C0                  A  2633    				ret nz
                           A  2634    			
001A31                     A  2635    os_print_multiple_chars
                           A  2636    
                           A  2637    ;c = char
                           A  2638    ;b = count
001A31 C5                  A  2639    				push bc
001A32 E5                  A  2640    				push hl
001A33 79                  A  2641    				ld a,c
001A34 21 18 58 00         A  2642    				ld hl,rep_char_txt
001A38 77                  A  2643    				ld (hl),a
001A39 E5                  A  2644    pmch_lp			push hl
001A3A CD 20 0F 00         A  2645    				call os_print_string
001A3E E1                  A  2646    				pop hl
001A3F 10 F8               A  2647    				djnz pmch_lp
001A41 E1                  A  2648    				pop hl
001A42 C1                  A  2649    				pop bc
001A43 C9                  A  2650    				ret
                           A  2651    
                           A  2652    ;----------------------------------------------
                           A  2653    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2654    
001A44 7B                  A  2655    ext_plot_char	ld a,e
001A45 C3 01 3F 00         A  2656    				jp hwsc_plot_char
                           A  2657    				
                           A  2658    
                           A  2659    ;----------------------------------------------
                           A  2660    ; Some file system related routines 
                           A  2661    ;----------------------------------------------
                           A  2662    
                           A  2663    
001A49                     A  2664    fs_get_dir_cluster
                           A  2665    
                           A  2666    
001A49 F5                  A  2667    				push af							001A4A E5                  A  2668    				push hl			
001A4B CD 61 1A 00         A  2669    				call fs_get_dir_cluster_address
001A4F ED17                A  2670    				ld de,(hl)
001A51 E1                  A  2671    dclopdone		pop hl
001A52 F1                  A  2672    				pop af
001A53 BF                  A  2673    				cp a							001A54 C9                  A  2674    				ret
                           A  2675    				
                           A  2676    
                           A  2677    
                           A  2678    
                           A  2679    
001A55                     A  2680    fs_update_dir_cluster
                           A  2681    
001A55 F5                  A  2682    				push af							001A56 E5                  A  2683    				push hl			
001A57 D5                  A  2684    				push de			
001A58 CD 61 1A 00         A  2685    				call fs_get_dir_cluster_address
001A5C D1                  A  2686    				pop de
001A5D ED1F                A  2687    				ld (hl),de
001A5F 18 F0               A  2688    				jr dclopdone
                           A  2689    			
                           A  2690    
                           A  2691    
                           A  2692    
                           A  2693    
001A61                     A  2694    fs_get_dir_cluster_address
                           A  2695    
001A61 21 FC 60 00         A  2696    				ld hl,volume_dir_clusters		001A65 3A E2 60 00         A  2697    				ld a,(current_volume)	
001A69 11030000            A  2698    				ld de,3
001A6D 57                  A  2699    				ld d,a
001A6E ED5C                A  2700    				mlt de
001A70 19                  A  2701    				add hl,de
001A71 C9                  A  2702    				ret
                           A  2703    				
                           A  2704    	
                           A  2705    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2706    	
                           A  2707    	
001A72                     A  2708    fs_get_total_sectors
                           A  2709    
                           A  2710    
001A72 F5                  A  2711    				push af
001A73 E5                  A  2712    				push hl							001A74 CD 83 1A 00         A  2713    				call fs_calc_volume_offset	
001A78 21 18 61 00         A  2714    				ld hl,volume_mount_list+4
001A7C 19                  A  2715    				add hl,de
001A7D ED17                A  2716    				ld de,(hl)
001A7F E1                  A  2717    				pop hl
001A80 F1                  A  2718    				pop af
001A81 BF                  A  2719    				cp a							001A82 C9                  A  2720    				ret
                           A  2721    
                           A  2722    
                           A  2723    
                           A  2724    
                           A  2725    
001A83                     A  2726    fs_calc_volume_offset
                           A  2727    
001A83 3A E2 60 00         A  2728    				ld a,(current_volume)			001A87 11100000            A  2729    calc_vol		ld de,16
001A8B 57                  A  2730    				ld d,a
001A8C ED5C                A  2731    				mlt de
001A8E C9                  A  2732    				ret
                           A  2733    
                           A  2734    
                           A  2735    
                           A  2736    
                           A  2737    
001A8F                     A  2738    dev_to_driver_lookup
                           A  2739    
001A8F 21 E4 60 00         A  2740    				ld hl,device_count				001A93 BE                  A  2741    				cp (hl)							001A94 D0                  A  2742    				ret nc
001A95 11200000            A  2743    				ld de,32						001A99 57                  A  2744    				ld d,a
001A9A ED5C                A  2745    				mlt de
001A9C 21 94 61 00         A  2746    				ld hl,host_device_hardware_info
001AA0 19                  A  2747    				add hl,de
001AA1 7E                  A  2748    				ld a,(hl)
001AA2 37                  A  2749    				scf
001AA3 C9                  A  2750    				ret
                           A  2751    				
                           A  2752    
                           A  2753    
001AA4                     A  2754    ext_change_volume
                           A  2755    
001AA4 7B                  A  2756    				ld a,e
                           A  2757    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AA5                     A  2758    os_change_volume
                           A  2759    
001AA5 47                  A  2760    				ld b,a							001AA6 FE08                A  2761    				cp max_volumes		
001AA8 30 23               A  2762    				jr nc,fs_ccv2					                           A  2763    			
001AAA 3A E2 60 00         A  2764    				ld a,(current_volume)			001AAE F5                  A  2765    				push af
001AAF 78                  A  2766    				ld a,b
001AB0 32 E2 60 00         A  2767    				ld (current_volume),a			001AB4 CD D1 1A 00         A  2768    				call fs_set_driver_for_volume	                           A  2769    				
001AB8 CD FD 49 00         A  2770    				call fs_check_disk_format		001ABC 38 06               A  2771    				jr c,fs_cant_chg_vols	
001ABE B7                  A  2772    				or a
001ABF 20 03               A  2773    				jr nz,fs_cant_chg_vols
001AC1 F1                  A  2774    				pop af							001AC2 AF                  A  2775    				xor a							001AC3 C9                  A  2776    				ret
                           A  2777    
                           A  2778    
001AC4                     A  2779    fs_cant_chg_vols
                           A  2780    			
001AC4 F1                  A  2781    				pop af
001AC5 32 E2 60 00         A  2782    				ld (current_volume),a			001AC9 CD D1 1A 00         A  2783    				call fs_set_driver_for_volume	                           A  2784    				
001ACD 3ECF                A  2785    fs_ccv2			ld a,0cfh						001ACF B7                  A  2786    				or a
001AD0 C9                  A  2787    				ret
                           A  2788    					
                           A  2789    	
001AD1                     A  2790    fs_set_driver_for_volume
                           A  2791    
001AD1 CD 83 1A 00         A  2792    				call fs_calc_volume_offset		001AD5 21 15 61 00         A  2793    				ld hl,volume_mount_list+1
001AD9 19                  A  2794    				add hl,de
001ADA 7E                  A  2795    				ld a,(hl)
001ADB 32 E3 60 00         A  2796    				ld (current_driver),a
001ADF C9                  A  2797    				ret
                           A  2798    
                           A  2799    
                           A  2800    ;----------------------------------------------
                           A  2801    
001AE0                     A  2802    ext_file_sector_list
                           A  2803    
                           A  2804    ;Input HL = cluster, E = sector offset
                           A  2805    
                           A  2806    ;Output HL = new cluster, E = new sector number
                           A  2807    ;       IX = address of LBA0 LSB of sector (int
                           A  2808    
                           A  2809    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AE0 3A 0E 56 00         A  2810    				ld a,(fs_cluster_size)
001AE4 BB                  A  2811    				cp e
001AE5 20 0A               A  2812    				jr nz,fsl_sc
001AE7 CD 43 54 00         A  2813    				call get_fat_entry_for_cluster
001AEB DA 18 16 00         A  2814    				jp c,os_fferr
001AEF 1E00                A  2815    				ld e,0
001AF1 CD 1A 55 00         A  2816    fsl_sc			call cluster_and_offset_to_lba
001AF5 1C                  A  2817    				inc e
001AF6 DD21 B9 62 00       A  2818    fsl_done		ld ix,sector_lba0
001AFB BF                  A  2819    				cp a							001AFC C9                  A  2820    				ret
                           A  2821    				
                           A  2822    ;----------------------------------------------
                           A  2823    
                           A  2824    
001AFD E5                  A  2825    os_count_chars	push hl							001AFE 01000000            A  2826    				ld bc,0
001B02 7E                  A  2827    cch_lp			ld a,(hl)
001B03 B7                  A  2828    				or a
001B04 28 04               A  2829    				jr z,cch_end
001B06 23                  A  2830    				inc hl
001B07 03                  A  2831    				inc bc
001B08 18 F8               A  2832    				jr cch_lp
001B0A E1                  A  2833    cch_end			pop hl
001B0B C9                  A  2834    				ret
                           A  2835    				
                           A  2836    			
                           A  2837    ;----------------------------------------------
                           A  2838    ; Environment variable code V0.01
                           A  2839    ;----------------------------------------------
                           A  2840    
       00000100            A  2841    envar_buffer_size equ 256
                           A  2842    
                           A  2843    ;----------------------------------------------
                           A  2844    
001B0C                     A  2845    ext_get_envar
001B0C CC 81 15 00         A  2846    				call z,mbase_hl
                           A  2847    
001B10                     A  2848    os_get_envar
                           A  2849    
                           A  2850    ;Set: 		HL = name of required variable
                           A  2851    ;Returns:	ZF Set: DE = address of variable's 
                           A  2852    ;        	ZF Not Set: Couldn't find variable
                           A  2853    				
001B10 DD21 1E 64 00       A  2854    				ld ix,envar_list-1
001B15 CD FD 1A 00         A  2855    env_fname		call os_count_chars				001B19 78                  A  2856    				ld a,b
001B1A B1                  A  2857    				or c
001B1B 28 27               A  2858    				jr z,env_bad
                           A  2859    								
001B1D ED1201              A  2860    env_cname		lea de,ix+1
001B20 1A                  A  2861    				ld a,(de)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B21 FEFF                A  2862    				cp 0ffh
001B23 28 1F               A  2863    				jr z,env_bad
001B25 C5                  A  2864    				push bc
001B26 41                  A  2865    				ld b,c
001B27 CD E7 11 00         A  2866    				call os_compare_strings
001B2B C1                  A  2867    				pop bc
001B2C 20 06               A  2868    				jr nz,env_nomatch
001B2E 03                  A  2869    				inc bc							001B2F EB                  A  2870    				ex de,hl
001B30 09                  A  2871    				add hl,bc
001B31 EB                  A  2872    				ex de,hl						001B32 AF                  A  2873    				xor a
001B33 C9                  A  2874    				ret			
                           A  2875    				
001B34 DD23                A  2876    env_nomatch		inc ix							001B36 CD DC 1B 00         A  2877    				call check_envar_bounds
001B3A 20 08               A  2878    				jr nz,env_bad
001B3C DD7E00              A  2879    				ld a,(ix)
001B3F B7                  A  2880    				or a
001B40 28 DB               A  2881    				jr z,env_cname
001B42 18 F0               A  2882    				jr env_nomatch
                           A  2883    
001B44 3E82                A  2884    env_bad			ld a,82h						001B46 B7                  A  2885    				or a
001B47 C9                  A  2886    				ret	
                           A  2887    				
                           A  2888    ;----------------------------------------------
                           A  2889    
001B48                     A  2890    ext_set_envar
                           A  2891    
                           A  2892    ;HL = addr of variable name (zero terminated)
                           A  2893    ;DE = addr of data for variable (zero terminate
                           A  2894    
                           A  2895    ;Returns:
                           A  2896    ;ZF = Set: OK
                           A  2897    ;ZF = Not Set: No enough space for new variable
                           A  2898    		
001B48 CC 81 15 00         A  2899    				call z,mbase_hl
001B4C CC 92 15 00         A  2900    				call z,mbase_de
                           A  2901    
001B50 7E                  A  2902    os_set_envar	ld a,(hl)						001B51 B7                  A  2903    				or a
001B52 28 F0               A  2904    				jr z,env_bad
001B54 1A                  A  2905    				ld a,(de)
001B55 B7                  A  2906    				or a
001B56 28 EC               A  2907    				jr z,env_bad
                           A  2908    
001B58 E5                  A  2909    				push hl
001B59 D5                  A  2910    				push de
001B5A CD A6 1B 00         A  2911    				call os_delete_envar			001B5E D1                  A  2912    				pop de
001B5F E1                  A  2913    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2914    				
001B60 DD2A 29 65 00       A  2915    				ld ix,(envar_top_loc)			001B65 CD DC 1B 00         A  2916    env_enlp		call check_envar_bounds
001B69 20 D9               A  2917    				jr nz,env_bad
001B6B 7E                  A  2918    				ld a,(hl)						001B6C DD7700              A  2919    				ld (ix),a
001B6F B7                  A  2920    				or a
001B70 28 05               A  2921    				jr z,env_ndone
001B72 23                  A  2922    				inc hl
001B73 DD23                A  2923    				inc ix
001B75 18 EE               A  2924    				jr env_enlp
                           A  2925    				
001B77 CD DC 1B 00         A  2926    env_ndone		call check_envar_bounds			001B7B 20 C7               A  2927    				jr nz,env_bad
001B7D DD36003D            A  2928    				ld (ix),'='
001B81 DD23                A  2929    				inc ix
                           A  2930    
001B83 CD DC 1B 00         A  2931    env_evlp		call check_envar_bounds			001B87 20 BB               A  2932    				jr nz,env_bad
001B89 1A                  A  2933    				ld a,(de)
001B8A DD7700              A  2934    				ld (ix),a
001B8D B7                  A  2935    				or a
001B8E 28 05               A  2936    				jr z,env_vdone
001B90 13                  A  2937    				inc de
001B91 DD23                A  2938    				inc ix
001B93 18 EE               A  2939    				jr env_evlp
                           A  2940    
001B95 DD23                A  2941    env_vdone		inc ix
001B97 DD3600FF            A  2942    				ld (ix),0ffh
001B9B DD22 29 65 00       A  2943    				ld (envar_top_loc),ix			001BA0 AF                  A  2944    				xor a
001BA1 C9                  A  2945    				ret
                           A  2946    
                           A  2947    	
                           A  2948    ;----------------------------------------------
                           A  2949    
001BA2                     A  2950    ext_delete_envar
                           A  2951    
001BA2 CC 81 15 00         A  2952    				call z,mbase_hl
                           A  2953    
001BA6                     A  2954    os_delete_envar
                           A  2955    
                           A  2956    ;HL = name of required variable (null terminate
                           A  2957    ;ZF = Set: OK
                           A  2958    ;ZF = Not Set: Didnt find named variable
                           A  2959    
                           A  2960    
001BA6 CD 10 1B 00         A  2961    				call os_get_envar				001BAA C0                  A  2962    				ret nz
                           A  2963    				
001BAB D5                  A  2964    				push de
001BAC E1                  A  2965    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BAD AF                  A  2966    				xor a
001BAE ED42                A  2967    				sbc hl,bc						                           A  2968    				
001BB0 13                  A  2969    env_fnxt		inc de							001BB1 D5                  A  2970    				push de
001BB2 DDE1                A  2971    				pop ix
001BB4 CD DC 1B 00         A  2972    				call check_envar_bounds
001BB8 20 8A               A  2973    				jr nz,env_bad
001BBA 1A                  A  2974    				ld a,(de)
001BBB B7                  A  2975    				or a
001BBC 20 F2               A  2976    				jr nz,env_fnxt
                           A  2977    
001BBE 13                  A  2978    env_gnxt		inc de							001BBF EB                  A  2979    				ex de,hl
001BC0 7E                  A  2980    env_collp		ld a,(hl)
001BC1 12                  A  2981    				ld (de),a						001BC2 FEFF                A  2982    				cp 0ffh
001BC4 28 0F               A  2983    				jr z,env_clspd					001BC6 E5                  A  2984    				push hl
001BC7 DDE1                A  2985    				pop ix
001BC9 CD DC 1B 00         A  2986    				call check_envar_bounds
001BCD C2 44 1B 00         A  2987    				jr nz,env_bad
001BD1 23                  A  2988    				inc hl
001BD2 13                  A  2989    				inc de
001BD3 18 EB               A  2990    				jr env_collp
                           A  2991    
001BD5 ED53 29 65 00       A  2992    env_clspd		ld (envar_top_loc),de			001BDA AF                  A  2993    				xor a
001BDB C9                  A  2994    				ret
                           A  2995    				
                           A  2996    ;----------------------------------------------
                           A  2997    
001BDC                     A  2998    check_envar_bounds
                           A  2999    
001BDC C5                  A  3000    				push bc
001BDD E5                  A  3001    				push hl
001BDE DDE5                A  3002    				push ix
001BE0 E1                  A  3003    				pop hl
001BE1 01 20 65 00         A  3004    				ld bc,1+(envar_list+envar_buffe
001BE5 AF                  A  3005    				xor a
001BE6 ED42                A  3006    				sbc hl,bc
001BE8 38 05               A  3007    				jr c,env_bok
001BEA AF                  A  3008    				xor a
001BEB 3C                  A  3009    				inc a
001BEC E1                  A  3010    				pop hl
001BED C1                  A  3011    				pop bc
001BEE C9                  A  3012    				ret
                           A  3013    
001BEF AF                  A  3014    env_bok			xor a
001BF0 E1                  A  3015    				pop hl
001BF1 C1                  A  3016    				pop bc
001BF2 C9                  A  3017    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3018    						
                           A  3019    ;----------------------------------------------
                           A  3020    
001BF3                     A  3021    os_get_keymap_location
                           A  3022    
001BF3 21 15 5F 00         A  3023    				ld hl,unshifted_keymap
001BF7 BF                  A  3024    				cp a							001BF8 C9                  A  3025    				ret
                           A  3026    
                           A  3027    ;----------------------------------------------
                           A  3028    
001BF9                     A  3029    os_get_font_info
                           A  3030    
001BF9 DD21 74 60 00       A  3031    				ld ix,font_parameters
001BFE BF                  A  3032    				cp a
001BFF C9                  A  3033    				ret
                           A  3034    
                           A  3035    
                           A  3036    ;----------------------------------------------
                           A  3037    
                           A  3038    
001C00 CC 81 15 00         A  3039    ext_play_audio	call z,mbase_hl
                           A  3040    				
001C04 CD FC 44 00         A  3041    os_play_audio	call hwsc_play_audio
001C08 C9                  A  3042    				ret
                           A  3043    				
                           A  3044    				
                           A  3045    ;==============================================
                           A  3046    ; Internal OS command routines
                           A  3047    ;==============================================
                           A  3048    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C09                     B     5    os_cmd_c
                           B     6    
001C09 CD 3F 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C0D CD 68 1C 00         B     9    				call hexword_or_bust			001C11 CA FC 15 00         B    10    				jp z,os_no_d_addr_error
001C15 ED53 CC 62 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C1A CD 2D 1C 00         B    13    				call test_mem_range				001C1E DA 00 16 00         B    14    				jp c,os_range_error				001C22 ED5B CC 62 00       B    15    				ld de,(copy_dest_address)
001C27 EDB0                B    16    				ldir
                           B    17    
001C29 3E20                B    18    copy_done		ld a,020h						001C2B B7                  B    19    				or a
001C2C C9                  B    20    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C2D                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C2D 2A C9 62 00         B    33    				ld hl,(cmdop_end_address)	
001C31 ED4B C6 62 00       B    34    				ld bc,(cmdop_start_address)
001C36 C5                  B    35    				push bc
001C37 AF                  B    36    				xor a
001C38 ED42                B    37    				sbc hl,bc
001C3A E5                  B    38    				push hl
001C3B C1                  B    39    				pop bc
001C3C 03                  B    40    				inc bc
001C3D E1                  B    41    				pop hl
001C3E C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C3F                     B    46    get_start_and_end
                           B    47    			
001C3F CD 97 10 00         B    48    				call ascii_to_hexword			001C43 ED53 C6 62 00       B    49    				ld (cmdop_start_address),de
001C48 23                  B    50    				inc hl
001C49 28 09               B    51    				jr z,st_addrok
001C4B E1                  B    52    				pop hl							001C4C FE82                B    53    				cp 82h							001C4E 28 02               B    54    				jr z,c_badhex
001C50 3E16                B    55    				ld a,016h						001C52 B7                  B    56    c_badhex		or a
001C53 C9                  B    57    				ret
                           B    58    				
001C54 CD 97 10 00         B    59    st_addrok		call ascii_to_hexword			001C58 ED53 C9 62 00       B    60    				ld (cmdop_end_address),de
001C5D 23                  B    61    				inc hl
001C5E B7                  B    62    				or a
001C5F C8                  B    63    				ret z
001C60 E1                  B    64    				pop hl							001C61 FE82                B    65    				cp 82h							001C63 28 ED               B    66    				jr z,c_badhex
001C65 3E1C                B    67    				ld a,01ch						001C67 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C68                     B    72    hexword_or_bust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C68 CD 97 10 00         B    79    				call ascii_to_hexword		
001C6C FE82                B    80    				cp 82h
001C6E 20 03               B    81    				jr nz,hex_good
001C70 E1                  B    82    				pop hl						; r
001C71 B7                  B    83    				or a	
001C72 C9                  B    84    				ret			 
001C73 FE81                B    85    hex_good		cp 081h						; n
001C75 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C76                     B     5    os_cmd_cd	
                           B     6    
001C76 CD 79 16 00         B     7    				call os_check_volume_format	
001C7A C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C7B 7E                  B    11    				ld a,(hl)						001C7C B7                  B    12    				or a				
001C7D CA 24 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C81 7E                  B    16    				ld a,(hl)						001C82 23                  B    17    				inc hl
001C83 46                  B    18    				ld b,(hl)
001C84 2B                  B    19    				dec hl
001C85 FE2E                B    20    				cp '.'			
001C87 20 08               B    21    				jr nz,cd_nual
001C89 B8                  B    22    				cp b
001C8A 20 05               B    23    				jr nz,cd_nual
001C8C CD D1 16 00         B    24    				call os_parent_dir	
001C90 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001C91 FE2F                B    28    cd_nual			cp 02fh			
001C93 20 05               B    29    				jr nz,cd_nogor					001C95 CD D7 16 00         B    30    				call os_root_dir	
001C99 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001C9A FE25                B    34    cd_nogor		cp '%'							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001C9C 20 1F               B    35    				jr nz,cd_no_assign
001C9E CD 10 1B 00         B    36    				call os_get_envar
001CA2 28 04               B    37    				jr z,cd_evok
001CA4 3ED1                B    38    				ld a,0d1h						001CA6 B7                  B    39    				or a
001CA7 C9                  B    40    				ret
001CA8 11000000            B    41    cd_evok			ld de,0
001CAC 5E                  B    42    				ld e,(hl)
001CAD 23                  B    43    				inc hl
001CAE 56                  B    44    				ld d,(hl)
001CAF 23                  B    45    				inc hl
001CB0 7E                  B    46    				ld a,(hl)
001CB1 D5                  B    47    				push de
001CB2 CD A5 1A 00         B    48    				call os_change_volume
001CB6 D1                  B    49    				pop de
001CB7 C0                  B    50    				ret nz
001CB8 CD 55 1A 00         B    51    				call fs_update_dir_cluster
001CBC C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CBD                     B    55    cd_no_assign
                           B    56    			
001CBD 3A E2 60 00         B    57    				ld a,(current_volume)
001CC1 32 0E 6A 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CC5 E5                  B    60    				push hl
001CC6 DDE1                B    61    				pop ix
001CC8 DD7E04              B    62    				ld a,(ix+4)
001CCB FE3A                B    63    				cp ':'							001CCD 20 25               B    64    				jr nz,cd_nchvol
001CCF 11 E7 60 00         B    65    				ld de,vol_txt+1
001CD3 0603                B    66    				ld b,3
001CD5 CD E7 11 00         B    67    				call os_compare_strings
001CD9 20 19               B    68    				jr nz,cd_nchvol
001CDB 11050000            B    69    				ld de,5
001CDF 19                  B    70    				add hl,de
001CE0 22 7F 63 00         B    71    				ld (os_args_loc),hl				001CE4 DD7E03              B    72    				ld a,(ix+3)						001CE7 D630                B    73    				sub 030h
001CE9 CD A5 1A 00         B    74    				call os_change_volume
001CED C0                  B    75    				ret nz							001CEE CD D7 16 00         B    76    				call os_root_dir				001CF2 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001CF4 CD 49 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001CF8 ED53 0B 6A 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001CFD E5                  B    83    cd_mollp		push hl
001CFE CD C7 16 00         B    84    				call os_change_dir				001D02 E1                  B    85    				pop hl
001D03 20 0A               B    86    				jr nz,cd_dcherr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D05 7E                  B    87    cd_mol			ld a,(hl)						001D06 23                  B    88    				inc hl
001D07 B7                  B    89    				or a
001D08 C8                  B    90    				ret z
001D09 FE2F                B    91    				cp 02fh
001D0B 28 F0               B    92    				jr z,cd_mollp
001D0D 18 F6               B    93    				jr cd_mol
                           B    94    					
001D0F                     B    95    cd_dcherr	
                           B    96    			
001D0F F5                  B    97    				push af							001D10 ED5B 0B 6A 00       B    98    				ld de,(original_dir_cd_cmd)
001D15 CD 55 1A 00         B    99    				call fs_update_dir_cluster
001D19 3A 0E 6A 00         B   100    				ld a,(original_vol_cd_cmd)
001D1D CD A5 1A 00         B   101    				call os_change_volume	
001D21 F1                  B   102    				pop af
001D22 B7                  B   103    				or a
001D23 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D24                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D24 0610                B   113    				ld b,max_dirs
001D26 0E00                B   114    				ld c,0
001D28 C5                  B   115    lp1				push bc
001D29 CD 49 1A 00         B   116    				call fs_get_dir_cluster
001D2D C1                  B   117    				pop bc
001D2E D5                  B   118    				push de
001D2F 0C                  B   119    				inc c
001D30 C5                  B   120    				push bc
001D31 CD D1 16 00         B   121    				call os_parent_dir
001D35 C1                  B   122    				pop bc
001D36 20 02               B   123    				jr nz,shdir_lp
001D38 10 EE               B   124    				djnz lp1
                           B   125    				
001D3A D1                  B   126    shdir_lp		pop de
001D3B C5                  B   127    				push bc
001D3C CD 55 1A 00         B   128    				call fs_update_dir_cluster
001D40 CD FD 16 00         B   129    				call os_get_current_dir_name
001D44 CD 20 0F 00         B   130    				call os_print_string
001D48 21 5A 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D4C CD 20 0F 00         B   132    				call os_print_string
001D50 C1                  B   133    				pop bc
001D51 0D                  B   134    				dec c
001D52 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D54 CD C0 13 00         B   137    				call os_new_line	
001D58 AF                  B   138    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D59 C9                  B   139    				ret
                           B   140    			
001D5A 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006A0B            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006A0E            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D5C                     B     5    os_cmd_cls
                           B     6    
001D5C CD 14 3E 00         B     7    				call hwsc_clear_screen
001D60 AF                  B     8    				xor a
001D61 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D62                     B     5    os_cmd_colon
                           B     6    	
001D62 CD 68 1C 00         B     7    				call hexword_or_bust			001D66 CA EC 15 00         B     8    				jp z,os_no_start_addr			001D6A D5                  B     9    				push de
001D6B DDE1                B    10    				pop ix							                           B    11    			
001D6D CD 68 1C 00         B    12    wmblp			call hexword_or_bust			001D71 28 07               B    13    				jr z,os_ccmdn
001D73 DD7300              B    14    				ld (ix),e						001D76 DD23                B    15    				inc ix
001D78 18 F3               B    16    				jr wmblp
                           B    17    
001D7A AF                  B    18    os_ccmdn		xor a
001D7B C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001D7C FD21 63 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D81 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001D85 CD 68 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001D89 28 05               B    10    				jr z,d_no_hex					001D8B ED53 DA 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001D90 3A 68 60 00         B    13    d_no_hex		ld a,(window_rows)				001D94 D602                B    14    				sub a,2
001D96 47                  B    15    				ld b,a
001D97 C5                  B    16    dis_loop		push bc
                           B    17    				
001D98 DD2A DA 28 00       B    18    				ld ix,(dis_addr)				001D9D CD 45 23 00         B    19    				call show_ix					001DA1 3E20                B    20    				ld a,' '
001DA3 CD 39 23 00         B    21    				call show_ascii_char
                           B    22    
001DA7 FD21 63 23 00       B    23    				ld iy,prefix_bits_loc
001DAC FD360000            B    24    				ld (iy),0						001DB0 CD EC 1D 00         B    25    				call dis_instr					001DB4 DD23                B    26    				inc ix							                           B    27    				
001DB6 3E1A                B    28    				ld a,26							001DB8 32 BE 62 00         B    29    				ld (cursor_pos+1),a				001DBC ED4B DA 28 00       B    30    				ld bc,(dis_addr)
001DC1 DD22 DA 28 00       B    31    				ld (dis_addr),ix				001DC6 DDE5                B    32    				push ix
001DC8 E1                  B    33    				pop hl
001DC9 AF                  B    34    				xor a
001DCA ED42                B    35    				sbc hl,bc						001DCC 7D                  B    36    				ld a,l
001DCD E607                B    37    				and 7
001DCF 6F                  B    38    				ld l,a
001DD0 0A                  B    39    shexoplp		ld a,(bc)						001DD1 CD 28 23 00         B    40    				call show_hex_byte
001DD5 3E20                B    41    				ld a,' '
001DD7 CD 39 23 00         B    42    				call show_ascii_char
001DDB 03                  B    43    				inc bc
001DDC 2D                  B    44    				dec l
001DDD 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DDF CD C0 13 00         B    47    				call os_new_line
001DE3 C1                  B    48    				pop bc
001DE4 10 B1               B    49    				djnz dis_loop
                           B    50    
001DE6 CD C0 13 00         B    51    				call os_new_line
001DEA AF                  B    52    				xor a
001DEB C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001DEC DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001DEF FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001DF3 28 04               B    73    			jr z,z80_list					; T
001DF5 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001DF9                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001DF9 FE40                B    79    			cp 40h
001DFB 20 0A               B    80    			jr nz,not_sis
001DFD FDCB00B6            B    81    			res il_prefix,(iy)
001E01 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E05 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E07 FE49                B    85    not_sis		cp 49h
001E09 20 0A               B    86    			jr nz,not_lis
001E0B FDCB00B6            B    87    			res il_prefix,(iy)
001E0F FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E13 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E15 FE52                B    91    not_lis		cp 52h
001E17 20 0A               B    92    			jr nz,not_sil
001E19 FDCB00F6            B    93    			set il_prefix,(iy)
001E1D FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E21 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E23 FE5B                B    97    not_sil		cp 5bh
001E25 20 11               B    98    			jr nz,not_adl_prefix_byte
001E27 FDCB00F6            B    99    			set il_prefix,(iy)
001E2B FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E2F FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E33 DD23                B   103    			inc ix
001E35 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E38                     B   108    not_adl_prefix_byte			
                           B   109    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E38 FECB                B   110    			cp 0cbh								001E3A 20 08               B   111    			jr nz,not_cb
001E3C FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E40 DD23                B   113    			inc ix
001E42 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E44 FEED                B   116    not_cb		cp 0edh
001E46 20 08               B   117    			jr nz,not_ed
001E48 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E4C DD23                B   119    			inc ix
001E4E 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E50 FEDD                B   122    not_ed		cp 0ddh
001E52 20 18               B   123    			jr nz,not_dd
001E54 CD 87 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E58 28 92               B   125    			jr z,dis_instr						001E5A FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E5E FECB                B   127    xdcb_query	cp 0cbh								001E60 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E62 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E66 DD23                B   130    			inc ix								001E68 DD23                B   131    			inc ix								001E6A 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E6C FEFD                B   134    not_dd		cp 0fdh
001E6E 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E70 CD 87 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E74 CA EC 1D 00         B   137    			jr z,dis_instr	
001E78 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E7C 18 E0               B   139    			jr xdcb_query
                           B   140    
001E7E                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E7E DD7E00              B   145    			ld a,(ix)	
001E81 E6C0                B   146    			and 11000000b			; seperate 
001E83 07                  B   147    			rlca
001E84 07                  B   148    			rlca
001E85 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001E88 DD7E00              B   151    			ld a,(ix)
001E8B E638                B   152    			and 00111000b
001E8D CB3F                B   153    			srl a
001E8F CB3F                B   154    			srl a
001E91 CB3F                B   155    			srl a	
001E93 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001E96 DD7E00              B   158    			ld a,(ix)
001E99 E607                B   159    			and 00000111b
001E9B FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E9E DD7E00              B   162    			ld a,(ix)
001EA1 E630                B   163    			and 00110000b
001EA3 CB3F                B   164    			srl a
001EA5 CB3F                B   165    			srl a
001EA7 CB3F                B   166    			srl a
001EA9 CB3F                B   167    			srl a
001EAB FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001EAE DD7E00              B   170    			ld a,(ix)
001EB1 E608                B   171    			and 00001000b
001EB3 CB3F                B   172    			srl a
001EB5 CB3F                B   173    			srl a
001EB7 CB3F                B   174    			srl a
001EB9 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001EBC CD 95 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001EC0 78                  B   181    index_table	ld a,b							; a
001EC1 B7                  B   182    			or a
001EC2 28 07               B   183    			jr z,parse_instr				; m
001EC4 CB7E                B   184    d_filp		bit 7,(hl)						; w
001EC6 23                  B   185    			inc hl							; o
001EC7 28 FB               B   186    			jr z,d_filp					
001EC9 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001ECB FD21 63 23 00       B   190    parse_instr	ld iy,opcode_vars
001ED0 01000000            B   191    			ld bc,0
001ED4 7E                  B   192    			ld a,(hl)						;ge
001ED5 FE80                B   193    			cp 80h
001ED7 C8                  B   194    			ret z
001ED8 E67F                B   195    			and 7fh
                           B   196    			
001EDA FE26                B   197    			cp '&'							;sy
001EDC 20 28               B   198    			jr nz,not_adlsym
001EDE FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001EE2 CA 70 20 00         B   200    			jr z,next_opcode_ascii_char
001EE6 0600                B   201    			ld b,0
001EE8 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001EEC 28 02               B   203    			jr z,naplsb
001EEE CBC0                B   204    			set 0,b
001EF0 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001EF4 28 02               B   206    			jr z,napmsb
001EF6 CBC8                B   207    			set 1,b
001EF8 E5                  B   208    napmsb		push hl
001EF9 21 C2 28 00         B   209    			ld hl,adl_prefix_list
001EFD CD C0 1E 00         B   210    			call index_table				; r
001F01 E1                  B   211    			pop hl
001F02 C3 70 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F06 FE5E                B   214    not_adlsym	cp '^'							;sy
001F08 20 0D               B   215    			jr nz,d_not_imm8
001F0A DD23                B   216    			inc ix							;th
001F0C DD7E00              B   217    			ld a,(ix)
001F0F CD 28 23 00         B   218    			call show_hex_byte
001F13 C3 70 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F17 FE21                B   221    d_not_imm8	cp '!'							;sy
001F19 20 26               B   222    			jr nz,d_not_imm16					001F1B 11020000            B   223    			ld de,2
001F1F FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F23 28 08               B   225    			jr z,imm16
001F25 13                  B   226    			inc de
001F26 DD7E03              B   227    			ld a,(ix+3)
001F29 CD 28 23 00         B   228    			call show_hex_byte
001F2D DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F30 CD 28 23 00         B   230    			call show_hex_byte			
001F34 DD7E01              B   231    			ld a,(ix+1)						;th
001F37 CD 28 23 00         B   232    			call show_hex_byte
001F3B DD19                B   233    			add ix,de						;ad
001F3D C3 70 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F41 FE2F                B   236    d_not_imm16	cp '/'							;sy
001F43 20 36               B   237    			jr nz,d_not_sb
001F45 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F49 28 05               B   239    			jr z,norm_dbyte
001F4B DD7EFF              B   240    			ld a,(ix-1)						;if
001F4E 18 05               B   241    			jr xdcb_dbyte
001F50 DD23                B   242    norm_dbyte	inc ix
001F52 DD7E00              B   243    			ld a,(ix)						;th
001F55 CB7F                B   244    xdcb_dbyte	bit 7,a
001F57 20 10               B   245    			jr nz,d_sbin					;sh
001F59 F5                  B   246    			push af
001F5A 3E2B                B   247    			ld a,'+'
001F5C CD 39 23 00         B   248    			call show_ascii_char
001F60 F1                  B   249    			pop af
001F61 CD 28 23 00         B   250    			call show_hex_byte
001F65 C3 70 20 00         B   251    			jp next_opcode_ascii_char
001F69 F5                  B   252    d_sbin		push af
001F6A 3E2D                B   253    			ld a,'-'
001F6C CD 39 23 00         B   254    			call show_ascii_char
001F70 F1                  B   255    			pop af
001F71 ED44                B   256    			neg
001F73 CD 28 23 00         B   257    			call show_hex_byte
001F77 C3 70 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F7B FE64                B   260    d_not_sb	cp 'd'							;sy
001F7D 20 1E               B   261    			jr nz,d_not_pcdip
001F7F DD23                B   262    			inc ix
001F81 01000000            B   263    			ld bc,0
001F85 DD7E00              B   264    			ld a,(ix)
001F88 CB7F                B   265    			bit 7,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F8A 28 01               B   266    			jr z,d_spcd_pos
001F8C 0B                  B   267    			dec bc
001F8D 4F                  B   268    d_spcd_pos	ld c,a
001F8E 03                  B   269    			inc bc
001F8F DDE5                B   270    			push ix
001F91 DD09                B   271    			add ix,bc
001F93 CD 45 23 00         B   272    			call show_ix
001F97 DDE1                B   273    			pop ix
001F99 C3 70 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001F9D FE3E                B   276    d_not_pcdip	cp '>'							;sy
001F9F 20 16               B   277    			jr nz,d_not_sdig
001FA1 23                  B   278    			inc hl							;th
001FA2 01000000            B   279    			ld bc,0
001FA6 4E                  B   280    			ld c,(hl)
001FA7 FD21 63 23 00       B   281    			ld iy,opcode_vars
001FAC FD09                B   282    			add iy,bc
001FAE FD7E00              B   283    			ld a,(iy)						;a 
001FB1 C630                B   284    			add a,30h						;co
001FB3 C3 6C 20 00         B   285    			jp d_output_char
                           B   286    
001FB7 FE5F                B   287    d_not_sdig	cp '_'
001FB9 20 12               B   288    			jr nz,d_nhlsubst				; s
001FBB E5                  B   289    			push hl
001FBC 21 9A 28 00         B   290    			ld hl,hl_subs
001FC0 CD 78 20 00         B   291    hl_subst	call prefix_to_offset
001FC4 CD C0 1E 00         B   292    			call index_table				; r
001FC8 E1                  B   293    			pop hl
001FC9 C3 70 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FCD FE7C                B   296    d_nhlsubst	cp '|'
001FCF 20 07               B   297    			jr nz,d_noinvhls
001FD1 E5                  B   298    			push hl
001FD2 21 A0 28 00         B   299    			ld hl,inv_hl_subs
001FD6 18 E8               B   300    			jr hl_subst
                           B   301    			
001FD8 FE68                B   302    d_noinvhls	cp 'h'							;sy
001FDA 20 07               B   303    			jr nz,d_nhsubst
001FDC E5                  B   304    			push hl
001FDD 21 A6 28 00         B   305    			ld hl,h_subs
001FE1 18 DD               B   306    			jr hl_subst
                           B   307    			
001FE3 FE6C                B   308    d_nhsubst	cp 'l'							;sy
001FE5 20 07               B   309    			jr nz,d_nlsubst
001FE7 E5                  B   310    			push hl
001FE8 21 AD 28 00         B   311    			ld hl,l_subs
001FEC 18 D2               B   312    			jr hl_subst
                           B   313    			
001FEE FE24                B   314    d_nlsubst	cp '$'
001FF0 20 07               B   315    			jr nz,d_nihlsubst				; s
001FF2 E5                  B   316    			push hl
001FF3 21 B4 28 00         B   317    			ld hl,ind_hl_subs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FF7 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
001FF9                     B   321    d_nihlsubst	
                           B   322    
001FF9 FE7E                B   323    			cp '~'							; s
001FFB 20 1F               B   324    			jr nz,ntable_r
001FFD 11 EF 27 00         B   325    			ld de,table_r
002001 23                  B   326    do_table 	inc hl
002002 01000000            B   327    			ld bc,0							; t
002006 4E                  B   328    			ld c,(hl)
002007 FD21 63 23 00       B   329    			ld iy,opcode_vars
00200C FD09                B   330    			add iy,bc
00200E FD4600              B   331    			ld b,(iy)						;in
002011 E5                  B   332    			push hl
002012 EB                  B   333    			ex de,hl
002013 CD C0 1E 00         B   334    			call index_table				; r
002017 E1                  B   335    			pop hl
002018 C3 70 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
00201C 11 FA 27 00         B   338    ntable_r	ld de,table_r2					; s
002020 FE3D                B   339    			cp '='
002022 28 DD               B   340    			jr z,do_table
                           B   341    			
002024 11 05 28 00         B   342    			ld de,table_rp					; s
002028 FE40                B   343    			cp '@'
00202A 28 D5               B   344    			jr z,do_table 
                           B   345    			
00202C 11 0C 28 00         B   346    			ld de,table_rp2					; s
002030 FE2A                B   347    			cp '*'
002032 28 CD               B   348    			jr z,do_table
                           B   349    			
002034 11 72 28 00         B   350    			ld de,table_rp3					; s
002038 FE3C                B   351    			cp '<'
00203A 28 C5               B   352    			jr z,do_table
                           B   353    			
00203C 11 7A 28 00         B   354    			ld de,table_rp4					; s
002040 FE7D                B   355    			cp '}'
002042 28 BD               B   356    			jr z,do_table
                           B   357    			
002044 11 14 28 00         B   358    			ld de,table_cc					; s
002048 FE23                B   359    			cp '#'
00204A 28 B5               B   360    			jr z,do_table 
                           B   361    			
00204C 11 20 28 00         B   362    			ld de,table_alu					; s
002050 FE3A                B   363    			cp ':'
002052 28 AD               B   364    			jr z,do_table 
                           B   365    			
002054 11 4C 28 00         B   366    			ld de,table_rot					; s
002058 FE25                B   367    			cp '%'
00205A 28 A5               B   368    			jr z,do_table 
                           B   369    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00205C 11 8A 28 00         B   370    			ld de,table_rst					; s
002060 FE3B                B   371    			cp ';'
002062 28 9D               B   372    			jr z,do_table 
                           B   373    
002064 11 82 28 00         B   374    			ld de,table_rp5					; s
002068 FE7B                B   375    			cp '{'
00206A 28 95               B   376    			jr z,do_table 
                           B   377    
00206C                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
00206C                     B   382    d_output_char
                           B   383    
00206C CD 39 23 00         B   384    			call show_ascii_char
                           B   385    
002070                     B   386    next_opcode_ascii_char
                           B   387    
002070 CB7E                B   388    			bit 7,(hl)						;if
002072 C0                  B   389    			ret nz
002073 23                  B   390    			inc hl
002074 C3 CB 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
002078                     B   397    prefix_to_offset
                           B   398    
002078 0602                B   399    			ld b,2							;se
00207A FDCB005E            B   400    			bit sub_iy_prefix,(iy)
00207E C0                  B   401    			ret nz
00207F 05                  B   402    			dec b
002080 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
002084 C0                  B   404    			ret nz
002085 05                  B   405    			dec b
002086 C9                  B   406    			ret
                           B   407    			
                           B   408    			
002087                     B   409    check_nxt_byte_prefix			
                           B   410    
002087 DD23                B   411    			inc ix
002089 DD7E00              B   412    			ld a,(ix)
00208C FEDD                B   413    			cp 0ddh
00208E C8                  B   414    			ret z
00208F FEED                B   415    			cp 0edh
002091 C8                  B   416    			ret z
002092 FEFD                B   417    			cp 0fdh
002094 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
002095                     B   428    find_instruction_ascii
                           B   429    
002095 0600                B   430    			ld b,0						; defau
                           B   431    
002097 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
00209B 28 12               B   433    			jr z,not_ddcb_fdcb_inst
00209D 21 C9 27 00         B   434    			ld hl,ddcb_fdcb_z6		
0020A1 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020A4 FD7E 03             B   436    			ld a,(iy+var_z)
0020A7 FE06                B   437    			cp 6
0020A9 C8                  B   438    			ret z
0020AA 21 91 27 00         B   439    			ld hl,ddcb_fdcb_zn6					0020AE C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
0020AF                     B   444    not_ddcb_fdcb_inst
                           B   445    
0020AF FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
0020B3 28 08               B   447    			jr z,not_cb_inst
0020B5 21 19 25 00         B   448    			ld hl,cb_group		
0020B9 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020BC C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
0020BD                     B   454    not_cb_inst
                           B   455    
0020BD FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020C1 CA E2 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020C5 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020C8 B7                  B   460    			or a
0020C9 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020CB FD7E 03             B   464    			ld a,(iy+var_z)				
0020CE B7                  B   465    			or a
0020CF 20 0D               B   466    			jr nz,notedx0z0
0020D1 21 40 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020D5 FD7E 02             B   468    			ld a,(iy+var_y)
0020D8 FE06                B   469    			cp 6
0020DA C0                  B   470    			ret nz
0020DB 0601                B   471    			ld b,1
0020DD C9                  B   472    			ret
                           B   473    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020DE FE01                B   474    notedx0z0	cp 1
0020E0 20 0D               B   475    			jr nz,notedx0z1
0020E2 21 51 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
0020E6 FD7E 02             B   477    			ld a,(iy+var_y)
0020E9 FE06                B   478    			cp 6
0020EB C0                  B   479    			ret nz
0020EC 0601                B   480    			ld b,1
0020EE C9                  B   481    			ret
                           B   482    
0020EF FE02                B   483    notedx0z1	cp 2
0020F1 20 05               B   484    			jr nz,notedx0z2
0020F3 21 67 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
0020F7 C9                  B   486    			ret
                           B   487    
0020F8 FE03                B   488    notedx0z2	cp 3
0020FA 20 05               B   489    			jr nz,notedx0z3
0020FC 21 73 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002100 C9                  B   491    			ret
                           B   492    			
002101 FE04                B   493    notedx0z3	cp 4
002103 20 05               B   494    			jr nz,notedx0z4
002105 21 7F 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002109 C9                  B   496    			ret
                           B   497    
00210A FE06                B   498    notedx0z4	cp 6
00210C 20 05               B   499    			jr nz,notedx0z6				;x0 / z
00210E 21 89 25 00         B   500    			ld hl,ed_x0_z6
002112 C9                  B   501    			ret
                           B   502    
002113 FE07                B   503    notedx0z6	cp 7
002115 C2 EC 27 00         B   504    			jr nz,bad_opcode			;x0 / z
002119 21 94 25 00         B   505    			ld hl,ed_x0_z7
00211D FD46 05             B   506    			ld b,(iy+var_q)
002120 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002121 FE01                B   511    notedx0		cp 1	
002123 20 68               B   512    			jr nz,ed_xn1
                           B   513    
002125 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002128 B7                  B   515    			or a
002129 20 0D               B   516    			jr nz,ed_x1_zn0
00212B 21 A9 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
00212F FD7E 02             B   518    			ld a,(iy+var_y)
002132 FE06                B   519    			cp 6
002134 C0                  B   520    			ret nz
002135 0601                B   521    			ld b,1
002137 C9                  B   522    			ret
                           B   523    			
002138 FE01                B   524    ed_x1_zn0	cp 1
00213A 20 0D               B   525    			jr nz,ed_x1_zn1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00213C 21 B9 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002140 FD7E 02             B   527    			ld a,(iy+var_y)
002143 FE06                B   528    			cp 6
002145 C0                  B   529    			ret nz
002146 0601                B   530    			ld b,1
002148 C9                  B   531    			ret
                           B   532    		
002149 FE02                B   533    ed_x1_zn1	cp 2
00214B 20 08               B   534    			jr nz,ed_x1_zn2					;z 
00214D 21 CE 25 00         B   535    			ld hl,ed_x1_z2	
002151 FD46 05             B   536    			ld b,(iy+var_q)
002154 C9                  B   537    			ret
                           B   538    
002155 FE03                B   539    ed_x1_zn2	cp 3
002157 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002159 21 E4 25 00         B   541    			ld hl,ed_x1_z3	
00215D FD46 05             B   542    			ld b,(iy+var_q)
002160 C9                  B   543    			ret
                           B   544    			
002161 FE04                B   545    ed_x1_zn3	cp 4							;z 
002163 20 08               B   546    			jr nz,ed_x1_zn4
002165 21 F9 25 00         B   547    			ld hl,ed_x1_z4
002169 FD46 02             B   548    			ld b,(iy+var_y)
00216C C9                  B   549    			ret
                           B   550    			
00216D FE05                B   551    ed_x1_zn4	cp 5
00216F 20 08               B   552    			jr nz,ed_x1_zn5
002171 21 31 26 00         B   553    			ld hl,ed_x1_z5					;z 
002175 FD46 02             B   554    			ld b,(iy+var_y)
002178 C9                  B   555    			ret
                           B   556    			
002179 FE06                B   557    ed_x1_zn5	cp 6
00217B 20 08               B   558    			jr nz,ed_x1_zn6					;z=
00217D 21 60 26 00         B   559    			ld hl,ed_x1_z6
002181 FD46 02             B   560    			ld b,(iy+var_y)
002184 C9                  B   561    			ret
                           B   562    			
002185 21 85 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
002189 FD46 02             B   564    			ld b,(iy+var_y)
00218C C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
00218D FE02                B   569    ed_xn1		cp 2
00218F 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
002191 FD46 02             B   572    			ld b,(iy+var_y)
002194 FD7E 03             B   573    			ld a,(iy+var_z)
002197 B7                  B   574    			or a
002198 20 05               B   575    			jr nz,edx2zn0
00219A 21 A9 26 00         B   576    			ld hl,ed_x2_z0					;x=
00219E C9                  B   577    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   578    
00219F FE01                B   579    edx2zn0		cp 1
0021A1 20 05               B   580    			jr nz,edx2zn1
0021A3 21 C3 26 00         B   581    			ld hl,ed_x2_z1					;x=
0021A7 C9                  B   582    			ret
                           B   583    
0021A8 FE02                B   584    edx2zn1		cp 2
0021AA 20 05               B   585    			jr nz,edx2zn2
0021AC 21 DD 26 00         B   586    			ld hl,ed_x2_z2					;x=
0021B0 C9                  B   587    			ret
                           B   588    
0021B1 FE03                B   589    edx2zn2		cp 3
0021B3 20 05               B   590    			jr nz,edx2zn3
0021B5 21 0D 27 00         B   591    			ld hl,ed_x2_z3					;x=
0021B9 C9                  B   592    			ret
                           B   593    
0021BA 21 3F 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
0021BE C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021BF FE03                B   599    ed_xn2		cp 3
0021C1 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021C3 FD46 02             B   602    			ld b,(iy+var_y)
0021C6 FD7E 03             B   603    			ld a,(iy+var_z)
0021C9 FE02                B   604    			cp 2
0021CB 20 05               B   605    			jr nz,edx3zn2
0021CD 21 75 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021D1 C9                  B   607    			ret
0021D2 FE03                B   608    edx3zn2		cp 3
0021D4 20 05               B   609    			jr nz,edx3zn3
0021D6 21 83 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021DA C9                  B   611    			ret
                           B   612    
0021DB                     B   613    edx3zn3
                           B   614    
0021DB                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
0021DB                     B   619    invalid_op
0021DB 21 EC 27 00         B   620    			ld hl,bad_opcode				; x
0021DF 0600                B   621    			ld b,0
0021E1 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021E2 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
0021E5 B7                  B   629    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021E6 C2 7E 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
0021EA FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
0021ED B7                  B   636    			or a
0021EE 20 14               B   637    			jr nz,x0_z_not_zero
0021F0 21 6B 23 00         B   638    			ld hl,x0_z0
0021F4 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
0021F7 47                  B   640    			ld b,a
0021F8 D604                B   641    			sub 4
0021FA FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
0021FD 78                  B   643    			ld a,b
0021FE FE04                B   644    			cp 4
002200 D8                  B   645    			ret c
002201 0604                B   646    			ld b,4						;if y >
002203 C9                  B   647    			ret
                           B   648    			
002204                     B   649    x0_z_not_zero		
                           B   650    			
002204 FE01                B   651    			cp 1
002206 20 1A               B   652    			jr nz,x0_z_not_one
002208 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
00220B FE06                B   654    			cp 6
00220D 20 0B               B   655    			jr nz,x0z1yn6
00220F CD 1E 23 00         B   656    			call test_ixiy_prefix		;if y=6
002213 28 05               B   657    			jr z,x0z1yn6				;altern
002215 21 9E 23 00         B   658    			ld hl,x0_z1_y6
002219 C9                  B   659    			ret
                           B   660    
00221A 21 8B 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
00221E FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002221 C9                  B   663    			ret 
                           B   664    			
002222                     B   665    x0_z_not_one
                           B   666    
002222 FE02                B   667    			cp 2
002224 20 08               B   668    			jr nz,x0_z_not_two
002226 21 A6 23 00         B   669    			ld hl,x0_z2
00222A FD46 02             B   670    			ld b,(iy+var_y)				;y is t
00222D C9                  B   671    			ret
                           B   672    			
00222E                     B   673    x0_z_not_two
                           B   674    
00222E FE03                B   675    			cp 3
002230 20 08               B   676    			jr nz,x0_z_not_three
002232 21 F2 23 00         B   677    			ld hl,x0_z3
002236 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002239 C9                  B   679    			ret
                           B   680    			
00223A                     B   681    x0_z_not_three
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   682    
00223A FE04                B   683    			cp 4
00223C 20 05               B   684    			jr nz,x0_z_not_four
00223E 21 02 24 00         B   685    			ld hl,x0_z4					;no ini
002242 C9                  B   686    			ret			
                           B   687    			
002243                     B   688    x0_z_not_four
                           B   689    
002243 FE05                B   690    			cp 5
002245 20 05               B   691    			jr nz,x0_z_not_five
002247 21 0A 24 00         B   692    			ld hl,x0_z5					;no ini
00224B C9                  B   693    			ret				
                           B   694    			
00224C                     B   695    x0_z_not_five
                           B   696    
00224C FE06                B   697    			cp 6
00224E 20 1A               B   698    			jr nz,x0_z_not_six
002250 21 12 24 00         B   699    			ld hl,x0_z6					;normal
002254 FD7E 02             B   700    			ld a,(iy+var_y)
002257 FE07                B   701    			cp 7
002259 C0                  B   702    			ret nz
00225A FDCB0056            B   703    			bit sub_ix_prefix,(iy)
00225E 20 05               B   704    			jr nz,altx0z6
002260 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
002264 C8                  B   706    			ret z	
002265 21 1B 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002269 C9                  B   708    			ret
                           B   709    
                           B   710    
00226A                     B   711    x0_z_not_six
                           B   712    			
00226A 21 23 24 00         B   713    			ld hl,x0_z7					;x=0, z
00226E FD46 02             B   714    			ld b,(iy+var_y)				;y is n
002271 CD 1E 23 00         B   715    			call test_ixiy_prefix
002275 C8                  B   716    			ret z
002276 21 3D 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
00227A FD46 05             B   718    			ld b,(iy+var_q)				;this i
00227D C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
00227E FE01                B   723    x_not_zero	cp 1						; is x 
002280 20 32               B   724    			jr nz,x_not_one
                           B   725    			
002282 21 4F 24 00         B   726    			ld hl,x1_table				; x=1
002286 CD 1E 23 00         B   727    			call test_ixiy_prefix
00228A 20 11               B   728    			jr nz,pref_x1
00228C FD7E 02             B   729    			ld a,(iy+var_y)
00228F FE06                B   730    			cp 6
002291 C0                  B   731    			ret nz
002292 FD7E 03             B   732    			ld a,(iy+var_z)
002295 FE06                B   733    			cp 6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002297 C0                  B   734    			ret nz
002298 21 6D 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
00229C C9                  B   736    			ret
                           B   737    
00229D FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022A0 FE06                B   739    			cp 6
0022A2 20 05               B   740    			jr nz,x1yn6
0022A4 21 59 24 00         B   741    			ld hl,x1_y6
0022A8 C9                  B   742    			ret
                           B   743    			
0022A9 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
0022AC FE06                B   745    			cp 6
0022AE C0                  B   746    			ret nz
0022AF 21 63 24 00         B   747    			ld hl,x1_z6
0022B3 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
0022B4 FE02                B   752    x_not_one	cp 2						; is x 
0022B6 20 05               B   753    			jr nz,x_not_two
0022B8 21 71 24 00         B   754    			ld hl,x2_table				; no in
0022BC C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022BD FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
0022C0 B7                  B   760    			or a
0022C1 20 05               B   761    			jr nz,x3_z_not_zero
0022C3 21 76 24 00         B   762    			ld hl,x3_z0					; no in
0022C7 C9                  B   763    			ret
                           B   764    						
0022C8                     B   765    x3_z_not_zero
                           B   766    
0022C8 FE01                B   767    			cp 1
0022CA 20 11               B   768    			jr nz,x3_z_not_one
0022CC 21 7E 24 00         B   769    			ld hl,x3_z1_q0
0022D0 FD7E 05             B   770    			ld a,(iy+var_q)
0022D3 B7                  B   771    			or a
0022D4 C8                  B   772    			ret z						; no in
0022D5 21 86 24 00         B   773    			ld hl,x3_z1_q1
0022D9 FD46 04             B   774    			ld b,(iy+var_p)				; index
0022DC C9                  B   775    			ret
                           B   776    
0022DD                     B   777    x3_z_not_one
                           B   778    
0022DD FE02                B   779    			cp 2
0022DF 20 05               B   780    			jr nz,x3_z_not_two
0022E1 21 9D 24 00         B   781    			ld hl,x3_z2					;no ini
0022E5 C9                  B   782    			ret
                           B   783    
0022E6                     B   784    x3_z_not_two
                           B   785    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022E6 FE03                B   786    			cp 3
0022E8 20 08               B   787    			jr nz,x3_z_not_three
0022EA 21 A6 24 00         B   788    			ld hl,x3_z3
0022EE FD46 02             B   789    			ld b,(iy+var_y)				;index 
0022F1 C9                  B   790    			ret
                           B   791    
0022F2                     B   792    x3_z_not_three
                           B   793    
0022F2 FE04                B   794    			cp 4
0022F4 20 05               B   795    			jr nz,x3_z_not_four
0022F6 21 DB 24 00         B   796    			ld hl,x3_z4				;no initial
0022FA C9                  B   797    			ret						
                           B   798    
                           B   799    
0022FB                     B   800    x3_z_not_four
                           B   801    
0022FB FE05                B   802    			cp 5
0022FD 20 11               B   803    			jr nz,x3_z_not_five
0022FF 21 E6 24 00         B   804    			ld hl,x3_z5_q0
002303 FD7E 05             B   805    			ld a,(iy+var_q)
002306 B7                  B   806    			or a
002307 C8                  B   807    			ret z						;no ind
002308 21 EF 24 00         B   808    			ld hl,x3_z5_q1
00230C FD46 04             B   809    			ld b,(iy+var_p)				;else i
00230F C9                  B   810    			ret
                           B   811    
002310                     B   812    x3_z_not_five
                           B   813    
002310 FE06                B   814    			cp 6
002312 20 05               B   815    			jr nz,x3_z_not_six
002314 21 0D 25 00         B   816    			ld hl,x3_z6					;no ind
002318 C9                  B   817    			ret
                           B   818    
002319                     B   819    x3_z_not_six
                           B   820    
002319 21 11 25 00         B   821    			ld hl,x3_z7					;x=3, z
00231D C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
00231E                     B   827    test_ixiy_prefix
                           B   828    
00231E FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002322 C0                  B   830    			ret nz
002323 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
002327 C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002328                     B   837    show_hex_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   838    
002328 E5                  B   839    			push hl
002329 21 D5 28 00         B   840    			ld hl,output_byte_txt
00232D E5                  B   841    			push hl
00232E CD 63 10 00         B   842    			call hexbyte_to_ascii
002332 E1                  B   843    			pop hl
002333 CD 20 0F 00         B   844    			call os_print_string
002337 E1                  B   845    			pop hl
002338 C9                  B   846    			ret
                           B   847    			
                           B   848    
002339                     B   849    show_ascii_char
                           B   850    
002339 E5                  B   851    			push hl
00233A 21 D8 28 00         B   852    			ld hl,output_char_txt
00233E 77                  B   853    			ld (hl),a
00233F CD 20 0F 00         B   854    			call os_print_string
002343 E1                  B   855    			pop hl
002344 C9                  B   856    			ret
                           B   857    		
                           B   858    		
002345 DD22 D2 28 00       B   859    show_ix		ld (d_work_address),ix
00234A 3A D4 28 00         B   860    			ld a,(d_work_address+2)
00234E CD 28 23 00         B   861    			call show_hex_byte
002352 3A D3 28 00         B   862    			ld a,(d_work_address+1)
002356 CD 28 23 00         B   863    			call show_hex_byte
00235A 3A D2 28 00         B   864    			ld a,(d_work_address)
00235E CD 28 23 00         B   865    			call show_hex_byte
002362 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
002363                     B   896    opcode_vars
                           B   897    
002363 00                  B   898    prefix_bits_loc	db 0	
002364 00                  B   899    var_x_loc		db 0	
002365 00                  B   900    var_y_loc		db 0	
002366 00                  B   901    var_z_loc		db 0	
002367 00                  B   902    var_p_loc		db 0	
002368 00                  B   903    var_q_loc		db 0
002369 00                  B   904    var_calc_loc	db 0
00236A 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
00236B 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
00236E 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
002376 A7 
002377 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
00237E 4A522064 80         B   922    			db 'JR ','d',80h			; y3
002383 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
00238B 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
002391 2C2180 
002394 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
00239C 04 80 
00239E 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023A6 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
0023AE 2CC1 
0023B0 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023B8 43A9 
0023BA 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023C2 2CC1 
0023C4 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023CC 45A9 
0023CE 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023D6 DF 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0023D7 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023DF A9 
0023E0 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
0023E8 C1 
0023E9 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
0023F1 A9 
                           B   937    
0023F2 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
0023F9 80 
0023FA 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002401 80 
                           B   940    			
002402 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002409 80 
                           B   942    
00240A 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002411 80 
                           B   944    			
002412 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002418 2C5E80 
00241B 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
002423 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
002427 525243C1            B   949    			db 'RRC','A'+80h		;y=1
00242B 524CC1              B   950    			db 'RL','A'+80h			;y=2
00242E 5252C1              B   951    			db 'RR','A'+80h			;y=3
002431 4441C1              B   952    			db 'DA','A'+80h			;y=4
002434 4350CC              B   953    			db 'CP','L'+80h			;y=5
002437 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
00243A 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
00243D 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
002443 2C2480 
002446 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
00244E 80 
                           B   959    		
                           B   960    
                           B   961    
00244F 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
002455 2C7E 03 80 
002459 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		00245F 2C3D 03 80 
002463 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002469 2C7E 03 80 
                           B   965    
00246D 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
002471 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   973    		
002476 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
00247D 80 
                           B   975    
00247E 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
002485 80 
002486 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
00248B 4558D8              B   978    			db 'EX','X'+80h			;p=1
00248E 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
002494 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
00249C 80 
                           B   981    
00249D 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024A3 2C2180 
                           B   983    
0024A6 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
0024AC 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
0024B3 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024BB C1 
0024BC 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024C4 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024CC 2C5F80 
0024CF 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024D7 44C9                B   990    			db 'D','I'+80h			;y = 6
0024D9 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
0024DB 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024E3 2C2180 
                           B   994    
0024E6 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
0024EE 80 
0024EF 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
0024F7 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
0024FE 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
002505 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
00250D 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002511 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002518 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002519 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		00251F 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002526 2C7E 03 80 
00252A 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002531 2C7E 03 80 
002535 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
00253C 2C7E 03 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002540 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
002546 2C285EA9 
00254A 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
002551 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002559 2C7E 02 80 
00255D 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			002565 5FA9 
                           B  1022    
002567 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	00256E 2C49582F 80 
002573 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
00257A 2C49592F 80 
00257F 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
002587 02 80 
                           B  1026    
002589 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
002591 7D 04 80 
                           B  1028    
002594 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	00259A 2C285FA9 
00259E 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025A6 3C 04 80 
                           B  1031    
0025A9 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
0025AE 2C284243 A9 
0025B3 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
0025B9 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025C1 2C7E 02 80 
0025C5 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025CD B0 
                           B  1037    
0025CE 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025D6 40 04 80 
0025D9 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025E1 40 04 80 
                           B  1040    
0025E4 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		0025EC 40 04 80 
0025EF 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	0025F5 2C2821A9 
                           B  1043    
0025F9 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
0025FC 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
002602 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			00260A 49592F80 
00260E 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002614 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
00261C 80 
00261D 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
002623 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
00262B 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002631 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
002637 52455449 2680       B  1054    				db 'RETI&',80h				;y=
00263D 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
002645 49582F80 
002649 BF                  B  1056    				db '?'+80h					;y=
00264A 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
002652 80 
002653 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
00265A BF                  B  1059    				db '?'+80h					;y=
00265B 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
002660 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
002664 BF                  B  1064    				db '?'+80h					;y=
002665 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002669 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
00266D 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
002675 80 
002676 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
00267D 534CD0              B  1069    				db 'SL','P'+80h				;y=
002680 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
002685 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
00268B 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
002691 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
002697 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
00269D 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026A0 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026A3 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026A6 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
0026A9 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026AD 4C444926 80         B  1083    				db 'LDI&',80h					0026B2 4C444426 80         B  1084    				db 'LDD&',80h					0026B7 4C444952 2680       B  1085    				db 'LDIR&',80h					0026BD 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026C3 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026C7 43504926 80         B  1089    				db 'CPI&',80h					0026CC 43504426 80         B  1090    				db 'CPD&',80h					0026D1 43504952 2680       B  1091    				db 'CPIR&',80h					0026D7 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026DD 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026E3 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0026E9 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
0026F0 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
0026F7 494E4926 80         B  1098    				db 'INI&',80h		; y4
0026FC 494E4426 80         B  1099    				db 'IND&',80h		; y5
002701 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
002707 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
00270D 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
002713 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002719 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002720 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
002727 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
00272D 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
002733 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002739 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
00273F 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
002745 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
00274B 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
002752 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002759 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
002760 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
002767 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
00276E 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
002775 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
00277C 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
002783 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
00278A 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
002791 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
002797 2C25 02 202480 
00279D 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027A4 2C2480 
0027A7 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
0027AD 2C524553 26203E 02 
0027B5 2C2480 
0027B8 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027BE 2C534554 26203E 02 
0027C6 2C2480 
                           B  1137    
0027C9 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027CE 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027D5 2C2480 
0027D8 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027DF 2C2480 
0027E2 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		0027E9 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
0027EC 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
0027EF C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027F7 2480C1 
                           B  1151    
0027FA C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002802 2480C1 
                           B  1153    
002805 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
00280C 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002814 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
00281C 50C5D0CD 
                           B  1159    	
002820 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002828 44432620 41AC5355 
002830 4226A053 42432041 
002838 26AC 
00283A 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
002842 26A04F52 26A04350 
00284A 26A0 
                           B  1162    			
00284C 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
002854 2680524C 26805252 
00285C 2680 
00285E 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
002866 2680534C 4C268053 
00286E 524C2680 
                           B  1165    	
002872 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
00287A 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
002882 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
00288A 30B0                B  1172    table_rst	db '0','0'+80h
00288C 30B8                B  1173    			db '0','8'+80h
00288E 31B0                B  1174    			db '1','0'+80h
002890 31B8                B  1175    			db '1','8'+80h
002892 32B0                B  1176    			db '2','0'+80h
002894 32B8                B  1177    			db '2','8'+80h	
002896 33B0                B  1178    			db '3','0'+80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002898 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
00289A 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028A0 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028A6 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
0028AD CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
0028B4 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028BC A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028C2                     B  1198    adl_prefix_list
                           B  1199    
0028C2 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028CA 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028D2 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028D5 2D2D00              B  1206    output_byte_txt	db "--",0
0028D8 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028DA 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028DD                     B     6    os_cmd_del
                           B     7    	
0028DD CD 79 16 00         B     8    				call os_check_volume_format	
0028E1 C0                  B     9    				ret nz
                           B    10    			
0028E2 CD EA 28 00         B    11    				call filename_or_bust
                           B    12    				
0028E6 C3 E1 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B    16    ;----------------------------------------------
                           B    17    			
0028EA                     B    18    filename_or_bust
                           B    19    			
0028EA 7E                  B    20    				ld a,(hl)					;is
0028EB B7                  B    21    				or a
0028EC C0                  B    22    				ret nz
0028ED E1                  B    23    				pop hl						;ot
0028EE C3 E4 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
0028F2                     B     5    os_cmd_dir
                           B     6    
0028F2 CD 79 16 00         B     7    				call os_check_volume_format	
0028F6 C0                  B     8    				ret nz
                           B     9    				
0028F7 CD D1 29 00         B    10    				call div_line
0028FB CD C4 54 00         B    11    				call fs_get_current_dir_name	0028FF D8                  B    12    				ret c
002900 C0                  B    13    				ret nz
002901 CD 20 0F 00         B    14    				call os_print_string
002905 CD 49 1A 00         B    15    				call fs_get_dir_cluster			002909 7A                  B    16    				ld a,d
00290A B3                  B    17    				or e
00290B 20 08               B    18    				jr nz,dcmdnr
00290D CD B7 51 00         B    19    				call fs_get_volume_label
002911 CD 20 0F 00         B    20    				call os_print_string
002915 CD C0 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002919 CD D1 29 00         B    23    nrootdir		call div_line
00291D CD BC 50 00         B    24    				call fs_goto_first_dir_entry
002921 D8                  B    25    				ret c
002922 20 6F               B    26    				jr nz,os_dlr
002924 AF                  B    27    				xor a
002925 32 C2 62 00         B    28    				ld (os_linecount),a
                           B    29    				
002929 CD D3 50 00         B    30    os_dfllp		call fs_get_dir_entry			00292D D8                  B    31    				ret c
00292E 20 63               B    32    				jr nz,os_dlr					002930 C5                  B    33    				push bc
002931 CD 20 0F 00         B    34    				call os_print_string			002935 CD EB 13 00         B    35    				call os_get_cursor_position		002939 060E                B    36    				ld b,14
00293B CD CB 13 00         B    37    				call os_set_cursor_position	
00293F C1                  B    38    				pop bc
002940 CB40                B    39    				bit 0,b							002942 28 06               B    40    				jr z,os_deif		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002944 21 DE 29 00         B    41    				ld hl,dir_txt					002948 18 32               B    42    				jr os_dpl
                           B    43    				
00294A 21 BB 57 00         B    44    os_deif			ld hl,os_hex_prefix_txt			00294E CD 20 0F 00         B    45    				call os_print_string
002952 ED53 0B 6A 00       B    46    				ld (scratch_pad),de
002957 79                  B    47    				ld a,c
002958 32 0E 6A 00         B    48    				ld (scratch_pad+3),a
00295C 21 2D 63 00         B    49    				ld hl,output_line
002960 E5                  B    50    				push hl
002961 ED5B 0D 6A 00       B    51    				ld de,(scratch_pad+2)
002966 CD 88 10 00         B    52    				call hexword_to_ascii
00296A ED5B 0B 6A 00       B    53    				ld de,(scratch_pad)
00296F CD 88 10 00         B    54    				call hexword_to_ascii
002973 3600                B    55    				ld (hl),0
002975 E1                  B    56    				pop hl
002976 0607                B    57    				ld b,7							002978 CD 40 10 00         B    58    				call os_skip_leading_ascii_zero
00297C CD 20 0F 00         B    59    os_dpl			call os_print_string
002980 CD C0 13 00         B    60    				call os_new_line
                           B    61    				
002984 CD 60 51 00         B    62    				call fs_goto_next_dir_entry
002988 20 09               B    63    				jr nz,os_dlr					00298A CD BE 11 00         B    64    				call os_count_lines
00298E 3E79                B    65    				ld a,'y'
002990 B8                  B    66    				cp b
002991 28 96               B    67    				jr z,os_dfllp
                           B    68    				
002993 CD D1 29 00         B    69    os_dlr			call div_line					002997 CD EF 4A 00         B    70    				call fs_calc_free_space
00299B D8                  B    71    				ret c	
00299C CD AA 29 00         B    72    				call show_hlde_decimal
0029A0 21 E4 29 00         B    73    				ld hl,kb_spare_txt
0029A4 CD 20 0F 00         B    74    				call os_print_string
0029A8 AF                  B    75    				xor a
0029A9 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
0029AA                     B    80    show_hlde_decimal
                           B    81    
0029AA CD 53 12 00         B    82    				call os_hex_to_decimal			0029AE 11070000            B    83    				ld de,7
0029B2 19                  B    84    				add hl,de						0029B3 43                  B    85    				ld b,e
0029B4 11 2D 63 00         B    86    				ld de,output_line
0029B8 D5                  B    87    				push de
0029B9 7E                  B    88    dec2strlp		ld a,(hl)						0029BA B7                  B    89    				or a
0029BB 20 03               B    90    				jr nz,foundlnz
0029BD 2B                  B    91    				dec hl
0029BE 10 F9               B    92    				djnz dec2strlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0029C0 04                  B    93    foundlnz		inc b
0029C1 7E                  B    94    ndecchar		ld a,(hl)						0029C2 C630                B    95    				add a,030h
0029C4 12                  B    96    				ld (de),a
0029C5 13                  B    97    				inc de
0029C6 2B                  B    98    				dec hl
0029C7 10 F8               B    99    				djnz ndecchar
0029C9 AF                  B   100    				xor a
0029CA 12                  B   101    				ld (de),a
0029CB E1                  B   102    				pop hl							0029CC CD 20 0F 00         B   103    				call os_print_string
0029D0 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
0029D1 0E2D                B   108    div_line		ld c,'-'
0029D3 0613                B   109    				ld b,19
0029D5 CD 31 1A 00         B   110    				call os_print_multiple_chars
0029D9 CD C0 13 00         B   111    				call os_new_line
0029DD C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
0029DE 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
0029E4 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
0029EC 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0029EE                     B     5    os_cmd_f			
                           B     6    
0029EE CD 3F 1C 00         B     7    				call get_start_and_end			                           B     8    			
0029F2 CD 68 1C 00         B     9    				call hexword_or_bust			0029F6 CA 04 16 00         B    10    				jp z,os_no_args_error			0029FA 7B                  B    11    				ld a,e
0029FB 32 D9 62 00         B    12    				ld (fillbyte),a
                           B    13    					
0029FF CD 2D 1C 00         B    14    				call test_mem_range
002A03 DA 00 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A07 3A D9 62 00         B    17    				ld a,(fillbyte)
002A0B 77                  B    18    f_floop			ld (hl),a
002A0C EDA1                B    19    				cpi								002A0E EA 0B 2A 00         B    20    				jp pe,f_floop
                           B    21    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002A12 3E20                B    22    				ld a,020h						002A14 B7                  B    23    				or a
002A15 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A16                     B     9    os_cmd_format
                           B    10    
002A16 7E                  B    11    				ld a,(hl)						002A17 B7                  B    12    				or a
002A18 20 04               B    13    				jr nz,fgotargs					002A1A 3E1F                B    14    				ld a,01fh						002A1C B7                  B    15    				or a
002A1D C9                  B    16    				ret
                           B    17    			
002A1E                     B    18    fgotargs	
002A1E 11 25 56 00         B    19    				ld de,fs_sought_filename
002A22 CD 0D 55 00         B    20    				call fs_clear_filename			002A26 E5                  B    21    				push hl							002A27 CD A1 0F 00         B    22    				call os_next_arg
002A2B 20 04               B    23    				jr nz,fgotlab
002A2D 21 5E 2B 00         B    24    				ld hl,default_label
002A31 060B                B    25    fgotlab			ld b,11
002A33 CD 06 12 00         B    26    				call os_copy_ascii_run
002A37 E1                  B    27    				pop hl
                           B    28    				
002A38 3A E4 60 00         B    29    				ld a,(device_count)				002A3C B7                  B    30    				or a
002A3D 28 25               B    31    				jr z,fno_dev
002A3F 47                  B    32    				ld b,a
002A40 0E00                B    33    				ld c,0							002A42 DD21 94 61 00       B    34    				ld ix,host_device_hardware_info
002A47 DD7E00              B    35    fdev_lp			ld a,(ix)						002A4A CD 1B 1A 00         B    36    				call locate_driver_base			002A4E D5                  B    37    				push de
002A4F FDE1                B    38    				pop iy
002A51 ED130C              B    39    				lea de,iy+0ch					002A54 C5                  B    40    				push bc
002A55 0607                B    41    				ld b,7
002A57 CD E7 11 00         B    42    				call os_compare_strings
002A5B C1                  B    43    				pop bc
002A5C 28 0A               B    44    				jr z,format_dev
002A5E ED3220              B    45    				lea ix,ix+20h					002A61 0C                  B    46    				inc c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A62 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002A64 3ED0                B    49    fno_dev			ld a,0d0h						002A66 B7                  B    50    				or a
002A67 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
002A68 C5                  B    58    format_dev		push bc
002A69 CD C0 13 00         B    59    				call os_new_line
002A6D 21 2F 2B 00         B    60    				ld hl,form_dev_warn1
002A71 CD F7 13 00         B    61    				call os_show_packed_text
002A75 C1                  B    62    				pop bc
                           B    63    				
002A76 79                  B    64    				ld a,c							002A77 C630                B    65    				add a,030h
002A79 32 F0 60 00         B    66    				ld (dev_txt+3),a
002A7D 21 ED 60 00         B    67    				ld hl,dev_txt	
002A81 CD 20 0F 00         B    68    				call os_print_string			                           B    69    				
002A85 79                  B    70    				ld a,c
002A86 CD 8F 1A 00         B    71    				call dev_to_driver_lookup		002A8A E5                  B    72    				push hl
002A8B 32 E3 60 00         B    73    				ld (current_driver),a
002A8F CD 02 1A 00         B    74    				call show_dev_driver_name		002A93 DDE1                B    75    				pop ix
002A95 DD1701              B    76    				ld de,(ix+1)
002A98 FD21 D5 62 00       B    77    				ld iy,xrr_temp
002A9D FD1F00              B    78    				ld (iy),de						002AA0 FDCB023E            B    79    				srl (iy+2)
002AA4 FDCB011E            B    80    				rr (iy+1)
002AA8 FDCB001E            B    81    				rr (iy+0)						002AAC FD1700              B    82    				ld de,(iy)						002AAF CD AA 29 00         B    83    				call show_hlde_decimal			002AB3 21 69 2B 00         B    84    				ld hl,kb_txt
002AB7 CD 20 0F 00         B    85    				call os_print_string
002ABB ED2205              B    86    				lea hl,ix+5		
002ABE CD 20 0F 00         B    87    				call os_print_string			002AC2 3E29                B    88    				ld a,')'
002AC4 CD 62 0F 00         B    89    				call os_print_char
                           B    90    				
002AC8 CD C0 13 00         B    91    				call os_new_line
002ACC CD C0 13 00         B    92    				call os_new_line
002AD0 21 36 2B 00         B    93    				ld hl,form_dev_warn2
002AD4 CD 26 2B 00         B    94    				call show_packed_text_and_cr
002AD8 CD 0E 2B 00         B    95    				call confirm_yes
002ADC 20 28               B    96    				jr nz,ab_form
                           B    97    				
002ADE 21 40 2B 00         B    98    				ld hl,formatting_txt			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AE2 CD 20 0F 00         B    99    				call os_print_string
                           B   100    				
002AE6 CD 72 48 00         B   101    				call fs_format_device_command
002AEA 38 10               B   102    				jr c,form_err
002AEC B7                  B   103    				or a
002AED 20 0D               B   104    				jr nz,form_err
                           B   105    			
002AEF 21 50 2B 00         B   106    				ld hl,ok_txt					002AF3 CD 20 0F 00         B   107    				call os_print_string
                           B   108    				
002AF7 CD 03 32 00         B   109    f_end			call os_cmd_remount				002AFB C9                  B   110    				ret
                           B   111    			
002AFC                     B   112    form_err
002AFC 21 55 2B 00         B   113    				ld hl,ferr_txt
002B00 CD 20 0F 00         B   114    				call os_print_string
002B04 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
002B06 CD C0 13 00         B   121    ab_form			call os_new_line
002B0A 3E24                B   122    				ld a,024h						002B0C B7                  B   123    				or a
002B0D C9                  B   124    				ret
                           B   125    				
002B0E                     B   126    confirm_yes
                           B   127    			
002B0E 21 0B 6A 00         B   128    				ld hl,scratch_pad
002B12 1E03                B   129    				ld e,3
002B14 E5                  B   130    				push hl
002B15 CD EC 10 00         B   131    				call os_user_input
002B19 E1                  B   132    				pop hl
002B1A C0                  B   133    				ret nz
002B1B 0603                B   134    				ld b,3
002B1D 11 8D 5B 00         B   135    				ld de,yes_txt+1
002B21 CD E7 11 00         B   136    				call os_compare_strings
002B25 C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B26                     B   140    show_packed_text_and_cr
                           B   141    			
002B26 CD F7 13 00         B   142    				call os_show_packed_text
002B2A CD C0 13 00         B   143    				call os_new_line
002B2E C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B2F                     B   148    form_dev_warn1
                           B   149    
002B2F 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   151    
002B36                     B   152    form_dev_warn2
                           B   153    
002B36 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B3E 9700 
                           B   155    
002B40                     B   156    formatting_txt
                           B   157    
002B40 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002B48 74696E67 2E2E2000 
                           B   159    
002B50 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002B55 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002B5D 00 
                           B   163    
002B5E                     B   164    default_label	
                           B   165    
002B5E 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002B66 534B00 
                           B   167    
002B69 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00006A0F            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B6E CD 3F 1C 00         B     5    os_cmd_h		call get_start_and_end			002B72 22 D2 62 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002B76 CD 2D 1C 00         B     8    				call test_mem_range
002B7A DA 00 16 00         B     9    				jp c,os_range_error				                           B    10    			
002B7E AF                  B    11    				xor a
002B7F 32 1B 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002B83 2A D2 62 00         B    14    				ld hl,(find_hexstringascii)
002B87 0600                B    15    				ld b,0
002B89 7E                  B    16    h_lfascii		ld a,(hl)						002B8A B7                  B    17    				or a
002B8B 28 28               B    18    				jr z,h_no_text					002B8D FE22                B    19    				cp 022h
002B8F 28 03               B    20    				jr z,h_found_quote
002B91 23                  B    21    				inc hl
002B92 18 F5               B    22    				jr h_lfascii
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002B94 23                  B    23    h_found_quote	inc hl
002B95 22 D2 62 00         B    24    				ld (find_hexstringascii),hl
002B99 7E                  B    25    h_fasc_len		ld a,(hl)
002B9A B7                  B    26    				or a
002B9B CA 04 16 00         B    27    				jp z,os_no_args_error			002B9F FE22                B    28    				cp 022h
002BA1 28 04               B    29    				jr z,h_startas
002BA3 23                  B    30    				inc hl
002BA4 04                  B    31    				inc b
002BA5 18 F2               B    32    				jr h_fasc_len
                           B    33    
002BA7 78                  B    34    h_startas		ld a,b
002BA8 B7                  B    35    				or a
002BA9 CA 04 16 00         B    36    				jp z,os_no_args_error			002BAD 3E01                B    37    				ld a,1
002BAF 32 1B 2C 00         B    38    				ld (h_ascii_mode),a
002BB3 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002BB5 2A D2 62 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002BB9 0600                B    43    				ld b,0							002BBB CD 68 1C 00         B    44    cntfbyts		call hexword_or_bust			002BBF 28 04               B    45    				jr z,gthexstr
002BC1 04                  B    46    				inc b
002BC2 23                  B    47    				inc hl
002BC3 18 F6               B    48    				jr cntfbyts
002BC5 78                  B    49    gthexstr		ld a,b
002BC6 B7                  B    50    				or a
002BC7 CA 04 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002BCB                     B    54    h_start_search
                           B    55    	
002BCB DD2A C6 62 00       B    56    				ld ix,(cmdop_start_address)		002BD0 DDE5                B    57    fndloop1		push ix
002BD2 FDE1                B    58    				pop iy
002BD4 48                  B    59    				ld c,b							002BD5 2A D2 62 00         B    60    				ld hl,(find_hexstringascii)
002BD9 3A 1B 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002BDD B7                  B    62    				or a
002BDE 28 08               B    63    				jr z,h_hex
002BE0 FD7E00              B    64    				ld a,(iy)
002BE3 BE                  B    65    				cp (hl)
002BE4 20 23               B    66    				jr nz,nofmatch
002BE6 18 0A               B    67    				jr h_matched
002BE8 CD 97 10 00         B    68    h_hex			call ascii_to_hexword			002BEC FD7E00              B    69    				ld a,(iy)
002BEF BB                  B    70    				cp e
002BF0 20 17               B    71    				jr nz,nofmatch
002BF2 FD23                B    72    h_matched		inc iy
002BF4 23                  B    73    				inc hl
002BF5 0D                  B    74    				dec c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BF6 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002BF8 DDE5                B    77    				push ix							002BFA D1                  B    78    				pop de							002BFB DDE5                B    79    				push ix
002BFD C5                  B    80    				push bc
002BFE CD F8 12 00         B    81    				call os_show_hex_address
002C02 CD C0 13 00         B    82    				call os_new_line
002C06 C1                  B    83    				pop bc
002C07 DDE1                B    84    				pop ix
                           B    85    				
002C09 DDE5                B    86    nofmatch		push ix
002C0B DD23                B    87    				inc ix
002C0D D1                  B    88    				pop de
002C0E 2A C9 62 00         B    89    				ld hl,(cmdop_end_address)
002C12 AF                  B    90    				xor a
002C13 ED52                B    91    				sbc hl,de
002C15 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C17 3E20                B    94    				ld a,020h						002C19 B7                  B    95    				or a
002C1A C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C1B 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C1C                     B     5    os_cmd_help		
002C1C AF                  B     6    				xor a
002C1D 32 C2 62 00         B     7    				ld (os_linecount),a
                           B     8    				
002C21 21 CD 5C 00         B     9    				ld hl,packed_help1
002C25 CD F7 13 00         B    10    show_page		call os_show_packed_text
002C29 E5                  B    11    				push hl
002C2A CD C0 13 00         B    12    				call os_new_line
002C2E E1                  B    13    				pop hl
002C2F 23                  B    14    				inc hl						;sk
002C30 7E                  B    15    				ld a,(hl)
002C31 FEFF                B    16    				cp 0ffh						;la
002C33 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C35 CD BE 11 00         B    19    				call os_count_lines
002C39 78                  B    20    				ld a,b
002C3A FE79                B    21    				cp 'y'
002C3C 28 E7               B    22    				jr z,show_page
                           B    23    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002C3E                     B    24    last_help_page
002C3E AF                  B    25    				xor a
002C3F C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C40                     B     5    os_cmd_gtr
                           B     6    
002C40 CD 68 1C 00         B     7    				call hexword_or_bust			002C44 CA EC 15 00         B     8    				jp z,os_no_start_addr
002C48 23                  B     9    fndquot1		inc hl
002C49 7E                  B    10    				ld a,(hl)
002C4A B7                  B    11    				or a
002C4B CA 04 16 00         B    12    				jp z,os_no_args_error
002C4F FE22                B    13    				cp 022h							002C51 20 F5               B    14    				jr nz,fndquot1
002C53 23                  B    15    				inc hl
002C54 E5                  B    16    				push hl
002C55 7E                  B    17    fndquot2		ld a,(hl)
002C56 23                  B    18    				inc hl
002C57 B7                  B    19    				or a
002C58 28 15               B    20    				jr z,noquot2
002C5A FE22                B    21    				cp 022h							002C5C 20 F7               B    22    				jr nz,fndquot2
002C5E E1                  B    23    				pop hl
                           B    24    					
002C5F 7E                  B    25    wmbalp			ld a,(hl)						002C60 FE22                B    26    				cp 022h
002C62 28 09               B    27    				jr z,os_gtrdn					002C64 FE7D                B    28    				cp 07dh
002C66 28 01               B    29    				jr z,skpnasc
002C68 12                  B    30    				ld (de),a
002C69 13                  B    31    skpnasc			inc de
002C6A 23                  B    32    				inc hl
002C6B 18 F2               B    33    				jr wmbalp
002C6D AF                  B    34    os_gtrdn		xor a
002C6E C9                  B    35    				ret	
                           B    36    				
002C6F E1                  B    37    noquot2			pop hl							002C70 3E12                B    38    				ld a,012h
002C72 B7                  B    39    				or a
002C73 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B     3    ;----------------------------------------------
                           B     4    
002C74                     B     5    os_cmd_lb
                           B     6    	
002C74 CD 79 16 00         B     7    				call os_check_volume_format	
002C78 C0                  B     8    				ret nz
                           B     9    				
002C79 CD EA 28 00         B    10    				call filename_or_bust			002C7D CD 0C 16 00         B    11    				call os_find_file				002C81 C0                  B    12    				ret nz
002C82 ED53 0E 6A 00       B    13    				ld (filesize_cache),de			002C87 2A 1B 62 00         B    14    				ld hl,(default_load_addr)
002C8B 22 0B 6A 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002C8F 2A 7F 63 00         B    17    				ld hl,(os_args_loc)
002C93 CD A1 0F 00         B    18    				call os_next_arg
                           B    19    
002C97 CD 68 1C 00         B    20    				call hexword_or_bust			002C9B 28 05               B    21    				jr z,os_lbnao					002C9D ED53 0B 6A 00       B    22    				ld (data_load_addr),de
                           B    23    
002CA2 ED5B 0B 6A 00       B    24    os_lbnao		ld de,(data_load_addr)			002CA7 2A 28 62 00         B    25    				ld hl,(sys_ram_high)			002CAB 2B                  B    26    				dec hl
002CAC AF                  B    27    				xor a
002CAD ED52                B    28    				sbc hl,de
002CAF 38 04               B    29    				jr c,os_lbprok
002CB1 3E26                B    30    				ld a,026h						002CB3 B7                  B    31    				or a
002CB4 C9                  B    32    				ret
                           B    33    				
002CB5 2A 0B 6A 00         B    34    os_lbprok		ld hl,(data_load_addr)			002CB9 CD 3B 16 00         B    35    				call os_read_bytes_from_file
002CBD C0                  B    36    				ret nz
                           B    37    			
002CBE                     B    38    report_bytes_loaded
                           B    39    
002CBE 21 BB 57 00         B    40    				ld hl,os_hex_prefix_txt			002CC2 CD 20 0F 00         B    41    				call os_print_string			                           B    42    				
002CC6 11 10 6A 00         B    43    				ld de,filesize_cache+2			002CCA 21 2D 63 00         B    44    				ld hl,output_line
002CCE 0603                B    45    				ld b,3
002CD0 CD 55 10 00         B    46    				call n_hexbytes_to_ascii
002CD4 3600                B    47    				ld (hl),0	
002CD6 0605                B    48    				ld b,5							002CD8 CD 2E 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002CDC 21 6B 5E 00         B    51    				ld hl,bytes_loaded_msg			002CE0 CD F7 13 00         B    52    				call os_show_packed_text
                           B    53    				
002CE4 21 1A 58 00         B    54    				ld hl,to_txt					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002CE8 CD 20 0F 00         B    55    				call os_print_string
                           B    56    
002CEC 21 BB 57 00         B    57    				ld hl,os_hex_prefix_txt			002CF0 CD 20 0F 00         B    58    				call os_print_string	
                           B    59    
002CF4 ED5B 0B 6A 00       B    60    				ld de,(data_load_addr)			002CF9 CD F8 12 00         B    61    				call os_show_hex_address
                           B    62    
002CFD CD C0 13 00         B    63    				call os_new_line
002D01 AF                  B    64    				xor a
002D02 C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006A0B            B    69    data_load_addr	equ scratch_pad
       00006A0E            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D03 CD 68 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D07 28 05               B     8    				jr z,m_no_hex					002D09 ED53 C3 62 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D0E 0610                B    11    m_no_hex		ld b,16							002D10 C5                  B    12    smbllp			push bc							                           B    13    				
002D11 21 4A 2D 00         B    14    				ld hl,colon_cmd_prefix			002D15 CD 20 0F 00         B    15    				call os_print_string
002D19 ED5B C3 62 00       B    16    				ld de,(mem_mon_addr)
002D1E CD F8 12 00         B    17    				call os_show_hex_address
                           B    18    
002D22 21 2D 63 00         B    19    				ld hl,output_line
002D26 0610                B    20    				ld b,bytes_per_line				002D28 3620                B    21    mmbllp			ld (hl),' '
002D2A 23                  B    22    				inc hl
002D2B 1A                  B    23    				ld a,(de)	
002D2C CD 63 10 00         B    24    				call hexbyte_to_ascii
002D30 13                  B    25    				inc de
002D31 10 F5               B    26    				djnz mmbllp
                           B    27    
002D33 ED53 C3 62 00       B    28    				ld (mem_mon_addr),de
002D38 360B                B    29    				ld (hl),11
002D3A 23                  B    30    				inc hl
002D3B 3600                B    31    				ld (hl),0
002D3D 21 2D 63 00         B    32    				ld hl,output_line
002D41 CD 20 0F 00         B    33    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D45 C1                  B    34    				pop bc
002D46 10 C8               B    35    				djnz smbllp
                           B    36    				
002D48 AF                  B    37    				xor a
002D49 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002D4A 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D4D                     B     5    os_cmd_md
                           B     6    	
002D4D CD 79 16 00         B     7    				call os_check_volume_format	
002D51 C0                  B     8    				ret nz
                           B     9    			
002D52 CD EA 28 00         B    10    				call filename_or_bust
                           B    11    				
002D56 C3 B9 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002D5A                     B     5    os_cmd_r	
002D5A DD21 31 62 00       B     6    				ld ix,store_a1					002D5F 21 04 2E 00         B     7    				ld hl,register_txt
002D63 CD 20 0F 00         B     8    rcmdloop2		call os_print_string
002D67 7E                  B     9    rcmdloop		ld a,(hl)
002D68 FE01                B    10    				cp 1
002D6A 28 0B               B    11    				jr z,showbyte
002D6C FE02                B    12    				cp 2
002D6E 28 15               B    13    				jr z,showword16
002D70 FE03                B    14    				cp 3
002D72 28 2E               B    15    				jr z,showaddr
002D74 23                  B    16    				inc hl
002D75 18 F0               B    17    				jr rcmdloop
                           B    18    				
002D77 DD7E00              B    19    showbyte		ld a,(ix)
002D7A DD23                B    20    				inc ix
002D7C DDE5                B    21    				push ix
002D7E E5                  B    22    				push hl
002D7F CD 0C 13 00         B    23    				call os_show_hex_byte
002D83 18 2A               B    24    				jr showreg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B    25    
002D85 DD7E01              B    26    showword16		ld a,(ix+1)
002D88 DDE5                B    27    				push ix
002D8A E5                  B    28    				push hl
002D8B CD 0C 13 00         B    29    				call os_show_hex_byte
002D8F E1                  B    30    				pop hl
002D90 DDE1                B    31    				pop ix
002D92 DD7E00              B    32    				ld a,(ix)
002D95 DD23                B    33    				inc ix
002D97 DD23                B    34    				inc ix
002D99 DDE5                B    35    				push ix
002D9B E5                  B    36    				push hl
002D9C CD 0C 13 00         B    37    				call os_show_hex_byte
002DA0 18 0D               B    38    				jr showreg
                           B    39    
002DA2 DD1700              B    40    showaddr		ld de,(ix)
002DA5 ED3203              B    41    				lea ix,ix+3
002DA8 DDE5                B    42    				push ix
002DAA E5                  B    43    				push hl
002DAB CD F8 12 00         B    44    				call os_show_hex_address
002DAF E1                  B    45    showreg			pop hl
002DB0 DDE1                B    46    				pop ix
002DB2 23                  B    47    				inc hl
002DB3 7E                  B    48    				ld a,(hl)
002DB4 B7                  B    49    				or a
002DB5 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002DB7 CD C0 13 00         B    52    				call os_new_line				002DBB 21 68 2E 00         B    53    				ld hl,flag_txt
002DBF CD E0 12 00         B    54    				call os_copy_to_output_line
002DC3 21 31 63 00         B    55    				ld hl,output_line+4
002DC7 01050000            B    56    				ld bc,5
002DCB 3A 54 62 00         B    57    				ld a,(store_f)
002DCF CB77                B    58    				bit 6,a							002DD1 28 02               B    59    				jr z,zfzero
002DD3 3631                B    60    				ld (hl),'1'
002DD5 09                  B    61    zfzero			add hl,bc
002DD6 CB47                B    62    				bit 0,a							002DD8 28 02               B    63    				jr z,cfzero
002DDA 3631                B    64    				ld (hl),'1'
002DDC 09                  B    65    cfzero			add hl,bc
002DDD CB7F                B    66    				bit 7,a							002DDF 28 02               B    67    				jr z,sfzero
002DE1 364D                B    68    				ld (hl),'M'
002DE3 09                  B    69    sfzero			add hl,bc
002DE4 CB57                B    70    				bit 2,a							002DE6 28 02               B    71    				jr z,pfzero
002DE8 364F                B    72    				ld (hl),'O'
002DEA 09                  B    73    pfzero			add hl,bc
002DEB 23                  B    74    				inc hl
002DEC CB67                B    75    				bit 4,a							002DEE 28 02               B    76    				jr z,iffzero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DF0 3631                B    77    				ld (hl),'1'
002DF2                     B    78    iffzero			
002DF2 01060000            B    79    				ld bc,6
002DF6 09                  B    80    				add hl,bc
002DF7 3A 55 62 00         B    81    				ld a,(store_adl)
002DFB C630                B    82    				add a,30h
002DFD 77                  B    83    				ld (hl),a
002DFE CD 23 13 00         B    84    				call os_print_output_line
002E02 AF                  B    85    				xor a
002E03 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E04 20413D00 01         B    91    register_txt		db ' A=',0,1
002E09 20204243 3D0003     B    92    					db '  BC=',0,3
002E10 20204445 3D0003     B    93    					db '  DE=',0,3
002E17 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E1E 0B                  B    96    					db 11
                           B    97    
002E1F 27413D00 01         B    98    					db 027h,'A=',0,1
002E24 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E2B 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E32 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E39 0B                  B   103    					db 11
                           B   104    
002E3A 2049583D 0003       B   105    					db ' IX=',0,3
002E40 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002E46 0B                  B   108    					db 11
                           B   109    					
002E47 2050433D 0003       B   110    					db ' PC=',0,3
002E4D 204C5350 3D0003     B   111    					db ' LSP=',0,3
002E54 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002E5B 0B                  B   114    					db 11
                           B   115    					
002E5C 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002E64 010000 
                           B   117    					
002E67 0B                  B   118    					db 11
                           B   119    
002E68 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002E70 3D302053 463D5020 
002E78 50563D45 20494646 
002E80 3D302041 444C3D30 
002E88 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rd.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002E8B                     B     5    os_cmd_rd
                           B     6    
002E8B CD 79 16 00         B     7    				call os_check_volume_format	
002E8F C0                  B     8    				ret nz
                           B     9    				
002E90 CD EA 28 00         B    10    				call filename_or_bust
                           B    11    			
002E94 C3 23 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002E98                     B     5    os_cmd_rn
                           B     6    	
002E98 CD 79 16 00         B     7    				call os_check_volume_format	
002E9C C0                  B     8    				ret nz
                           B     9    			
002E9D CD EA 28 00         B    10    				call filename_or_bust
002EA1 E5                  B    11    				push hl
002EA2 D1                  B    12    				pop de
002EA3 CD A1 0F 00         B    13    				call os_next_arg
002EA7 7E                  B    14    				ld a,(hl)						002EA8 B7                  B    15    				or a
002EA9 20 04               B    16    				jr nz,rn_grfn
002EAB 3E1F                B    17    				ld a,01fh						002EAD B7                  B    18    				or a
002EAE C9                  B    19    				ret
                           B    20    
002EAF EB                  B    21    rn_grfn			ex de,hl
002EB0 C3 0D 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EB4                     B     5    os_cmd_sb
                           B     6    	
002EB4 CD 79 16 00         B     7    				call os_check_volume_format		002EB8 C0                  B     8    				ret nz
                           B     9    					
002EB9 CD EA 28 00         B    10    				call filename_or_bust			002EBD 22 11 6A 00         B    11    				ld (sb_save_name_addr),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B    12    				
002EC1 2A 7F 63 00         B    13    				ld hl,(os_args_loc)
002EC5 CD A1 0F 00         B    14    				call os_next_arg
002EC9 CD 68 1C 00         B    15    				call hexword_or_bust			002ECD CA EC 15 00         B    16    				jp z,os_no_start_addr			002ED1 ED53 0B 6A 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002ED6 CD 68 1C 00         B    19    				call hexword_or_bust			002EDA CA F0 15 00         B    20    				jp z,os_no_filesize
002EDE ED53 0E 6A 00       B    21    				ld (sb_save_length),de
                           B    22    				
002EE3 2A 11 6A 00         B    23    				ld hl,(sb_save_name_addr)		002EE7 CD 4B 16 00         B    24    				call os_create_file
002EEB 28 18               B    25    				jr z,os_sfapp
002EED FEC9                B    26    				cp 0c9h							002EEF C0                  B    27    				ret nz			
002EF0 21 94 5C 00         B    28    				ld hl,save_append_msg			002EF4 CD F7 13 00         B    29    				call os_show_packed_text
002EF8 CD 8F 45 00         B    30    				call os_wait_key_press
002EFC 3E79                B    31    				ld a,'y'
002EFE B8                  B    32    				cp b
002EFF 28 04               B    33    				jr z,os_sfapp
002F01 3E2C                B    34    				ld a,2ch						002F03 B7                  B    35    				or a
002F04 C9                  B    36    				ret
                           B    37    			
002F05 2A 11 6A 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F09 ED5B 0B 6A 00       B    39    				ld de,(sb_save_addr)			002F0E ED4B 0E 6A 00       B    40    				ld bc,(sb_save_length)			002F13 CD 61 16 00         B    41    				call os_write_bytes_to_file
002F17 C0                  B    42    				ret nz	
                           B    43    				
002F18 3E20                B    44    				ld a,020h						002F1A B7                  B    45    				or a
002F1B C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006A0B            B    51    sb_save_addr		equ scratch_pad
       00006A0E            B    52    sb_save_length		equ scratch_pad+3
       00006A11            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006B0B            B     6    buffer_addr				 equ os_max_addr		       00006A0B            B     7    rx_buffer_ptr			 equ scratch_pad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
       00006A0E            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F1C 7E                  B    11    os_cmd_rx		ld a,(hl)						002F1D B7                  B    12    				or a
002F1E CA E4 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F22 3E3E                B    15    				ld a,'>'						002F24 BE                  B    16    				cp (hl)
002F25 C2 E8 2F 00         B    17    				jp nz,rx_nrs
002F29 23                  B    18    				inc hl
002F2A 3E20                B    19    				ld a,' '
002F2C BE                  B    20    				cp (hl)
002F2D 2B                  B    21    				dec hl
002F2E C2 E8 2F 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F32 CD 79 16 00         B    24    				call os_check_volume_format		002F36 C0                  B    25    				ret nz		
                           B    26    				
002F37 112A0000            B    27    				ld de,02ah						002F3B ED53 9F 60 00       B    28    				ld (serial_filename),de			002F40 CD EC 30 00         B    29    				call rx_get_header
002F44 C0                  B    30    				ret nz
002F45 CD 62 47 00         B    31    				call s_holdack					                           B    32    				
002F49 21 B3 60 00         B    33    				ld hl,serial_fileheader			002F4D CD 4B 16 00         B    34    				call os_create_file
002F51 C2 C7 2F 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002F55 21 B4 5C 00         B    37    				ld hl,ser_recsave_msg
002F59 CD F7 13 00         B    38    				call os_show_packed_text
                           B    39    				
002F5D 2A C3 60 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002F61 22 0E 6A 00         B    41    				ld (serial_file_length_cache),h
002F65 21 0B 6B 00         B    42    				ld hl,buffer_addr
002F69 22 0B 6A 00         B    43    				ld (rx_buffer_ptr),hl
002F6D 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002F6F CD 4A 47 00         B    46    rx_lnb			call s_goodack
002F73 CD F4 46 00         B    47    				call s_getblock
002F77 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002F79 F5                  B    50    				push af							002F7A CD 5B 47 00         B    51    				call s_badack					002F7E 21 B3 60 00         B    52    				ld hl,serial_fileheader			002F82 CD E1 16 00         B    53    				call os_erase_file
002F86 F1                  B    54    				pop af
002F87 C9                  B    55    				ret
                           B    56    
002F88 CD 62 47 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002F8C 21 0B 68 00         B    59    				ld hl,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002F90 ED5B 0B 6A 00       B    60    				ld de,(rx_buffer_ptr)
002F95 01000100            B    61    				ld bc,256
002F99 EDB0                B    62    				ldir
002F9B ED53 0B 6A 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002FA0 2A C3 60 00         B    65    				ld hl,(serial_fileheader+16)
002FA4 11000100            B    66    				ld de,256
002FA8 AF                  B    67    				xor a
002FA9 ED52                B    68    				sbc hl,de
002FAB 22 C3 60 00         B    69    				ld (serial_fileheader+16),hl
002FAF 28 1D               B    70    				jr z,rx_lbr
002FB1 38 1B               B    71    				jr c,rx_lbr
002FB3 10 BA               B    72    				djnz rx_lnb
                           B    73    
002FB5 01008000            B    74    				ld bc,buffer_blocks*256
002FB9 11 0B 6B 00         B    75    				ld de,buffer_addr
002FBD 21 B3 60 00         B    76    				ld hl,serial_fileheader
002FC1 CD 61 16 00         B    77    				call os_write_bytes_to_file
002FC5 28 96               B    78    				jr z,rx_rnblk
002FC7 F5                  B    79    rxwtd_fail		push af
002FC8 CD 5B 47 00         B    80    				call s_badack
002FCC F1                  B    81    				pop af
002FCD C9                  B    82    				ret
                           B    83    				
002FCE CD 4A 47 00         B    84    rx_lbr			call s_goodack
002FD2 ED4B 0E 6A 00       B    85    				ld bc,(serial_file_length_cache
002FD7 11 0B 6B 00         B    86    				ld de,buffer_addr
002FDB 21 B3 60 00         B    87    				ld hl,serial_fileheader
002FDF CD 61 16 00         B    88    				call os_write_bytes_to_file
002FE3 C0                  B    89    				ret nz	
                           B    90    				
002FE4 3E20                B    91    rxtd_done		ld a,020h						002FE6 B7                  B    92    				or a
002FE7 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
002FE8 3E21                B    98    rx_nrs			ld a,'!'						002FEA BE                  B    99    				cp (hl)							002FEB C2 96 30 00         B   100    				jr nz,notrxe
002FEF 23                  B   101    				inc hl
002FF0 3E20                B   102    				ld a,' '
002FF2 BE                  B   103    				cp (hl)
002FF3 2B                  B   104    				dec hl
002FF4 C2 96 30 00         B   105    				jr nz,notrxe
002FF8 112A0000            B   106    				ld de,02ah						002FFC ED53 9F 60 00       B   107    				ld (serial_filename),de			003001 CD EC 30 00         B   108    				call rx_get_header
003005 C0                  B   109    				ret nz
003006 21 AA 5C 00         B   110    				ld hl,ser_rec2_msg
00300A CD F7 13 00         B   111    				call os_show_packed_text
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00300E CD 4A 47 00         B   112    				call s_goodack
003012 3E01                B   113    				ld a,1							003014 32 B2 60 00         B   114    				ld (serial_timeout),a
003018 CD F4 46 00         B   115    				call s_getblock					00301C 28 07               B   116    				jr z,rxe_fblok
00301E F5                  B   117    rxe_badblock	push af							00301F CD 5B 47 00         B   118    				call s_badack					003023 F1                  B   119    				pop af
003024 C9                  B   120    				ret
                           B   121    	
003025 2A 0D 68 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003029 1150524F            B   123    				ld de,04f5250h					00302D AF                  B   124    				xor a
00302E 28 04               B   125    				jr z,rxe_ok
003030 3E1A                B   126    				ld a,1ah						003032 B7                  B   127    				or a
003033 C9                  B   128    				ret
003034 2A 10 68 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003038 22 96 60 00         B   130    				ld (serial_ez80_address),hl
00303C 01000100            B   131    				ld bc,256						003040 DD21 B3 60 00       B   132    				ld ix,serial_fileheader
003045 AF                  B   133    				xor a
003046 DDB612              B   134    				or (ix+18)						003049 20 0A               B   135    				jr nz,mtones
00304B DDB611              B   136    				or a,(ix+17)					00304E 20 05               B   137    				jr nz,mtones
003050 0600                B   138    				ld b,0
003052 DD4E10              B   139    				ld c,(ix+16)					003055 21 0B 68 00         B   140    mtones			ld hl,sector_buffer				003059 ED5B 96 60 00       B   141    				ld de,(serial_ez80_address)		00305E EDB0                B   142    				ldir
                           B   143    				
003060 D5                  B   144    				push de
003061 CD 4A 47 00         B   145    				call s_goodack		
003065 DDE1                B   146    				pop ix							003067 2A C3 60 00         B   147    				ld hl,(serial_fileheader+16)	00306B 11000100            B   148    				ld de,256
00306F AF                  B   149    				xor a
003070 ED52                B   150    				sbc hl,de						003072 28 18               B   151    				jr z,rxe_done
003074 38 16               B   152    				jr c,rxe_done
003076 EB                  B   153    				ex de,hl
003077 ED53 C3 60 00       B   154    				ld (serial_fileheader+16),de	00307C DD2A 96 60 00       B   155    				ld ix,(serial_ez80_address)
003081 01000100            B   156    				ld bc,256
003085 DD09                B   157    				add ix,bc
003087 CD B2 46 00         B   158    				call s_gbloop					00308B C0                  B   159    				ret nz
00308C E1                  B   160    rxe_done		pop hl							00308D CD 87 3C 00         B   161    				call enable_nmi					003091 2A 96 60 00         B   162    				ld hl,(serial_ez80_address)
003095 E9                  B   163    				jp (hl)							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   164    				
                           B   165    				
                           B   166    
003096 CD 33 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
00309A 0610                B   169    				ld b,16							00309C 11 9F 60 00         B   170    				ld de,serial_filename
0030A0 CD 06 12 00         B   171    				call os_copy_ascii_run			0030A4 79                  B   172    				ld a,c
0030A5 32 B1 60 00         B   173    				ld (serial_fn_length),a
0030A9 CD AD 0F 00         B   174    				call os_scan_for_space
                           B   175    				
0030AD CD 68 1C 00         B   176    				call hexword_or_bust			0030B1 CA EC 15 00         B   177    				jp z,os_no_start_addr			0030B5 ED53 0B 6A 00       B   178    				ld (data_load_addr),de			0030BA 2A 28 62 00         B   179    				ld hl,(sys_ram_high)			0030BE 2B                  B   180    				dec hl
0030BF AF                  B   181    				xor a
0030C0 ED52                B   182    				sbc hl,de
0030C2 38 04               B   183    				jr c,os_prok
0030C4 3E26                B   184    				ld a,026h						0030C6 B7                  B   185    				or a
0030C7 C9                  B   186    				ret
                           B   187    
0030C8 CD EC 30 00         B   188    os_prok			call rx_get_header
0030CC C0                  B   189    				ret nz
                           B   190    
0030CD 21 AA 5C 00         B   191    				ld hl,ser_rec2_msg
0030D1 CD F7 13 00         B   192    				call os_show_packed_text
                           B   193    	
0030D5 2A 0B 6A 00         B   194    				ld hl,(data_load_addr)			0030D9 CD A0 46 00         B   195    				call serial_receive_file
0030DD C0                  B   196    				ret nz							                           B   197    
0030DE ED5B C3 60 00       B   198    				ld de,(serial_fileheader+16)	0030E3 ED53 0E 6A 00       B   199    				ld (filesize_cache),de
0030E8 C3 BE 2C 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
0030EC                     B   204    rx_get_header
0030EC 21 A6 5C 00         B   205    				ld hl,ser_rec_msg
0030F0 CD F7 13 00         B   206    				call os_show_packed_text
                           B   207    				
0030F4 3E00                B   208    				ld a,0
0030F6 32 D4 60 00         B   209    				ld (anim_wait_count),a			0030FA 3A D4 60 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0030FE 3C                  B   211    				inc a
0030FF 47                  B   212    				ld b,a
003100 FE06                B   213    				cp 6
003102 20 07               B   214    				jr nz,notsix
003104 0E20                B   215    				ld c,' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003106 0605                B   216    				ld b,5
003108 AF                  B   217    				xor a
003109 18 02               B   218    				jr mcharset
00310B 0E2E                B   219    notsix			ld c,'.'
00310D 32 D4 60 00         B   220    mcharset		ld (anim_wait_count),a
003111 CD 31 1A 00         B   221    				call os_print_multiple_chars
003115 CD 69 0F 00         B   222    				call home_cursor
                           B   223    				
003119 21 9F 60 00         B   224    				ld hl,serial_filename			00311D 3E01                B   225    				ld a,1							00311F CD 05 46 00         B   226    				call serial_get_header
003123 C8                  B   227    				ret z
003124 FE83                B   228    				cp 083h							003126 C0                  B   229    				ret nz
003127 CD EA 45 00         B   230    				call os_get_key_press
00312B FE76                B   231    				cp 076h
00312D 20 CB               B   232    				jr nz,get_hdr_loop
00312F 3E80                B   233    				ld a,080h						003131 B7                  B   234    notsto			or a
003132 C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
003133                     B   240    clear_serial_filename
                           B   241    
003133 E5                  B   242    				push hl							003134 21 9F 60 00         B   243    				ld hl,serial_filename
003138 01100000            B   244    				ld bc,16
00313C AF                  B   245    				xor a
00313D CD 5A 15 00         B   246    				call os_bchl_memfill
003141 E1                  B   247    				pop hl
003142 C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
003143 7E                  B     5    os_cmd_tx		ld a,(hl)						003144 B7                  B     6    				or a
003145 CA E4 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003149 E5                  B     9    				push hl							00314A 21 9F 60 00         B    10    				ld hl,serial_filename
00314E 01100000            B    11    				ld bc,16
003152 AF                  B    12    				xor a
003153 CD 5A 15 00         B    13    				call os_bchl_memfill
003157 E1                  B    14    				pop hl
                           B    15    			
003158 0610                B    16    				ld b,16							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
00315A 11 9F 60 00         B    17    				ld de,serial_filename
00315E CD 06 12 00         B    18    				call os_copy_ascii_run			003162 79                  B    19    				ld a,c
003163 32 B1 60 00         B    20    				ld (serial_fn_length),a
003167 CD AD 0F 00         B    21    				call os_scan_for_space
                           B    22    							
00316B CD 68 1C 00         B    23    				call hexword_or_bust			00316F CA EC 15 00         B    24    				jp z,os_no_start_addr			003173 ED53 96 60 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003178 CD 68 1C 00         B    27    				call hexword_or_bust			00317C CA F0 15 00         B    28    				jp z,os_no_filesize
003180 ED53 99 60 00       B    29    				ld (serial_file_length),de
003185 21000000            B    30    				ld hl,0
003189 3E07                B    31    				ld a,07h						00318B B7                  B    32    				or a
00318C ED5A                B    33    				adc hl,de
00318E 28 1D               B    34    				jr z,s_error
                           B    35    				
003190 21 AF 5C 00         B    36    				ld hl,ser_send_msg
003194 CD F7 13 00         B    37    				call os_show_packed_text
                           B    38    			
003198 ED5B 99 60 00       B    39    				ld de,(serial_file_length)
00319D 21 9F 60 00         B    40    				ld hl,serial_filename			0031A1 DD2A 96 60 00       B    41    				ld ix,(serial_ez80_address)
0031A6 CD 69 47 00         B    42    				call serial_send_file
0031AA C0                  B    43    				ret nz			
                           B    44    			
0031AB 3E20                B    45    				ld a,020h						0031AD B7                  B    46    s_error			or a
0031AE C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0031AF CD 68 1C 00         B     5    os_cmd_t		call hexword_or_bust			0031B3 28 05               B     6    				jr z,t_no_hex					0031B5 ED53 C3 62 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0031BA 0610                B     9    t_no_hex		ld b,16
0031BC C5                  B    10    smaalp			push bc
                           B    11    				
0031BD 21 00 32 00         B    12    				ld hl,gtr_cmd_prefix			0031C1 CD 20 0F 00         B    13    				call os_print_string
0031C5 ED5B C3 62 00       B    14    				ld de,(mem_mon_addr)
0031CA CD F8 12 00         B    15    				call os_show_hex_address
                           B    16    
0031CE 21 2D 63 00         B    17    				ld hl,output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
0031D2 3620                B    18    				ld (hl),' '
0031D4 23                  B    19    				inc hl
0031D5 3622                B    20    				ld (hl),022h
0031D7 0610                B    21    				ld b,16
0031D9 23                  B    22    mabllp			inc hl
0031DA 1A                  B    23    				ld a,(de)	
0031DB FE20                B    24    				cp 020h
0031DD 38 04               B    25    				jr c,chchar
0031DF FE7F                B    26    				cp 07fh
0031E1 38 02               B    27    				jr c,nchchar
0031E3 3E7C                B    28    chchar			ld a,07ch
0031E5 77                  B    29    nchchar			ld (hl),a
0031E6 13                  B    30    				inc de
0031E7 10 F0               B    31    				djnz mabllp
                           B    32    
0031E9 ED53 C3 62 00       B    33    				ld (mem_mon_addr),de
0031EE 23                  B    34    				inc hl
0031EF 3622                B    35    				ld (hl),022h
0031F1 23                  B    36    				inc hl
0031F2 360B                B    37    				ld (hl),11
0031F4 23                  B    38    				inc hl
0031F5 3600                B    39    				ld (hl),0
0031F7 CD 23 13 00         B    40    				call os_print_output_line
0031FB C1                  B    41    				pop bc
0031FC 10 BE               B    42    				djnz smaalp
0031FE AF                  B    43    				xor a
0031FF C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
003200 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
003203                     B     5    os_cmd_remount
                           B     6    
003203 3E00                B     7    				ld a,0							003205 CD 16 18 00         B     8    				call os_mount_volumes
003209 CD C0 13 00         B     9    				call os_new_line
00320D AF                  B    10    				xor a
00320E C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
                           B     4    
00320F                     B     5    os_cmd_vers
                           B     6    
00320F 21 BD 57 00         B     7    				ld hl,os_version_txt
003213 CD 20 0F 00         B     8    				call os_print_string
                           B     9    			
003217 CD 39 42 00         B    10    				call hwsc_get_version
00321B D5                  B    11    				push de
00321C EB                  B    12    				ex de,hl
00321D CD 17 13 00         B    13    				call os_show_hex_word
                           B    14    				
003221 21 E0 57 00         B    15    				ld hl,fwd_slash_txt
003225 CD 20 0F 00         B    16    				call os_print_string
                           B    17    				
003229 21 CB 57 00         B    18    				ld hl,hw_version_txt
00322D CD 20 0F 00         B    19    				call os_print_string
003231 D1                  B    20    				pop de
003232 CD 17 13 00         B    21    				call os_show_hex_word
                           B    22    				
003236 CD C0 13 00         B    23    				call os_new_line
00323A CD C0 13 00         B    24    				call os_new_line	
00323E AF                  B    25    				xor a
00323F C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003240 21 94 63 00         B    22    os_cmd_exec		ld hl,script_flags				003244 CB46                B    23    				bit scr_in_script,(hl)
003246 C2 D7 33 00         B    24    				jp nz,script_error
00324A E5                  B    25    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00324B CD 53 32 00         B    26    				call do_script
00324F E1                  B    27    				pop hl
003250 CB86                B    28    				res scr_in_script,(hl)
003252 C9                  B    29    				ret
                           B    30    				
003253 CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
003255 2A 7F 63 00         B    33    				ld hl,(os_args_loc)				003259 11 AC 62 00         B    34    				ld de,script_fn					00325D 060D                B    35    				ld b,13
00325F CD 06 12 00         B    36    				call os_copy_ascii_run
003263 AF                  B    37    				xor a
003264 12                  B    38    				ld (de),a
                           B    39    				
003265 CD 49 1A 00         B    40    				call fs_get_dir_cluster			003269 ED53 8B 63 00       B    41    				ld (script_dir),de
                           B    42    				
00326E CD 79 16 00         B    43    				call os_check_volume_format		003272 C0                  B    44    				ret nz
                           B    45    				
003273 CD A3 33 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
003277 3A F1 63 00         B    51    scrp_loop		ld a,(key_mod_flags)			00327B E602                B    52    				and 2
00327D 28 12               B    53    				jr z,no_quit_script	
00327F CD EA 45 00         B    54    				call os_get_key_press
003283 FE21                B    55    				cp 021h							003285 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
003287 21 C3 5C 00         B    58    				ld hl,script_aborted_msg
00328B CD F7 13 00         B    59    				call os_show_packed_text
00328F AF                  B    60    				xor a							003290 C9                  B    61    				ret
                           B    62    					
                           B    63    
003291 CD B6 33 00         B    64    no_quit_script	call open_script				003295 C0                  B    65    				ret nz
003296 CD E1 33 00         B    66    				call read_script				00329A C0                  B    67    				ret nz
00329B 21 94 63 00         B    68    				ld hl,script_flags				00329F CB5E                B    69    				bit scr_end,(hl)
0032A1 28 02               B    70    				jr z,scr_to_do
0032A3 AF                  B    71    scr_done		xor a
0032A4 C9                  B    72    				ret
                           B    73    				
0032A5 21 DB 62 00         B    74    scr_to_do		ld hl,commandstring				0032A9 7E                  B    75    				ld a,(hl)
0032AA FE5B                B    76    				cp '['
0032AC 28 1C               B    77    				jr z,exec_scr_next
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    78    
0032AE 11 25 58 00         B    79    				ld de,if_command_txt			0032B2 0603                B    80    				ld b,3
0032B4 CD E7 11 00         B    81    				call os_compare_strings
0032B8 28 18               B    82    				jr z,do_exec_if
                           B    83    				
0032BA 11 28 58 00         B    84    				ld de,end_command_txt			0032BE 0604                B    85    				ld b,4
0032C0 CD E7 11 00         B    86    				call os_compare_strings
0032C4 28 DD               B    87    				jr z,scr_done
                           B    88    			
0032C6 CD 45 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
0032CA 21 94 63 00         B    91    exec_scr_next	ld hl,script_flags
0032CE CBCE                B    92    				set scr_find_new_line,(hl)
0032D0 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
0032D2 21 DD 62 00         B   104    do_exec_if		ld hl,commandstring+2			0032D6 CD B6 0F 00         B   105    				call os_scan_for_non_space
0032DA CA D7 33 00         B   106    				jr z,script_error				0032DE 11 95 63 00         B   107    				ld de,if_name_txt
0032E2 0610                B   108    				ld b,max_if_chars
0032E4 CD 06 12 00         B   109    				call os_copy_ascii_run			0032E8 AF                  B   110    				xor a
0032E9 12                  B   111    				ld (de),a
                           B   112    				
0032EA CD B6 0F 00         B   113    				call os_scan_for_non_space		0032EE CA D7 33 00         B   114    				jr z,script_error
0032F2 DD21 94 63 00       B   115    				ld ix,script_flags
0032F7 DDCB0096            B   116    				res scr_if_condition,(ix)
0032FB 7E                  B   117    				ld a,(hl)
0032FC FE3D                B   118    				cp '='
0032FE 28 04               B   119    				jr z,if_equals
003300 DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
003304 CD AD 0F 00         B   122    if_equals		call os_scan_for_space			003308 CD B6 0F 00         B   123    				call os_scan_for_non_space		00330C CA D7 33 00         B   124    				jr z,script_error
003310 11 A7 63 00         B   125    				ld de,if_value_txt				003314 0610                B   126    				ld b,max_if_chars
003316 CD 06 12 00         B   127    				call os_copy_ascii_run
00331A AF                  B   128    				xor a
00331B 12                  B   129    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   130    				
00331C CD B6 0F 00         B   131    				call os_scan_for_non_space
003320 CA D7 33 00         B   132    				jr z,script_error
003324 11 B9 63 00         B   133    				ld de,if_label_txt				003328 0610                B   134    				ld b,max_if_chars
00332A CD 06 12 00         B   135    				call os_copy_ascii_run			00332E AF                  B   136    				xor a
00332F 12                  B   137    				ld (de),a						                           B   138    								
003330 21 95 63 00         B   139    				ld hl,if_name_txt				003334 CD 10 1B 00         B   140    				call os_get_envar				003338 C2 CA 32 00         B   141    				jp nz,exec_scr_next				                           B   142    								
00333C 21 A7 63 00         B   143    				ld hl,if_value_txt
003340 DD21 94 63 00       B   144    				ld ix,script_flags
003345 DDCB0056            B   145    				bit scr_if_condition,(ix)
003349 20 0A               B   146    				jr nz,if_cond_diff
00334B CD E7 11 00         B   147    				call os_compare_strings			00334F C2 CA 32 00         B   148    				jp nz,exec_scr_next				003353 18 08               B   149    				jr if_cond_met
003355 CD E7 11 00         B   150    if_cond_diff	call os_compare_strings			003359 CA CA 32 00         B   151    				jp z,exec_scr_next				                           B   152    
00335D CD A3 33 00         B   153    if_cond_met		call new_script					                           B   154    
003361 CD B6 33 00         B   155    find_if_label	call open_script				003365 C0                  B   156    				ret nz
                           B   157    
003366 CD E1 33 00         B   158    				call read_script
00336A C0                  B   159    				ret nz
00336B 21 94 63 00         B   160    				ld hl,script_flags
00336F CB5E                B   161    				bit scr_end,(hl)
003371 C2 A3 32 00         B   162    				jp nz,scr_done
                           B   163    				
003375 21 DB 62 00         B   164    				ld hl,commandstring				003379 7E                  B   165    				ld a,(hl)
00337A FE5B                B   166    				cp '['
00337C 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
00337E 23                  B   169    if_find_csb		inc hl
00337F 7E                  B   170    				ld a,(hl)
003380 B7                  B   171    				or a
003381 28 18               B   172    				jr z,not_a_label				003383 FE5D                B   173    				cp ']'							003385 20 F7               B   174    				jr nz,if_find_csb
003387 3600                B   175    				ld (hl),0						003389 21 DC 62 00         B   176    				ld hl,commandstring+1
00338D 11 B9 63 00         B   177    				ld de,if_label_txt				003391 0610                B   178    				ld b,max_if_chars
003393 CD E7 11 00         B   179    				call os_compare_strings
003397 CA CA 32 00         B   180    				jp z,exec_scr_next				                           B   181    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00339B 21 94 63 00         B   182    not_a_label		ld hl,script_flags
00339F CBCE                B   183    				set scr_find_new_line,(hl)		0033A1 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
0033A3 E5                  B   188    new_script		push hl
0033A4 21000000            B   189    				ld hl,0
0033A8 22 8E 63 00         B   190    				ld (script_file_offset),hl		0033AC 21 94 63 00         B   191    				ld hl,script_flags
0033B0 CB8E                B   192    				res scr_find_new_line,(hl)		0033B2 CB9E                B   193    				res scr_end,(hl)
0033B4 E1                  B   194    				pop hl
0033B5 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
0033B6 CD 49 1A 00         B   199    open_script		call fs_get_dir_cluster			0033BA D5                  B   200    				push de
0033BB ED5B 8B 63 00       B   201    				ld de,(script_dir)				0033C0 CD 55 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
0033C4 21 AC 62 00         B   204    				ld hl,script_fn					0033C8 CD 0C 16 00         B   205    				call os_find_file				0033CC ED53 91 63 00       B   206    				ld (script_length),de			0033D1 D1                  B   207    				pop de
0033D2 C0                  B   208    				ret nz
0033D3 79                  B   209    				ld a,c							0033D4 B7                  B   210    				or a
0033D5 28 04               B   211    				jr z,scr_flok
                           B   212    				
0033D7 3E8C                B   213    script_error	ld a,08ch
0033D9 B7                  B   214    				or a
0033DA C9                  B   215    				ret
                           B   216    				
0033DB CD 55 1A 00         B   217    scr_flok		call fs_update_dir_cluster		0033DF AF                  B   218    				xor a
0033E0 C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
0033E1 21 DB 62 00         B   224    read_script		ld hl,commandstring				0033E5 01500000            B   225    				ld bc,max_buffer_chars			0033E9 3E20                B   226    				ld a,32
0033EB CD 5A 15 00         B   227    				call os_bchl_memfill
                           B   228    				
0033EF 11500000            B   229    				ld de,max_buffer_chars			0033F3 CD 1D 16 00         B   230    				call os_set_load_length
                           B   231    				
0033F7 AF                  B   232    				xor a
0033F8 2A 91 63 00         B   233    				ld hl,(script_length)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033FC ED5B 8E 63 00       B   234    				ld de,(script_file_offset)		003401 37                  B   235    				scf
003402 ED52                B   236    				sbc hl,de						003404 30 08               B   237    				jr nc,not_eoscr					003406 21 94 63 00         B   238    				ld hl,script_flags
00340A CBDE                B   239    				set scr_end,(hl)				00340C AF                  B   240    				xor a
00340D C9                  B   241    				ret
00340E CD 25 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
003412 21 DB 62 00         B   244    				ld hl,commandstring				003416 CD 3B 16 00         B   245    				call os_read_bytes_from_file
00341A B7                  B   246    				or a			
00341B 28 03               B   247    				jr z,scr_load_ok
00341D FECC                B   248    				cp 0cch							00341F C0                  B   249    				ret nz							                           B   250    
003420 21 94 63 00         B   251    scr_load_ok		ld hl,script_flags
003424 CB4E                B   252    				bit scr_find_new_line,(hl)		003426 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003428 21 DB 62 00         B   255    				ld hl,commandstring				00342C 0650                B   256    				ld b,max_buffer_chars
00342E 7E                  B   257    scr_fcr			ld a,(hl)
00342F FE20                B   258    				cp 32
003431 38 05               B   259    				jr c,scr_gotclcr
003433 23                  B   260    				inc hl
003434 10 F8               B   261    				djnz scr_fcr
003436 AF                  B   262    				xor a
003437 C9                  B   263    				ret
003438 3620                B   264    scr_gotclcr		ld (hl),32						00343A 23                  B   265    				inc hl
00343B 10 FB               B   266    				djnz scr_gotclcr
00343D AF                  B   267    				xor a
00343E C9                  B   268    				ret
                           B   269    
00343F FD2A 8E 63 00       B   270    scr_fnl			ld iy,(script_file_offset)
003444 21 DB 62 00         B   271    				ld hl,commandstring	
003448 7E                  B   272    scr_find_cr		ld a,(hl)						003449 B7                  B   273    				or a
00344A 20 07               B   274    				jr nz,scr_neocl					00344C FD22 8E 63 00       B   275    scr_eocl		ld (script_file_offset),iy
003451 18 8E               B   276    				jr read_script				
003453 FE20                B   277    scr_neocl		cp 20h							003455 38 05               B   278    				jr c,scr_got_cr
003457 23                  B   279    				inc hl
003458 FD23                B   280    				inc iy
00345A 18 EC               B   281    				jr scr_find_cr
                           B   282    				
00345C 7E                  B   283    scr_got_cr		ld a,(hl)
00345D B7                  B   284    				or a							00345E 28 EC               B   285    				jr z,scr_eocl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003460 FE20                B   286    				cp 20h
003462 30 05               B   287    				jr nc,scr_got_ch				003464 23                  B   288    				inc hl
003465 FD23                B   289    				inc iy
003467 18 F3               B   290    				jr scr_got_cr
                           B   291    
003469 FD22 8E 63 00       B   292    scr_got_ch		ld (script_file_offset),iy
00346E 21 94 63 00         B   293    				ld hl,script_flags				003472 CB8E                B   294    				res scr_find_new_line,(hl)
003474 C3 E1 33 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003478                     B     7    os_cmd_ltn
                           B     8    
003478 AF                  B     9    				xor a
003479 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00347A                     B     5    os_cmd_pen
                           B     6    	
00347A 0602                B     7    				ld b,2							00347C DD21 41 60 00       B     8    				ld ix,current_pen
                           B     9    				
003481 CD 68 1C 00         B    10    chpenlp			call hexword_or_bust			003485 28 0D               B    11    				jr z,pendone					003487 23                  B    12    				inc hl
003488 DD7300              B    13    				ld (ix),e
00348B DD7201              B    14    				ld (ix+1),d
00348E DD23                B    15    				inc ix
003490 DD23                B    16    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
003492 10 ED               B    17    				djnz chpenlp	
                           B    18    				
003494 CD 92 0F 00         B    19    pendone			call os_refresh_screen
003498 AF                  B    20    				xor a
003499 C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00349A                     B     5    os_cmd_palette
                           B     6    
00349A 0610                B     7    				ld b,16							00349C DD21 45 60 00       B     8    				ld ix,pen_palette
                           B     9    				
0034A1 0E00                B    10    				ld c,0
0034A3 C5                  B    11    chcollp			push bc
0034A4 CD 68 1C 00         B    12    				call hexword_or_bust			0034A8 C1                  B    13    				pop bc
0034A9 28 0E               B    14    				jr z,colrdone					0034AB 0C                  B    15    				inc c
0034AC 23                  B    16    				inc hl
0034AD DD7300              B    17    				ld (ix),e
0034B0 DD7201              B    18    				ld (ix+1),d
0034B3 DD23                B    19    				inc ix
0034B5 DD23                B    20    				inc ix
0034B7 10 EA               B    21    				djnz chcollp
                           B    22    			
0034B9 79                  B    23    colrdone		ld a,c
0034BA B7                  B    24    				or a
0034BB 20 04               B    25    				jr nz,pal_ok
0034BD 3E81                B    26    				ld a,81h						0034BF B7                  B    27    				or a
0034C0 C9                  B    28    				ret
0034C1 21 45 60 00         B    29    pal_ok			ld hl,pen_palette
0034C5 CD 08 3E 00         B    30    				call hswc_set_ui_colours	
0034C9 AF                  B    31    				xor a
0034CA C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
0034CB                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
0034CB CD 02 3B 00         B    15    				call disable_ms_irq
                           B    16    
0034CF 21 27 62 00         B    17    				ld hl,devices_connected
0034D3 CB8E                B    18    				res 1,(hl)
                           B    19    		
0034D5 CD 7E 43 00         B    20    				call init_mouse
0034D9 C0                  B    21    				ret nz
                           B    22    			
0034DA AF                  B    23    				xor a
0034DB 32 FB 63 00         B    24    				ld (mouse_packet_index),a
0034DF 32 FC 63 00         B    25    				ld (mouse_buttons),a
0034E3 21000000            B    26    				ld hl,0
0034E7 22 FD 63 00         B    27    				ld (mouse_disp_x),hl
0034EB 22 00 64 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
0034EF 21800200            B    30    				ld hl,window_width_pixels
0034F3 11E00100            B    31    				ld de,window_height_pixels
0034F7 CD 41 14 00         B    32    				call os_set_mouse_window
                           B    33    
0034FB CD FC 3A 00         B    34    				call enable_ms_irq
                           B    35    
0034FF 21 27 62 00         B    36    				ld hl,devices_connected
003503 CBCE                B    37    				set 1,(hl)
003505 AF                  B    38    				xor a
003506 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
003507                     B     5    os_cmd_vmode
                           B     6    	
003507 CD 68 1C 00         B     7    				call hexword_or_bust			00350B 28 78               B     8    				jr z,vm_no_data					00350D 7B                  B     9    				ld a,e
                           B    10    
00350E FE04                B    11    set_vmode		cp 4
003510 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
003512 2A 7A 60 00         B    14    				ld hl,(font_addr)				003516 ED5B 80 60 00       B    15    				ld de,(video_window_address)
00351B ED4B 7D 60 00       B    16    				ld bc,(font_length)
003520 EDB0                B    17    				ldir
                           B    18    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
003522 32 40 60 00         B    19    				ld (video_mode),a
003526 21070000            B    20    				ld hl,7
00352A 67                  B    21    				ld h,a
00352B ED6C                B    22    				mlt hl
00352D E5                  B    23    				push hl
00352E DDE1                B    24    				pop ix
003530 11 89 35 00         B    25    				ld de,mode_param_list
003534 DD19                B    26    				add ix,de
003536 21000000            B    27    				ld hl,0
00353A 11000000            B    28    				ld de,0
00353E DD6E00              B    29    				ld l,(ix)
003541 DD6601              B    30    				ld h,(ix+1)
003544 DD5E02              B    31    				ld e,(ix+2)
003547 DD5603              B    32    				ld d,(ix+3)
00354A DD4604              B    33    				ld b,(ix+4)
00354D DDE5                B    34    				push ix
00354F CD F5 3C 00         B    35    				call set_bitmap_parameters
003553 DDE1                B    36    				pop ix
003555 DD4605              B    37    				ld b,(ix+5)
003558 DD4E06              B    38    				ld c,(ix+6)
00355B CD 5B 3D 00         B    39    				call set_charmap_parameters
                           B    40    				
00355F 2A 80 60 00         B    41    				ld hl,(video_window_address)	003563 ED5B 7A 60 00       B    42    				ld de,(font_addr)				003568 ED4B 7D 60 00       B    43    				ld bc,(font_length)				00356D EDB0                B    44    				ldir
                           B    45    				
00356F CD 14 3E 00         B    46    				call hwsc_clear_screen
                           B    47    				
003573 01080400            B    48    				ld bc,0408h
003577 CD 29 3D 00         B    49    				call set_font_parameters		                           B    50    				
00357B AF                  B    51    				xor a
00357C 32 67 60 00         B    52    				ld (active_cursor_image),a		                           B    53    				
003580 C9                  B    54    				ret
                           B    55    
003581 3E88                B    56    vm_bad_range	ld a,88h
003583 B7                  B    57    				or a
003584 C9                  B    58    				ret
                           B    59    
003585 3E81                B    60    vm_no_data		ld a,81h
003587 B7                  B    61    				or a
003588 C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
003589                     B    66    mode_param_list
                           B    67    
003589 4001E001            B    68    				dw 640/2,480
00358D 00                  B    69    				db 00b
00358E 503C                B    70    				db 80,60
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B    71    				
003590 4001F000            B    72    				dw 640/2,240
003594 01                  B    73    				db 01b
003595 501E                B    74    				db 80,30
                           B    75    				
003597 A000E001            B    76    				dw 320/2,480
00359B 02                  B    77    				db 10b
00359C 283C                B    78    				db 40,60
                           B    79    				
00359E A000F000            B    80    				dw 320/2,240
0035A2 03                  B    81    				db 11b
0035A3 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0035A5                     B     5    os_cmd_font
                           B     6    	
0035A5 CD 79 16 00         B     7    				call os_check_volume_format	
0035A9 C0                  B     8    				ret nz
                           B     9    				
0035AA CD EA 28 00         B    10    				call filename_or_bust			0035AE 22 0B 6A 00         B    11    				ld (scratch_pad),hl
                           B    12    
0035B2 CD 49 1A 00         B    13    				call fs_get_dir_cluster			0035B6 ED53 0E 6A 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
0035BB CD D7 16 00         B    16    				call os_root_dir				0035BF C0                  B    17    				ret nz
0035C0 21 F0 35 00         B    18    				ld hl,fonts_fn
0035C4 CD C7 16 00         B    19    				call os_change_dir
0035C8 20 1A               B    20    				jr nz,no_font
                           B    21    				
0035CA 2A 0B 6A 00         B    22    				ld hl,(scratch_pad)
0035CE CD 0C 16 00         B    23    				call os_find_file				0035D2 20 10               B    24    				jr nz,no_font
                           B    25    				
0035D4 11000700            B    26    				ld de,700h
0035D8 CD 1D 16 00         B    27    				call os_set_load_length			                           B    28    
0035DC 2A 7A 60 00         B    29    				ld hl,(font_addr)				0035E0 CD 3B 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
0035E4 F5                  B    32    no_font			push af
0035E5 ED5B 0E 6A 00       B    33    				ld de,(scratch_pad+3)			0035EA CD 55 1A 00         B    34    				call fs_update_dir_cluster
0035EE F1                  B    35    				pop af
0035EF C9                  B    36    				ret
                           B    37    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    38    ;----------------------------------------------
                           B    39    
0035F0 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
0035F6 7E                  B     8    os_cmd_set		ld a,(hl)					; i
0035F7 B7                  B     9    				or a
0035F8 28 3B               B    10    				jr z,show_envars
                           B    11    
0035FA 11 0E 6A 00         B    12    				ld de,scratch_pad+3			; p
0035FE 7E                  B    13    evsalp1			ld a,(hl)
0035FF 12                  B    14    				ld (de),a
003600 B7                  B    15    				or a
003601 28 2E               B    16    				jr z,set_bad_args
003603 FE3D                B    17    				cp '='
003605 28 04               B    18    				jr z,evsadone1
003607 23                  B    19    				inc hl
003608 13                  B    20    				inc de
003609 18 F3               B    21    				jr evsalp1
00360B AF                  B    22    evsadone1		xor a
00360C 12                  B    23    				ld (de),a
00360D 13                  B    24    				inc de
00360E 23                  B    25    				inc hl
00360F ED53 0B 6A 00       B    26    				ld (scratch_pad),de
                           B    27    
003614 7E                  B    28    evsalp2			ld a,(hl)
003615 12                  B    29    				ld (de),a
003616 FE20                B    30    				cp ' '
003618 28 07               B    31    				jr z,evsadone2
00361A B7                  B    32    				or a
00361B 28 14               B    33    				jr z,set_bad_args
00361D 23                  B    34    				inc hl
00361E 13                  B    35    				inc de
00361F 18 F3               B    36    				jr evsalp2
003621 AF                  B    37    evsadone2		xor a
003622 12                  B    38    				ld (de),a
                           B    39    				
003623 21 0E 6A 00         B    40    				ld hl,scratch_pad+3
003627 ED5B 0B 6A 00       B    41    				ld de,(scratch_pad)
00362C CD 50 1B 00         B    42    				call os_set_envar
003630 C9                  B    43    				ret
                           B    44    
003631 3E82                B    45    set_bad_args	ld a,82h
003633 B7                  B    46    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
003634 C9                  B    47    				ret
                           B    48    				
                           B    49    
003635 21 1F 64 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003639 7E                  B    52    show_envlp		ld a,(hl)
00363A FEFF                B    53    				cp 0ffh
00363C 28 12               B    54    				jr z,set_done
00363E E5                  B    55    				push hl
00363F CD 20 0F 00         B    56    				call os_print_string
003643 CD C0 13 00         B    57    				call os_new_line
003647 E1                  B    58    				pop hl
                           B    59    				
003648 23                  B    60    set_fnl			inc hl
003649 7E                  B    61    				ld a,(hl)
00364A B7                  B    62    				or a
00364B 20 FB               B    63    				jr nz,set_fnl
00364D 23                  B    64    				inc hl
00364E 18 E9               B    65    				jr show_envlp
                           B    66    				
003650 AF                  B    67    set_done		xor a
003651 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003652 FD21 63 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003657 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00365B C3 85 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
00365F 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003663 ED53 F2 36 00       B     6    				ld (aud_per),de
003668 3E40                B     7    				ld a,64
00366A 32 F4 36 00         B     8    				ld (aud_vol),a
00366E 3E11                B     9    				ld a,11h
003670 32 F5 36 00         B    10    				ld (aud_chans),a
                           B    11    				
003674 CD 68 1C 00         B    12    				call hexword_or_bust			003678 20 06               B    13    				jr nz,alocok					00367A CD 49 45 00         B    14    				call hwsc_disable_audio			00367E AF                  B    15    				xor a
00367F C9                  B    16    				ret
003680 ED53 E6 36 00       B    17    alocok			ld (aud_loc),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
003685 ED53 EC 36 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
00368A CD 68 1C 00         B    20    				call hexword_or_bust
00368E 20 04               B    21    				jr nz,gotaudlen
003690 3E8D                B    22    missaudpar		ld a,8dh						003692 B7                  B    23    				or a
003693 C9                  B    24    				ret				
003694 ED53 E9 36 00       B    25    gotaudlen		ld (aud_len),de
003699 ED53 EF 36 00       B    26    				ld (aud_len_loop),de
                           B    27    				
00369E CD 68 1C 00         B    28    				call hexword_or_bust
0036A2 28 33               B    29    				jr z,play_sound
0036A4 7B                  B    30    				ld a,e
0036A5 32 F2 36 00         B    31    				ld (aud_per),a
0036A9 7A                  B    32    				ld a,d
0036AA 32 F3 36 00         B    33    				ld (aud_per+1),a
                           B    34    				
0036AE CD 68 1C 00         B    35    				call hexword_or_bust
0036B2 28 23               B    36    				jr z,play_sound
0036B4 7B                  B    37    				ld a,e
0036B5 32 F4 36 00         B    38    				ld (aud_vol),a
                           B    39    				
0036B9 CD 68 1C 00         B    40    				call hexword_or_bust
0036BD 28 18               B    41    				jr z,play_sound
0036BF 7B                  B    42    				ld a,e
0036C0 32 F5 36 00         B    43    				ld (aud_chans),a
                           B    44    				
0036C4 CD 68 1C 00         B    45    				call hexword_or_bust
0036C8 28 0D               B    46    				jr z,play_sound
0036CA 7B                  B    47    				ld a,e
0036CB B7                  B    48    				or a
0036CC 20 09               B    49    				jr nz,play_sound
0036CE 11010000            B    50    				ld de,1
0036D2 ED53 EF 36 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036D7 21 E6 36 00         B    53    play_sound		ld hl,audio_structure
0036DB 3A F5 36 00         B    54    				ld a,(aud_chans)
0036DF 4F                  B    55    				ld c,a
0036E0 CD FC 44 00         B    56    				call hwsc_play_audio
0036E4 AF                  B    57    				xor a
0036E5 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
0036E6                     B    63    audio_structure
                           B    64    
0036E6 000000              B    65    aud_loc			dw24 0			;loc
0036E9 000000              B    66    aud_len			dw24 0			;len
0036EC 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
0036EF 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
0036F2 FFFF                B    70    aud_per			dw 0ffffh		;per
0036F4 40                  B    71    aud_vol			db 64			;vol
                           B    72    
0036F5 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3083    
0036F6 C9                  A  3084    os_cmd_unused	ret		; <- dummy command, sho
                           A  3085    
                           A  3086    ;----------------------------------------------
                           A  3087    
0036F7                     A  3088    os_get_mem_high
                           A  3089    
0036F7 2A 28 62 00         A  3090    		ld hl,(sys_ram_high)
0036FB ED5B 2B 62 00       A  3091    		ld de,(vram_a_high)
003700 ED4B 2E 62 00       A  3092    		ld bc,(vram_b_high)
003705 AF                  A  3093    		xor a
003706 C9                  A  3094    		ret
                           A  3095    								
                           A  3096    ;----------------------------------------------
                           A  3097    ; Drivers
                           A  3098    ;----------------------------------------------
                           A  3099    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
003707                     B    49    sd_card_driver				; label of driver c
                           B    50    
003707 C3 1B 37 00         B    51    	jp sdc_get_id			; $00 : init / get 
00370B C3 E5 38 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
00370F C3 35 39 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
003713 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
00371B                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
00371B 3E01                B    72    				ld a,1							00371D 32 6B 3A 00         B    73    				ld (sdc_sdc),a			
                           B    74    
003721 CD B2 3A 00         B    75    				call sdc_power_off				003725 CD BD 3A 00         B    76    				call sdc_slow_clock				003729 CD 8B 3A 00         B    77    				call sdc_select_card			                           B    78    
00372D 11004000            B    79    				ld de,16384						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003731 CD 54 42 00         B    80    				call hwsc_time_delay
                           B    81    				
003735 CD A7 3A 00         B    82    				call sdc_power_on				                           B    83    
003739 11830000            B    84    				ld de,131						00373D CD 54 42 00         B    85    				call hwsc_time_delay
                           B    86    
003741 CD 96 3A 00         B    87    				call sdc_deselect_card			                           B    88    	
003745 060A                B    89    				ld b,10							003747 CD 23 3A 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
00374B 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
00374D CD 8B 3A 00         B    93    				call sdc_select_card			                           B    94    	
003751 3E40                B    95    				ld a,040h						003753 01009500            B    96    				ld bc,09500h					003757 11000000            B    97    				ld de,00000h
00375B CD D1 39 00         B    98    				call sdc_send_command		 
00375F CD 7C 3A 00         B    99    				call sdc_get_byte				003763 CD F6 39 00         B   100    				call sdc_wait_ncr				003767 EE01                B   101    				xor 01h							003769 C2 2A 3A 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
00376D 01401F00            B   105    				ld bc,8000						003771 C5                  B   106    sdc_iwl			push bc							003772 3E77                B   107    				ld a,077h						003774 CD C9 39 00         B   108    				call sdc_send_command_null_args
003778 CD 7C 3A 00         B   109    				call sdc_get_byte				00377C CD 7C 3A 00         B   110    				call sdc_get_byte				003780 3E69                B   111    				ld a,069h						003782 CD C9 39 00         B   112    				call sdc_send_command_null_args
003786 CD 7C 3A 00         B   113    				call sdc_get_byte
00378A C1                  B   114    				pop bc
00378B CD F6 39 00         B   115    				call sdc_wait_ncr				00378F CB57                B   116    				bit 2,a							003791 20 0C               B   117    				jr nz,mmc_init			
003793 B7                  B   118    				or a
003794 28 2A               B   119    				jr z,sdc_init_done				003796 0B                  B   120    				dec bc
003797 78                  B   121    				ld a,b
003798 B1                  B   122    				or c
003799 20 D6               B   123    				jr nz,sdc_iwl
00379B C3 38 3A 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
00379F AF                  B   127    mmc_init		xor a							0037A0 32 6B 3A 00         B   128    				ld (sdc_sdc),a
0037A4 01401F00            B   129    				ld bc,8000						0037A8 C5                  B   130    mmc_iwl			push bc
0037A9 3E41                B   131    				ld a,041h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0037AB CD C9 39 00         B   132    				call sdc_send_command_null_args
0037AF C1                  B   133    				pop bc
0037B0 CD F6 39 00         B   134    				call sdc_wait_ncr				0037B4 B7                  B   135    				or a							0037B5 28 09               B   136    				jr z,sdc_init_done
0037B7 0B                  B   137    				dec bc
0037B8 78                  B   138    				ld a,b
0037B9 B1                  B   139    				or c
0037BA 20 EC               B   140    				jr nz,mmc_iwl
0037BC C3 34 3A 00         B   141    				jp mmc_init_fail
                           B   142    
0037C0                     B   143    sdc_init_done
                           B   144    
0037C0 3E49                B   145    				ld a,049h						0037C2 CD C9 39 00         B   146    				call sdc_send_command_null_args
0037C6 CD F6 39 00         B   147    				call sdc_wait_ncr				0037CA B7                  B   148    				or a							0037CB C2 3C 3A 00         B   149    				jp nz,sdc_id_fail
0037CF CD 0A 3A 00         B   150    				call sdc_wait_data_token		0037D3 B7                  B   151    				or a
0037D4 C2 3C 3A 00         B   152    				jp nz,sdc_id_fail
0037D8 21 0B 68 00         B   153    				ld hl,sector_buffer				0037DC CD D2 38 00         B   154    				call sdc_read_id_bytes	
                           B   155    
0037E0 3E4A                B   156    				ld a,04ah						0037E2 CD C9 39 00         B   157    				call sdc_send_command_null_args
0037E6 CD F6 39 00         B   158    				call sdc_wait_ncr				0037EA B7                  B   159    				or a							0037EB C2 3C 3A 00         B   160    				jp nz,sdc_id_fail
0037EF CD 0A 3A 00         B   161    				call sdc_wait_data_token		0037F3 B7                  B   162    				or a
0037F4 C2 3C 3A 00         B   163    				jp nz,sdc_id_fail
0037F8 21 1B 68 00         B   164    				ld hl,sector_buffer+16			0037FC CD D2 38 00         B   165    				call sdc_read_id_bytes
003800 CD 96 3A 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
003804                     B   169    sdc_quit	
                           B   170    
003804 21 1E 68 00         B   171    				ld hl,sector_buffer+013h		003808 11 2B 68 00         B   172    				ld de,sector_buffer+020h
00380C 01050000            B   173    				ld bc,5
003810 3A 6B 3A 00         B   174    				ld a,(sdc_sdc)
003814 B7                  B   175    				or a
003815 20 01               B   176    				jr nz,sdc_cn5
003817 03                  B   177    				inc bc
003818 EDB0                B   178    sdc_cn5			ldir
00381A E5                  B   179    				push hl
00381B D5                  B   180    				push de
00381C 21 50 3A 00         B   181    				ld hl,sdc_vnchars
003820 011A0000            B   182    				ld bc,26
003824 EDB0                B   183    				ldir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003826 D1                  B   184    				pop de
003827 E1                  B   185    				pop hl
003828 13                  B   186    				inc de
003829 13                  B   187    				inc de
00382A 7E                  B   188    				ld a,(hl)
00382B CB3F                B   189    				srl a
00382D CB3F                B   190    				srl a
00382F CB3F                B   191    				srl a
003831 CB3F                B   192    				srl a
003833 C630                B   193    				add a,030h						003835 12                  B   194    				ld (de),a
003836 13                  B   195    				inc de
003837 13                  B   196    				inc de
003838 7E                  B   197    				ld a,(hl)
003839 E60F                B   198    				and 0fh
00383B C630                B   199    				add a,030h
00383D 12                  B   200    				ld (de),a						00383E 13                  B   201    				inc de
00383F 13                  B   202    				inc de
003840 13                  B   203    				inc de
003841 13                  B   204    				inc de
003842 13                  B   205    				inc de
003843 23                  B   206    				inc hl
003844 0604                B   207    				ld b,4
003846 7E                  B   208    sdc_snulp		ld a,(hl)						003847 CB3F                B   209    				srl a
003849 CB3F                B   210    				srl a
00384B CB3F                B   211    				srl a
00384D CB3F                B   212    				srl a
00384F C630                B   213    				add a,030h
003851 FE3A                B   214    				cp 03ah
003853 38 02               B   215    				jr c,sdc_hvl1
003855 C607                B   216    				add a,07h
003857 12                  B   217    sdc_hvl1		ld (de),a
003858 13                  B   218    				inc de
003859 7E                  B   219    				ld a,(hl)
00385A E60F                B   220    				and 0fh
00385C C630                B   221    				add a,030h
00385E FE3A                B   222    				cp 03ah
003860 38 02               B   223    				jr c,sdc_hvl2
003862 C607                B   224    				add a,07h
003864 12                  B   225    sdc_hvl2		ld (de),a
003865 13                  B   226    				inc de
003866 23                  B   227    				inc hl
003867 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
003869 DD21 0B 68 00       B   232    				ld ix,sector_buffer				00386E DD7E06              B   233    				ld a,(ix+6)
003871 E603                B   234    				and 00000011b
003873 57                  B   235    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003874 DD5E07              B   236    				ld e,(ix+7)
003877 DD7E08              B   237    				ld a,(ix+8)
00387A E6C0                B   238    				and 11000000b
00387C CB27                B   239    				sla a
00387E CB13                B   240    				rl e
003880 CB12                B   241    				rl d
003882 CB27                B   242    				sla a
003884 CB13                B   243    				rl e
003886 CB12                B   244    				rl d							                           B   245    	
003888 DD7E09              B   246    				ld a,(ix+9)
00388B E603                B   247    				and 00000011b
00388D 47                  B   248    				ld b,a
00388E DD7E0A              B   249    				ld a,(ix+10)
003891 E680                B   250    				and 10000000b
003893 CB27                B   251    				sla a
003895 CB10                B   252    				rl b							                           B   253    	
003897 04                  B   254    				inc b
003898 04                  B   255    				inc b
003899 21000000            B   256    				ld hl,0
00389D CB23                B   257    sdc_cmsh		sla e
00389F CB12                B   258    				rl d
0038A1 CB15                B   259    				rl l
0038A3 CB14                B   260    				rl h
0038A5 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
0038A7 DD7E05              B   263    				ld a,(ix+5)
0038AA E60F                B   264    				and 00001111b					0038AC 28 17               B   265    				jr z,sdc_nbls
0038AE 47                  B   266    				ld b,a
0038AF CB23                B   267    sdc_blsh		sla e
0038B1 CB12                B   268    				rl d
0038B3 CB15                B   269    				rl l
0038B5 CB14                B   270    				rl h
0038B7 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
0038B9 0609                B   273    				ld b,9							0038BB CB3C                B   274    sdc_cbsec		srl h
0038BD CB1D                B   275    				rr l
0038BF CB1A                B   276    				rr d
0038C1 CB1B                B   277    				rr e
0038C3 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
0038C5 E5                  B   280    sdc_nbls		push hl
0038C6 C1                  B   281    				pop bc							0038C7 21 2B 68 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
0038CB CD C8 3A 00         B   284    				call sdc_fast_clock				0038CF AF                  B   285    				xor a
0038D0 37                  B   286    				scf
0038D1 C9                  B   287    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
0038D2                     B   292    sdc_read_id_bytes
                           B   293    
0038D2 0610                B   294    				ld b,16
0038D4 CD 7C 3A 00         B   295    sdc_csdlp		call sdc_get_byte
0038D8 77                  B   296    				ld (hl),a
0038D9 23                  B   297    				inc hl
0038DA 10 F8               B   298    				djnz sdc_csdlp
0038DC CD 7C 3A 00         B   299    				call sdc_get_byte				0038E0 CD 7C 3A 00         B   300    				call sdc_get_byte				0038E4 C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
0038E5                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
0038E5 CD 8B 3A 00         B   310    				call sdc_select_card
                           B   311    
0038E9 21 B9 62 00         B   312    				ld hl,sector_lba0
0038ED 5E                  B   313    				ld e,(hl)						0038EE 23                  B   314    				inc hl
0038EF 56                  B   315    				ld d,(hl)
0038F0 23                  B   316    				inc hl
0038F1 4E                  B   317    				ld c,(hl)
0038F2 CB23                B   318    				sla e							0038F4 CB12                B   319    				rl d
0038F6 CB11                B   320    				rl c
0038F8 3E51                B   321    				ld a,051h						0038FA 0601                B   322    				ld b,001h						0038FC CD D1 39 00         B   323    				call sdc_send_command		
003900 CD F6 39 00         B   324    				call sdc_wait_ncr				003904 B7                  B   325    				or a							003905 C2 40 3A 00         B   326    				jp nz,sdc_bcr_error			
003909 CD 0A 3A 00         B   327    				call sdc_wait_data_token		00390D B7                  B   328    				or a
00390E C2 44 3A 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
003912 21 0B 68 00         B   331    				ld hl,sector_buffer				003916 0600                B   332    				ld b,0
003918 CD 7C 3A 00         B   333    sdc_rslp		call sdc_get_byte
00391C 77                  B   334    				ld (hl),a
00391D 23                  B   335    				inc hl
00391E CD 7C 3A 00         B   336    				call sdc_get_byte
003922 77                  B   337    				ld (hl),a
003923 23                  B   338    				inc hl
003924 10 F2               B   339    				djnz sdc_rslp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003926 CD 7C 3A 00         B   340    				call sdc_get_byte				00392A CD 7C 3A 00         B   341    				call sdc_get_byte				                           B   342    
00392E CD 96 3A 00         B   343    				call sdc_deselect_card
003932 AF                  B   344    				xor a
003933 37                  B   345    				scf
003934 C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
003935                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
003935 CD 8B 3A 00         B   354    				call sdc_select_card
                           B   355    
003939 21 B9 62 00         B   356    				ld hl,sector_lba0
00393D 5E                  B   357    				ld e,(hl)						00393E 23                  B   358    				inc hl
00393F 56                  B   359    				ld d,(hl)
003940 23                  B   360    				inc hl
003941 4E                  B   361    				ld c,(hl)
003942 CB23                B   362    				sla e							003944 CB12                B   363    				rl d
003946 CB11                B   364    				rl c
003948 3E58                B   365    				ld a,058h						00394A 0601                B   366    				ld b,001h						00394C CD D1 39 00         B   367    				call sdc_send_command		
003950 CD F6 39 00         B   368    				call sdc_wait_ncr				003954 B7                  B   369    				or a							003955 C2 40 3A 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
003959 CD 23 3A 00         B   372    				call sdc_send_eight_clocks		                           B   373    
00395D 3EFE                B   374    				ld a,0feh
00395F CD 6C 3A 00         B   375    				call sdc_send_byte				                           B   376    
003963 21 0B 68 00         B   377    				ld hl,sector_buffer				003967 0600                B   378    				ld b,0
003969 7E                  B   379    sdc_wslp		ld a,(hl)
00396A CD 6C 3A 00         B   380    				call sdc_send_byte
00396E 23                  B   381    				inc hl
00396F 7E                  B   382    				ld a,(hl)
003970 CD 6C 3A 00         B   383    				call sdc_send_byte
003974 23                  B   384    				inc hl
003975 10 F2               B   385    				djnz sdc_wslp
                           B   386    
003977 CD 23 3A 00         B   387    				call sdc_send_eight_clocks		00397B CD 23 3A 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
00397F CD 7C 3A 00         B   390    				call sdc_get_byte				003983 E61F                B   391    				and 01fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003985 CB3F                B   392    				srl a
003987 FE02                B   393    				cp 002h
003989 C2 48 3A 00         B   394    				jp nz,sdc_write_fail
                           B   395    
00398D 0150C300            B   396    				ld bc,50000						003991 CD 7C 3A 00         B   397    sdc_wcbsy		call sdc_get_byte				003995 FEFF                B   398    				cp 0ffh
003997 28 09               B   399    				jr z,sdc_nbusy
003999 0B                  B   400    				dec bc
00399A 78                  B   401    				ld a,b
00399B B1                  B   402    				or c
00399C 20 F3               B   403    				jr nz,sdc_wcbsy
00399E C3 4C 3A 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
0039A2 3E4D                B   406    sdc_nbusy		ld a,04dh						0039A4 01000100            B   407    				ld bc,0100h			
0039A8 11000000            B   408    				ld de,0000h
0039AC CD D1 39 00         B   409    				call sdc_send_command
0039B0 CD F6 39 00         B   410    				call sdc_wait_ncr				0039B4 B7                  B   411    				or a							0039B5 C2 48 3A 00         B   412    				jp nz,sdc_write_fail
0039B9 CD 7C 3A 00         B   413    				call sdc_get_byte				0039BD B7                  B   414    				or a							0039BE C2 48 3A 00         B   415    				jp nz,sdc_write_fail		
0039C2 CD 96 3A 00         B   416    				call sdc_deselect_card			0039C6 AF                  B   417    				xor a
0039C7 37                  B   418    				scf
0039C8 C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
0039C9                     B   423    sdc_send_command_null_args
                           B   424    
0039C9 01000100            B   425    				ld bc,0100h				
0039CD 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
0039D1                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
0039D1 F5                  B   433    				push af				
0039D2 CD 23 3A 00         B   434    				call sdc_send_eight_clocks		0039D6 F1                  B   435    				pop af
                           B   436    
0039D7 CD 6C 3A 00         B   437    				call sdc_send_byte				0039DB 79                  B   438    				ld a,c							0039DC CD 6C 3A 00         B   439    				call sdc_send_byte
0039E0 7A                  B   440    				ld a,d
0039E1 CD 6C 3A 00         B   441    				call sdc_send_byte
0039E5 7B                  B   442    				ld a,e
0039E6 CD 6C 3A 00         B   443    				call sdc_send_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0039EA 3E00                B   444    				ld a,0
0039EC CD 6C 3A 00         B   445    				call sdc_send_byte
0039F0 78                  B   446    				ld a,b							0039F1 CD 6C 3A 00         B   447    				call sdc_send_byte
0039F5 C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
0039F6                     B   452    sdc_wait_ncr
                           B   453    	
0039F6 C5                  B   454    				push bc
0039F7 01000000            B   455    				ld bc,0
0039FB CD 7C 3A 00         B   456    sdc_wncrl		call sdc_get_byte				0039FF CB7F                B   457    				bit 7,a							003A01 28 05               B   458    				jr z,sdc_gcr
003A03 0B                  B   459    				dec bc
003A04 78                  B   460    			 	ld a,b
003A05 B1                  B   461    				or c
003A06 20 F3               B   462    				jr nz,sdc_wncrl
003A08 C1                  B   463    sdc_gcr			pop bc
003A09 C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
003A0A                     B   468    sdc_wait_data_token
                           B   469    
003A0A C5                  B   470    				push bc
003A0B 01000000            B   471    				ld bc,0
003A0F CD 7C 3A 00         B   472    sdc_wdt			call sdc_get_byte				003A13 FEFE                B   473    				cp 0feh
003A15 28 09               B   474    				jr z,sdc_gdt
003A17 0B                  B   475    				dec bc
003A18 78                  B   476    			 	ld a,b
003A19 B1                  B   477    				or c
003A1A 20 F3               B   478    				jr nz,sdc_wdt
003A1C C1                  B   479    				pop bc
003A1D 3E01                B   480    				ld a,1							003A1F C9                  B   481    				ret
                           B   482    
003A20 C1                  B   483    sdc_gdt			pop bc
003A21 AF                  B   484    				xor a							003A22 C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
003A23                     B   489    sdc_send_eight_clocks
                           B   490    
003A23 3EFF                B   491    				ld a,0ffh
003A25 CD 6C 3A 00         B   492    				call sdc_send_byte
003A29 C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   496    	
003A2A                     B   497    init_spi_mode_fail	
                           B   498    
003A2A 3E00                B   499    				ld a,sdc_error_spi_mode_failed
003A2C F5                  B   500    fail_ret		push af
003A2D CD 96 3A 00         B   501    				call sdc_deselect_card
003A31 F1                  B   502    				pop af
003A32 B7                  B   503    				or a
003A33 C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
003A34                     B   508    mmc_init_fail
                           B   509    
003A34 3E01                B   510    				ld a,sdc_error_bad_init_mmc
003A36 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
003A38                     B   515    sdc_init_fail
                           B   516    
003A38 3E02                B   517    				ld a,sdc_error_bad_init
003A3A 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
003A3C                     B   523    sdc_id_fail
                           B   524    
003A3C 3E03                B   525    				ld a,sdc_error_bad_id
003A3E 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
003A40                     B   530    sdc_bcr_error
                           B   531    
003A40 3E04                B   532    				ld a,sdc_error_bad_command_resp
003A42 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
003A44                     B   537    sdc_dt_timeout
                           B   538    
003A44 3E05                B   539    				ld a,sdc_error_data_token_timeo
003A46 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003A48                     B   544    sdc_write_fail
                           B   545    	
003A48 3E07                B   546    				ld a,sdc_error_write_failed
003A4A 18 E0               B   547    				jr fail_ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
003A4C                     B   551    sdc_card_busy_timeout
                           B   552    
003A4C 3E06                B   553    				ld a,sdc_error_write_timeout
003A4E 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
003A50 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
003A58 3A303030 30303030 
003A60 30202020 20202000 
003A68 000000 
                           B   559    
003A6B 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
003A6C                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003A6C C5                  C     9    					push bc
003A6D 01030000            C    10    					ld bc,port_sdc_data
003A71 ED79                C    11    					out (bc),a					                           C    12    	
003A73 0E01                C    13    					ld c,port_hw_flags			003A75 ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
003A78 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
003A7A C1                  C    17    					pop bc
003A7B C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
003A7C                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
003A7C 3EFF                C    26    					ld a,0ffh
003A7E CD 6C 3A 00         C    27    					call sdc_send_byte
003A82 C5                  C    28    					push bc
003A83 01030000            C    29    					ld bc,port_sdc_data
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003A87 ED78                C    30    					in a,(bc)					003A89 C1                  C    31    					pop bc
003A8A C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
003A8B                     C    36    sdc_select_card
                           C    37    	
003A8B C5                  C    38    					push bc
003A8C 01020000            C    39    					ld bc,port_sdc_ctrl
003A90 3E02                C    40    					ld a,1<<sdc_cs				003A92 ED79                C    41    					out (bc),a
003A94 C1                  C    42    					pop bc
003A95 C9                  C    43    					ret
                           C    44    
                           C    45    
003A96                     C    46    sdc_deselect_card
                           C    47    
003A96 C5                  C    48    					push bc
003A97 01020000            C    49    					ld bc,port_sdc_ctrl
003A9B 3E82                C    50    					ld a,080h+(1<<sdc_cs)		003A9D ED79                C    51    					out (bc),a
003A9F C1                  C    52    					pop bc
                           C    53    				
003AA0 3EFF                C    54    					ld a,0ffh					003AA2 CD 6C 3A 00         C    55    					call sdc_send_byte
003AA6 C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
003AA7                     C    60    sdc_power_on
                           C    61    
003AA7 C5                  C    62    					push bc
003AA8 01020000            C    63    					ld bc,port_sdc_ctrl
003AAC 3E81                C    64    					ld a,80h+(1<<sdc_power)		003AAE ED79                C    65    					out (bc),a
003AB0 C1                  C    66    					pop bc
003AB1 C9                  C    67    					ret
                           C    68    	
                           C    69    
003AB2                     C    70    sdc_power_off
                           C    71    	
003AB2 C5                  C    72    					push bc						003AB3 01020000            C    73    					ld bc,port_sdc_ctrl
003AB7 3E01                C    74    					ld a,1<<sdc_power			003AB9 ED79                C    75    					out (bc),a					003ABB C1                  C    76    					pop bc						003ABC C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003ABD                     C    82    sdc_slow_clock
                           C    83    
003ABD C5                  C    84    					push bc
003ABE 01020000            C    85    					ld bc,port_sdc_ctrl
003AC2 3E04                C    86    					ld a,1<<sdc_speed			003AC4 ED79                C    87    					out (bc),a
003AC6 C1                  C    88    					pop bc
003AC7 C9                  C    89    					ret
                           C    90    
                           C    91    
003AC8                     C    92    sdc_fast_clock
                           C    93    	
003AC8 C5                  C    94    					push bc
003AC9 01020000            C    95    					ld bc,port_sdc_ctrl
003ACD 3E84                C    96    					ld a,080h+(1<<sdc_speed)	003ACF ED79                C    97    					out (bc),a
003AD1 C1                  C    98    					pop bc
003AD2 C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3101    
                           A  3102    
                           A  3103    ;----------------------------------------------
                           A  3104    ; IO routines
                           A  3105    ;----------------------------------------------
                           A  3106    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003AD3                     B     5    set_irq_vector
                           B     6    
003AD3 AF                  B     7    				xor a
003AD4 ED47                B     8    				ld i,a
003AD6 3EC3                B     9    				ld a,c3h						003AD8 32320000            B    10    				ld (032h),a	
003ADC 21 0E 3B 00         B    11    				ld hl,int_routine				003AE0 22330000            B    12    				ld (033h),hl
003AE4 C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003AE5 21 27 62 00         B    17    enable_os_irqs	ld hl,devices_connected			003AE9 CB46                B    18    				bit 0,(hl)
003AEB C4 F6 3A 00         B    19    				call nz,enable_kb_irq
003AEF CB4E                B    20    				bit 1,(hl)
003AF1 C4 FC 3A 00         B    21    				call nz,enable_ms_irq
003AF5 C9                  B    22    				ret
                           B    23    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    24    
003AF6 3E81                B    25    enable_kb_irq	ld a,10000001b
003AF8 ED3905              B    26    				out0 (port_irq_ctrl),a			003AFB C9                  B    27    				ret
                           B    28    
003AFC 3E82                B    29    enable_ms_irq	ld a,10000010b
003AFE ED3905              B    30    				out0 (port_irq_ctrl),a			003B01 C9                  B    31    				ret
                           B    32    
003B02 3E02                B    33    disable_ms_irq	ld a,00000010b
003B04 ED3905              B    34    				out0 (port_irq_ctrl),a			003B07 C9                  B    35    				ret
                           B    36    
003B08 3E3F                B    37    disable_irqs	ld a,00111111b
003B0A ED3905              B    38    				out0 (port_irq_ctrl),a			003B0D C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003B0E                     B    44    int_routine
003B0E F5                  B    45    				push af							003B0F ED3807              B    46    				in0 a,(port_ps2_ctrl)			003B12 CB67                B    47    				bit 4,a
003B14 C4 26 3B 00         B    48    				call nz,kb_interrupt_handler
003B18 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003B1B CB6F                B    50    				bit 5,a
003B1D C4 C8 3B 00         B    51    				call nz,ms_interrupt_handler
003B21 F1                  B    52    				pop af
                           B    53    
003B22 FB                  B    54    				ei								003B23 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003B26                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    76    
003B26 E5                  B    77    				push hl							003B27 C5                  B    78    				push bc
                           B    79    				
003B28 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003B2B 47                  B    81    				ld b,a
                           B    82    
003B2C 3A EF 63 00         B    83    				ld a,(key_release_mode)
003B30 B7                  B    84    				or a
003B31 28 20               B    85    				jr z,key_pressed
                           B    86    			
003B33 78                  B    87    				ld a,b							003B34 FEE0                B    88    				cp 0e0h							003B36 28 61               B    89    				jr z,kirq_done	
003B38 FEE1                B    90    				cp 0e1h
003B3A 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003B3C CD A3 3B 00         B    93    				call qualifiers					003B40 7D                  B    94    				ld a,l
003B41 2F                  B    95    				cpl
003B42 6F                  B    96    				ld l,a
003B43 3A F1 63 00         B    97    				ld a,(key_mod_flags)
003B47 A5                  B    98    				and l							003B48 32 F1 63 00         B    99    				ld (key_mod_flags),a
003B4C AF                  B   100    				xor a
003B4D 32 EF 63 00         B   101    				ld (key_release_mode),a
003B51 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003B53 78                  B   105    key_pressed		ld a,b							003B54 FEE0                B   106    				cp 0e0h							003B56 28 41               B   107    				jr z,kirq_done	
003B58 FEE1                B   108    				cp 0e1h
003B5A 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003B5C FEF0                B   111    				cp 0f0h							003B5E 20 08               B   112    				jr nz,not_krel
003B60 3E01                B   113    				ld a,1							003B62 32 EF 63 00         B   114    				ld (key_release_mode),a			003B66 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003B68 CD A3 3B 00         B   118    not_krel		call qualifiers					003B6C 3A F1 63 00         B   119    				ld a,(key_mod_flags)			003B70 B5                  B   120    				or l
003B71 32 F1 63 00         B   121    				ld (key_mod_flags),a			003B75 68                  B   122    				ld l,b
003B76 01000000            B   123    				ld bc,0
003B7A 3A ED 63 00         B   124    				ld a,(key_buf_wr_idx)
003B7E 4F                  B   125    				ld c,a
003B7F 7D                  B   126    				ld a,l
003B80 21 CD 63 00         B   127    				ld hl,scancode_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003B84 09                  B   128    				add hl,bc
003B85 77                  B   129    				ld (hl),a						003B86 0E10                B   130    				ld c,16
003B88 09                  B   131    				add hl,bc
003B89 3A F1 63 00         B   132    				ld a,(key_mod_flags)			003B8D 77                  B   133    				ld (hl),a	
003B8E 3A ED 63 00         B   134    				ld a,(key_buf_wr_idx)
003B92 3C                  B   135    				inc a
003B93 E60F                B   136    				and 15
003B95 32 ED 63 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003B99 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003B9C CB67                B   140    				bit 4,a	
003B9E 20 88               B   141    				jr nz,key_loop
                           B   142    
003BA0 C1                  B   143    				pop bc
003BA1 E1                  B   144    				pop hl
003BA2 C9                  B   145    				ret
                           B   146    
                           B   147    
003BA3 2E40                B   148    qualifiers		ld l,040h		;apps
003BA5 FE2F                B   149    				cp 02fh
003BA7 C8                  B   150    				ret z
                           B   151    			
003BA8 2E20                B   152    				ld l,020h		;r gui
003BAA FE27                B   153    				cp 027h
003BAC C8                  B   154    				ret z
                           B   155    			
003BAD 2E10                B   156    				ld l,010h		;r shift
003BAF FE59                B   157    				cp 059h
003BB1 C8                  B   158    				ret z
                           B   159    			
003BB2 2E08                B   160    				ld l,08h		; alt
003BB4 FE11                B   161    				cp 011h
003BB6 C8                  B   162    				ret z
                           B   163    			
003BB7 2E04                B   164    				ld l,04h		; l gui
003BB9 FE1F                B   165    				cp 01fh
                           B   166    			
003BBB 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003BBD FE14                B   168    				cp 14h
003BBF C8                  B   169    				ret z
                           B   170    			
003BC0 2E01                B   171    				ld l,01h		;l shift
003BC2 FE12                B   172    				cp 12h
003BC4 C8                  B   173    				ret z
                           B   174    				
003BC5 2E00                B   175    				ld l,0
003BC7 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   180    ;----------------------------------------------
                           B   181    
003BC8                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003BC8 C5                  B   198    				push bc							003BC9 D5                  B   199    				push de							003BCA E5                  B   200    				push hl							                           B   201    							
003BCB 11000000            B   202    ms_loop			ld de,0		
003BCF 3A FB 63 00         B   203    				ld a,(mouse_packet_index)		003BD3 5F                  B   204    				ld e,a
003BD4 21 F7 63 00         B   205    				ld hl,mouse_packet	
003BD8 19                  B   206    				add hl,de
003BD9 ED3806              B   207    				in0 a,(port_mouse_data)
003BDC 77                  B   208    				ld (hl),a
                           B   209    								
003BDD 21 F6 63 00         B   210    				ld hl,mouse_packet_size
003BE1 1C                  B   211    				inc e							003BE2 7B                  B   212    				ld a,e
003BE3 BE                  B   213    				cp (hl)
003BE4 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003BE6 3A F7 63 00         B   216    				ld a,(mouse_packet)				003BEA 4F                  B   217    				ld c,a	
003BEB E607                B   218    				and 0111b
003BED 32 FC 63 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003BF1 11000000            B   221    				ld de,0							003BF5 CB61                B   222    				bit 4,c
003BF7 28 01               B   223    				jr z,mxsignpos
003BF9 1B                  B   224    				dec de
003BFA 3A F8 63 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003BFE 5F                  B   226    				ld e,a
003BFF 2A FD 63 00         B   227    				ld hl,(mouse_disp_x)
003C03 19                  B   228    				add hl,de
003C04 22 FD 63 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003C08 11000000            B   231    				ld de,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C0C CB69                B   232    				bit 5,c
003C0E 28 01               B   233    				jr z,mysignpos
003C10 1B                  B   234    				dec de
003C11 3A F9 63 00         B   235    mysignpos		ld a,(mouse_packet+2)
003C15 5F                  B   236    				ld e,a
003C16 2A 00 64 00         B   237    				ld hl,(mouse_disp_y)			003C1A AF                  B   238    				xor a							003C1B ED52                B   239    				sbc hl,de
003C1D 22 00 64 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003C21 21 FA 63 00         B   242    				ld hl,mouse_packet+3			003C25 3A 03 64 00         B   243    				ld a,(mouse_wheel)
003C29 86                  B   244    				add a,(hl)
003C2A 32 03 64 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003C2E 3E01                B   247    				ld a,1
003C30 32 04 64 00         B   248    				ld (mouse_updated),a			                           B   249    				
003C34 AF                  B   250    				xor a
003C35 32 FB 63 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003C39 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003C3C CB6F                B   254    				bit 5,a
003C3E 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003C40 E1                  B   257    				pop hl
003C41 D1                  B   258    				pop de
003C42 C1                  B   259    				pop bc
003C43 C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
003C44                     B   266    nmi_routine
003C44 CD 39 13 00         B   267    				call os_store_CPU_regs
                           B   268    				
003C48 21000000            B   269    				ld hl,0
003C4C 39                  B   270    				add hl,sp
003C4D 7E                  B   271    				ld a,(hl)						003C4E E601                B   272    				and 1
003C50 32 55 62 00         B   273    				ld (store_adl),a
003C54 20 0A               B   274    				jr nz,adl_freeze
003C56 23                  B   275    				inc hl
003C57 5E                  B   276    				ld e,(hl)						003C58 23                  B   277    				inc hl
003C59 56                  B   278    				ld d,(hl)
003C5A CD 92 15 00         B   279    				call mbase_de
003C5E 18 02               B   280    				jr got_pc
                           B   281    				
003C60 33                  B   282    adl_freeze		inc sp
003C61 D1                  B   283    				pop de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C62 ED53 4B 62 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
003C67 CD 90 3C 00         B   286    				call disable_nmi
003C6B ED3906              B   287    				out0 (port_nmi_ack),a			003C6E 3E01                B   288    				ld a,1
003C70 32 25 62 00         B   289    				ld (frozen),a
003C74 C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
003C78                     B   311    set_nmi_vector
                           B   312    
003C78 3EC3                B   313    				ld a,0c3h						003C7A 32660000            B   314    				ld (066h),a
003C7E 21 44 3C 00         B   315    				ld hl,nmi_routine				003C82 22670000            B   316    				ld (067h),hl
003C86 C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
                           B   320    
003C87 ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			003C8A 3EC0                B   322    				ld a,11000000b					003C8C ED3905              B   323    				out0 (port_irq_ctrl),a
003C8F C9                  B   324    				ret
                           B   325    
003C90 3E40                B   326    disable_nmi		ld a,01000000b					003C92 ED3905              B   327    				out0 (port_irq_ctrl),a
003C95 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B     4    		
003C96                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003C96 C5                  B    10    				push bc
003C97 3A B2 60 00         B    11    				ld a,(serial_timeout)
003C9B 47                  B    12    				ld b,a
003C9C 3ECC                B    13    rx_set_timer	ld a,cch
003C9E ED3981              B    14    				out0 (TMR0_RR_L),a				003CA1 3E0C                B    15    				ld a,0ch
003CA3 ED3982              B    16    				out0 (TMR0_RR_H),a				003CA6 3E03                B    17    				ld a,00000011b					003CA8 ED3980              B    18    				out0 (TMR0_CTL),a				003CAB ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003CAE 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003CB0 ED7401              B    22    				tstio 1							003CB3 20 0E               B    23    				jr nz,rx_in_buffer
003CB5 AF                  B    24    				xor a
003CB6 B0                  B    25    				or b
003CB7 28 13               B    26    				jr z,rx_time_out
003CB9 0E80                B    27    				ld c,TMR0_CTL	
003CBB ED7480              B    28    				tstio 128						003CBE 28 EE               B    29    				jr z,rx_byte_lp		
003CC0 05                  B    30    				dec b
003CC1 18 D9               B    31    				jr rx_set_timer
                           B    32    
003CC3 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003CC7 ED78                B    34    				in a,(bc)						003CC9 C1                  B    35    				pop bc
003CCA BF                  B    36    				cp a							003CCB C9                  B    37    				ret
                           B    38    
003CCC C1                  B    39    rx_time_out		pop bc
003CCD 3E83                B    40    				ld a,083h						003CCF B7                  B    41    				or a							003CD0 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003CD1                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003CD1 C5                  B    52    				push bc
003CD2 0EC5                B    53    				ld c,UART0_LSR					003CD4 ED7420              B    54    rs232_swait		tstio 020h						003CD7 28 FB               B    55    				jr z,rs232_swait
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003CD9 01C00000            B    56    				ld bc,UART0_THR
003CDD ED79                B    57    				out (c),a						003CDF C1                  B    58    				pop bc
003CE0 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003CE1                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003CE1 7A                  B    68    				ld a,d
003CE2 CD D1 3C 00         B    69    				call send_serial_byte
003CE6 7B                  B    70    				ld a,e
003CE7 CD D1 3C 00         B    71    				call send_serial_byte
003CEB C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003CEC                     B    76    hwsc_flush_serial_buffer
                           B    77    
003CEC C5                  B    78    				push bc
003CED 01C00000            B    79    				ld bc,UART0_RBR
003CF1 ED78                B    80    				in a,(bc)						003CF3 C1                  B    81    				pop bc
003CF4 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
003CF5                     B     6    set_bitmap_parameters
                           B     7    				
003CF5 78                  B     8    				ld a,b
003CF6 32 95 60 00         B     9    				ld (window_pixel_doubling),a
003CFA 22 6E 60 00         B    10    				ld (window_width_bytes),hl		003CFE ED53 71 60 00       B    11    				ld (window_height_lines),de
                           B    12    			
003D03 21000080            B    13    				ld hl,vram_a_addr				003D07 22 80 60 00         B    14    				ld (video_window_address),hl
003D0B 21000000            B    15    				ld hl,0
003D0F ED5B 6E 60 00       B    16    				ld de,(window_width_bytes)
003D14 ED4B 71 60 00       B    17    				ld bc,(window_height_lines)
003D19 19                  B    18    cwsblp			add hl,de
003D1A 0B                  B    19    				dec bc
003D1B 78                  B    20    				ld a,b
003D1C B1                  B    21    				or c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D1D 20 FA               B    22    				jr nz,cwsblp
003D1F 22 8C 60 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
003D23 CD B4 3D 00         B    25    				call os_set_video_hw_regs
                           B    26    				
003D27 AF                  B    27    				xor a
003D28 C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
003D29                     B    32    set_font_parameters
                           B    33    
003D29 78                  B    34    				ld a,b							003D2A 32 74 60 00         B    35    				ld (font_width_bytes),a
003D2E 79                  B    36    				ld a,c
003D2F 32 77 60 00         B    37    				ld (font_height_lines),a		003D33 11000000            B    38    				ld de,0
003D37 59                  B    39    				ld e,c
003D38 50                  B    40    				ld d,b
003D39 ED5C                B    41    				mlt de
003D3B 21000000            B    42    				ld hl,0
003D3F 0638                B    43    				ld b,224/4						003D41 19                  B    44    cfslp			add hl,de
003D42 10 FD               B    45    				djnz cfslp
003D44 22 7D 60 00         B    46    				ld (font_length),hl
                           B    47    							
003D48 41                  B    48    				ld b,c
003D49 21000000            B    49    				ld hl,0
003D4D ED5B 6E 60 00       B    50    				ld de,(window_width_bytes)
003D52 19                  B    51    csualp			add hl,de
003D53 10 FD               B    52    				djnz csualp
003D55 22 92 60 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
003D59 AF                  B    55    				xor a
003D5A C9                  B    56    				ret
                           B    57    				
                           B    58    				
                           B    59    
003D5B                     B    60    set_charmap_parameters
                           B    61    
003D5B 79                  B    62    				ld a,c
003D5C 32 68 60 00         B    63    				ld (window_rows),a
003D60 78                  B    64    				ld a,b
003D61 32 6B 60 00         B    65    				ld (window_columns),a
                           B    66    				
003D65 2A 80 60 00         B    67    				ld hl,(video_window_address)
003D69 ED5B 8C 60 00       B    68    				ld de,(total_window_bytes)
003D6E 19                  B    69    				add hl,de
003D6F 22 83 60 00         B    70    				ld (charmap_address),hl
                           B    71    
003D73 11000000            B    72    				ld de,0
003D77 3A 68 60 00         B    73    				ld a,(window_rows)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D7B 5F                  B    74    				ld e,a
003D7C 3A 6B 60 00         B    75    				ld a,(window_columns)
003D80 57                  B    76    				ld d,a
003D81 ED5C                B    77    				mlt de
003D83 ED53 8F 60 00       B    78    				ld (total_charmap_bytes),de
003D88 19                  B    79    				add hl,de
003D89 22 86 60 00         B    80    				ld (attributes_address),hl
003D8D 19                  B    81    				add hl,de
003D8E 22 89 60 00         B    82    				ld (cursor_image_address),hl
003D92 11000000            B    83    				ld de,0
003D96 3A 77 60 00         B    84    				ld a,(font_height_lines)
003D9A 5F                  B    85    				ld e,a
003D9B 3A 74 60 00         B    86    				ld a,(font_width_bytes)
003D9F 57                  B    87    				ld d,a
003DA0 D5                  B    88    				push de
003DA1 ED5C                B    89    				mlt de
003DA3 19                  B    90    				add hl,de
003DA4 22 7A 60 00         B    91    				ld (font_addr),hl
003DA8 D1                  B    92    				pop de
003DA9 16E0                B    93    				ld d,224
003DAB ED5C                B    94    				mlt de
003DAD 19                  B    95    				add hl,de				
003DAE 22 2B 62 00         B    96    				ld (vram_a_high),hl
003DB2 AF                  B    97    				xor a
003DB3 C9                  B    98    				ret
                           B    99    				
                           B   100    
003DB4                     B   101    os_set_video_hw_regs
                           B   102    
003DB4 DD210018 FF         B   103    				ld ix,video_control				003DB9 3A 95 60 00         B   104    				ld a,(window_pixel_doubling)
003DBD CB27                B   105    				sla a
003DBF F601                B   106    				or 1
003DC1 DD7700              B   107    				ld (ix),a						003DC4 DD360100            B   108    				ld (ix+1),0						003DC8 DD360200            B   109    				ld (ix+2),0						003DCC DD360463            B   110    				ld (ix+4),99					                           B   111    
003DD0 DD212010 FF         B   112    				ld ix,bitmap_parameters			003DD5 ED5B 80 60 00       B   113    				ld de,(video_window_address)	003DDA DD1F00              B   114    				ld (ix),de						003DDD DD360401            B   115    				ld (ix+04h),1					003DE1 DD360800            B   116    				ld (ix+08h),0					003DE5 DD360C00            B   117    				ld (ix+0ch),0					003DE9 ED4B 6E 60 00       B   118    				ld bc,(window_width_bytes)		003DEE CB38                B   119    				srl b							003DF0 CB19                B   120    				rr c
003DF2 CB38                B   121    				srl b
003DF4 CB19                B   122    				rr c
003DF6 CB38                B   123    				srl b
003DF8 CB19                B   124    				rr c
003DFA 0D                  B   125    				dec c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003DFB DD7110              B   126    				ld (ix+10h),c
                           B   127    				
003DFE 21 45 60 00         B   128    				ld hl,pen_palette
003E02 CD 08 3E 00         B   129    				call hswc_set_ui_colours
                           B   130    				
003E06 AF                  B   131    				xor a							003E07 C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
                           B   136    				
003E08                     B   137    hswc_set_ui_colours
                           B   138    
003E08 110000FF            B   139    				ld de,hw_palette
003E0C 01200000            B   140    				ld bc,16*2
003E10 EDB0                B   141    				ldir
003E12 AF                  B   142    				xor a							003E13 C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
003E14                     B   148    hwsc_clear_screen
                           B   149    
003E14 2A 80 60 00         B   150    				ld hl,(video_window_address)	003E18 3A 43 60 00         B   151    				ld a,(background_colour)
003E1C E60F                B   152    				and 0fh
003E1E 47                  B   153    				ld b,a
003E1F 07                  B   154    				rlca
003E20 07                  B   155    				rlca
003E21 07                  B   156    				rlca
003E22 07                  B   157    				rlca
003E23 B0                  B   158    				or b
003E24 77                  B   159    				ld (hl),a
003E25 E5                  B   160    				push hl
003E26 D1                  B   161    				pop de
003E27 13                  B   162    				inc de
003E28 ED4B 8C 60 00       B   163    				ld bc,(total_window_bytes)
003E2D 0B                  B   164    				dec bc
003E2E EDB0                B   165    				ldir
                           B   166    				
003E30 2A 86 60 00         B   167    				ld hl,(attributes_address)		003E34 ED4B 8F 60 00       B   168    				ld bc,(total_charmap_bytes)
003E39 0B                  B   169    				dec bc
003E3A 3600                B   170    				ld (hl),0
003E3C E5                  B   171    				push hl
003E3D D1                  B   172    				pop de
003E3E 13                  B   173    				inc de
003E3F EDB0                B   174    				ldir				
                           B   175    
003E41 2A 83 60 00         B   176    				ld hl,(charmap_address)			003E45 ED4B 8F 60 00       B   177    				ld bc,(total_charmap_bytes)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E4A 0B                  B   178    				dec bc
003E4B 3620                B   179    				ld (hl),' '
003E4D E5                  B   180    				push hl
003E4E D1                  B   181    				pop de
003E4F 13                  B   182    				inc de
003E50 EDB0                B   183    				ldir				
                           B   184    
003E52 01000000            B   185    				ld bc,0
003E56 ED43 BD 62 00       B   186    				ld (cursor_y),bc
003E5B AF                  B   187    				xor a							003E5C C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003E5D                     B   193    hwsc_scroll_up	
                           B   194    				
003E5D C5                  B   195    				push bc
003E5E D5                  B   196    				push de
003E5F E5                  B   197    				push hl
                           B   198    
003E60 2A 8C 60 00         B   199    				ld hl,(total_window_bytes)
003E64 ED5B 92 60 00       B   200    				ld de,(total_row_bytes)
003E69 AF                  B   201    				xor a
003E6A ED52                B   202    				sbc hl,de
003E6C E5                  B   203    				push hl
003E6D C1                  B   204    				pop bc							003E6E 2A 80 60 00         B   205    				ld hl,(video_window_address)
003E72 ED5B 92 60 00       B   206    				ld de,(total_row_bytes)
003E77 19                  B   207    				add hl,de						003E78 ED5B 80 60 00       B   208    				ld de,(video_window_address)	003E7D EDB0                B   209    				ldir
                           B   210    				
003E7F EB                  B   211    				ex de,hl						003E80 3A 43 60 00         B   212    				ld a,(background_colour)
003E84 E60F                B   213    				and 0fh
003E86 4F                  B   214    				ld c,a
003E87 07                  B   215    				rlca
003E88 07                  B   216    				rlca
003E89 07                  B   217    				rlca
003E8A 07                  B   218    				rlca
003E8B B1                  B   219    				or c
003E8C 77                  B   220    				ld (hl),a
003E8D ED4B 92 60 00       B   221    				ld bc,(total_row_bytes)
003E92 0B                  B   222    				dec bc
003E93 E5                  B   223    				push hl
003E94 D1                  B   224    				pop de
003E95 13                  B   225    				inc de
003E96 EDB0                B   226    				ldir
                           B   227    
003E98 2A 83 60 00         B   228    				ld hl,(charmap_address)			003E9C ED5B 6B 60 00       B   229    				ld de,(window_columns)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003EA1 19                  B   230    				add hl,de
003EA2 ED5B 83 60 00       B   231    				ld de,(charmap_address)
003EA7 ED4B 68 60 00       B   232    				ld bc,(window_rows)
003EAC 0D                  B   233    				dec c
003EAD 3A 6B 60 00         B   234    				ld a,(window_columns)
003EB1 47                  B   235    				ld b,a
003EB2 ED4C                B   236    				mlt bc
003EB4 C5                  B   237    				push bc
003EB5 EDB0                B   238    				ldir
003EB7 C1                  B   239    				pop bc							                           B   240    
003EB8 2A 83 60 00         B   241    				ld hl,(charmap_address)			003EBC 09                  B   242    				add hl,bc
003EBD 3620                B   243    				ld (hl),' '
003EBF ED4B 6B 60 00       B   244    				ld bc,(window_columns)
003EC4 0B                  B   245    				dec bc
003EC5 E5                  B   246    				push hl
003EC6 D1                  B   247    				pop de
003EC7 13                  B   248    				inc de
003EC8 EDB0                B   249    				ldir
                           B   250    					
003ECA 2A 86 60 00         B   251    				ld hl,(attributes_address)		003ECE ED5B 6B 60 00       B   252    				ld de,(window_columns)
003ED3 19                  B   253    				add hl,de
003ED4 ED5B 86 60 00       B   254    				ld de,(attributes_address)
003ED9 ED4B 68 60 00       B   255    				ld bc,(window_rows)
003EDE 0D                  B   256    				dec c
003EDF 3A 6B 60 00         B   257    				ld a,(window_columns)
003EE3 47                  B   258    				ld b,a
003EE4 ED4C                B   259    				mlt bc
003EE6 C5                  B   260    				push bc
003EE7 EDB0                B   261    				ldir
003EE9 C1                  B   262    				pop bc			
                           B   263    
003EEA 2A 86 60 00         B   264    				ld hl,(attributes_address)		003EEE 09                  B   265    				add hl,bc
003EEF 3600                B   266    				ld (hl),0
003EF1 ED4B 6B 60 00       B   267    				ld bc,(window_columns)
003EF6 0B                  B   268    				dec bc
003EF7 E5                  B   269    				push hl
003EF8 D1                  B   270    				pop de
003EF9 13                  B   271    				inc de
003EFA EDB0                B   272    				ldir
                           B   273    
003EFC E1                  B   274    				pop hl
003EFD D1                  B   275    				pop de
003EFE C1                  B   276    				pop bc
003EFF AF                  B   277    				xor a							003F00 C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
003F01                     B   291    hwsc_plot_char
003F01 E5                  B   292    				push hl							003F02 F5                  B   293    				push af
003F03 3A 41 60 00         B   294    				ld a,(current_pen)
003F07 32 65 60 00         B   295    				ld (plotchar_colour),a
003F0B 18 02               B   296    				jr plotc_go
                           B   297    				
003F0D                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
003F0D E5                  B   300    				push hl
003F0E F5                  B   301    				push af							003F0F 3A 68 60 00         B   302    plotc_go		ld a,(window_rows)				003F13 3D                  B   303    				dec a
003F14 B9                  B   304    				cp c							003F15 38 08               B   305    				jr c,win_err
003F17 3A 6B 60 00         B   306    				ld a,(window_columns)
003F1B 3D                  B   307    				dec a
003F1C B8                  B   308    				cp b
003F1D 30 06               B   309    				jr nc,win_ok
003F1F F1                  B   310    win_err			pop af
003F20 E1                  B   311    				pop hl
003F21 3E82                B   312    				ld a,82h						003F23 B7                  B   313    				or a
003F24 C9                  B   314    				ret
                           B   315    				
003F25 F1                  B   316    win_ok			pop af
003F26 D5                  B   317    				push de
003F27 C5                  B   318    				push bc
003F28 DDE5                B   319    				push ix
003F2A FDE5                B   320    				push iy
003F2C 2A 77 60 00         B   321    				ld hl,(font_height_lines)		003F30 D620                B   322    				sub a,32
003F32 67                  B   323    				ld h,a
003F33 C620                B   324    				add a,32
003F35 ED6C                B   325    				mlt hl							003F37 ED5B 7A 60 00       B   326    				ld de,(font_addr)
003F3C 19                  B   327    				add hl,de
003F3D E5                  B   328    				push hl
003F3E DDE1                B   329    				pop ix							                           B   330    				
003F40 11000000            B   331    				ld de,0
003F44 2A 92 60 00         B   332    				ld hl,(total_row_bytes)			003F48 5D                  B   333    				ld e,l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F49 51                  B   334    				ld d,c
003F4A ED5C                B   335    				mlt de							003F4C 69                  B   336    				ld l,c							003F4D ED6C                B   337    				mlt hl							003F4F 29                  B   338    				add hl,hl						003F50 29                  B   339    				add hl,hl
003F51 29                  B   340    				add hl,hl
003F52 29                  B   341    				add hl,hl
003F53 29                  B   342    				add hl,hl
003F54 29                  B   343    				add hl,hl
003F55 29                  B   344    				add hl,hl
003F56 29                  B   345    				add hl,hl
003F57 19                  B   346    				add hl,de						003F58 ED5B 74 60 00       B   347    				ld de,(font_width_bytes)
003F5D 50                  B   348    				ld d,b	
003F5E ED5C                B   349    				mlt de							003F60 19                  B   350    				add hl,de						003F61 ED5B 80 60 00       B   351    				ld de,(video_window_address)
003F66 19                  B   352    				add hl,de
003F67 E5                  B   353    				push hl
003F68 FDE1                B   354    				pop iy							                           B   355    				
003F6A 2A 6B 60 00         B   356    				ld hl,(window_columns)			003F6E 61                  B   357    				ld h,c							003F6F ED6C                B   358    				mlt hl
003F71 11000000            B   359    				ld de,0
003F75 58                  B   360    				ld e,b
003F76 19                  B   361    				add hl,de
003F77 EB                  B   362    				ex de,hl
003F78 2A 83 60 00         B   363    				ld hl,(charmap_address)
003F7C 19                  B   364    				add hl,de
003F7D 77                  B   365    				ld (hl),a
                           B   366    
003F7E 3A 65 60 00         B   367    				ld a,(plotchar_colour)			003F82 2A 86 60 00         B   368    				ld hl,(attributes_address)
003F86 19                  B   369    				add hl,de
003F87 77                  B   370    				ld (hl),a
                           B   371    
003F88 57                  B   372    				ld d,a				
003F89 E6F0                B   373    				and 0f0h
003F8B 20 0E               B   374    				jr nz,notransbg
003F8D 3A 43 60 00         B   375    				ld a,(background_colour)
003F91 E60F                B   376    				and 0fh
003F93 47                  B   377    				ld b,a
003F94 07                  B   378    				rlca
003F95 07                  B   379    				rlca
003F96 07                  B   380    				rlca
003F97 07                  B   381    				rlca
003F98 4F                  B   382    				ld c,a
003F99 18 06               B   383    				jr gotbg
003F9B 4F                  B   384    notransbg		ld c,a							003F9C 0F                  B   385    				rrca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F9D 0F                  B   386    				rrca
003F9E 0F                  B   387    				rrca
003F9F 0F                  B   388    				rrca
003FA0 47                  B   389    				ld b,a							003FA1 7A                  B   390    gotbg			ld a,d
003FA2 E60F                B   391    				and 0fh
003FA4 20 0E               B   392    				jr nz,notransfg
003FA6 3A 43 60 00         B   393    				ld a,(background_colour)
003FAA E60F                B   394    				and 0fh
003FAC 57                  B   395    				ld d,a
003FAD 07                  B   396    				rlca
003FAE 07                  B   397    				rlca
003FAF 07                  B   398    				rlca
003FB0 07                  B   399    				rlca
003FB1 5F                  B   400    				ld e,a
003FB2 18 06               B   401    				jr gotfg
003FB4 57                  B   402    notransfg		ld d,a							003FB5 07                  B   403    				rlca
003FB6 07                  B   404    				rlca
003FB7 07                  B   405    				rlca
003FB8 07                  B   406    				rlca
003FB9 5F                  B   407    				ld e,a							                           B   408    				
003FBA D9                  B   409    gotfg			exx
003FBB 3A 77 60 00         B   410    				ld a,(font_height_lines)
003FBF 47                  B   411    				ld b,a
003FC0 2A 6E 60 00         B   412    				ld hl,(window_width_bytes)
003FC4 ED5B 74 60 00       B   413    				ld de,(font_width_bytes)
003FC9 AF                  B   414    				xor a
003FCA ED52                B   415    				sbc hl,de
003FCC EB                  B   416    				ex de,hl
                           B   417    						
003FCD D9                  B   418    charloop		exx
003FCE DD6E00              B   419    				ld l,(ix)						003FD1 CB25                B   420    				sla l
003FD3 79                  B   421    				ld a,c
003FD4 30 01               B   422    				jr nc,nbgmsb7
003FD6 7B                  B   423    				ld a,e
003FD7 CB25                B   424    nbgmsb7			sla l
003FD9 30 03               B   425    				jr nc,nfgmsb6
003FDB B2                  B   426    				or d
003FDC 18 01               B   427    				jr gotpixcol76
003FDE B0                  B   428    nfgmsb6			or b
003FDF FD7700              B   429    gotpixcol76		ld (iy),a
003FE2 FD23                B   430    				inc iy
                           B   431    
003FE4 CB25                B   432    				sla l
003FE6 79                  B   433    				ld a,c
003FE7 30 01               B   434    				jr nc,nbgmsb5
003FE9 7B                  B   435    				ld a,e
003FEA CB25                B   436    nbgmsb5			sla l
003FEC 30 03               B   437    				jr nc,nfgmsb4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FEE B2                  B   438    				or d
003FEF 18 01               B   439    				jr gotpixcol54
003FF1 B0                  B   440    nfgmsb4			or b
003FF2 FD7700              B   441    gotpixcol54		ld (iy),a
003FF5 FD23                B   442    				inc iy
                           B   443    				
003FF7 CB25                B   444    				sla l
003FF9 79                  B   445    				ld a,c
003FFA 30 01               B   446    				jr nc,nbgmsb3
003FFC 7B                  B   447    				ld a,e
003FFD CB25                B   448    nbgmsb3			sla l
003FFF 30 03               B   449    				jr nc,nfgmsb2
004001 B2                  B   450    				or d
004002 18 01               B   451    				jr gotpixcol32
004004 B0                  B   452    nfgmsb2			or b
004005 FD7700              B   453    gotpixcol32		ld (iy),a
004008 FD23                B   454    				inc iy
                           B   455    				
00400A CB25                B   456    				sla l
00400C 79                  B   457    				ld a,c
00400D 30 01               B   458    				jr nc,nbgmsb1
00400F 7B                  B   459    				ld a,e
004010 CB25                B   460    nbgmsb1			sla l
004012 30 03               B   461    				jr nc,nfgmsb0
004014 B2                  B   462    				or d
004015 18 01               B   463    				jr gotpixcol10
004017 B0                  B   464    nfgmsb0			or b
004018 FD7700              B   465    gotpixcol10		ld (iy),a
00401B FD23                B   466    				inc iy
                           B   467    				
00401D DD23                B   468    				inc ix
00401F D9                  B   469    				exx
004020 FD19                B   470    				add iy,de
004022 10 A9               B   471    				djnz charloop
004024 D9                  B   472    				exx 
                           B   473    				
004025 FDE1                B   474    				pop iy
004027 DDE1                B   475    				pop ix
004029 C1                  B   476    				pop bc
00402A D1                  B   477    				pop de
00402B E1                  B   478    				pop hl
00402C AF                  B   479    				xor a
00402D C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
00402E                     B   484    hwsc_remove_cursor
                           B   485    
00402E ED4B BD 62 00       B   486    				ld bc,(cursor_y)
004033 CD D6 40 00         B   487    				call hwsc_get_charmap_addr_xy
004037 1A                  B   488    				ld a,(de)
004038 32 65 60 00         B   489    				ld (plotchar_colour),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00403C 7E                  B   490    				ld a,(hl)				
00403D C3 0D 3F 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
004041                     B   494    hwsc_draw_cursor
                           B   495    
004041 21 67 60 00         B   496    				ld hl,active_cursor_image
004045 3A 66 60 00         B   497    				ld a,(req_cursor_image)
004049 BE                  B   498    				cp (hl)
00404A C4 9E 40 00         B   499    				call nz,hwsc_set_cursor_image
                           B   500    
00404E ED4B BD 62 00       B   501    				ld bc,(cursor_y)
004053 2A 92 60 00         B   502    				ld hl,(total_row_bytes)			004057 5D                  B   503    				ld e,l
004058 51                  B   504    				ld d,c
004059 ED5C                B   505    				mlt de
00405B 69                  B   506    				ld l,c
00405C ED6C                B   507    				mlt hl
00405E 29                  B   508    				add hl,hl
00405F 29                  B   509    				add hl,hl
004060 29                  B   510    				add hl,hl
004061 29                  B   511    				add hl,hl
004062 29                  B   512    				add hl,hl
004063 29                  B   513    				add hl,hl
004064 29                  B   514    				add hl,hl
004065 29                  B   515    				add hl,hl
004066 19                  B   516    				add hl,de
004067 ED5B 74 60 00       B   517    				ld de,(font_width_bytes)
00406C 50                  B   518    				ld d,b
00406D ED5C                B   519    				mlt de		
00406F 19                  B   520    				add hl,de						004070 ED5B 80 60 00       B   521    				ld de,(video_window_address)
004075 19                  B   522    				add hl,de						004076 E5                  B   523    				push hl
004077 FDE1                B   524    				pop iy
                           B   525    				
004079 ED4B 77 60 00       B   526    				ld bc,(font_height_lines)
00407E DD2A 89 60 00       B   527    				ld ix,(cursor_image_address)	004083 ED5B 6E 60 00       B   528    				ld de,(window_width_bytes)
                           B   529    
004088 ED2300              B   530    curlp2			lea hl,iy+0
00408B 0604                B   531    				ld b,4							00408D 7E                  B   532    curlp1			ld a,(hl)
00408E DDAE00              B   533    				xor (ix)
004091 77                  B   534    				ld (hl),a
004092 DD23                B   535    				inc ix
004094 23                  B   536    				inc hl
004095 10 F6               B   537    				djnz curlp1
                           B   538    											
004097 FD19                B   539    				add iy,de
004099 0D                  B   540    				dec c
00409A 20 EC               B   541    				jr nz,curlp2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   542    
00409C AF                  B   543    				xor a							00409D C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
                           B   548    
00409E                     B   549    hwsc_set_cursor_image
                           B   550    
00409E 32 67 60 00         B   551    				ld (active_cursor_image),a
0040A2 D620                B   552    				sub a,32						0040A4 2A 77 60 00         B   553    				ld hl,(font_height_lines)
0040A8 67                  B   554    				ld h,a
0040A9 ED6C                B   555    				mlt hl
0040AB ED5B 7A 60 00       B   556    				ld de,(font_addr)
0040B0 19                  B   557    				add hl,de
0040B1 ED5B 89 60 00       B   558    				ld de,(cursor_image_address)	0040B6 3A 77 60 00         B   559    				ld a,(font_height_lines)
0040BA 47                  B   560    				ld b,a
0040BB C5                  B   561    fclp2			push bc
                           B   562    
0040BC 4E                  B   563    				ld c,(hl)
0040BD 0604                B   564    				ld b,4							0040BF 3E00                B   565    fclp1			ld a,0
0040C1 CB21                B   566    				sla c
0040C3 30 02               B   567    				jr nc,nopixl
0040C5 F6F0                B   568    				or a,0f0h						0040C7 CB21                B   569    nopixl			sla c
0040C9 30 02               B   570    				jr nc,nopixr
0040CB F60F                B   571    				or a,0fh
0040CD 12                  B   572    nopixr			ld (de),a
0040CE 13                  B   573    				inc de
0040CF 10 EE               B   574    				djnz fclp1
                           B   575    			
0040D1 23                  B   576    				inc hl
0040D2 C1                  B   577    				pop bc
0040D3 10 E6               B   578    				djnz fclp2
0040D5 C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
0040D6                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
                           B   588    				
0040D6 11000000            B   589    				ld de,0
0040DA 3A 6B 60 00         B   590    				ld a,(window_columns)			0040DE 5F                  B   591    				ld e,a							0040DF 51                  B   592    				ld d,c							0040E0 ED5C                B   593    				mlt de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0040E2 7B                  B   594    				ld a,e
0040E3 80                  B   595    				add a,b
0040E4 5F                  B   596    				ld e,a
0040E5 30 01               B   597    				jr nc,choffh_ok
0040E7 14                  B   598    				inc d
0040E8 2A 83 60 00         B   599    choffh_ok		ld hl,(charmap_address)
0040EC 19                  B   600    				add hl,de
0040ED E5                  B   601    				push hl
0040EE 2A 86 60 00         B   602    				ld hl,(attributes_address)
0040F2 19                  B   603    				add hl,de
0040F3 EB                  B   604    				ex de,hl
0040F4 E1                  B   605    				pop hl
0040F5 AF                  B   606    				xor a							0040F6 C9                  B   607    				ret
                           B   608    								
                           B   609    ;----------------------------------------------
                           B   610    
0040F7                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
0040F7 C5                  B   615    				push bc
0040F8 D5                  B   616    				push de
0040F9 E5                  B   617    				push hl
                           B   618    
0040FA 3A BD 62 00         B   619    				ld a,(cursor_y)
0040FE 2A 6B 60 00         B   620    				ld hl,(window_columns)
004102 67                  B   621    				ld h,a
004103 ED6C                B   622    				mlt hl
004105 11000000            B   623    				ld de,0
004109 58                  B   624    				ld e,b
00410A 19                  B   625    				add hl,de
00410B EB                  B   626    				ex de,hl
00410C D5                  B   627    				push de
00410D 2A 83 60 00         B   628    				ld hl,(charmap_address)
004111 19                  B   629    				add hl,de						                           B   630    
004112 E5                  B   631    				push hl
004113 D1                  B   632    				pop de
004114 1B                  B   633    				dec de							004115 3A 6B 60 00         B   634    				ld a,(window_columns)
004119 90                  B   635    				sub b
00411A 01000000            B   636    				ld bc,0
00411E 4F                  B   637    				ld c,a							00411F C5                  B   638    				push bc
004120 EDB0                B   639    				ldir
004122 C1                  B   640    				pop bc
004123 3E20                B   641    				ld a,32
004125 12                  B   642    				ld (de),a						                           B   643    				
004126 2A 86 60 00         B   644    				ld hl,(attributes_address)		00412A D1                  B   645    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00412B 19                  B   646    				add hl,de
00412C E5                  B   647    				push hl
00412D D1                  B   648    				pop de
00412E 1B                  B   649    				dec de							00412F EDB0                B   650    				ldir							004131 3A 43 60 00         B   651    				ld a,(background_colour)
004135 12                  B   652    				ld (de),a						                           B   653    
004136 CD 9C 41 00         B   654    				call hwsc_redraw_line			                           B   655    
00413A E1                  B   656    				pop hl
00413B D1                  B   657    				pop de
00413C C1                  B   658    				pop bc
00413D C9                  B   659    				ret
                           B   660    
                           B   661    
                           B   662    
00413E                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
00413E C5                  B   667    				push bc
00413F D5                  B   668    				push de
004140 E5                  B   669    				push hl
                           B   670    	
004141 21 BE 62 00         B   671    				ld hl,cursor_x				
004145 3A 6B 60 00         B   672    				ld a,(window_columns)
004149 3D                  B   673    				dec a
00414A BE                  B   674    				cp (hl)			
00414B 28 4B               B   675    				jr z,chright_end
                           B   676    
00414D 46                  B   677    				ld b,(hl)
00414E 11000000            B   678    				ld de,0
004152 57                  B   679    				ld d,a
004153 14                  B   680    				inc d
004154 3A BD 62 00         B   681    				ld a,(cursor_y)
004158 5F                  B   682    				ld e,a
004159 ED5C                B   683    				mlt de
00415B D5                  B   684    				push de 
                           B   685    				
00415C C5                  B   686    				push bc
00415D 2A 83 60 00         B   687    				ld hl,(charmap_address)
004161 ED4B 6B 60 00       B   688    				ld bc,(window_columns)
004166 0B                  B   689    				dec bc
004167 0B                  B   690    				dec bc
004168 09                  B   691    				add hl,bc
004169 C1                  B   692    				pop bc
                           B   693    				
00416A 19                  B   694    				add hl,de						00416B E5                  B   695    				push hl
00416C D1                  B   696    				pop de
00416D 13                  B   697    				inc de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00416E 3A 6B 60 00         B   698    				ld a,(window_columns)
004172 3D                  B   699    				dec a
004173 90                  B   700    				sub b
004174 47                  B   701    				ld b,a
004175 C5                  B   702    				push bc							004176 7E                  B   703    mchrlp			ld a,(hl)
004177 12                  B   704    				ld (de),a
004178 2B                  B   705    				dec hl
004179 1B                  B   706    				dec de
00417A 10 FA               B   707    				djnz mchrlp
                           B   708    
00417C 2A 86 60 00         B   709    				ld hl,(attributes_address)		004180 ED4B 6B 60 00       B   710    				ld bc,(window_columns)
004185 0B                  B   711    				dec bc
004186 0B                  B   712    				dec bc
004187 09                  B   713    				add hl,bc
                           B   714    
004188 C1                  B   715    				pop bc
004189 D1                  B   716    				pop de
00418A 19                  B   717    				add hl,de						00418B E5                  B   718    				push hl
00418C D1                  B   719    				pop de
00418D 13                  B   720    				inc de							00418E 7E                  B   721    mattrlp			ld a,(hl)
00418F 12                  B   722    				ld (de),a
004190 2B                  B   723    				dec hl
004191 1B                  B   724    				dec de
004192 10 FA               B   725    				djnz mattrlp
                           B   726    
004194 CD 9C 41 00         B   727    				call hwsc_redraw_line			                           B   728    
004198 E1                  B   729    chright_end		pop hl	
004199 D1                  B   730    				pop de
00419A C1                  B   731    				pop bc
00419B C9                  B   732    				ret
                           B   733    
                           B   734    ;----------------------------------------------
                           B   735    
00419C                     B   736    hwsc_redraw_line
                           B   737    				
00419C 3A BD 62 00         B   738    				ld a,(cursor_y)
0041A0 4F                  B   739    				ld c,a
                           B   740    		
0041A1                     B   741    hwsc_redraw_ui_line
                           B   742    
0041A1 ED5B 6B 60 00       B   743    				ld de,(window_columns)			0041A6 51                  B   744    				ld d,c
0041A7 ED5C                B   745    				mlt de
0041A9 0600                B   746    				ld b,0							0041AB 2A 86 60 00         B   747    rs_xloop		ld hl,(attributes_address)		0041AF 19                  B   748    				add hl,de
0041B0 7E                  B   749    				ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0041B1 32 65 60 00         B   750    				ld (plotchar_colour),a
0041B5 2A 83 60 00         B   751    				ld hl,(charmap_address)
0041B9 19                  B   752    				add hl,de
0041BA 7E                  B   753    				ld a,(hl)				
0041BB CD 0D 3F 00         B   754    				call hwsc_plotchar_specific_att
0041BF 13                  B   755    				inc de
0041C0 04                  B   756    				inc b
0041C1 3A 6B 60 00         B   757    				ld a,(window_columns)
0041C5 B8                  B   758    				cp b
0041C6 20 E3               B   759    				jr nz,rs_xloop
0041C8 C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
0041C9                     B   764    hwsc_charline_to_command_string	
                           B   765    								
0041C9 ED5B 6B 60 00       B   766    				ld de,(window_columns)
0041CE 3A BD 62 00         B   767    				ld a,(cursor_y)					0041D2 57                  B   768    				ld d,a
0041D3 ED5C                B   769    				mlt de
0041D5 2A 83 60 00         B   770    				ld hl,(charmap_address)
0041D9 19                  B   771    				add hl,de
0041DA 11 DB 62 00         B   772    				ld de,commandstring				0041DE ED4B 6B 60 00       B   773    				ld bc,(window_columns)
0041E3 EDB0                B   774    				ldir
0041E5 C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
0041E6 C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
0041E7 0E01                B   781    				ld c,1
0041E9 ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
0041EC 0E01                B   784    				ld c,port_hw_flags
0041EE ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
0041F1 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
0041F3 C1                  B   788    				pop bc
0041F4 BF                  B   789    				cp a							0041F5 C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
0041F6                     B     5    hwsc_default_hw_settings
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0041F6 3E48                B     9    					ld a,01001000b				0041F8 ED39AA              B    10    					out0 (CS0_CTL),a
0041FB 3E00                B    11    					ld a,000h					0041FD ED39A8              B    12    					out0 (CS0_LBR),a
004200 3EFF                B    13    					ld a,0ffh	
004202 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004205 3E58                B    16    					ld a,01011000b
004207 ED39AD              B    17    					out0 (CS1_CTL),a			00420A 3E00                B    18    					ld a,0
00420C ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
00420F 3EFF                B    23    					ld a,0ffh
004211 ED399F              B    24    					out0 (PC_DDR),a				004214 AF                  B    25    					xor a
004215 ED39A0              B    26    					out0 (PC_ALT1),a
004218 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
00421B 3EFF                B    29    					ld a,0ffh					00421D ED39A3              B    30    					out0 (PD_DDR),a				004220 AF                  B    31    					xor a	
004221 ED39A4              B    32    					out0 (PD_ALT1),a			004224 3E0F                B    33    					ld a,00fh				
004226 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004229 ED3892              B    38    					in0 a,(TMR_ISS)
00422C E6FC                B    39    					and 11111100b
00422E F601                B    40    					or  00000001b
004230 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
004233 AF                  B    46    					xor a
004234 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
004238 C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
004239 11000000            B    53    hwsc_get_version	ld de,0
00423D 0610                B    54    					ld b,16
00423F 78                  B    55    gethwvlp			ld a,b
004240 3D                  B    56    					dec a
004241 ED3908              B    57    					out0 (port_selector),a		004244 DB01                B    58    					in a,(port_hw_flags)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004246 CB27                B    59    					sla a
004248 CB13                B    60    					rl e
00424A CB12                B    61    					rl d
00424C 10 F1               B    62    					djnz gethwvlp				                           B    63    									
00424E 21300000            B    64    					ld hl,prose_version
004252 BF                  B    65    					cp a						004253 C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
004254                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
004254 CD 60 42 00         B    78    					call set_timeout
004258 CD 71 42 00         B    79    twaitlp				call test_timeout
00425C 28 FA               B    80    					jr z,twaitlp
00425E AF                  B    81    					xor a						00425F C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
004260 7B                  B    86    set_timeout			ld a,e						004261 ED3981              B    87    					out0 (TMR0_RR_L),a			004264 7A                  B    88    					ld a,d
004265 ED3982              B    89    					out0 (TMR0_RR_H),a			004268 3E03                B    90    					ld a,00000011b				00426A ED3980              B    91    					out0 (TMR0_CTL),a			00426D ED3880              B    92    					in0 a,(TMR0_CTL)			004270 C9                  B    93    					ret
                           B    94    			
004271 ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			004274 CB7F                B    96    					bit 7,a
004276 C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
004277                     B   101    hwsc_read_rtc
004277 D5                  B   102    					push de
004278 C5                  B   103    					push bc
004279 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
00427B 0608                B   105    					ld b,8
00427D 21 1E 62 00         B   106    					ld hl,time_data
004281 ED92                B   107    					inimr						004283 0EE0                B   108    					ld c,RTC_SEC
004285 0600                B   109    					ld b,0
004287 1E08                B   110    					ld e,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004289 21 1E 62 00         B   111    					ld hl,time_data
00428D ED78                B   112    timevloop			in a,(bc)					00428F BE                  B   113    					cp (hl)						004290 20 E7               B   114    					jr nz,hwsc_rtc_rlp			004292 23                  B   115    					inc hl
004293 0C                  B   116    					inc c
004294 1D                  B   117    					dec e
004295 20 F6               B   118    					jr nz,timevloop
004297 21 1E 62 00         B   119    					ld hl,time_data
00429B C1                  B   120    					pop bc
00429C D1                  B   121    					pop de
00429D BF                  B   122    					cp a						00429E C9                  B   123    					ret
                           B   124    
                           B   125    
00429F                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
00429F E5                  B   130    					push hl
0042A0 C5                  B   131    					push bc
0042A1 3E21                B   132    					ld a,00100001b				0042A3 ED39ED              B   133    					out0 (RTC_CTRL),a
0042A6 0EE0                B   134    					ld c,RTC_SEC
0042A8 0608                B   135    					ld b,8
0042AA ED93                B   136    					otimr
0042AC 3E20                B   137    					ld a,00100000b				0042AE ED39ED              B   138    					out0 (RTC_CTRL),a
0042B1 C1                  B   139    					pop bc
0042B2 E1                  B   140    					pop hl
0042B3 BF                  B   141    					cp a						0042B4 C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
0042B5                     B   151    init_keyboard
                           B   152    
0042B5 11004000            B   153    			ld de,16384							0042B9 CD 54 42 00         B   154    			call hwsc_time_delay
0042BD F3                  B   155    			di
0042BE CD 73 43 00         B   156    			call purge_keyboard
0042C2 CD CC 42 00         B   157    			call rs_keyboard
0042C6 FB                  B   158    			ei
0042C7 D0                  B   159    			ret nc
0042C8 3E8B                B   160    			ld a,08bh							0042CA B7                  B   161    			or a
0042CB C9                  B   162    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   163    			
                           B   164    			
0042CC                     B   165    rs_keyboard
                           B   166    
0042CC 3EFF                B   167    			ld a,0ffh
0042CE CD EB 42 00         B   168    			call write_to_keyboard
0042D2 30 04               B   169    			jr nc,kb_connected
0042D4 3E8A                B   170    			ld a,08ah							0042D6 B7                  B   171    			or a
0042D7 C9                  B   172    			ret
                           B   173    
0042D8                     B   174    kb_connected
                           B   175    			
0042D8 0605                B   176    			ld b,5
0042DA C5                  B   177    kb_initlp	push bc
0042DB CD 57 43 00         B   178    			call wait_kb_byte					0042DF C1                  B   179    			pop bc
0042E0 D8                  B   180    			ret c
0042E1 FEAA                B   181    			cp 0aah
0042E3 28 04               B   182    			jr z,kb_postok
0042E5 10 F3               B   183    			djnz kb_initlp						0042E7 37                  B   184    			scf									0042E8 C9                  B   185    			ret
                           B   186    			
                           B   187    			
0042E9 AF                  B   188    kb_postok	xor a
0042EA C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
0042EB                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
0042EB 4F                  B   198    			ld c,a								0042EC 3E01                B   199    			ld a,01b							0042EE ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
0042F1 110A0000            B   202    			ld de,10
0042F5 CD 54 42 00         B   203    			call hwsc_time_delay				                           B   204    
0042F9 3E03                B   205    			ld a,11b
0042FB ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
0042FE 3E02                B   208    			ld a,10b
004300 ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
004303 CD D3 44 00         B   211    			call wait_kb_clk_high
                           B   212    			
004307 1601                B   213    			ld d,1								004309 0608                B   214    			ld b,8								Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00430B CD A6 44 00         B   215    kdoloop		call wait_kb_clk_low	
00430F D8                  B   216    			ret c
004310 AF                  B   217    			xor a
004311 CBCF                B   218    			set 1,a
004313 CB41                B   219    			bit 0,c
004315 28 03               B   220    			jr z,kdbzero
004317 CB8F                B   221    			res 1,a
004319 14                  B   222    			inc d
00431A ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				00431D CD D3 44 00         B   224    			call wait_kb_clk_high
004321 D8                  B   225    			ret c
004322 CB19                B   226    			rr c
004324 10 E5               B   227    			djnz kdoloop
                           B   228    
004326 CD A6 44 00         B   229    			call wait_kb_clk_low
00432A D8                  B   230    			ret c
00432B AF                  B   231    			xor a
00432C CB42                B   232    			bit 0,d
00432E 20 02               B   233    			jr nz,kparone
004330 CBCF                B   234    			set 1,a
004332 ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				004335 CD D3 44 00         B   236    			call wait_kb_clk_high
004339 D8                  B   237    			ret c
                           B   238    			
00433A CD A6 44 00         B   239    			call wait_kb_clk_low
00433E D8                  B   240    			ret c
00433F AF                  B   241    			xor a
004340 ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
004343 CD A2 44 00         B   244    			call wait_kb_data_low				004347 D8                  B   245    			ret c
004348 CD A6 44 00         B   246    			call wait_kb_clk_low				00434C D8                  B   247    			ret c
                           B   248    				
00434D CD CF 44 00         B   249    			call wait_kb_data_high				004351 D8                  B   250    			ret c
004352 CD D3 44 00         B   251    			call wait_kb_clk_high				004356 C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
004357                     B   258    wait_kb_byte
                           B   259    
004357 11008000            B   260    			ld de,8000h
00435B CD 60 42 00         B   261    			call set_timeout					                           B   262    
00435F ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
004362 CB67                B   264    			bit 4,a
004364 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004366 CD 71 42 00         B   267    			call test_timeout
00436A 28 F3               B   268    			jr z,wait_kloop
00436C 37                  B   269    			scf									00436D C9                  B   270    			ret
                           B   271    			
00436E ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			004371 B7                  B   273    			or a
004372 C9                  B   274    			ret
                           B   275    
                           B   276    
                           B   277    ;----------------------------------------------
                           B   278    
004373                     B   279    purge_keyboard
                           B   280    			
004373 ED3807              B   281    			in0 a,(port_ps2_ctrl)
004376 CB67                B   282    			bit 4,a
004378 C8                  B   283    			ret z
004379 ED3802              B   284    			in0 a,(port_keyboard_data)			00437C 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
00437E                     B   295    init_mouse		
00437E F3                  B   296    			di
00437F CD 97 44 00         B   297    			call purge_mouse
004383 CD 8D 43 00         B   298    			call rs_mouse
004387 FB                  B   299    			ei
004388 D0                  B   300    			ret nc
004389 3E8B                B   301    			ld a,08bh							00438B B7                  B   302    			or a
00438C C9                  B   303    			ret
                           B   304    
                           B   305    
00438D                     B   306    rs_mouse
00438D 3EFF                B   307    			ld a,0ffh							00438F CD 0F 44 00         B   308    			call write_to_mouse		
004393 30 04               B   309    			jr nc,mouse_connected
004395 3E8A                B   310    			ld a,08ah							004397 B7                  B   311    			or a
004398 C9                  B   312    			ret
                           B   313    
                           B   314    
004399                     B   315    mouse_connected
                           B   316    
004399 0605                B   317    			ld b,5
00439B C5                  B   318    ms_initlp	push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00439C CD 7B 44 00         B   319    			call wait_mouse_byte				0043A0 C1                  B   320    			pop bc
0043A1 D8                  B   321    			ret c
0043A2 FEAA                B   322    			cp 0aah
0043A4 28 04               B   323    			jr z,ms_postok
0043A6 10 F3               B   324    			djnz ms_initlp
0043A8 18 43               B   325    			jr bad_mouse
                           B   326    			
0043AA CD 7B 44 00         B   327    ms_postok	call wait_mouse_byte				0043AE D8                  B   328    			ret c
0043AF B7                  B   329    			or a
0043B0 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
0043B2 3E03                B   332    			ld a,3
0043B4 32 F6 63 00         B   333    			ld (mouse_packet_size),a
                           B   334    
0043B8 21 D5 60 00         B   335    			ld hl,intellimouse_seq
0043BC 0606                B   336    			ld b,6
0043BE CD F1 43 00         B   337    			call mouse_sequence
0043C2 D8                  B   338    			ret c
                           B   339    			
0043C3 3EF2                B   340    			ld a,0f2h
0043C5 CD 00 44 00         B   341    			call write_mouse_wait_ack			0043C9 D8                  B   342    			ret c
0043CA CD 7B 44 00         B   343    			call wait_mouse_byte				0043CE D8                  B   344    			ret c
0043CF 32 F5 63 00         B   345    			ld (mouse_id),a
0043D3 B7                  B   346    			or a								0043D4 28 0A               B   347    			jr z,standard_mouse
0043D6 FE03                B   348    			cp 3
0043D8 20 13               B   349    			jr nz,bad_mouse						0043DA 3E04                B   350    			ld a,4
0043DC 32 F6 63 00         B   351    			ld (mouse_packet_size),a
                           B   352    
0043E0                     B   353    standard_mouse
                           B   354    		
0043E0 21 DB 60 00         B   355    			ld hl,mouse_settings_seq
0043E4 0606                B   356    			ld b,6
0043E6 CD F1 43 00         B   357    			call mouse_sequence
0043EA D8                  B   358    			ret c
0043EB AF                  B   359    			xor a								0043EC C9                  B   360    			ret
                           B   361    
                           B   362    
0043ED 3E89                B   363    bad_mouse	ld a,089h							0043EF B7                  B   364    			or a
0043F0 C9                  B   365    			ret
                           B   366    
                           B   367    
0043F1                     B   368    mouse_sequence
                           B   369    
0043F1 7E                  B   370    mseqlp		ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043F2 E5                  B   371    			push hl
0043F3 C5                  B   372    			push bc
0043F4 CD 00 44 00         B   373    			call write_mouse_wait_ack
0043F8 C1                  B   374    			pop bc
0043F9 E1                  B   375    			pop hl
0043FA D8                  B   376    			ret c
0043FB 23                  B   377    			inc hl
0043FC 10 F3               B   378    			djnz mseqlp
0043FE AF                  B   379    			xor a
0043FF C9                  B   380    			ret
                           B   381    
                           B   382    
004400                     B   383    write_mouse_wait_ack
                           B   384    			
004400 CD 0F 44 00         B   385    			call write_to_mouse
004404 D8                  B   386    			ret c
004405 CD 7B 44 00         B   387    			call wait_mouse_byte				004409 D8                  B   388    			ret c
00440A FEFA                B   389    			cp 0fah								00440C C8                  B   390    			ret z
00440D 37                  B   391    			scf
00440E C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
00440F                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
00440F 4F                  B   400    			ld c,a								004410 3E04                B   401    			ld a,0100b							004412 ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
004415 110A0000            B   404    			ld de,10
004419 CD 54 42 00         B   405    			call hwsc_time_delay				                           B   406    
00441D 3E0C                B   407    			ld a,1100b
00441F ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
004422 3E08                B   410    			ld a,1000b
004424 ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
004427 CD DB 44 00         B   413    			call wait_mouse_clk_high
                           B   414    			
00442B 1601                B   415    			ld d,1								00442D 0608                B   416    			ld b,8								00442F CD AE 44 00         B   417    mdoloop		call wait_mouse_clk_low	
004433 D8                  B   418    			ret c
004434 AF                  B   419    			xor a
004435 CBDF                B   420    			set 3,a
004437 CB41                B   421    			bit 0,c
004439 28 03               B   422    			jr z,mdbzero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00443B CB9F                B   423    			res 3,a
00443D 14                  B   424    			inc d
00443E ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				004441 CD DB 44 00         B   426    			call wait_mouse_clk_high
004445 D8                  B   427    			ret c
004446 CB19                B   428    			rr c
004448 10 E5               B   429    			djnz mdoloop
                           B   430    
00444A CD AE 44 00         B   431    			call wait_mouse_clk_low
00444E D8                  B   432    			ret c
00444F AF                  B   433    			xor a
004450 CB42                B   434    			bit 0,d
004452 20 02               B   435    			jr nz,parone
004454 CBDF                B   436    			set 3,a
004456 ED3907              B   437    parone		out0 (port_ps2_ctrl),a				004459 CD DB 44 00         B   438    			call wait_mouse_clk_high
00445D D8                  B   439    			ret c
                           B   440    			
00445E CD AE 44 00         B   441    			call wait_mouse_clk_low
004462 D8                  B   442    			ret c
004463 AF                  B   443    			xor a
004464 ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
004467 CD AA 44 00         B   446    			call wait_mouse_data_low			00446B D8                  B   447    			ret c
00446C CD AE 44 00         B   448    			call wait_mouse_clk_low				004470 D8                  B   449    			ret c
                           B   450    				
004471 CD D7 44 00         B   451    			call wait_mouse_data_high			004475 D8                  B   452    			ret c
004476 CD DB 44 00         B   453    			call wait_mouse_clk_high			00447A C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
00447B                     B   459    wait_mouse_byte
                           B   460    
00447B 11008000            B   461    			ld de,8000h
00447F CD 60 42 00         B   462    			call set_timeout					                           B   463    
004483 ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
004486 CB6F                B   465    			bit 5,a
004488 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
00448A CD 71 42 00         B   468    			call test_timeout
00448E 28 F3               B   469    			jr z,wait_mloop
004490 37                  B   470    			scf									004491 C9                  B   471    			ret
                           B   472    			
004492 ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				004495 B7                  B   474    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004496 C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
004497                     B   479    purge_mouse
                           B   480    			
004497 ED3807              B   481    			in0 a,(port_ps2_ctrl)
00449A CB6F                B   482    			bit 5,a
00449C C8                  B   483    			ret z
00449D ED3806              B   484    			in0 a,(port_mouse_data)			; r
0044A0 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
0044A2                     B   491    wait_kb_data_low
                           B   492    
0044A2 3E02                B   493    			ld a,2
0044A4 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
0044A6                     B   496    wait_kb_clk_low
                           B   497    
0044A6 3E01                B   498    			ld a,1
0044A8 18 06               B   499    			jr test_lo_ps2			
                           B   500    
0044AA                     B   501    wait_mouse_data_low
                           B   502    
0044AA 3E08                B   503    			ld a,8
0044AC 18 02               B   504    			jr test_lo_ps2
                           B   505    
0044AE                     B   506    wait_mouse_clk_low
                           B   507    
0044AE 3E04                B   508    			ld a,4
                           B   509    
0044B0 C5                  B   510    test_lo_ps2	push bc
0044B1 D5                  B   511    			push de
0044B2 4F                  B   512    			ld c,a
0044B3 11004000            B   513    			ld de,04000h					; a
0044B7 CD 60 42 00         B   514    			call set_timeout
                           B   515    
0044BB CD 71 42 00         B   516    nkb_lw		call test_timeout				; t
0044BF 28 04               B   517    			jr z,nkb_lnto
0044C1 D1                  B   518    			pop de
0044C2 C1                  B   519    			pop bc
0044C3 37                  B   520    			scf								; c
0044C4 C9                  B   521    			ret
0044C5 ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
0044C8 A1                  B   523    			and c
0044C9 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
0044CB D1                  B   526    			pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0044CC C1                  B   527    			pop bc
0044CD AF                  B   528    			xor a
0044CE C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
                           B   533    
0044CF                     B   534    wait_kb_data_high
                           B   535    
0044CF 3E02                B   536    			ld a,2
0044D1 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
0044D3                     B   539    wait_kb_clk_high
                           B   540    
0044D3 3E01                B   541    			ld a,1
0044D5 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
0044D7                     B   545    wait_mouse_data_high
                           B   546    			
0044D7 3E08                B   547    			ld a,8
0044D9 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
0044DB                     B   550    wait_mouse_clk_high
                           B   551    
0044DB 3E04                B   552    			ld a,4
                           B   553    
0044DD C5                  B   554    test_hi_ps2	push bc
0044DE D5                  B   555    			push de
0044DF 4F                  B   556    			ld c,a
0044E0 11004000            B   557    			ld de,04000h					; a
0044E4 CD 60 42 00         B   558    			call set_timeout
                           B   559    
0044E8 CD 71 42 00         B   560    nkb_hw		call test_timeout				; t
0044EC 28 04               B   561    			jr z,nkb_hnto
0044EE D1                  B   562    			pop de
0044EF C1                  B   563    			pop bc
0044F0 37                  B   564    			scf								; c
0044F1 C9                  B   565    			ret
0044F2 ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
0044F5 A1                  B   567    			and c
0044F6 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
0044F8 D1                  B   570    			pop de
0044F9 C1                  B   571    			pop bc
0044FA AF                  B   572    			xor a							; c
0044FB C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           B   577    
0044FC                     B   578    hwsc_play_audio
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   579    
                           B   580    ; set HL register to location of an audio data 
                           B   581    
                           B   582    ; 0 - start 
                           B   583    ; 3 - length
                           B   584    ; 6 - loop start
                           B   585    ; 9 - loop length
                           B   586    ; c - frequency constant
                           B   587    ; e - volume
                           B   588    
                           B   589    ; set C register to set channels wave is to pla
                           B   590    
0044FC E5                  B   591    				push hl
0044FD FDE1                B   592    				pop iy
0044FF DD210014 FF         B   593    				ld ix,hw_audio_registers
004504 CD 39 45 00         B   594    				call audio_reg_wait				                           B   595    				
004508 0608                B   596    				ld b,8
00450A CB39                B   597    audchanloop		srl c
00450C 30 24               B   598    				jr nc,not_this_chan
                           B   599    				
00450E FD1700              B   600    				ld de,(iy)
004511 DD1F00              B   601    				ld (ix),de						                           B   602    
004514 FD1703              B   603    				ld de,(iy+3)
004517 DD1F04              B   604    				ld (ix+04h),de					                           B   605    				
00451A FD170C              B   606    				ld de,(iy+0ch)
00451D DD1F08              B   607    				ld (ix+08h),de					                           B   608    				
004520 FD5E0E              B   609    				ld e,(iy+0eh)
004523 DD1F0C              B   610    				ld (ix+0ch),de					                           B   611    				
004526 FD1706              B   612    				ld de,(iy+6)
004529 DD1F10              B   613    				ld (ix+10h),de					                           B   614    				
00452C FD1709              B   615    				ld de,(iy+9)
00452F DD1F14              B   616    				ld (ix+14h),de					                           B   617    
004532                     B   618    not_this_chan	
004532 ED3220              B   619    				lea ix,ix+20h			
004535 10 D3               B   620    				djnz audchanloop
004537 AF                  B   621    				xor a
004538 C9                  B   622    				ret
                           B   623    
                           B   624    
                           B   625    ;----------------------------------------------
                           B   626    
004539                     B   627    audio_reg_wait	
                           B   628    
004539 3E01                B   629    				ld a,1
00453B 320314FF            B   630    				ld (hw_audio_registers+3),a		Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   631    				
00453F ED3801              B   632    wait_audreg		in0 a,(port_hw_flags)			004542 E640                B   633    				and 040h
004544 28 F9               B   634    				jr z,wait_audreg				004546 AF                  B   635    				xor a
004547 C9                  B   636    				ret
004548 C9                  B   637    				ret
                           B   638    
                           B   639    
                           B   640    ;----------------------------------------------
                           B   641    				
                           B   642    				
004549                     B   643    hwsc_disable_audio
                           B   644    
004549 AF                  B   645    				xor a
00454A 320314FF            B   646    				ld (hw_audio_registers+3),a		                           B   647    				
00454E DD210014 FF         B   648    				ld ix,hw_audio_registers		004553 0608                B   649    				ld b,8
004555 11000000            B   650    				ld de,0
004559 DD1F0C              B   651    disaud_lp		ld (ix+0ch),de
00455C ED3220              B   652    				lea ix,ix+020h
00455F 10 F8               B   653    				djnz disaud_lp
004561 C9                  B   654    				ret
                           B   655    				
                           B   656    ;----------------------------------------------
                           B   657    
004562                     B   658    hwsc_get_joysticks
                           B   659    
004562 ED389E              B   660    				in0 a,(PC_DR)				
004565 2F                  B   661    				cpl
004566 47                  B   662    				ld b,a
004567 E60F                B   663    				and 0fh
004569 5F                  B   664    				ld e,a
00456A 78                  B   665    				ld a,b
00456B 0F                  B   666    				rrca
00456C 0F                  B   667    				rrca
00456D 0F                  B   668    				rrca
00456E 0F                  B   669    				rrca
00456F E60F                B   670    				and 0fh
004571 57                  B   671    				ld d,a
                           B   672    				
004572 ED38A2              B   673    				in0 a,(PD_DR)	
004575 CB67                B   674    				bit 4,a						; f
004577 20 02               B   675    				jr nz,noj1b1
004579 CBEA                B   676    				set 5,d
                           B   677    
00457B CB6F                B   678    noj1b1			bit 5,a						; f
00457D 20 02               B   679    				jr nz,noj1b0
00457F CBE2                B   680    				set 4,d
                           B   681    				
004581 CB77                B   682    noj1b0			bit 6,a						; f
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004583 20 02               B   683    				jr nz,noj0b1
004585 CBEB                B   684    				set 5,e
                           B   685    
004587 CB7F                B   686    noj0b1			bit 7,a						; f
004589 20 02               B   687    				jr nz,noj0b0
00458B CBE3                B   688    				set 4,e
                           B   689    
00458D AF                  B   690    noj0b0			xor a
00458E C9                  B   691    				ret
                           B   692    				
                           B   693    				
                           B   694    ;----------------------------------------------
                           B   695    			
                           B   696    				
                           B   697    				
                           A  3111    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
00458F                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
00458F D5                  B    13    				push de
004590 51                  B    14    				ld d,c
004591 E5                  B    15    				push hl
                           B    16    				
004592 CD FC 45 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004596 BE                  B    18    				cp (hl)							004597 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004599 01000000            B    21    new_key			ld bc,0							00459D 4F                  B    22    				ld c,a
00459E 21 CD 63 00         B    23    				ld hl,scancode_buffer	
0045A2 09                  B    24    				add hl,bc
0045A3 7E                  B    25    				ld a,(hl)						                           B    26    
0045A4 0E10                B    27    				ld c,16
0045A6 09                  B    28    				add hl,bc						0045A7 4F                  B    29    				ld c,a							0045A8 7E                  B    30    				ld a,(hl)						                           B    31    
0045A9 1E00                B    32    				ld e,0							0045AB 21 15 5F 00         B    33    				ld hl,unshifted_keymap			                           B    34    
0045AF CB4F                B    35    				bit 1,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
0045B1 28 04               B    36    				jr z,not_ctrl					0045B3 1E60                B    37    				ld e,96							0045B5 18 16               B    38    				jr got_keymap					                           B    39    							
0045B7 CB47                B    40    not_ctrl		bit 0,a
0045B9 20 04               B    41    				jr nz,shifted
0045BB CB67                B    42    				bit 4,a
0045BD 28 06               B    43    				jr z,not_shifted
0045BF 21 77 5F 00         B    44    shifted			ld hl,shifted_keymap			0045C3 18 08               B    45    				jr got_keymap
                           B    46    				
0045C5 CB5F                B    47    not_shifted		bit 3,a
0045C7 28 04               B    48    				jr z,got_keymap	
0045C9 21 D9 5F 00         B    49    				ld hl,alted_keymap				                           B    50    
0045CD 79                  B    51    got_keymap		ld a,c							0045CE FE62                B    52    				cp 062h
0045D0 30 07               B    53    				jr nc,gotkdone
0045D2 09                  B    54    				add hl,bc						0045D3 7E                  B    55    				ld a,(hl)						0045D4 93                  B    56    				sub a,e							0045D5 30 01               B    57    				jr nc,subkey_ok	
0045D7 AF                  B    58    				xor a							0045D8 47                  B    59    subkey_ok		ld b,a
                           B    60    				
0045D9 3A EE 63 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			0045DD 3C                  B    62    				inc a							0045DE E60F                B    63    				and 15
0045E0 32 EE 63 00         B    64    				ld (key_buf_rd_idx),a			0045E4 79                  B    65    				ld a,c							0045E5 E1                  B    66    				pop hl
0045E6 4A                  B    67    				ld c,d
0045E7 D1                  B    68    				pop de
0045E8 BF                  B    69    				cp a							0045E9 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
0045EA                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
0045EA D5                  B    82    				push de
0045EB 51                  B    83    				ld d,c
0045EC E5                  B    84    				push hl
0045ED CD FC 45 00         B    85    				call get_kb_buffer_indexes		0045F1 BE                  B    86    				cp (hl)							0045F2 20 A5               B    87    				jr nz,new_key					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
0045F4 3E81                B    88    				ld a,81h			
0045F6 47                  B    89    				ld b,a
0045F7 B7                  B    90    				or a
0045F8 E1                  B    91    				pop hl
0045F9 4A                  B    92    				ld c,d
0045FA D1                  B    93    				pop de
0045FB C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
0045FC                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
0045FC 21 ED 63 00         B   101    				ld hl,key_buf_wr_idx			004600 3A EE 63 00         B   102    				ld a,(key_buf_rd_idx)			004604 C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004605                     B    21    serial_get_header
                           B    22    
004605 32 B2 60 00         B    23    				ld (serial_timeout),a			004609 22 9C 60 00         B    24    				ld (serial_fn_addr),hl
00460D CD EC 3C 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004611 CD F4 46 00         B    27    				call s_getblock					004615 28 0C               B    28    				jr z,s_gbfhok					004617 F5                  B    29    				push af							004618 3A D3 60 00         B    30    				ld a,(serial_transfer_started)
00461C B7                  B    31    				or a							00461D C4 5B 47 00         B    32    				call nz,s_badack				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004621 F1                  B    33    				pop af
004622 C9                  B    34    				ret
                           B    35    	
004623 21 C7 60 00         B    36    s_gbfhok		ld hl,serial_header_id			004627 11 1F 68 00         B    37    				ld de,sector_buffer+20			00462B 060C                B    38    				ld b,12
00462D CD E7 11 00         B    39    				call os_compare_strings
004631 20 0F               B    40    				jr nz,s_nfhdr
004633 06E0                B    41    				ld b,256-32						004635 21 2B 68 00         B    42    				ld hl,sector_buffer+32
004639 7E                  B    43    s_chdr			ld a,(hl)
00463A 23                  B    44    				inc hl
00463B B7                  B    45    				or a
00463C 20 04               B    46    				jr nz,s_nfhdr
00463E 10 F9               B    47    				djnz s_chdr
004640 18 08               B    48    				jr s_fhcsok
                           B    49    				
004642 CD 5B 47 00         B    50    s_nfhdr			call s_badack					004646 3E85                B    51    				ld a,085h						004648 B7                  B    52    				or a
004649 C9                  B    53    				ret
                           B    54    		
00464A 21 1B 68 00         B    55    s_fhcsok		ld hl,sector_buffer+16			00464E 11 C3 60 00         B    56    				ld de,serial_fileheader+16
004652 01040000            B    57    				ld bc,4
004656 EDB0                B    58    				ldir
                           B    59    				
004658 21 0B 68 00         B    60    				ld hl,sector_buffer
00465C 11 B3 60 00         B    61    				ld de,serial_fileheader			004660 0610                B    62    				ld b,16							004662 7E                  B    63    s_tuclp			ld a,(hl)						004663 B7                  B    64    				or a
004664 28 0B               B    65    				jr z,s_ffhswz	
004666 CD 21 12 00         B    66    				call os_uppercasify
00466A 12                  B    67    				ld (de),a
00466B 23                  B    68    				inc hl
00466C 13                  B    69    				inc de
00466D 10 F3               B    70    				djnz s_tuclp
00466F 18 04               B    71    				jr s_tucdone
004671 12                  B    72    s_ffhswz		ld (de),a
004672 13                  B    73    				inc de
004673 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004675 2A 9C 60 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004679 7E                  B    77    				ld a,(hl)
00467A FE2A                B    78    				cp '*'
00467C 28 14               B    79    				jr z,s_rffns					00467E 11 B3 60 00         B    80    				ld de,serial_fileheader
004682 0610                B    81    				ld b,16
004684 CD E7 11 00         B    82    				call os_compare_strings
004688 28 08               B    83    				jr z,s_rffns
00468A CD 5B 47 00         B    84    s_rfnbad		call s_badack
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00468E 3E87                B    85    				ld a,087h						004690 B7                  B    86    				or a
004691 C9                  B    87    				ret
                           B    88    				
004692 DD21 B3 60 00       B    89    s_rffns			ld ix,serial_fileheader			004697 AF                  B    90    				xor a
004698 C9                  B    91    				ret
                           B    92    
004699 F5                  B    93    s_fail			push af				
00469A CD 5B 47 00         B    94    				call s_badack		 
00469E F1                  B    95    				pop af
00469F C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
0046A0                     B   114    serial_receive_file
                           B   115    
0046A0 3E0A                B   116    				ld a,10							0046A2 32 B2 60 00         B   117    				ld (serial_timeout),a
0046A6 E5                  B   118    				push hl
0046A7 CD 4A 47 00         B   119    				call s_goodack					0046AB DDE1                B   120    				pop ix							0046AD ED5B C3 60 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
0046B2 CD F4 46 00         B   123    s_gbloop		call s_getblock
0046B6 20 E1               B   124    				jr nz,s_fail
0046B8 0E00                B   125    				ld c,0							0046BA FD21 0B 68 00       B   126    				ld iy,sector_buffer
0046BF FD7E00              B   127    s_rfloop		ld a,(iy)
0046C2 DD7700              B   128    				ld (ix),a						0046C5 1B                  B   129    				dec de							0046C6 21000000            B   130    				ld hl,0
0046CA AF                  B   131    				xor a
0046CB ED5A                B   132    				adc hl,de						0046CD 28 1A               B   133    				jr z,s_rfabr					0046CF C5                  B   134    				push bc
0046D0 01010000            B   135    				ld bc,1
0046D4 DD09                B   136    				add ix,bc						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046D6 C1                  B   137    				pop bc
0046D7 30 05               B   138    				jr nc,s_nbt
0046D9 3E84                B   139    				ld a,84h						0046DB B7                  B   140    				or a
0046DC 18 BB               B   141    				jr s_fail
0046DE FD23                B   142    s_nbt			inc iy
0046E0 0D                  B   143    				dec c
0046E1 20 DC               B   144    				jr nz,s_rfloop
0046E3 CD 4A 47 00         B   145    				call s_goodack					0046E7 18 C9               B   146    				jr s_gbloop
                           B   147    			
0046E9 CD 4A 47 00         B   148    s_rfabr			call s_goodack					0046ED DD21 B3 60 00       B   149    				ld ix,serial_fileheader			0046F2 AF                  B   150    				xor a							0046F3 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
0046F4                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
0046F4 AF                  B   159    				xor a
0046F5 32 D3 60 00         B   160    				ld (serial_transfer_started),a	0046F9 E5                  B   161    				push hl							0046FA D5                  B   162    				push de
0046FB C5                  B   163    				push bc
0046FC 21 0B 68 00         B   164    				ld hl,sector_buffer				004700 0600                B   165    				ld b,0
004702 D9                  B   166    				exx
004703 21FFFF00            B   167    				ld hl,0ffffh					004707 D9                  B   168    				exx
004708 CD 96 3C 00         B   169    s_lgb			call receive_serial_byte
00470C 20 38               B   170    				jr nz,s_gberr					00470E F5                  B   171    				push af
00470F 3E01                B   172    				ld a,1
004711 32 D3 60 00         B   173    				ld (serial_transfer_started),a
004715 F1                  B   174    				pop af
004716 77                  B   175    				ld (hl),a
004717 D9                  B   176    				exx
004718 AC                  B   177    				xor h							004719 67                  B   178    				ld h,a			
00471A 0608                B   179    				ld b,8
00471C 4029                B   180    rxcrcbyte		add.sis hl,hl					00471E 30 08               B   181    				jr nc,rxcrcnext
004720 7C                  B   182    				ld a,h
004721 EE10                B   183    				xor 10h
004723 67                  B   184    				ld h,a
004724 7D                  B   185    				ld a,l
004725 EE21                B   186    				xor 21h
004727 6F                  B   187    				ld l,a
004728 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00472A D9                  B   189    				exx
00472B 23                  B   190    				inc hl
00472C 10 DA               B   191    				djnz s_lgb
00472E D9                  B   192    				exx								                           B   193    			
00472F CD 96 3C 00         B   194    				call receive_serial_byte		004733 20 11               B   195    				jr nz,s_gberr
004735 4F                  B   196    				ld c,a
004736 CD 96 3C 00         B   197    				call receive_serial_byte
00473A 20 0A               B   198    				jr nz,s_gberr		
00473C 47                  B   199    				ld b,a
                           B   200    				
00473D AF                  B   201    				xor a							00473E 52ED42              B   202    				sbc.s hl,bc						004741 28 03               B   203    				jr z,s_gberr
                           B   204    			
004743 3E86                B   205    				ld a,86h						004745 B7                  B   206    				or a							004746 C1                  B   207    s_gberr			pop bc
004747 D1                  B   208    				pop de
004748 E1                  B   209    				pop hl
004749 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
00474A C5                  B   214    s_goodack		push bc
00474B 014F4B00            B   215    				ld bc,04b4fh					00474F 79                  B   216    ackbytes		ld a,c
004750 CD D1 3C 00         B   217    				call send_serial_byte
004754 78                  B   218    				ld a,b
004755 CD D1 3C 00         B   219    				call send_serial_byte
004759 C1                  B   220    				pop bc
00475A C9                  B   221    				ret
                           B   222    
00475B C5                  B   223    s_badack		push bc
00475C 01585800            B   224    				ld bc,05858h					004760 18 ED               B   225    				jr ackbytes
                           B   226    
004762 C5                  B   227    s_holdack		push bc
004763 01575700            B   228    				ld bc,05757h					004767 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004769                     B   249    serial_send_file
                           B   250    			
004769 3E01                B   251    				ld a,1							00476B 32 B2 60 00         B   252    				ld (serial_timeout),a
                           B   253    			
00476F DD22 96 60 00       B   254    				ld (serial_ez80_address),ix
004774 ED53 C3 60 00       B   255    				ld (serial_fileheader+10h),de	004779 E5                  B   256    				push hl
00477A 21000000            B   257    				ld hl,0
00477E AF                  B   258    				xor a
00477F ED5A                B   259    				adc hl,de
004781 20 05               B   260    				jr nz,s_flok
004783 E1                  B   261    				pop hl
004784 3E81                B   262    				ld a,081h						004786 B7                  B   263    				or a							004787 C9                  B   264    				ret
                           B   265    			
004788 21 B3 60 00         B   266    s_flok			ld hl,serial_fileheader			00478C 01100000            B   267    				ld bc,16
004790 AF                  B   268    				xor a
004791 CD 5A 15 00         B   269    				call os_bchl_memfill
004795 E1                  B   270    				pop hl							004796 11 B3 60 00         B   271    				ld de,serial_fileheader
00479A 0610                B   272    				ld b,16
00479C CD 06 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
0047A0 21 C7 60 00         B   275    				ld hl,serial_header_id			0047A4 11 C7 60 00         B   276    				ld de,serial_fileheader+014h
0047A8 010C0000            B   277    				ld bc,12		
0047AC EDB0                B   278    				ldir
                           B   279    			
0047AE DD21 B3 60 00       B   280    				ld ix,serial_fileheader			0047B3 11200000            B   281    				ld de,32
0047B7 CD ED 47 00         B   282    				call s_makeblock			
0047BB C0                  B   283    				ret nz
0047BC CD 25 48 00         B   284    				call s_sendblock
0047C0 C0                  B   285    				ret nz
0047C1 CD 52 48 00         B   286    				call s_waitack					0047C5 C0                  B   287    				ret nz							                           B   288    				
0047C6 DD2A 96 60 00       B   289    				ld ix,(serial_ez80_address)
0047CB ED5B C3 60 00       B   290    				ld de,(serial_fileheader+16)	0047D0 CD ED 47 00         B   291    s_sbloop		call s_makeblock				0047D4 38 16               B   292    				jr c,s_rerr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0047D6 CD 25 48 00         B   293    				call s_sendblock				0047DA 38 10               B   294    				jr c,s_rerr	
0047DC CD 52 48 00         B   295    				call s_waitack					0047E0 38 0A               B   296    				jr c,s_rerr
0047E2 21000000            B   297    				ld hl,0
0047E6 AF                  B   298    				xor a
0047E7 ED5A                B   299    				adc hl,de
0047E9 20 E5               B   300    				jr nz,s_sbloop					0047EB AF                  B   301    				xor a							0047EC C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0047ED                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0047ED 21 0B 68 00         B   312    				ld hl,sector_buffer				0047F1 01000100            B   313    				ld bc,256						0047F5 AF                  B   314    				xor a							0047F6 CD 5A 15 00         B   315    				call os_bchl_memfill			                           B   316    				
0047FA 0600                B   317    				ld b,0							0047FC FD21 0B 68 00       B   318    				ld iy,sector_buffer	
004801 DD7E00              B   319    s_sloop			ld a,(ix)
004804 FD7700              B   320    				ld (iy),a
004807 1B                  B   321    				dec de							004808 21000000            B   322    				ld hl,0
00480C AF                  B   323    				xor a
00480D ED5A                B   324    				adc hl,de
00480F 28 12               B   325    				jr z,s_mbend	
004811 FD23                B   326    				inc iy							004813 C5                  B   327    				push bc
004814 01010000            B   328    				ld bc,1
004818 DD09                B   329    				add ix,bc						00481A C1                  B   330    				pop bc							00481B 20 04               B   331    				jr nz,s_sbok
00481D 3E84                B   332    				ld a,84h						00481F B7                  B   333    				or a
004820 C9                  B   334    				ret
004821 10 DE               B   335    s_sbok			djnz s_sloop
004823 AF                  B   336    s_mbend			xor a
004824 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004825                     B   341    s_sendblock
                           B   342    
004825 E5                  B   343    				push hl
004826 D5                  B   344    				push de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004827 C5                  B   345    				push bc				
004828 21 0B 68 00         B   346    				ld hl,sector_buffer			
00482C 1E00                B   347    				ld e,0
00482E 7E                  B   348    s_sblklp		ld a,(hl)
00482F CD D1 3C 00         B   349    				call send_serial_byte
004833 23                  B   350    				inc hl
004834 1D                  B   351    				dec e
004835 20 F7               B   352    				jr nz,s_sblklp
004837 11 0B 68 00         B   353    				ld de,sector_buffer
00483B 01000000            B   354    				ld bc,0
00483F CD 2A 15 00         B   355    				call crc_checksum
004843 7D                  B   356    				ld a,l
004844 CD D1 3C 00         B   357    				call send_serial_byte
004848 7C                  B   358    				ld a,h
004849 CD D1 3C 00         B   359    				call send_serial_byte
00484D AF                  B   360    				xor a
00484E C1                  B   361    s_popall		pop bc
00484F D1                  B   362    				pop de
004850 E1                  B   363    				pop hl
004851 C9                  B   364    				ret
                           B   365    	
                           B   366    
004852                     B   367    s_waitack
004852 E5                  B   368    				push hl
004853 D5                  B   369    				push de
004854 C5                  B   370    				push bc
004855 CD 96 3C 00         B   371    				call receive_serial_byte		004859 20 F3               B   372    				jr nz,s_popall
00485B 47                  B   373    				ld b,a
00485C CD 96 3C 00         B   374    				call receive_serial_byte
004860 20 EC               B   375    				jr nz,s_popall
004862 4F                  B   376    				ld c,a
004863 264F                B   377    				ld h,'O'
004865 2E4B                B   378    				ld l,'K'
004867 AF                  B   379    				xor a
004868 52ED42              B   380    				sbc.s hl,bc						00486B 28 E1               B   381    				jr z,s_popall					                           B   382    			
00486D 3E85                B   383    				ld a,085h						00486F B7                  B   384    				or a
004870 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
004872                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
004872 3A E4 60 00         B    57    				ld a,(device_count)				004876 47                  B    58    				ld b,a							004877 DD21 94 61 00       B    59    				ld ix,host_device_hardware_info
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00487C 3A E3 60 00         B    60    fdevinfo		ld a,(current_driver)
004880 DDBE00              B    61    				cp (ix)
004883 28 09               B    62    				jr z,got_dev_info
004885 ED3220              B    63    				lea ix,ix+32
004888 10 F2               B    64    				djnz fdevinfo
00488A AF                  B    65    				xor a
00488B 3ED0                B    66    				ld a,0d0h						00488D C9                  B    67    				ret	
                           B    68    	
00488E CD 21 53 00         B    69    got_dev_info	call fs_clear_sector_buffer		004892 11000000            B    70    				ld de,0							004896 CD 86 49 00         B    71    form_ws			call set_lba_and_write_sector
00489A D8                  B    72    				ret c
00489B 13                  B    73    				inc de
00489C 7A                  B    74    				ld a,d
00489D FE03                B    75    				cp 3
00489F 20 F5               B    76    				jr nz,form_ws
                           B    77    	
0048A1 21 CF 55 00         B    78    				ld hl,bootsector_stub			0048A5 11 0B 68 00         B    79    				ld de,sector_buffer				0048A9 013F0000            B    80    				ld bc,03fh
0048AD EDB0                B    81    				ldir
                           B    82    	
0048AF DD7E04              B    83    				ld a,(ix+4)						0048B2 B7                  B    84    				or a
0048B3 20 0C               B    85    				jr nz,above_2gb
0048B5 2100FF3F            B    86    				ld hl,3fff00h					0048B9 DD1701              B    87    				ld de,(ix+1)					0048BC AF                  B    88    				xor a			
0048BD ED52                B    89    				sbc hl,de						0048BF 30 08               B    90    				jr nc,lessthan2gb				0048C1 3E40                B    91    above_2gb		ld a,40h						0048C3 1100FF3F            B    92    				ld de,3fff00h					0048C7 18 11               B    93    				jr spcvalok
                           B    94    
0048C9 DD4E03              B    95    lessthan2gb		ld c,(ix+3)						0048CC 0C                  B    96    				inc c							0048CD 3E01                B    97    spc_loop		ld a,1							0048CF B9                  B    98    spc_comp		cp c							0048D0 28 08               B    99    				jr z,spcvalok
0048D2 07                  B   100    				rlca
0048D3 FE80                B   101    				cp 080h							0048D5 20 F8               B   102    				jr nz,spc_comp
0048D7 0C                  B   103    				inc c			
0048D8 18 F3               B   104    				jr spc_loop						                           B   105    							
0048DA DD21 0B 68 00       B   106    spcvalok		ld ix,sector_buffer
0048DF DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
0048E2 CD 77 15 00         B   109    				call os_get_xde_msb				0048E6 4F                  B   110    				ld c,a							0048E7 B7                  B   111    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048E8 20 08               B   112    				jr nz,ts_dword					0048EA DD7313              B   113    				ld (ix+13h),e					0048ED DD7214              B   114    				ld (ix+14h),d
0048F0 18 07               B   115    				jr ts_done
0048F2 DD1F20              B   116    ts_dword		ld (ix+20h),de					0048F5 DD362300            B   117    				ld (ix+23h),0
                           B   118    
0048F9 EB                  B   119    ts_done			ex de,hl						0048FA 11000000            B   120    				ld de,0						
0048FE DD560D              B   121    				ld d,(ix+0dh)					004901 01000000            B   122    				ld bc,0							004905 AF                  B   123    div_tscls		xor a							004906 ED52                B   124    				sbc hl,de
004908 28 05               B   125    				jr z,gotfats
00490A 38 03               B   126    				jr c,gotfats	
00490C 03                  B   127    				inc bc
00490D 18 F6               B   128    				jr div_tscls
00490F 03                  B   129    gotfats			inc bc
004910 DD7116              B   130    				ld (ix+16h),c					004913 DD7017              B   131    				ld (ix+17h),b
004916 ED43 1F 56 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
00491B 010055AA            B   134    				ld bc,0aa5500h
00491F ED43 08 6A 00       B   135    				ld (sector_buffer+1fdh),bc		004924 11000000            B   136    				ld de,0
004928 CD 86 49 00         B   137    				call set_lba_and_write_sector	00492C D8                  B   138    				ret c
                           B   139    				
00492D 21000000            B   140    				ld hl,0
004931 DD6E0E              B   141    				ld l,(ix+0eh)					004934 DD660F              B   142    				ld h,(ix+0fh)
004937 19                  B   143    				add hl,de
004938 EB                  B   144    				ex de,hl						                           B   145    				
004939 CD 21 53 00         B   146    				call fs_clear_sector_buffer		00493D DD3600FF            B   147    				ld (ix+0),0ffh
004941 DD3601F8            B   148    				ld (ix+1),0f8h
004945 DD3602FF            B   149    				ld (ix+2),0ffh
004949 DD3603FF            B   150    				ld (ix+3),0ffh
00494D CD 86 49 00         B   151    				call set_lba_and_write_sector	004951 D8                  B   152    				ret c
                           B   153    
004952 2A 1F 56 00         B   154    				ld hl,(fs_sectors_per_fat)	
004956 19                  B   155    				add hl,de
004957 EB                  B   156    				ex de,hl
004958 CD 86 49 00         B   157    				call set_lba_and_write_sector 	00495C D8                  B   158    				ret c	
                           B   159    				
00495D D5                  B   160    				push de							00495E CD 21 53 00         B   161    				call fs_clear_sector_buffer
004962 21 25 56 00         B   162    				ld hl,fs_sought_filename
004966 11 0B 68 00         B   163    				ld de,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00496A 010B0000            B   164    				ld bc,11
00496E EDB0                B   165    				ldir							004970 D1                  B   166    				pop de							004971 DD360B08            B   167    				ld (ix+0bh),8					004975 DD361821            B   168    				ld (ix+018h),021h				004979 2A 1F 56 00         B   169    				ld hl,(fs_sectors_per_fat)		00497D 19                  B   170    				add hl,de
00497E EB                  B   171    				ex de,hl
00497F CD 86 49 00         B   172    				call set_lba_and_write_sector	004983 D8                  B   173    				ret c	
                           B   174    			
004984 AF                  B   175    				xor a							004985 C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
004986                     B   180    set_lba_and_write_sector
                           B   181    
004986 DDE5                B   182    				push ix
004988 DD21 B9 62 00       B   183    				ld ix,sector_lba0				00498D DD1F00              B   184    				ld (ix),de						004990 DD360300            B   185    				ld (ix+3),0
004994 DDE1                B   186    				pop ix
004996 CD B3 55 00         B   187    				call fs_write_sector
00499A C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
00499B                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
00499B 32 17 62 00         B   202    				ld (partition_temp),a
                           B   203    				
00499F 21000000            B   204    				ld hl,0							0049A3 22 B9 62 00         B   205    				ld (sector_lba0),hl
0049A7 7D                  B   206    				ld a,l
0049A8 32 BC 62 00         B   207    				ld (sector_lba3),a
0049AC CD 9B 55 00         B   208    				call fs_read_sector
0049B0 D8                  B   209    				ret c
                           B   210    			
0049B1 CD EC 49 00         B   211    				call fs_check_fat_sig			0049B5 20 42               B   212    				jr nz,formbad
                           B   213    			
0049B7 CD DD 49 00         B   214    				call check_fat16_id				0049BB 28 1C               B   215    				jr z,at_pbs						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   216    				
0049BD 3A CD 69 00         B   217    				ld a,(sector_buffer+01c2h)		0049C1 E604                B   218    				and 4							0049C3 28 34               B   219    				jr z,formbad	
0049C5 11000000            B   220    				ld de,0
0049C9 3A 17 62 00         B   221    				ld a,(partition_temp)
0049CD 5F                  B   222    				ld e,a
0049CE 1610                B   223    				ld d,16
0049D0 ED5C                B   224    				mlt de
0049D2 21 C9 69 00         B   225    				ld hl,sector_buffer+01beh
0049D6 19                  B   226    				add hl,de						0049D7 AF                  B   227    				xor a
0049D8 C9                  B   228    				ret
                           B   229    					
0049D9 AF                  B   230    at_pbs			xor a
0049DA 3ED3                B   231    				ld a,0d3h						0049DC C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
0049DD                     B   236    check_fat16_id
                           B   237    		
0049DD 21 41 68 00         B   238    				ld hl,sector_buffer+036h		0049E1 11 CA 5A 00         B   239    				ld de,fat16_txt			
0049E5 0605                B   240    				ld b,5
0049E7 CD E7 11 00         B   241    				call os_compare_strings
0049EB C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
0049EC                     B   247    fs_check_fat_sig
                           B   248    
0049EC 2A 09 6A 00         B   249    				ld hl,(sector_buffer+01feh)		0049F0 1155AA00            B   250    				ld de,0aa55h
0049F4 AF                  B   251    				xor a
0049F5 52ED52              B   252    				sbc.s hl,de						0049F8 C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
0049F9 AF                  B   257    formbad			xor a
0049FA 3ECE                B   258    				ld a,0ceh						0049FC C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
0049FD                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049FD C5                  B   268    				push bc
0049FE D5                  B   269    				push de
0049FF E5                  B   270    				push hl
004A00 CD 08 4A 00         B   271    				call go_checkf
004A04 E1                  B   272    				pop hl
004A05 D1                  B   273    				pop de
004A06 C1                  B   274    				pop bc
004A07 C9                  B   275    				ret
                           B   276    				
004A08 CD 83 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
004A0C 21 14 61 00         B   278    				ld hl,volume_mount_list
004A10 19                  B   279    				add hl,de
004A11 7E                  B   280    				ld a,(hl)
004A12 B7                  B   281    				or a							004A13 20 04               B   282    				jr nz,fs_volpre
004A15 AF                  B   283    				xor a
004A16 3ECF                B   284    				ld a,cfh						004A18 C9                  B   285    				ret
                           B   286    			
004A19 11080000            B   287    fs_volpre		ld de,8							004A1D 19                  B   288    				add hl,de
004A1E 11 B9 62 00         B   289    				ld de,sector_lba0
004A22 01040000            B   290    				ld bc,4
004A26 EDB0                B   291    				ldir
004A28 CD 9B 55 00         B   292    				call fs_read_sector
004A2C D8                  B   293    				ret c	
                           B   294    				
004A2D CD EC 49 00         B   295    				call fs_check_fat_sig			004A31 20 C6               B   296    				jr nz,formbad		
                           B   297    			
004A33 CD DD 49 00         B   298    				call check_fat16_id				004A37 20 C0               B   299    				jr nz,formbad
                           B   300    			
004A39 DD21 0B 68 00       B   301    				ld ix,sector_buffer
004A3E DD270B              B   302    				ld hl,(ix+0bh)					004A41 11000200            B   303    				ld de,512						004A45 AF                  B   304    				xor a
004A46 52ED52              B   305    				sbc.s hl,de						004A49 20 AE               B   306    				jr nz,formbad
                           B   307    			
004A4B DD7E0D              B   308    				ld a,(ix+0dh)					004A4E 32 0E 56 00         B   309    				ld (fs_cluster_size),a
004A52 CB27                B   310    				sla a
004A54 32 10 56 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
004A58 21000000            B   313    				ld hl,0
004A5C DD6E0E              B   314    				ld l,(ix+0eh)					004A5F DD660F              B   315    				ld h,(ix+0fh)
004A62 22 12 56 00         B   316    				ld (fs_fat1_position),hl		004A66 11000000            B   317    				ld de,0
004A6A DD5E16              B   318    				ld e,(ix+16h)					004A6D DD5617              B   319    				ld d,(ix+17h)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A70 ED53 1F 56 00       B   320    				ld (fs_sectors_per_fat),de
004A75 19                  B   321    				add hl,de
004A76 22 15 56 00         B   322    				ld (fs_fat2_position),hl		004A7A 19                  B   323    				add hl,de
004A7B 22 18 56 00         B   324    				ld (fs_root_dir_position),hl 	004A7F EB                  B   325    				ex de,hl
004A80 DD6E11              B   326    				ld l,(ix+11h)					004A83 DD6612              B   327    				ld h,(ix+12h)					004A86 7C                  B   328    				ld a,h
004A87 B5                  B   329    				or l
004A88 CA F9 49 00         B   330    				jr z,formbad					004A8C 29                  B   331    				add hl,hl						004A8D 29                  B   332    				add hl,hl						004A8E 29                  B   333    				add hl,hl
004A8F 29                  B   334    				add hl,hl
004A90 EB                  B   335    				ex de,hl
004A91 7A                  B   336    				ld a,d
004A92 32 1E 56 00         B   337    				ld (fs_root_dir_sectors),a		004A96 01000000            B   338    				ld bc,0
004A9A 4A                  B   339    				ld c,d
004A9B 09                  B   340    				add hl,bc				
004A9C 22 1B 56 00         B   341    				ld (fs_data_area),hl			                           B   342    												004AA0 21000000            B   343    				ld hl,0
004AA4 01000000            B   344    				ld bc,0
004AA8 DD4E22              B   345    				ld c,(ix+022h)					004AAB DD4623              B   346    				ld b,(ix+023h)
004AAE DD6E13              B   347    				ld l,(ix+013h)					004AB1 DD6614              B   348    				ld h,(ix+014h)
004AB4 7C                  B   349    				ld a,h							004AB5 B5                  B   350    				or l
004AB6 20 06               B   351    				jr nz,got_tsfbs
004AB8 DD6E20              B   352    				ld l,(ix+020h)					004ABB DD6621              B   353    				ld h,(ix+021h)
004ABE ED5B 1B 56 00       B   354    got_tsfbs 		ld de,(fs_data_area)
004AC3 AF                  B   355    				xor a							004AC4 52ED52              B   356    				sbc.s hl,de						004AC7 30 02               B   357    				jr nc,nomxcb
004AC9 520B                B   358    				dec.s bc
004ACB 3A 0E 56 00         B   359    nomxcb			ld a,(fs_cluster_size)
004ACF CB3F                B   360    fmaxcl			srl a
004AD1 28 08               B   361    				jr z,got_cmaxc					004AD3 CB39                B   362    				srl c				
004AD5 CB1C                B   363    				rr h
004AD7 CB1D                B   364    				rr l
004AD9 18 F4               B   365    				jr fmaxcl
004ADB E5                  B   366    got_cmaxc		push hl							004ADC 11F0FF00            B   367    				ld de,0fff0h
004AE0 AF                  B   368    				xor a
004AE1 52ED52              B   369    				sbc.s hl,de						004AE4 38 02               B   370    				jr c,cmaxok
004AE6 E1                  B   371    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004AE7 D5                  B   372    				push de
004AE8 E1                  B   373    cmaxok			pop hl
004AE9 22 22 56 00         B   374    				ld (fs_max_data_clusters),hl
004AED AF                  B   375    				xor a
004AEE C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
004AEF                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
004AEF ED5B 22 56 00       B   384    				ld de,(fs_max_data_clusters)
004AF4 13                  B   385    				inc de
004AF5 13                  B   386    				inc de							004AF6 D5                  B   387    				push de
004AF7 DDE1                B   388    				pop ix
                           B   389    			
004AF9 AF                  B   390    				xor a
004AFA 32 67 56 00         B   391    cfs_lp2			ld (fs_working_sector),a
004AFE 2A 12 56 00         B   392    				ld hl,(fs_fat1_position)
004B02 CD 71 55 00         B   393    				call set_abs_lba_and_read_secto
004B06 D8                  B   394    				ret c
                           B   395    				
004B07 21 0B 68 00         B   396    				ld hl,sector_buffer
004B0B 0600                B   397    				ld b,0
004B0D AF                  B   398    cfs_lp1			xor a
004B0E B6                  B   399    				or a,(hl)						004B0F 23                  B   400    				inc hl							004B10 20 03               B   401    				jr nz,cfs_ciu					004B12 B6                  B   402    				or a,(hl)
004B13 28 02               B   403    				jr z,cfs_ddcc
004B15 DD2B                B   404    cfs_ciu			dec ix							004B17 23                  B   405    cfs_ddcc		inc hl
004B18 1B                  B   406    				dec de
004B19 7A                  B   407    				ld a,d
004B1A B3                  B   408    				or e
004B1B 28 09               B   409    				jr z,cfs_ok						004B1D 10 EE               B   410    				djnz cfs_lp1
004B1F 3A 67 56 00         B   411    				ld a,(fs_working_sector)
004B23 3C                  B   412    				inc a
004B24 18 D4               B   413    				jr cfs_lp2
                           B   414    				
004B26 3A 0E 56 00         B   415    cfs_ok			ld a,(fs_cluster_size)			004B2A CB3F                B   416    cltoslp			srl a
004B2C 28 04               B   417    				jr z,powdone
004B2E DD29                B   418    				add ix,ix
004B30 18 F8               B   419    				jr cltoslp	
004B32 FD21 D5 62 00       B   420    powdone			ld iy,xrr_temp
004B37 FD3E00              B   421    				ld (iy),ix						004B3A FDCB023E            B   422    				srl (iy+2)
004B3E FDCB011E            B   423    				rr (iy+1)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B42 FDCB001E            B   424    				rr (iy+0)						004B46 FD1700              B   425    				ld de,(iy)						004B49 AF                  B   426    				xor a
004B4A C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
004B4B                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
004B4B CD 33 53 00         B   436    				call fs_find_filename			004B4F D8                  B   437    				ret c							004B50 FEC2                B   438    				cp 0c2h							004B52 20 04               B   439    				jr nz,founddir
004B54 AF                  B   440    				xor a							004B55 3ED1                B   441    				ld a,0d1h						004B57 C9                  B   442    				ret
004B58 AF                  B   443    founddir		xor a							004B59 3E04                B   444    				ld a,04h						004B5B DDCB0B66            B   445    				bit 4,(ix+0bh)
004B5F C8                  B   446    				ret z
004B60 11000000            B   447    				ld de,0
004B64 DD5E1A              B   448    				ld e,(ix+01ah)
004B67 DD561B              B   449    				ld d,(ix+01bh)					004B6A CD 55 1A 00         B   450    				call fs_update_dir_cluster
004B6E AF                  B   451    				xor a
004B6F C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
004B70                     B   458    fs_goto_root_dir_command
                           B   459    
004B70 D5                  B   460    				push de
004B71 11000000            B   461    				ld de,0
004B75 CD 55 1A 00         B   462    				call fs_update_dir_cluster
004B79 D1                  B   463    				pop de
004B7A AF                  B   464    				xor a
004B7B C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
004B7C                     B   470    fs_parent_dir_command
                           B   471    
004B7C CD 49 1A 00         B   472    				call fs_get_dir_cluster
004B80 7A                  B   473    				ld a,d
004B81 B3                  B   474    				or e
004B82 20 03               B   475    				jr nz,pdnaroot
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B84 3ECA                B   476    				ld a,0cah						004B86 C9                  B   477    				ret
004B87 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					004B8B 22 25 56 00         B   479    				ld (fs_sought_filename),hl		004B8F 21 28 56 00         B   480    				ld hl,fs_sought_filename+3		004B93 3E20                B   481    				ld a,32
004B95 01080000            B   482    				ld bc,8
004B99 CD 5A 15 00         B   483    				call os_bchl_memfill
004B9D 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
004B9F                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
004B9F CD 33 53 00         B   497    				call fs_find_filename			004BA3 D8                  B   498    				ret c							004BA4 C0                  B   499    				ret nz							                           B   500    								
004BA5 3EC6                B   501    				ld a,0c6h						004BA7 DDCB0B66            B   502    				bit 4,(ix+0bh)
004BAB C0                  B   503    				ret nz
                           B   504    
004BAC AF                  B   505    				xor a
004BAD 32 7B 56 00         B   506    				ld (fs_filepointer_valid),a		004BB1 21000000            B   507    				ld hl,0
004BB5 22 49 56 00         B   508    				ld (fs_file_pointer),hl			004BB9 32 4C 56 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
004BBD DD171C              B   511    				ld de,(ix+01ch)
004BC0 D5                  B   512    				push de
004BC1 E1                  B   513    				pop hl
004BC2 DD4E1F              B   514    				ld c,(ix+01fh)					004BC5 ED53 4D 56 00       B   515    				ld (fs_file_length),de			004BCA 79                  B   516    				ld a,c
004BCB 32 50 56 00         B   517    				ld (fs_file_length+3),a			004BCF B7                  B   518    				or a							004BD0 28 04               B   519    				jr z,fs_dflsm					004BD2 21FFFFFF            B   520    				ld hl,0ffffffh
004BD6 22 55 56 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
004BDA 21000000            B   523    				ld hl,0
004BDE DD6E1A              B   524    				ld l,(ix+01ah)		
004BE1 DD661B              B   525    				ld h,(ix+01bh)
004BE4 22 58 56 00         B   526    				ld (fs_file_start_cluster),hl	004BE8 AF                  B   527    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BE9 C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
004BEA                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
004BEA 2A 55 56 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
004BEE 11000000            B   540    				ld de,0
004BF2 AF                  B   541    				xor a
004BF3 ED5A                B   542    				adc hl,de
004BF5 20 04               B   543    				jr nz,fs_btrok
004BF7 AF                  B   544    fs_fliz			xor a							004BF8 3EC7                B   545    				ld a,0c7h						004BFA C9                  B   546    				ret
                           B   547    			 
004BFB 2A 5E 56 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			004BFF 22 61 56 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
004C03 2A 4D 56 00         B   551    				ld hl,(fs_file_length)			004C07 ED4B 49 56 00       B   552    				ld bc,(fs_file_pointer)			004C0C 3A 4C 56 00         B   553    				ld a,(fs_file_pointer+3)		004C10 5F                  B   554    				ld e,a
004C11 3A 50 56 00         B   555    				ld a,(fs_file_length+3)
004C15 B7                  B   556    				or a							004C16 ED42                B   557    				sbc hl,bc
004C18 9B                  B   558    				sbc a,e
004C19 38 09               B   559    				jr c,fs_fpbad
004C1B 01000000            B   560    				ld bc,0
004C1F AF                  B   561    				xor a
004C20 ED4A                B   562    				adc hl,bc
004C22 20 04               B   563    				jr nz,fs_fpok
004C24 AF                  B   564    fs_fpbad		xor a
004C25 3ECC                B   565    				ld a,0cch						004C27 C9                  B   566    				ret
                           B   567    			
                           B   568    	
004C28 3A 7B 56 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		004C2C B7                  B   570    				or a							004C2D 28 1B               B   571    				jr z,seek_strt
                           B   572    			
004C2F ED5B 61 56 00       B   573    				ld de,(fs_ez80_working_address)
004C34 ED4B 7C 56 00       B   574    				ld bc,(fs_sector_pos_cnt)		004C39 C5                  B   575    				push bc
004C3A ED4B 64 56 00       B   576    				ld bc,(fs_in_sector_offset)
004C3F 21 0B 6A 00         B   577    				ld hl,sector_buffer+0200h		004C43 AF                  B   578    				xor a
004C44 ED42                B   579    				sbc hl,bc		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C46 C3 D6 4C 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
004C4A 3E01                B   583    seek_strt		ld a,1
004C4C 32 7B 56 00         B   584    				ld (fs_filepointer_valid),a
004C50 2A 58 56 00         B   585    				ld hl,(fs_file_start_cluster)	004C54 22 5B 56 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
004C58 3A 4C 56 00         B   588    				ld a,(fs_file_pointer+3)		004C5C 2A 49 56 00         B   589    				ld hl,(fs_file_pointer)			004C60 ED4B 0F 56 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004C65 AF                  B   591    				xor a
004C66 ED42                B   592    				sbc hl,bc						004C68 DE00                B   593    				sbc a,0
004C6A 38 14               B   594    				jr c,fs_fpgbo
004C6C E5                  B   595    fs_fpgnb		push hl				
004C6D 2A 5B 56 00         B   596    				ld hl,(fs_file_working_cluster)
004C71 CD 43 54 00         B   597    				call get_fat_entry_for_cluster
004C75 30 02               B   598    				jr nc,fs_ghok					004C77 E1                  B   599    				pop hl
004C78 C9                  B   600    				ret
004C79 22 5B 56 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
004C7D E1                  B   602    				pop hl
004C7E 18 E0               B   603    				jr fs_fpblp
                           B   604    			
004C80 09                  B   605    fs_fpgbo		add hl,bc						004C81 4C                  B   606    				ld c,h
004C82 CB39                B   607    				srl c							004C84 3A 0E 56 00         B   608    				ld a,(fs_cluster_size)
004C88 91                  B   609    				sub c
004C89 47                  B   610    				ld b,a							004C8A 7C                  B   611    				ld a,h
004C8B E601                B   612    				and 01h
004C8D 67                  B   613    				ld h,a
004C8E 22 64 56 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
004C92 79                  B   616    fs_flns			ld a,c				
004C93 2A 5B 56 00         B   617    				ld hl,(fs_file_working_cluster)
004C97 CD 1A 55 00         B   618    				call cluster_and_offset_to_lba
004C9B CD 9B 55 00         B   619    				call fs_read_sector				004C9F D8                  B   620    				ret c							                           B   621    			
004CA0 C5                  B   622    				push bc							004CA1 11000000            B   623    				ld de,0
004CA5 2A 64 56 00         B   624    				ld hl,(fs_in_sector_offset)		004CA9 5D                  B   625    				ld e,l
004CAA 54                  B   626    				ld d,h
004CAB 21000200            B   627    				ld hl,512
004CAF AF                  B   628    				xor a
004CB0 ED52                B   629    				sbc hl,de						004CB2 44                  B   630    				ld b,h
004CB3 4D                  B   631    				ld c,l							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CB4 21 0B 68 00         B   632    				ld hl,sector_buffer				004CB8 19                  B   633    				add hl,de						004CB9 ED5B 61 56 00       B   634    				ld de,(fs_ez80_working_address)
004CBE EDA0                B   635    fs_cblp			ldi 							                           B   636    
004CC0 7A                  B   637    				ld a,d							004CC1 B3                  B   638    				or e
004CC2 20 0C               B   639    				jr nz,fs_edaok
004CC4 ED53 61 56 00       B   640    				ld (fs_ez80_working_address),de
004CC9 3A 63 56 00         B   641    				ld a,(fs_ez80_working_address+2
004CCD B7                  B   642    				or a
004CCE 28 43               B   643    				jr z,fs_mem_error
                           B   644    
004CD0 CD A3 54 00         B   645    fs_edaok		call transfer_length_countdown	004CD4 28 30               B   646    				jr z,fs_bdld
004CD6 78                  B   647    fs_dadok		ld a,b							004CD7 B1                  B   648    				or c
004CD8 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
004CDA ED43 64 56 00       B   651    				ld (fs_in_sector_offset),bc		004CDF ED53 61 56 00       B   652    				ld (fs_ez80_working_address),de
004CE4 C1                  B   653    				pop bc							004CE5 0C                  B   654    				inc c							004CE6 10 AA               B   655    				djnz fs_flns					                           B   656    			
004CE8 2A 5B 56 00         B   657    				ld hl,(fs_file_working_cluster)
004CEC CD 43 54 00         B   658    				call get_fat_entry_for_cluster	004CF0 D8                  B   659    				ret c							004CF1 22 5B 56 00         B   660    				ld (fs_file_working_cluster),hl
004CF5 CD EC 51 00         B   661    				call fs_compare_hl_fff8			004CF9 D2 24 4C 00         B   662    				jp nc,fs_fpbad			
004CFD 0E00                B   663    fs_nfbok		ld c,0							004CFF 3A 0E 56 00         B   664    				ld a,(fs_cluster_size)	
004D03 47                  B   665    				ld b,a							004D04 18 8C               B   666    				jr fs_flns		
                           B   667    			
004D06 ED43 64 56 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		004D0B C1                  B   669    				pop bc							004D0C ED43 7C 56 00       B   670    				ld (fs_sector_pos_cnt),bc
004D11 AF                  B   671    				xor a							004D12 C9                  B   672    				ret
                           B   673    				
004D13 3EC8                B   674    fs_mem_error	ld a,0c8h						004D15 C1                  B   675    fs_flerr		pop bc
004D16 B7                  B   676    				or a							004D17 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
004D18                     B   681    fs_make_dir_command		
                           B   682    				
004D18 CD 33 53 00         B   683    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D1C D8                  B   684    				ret c
004D1D FEC2                B   685    				cp 0c2h							004D1F 28 04               B   686    				jr z,mdirfnde
004D21 AF                  B   687    				xor a							004D22 3EC9                B   688    				ld a,0c9h						004D24 C9                  B   689    				ret
                           B   690    			
004D25 CD F9 51 00         B   691    mdirfnde		call fs_find_free_cluster		004D29 D8                  B   692    				ret c							004D2A C0                  B   693    				ret nz							                           B   694    							
004D2B 2A 6B 56 00         B   695    				ld hl,(fs_free_cluster)
004D2F 22 6E 56 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
004D33 CD 4A 52 00         B   698    				call fs_find_free_dir_entry		004D37 D8                  B   699    				ret c							004D38 C0                  B   700    				ret nz							                           B   701    			
004D39 DDE5                B   702    				push ix							004D3B D1                  B   703    				pop de
004D3C 21 25 56 00         B   704    				ld hl,fs_sought_filename
004D40 010B0000            B   705    				ld bc,11
004D44 EDB0                B   706    				ldir
004D46 AF                  B   707    				xor a							004D47 0615                B   708    				ld b,21
004D49 12                  B   709    clrdiren		ld (de),a
004D4A 13                  B   710    				inc de
004D4B 10 FC               B   711    				djnz clrdiren
004D4D DD360B10            B   712    				ld (ix+0bh),010h				004D51 DD361821            B   713    				ld (ix+018h),021h				004D55 ED5B 6E 56 00       B   714    				ld de,(fs_new_file_cluster)
004D5A DD731A              B   715    				ld (ix+01ah),e					004D5D DD721B              B   716    				ld (ix+01bh),d
004D60 CD B3 55 00         B   717    				call fs_write_sector			004D64 D8                  B   718    				ret c							                           B   719    				
004D65 CD 21 53 00         B   720    				call fs_clear_sector_buffer
004D69 DD21 0B 68 00       B   721    				ld ix,sector_buffer				004D6E DD36002E            B   722    				ld (ix+00h),02eh				004D72 DD360120            B   723    				ld (ix+01h),020h
004D76 DD36202E            B   724    				ld (ix+020h),02eh
004D7A DD36212E            B   725    				ld (ix+021h),02eh
004D7E DD360B10            B   726    				ld (ix+0bh),010h
004D82 DD362B10            B   727    				ld (ix+02bh),010h
004D86 ED5B 6E 56 00       B   728    				ld de,(fs_new_file_cluster)		004D8B DD731A              B   729    				ld (ix+01ah),e
004D8E DD721B              B   730    				ld (ix+01bh),d
004D91 CD 49 1A 00         B   731    				call fs_get_dir_cluster			004D95 DD733A              B   732    				ld (ix+03ah),e
004D98 DD723B              B   733    				ld (ix+03bh),d
004D9B DD361821            B   734    				ld (ix+018h),021h				004D9F DD363821            B   735    				ld (ix+038h),021h				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004DA3 0609                B   736    				ld b,9
004DA5 DD360220            B   737    mndelp			ld (ix+002h),32
004DA9 DD362220            B   738    				ld (ix+022h),32
004DAD DD23                B   739    				inc ix
004DAF 10 F4               B   740    				djnz mndelp
004DB1 2A 6E 56 00         B   741    				ld hl,(fs_new_file_cluster)		004DB5 AF                  B   742    				xor a
004DB6 CD 1A 55 00         B   743    				call cluster_and_offset_to_lba
004DBA CD B3 55 00         B   744    				call fs_write_sector
004DBE D8                  B   745    				ret c							                           B   746    			
004DBF CD 21 53 00         B   747    				call fs_clear_sector_buffer		004DC3 AF                  B   748    				xor a
004DC4 3C                  B   749    wroslp			inc a
004DC5 32 67 56 00         B   750    				ld (fs_working_sector),a
004DC9 21 0E 56 00         B   751    				ld hl,fs_cluster_size
004DCD BE                  B   752    				cp (hl)
004DCE 28 13               B   753    				jr z,allsclr
004DD0 2A 6E 56 00         B   754    				ld hl,(fs_new_file_cluster)
004DD4 CD 1A 55 00         B   755    				call cluster_and_offset_to_lba
004DD8 CD B3 55 00         B   756    				call fs_write_sector
004DDC D8                  B   757    				ret c
004DDD 3A 67 56 00         B   758    				ld a,(fs_working_sector)
004DE1 18 E1               B   759    				jr wroslp
                           B   760    			
004DE3 2A 6E 56 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004DE7 11FFFF00            B   762    				ld de,0ffffh
004DEB CD 6F 54 00         B   763    				call update_fat_entry_for_clust
004DEF AF                  B   764    				xor a
004DF0 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
004DF1                     B   771    fs_delete_dir_command
                           B   772    
004DF1 CD 33 53 00         B   773    				call fs_find_filename			004DF5 D8                  B   774    				ret c
004DF6 28 04               B   775    				jr z,ddc_gotd
004DF8 3ED1                B   776    				ld a,0d1h						004DFA B7                  B   777    				or a
004DFB C9                  B   778    				ret
                           B   779    				
004DFC DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					004E00 20 04               B   781    				jr nz,okdeldir
004E02 AF                  B   782    				xor a
004E03 3EC4                B   783    				ld a,0c4h						004E05 C9                  B   784    				ret
                           B   785    				
004E06 DD22 71 56 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004E0B CD 79 55 00         B   787    				call backup_sector_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E0F DD6E1A              B   788    				ld l,(ix+01ah)					004E12 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004E15 3A 0E 56 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004E19 47                  B   792    				ld b,a							004E1A 0E00                B   793    				ld c,0			
004E1C 79                  B   794    fs_cne2 		ld a,c
004E1D CD 1A 55 00         B   795    				call cluster_and_offset_to_lba
004E21 CD 9B 55 00         B   796    				call fs_read_sector
004E25 D8                  B   797    				ret c							                           B   798    				
004E26 C5                  B   799    				push bc
004E27 0610                B   800    				ld b,16							004E29 DD21 0B 68 00       B   801    				ld ix,sector_buffer
004E2E 11200000            B   802    				ld de,020h
004E32 DD7E00              B   803    fs_cne1			ld a,(ix)
004E35 B7                  B   804    				or a
004E36 28 0D               B   805    				jr z,fs_chnde
004E38 FEE5                B   806    				cp 0e5h
004E3A 28 09               B   807    				jr z,fs_chnde
004E3C FE2E                B   808    				cp '.'
004E3E 28 05               B   809    				jr z,fs_chnde
004E40 C1                  B   810    				pop bc
004E41 AF                  B   811    				xor a							004E42 3EC5                B   812    				ld a,0c5h						004E44 C9                  B   813    				ret
                           B   814    			
004E45 DD19                B   815    fs_chnde		add ix,de
004E47 10 E9               B   816    				djnz fs_cne1
004E49 C1                  B   817    				pop bc
004E4A 0C                  B   818    				inc c
004E4B 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004E4D CD 43 54 00         B   821    				call get_fat_entry_for_cluster	004E51 D8                  B   822    				ret c
004E52 CD EC 51 00         B   823    				call fs_compare_hl_fff8
004E56 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004E58 CD 8E 55 00         B   826    dir_empty		call restore_sector_lba			004E5C CD 9B 55 00         B   827    				call fs_read_sector
004E60 D8                  B   828    				ret c							004E61 2A 71 56 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004E65 36E5                B   830    fs_delco		ld (hl),0e5h					004E67 CD B3 55 00         B   831    				call fs_write_sector
004E6B D8                  B   832    				ret c
                           B   833    			
004E6C E5                  B   834    				push hl
004E6D DDE1                B   835    				pop ix
004E6F DD6E1A              B   836    				ld l,(ix+01ah)
004E72 DD661B              B   837    				ld h,(ix+01bh)
004E75 22 68 56 00         B   838    				ld (fs_working_cluster),hl
004E79 7C                  B   839    				ld a,h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E7A B5                  B   840    				or l							004E7B C8                  B   841    				ret z							                           B   842    				
004E7C 2A 68 56 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
004E80 CD 43 54 00         B   844    				call get_fat_entry_for_cluster
004E84 D8                  B   845    				ret c
004E85 EB                  B   846    				ex de,hl
                           B   847    				
004E86 2A 68 56 00         B   848    				ld hl,(fs_working_cluster)
004E8A ED53 68 56 00       B   849    				ld (fs_working_cluster),de
004E8F 11000000            B   850    				ld de,0
004E93 CD 6F 54 00         B   851    				call update_fat_entry_for_clust
004E97 D8                  B   852    				ret c
                           B   853    				
004E98 CD EC 51 00         B   854    				call fs_compare_hl_fff8			004E9C 38 DE               B   855    				jr c,clrfatlp
004E9E AF                  B   856    				xor a
004E9F C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
004EA0                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
004EA0 CD 33 53 00         B   867    				call fs_find_filename			004EA4 D8                  B   868    				ret c
004EA5 FEC2                B   869    				cp 0c2h							004EA7 28 04               B   870    				jr z,mfilefnde
004EA9 AF                  B   871    				xor a							004EAA 3EC9                B   872    				ld a,0c9h						004EAC C9                  B   873    				ret
                           B   874    			
004EAD CD 4A 52 00         B   875    mfilefnde		call fs_find_free_dir_entry		004EB1 D8                  B   876    				ret c							004EB2 C0                  B   877    				ret nz							                           B   878    			
004EB3 DDE5                B   879    				push ix							004EB5 D1                  B   880    				pop de
004EB6 21 25 56 00         B   881    				ld hl,fs_sought_filename
004EBA 010B0000            B   882    				ld bc,11
004EBE EDB0                B   883    				ldir
004EC0 AF                  B   884    				xor a							004EC1 0615                B   885    				ld b,21
004EC3 12                  B   886    clrfnen			ld (de),a
004EC4 13                  B   887    				inc de
004EC5 10 FC               B   888    				djnz clrfnen
004EC7 DD361821            B   889    				ld (ix+018h),021h				004ECB CD B3 55 00         B   890    				call fs_write_sector			004ECF D8                  B   891    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004ED0 AF                  B   892    				xor a
004ED1 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
004ED2                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
004ED2 ED5B 55 56 00       B   906    				ld de,(fs_file_transfer_length)
004ED7 21000000            B   907    				ld hl,0
004EDB AF                  B   908    				xor a
004EDC ED5A                B   909    				adc hl,de
004EDE CA F7 4B 00         B   910    				jp z,fs_fliz					                           B   911    				 
004EE2 CD 33 53 00         B   912    				call fs_find_filename			004EE6 D8                  B   913    				ret c							004EE7 FEC2                B   914    				cp 0c2h				
004EE9 C8                  B   915    				ret z							004EEA DDCB0B66            B   916    				bit 4,(ix+0bh)					004EEE 28 04               B   917    				jr z,fs_oknad					004EF0 AF                  B   918    				xor a							004EF1 3EC6                B   919    				ld a,0c6h						004EF3 C9                  B   920    				ret
                           B   921    
004EF4 CD 79 55 00         B   922    fs_oknad		call backup_sector_lba
004EF8 DD22 71 56 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004EFD DD311C              B   925    				ld iy,(ix+01ch)					004F00 DD7E1F              B   926    				ld a,(ix+01fh)
004F03 FD22 51 56 00       B   927    				ld (fs_existing_file_length),iy
004F08 32 51 56 00         B   928    				ld (fs_existing_file_length),a
004F0C ED5B 55 56 00       B   929    				ld de,(fs_file_transfer_length)
004F11 FD19                B   930    				add iy,de						004F13 CE00                B   931    				adc a,0
004F15 DD3E1C              B   932    				ld (ix+01ch),iy					004F18 DD771F              B   933    				ld (ix+01fh),a					004F1B 30 04               B   934    				jr nc,nfsizeok
004F1D AF                  B   935    				xor a
004F1E 3EC7                B   936    				ld a,0c7h						004F20 C9                  B   937    				ret
                           B   938    
004F21 11000000            B   939    nfsizeok		ld de,0
004F25 DD5E1A              B   940    				ld e,(ix+01ah)					004F28 DD561B              B   941    				ld d,(ix+01bh)					004F2B ED53 5B 56 00       B   942    				ld (fs_file_working_cluster),de
004F30 CD B3 55 00         B   943    				call fs_write_sector			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F34 D8                  B   944    				ret c
004F35 7A                  B   945    				ld a,d
004F36 B3                  B   946    				or e
004F37 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004F39 CD F9 51 00         B   949    				call fs_find_free_cluster		004F3D D8                  B   950    				ret c
004F3E C0                  B   951    				ret nz
004F3F 2A 6B 56 00         B   952    				ld hl,(fs_free_cluster)
004F43 22 5B 56 00         B   953    				ld (fs_file_working_cluster),hl
004F47 11FFFF00            B   954    				ld de,0ffffh
004F4B CD 6F 54 00         B   955    				call update_fat_entry_for_clust
004F4F D8                  B   956    				ret c
                           B   957    			
004F50 CD 8E 55 00         B   958    				call restore_sector_lba			004F54 CD 9B 55 00         B   959    				call fs_read_sector
004F58 D8                  B   960    				ret c
004F59 DD2A 71 56 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004F5E ED5B 5B 56 00       B   962    				ld de,(fs_file_working_cluster)
004F63 DD731A              B   963    				ld (ix+01ah),e
004F66 DD721B              B   964    				ld (ix+01bh),d
004F69 CD B3 55 00         B   965    				call fs_write_sector			004F6D D8                  B   966    				ret c
                           B   967    				
                           B   968    					
004F6E 2A 5B 56 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004F72 CD 43 54 00         B   970    				call get_fat_entry_for_cluster
004F76 D8                  B   971    				ret c
004F77 CD EC 51 00         B   972    				call fs_compare_hl_fff8
004F7B 30 1C               B   973    				jr nc,atlclif
004F7D 22 5B 56 00         B   974    				ld (fs_file_working_cluster),hl
004F81 01000000            B   975    				ld bc,0
004F85 3A 0E 56 00         B   976    				ld a,(fs_cluster_size)
004F89 CB27                B   977    				sla a
004F8B 47                  B   978    				ld b,a
004F8C 2A 51 56 00         B   979    				ld hl,(fs_existing_file_length)
004F90 AF                  B   980    				xor a							004F91 ED42                B   981    				sbc hl,bc						004F93 22 51 56 00         B   982    				ld (fs_existing_file_length),hl
004F97 18 D5               B   983    				jr apenclch
                           B   984    				
004F99 ED4B 51 56 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004F9E CB38                B   986    				srl b				
004FA0 48                  B   987    				ld c,b							004FA1 3A 0E 56 00         B   988    				ld a,(fs_cluster_size)
004FA5 91                  B   989    				sub c
004FA6 47                  B   990    				ld b,a							004FA7 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004FA9 2A 5B 56 00         B   993    				ld hl,(fs_file_working_cluster)
004FAD 79                  B   994    				ld a,c
004FAE CD 1A 55 00         B   995    				call cluster_and_offset_to_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FB2 CD 9B 55 00         B   996    				call fs_read_sector
004FB6 D8                  B   997    				ret c
004FB7 C5                  B   998    				push bc							                           B   999    				
004FB8 11000000            B  1000    				ld de,0
004FBC 3A 51 56 00         B  1001    				ld a,(fs_existing_file_length)
004FC0 5F                  B  1002    				ld e,a
004FC1 3A 52 56 00         B  1003    				ld a,(fs_existing_file_length+1
004FC5 E601                B  1004    				and 1
004FC7 57                  B  1005    				ld d,a							004FC8 21000200            B  1006    				ld hl,512	
004FCC AF                  B  1007    				xor a
004FCD ED52                B  1008    				sbc hl,de						004FCF E5                  B  1009    				push hl
004FD0 C1                  B  1010    				pop bc							004FD1 21 0B 68 00         B  1011    				ld hl,sector_buffer
004FD5 19                  B  1012    				add hl,de
004FD6 EB                  B  1013    				ex de,hl						004FD7 7C                  B  1014    				ld a,h			
004FD8 B5                  B  1015    				or l
004FD9 20 04               B  1016    				jr nz,fs_dcsb					004FDB CD 21 53 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
004FDF 2A 5E 56 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			004FE3 EDA0                B  1019    fs_cbsb			ldi								004FE5 7C                  B  1020    				ld a,h							004FE6 B5                  B  1021    				or l
004FE7 20 0D               B  1022    				jr nz,fs_srcadok
004FE9 22 5E 56 00         B  1023    				ld (fs_ez80_address),hl
004FED 3A 60 56 00         B  1024    				ld a,(fs_ez80_address+2)
004FF1 B7                  B  1025    				or a
004FF2 CA 13 4D 00         B  1026    				jp z,fs_mem_error
004FF6 CD A3 54 00         B  1027    fs_srcadok		call transfer_length_countdown
004FFA 28 54               B  1028    				jr z,fs_lbof					004FFC 78                  B  1029    fs_sadok		ld a,b							004FFD B1                  B  1030    				or c
004FFE 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
005000 22 5E 56 00         B  1033    				ld (fs_ez80_address),hl			005004 C1                  B  1034    				pop bc							005005 79                  B  1035    				ld a,c
005006 2A 5B 56 00         B  1036    				ld hl,(fs_file_working_cluster)
00500A CD 1A 55 00         B  1037    				call cluster_and_offset_to_lba
00500E CD B3 55 00         B  1038    				call fs_write_sector			005012 D8                  B  1039    				ret c							005013 0C                  B  1040    				inc c							005014 05                  B  1041    				dec b
005015 28 0B               B  1042    				jr z,fs_sfncl					005017 C5                  B  1043    fs_sfns			push bc				
005018 01000200            B  1044    				ld bc,512						00501C 11 0B 68 00         B  1045    				ld de,sector_buffer				005020 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005022 CD F9 51 00         B  1048    fs_sfncl		call fs_find_free_cluster		005026 D8                  B  1049    				ret c							005027 C0                  B  1050    				ret nz							005028 2A 5B 56 00         B  1051    				ld hl,(fs_file_working_cluster)
00502C ED5B 6B 56 00       B  1052    				ld de,(fs_free_cluster)
005031 CD 6F 54 00         B  1053    				call update_fat_entry_for_clust
005035 D8                  B  1054    				ret c
005036 2A 6B 56 00         B  1055    				ld hl,(fs_free_cluster)
00503A 22 5B 56 00         B  1056    				ld (fs_file_working_cluster),hl
00503E 11FFFF00            B  1057    				ld de,0ffffh
005042 CD 6F 54 00         B  1058    				call update_fat_entry_for_clust
005046 D8                  B  1059    				ret c
005047 3A 0E 56 00         B  1060    				ld a,(fs_cluster_size)
00504B 47                  B  1061    				ld b,a							00504C 0E00                B  1062    				ld c,0							00504E 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
005050 C1                  B  1065    fs_lbof			pop bc
005051 79                  B  1066    				ld a,c							005052 2A 5B 56 00         B  1067    				ld hl,(fs_file_working_cluster)
005056 CD 1A 55 00         B  1068    				call cluster_and_offset_to_lba
00505A CD B3 55 00         B  1069    				call fs_write_sector	
00505E D8                  B  1070    				ret c
00505F AF                  B  1071    				xor a							005060 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
005061                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
005061 CD 33 53 00         B  1079    				call fs_find_filename			005065 D8                  B  1080    				ret c
005066 C0                  B  1081    				ret nz
                           B  1082    				
005067 DDCB0B66            B  1083    				bit 4,(ix+0bh)					00506B 28 04               B  1084    				jr z,okdelf
00506D AF                  B  1085    				xor a
00506E 3EC6                B  1086    				ld a,0c6h						005070 C9                  B  1087    				ret
                           B  1088    				
005071 DDE5                B  1089    okdelf			push ix
005073 E1                  B  1090    				pop hl
005074 C3 65 4E 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
005078                     B  1097    fs_rename_command
                           B  1098    
005078 CD 33 53 00         B  1099    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00507C D8                  B  1100    				ret c							00507D FEC2                B  1101    				cp 0c2h							00507F 28 04               B  1102    				jr z,fs_nfnok					005081 AF                  B  1103    				xor a							005082 3EC9                B  1104    				ld a,0c9h						005084 C9                  B  1105    				ret
                           B  1106    			
005085 21 25 56 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		005089 11 3D 56 00         B  1108    				ld de,fs_filename_buffer
00508D 010B0000            B  1109    				ld bc,11
005091 EDB0                B  1110    				ldir
005093 21 31 56 00         B  1111    				ld hl,fs_alt_filename			005097 11 25 56 00         B  1112    				ld de,fs_sought_filename
00509B 010B0000            B  1113    				ld bc,11
00509F EDB0                B  1114    				ldir
0050A1 CD 33 53 00         B  1115    				call fs_find_filename			0050A5 D8                  B  1116    				ret c
0050A6 FEC2                B  1117    				cp 0c2h
0050A8 C8                  B  1118    				ret z							                           B  1119    				
0050A9 DDE5                B  1120    				push ix
0050AB D1                  B  1121    				pop de
0050AC 21 3D 56 00         B  1122    				ld hl,fs_filename_buffer	 	0050B0 010B0000            B  1123    				ld bc,11
0050B4 EDB0                B  1124    				ldir							0050B6 CD B3 55 00         B  1125    				call fs_write_sector			                           B  1126    				
0050BA AF                  B  1127    fs_rndone		xor a
0050BB C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
0050BC                     B  1134    fs_goto_first_dir_entry
                           B  1135    
0050BC CD 49 1A 00         B  1136    				call fs_get_dir_cluster
0050C0 ED53 74 56 00       B  1137    				ld (fs_dir_entry_cluster),de
0050C5 AF                  B  1138    				xor a
0050C6 32 7A 56 00         B  1139    				ld (fs_dir_entry_sector),a		0050CA 11000000            B  1140    				ld de,0
0050CE ED53 77 56 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
0050D3                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
0050D3 3A 7A 56 00         B  1156    				ld a,(fs_dir_entry_sector)		0050D7 4F                  B  1157    				ld c,a
0050D8 2A 74 56 00         B  1158    				ld hl,(fs_dir_entry_cluster)	0050DC CD 1A 55 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
0050E0 7C                  B  1161    				ld a,h							0050E1 B5                  B  1162    				or l							0050E2 20 09               B  1163    				jr nz,nr_read					0050E4 2A 18 56 00         B  1164    				ld hl,(fs_root_dir_position)	0050E8 79                  B  1165    				ld a,c
0050E9 CD 60 55 00         B  1166    				call set_absolute_lba
                           B  1167    				
0050ED CD 9B 55 00         B  1168    nr_read			call fs_read_sector				0050F1 D8                  B  1169    				ret c							                           B  1170    				
0050F2 ED5B 77 56 00       B  1171    				ld de,(fs_dir_entry_line_offset
0050F7 DD21 0B 68 00       B  1172    dscan_int_loop	ld ix,sector_buffer
0050FC DD19                B  1173    				add ix,de
0050FE DD7E00              B  1174    ds_int_loop		ld a,(ix)
005101 B7                  B  1175    				or a							005102 28 0E               B  1176    				jr z,fs_dir_entry_free		
005104 FEE5                B  1177    				cp 0e5h							005106 28 0A               B  1178    				jr z,fs_dir_entry_free	
005108 FE05                B  1179    				cp 05h							00510A 28 06               B  1180    				jr z,fs_dir_entry_free	
00510C DDCB0B5E            B  1181    				bit 3,(ix+0bh)					005110 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
005112                     B  1184    fs_dir_entry_free
                           B  1185    
005112 EB                  B  1186    				ex de,hl
005113 11200000            B  1187    				ld de,32
005117 19                  B  1188    				add hl,de
005118 EB                  B  1189    				ex de,hl
005119 CB4A                B  1190    				bit 1,d
00511B 28 DA               B  1191    				jr z,dscan_int_loop
00511D 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
00511F                     B  1194    fs_dir_entry_in_use
                           B  1195    				
00511F ED53 77 56 00       B  1196    				ld (fs_dir_entry_line_offset),d
005124 DDE5                B  1197    				push ix
005126 E1                  B  1198    				pop hl
005127 CD 2D 10 00         B  1199    				call os_clear_output_line
00512B 0608                B  1200    				ld b,8							00512D 11 2D 63 00         B  1201    				ld de,output_line
005131 7E                  B  1202    dcopyn			ld a,(hl)
005132 FE20                B  1203    				cp ' '							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005134 28 02               B  1204    				jr z,digchar
005136 12                  B  1205    				ld (de),a
005137 13                  B  1206    				inc de
005138 23                  B  1207    digchar			inc hl
005139 10 F6               B  1208    				djnz dcopyn
00513B 7E                  B  1209    				ld a,(hl)						00513C FE20                B  1210    				cp ' '							00513E 28 0A               B  1211    				jr z,dirnoex
005140 3E2E                B  1212    				ld a,'.'						005142 12                  B  1213    				ld (de),a
005143 13                  B  1214    				inc de	
005144 01030000            B  1215    				ld bc,3							005148 EDB0                B  1216    				ldir
00514A AF                  B  1217    dirnoex			xor a 
00514B 12                  B  1218    				ld (de),a						                           B  1219    				
00514C 47                  B  1220    				ld b,a
00514D DDCB0B66            B  1221    				bit 4,(ix+0bh)					005151 28 01               B  1222    				jr z,fs_fniaf		
005153 04                  B  1223    				inc b							005154 DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					005157 DD4E1F              B  1225    				ld c,(ix+01fh)
00515A 21 2D 63 00         B  1226    				ld hl,output_line				00515E AF                  B  1227    				xor a
00515F C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
005160                     B  1233    fs_goto_next_dir_entry
                           B  1234    
005160 11200000            B  1235    				ld de,32
005164 2A 77 56 00         B  1236    				ld hl,(fs_dir_entry_line_offset
005168 19                  B  1237    				add hl,de
005169 22 77 56 00         B  1238    				ld (fs_dir_entry_line_offset),h
00516D CB4C                B  1239    				bit 1,h
00516F CA D3 50 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
005173 21000000            B  1242    dscan_new_sect	ld hl,0				
005177 22 77 56 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
00517B 21 7A 56 00         B  1245    				ld hl,fs_dir_entry_sector
00517F 34                  B  1246    				inc (hl)						                           B  1247    			
005180 ED5B 74 56 00       B  1248    				ld de,(fs_dir_entry_cluster)
005185 7A                  B  1249    				ld a,d
005186 B3                  B  1250    				or e							005187 20 0B               B  1251    				jr nz,nonroot2
005189 3A 1E 56 00         B  1252    				ld a,(fs_root_dir_sectors)
00518D BE                  B  1253    				cp (hl)
00518E 28 23               B  1254    				jr z,endofdir			
005190 C3 D3 50 00         B  1255    				jp fs_get_dir_entry
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1256    												005194 3A 0E 56 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
005198 BE                  B  1258    				cp (hl)							005199 C2 D3 50 00         B  1259    				jp nz,fs_get_dir_entry
00519D 3600                B  1260    				ld (hl),0						00519F 2A 74 56 00         B  1261    				ld hl,(fs_dir_entry_cluster)
0051A3 CD 43 54 00         B  1262    				call get_fat_entry_for_cluster
0051A7 22 74 56 00         B  1263    				ld (fs_dir_entry_cluster),hl
0051AB CD EC 51 00         B  1264    				call fs_compare_hl_fff8			0051AF DA D3 50 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
0051B3 3ED2                B  1267    endofdir		ld a,0d2h
0051B5 B7                  B  1268    				or a							0051B6 C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
0051B7                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
0051B7 2A 18 56 00         B  1279    				ld hl,(fs_root_dir_position)
0051BB AF                  B  1280    				xor a
0051BC CD 71 55 00         B  1281    				call set_abs_lba_and_read_secto
0051C0 D8                  B  1282    				ret c
0051C1 0E10                B  1283    				ld c,16							0051C3 DD21 0B 68 00       B  1284    				ld ix,sector_buffer
0051C8 DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
0051CB FE08                B  1286    				cp 08h
0051CD 20 11               B  1287    				jr nz,not_label
0051CF DD360B00            B  1288    				ld (ix+0bh),0					0051D3 DDE5                B  1289    				push ix
0051D5 E1                  B  1290    				pop hl
0051D6 E5                  B  1291    				push hl
0051D7 060B                B  1292    				ld b,11
0051D9 CD 15 12 00         B  1293    				call uppercasify_string
0051DD E1                  B  1294    				pop hl
0051DE AF                  B  1295    				xor a
0051DF C9                  B  1296    				ret
                           B  1297    				
0051E0 11200000            B  1298    not_label		ld de,32						0051E4 DD19                B  1299    				add ix,de						0051E6 10 E0               B  1300    				djnz find_vl
0051E8 AF                  B  1301    				xor a
0051E9 3ED4                B  1302    				ld a,0d4h						0051EB C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1308    
0051EC                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
0051EC E5                  B  1315    				push hl
0051ED D5                  B  1316    				push de
0051EE 11F8FF00            B  1317    				ld de,0fff8h			
0051F2 B7                  B  1318    				or a							0051F3 52ED52              B  1319    				sbc.s hl,de						0051F6 D1                  B  1320    				pop de
0051F7 E1                  B  1321    				pop hl
0051F8 C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
0051F9                     B  1327    fs_find_free_cluster
                           B  1328    	
0051F9 DD210000 00         B  1329    				ld ix,0							0051FE ED5B 12 56 00       B  1330    				ld de,(fs_fat1_position)		005203 AF                  B  1331    				xor a				
005204 32 67 56 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
005208 D5                  B  1333    				push de
005209 E1                  B  1334    				pop hl
00520A 3A 67 56 00         B  1335    				ld a,(fs_working_sector)
00520E CD 71 55 00         B  1336    				call set_abs_lba_and_read_secto
005212 D8                  B  1337    				ret c
005213 21 0B 68 00         B  1338    				ld hl,sector_buffer
005217 0600                B  1339    				ld b,0
005219 7E                  B  1340    fs_ffcl1		ld a,(hl)						00521A 23                  B  1341    				inc hl
00521B B6                  B  1342    				or (hl)
00521C 23                  B  1343    				inc hl
00521D 28 14               B  1344    				jr z,fs_gotfc
00521F DD23                B  1345    				inc ix
005221 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
005223 2A 1F 56 00         B  1348    				ld hl,(fs_sectors_per_fat)
005227 3A 67 56 00         B  1349    				ld a,(fs_working_sector)		00522B 3C                  B  1350    				inc a				
00522C BD                  B  1351    				cp l		
00522D 20 D5               B  1352    				jr nz,fs_ffcl2					00522F 3EC1                B  1353    fs_dfull		ld a,c1h						005231 B7                  B  1354    				or a							005232 C9                  B  1355    				ret
                           B  1356    			
005233 DDE5                B  1357    fs_gotfc		push ix							005235 E1                  B  1358    				pop hl							005236 2B                  B  1359    				dec hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005237 2B                  B  1360    				dec hl							005238 ED5B 22 56 00       B  1361    				ld de,(fs_max_data_clusters)
00523D AF                  B  1362    				xor a
00523E 52ED52              B  1363    				sbc.s hl,de						005241 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
005243 DD22 6B 56 00       B  1366    				ld (fs_free_cluster),ix
005248 AF                  B  1367    				xor a
005249 C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
00524A                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
00524A CD 49 1A 00         B  1380    				call fs_get_dir_cluster			00524E EB                  B  1381    				ex de,hl
00524F 22 5B 56 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
005253 AF                  B  1383    				xor a
005254 32 67 56 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
005258 2A 18 56 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	00525C 3A 67 56 00         B  1387    				ld a,(fs_working_sector)
005260 CD 60 55 00         B  1388    				call set_absolute_lba
                           B  1389    				
005264 CD 49 1A 00         B  1390    				call fs_get_dir_cluster			005268 7A                  B  1391    				ld a,d
005269 B3                  B  1392    				or e
00526A 28 0C               B  1393    				jr z,at_rootd
00526C 2A 5B 56 00         B  1394    				ld hl,(fs_file_working_cluster)
005270 3A 67 56 00         B  1395    				ld a,(fs_working_sector)
005274 CD 1A 55 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
005278 CD 9B 55 00         B  1398    at_rootd		call fs_read_sector
00527C D8                  B  1399    				ret c
00527D 0610                B  1400    				ld b,16							00527F 11200000            B  1401    				ld de,32
005283 DD21 0B 68 00       B  1402    				ld ix,sector_buffer
005288 DD7E00              B  1403    scdirfe			ld a,(ix)						00528B B7                  B  1404    				or a
00528C 28 65               B  1405    				jr z,got_fde
00528E FEE5                B  1406    				cp 0e5h
005290 28 61               B  1407    				jr z,got_fde
005292 DD19                B  1408    				add ix,de						005294 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
005296 21 67 56 00         B  1411    				ld hl,fs_working_sector			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00529A 34                  B  1412    				inc (hl)
                           B  1413    				
00529B CD 49 1A 00         B  1414    				call fs_get_dir_cluster			00529F 7A                  B  1415    				ld a,d
0052A0 B3                  B  1416    				or e
0052A1 20 0B               B  1417    				jr nz,ffenotroo
0052A3 3A 1E 56 00         B  1418    				ld a,(fs_root_dir_sectors)		0052A7 BE                  B  1419    				cp (hl)							0052A8 20 AE               B  1420    				jr nz,ffenxtsec
0052AA AF                  B  1421    fenotfnd		xor a							0052AB 3EC3                B  1422    				ld a,0c3h						0052AD C9                  B  1423    				ret
                           B  1424    			
0052AE 3A 0E 56 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			0052B2 BE                  B  1426    				cp (hl)
0052B3 20 A3               B  1427    				jr nz,ffenxtsec
0052B5 2A 5B 56 00         B  1428    				ld hl,(fs_file_working_cluster)
0052B9 CD 43 54 00         B  1429    				call get_fat_entry_for_cluster	0052BD D8                  B  1430    				ret c
0052BE CD EC 51 00         B  1431    				call fs_compare_hl_fff8			0052C2 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
0052C4 CD F9 51 00         B  1434    				call fs_find_free_cluster		0052C8 D8                  B  1435    				ret c							0052C9 C0                  B  1436    				ret nz							0052CA ED5B 6B 56 00       B  1437    				ld de,(fs_free_cluster)
0052CF 2A 5B 56 00         B  1438    				ld hl,(fs_file_working_cluster)
0052D3 CD 6F 54 00         B  1439    				call update_fat_entry_for_clust
0052D7 D8                  B  1440    				ret c
0052D8 EB                  B  1441    				ex de,hl						0052D9 11FFFF00            B  1442    				ld de,0ffffh
0052DD CD 6F 54 00         B  1443    				call update_fat_entry_for_clust
0052E1 D8                  B  1444    				ret c
                           B  1445    			
0052E2 2A 6B 56 00         B  1446    				ld hl,(fs_free_cluster)			0052E6 CD F5 52 00         B  1447    				call fs_clear_cluster			0052EA D8                  B  1448    				ret c
0052EB 2A 6B 56 00         B  1449    				ld hl,(fs_free_cluster)			0052EF C3 4F 52 00         B  1450    				jp ffenxtclu					                           B  1451    			
0052F3 AF                  B  1452    got_fde			xor a
0052F4 C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
0052F5                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
0052F5 22 68 56 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052F9 CD 21 53 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
0052FD AF                  B  1466    				xor a				
0052FE 32 67 56 00         B  1467    				ld (fs_working_sector),a		005302 3A 67 56 00         B  1468    wipeclulp		ld a,(fs_working_sector)		005306 2A 68 56 00         B  1469    				ld hl,(fs_working_cluster)		00530A CD 1A 55 00         B  1470    				call cluster_and_offset_to_lba	00530E CD B3 55 00         B  1471    				call fs_write_sector
005312 D8                  B  1472    				ret c
005313 21 67 56 00         B  1473    				ld hl,fs_working_sector
005317 34                  B  1474    				inc (hl)
005318 3A 0E 56 00         B  1475    				ld a,(fs_cluster_size)
00531C BE                  B  1476    				cp (hl)
00531D 20 E3               B  1477    				jr nz,wipeclulp
00531F AF                  B  1478    				xor a
005320 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
005321                     B  1482    fs_clear_sector_buffer
                           B  1483    			
005321 E5                  B  1484    				push hl
005322 C5                  B  1485    				push bc
005323 21 0B 68 00         B  1486    				ld hl,sector_buffer			
005327 01000200            B  1487    				ld bc,512				
00532B AF                  B  1488    				xor a				
00532C CD 5A 15 00         B  1489    				call os_bchl_memfill	
005330 C1                  B  1490    				pop bc
005331 E1                  B  1491    				pop hl
005332 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
005333                     B  1498    fs_find_filename
                           B  1499    
005333 AF                  B  1500    				xor a
                           B  1501    
005334                     B  1502    fs_search	
                           B  1503    				
005334 32 82 56 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
005338 CD 49 1A 00         B  1508    				call fs_get_dir_cluster
00533C ED53 5B 56 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
005341 AF                  B  1510    				xor a
005342 32 67 56 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
005346 2A 18 56 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	00534A 3A 67 56 00         B  1514    				ld a,(fs_working_sector)
00534E CD 60 55 00         B  1515    				call set_absolute_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1516    				
005352 CD 49 1A 00         B  1517    				call fs_get_dir_cluster			005356 7A                  B  1518    				ld a,d
005357 B3                  B  1519    				or e
005358 28 0C               B  1520    				jr z,at_rootd2
00535A 2A 5B 56 00         B  1521    				ld hl,(fs_file_working_cluster)
00535E 3A 67 56 00         B  1522    				ld a,(fs_working_sector)
005362 CD 1A 55 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
005366 CD 9B 55 00         B  1525    at_rootd2		call fs_read_sector
00536A D8                  B  1526    				ret c
00536B 0E10                B  1527    				ld c,16							00536D DD21 0B 68 00       B  1528    				ld ix,sector_buffer
005372 DDE5                B  1529    ndirentr		push ix
005374 D1                  B  1530    				pop de
005375 3A 82 56 00         B  1531    				ld a,(fs_search_type)
005379 B7                  B  1532    				or a
00537A 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
00537C DD7E00              B  1535    				ld a,(ix)						00537F FE80                B  1536    				cp 080h							005381 30 35               B  1537    				jr nc,fnnotsame
005383 FE20                B  1538    				cp 020h
005385 38 31               B  1539    				jr c,fnnotsame
005387 ED5B 7F 56 00       B  1540    				ld de,(fs_stash_dir_block)		00538C DD7E1A              B  1541    				ld a,(ix+01ah)
00538F BB                  B  1542    				cp e
005390 20 26               B  1543    				jr nz,fnnotsame
005392 DD7E1B              B  1544    				ld a,(ix+01bh)
005395 BA                  B  1545    				cp d
005396 28 1E               B  1546    				jr z,fs_found
005398 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
00539A FD21 25 56 00       B  1549    fs_ststr		ld iy,fs_sought_filename		00539F 060B                B  1550    				ld b,11							0053A1 1A                  B  1551    cmpfnlp			ld a,(de)						0053A2 CD 21 12 00         B  1552    				call os_uppercasify				0053A6 6F                  B  1553    				ld l,a
0053A7 FD7E00              B  1554    				ld a,(iy)
0053AA CD 21 12 00         B  1555    				call os_uppercasify
0053AE BD                  B  1556    				cp l				
0053AF 20 07               B  1557    				jr nz,fnnotsame
0053B1 FD23                B  1558    				inc iy
0053B3 13                  B  1559    				inc de
0053B4 10 EB               B  1560    				djnz cmpfnlp
0053B6 AF                  B  1561    fs_found		xor a							0053B7 C9                  B  1562    				ret
                           B  1563    			
0053B8 11200000            B  1564    fnnotsame		ld de,32						0053BC DD19                B  1565    				add ix,de
0053BE 0D                  B  1566    				dec c
0053BF 20 B1               B  1567    				jr nz,ndirentr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1568    				
0053C1 21 67 56 00         B  1569    				ld hl,fs_working_sector			0053C5 34                  B  1570    				inc (hl)
                           B  1571    				
0053C6 CD 49 1A 00         B  1572    				call fs_get_dir_cluster			0053CA 7A                  B  1573    				ld a,d
0053CB B3                  B  1574    				or e
0053CC 20 0D               B  1575    				jr nz,notrootdir
0053CE 3A 1E 56 00         B  1576    				ld a,(fs_root_dir_sectors)		0053D2 BE                  B  1577    				cp (hl)							0053D3 C2 46 53 00         B  1578    				jp nz,ffnnxtsec
0053D7 3EC2                B  1579    fnnotfnd		ld a,0c2h						0053D9 B7                  B  1580    				or a
0053DA C9                  B  1581    				ret
                           B  1582    			
0053DB                     B  1583    notrootdir
                           B  1584    				
0053DB 3A 0E 56 00         B  1585    				ld a,(fs_cluster_size)			0053DF BE                  B  1586    				cp (hl)
0053E0 C2 46 53 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
0053E4 2A 5B 56 00         B  1589    				ld hl,(fs_file_working_cluster)
0053E8 CD 43 54 00         B  1590    				call get_fat_entry_for_cluster
0053EC D8                  B  1591    				ret c
0053ED CD EC 51 00         B  1592    				call fs_compare_hl_fff8			0053F1 30 E4               B  1593    				jr nc,fnnotfnd					0053F3 EB                  B  1594    				ex de,hl						0053F4 C3 3C 53 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
0053F8                     B  1600    fs_hl_to_alt_filename
                           B  1601    
0053F8 11 31 56 00         B  1602    				ld de,fs_alt_filename
0053FC 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
0053FE                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
0053FE 11 25 56 00         B  1612    				ld de,fs_sought_filename
005402 CD 0D 55 00         B  1613    hltofngo		call fs_clear_filename			005406 D5                  B  1614    				push de			
005407 DDE1                B  1615    				pop ix							                           B  1616    				
005409 0E00                B  1617    				ld c,0
00540B 0608                B  1618    				ld b,8
00540D 7E                  B  1619    csfnlp2			ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00540E B7                  B  1620    				or a
00540F C8                  B  1621    				ret z							005410 FE20                B  1622    				cp 32
005412 C8                  B  1623    				ret z							005413 FE2F                B  1624    				cp 02fh
005415 C8                  B  1625    				ret z							005416 FE2E                B  1626    				cp '.'
005418 28 16               B  1627    				jr z,dofn_ext					00541A 12                  B  1628    				ld (de),a
00541B 13                  B  1629    				inc de
00541C 23                  B  1630    				inc hl
00541D 0C                  B  1631    				inc c							00541E 10 ED               B  1632    				djnz csfnlp2					005420 7E                  B  1633    find_ext		ld a,(hl)
005421 FE2E                B  1634    				cp '.'							005423 28 0B               B  1635    				jr z,dofn_ext	
005425 FE20                B  1636    				cp ' '							005427 C8                  B  1637    				ret z
005428 FE2F                B  1638    				cp 02fh
00542A C8                  B  1639    				ret z
00542B B7                  B  1640    				or a
00542C C8                  B  1641    				ret z
00542D 23                  B  1642    				inc hl
00542E 18 F0               B  1643    				jr find_ext
                           B  1644    				
005430 23                  B  1645    dofn_ext		inc hl							005431 0603                B  1646    				ld b,3				
005433 7E                  B  1647    fnextlp			ld a,(hl)						005434 B7                  B  1648    				or a
005435 C8                  B  1649    				ret z							005436 FE20                B  1650    				cp 32
005438 C8                  B  1651    				ret z
005439 DD7708              B  1652    				ld (ix+8),a
00543C DD23                B  1653    				inc ix
00543E 23                  B  1654    				inc hl
00543F 0C                  B  1655    				inc c
005440 10 F1               B  1656    				djnz fnextlp
005442 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
005443                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
005443 C5                  B  1666    				push bc
005444 D5                  B  1667    				push de
005445 01000000            B  1668    				ld bc,0
005449 4D                  B  1669    				ld c,l
00544A 7C                  B  1670    				ld a,h
00544B 2A 12 56 00         B  1671    				ld hl,(fs_fat1_position)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00544F CD 71 55 00         B  1672    				call set_abs_lba_and_read_secto
005453 38 17               B  1673    				jr c,hwerr
005455 DDE5                B  1674    				push ix
005457 DD21 0B 68 00       B  1675    				ld ix,sector_buffer
00545C DD09                B  1676    				add ix,bc
00545E DD09                B  1677    				add ix,bc
005460 21000000            B  1678    				ld hl,0
005464 DD6E00              B  1679    				ld l,(ix)
005467 DD6601              B  1680    				ld h,(ix+1)
00546A DDE1                B  1681    				pop ix
00546C D1                  B  1682    hwerr			pop de
00546D C1                  B  1683    				pop bc
00546E C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
00546F                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
00546F C5                  B  1695    				push bc
005470 E5                  B  1696    				push hl
005471 01000000            B  1697    				ld bc,0
005475 4D                  B  1698    				ld c,l
005476 7C                  B  1699    				ld a,h
005477 2A 12 56 00         B  1700    				ld hl,(fs_fat1_position)		00547B CD 8F 54 00         B  1701    				call fat_upd
00547F 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
005481 E1                  B  1704    				pop hl
005482 E5                  B  1705    				push hl
005483 7C                  B  1706    				ld a,h
005484 2A 15 56 00         B  1707    				ld hl,(fs_fat2_position)		005488 CD 8F 54 00         B  1708    				call fat_upd
00548C E1                  B  1709    fup_end			pop hl
00548D C1                  B  1710    				pop bc
00548E C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
00548F CD 71 55 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
005493 38 0D               B  1715    				jr c,ufehwerr
005495 21 0B 68 00         B  1716    				ld hl,sector_buffer
005499 09                  B  1717    				add hl,bc
00549A 09                  B  1718    				add hl,bc
00549B 73                  B  1719    				ld (hl),e
00549C 23                  B  1720    				inc hl
00549D 72                  B  1721    				ld (hl),d
00549E CD B3 55 00         B  1722    				call fs_write_sector
0054A2 C9                  B  1723    ufehwerr		ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
0054A3                     B  1728    transfer_length_countdown
                           B  1729    
0054A3 E5                  B  1730    				push hl							0054A4 C5                  B  1731    				push bc
                           B  1732    			
0054A5 0604                B  1733    				ld b,4
0054A7 21 49 56 00         B  1734    				ld hl,fs_file_pointer			0054AB 34                  B  1735    fpinclp			inc (hl)
0054AC 20 03               B  1736    				jr nz,fs_fpino
0054AE 23                  B  1737    				inc hl
0054AF 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
0054B1 2A 55 56 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
0054B5 2B                  B  1741    				dec hl
0054B6 22 55 56 00         B  1742    				ld (fs_file_transfer_length),hl
0054BA 01000000            B  1743    				ld bc,0
0054BE B7                  B  1744    				or a
0054BF ED4A                B  1745    				adc hl,bc						                           B  1746    				
0054C1 C1                  B  1747    				pop bc
0054C2 E1                  B  1748    				pop hl
0054C3 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
0054C4                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
0054C4 CD 49 1A 00         B  1757    				call fs_get_dir_cluster			0054C8 7A                  B  1758    				ld a,d
0054C9 B3                  B  1759    				or e
0054CA 20 10               B  1760    				jr nz,fs_dnnr
0054CC 21 E7 60 00         B  1761    				ld hl,vol_txt+1					0054D0 3A E2 60 00         B  1762    				ld a,(current_volume)
0054D4 C630                B  1763    				add a,030h
0054D6 32 EA 60 00         B  1764    				ld (vol_txt+4),a
0054DA AF                  B  1765    				xor a
0054DB C9                  B  1766    				ret
                           B  1767    					
0054DC ED53 7F 56 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
0054E1 CD 7C 4B 00         B  1769    				call fs_parent_dir_command		0054E5 D8                  B  1770    				ret c
0054E6 B7                  B  1771    				or a
0054E7 C0                  B  1772    				ret nz
0054E8 3E01                B  1773    				ld a,1
0054EA CD 34 53 00         B  1774    				call fs_search					0054EE D8                  B  1775    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0054EF C0                  B  1776    				ret nz
                           B  1777    					
0054F0 DDE5                B  1778    fs_gdbn			push ix
0054F2 E1                  B  1779    				pop hl
0054F3 060B                B  1780    				ld b,11							0054F5 7E                  B  1781    ntdirn			ld a,(hl)
0054F6 FE20                B  1782    				cp ' '
0054F8 28 03               B  1783    				jr z,rdirfsp
0054FA 23                  B  1784    				inc hl
0054FB 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
0054FD 3600                B  1787    rdirfsp			ld (hl),0
0054FF DDE5                B  1788    				push ix
005501 ED5B 7F 56 00       B  1789    				ld de,(fs_stash_dir_block)
005506 CD 55 1A 00         B  1790    				call fs_update_dir_cluster		00550A E1                  B  1791    				pop hl	
00550B AF                  B  1792    				xor a							00550C C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
00550D                     B  1797    fs_clear_filename
                           B  1798    
00550D D5                  B  1799    				push de							00550E C5                  B  1800    				push bc
00550F 060C                B  1801    				ld b,12
005511 3E20                B  1802    				ld a,' '
005513 12                  B  1803    clrfnlp			ld (de),a
005514 13                  B  1804    				inc de
005515 10 FC               B  1805    				djnz clrfnlp
005517 C1                  B  1806    				pop bc
005518 D1                  B  1807    				pop de
005519 C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
00551A                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
00551A C5                  B  1817    				push bc
00551B D5                  B  1818    				push de
00551C E5                  B  1819    				push hl
00551D DDE5                B  1820    				push ix
                           B  1821    
00551F 2B                  B  1822    				dec hl							005520 2B                  B  1823    				dec hl							005521 11000000            B  1824    				ld de,0							005525 01000000            B  1825    				ld bc,0
005529 5F                  B  1826    				ld e,a
00552A 3A 0E 56 00         B  1827    				ld a,(fs_cluster_size)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00552E CB3F                B  1828    caotllp			srl a
005530 28 03               B  1829    				jr z,clusdone
005532 29                  B  1830    				add hl,hl						005533 18 F9               B  1831    				jr caotllp
                           B  1832    			
005535 ED4B 1B 56 00       B  1833    clusdone		ld bc,(fs_data_area)			00553A 09                  B  1834    				add hl,bc						00553B 19                  B  1835    				add hl,de						                           B  1836    				
00553C E5                  B  1837    add_ptn_offset	push hl							00553D CD 83 1A 00         B  1838    				call fs_calc_volume_offset
005541 DD21 14 61 00       B  1839    				ld ix,volume_mount_list
005546 DD19                B  1840    				add ix,de
005548 E1                  B  1841    				pop hl
005549 DD0708              B  1842    				ld bc,(ix+08h)					00554C DD7E0B              B  1843    				ld a,(ix+0bh)
00554F 09                  B  1844    				add hl,bc
005550 CE00                B  1845    				adc a,0
005552 22 B9 62 00         B  1846    				ld (sector_lba0),hl				005556 32 BC 62 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
00555A DDE1                B  1849    				pop ix
00555C E1                  B  1850    				pop hl
00555D D1                  B  1851    				pop de
00555E C1                  B  1852    				pop bc
00555F C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
005560                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
005560 C5                  B  1862    				push bc							005561 D5                  B  1863    				push de							005562 E5                  B  1864    				push hl							005563 DDE5                B  1865    				push ix							005565 01000000            B  1866    				ld bc,0
005569 11000000            B  1867    				ld de,0
00556D 5F                  B  1868    				ld e,a
00556E 19                  B  1869    				add hl,de
00556F 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
005571                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
005571 CD 60 55 00         B  1875    				call set_absolute_lba
005575 C3 9B 55 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1880    
005579                     B  1881    backup_sector_lba
                           B  1882    
005579 C5                  B  1883    				push bc
00557A D5                  B  1884    				push de
00557B E5                  B  1885    				push hl
00557C 21 B9 62 00         B  1886    				ld hl,sector_lba0
005580 11 83 56 00         B  1887    				ld de,fs_backed_up_sector_lba0
005584 01040000            B  1888    lbabur			ld bc,4
005588 EDB0                B  1889    				ldir
00558A E1                  B  1890    				pop hl
00558B D1                  B  1891    				pop de
00558C C1                  B  1892    				pop bc
00558D C9                  B  1893    				ret
                           B  1894    
                           B  1895    
00558E                     B  1896    restore_sector_lba
                           B  1897    
00558E C5                  B  1898    				push bc
00558F D5                  B  1899    				push de
005590 E5                  B  1900    				push hl
005591 21 83 56 00         B  1901    				ld hl,fs_backed_up_sector_lba0
005595 11 B9 62 00         B  1902    				ld de,sector_lba0
005599 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
00559B                     B  1907    fs_read_sector
                           B  1908    			
00559B C5                  B  1909    				push bc
00559C D5                  B  1910    				push de
00559D E5                  B  1911    				push hl
00559E DDE5                B  1912    				push ix
0055A0 FDE5                B  1913    				push iy
0055A2 01040000            B  1914    				ld bc,04h						0055A6 CD C4 55 00         B  1915    				call sector_access_redirect
0055AA FDE1                B  1916    secaccend		pop iy
0055AC DDE1                B  1917    				pop ix
0055AE E1                  B  1918    				pop hl
0055AF D1                  B  1919    				pop de
0055B0 C1                  B  1920    				pop bc
0055B1 3F                  B  1921    				ccf								0055B2 C9                  B  1922    				ret								                           B  1923    
                           B  1924    
0055B3                     B  1925    fs_write_sector	
                           B  1926    				
0055B3 C5                  B  1927    				push bc
0055B4 D5                  B  1928    				push de
0055B5 E5                  B  1929    				push hl
0055B6 DDE5                B  1930    				push ix
0055B8 FDE5                B  1931    				push iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0055BA 01080000            B  1932    				ld bc,08h						0055BE CD C4 55 00         B  1933    				call sector_access_redirect
0055C2 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
0055C4                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
0055C4 3A E3 60 00         B  1941    				ld a,(current_driver)			0055C8 CD 1B 1A 00         B  1942    				call locate_driver_base			0055CC EB                  B  1943    				ex de,hl
0055CD 09                  B  1944    				add hl,bc						0055CE E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
0055CF                     B  1949    bootsector_stub
                           B  1950    
0055CF EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
0055D7 352E3000 02004000 
0055DF 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
0055E7 3F00FF00 00000000 
0055EF 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
0055F7 E636984E 4F204E41 
0055FF 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
005607 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
00560E 00                  B  1958    fs_cluster_size				db 0
00560F 000000              B  1959    fs_bytes_per_cluster		dw24 0
005612 000000              B  1960    fs_fat1_position			dw24 0		; offse
005615 000000              B  1961    fs_fat2_position			dw24 0		; offse
005618 000000              B  1962    fs_root_dir_position		dw24 0		; offse
00561B 000000              B  1963    fs_data_area				dw24 0		; offse
00561E 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
00561F 000000              B  1966    fs_sectors_per_fat			dw24 0
005622 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
005625 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
00562B 00 00 00 00 00 00 
005631 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
005637 00 00 00 00 00 00 
00563D 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
005643 00 00 00 00 00 00 
                           B  1972    
005649 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
00564D 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
005651 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005655 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
005658 000000              B  1979    fs_file_start_cluster		dw24 0
00565B 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
00565E 000000              B  1982    fs_ez80_address				dw24 0
005661 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
005664 000000              B  1985    fs_in_sector_offset			dw24 0
005667 00                  B  1986    fs_working_sector			db 0
                           B  1987    
005668 000000              B  1988    fs_working_cluster			dw24 0
00566B 000000              B  1989    fs_free_cluster				dw24 0
00566E 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
005671 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
005674 000000              B  1994    fs_dir_entry_cluster		dw24 0
005677 000000              B  1995    fs_dir_entry_line_offset	dw24 0
00567A 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
00567B 00                  B  1998    fs_filepointer_valid		db 0
00567C 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
00567F 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
005682 00                  B  2003    fs_search_type				db 0
                           B  2004    
005683 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3115    
                           A  3116    ;----------------------------------------------
                           A  3117    ; OS Data 
                           A  3118    ;----------------------------------------------
                           A  3119    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005687                     B     9    kernal_table
                           B    10    
005687 151800              B    11    	dw24 ext_mount_volumes			;00		
00568A C31700              B    12    	dw24 os_get_device_info			;01		
00568D 791600              B    13    	dw24 os_check_volume_format		;02		
005690 A41A00              B    14    	dw24 ext_change_volume			;03		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005693 D61700              B    15    	dw24 os_get_volume_info			;04		
005696 831600              B    16    	dw24 ext_format					;05		
005699 B51600              B    17    	dw24 ext_make_dir				;06		
00569C C31600              B    18    	dw24 ext_change_dir				;07		
00569F D11600              B    19    	dw24 os_parent_dir				;08		
0056A2 D71600              B    20    	dw24 os_root_dir				;09		
0056A5 1F1700              B    21    	dw24 ext_delete_dir				;0a		
0056A8 081600              B    22    	dw24 ext_find_file				;0b		
0056AB 241600              B    23    	dw24 ext_set_file_pointer		;0c		
0056AE 1D1600              B    24    	dw24 os_set_load_length			;0d		
0056B1 371600              B    25    	dw24 ext_read_bytes_from_file	;0e		
0056B4 DD1600              B    26    	dw24 ext_erase_file				;0f		
0056B7 051700              B    27    	dw24 ext_rename_file			;10		
0056BA 471600              B    28    	dw24 ext_create_file			;11		
0056BD 591600              B    29    	dw24 ext_write_bytes_to_file	;12		
0056C0 721A00              B    30    	dw24 fs_get_total_sectors		;13		
0056C3 EB1600              B    31    	dw24 os_goto_first_dir_entry	;14		 
0056C6 F11600              B    32    	dw24 os_get_dir_entry			;15		
0056C9 F71600              B    33    	dw24 os_goto_next_dir_entry		;16		
0056CC 2F1700              B    34    	dw24 ext_read_sector			;17		
0056CF 5D1700              B    35    	dw24 ext_write_sector			;18		
0056D2 E01A00              B    36    	dw24 ext_file_sector_list		;19		
0056D5 491A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0056D8 551A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0056DB FD1600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0056DE 8F4500              B    41    	dw24 os_wait_key_press			;1d		
0056E1 EA4500              B    42    	dw24 os_get_key_press			;1e		
0056E4 461500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0056E7 E41700              B    45    	dw24 ext_serial_get_header		;20		
0056EA EE1700              B    46    	dw24 ext_serial_receive_file	;21		 
0056ED F71700              B    47    	dw24 ext_serial_send_file		;22		 
0056F0 041800              B    48    	dw24 ext_serial_tx				;23		
0056F3 0B1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
0056F6 150F00              B    51    	dw24 ext_print_string			;25		
0056F9 143E00              B    52    	dw24 hwsc_clear_screen			;26		
0056FC E64100              B    53    	dw24 hwsc_wait_vrt				;27		
0056FF CB1300              B    54    	dw24 os_set_cursor_position		;28		
005702 441A00              B    55    	dw24 ext_plot_char				;29		
005705 621500              B    56    	dw24 ext_set_pen				;2a		
005708 6F1500              B    57    	dw24 ext_background_colours		;2b		
00570B 414000              B    58    	dw24 hwsc_draw_cursor			;2c		
00570E 691500              B    59    	dw24 os_get_pen					;2d		
005711 5D3E00              B    60    	dw24 hwsc_scroll_up				;2e		
005714 B43D00              B    61    	dw24 os_set_video_hw_regs		;2f		
005717 4C1500              B    62    	dw24 os_get_display_size		;30		
00571A D64000              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
00571D EB1300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005720 481B00              B    66    	dw24 ext_set_envar				;33		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005723 0C1B00              B    67    	dw24 ext_get_envar				;34		
005726 A21B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
005729 411400              B    70    	dw24 os_set_mouse_window		;36		
00572C 871400              B    71    	dw24 os_get_mouse_position		;37		
00572F 5E1400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005732 544200              B    74    	dw24 hwsc_time_delay			;39		
005735 DF1100              B    75    	dw24 ext_compare_strings		;3a		
005738 5E1000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
00573B 931000              B    77    	dw24 ext_ascii_to_hexword		;3c		
00573E E81000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005741 394200              B    80    	dw24 hwsc_get_version			;3e		
005744 B51300              B    81    	dw24 os_dont_store_registers	;3f		
005747 F91B00              B    82    	dw24 os_get_font_info			;40 	
00574A 774200              B    83    	dw24 hwsc_read_rtc				;41     
00574D 9F4200              B    84    	dw24 hwsc_write_rtc				;42		 
005750 F31B00              B    85    	dw24 os_get_keymap_location		;43		 
005753 F73600              B    86    	dw24 os_get_mem_high			;44
005756 001C00              B    87    	dw24 ext_play_audio				;45
005759 494500              B    88    	dw24 hwsc_disable_audio			;46
00575C 624500              B    89    	dw24 hwsc_get_joysticks			;47
                           B    90    
                           B    91    	
                           B    92    ;----------------------------------------------
                           B    93    ; Non-packed Text Strings
                           B    94    ;----------------------------------------------
                           B    95    
00575F 50524F53 4520666F   B    96    welcome_message			db "PROSE for EZ80P by 
005767 7220455A 38305020 
00576F 62792050 68696C20 
005777 52757374 6F6E2032 
00577F 3031310B 0B 
005784 53595354 454D2052   B    97    						db "SYSTEM RAM free abo
00578C 414D2066 72656520 
005794 61626F76 653A2024 
00579C 00 
00579D 44726976 65733A0B   B    98    storage_txt				db "Drives:",11,0
0057A5 00 
0057A6 434F4D4D 414E4453   B    99    os_dos_cmds_txt			db "COMMANDS",0
0057AE 00 
0057AF 53544152 5455502E   B   100    startup_script_fn		db "STARTUP.SCR",0
0057B7 53435200 
0057BB 2400                B   101    os_hex_prefix_txt		db "$",0
0057BD 4F532056 65727369   B   102    os_version_txt			db "OS Version: $",0	0057C5 6F6E3A20 2400 
0057CB 414D4F45 42412048   B   103    hw_version_txt			db "AMOEBA HW Version: 
0057D3 57205665 7273696F 
0057DB 6E3A2024 00 
0057E0 202F2000            B   104    fwd_slash_txt			db " / ",0
0057E4 4C6F6164 696E672E   B   105    loading_txt				db "Loading..",11,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057EC 2E0B00 
0057EF 53617669 6E672E2E   B   106    saving_txt				db "Saving..",11,0
0057F7 0B00 
0057F9 2E657A70 20         B   107    ezp_extension_txt		db ".ezp",32
0057FE 0B4D6F72 653F0B0B   B   108    os_more_txt				db 11,"More?",11,11,0
005806 00 
005807 52656769 73746572   B   109    nmi_freeze_txt			db "Register Dump:"
00580F 2044756D 703A 
005815 0B0B00              B   110    crlfx2_txt				db 11,11,0
005818 7800                B   111    rep_char_txt			db "x",0
00581A 20746F20 00         B   112    to_txt					db " to ",0
00581F 4552524F 5200       B   113    error_txt				db "ERROR",0
005825 494620              B   114    if_command_txt			db "IF "
005828 454E4420            B   115    end_command_txt			db "END "
                           B   116    
                           B   117    ;----------------------------------------------
                           B   118    ; Packed text section
                           B   119    ;----------------------------------------------
                           B   120    
00582C 00444542 5547       B   121    dictionary				db 0,"DEBUG"			005832 002D2D2D 2D2D       B   122    						db 0,"-----"			005838 00494F              B   123    						db 0,"IO"				00583B 002D2D              B   124    						db 0,"--"				00583E 004D4953 43         B   125    						db 0,"MISC"				005843 002D2D2D 2D         B   126    						db 0,"----"				005848 00616464 72         B   127    						db 0,"addr"				00584D 0050524F 5345       B   128    						db 0,"PROSE"			005853 00612062 2063       B   129    						db 0,"a b c"			005859 00416464 72657373   B   130    						db 0,"Address"			005861 00427974 6573       B   131    						db 0,"Bytes"			005867 00457865 63757461   B   132    						db 0,"Executable"		00586F 626C65 
005872 0048756E 74         B   133    						db 0,"Hunt"				005877 0046696C 6C         B   134    						db 0,"Fill"				00587C 00476F74 6F         B   135    						db 0,"Goto"				                           B   136    						
005881 0053686F 77         B   137    						db 0,"Show"				005886 00435055            B   138    						db 0,"CPU"				00588A 00526567 69737465   B   139    						db 0,"Registers"		005892 7273 
005894 004173              B   140    						db 0,"As"				005897 00415343 4949       B   141    						db 0,"ASCII"			00589D 00436C65 6172       B   142    						db 0,"Clear"			0058A3 00536372 65656E     B   143    						db 0,"Screen"			0058AA 00446973 61737365   B   144    						db 0,"Disassemble"		0058B2 6D626C65 
0058B6 00537769 746368     B   145    						db 0,"Switch"			0058BD 00436F70 79         B   146    						db 0,"Copy"				0058C2 00446576 696365     B   147    						db 0,"Device"			0058C9 00436861 6E6765     B   148    						db 0,"Change"			0058D0 00447269 7665       B   149    						db 0,"Drive"			0058D6 00446972            B   150    						db 0,"Dir"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058DA 002F                B   151    						db 0,"/"				0058DC 00666E              B   152    						db 0,"fn"				                           B   153    						
0058DF 0044656C 657465     B   154    						db 0,"Delete"			0058E6 0046696C 65         B   155    						db 0,"File"				0058EB 00496E66 6F         B   156    						db 0,"Info"				0058F0 00564F4C 783A       B   157    						db 0,"VOLx:"			0058F6 004D616B 65         B   158    						db 0,"Make"				0058FB 0052656D 6F756E74   B   159    						db 0,"Remount"			005903 00537461 7274       B   160    						db 0,"Start"			005909 00576172 6E696E67   B   161    						db 0,"Warning!"			005911 21 
005912 00416C6C            B   162    						db 0,"All"				005916 0052656D 6F7665     B   163    						db 0,"Remove"			00591D 0052656E 616D65     B   164    						db 0,"Rename"			005924 004F72              B   165    						db 0,"Or"				005927 00526563 65697665   B   166    						db 0,"Receive"			00592F 00536176 65         B   167    						db 0,"Save"				005934 00547261 6E736D69   B   168    						db 0,"Transmit"			00593C 74 
00593D 004C6F61 64         B   169    						db 0,"Load"				                           B   170    						
005942 004F532F 4857       B   171    						db 0,"OS/HW"			005948 00566572 73696F6E   B   172    						db 0,"Version"			005950 005B7065 6E207061   B   173    						db 0,"[pen paper]"		005958 7065725D 
00595C 803A                B   174    						db 80h,":"				00595E 813E                B   175    						db 81h,">"				005960 82534F55 4E44       B   176    						db 82h,"SOUND"			005966 00566F6C 756D6573   B   177    						db 0,"Volumes"			00596E 8343                B   178    						db 83h,"C"				005970 844344              B   179    						db 84h,"CD"				005973 85434C53            B   180    						db 85h,"CLS"			005977 8650454E            B   181    						db 86h,"PEN"			00597B 8744                B   182    						db 87h,"D"				00597D 8844454C            B   183    						db 88h,"DEL"			005981 89444952            B   184    						db 89h,"DIR"			005985 8A48                B   185    						db 8ah,"H"				005987 8B46                B   186    						db 8bh,"F"				                           B   187    						
005989 004F6E              B   188    						db 0,"On"				00598C 8C464F52 4D4154     B   189    						db 8ch,"FORMAT"			005993 0047                B   190    						db 0,"G"				005995 8D4C42              B   191    						db 8dh,"LB"				005998 8E4D                B   192    						db 8eh,"M"				00599A 8F4D4F55 4E54       B   193    						db 8fh,"MOUNT"			0059A0 004265              B   194    						db 0,"Be"				0059A3 9052                B   195    						db 90h,"R"				0059A5 915244              B   196    						db 91h,"RD"				0059A8 92524E              B   197    						db 92h,"RN"				0059AB 935258              B   198    						db 93h,"RX"				0059AE 945342              B   199    						db 94h,"SB"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0059B1 9554                B   200    						db 95h,"T"				0059B3 965458              B   201    						db 96h,"TX"				0059B6 97564552 53         B   202    						db 97h,"VERS"			0059BB 00577269 7465       B   203    						db 0,"Write"			                           B   204    						
0059C1 004D656D            B   205    						db 0,"Mem"				0059C5 00227478 7422       B   206    						db 0,22h,"txt",22h		0059CB 0057696C 6C         B   207    						db 0,"Will"				0059D0 00526174 65         B   208    						db 0,"Rate"				0059D5 0061                B   209    						db 0,"a"				0059D7 00507265 70         B   210    						db 0,"Prep"				0059DC 984D44              B   211    						db 98h,"MD"				0059DF 00447269 766573     B   212    						db 0,"Drives"			0059E6 006F6C64 666E       B   213    						db 0,"oldfn"			0059EC 006E6577 666E       B   214    						db 0,"newfn"			0059F2 006C656E            B   215    						db 0,"len"				0059F6 00436F6C 6F757273   B   216    						db 0,"Colours"			0059FE 993F                B   217    						db 99h,"?"				005A00 00436F6D 6D616E64   B   218    						db 0,"Commands"			005A08 73 
005A09 0020                B   219    						db 0," "				005A0B 002D                B   220    						db 0,"-"				                           B   221    						
005A0D 00566F6C 756D65     B   222    						db 0,"Volume"			005A14 0046756C 6C         B   223    						db 0,"Full"				005A19 004E6F74            B   224    						db 0,"Not"				005A1D 00466F75 6E64       B   225    						db 0,"Found"			005A23 004C656E 677468     B   226    						db 0,"Length"			005A2A 005A6572 6F         B   227    						db 0,"Zero"				005A2F 004F7574            B   228    						db 0,"Out"				005A33 004F66              B   229    						db 0,"Of"				005A36 0052616E 6765       B   230    						db 0,"Range"			005A3C 00416C72 65616479   B   231    						db 0,"Already"			005A44 00457869 737473     B   232    						db 0,"Exists"			005A4B 004174              B   233    						db 0,"At"				005A4E 00526F6F 74         B   234    						db 0,"Root"				005A53 004D6973 6D617463   B   235    						db 0,"Mismatch"			005A5B 68 
005A5C 00526571 75657374   B   236    						db 0,"Request"			005A64 00446174 61         B   237    						db 0,"Data"				                           B   238    				
005A69 00454F46            B   239    						db 0,"EOF"				005A6D 00416674 6572       B   240    						db 0,"After"			005A73 00556E6B 6E6F776E   B   241    						db 0,"Unknown"			005A7B 00436F6D 6D616E64   B   242    						db 0,"Command"			005A83 00426164            B   243    						db 0,"Bad"				005A87 00486578            B   244    						db 0,"Hex"				005A8B 004E6F              B   245    						db 0,"No"				005A8E 0041626F 72746564   B   246    						db 0,"Aborted"			005A96 00507265 73656E74   B   247    						db 0,"Present"			005A9E 00436865 636B7375   B   248    						db 0,"Checksum"			005AA6 6D 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005AA7 004C6F61 646564     B   249    						db 0,"Loaded"			005AAE 00436F6D 6D73       B   250    						db 0,"Comms"			005AB4 00457272 6F72       B   251    						db 0,"Error"			005ABA 00417267 756D656E   B   252    						db 0,"Arguments"		005AC2 7473 
005AC4 004C6F73 74         B   253    						db 0,"Lost"				                           B   254    						
005AC9 00                  B   255    						db 0
005ACA 46415431 36         B   256    fat16_txt				db "FAT16"				                           B   257    
005ACF 00536572 69616C     B   258    						db 0,"Serial"			005AD6 0054696D 65         B   259    						db 0,"Time"				005ADB 00466F6E 74         B   260    						db 0,"Font"				005AE0 00546F6F            B   261    						db 0,"Too"				005AE4 004C6F6E 67         B   262    						db 0,"Long"				005AE9 00446573 74696E61   B   263    						db 0,"Destination"		005AF1 74696F6E 
005AF5 0053656C 65637465   B   264    						db 0,"Selected"			005AFD 64 
005AFE 00496E76 616C6964   B   265    						db 0,"Invalid"			005B06 004D6973 73696E67   B   266    						db 0,"Missing"			005B0E 004F4B              B   267    						db 0,"OK"				005B11 004F53              B   268    						db 0,"OS"				005B14 0050726F 74656374   B   269    						db 0,"Protected"		005B1C 6564 
005B1E 0041                B   270    						db 0,"A"				005B20 004973              B   271    						db 0,"Is"				005B23 00456D70 7479       B   272    						db 0,"Empty"			005B29 00456E64            B   273    						db 0,"End"				                           B   274    						
005B2D 0024                B   275    						db 0,"$"
005B2F 7878                B   276    hex_byte_txt			db "xx"					                           B   277    						
005B31 00417070 656E64     B   278    						db 0,"Append"			005B38 003F                B   279    						db 0,"?"				005B3A 0024                B   280    						db 0,"$"				005B3C 00417761 6974696E   B   281    						db 0,"Awaiting"			005B44 67 
005B45 00526563 65697669   B   282    						db 0,"Receiving"		005B4D 6E67 
005B4F 0053656E 64696E67   B   283    						db 0,"Sending"			005B57 000B                B   284    						db 0,11					005B59 002E2E              B   285    						db 0,".."				005B5C 004E616D 65         B   286    						db 0,"Name"				005B61 00204279 746573     B   287    						db 0," Bytes"			005B68 00507265 7373       B   288    						db 0,"Press"			005B6E 00416E79            B   289    						db 0,"Any"				005B72 004B6579            B   290    						db 0,"Key"				005B76 00456E74 6572       B   291    						db 0,"Enter"			005B7C 9A455845 43         B   292    						db 9ah,"EXEC"			                           B   293    				
005B81 0052756E            B   294    						db 0,"Run"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B85 00536372 697074     B   295    						db 0,"Script"			005B8C 00594553            B   296    yes_txt					db 0,"YES" 				005B90 00546F              B   297    						db 0,"To"				005B93 00536574            B   298    						db 0,"Set"				005B97 00436F6E 74696E75   B   299    						db 0,"Continue"			005B9F 65 
005BA0 004E6F6E 65         B   300    						db 0,"None"				005BA5 00447269 766572     B   301    						db 0,"Driver"			005BAC 9B3C                B   302    						db 9bh,"<"				005BAE 004E6577 6572       B   303    						db 0,"Newer"			005BB4 00526571 75697265   B   304    						db 0,"Required"			005BBC 64 
005BBD 00465047 4120636F   B   305    						db 0,"FPGA config"		005BC5 6E666967 
005BC9 00556E63 68616E67   B   306    						db 0,"Unchanged"		005BD1 6564 
005BD3 006C6F63 206C656E   B   307    						db 0,"loc len [per vol 
005BDB 205B7065 7220766F 
005BE3 6C206368 616E7320 
005BEB 6C6F6F70 3F5D20 
005BF2 9C50414C 45545445   B   308    						db 9ch,"PALETTE"		005BFA 0070616C 65747465   B   309    						db 0,"palette"			                           B   310    						
005C02 9D4D4F55 5345       B   311    						db 9dh,"MOUSE"			005C08 00456E61 626C65     B   312    						db 0,"Enable"			005C0F 004B6579 626F6172   B   313    						db 0,"Keyboard"			005C17 64 
005C18 00446574 65637465   B   314    						db 0,"Detected"			005C20 64 
005C21 004D6F75 7365       B   315    						db 0,"Mouse"			005C27 00536563 746F72     B   316    						db 0,"Sector"			005C2E 00496E63 6F727265   B   317    						db 0,"Incorrect"		005C36 6374 
005C38 9E564D4F 4445       B   318    						db 9eh,"VMODE"			005C3E 00566964 656F       B   319    						db 0,"Video"			005C44 004D6F64 65         B   320    						db 0,"Mode"				005C49 9F464F4E 54         B   321    						db 9fh,"FONT"			005C4E 00416E64            B   322    						db 0,"And"				005C52 00536176 696E67     B   323    						db 0,"Saving"			005C59 00556E73 7570706F   B   324    						db 0,"Unsupported"		005C61 72746564 
005C65 A0534554            B   325    						db 0a0h,"SET"			005C69 005B7661 723D7374   B   326    						db 0,"[var=string]"		005C71 72696E67 5D 
                           B   327    
005C76 00456E76 6172       B   328    						db 0,"Envar"			005C7C A1445A              B   329    						db 0a1h,"DZ"			005C7F 0041444C            B   330    						db 0,"ADL"				005C83 005A3830            B   331    						db 0,"Z80"				005C87 00506C61 79         B   332    						db 0,"Play"				005C8C 00417564 696F       B   333    						db 0,"Audio"			                           B   334    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C92 0001                B   335    						db 0,1					                           B   336    
                           B   337    
                           B   338    
                           B   339    
                           B   340    
005C94 2199696A 5F916F92   B   341    save_append_msg			db 021h,099h,069h,06ah,
005C9C 9700 
005C9E 2F0A9300            B   342    os_loadaddress_msg 		db 02fh,00ah,093h,0		005CA2 21649300            B   343    os_filesize_msg			db 021h,064h,093h,0		005CA6 94219700            B   344    ser_rec_msg				db 094h,021h,097h,0		005CAA 956F9897 00         B   345    ser_rec2_msg			db 095h,06fh,098h,097h,
005CAF 966F9897 00         B   346    ser_send_msg			db 096h,06fh,098h,097h,
005CB4 9521BBBC 989700     B   347    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005CBB A77C9097 00         B   348    hw_err_msg				db 0a7h,07ch,090h,097h,
005CC0 607C00              B   349    disk_err_msg			db 060h,07ch,0			005CC3 A1779797 00         B   350    script_aborted_msg		db 0a1h,077h,097h,097h,
005CC8 76B2B397 00         B   351    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   352    
005CCD 9700                B   353    packed_help1				db 097h,0
005CCF 0100                B   354    							db 001h,0			005CD1 0200                B   355    							db 002h,0			005CD3 3307095F 4F500B00   B   356    							db 033h,007h,009h,0
005CDB 3407515F 4F1400     B   357    							db 034h,007h,051h,0
005CE2 37070707 5F195000   B   358    							db 037h,007h,007h,0
005CEA 3B075FC2 1700       B   359    							db 03bh,007h,05fh,0
005CF0 C1075FC3 1700       B   360    							db 0c1h,007h,05fh,0
005CF6 3F070754 5F0E5000   B   361    							db 03fh,007h,007h,0
005CFE 42075F0F 0A00       B   362    							db 042h,007h,05fh,0
005D04 3E070709 5F0D5000   B   363    							db 03eh,007h,007h,0
005D0C 44075F10 500B00     B   364    							db 044h,007h,05fh,0
005D13 475F1011 1200       B   365    							db 047h,05fh,010h,0
005D19 4C075F10 50131400   B   366    							db 04ch,007h,05fh,0
                           B   367    	
005D21 9700                B   368    							db 097h,0
005D23 0300                B   369    							db 003h,0			005D25 0400                B   370    							db 004h,0			005D27 38231E1D 5F1B601E   B   371    							db 038h,023h,01eh,0
005D2F 1D00 
005D31 3C1F5F20 2100       B   372    							db 03ch,01fh,05fh,0
005D37 3D5F101D 00         B   373    							db 03dh,05fh,010h,0
005D3C 411A995F 551C00     B   374    							db 041h,01ah,099h,0
005D43 431F075F 2F2100     B   375    							db 043h,01fh,007h,0
005D4A 561D5F24 1D00       B   376    							db 056h,01dh,05fh,0
005D50 455F2557 00         B   377    							db 045h,05fh,025h,0
005D55 481D5F29 1D00       B   378    							db 048h,01dh,05fh,0
005D5B 4958595F 2A2100     B   379    							db 049h,058h,059h,0
005D62 4A1F075F 2C2100     B   380    							db 04ah,01fh,007h,0
005D69 4B1F075A 5F2D2100   B   381    							db 04bh,01fh,007h,0
005D71 4D1F075A 5F2E2100   B   382    							db 04dh,01fh,007h,0
005D79 235F1860 00         B   383    							db 023h,05fh,018h,0
                           B   384    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D7E 9700                B   385    							db 097h,0
005D80 0500                B   386    							db 005h,0			005D82 0600                B   387    							db 006h,0			005D84 395F1516 00         B   388    							db 039h,05fh,015h,0
005D89 9F1F5FA0 A100       B   389    							db 09fh,01fh,05fh,0
005D8F BA1F5F1B 8200       B   390    							db 0bah,01fh,05fh,0
005D95 B05FB1B0 A700       B   391    							db 0b0h,05fh,0b1h,0
005D9B AE095F1B AF00       B   392    							db 0aeh,09h,05fh,01
005DA1 3A325F1B 5B00       B   393    							db 03ah,032h,05fh,0
005DA7 BEBF5FA4 C000       B   394    							db 0beh,0bfh,05fh,0
005DAD 35AD5FC4 5013C500   B   395    							db 035h,0adh,05fh,0
005DB5 4E5F1030 3100       B   396    							db 04eh,05fh,010h,0
005DBB B7095F1B B8B900     B   397    							db 0b7h,09h,5fh,01b
005DC2 5C5F105D 00         B   398    							db 05ch,05fh,010h,0
005DC7 9700                B   399    							db 097h,0
005DC9 FF                  B   400    							db 0ffh
                           B   401    
                           B   402    
                           B   403    
                           B   404    
005DCA 621D00              B   405    os_cmd_locs					dw24 os_cmd_colon	005DCD 402C00              B   406    							dw24 os_cmd_gtr		005DD0 5F3600              B   407    							dw24 os_cmd_sound	005DD3 091C00              B   408    							dw24 os_cmd_c		005DD6 761C00              B   409    							dw24 os_cmd_cd		005DD9 5C1D00              B   410    							dw24 os_cmd_cls		005DDC 7A3400              B   411    							dw24 os_cmd_pen		005DDF 7C1D00              B   412    							dw24 os_cmd_d		                           B   413    					
005DE2 DD2800              B   414    							dw24 os_cmd_del		005DE5 F22800              B   415    							dw24 os_cmd_dir		005DE8 6E2B00              B   416    							dw24 os_cmd_h		005DEB EE2900              B   417    							dw24 os_cmd_f		005DEE 162A00              B   418    							dw24 os_cmd_format	005DF1 742C00              B   419    							dw24 os_cmd_lb		005DF4 032D00              B   420    							dw24 os_cmd_m		005DF7 033200              B   421    							dw24 os_cmd_remount
                           B   422    
005DFA 5A2D00              B   423    							dw24 os_cmd_r		005DFD 8B2E00              B   424    							dw24 os_cmd_rd		005E00 982E00              B   425    							dw24 os_cmd_rn		005E03 1C2F00              B   426    							dw24 os_cmd_rx		005E06 B42E00              B   427    							dw24 os_cmd_sb		005E09 AF3100              B   428    							dw24 os_cmd_t		005E0C 433100              B   429    							dw24 os_cmd_tx		005E0F 0F3200              B   430    							dw24 os_cmd_vers	                           B   431    							
005E12 4D2D00              B   432    							dw24 os_cmd_md		005E15 1C2C00              B   433    							dw24 os_cmd_help	005E18 403200              B   434    							dw24 os_cmd_exec	005E1B 783400              B   435    							dw24 os_cmd_ltn		005E1E 9A3400              B   436    							dw24 os_cmd_palette
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005E21 CB3400              B   437    							dw24 os_cmd_mouse	005E24 073500              B   438    							dw24 os_cmd_vmode	005E27 A53500              B   439    							dw24 os_cmd_font	                           B   440    							
005E2A F63500              B   441    							dw24 os_cmd_set		005E2D 523600              B   442    							dw24 os_cmd_dz		                           B   443    							
                           B   444    								
005E30 00                  B   445    packed_msg_list				db 0				                           B   446    		
005E31 606100              B   447    							db 060h,061h,0		005E34 21626300            B   448    							db 021h,062h,063h,0
005E38 1D6100              B   449    							db 01dh,061h,0		005E3B 628C1D00            B   450    							db 062h,08ch,01dh,0
005E3F 1D8D628E 00         B   451    							db 01dh,08dh,062h,0
005E44 628C2100            B   452    							db 062h,08ch,021h,0
005E48 21648D65 00         B   453    							db 021h,064h,08dh,0
005E4D 0A666768 00         B   454    							db 00ah,066h,067h,0
005E52 2199696A 00         B   455    							db 021h,099h,069h,0
005E57 696B6C00            B   456    							db 069h,06bh,06ch,0
                           B   457    					
005E5B 727300              B   458    							db 072h,073h,0		005E5E 877500              B   459    							db 087h,075h,0		005E61 76219900            B   460    							db 076h,021h,099h,0
                           B   461    					
005E65 87B500              B   462    							db 087h,0b5h,0		005E68 797400              B   463    							db 079h,074h,0		005E6B 9A7A00              B   464    bytes_loaded_msg			db 09ah,07ah,0		005E6E 7B7C00              B   465    							db 07bh,07ch,0		005E71 747D00              B   466    							db 074h,07dh,0		                           B   467    
005E74 627F00              B   468    format_err_msg				db 062h,07fh,0		                           B   469    
005E77 816600              B   470    							db 081h,066h,0		005E7A 21998384 00         B   471    							db 021h,099h,083h,0
005E7F 76260A00            B   472    							db 076h,026h,00ah,0
005E83 76216400            B   473    							db 076h,021h,064h,0
005E87 2D7700              B   474    							db 02dh,077h,0		005E8A 2D7C6B85 00         B   475    							db 02dh,07ch,06bh,0
005E8F 628C080C 00         B   476    							db 062h,08ch,08h,0c
005E94 A9316708 AA00       B   477    							db 0a9h,031h,067h,0
005E9A 768F0A00            B   478    							db 076h,08fh,00ah,0
005E9E 76850A00            B   479    							db 076h,085h,00ah,0
                           B   480    					
005EA2 746800              B   481    							db 074h,068h,0		005EA5 887D00              B   482    							db 088h,07dh,0		005EA8 8900                B   483    ok_msg						db 089h,0			                           B   484    					
005EAA 876000              B   485    							db 087h,060h,0		005EAD 1A627800            B   486    							db 01ah,062h,078h,0
                           B   487    					
005EB1 1D626300            B   488    							db 01dh,062h,063h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005EB5 7700                B   489    							db 077h,0			                           B   490    					
005EB7 21996D00            B   491    							db 021h,099h,06dh,0
005EBB 8A508B00            B   492    							db 08ah,050h,08bh,0
005EBF 6F71706E 00         B   493    							db 06fh,071h,070h,0
005EC4 763600              B   494    no_vols_msg					db 076h,036h,0		005EC7 97A66300            B   495    none_found_msg				db 097h,0a6h,063h,0
                           B   496    							
005ECB B62100              B   497    							db 0b6h,021h,0		005ECE A9316708 AA00       B   498    							db 0a9h,031h,067h,0
005ED4 21AC00              B   499    							db 021h,0ach,0		                           B   500    							
005ED7 766F00              B   501    							db 076h,06fh,0		005EDA 746F00              B   502    							db 074h,06fh,0		005EDD 66676800            B   503    							db 066h,067h,068h,0
005EE1 BD1A00              B   504    							db 0bdh,01ah,0		005EE4 1A62B300            B   505    							db 01ah,062h,0b3h,0
005EE8 1A7C00              B   506    							db 01ah,07ch,0		005EEB A17C00              B   507    							db 0a1h,07ch,0		                           B   508    							
005EEE FF                  B   509    							db 0ffh				                           B   510    
                           B   511    ;----------------------------------------------
                           B   512    
005EEF                     B   513    kernal_error_code_translation
                           B   514    
005EEF 242D2E14 08110F2A   B   515    					db 24h,2dh,2eh,14h, 08h,11h
005EF7 2F303132 331F 
                           B   516    					
005EFD                     B   517    fs_error_code_translation
                           B   518    
005EFD 00010203 04050607   B   519    					db 00h,01h,02h,03h,04h,05h,
005F05 08090A0B 0C0D1321 
005F0D 22232425 260E0000   B   520    					db 22h,23h,24h,25h,26h,0eh,
                           B   521    
                           B   522    
                           B   523    ;----------------------------------------------
                           B   524    ; Scancode to ASCII keymaps
                           B   525    ;----------------------------------------------
                           B   526    
                           C     0    include	'UK_keymap.asm'
005F15                     C     1    keymap:
005F15 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005F1D 00000000 00006000 
005F25 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005F2D 00007A73 61773200 
005F35 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005F3D 00207666 74723500 
005F45 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005F4D 00006D6A 75373800 
005F55 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005F5D 002E2F6C 3B702D00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005F65 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005F6D 0000005D 00230000 
005F75 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005F7D 00000000 00000000 
005F85 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005F8D 21000000 5A534157 
005F95 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005F9D A3000020 56465452 
005FA5 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005FAD 5E000000 4D4A5526 
005FB5 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005FBD 2800003E 3F4C3A50 
005FC5 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005FCD 00000000 007D007E 
005FD5 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005FDD 00000000 00000000 
005FE5 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005FED 00000000 00000000 
005FF5 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005FFD 00000000 00000000 
006005 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
00600D 00000000 00000000 
006015 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
00601D 00000000 00000000 
006025 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
00602D 00000000 00000000 
006035 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   528    
       00005F15            B   529    unshifted_keymap equ keymap+00h
       00005F77            B   530    shifted_keymap   equ keymap+62h
       00005FD9            B   531    alted_keymap	 equ keymap+c4h
                           B   532    	
                           B   533    ;----------------------------------------------
                           B   534    
00603B 00                  B   535    ui_index				db 0				; u
00603C 00                  B   536    ui_maxchars				db 0				; "
00603D 000000              B   537    ui_string_addr			dw24 0				; "
                           B   538    
                           B   539    ;----------------------------------------------
                           B   540    ; OS Display parameters
                           B   541    ;----------------------------------------------
                           B   542    
006040 00                  B   543    video_mode				db 0
006041 0700                B   544    current_pen				dw 07h				; c
006043 0000                B   545    background_colour		dw 00h				; f
                           B   546    
006045 00000F00 000F0F0F   B   547    pen_palette				dw 0000h,000fh,0f00h,0f
00604D F000FF00 F00FFF0F 
006055 55059909 CC0C710F   B   548    						dw 0555h,0999h,0ccch,0f
00605D 7F00F80D 40088C03 
                           B   549    
006065 00                  B   550    plotchar_colour			db 0				; c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   551    
006066 00                  B   552    req_cursor_image		db 0
006067 00                  B   553    active_cursor_image		db 0
                           B   554    
006068                     B   555    display_parameters							; D
                           B   556    ;-----------------
                           B   557    
006068 000000              B   558    window_rows				dw24 0				; i
00606B 000000              B   559    window_columns			dw24 0				; i
00606E 000000              B   560    window_width_bytes		dw24 0				; i
006071 000000              B   561    window_height_lines		dw24 0				; i
                           B   562    
006074 040000 080000       B   563    font_parameters			dw24 4,8,0,0
00607A 000000 000000 
       00006074            B   564    font_width_bytes		equ font_parameters+0	       00006077            B   565    font_height_lines		equ font_parameters+3
       0000607A            B   566    font_addr				equ font_parameters+6
       0000607D            B   567    font_length				equ font_parameters+9
                           B   568    
006080 000000              B   569    video_window_address	dw24 0
006083 000000              B   570    charmap_address			dw24 0
006086 000000              B   571    attributes_address		dw24 0
006089 000000              B   572    cursor_image_address	dw24 0
00608C 000000              B   573    total_window_bytes		dw24 0
00608F 000000              B   574    total_charmap_bytes		dw24 0
006092 000000              B   575    total_row_bytes			dw24 0				; i
006095 00                  B   576    window_pixel_doubling	db 0
                           B   577    
                           B   578    ;==============================================
                           B   579    ;  Serial Routine Data
                           B   580    ;==============================================
                           B   581    
006096 000000              B   582    serial_ez80_address		dw24 0
006099 000000              B   583    serial_file_length		dw24 0
00609C 000000              B   584    serial_fn_addr			dw24 0
00609F 00 00 00 00 00 00   B   585    serial_filename			blkb 18,0		
0060A5 00 00 00 00 00 00 
0060AB 00 00 00 00 00 00 
0060B1 00                  B   586    serial_fn_length		db 0
0060B2 00                  B   587    serial_timeout			db 0
                           B   588    
0060B3 00 00 00 00 00 00   B   589    serial_fileheader		blkb 20,0
0060B9 00 00 00 00 00 00 
0060BF 00 00 00 00 00 00 
0060C5 00 00 
0060C7 5A383050 2E464845   B   590    serial_header_id		db "Z80P.FHEADER"		0060CF 41444552 
0060D3 00                  B   591    serial_transfer_started	db 0
                           B   592    
0060D4 00                  B   593    anim_wait_count			db 0
                           B   594    
                           B   595    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   596    
0060D5 F3C8                B   597    intellimouse_seq	db 0f3h,200
0060D7 F364                B   598    					db 0f3h,100
0060D9 F350                B   599    					db 0f3h,80
                           B   600    
0060DB E803                B   601    mouse_settings_seq	db 0e8h,default_resolution
0060DD E6                  B   602    					db default_scaling
0060DE F364                B   603    					db 0f3h,default_sample_rate
0060E0 F4                  B   604    					db 0f4h
                           B   605    					
                           B   606    ;----------------------------------------------
                           B   607    ; FILE SYSTEM RELATED VARIABLES
                           B   608    ;----------------------------------------------
                           B   609    
0060E1 00                  B   610    boot_drive			db 0
                           B   611    
0060E2 00                  B   612    current_volume		db 0
                           B   613    	
0060E3 00                  B   614    current_driver		db 0			;normally u
                           B   615    
0060E4 00                  B   616    device_count		db 0			;IE: the nu
                           B   617    
0060E5 00                  B   618    volume_count		db 0
                           B   619    				
0060E6 20564F4C 303A00     B   620    vol_txt				db " VOL0:",0	;space pref
0060ED 44455630 3A00       B   621    dev_txt				db "DEV0:",0
                           B   622    
0060F3 000000              B   623    sector_rd_wr_addr	dw24 0
                           B   624    
                           B   625    ;==============================================
                           B   626    
                           B   627    ; Add storage device drivers here, end with 0
                           B   628    
0060F6 073700              B   629    driver_table		dw24 sd_card_driver	;Device
0060F9 000000              B   630    					dw24 0				;last d
                           B   631    
                           B   632    ; Each driver's code should have a header in th
                           B   633    ; ---------------------------------------------
                           B   634    ; $0    = JP to get ID routin
                           B   635    ; $4    = JP to read sector routine
                           B   636    ; $8    = JP to write sector routinee
                           B   637    ; $c    = ASCII name of device type (null termi
                           B   638    ;==============================================
                           B   639    
0060FC                     B   640    volume_dir_clusters
                           B   641    
0060FC 00 00 00 00 00 00   B   642    					blkb max_volumes*3,0
006102 00 00 00 00 00 00 
006108 00 00 00 00 00 00 
00610E 00 00 00 00 00 00 
                           B   643    	
006114                     B   644    volume_mount_list
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   645    
006114 00 00 00 00 00 00   B   646    					blkb max_volumes*16,0
00611A 00 00 00 00 00 00 
006120 00 00 00 00 00 00 
006126 00 00 00 00 00 00 
00612C 00 00 00 00 00 00 
006132 00 00 00 00 00 00 
006138 00 00 00 00 00 00 
00613E 00 00 00 00 00 00 
006144 00 00 00 00 00 00 
00614A 00 00 00 00 00 00 
006150 00 00 00 00 00 00 
006156 00 00 00 00 00 00 
00615C 00 00 00 00 00 00 
006162 00 00 00 00 00 00 
006168 00 00 00 00 00 00 
00616E 00 00 00 00 00 00 
006174 00 00 00 00 00 00 
00617A 00 00 00 00 00 00 
006180 00 00 00 00 00 00 
006186 00 00 00 00 00 00 
00618C 00 00 00 00 00 00 
006192 00 00 
                           B   647    
                           B   648    ; Each entry is 16 bytes in the form:
                           B   649    
                           B   650    ; OFFSETS
                           B   651    ; -------
                           B   652    ; $00 - Volume is present (0/1)
                           B   653    ; $01 - Volume's host driver number (1 byte)	                           B   654    ; $02 - [reserved]
                           B   655    ; $03 - [reserved]
                           B   656    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   657    ; $07 - Partition number on host drive (0/1/2/3
                           B   658    ; $08 - Offset in sectors from MBR to partition
                           B   659    ; $0c - [reserved]
                           B   660    ; $0d - [reserved]	
                           B   661    ; $0e - [reserved]
                           B   662    ; $0f - [reserved]
                           B   663    
                           B   664    ;==============================================
                           B   665    
006194                     B   666    host_device_hardware_info
                           B   667    
006194 00 00 00 00 00 00   B   668    					blkb 32*4,0
00619A 00 00 00 00 00 00 
0061A0 00 00 00 00 00 00 
0061A6 00 00 00 00 00 00 
0061AC 00 00 00 00 00 00 
0061B2 00 00 00 00 00 00 
0061B8 00 00 00 00 00 00 
0061BE 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0061C4 00 00 00 00 00 00 
0061CA 00 00 00 00 00 00 
0061D0 00 00 00 00 00 00 
0061D6 00 00 00 00 00 00 
0061DC 00 00 00 00 00 00 
0061E2 00 00 00 00 00 00 
0061E8 00 00 00 00 00 00 
0061EE 00 00 00 00 00 00 
0061F4 00 00 00 00 00 00 
0061FA 00 00 00 00 00 00 
006200 00 00 00 00 00 00 
006206 00 00 00 00 00 00 
00620C 00 00 00 00 00 00 
006212 00 00 
                           B   669    
                           B   670    ; Each entry is 32 bytes..
                           B   671    ;
                           B   672    ; OFFSETS
                           B   673    ; -------
                           B   674    ; $00 - Device driver number
                           B   675    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   676    ; $05 - Zero terminated hardware name (22 ASCII
                           B   677    ; (remaining bytes to $1F currently unused)
                           B   678    
                           B   679    ;----------------------------------------------
                           B   680    
006214 000000              B   681    dhwn_temp_pointer		dw24 0
                           B   682    
006217 00                  B   683    partition_temp			db 0
006218 00                  B   684    vols_on_device_temp		db 0
006219 00                  B   685    sys_driver_backup		db 0
00621A 00                  B   686    os_quiet_mode			db 0
                           B   687    
00621B 0B6B00              B   688    default_load_addr		dw24 os_max_addr
                           B   689    
                           B   690    ;----------------------------------------------
                           B   691    
00621E 00 00 00 00 00 00   B   692    time_data				blkb	7,0
006224 00 
                           B   693    
006225 00                  B   694    frozen					db 0
006226 01                  B   695    first_run				db 1
006227 01                  B   696    devices_connected		db 1					                           B   697    
                           B   698    ;----------------------------------------------
                           B   699    
006228 0B6B00              B   700    sys_ram_high			dw24 os_max_addr
00622B 000080              B   701    vram_a_high				dw24 vram_a_addr
00622E 0000C0              B   702    vram_b_high				dw24 vram_b_addr
                           B   703    
                           B   704    ;----------------------------------------------
                           B   705    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006231 00                  B   706    store_a1				db 0		
006232 000000              B   707    store_bc1				dw24 0
006235 000000              B   708    store_de1				dw24 0
006238 000000              B   709    store_hl1				dw24 0
00623B 00                  B   710    store_a2				db 0
00623C 000000              B   711    store_bc2				dw24 0
00623F 000000              B   712    store_de2				dw24 0
006242 000000              B   713    store_hl2				dw24 0
006245 000000              B   714    store_ix				dw24 0
006248 000000              B   715    store_iy				dw24 0
00624B 000000              B   716    store_pc				dw24 0		;only relev
00624E 000000              B   717    store_spl				dw24 0
006251 0000                B   718    store_sps				dw 0
006253 00                  B   719    store_mbase				db 0
006254 00                  B   720    store_f	 				db 0
006255 00                  B   721    store_adl				db 0
                           B   722    
                           B   723    ;----------------------------------------------
006256                     B   724    os_variables
                           B   725    ;----------------------------------------------
                           B   726    
006256 00                  B   727    store_registers			db 0
006257 000000              B   728    com_start_addr			dw24 0
                           B   729    
00625A 00 00 00 00 00 00   B   730    temp_string				blkb max_buffer_chars+2
006260 00 00 00 00 00 00 
006266 00 00 00 00 00 00 
00626C 00 00 00 00 00 00 
006272 00 00 00 00 00 00 
006278 00 00 00 00 00 00 
00627E 00 00 00 00 00 00 
006284 00 00 00 00 00 00 
00628A 00 00 00 00 00 00 
006290 00 00 00 00 00 00 
006296 00 00 00 00 00 00 
00629C 00 00 00 00 00 00 
0062A2 00 00 00 00 00 00 
0062A8 00 00 00 00 
0062AC 00 00 00 00 00 00   B   731    script_fn				blkb 13,0
0062B2 00 00 00 00 00 00 
0062B8 00 
                           B   732    
0062B9 00                  B   733    sector_lba0				db 0			; keep 
0062BA 00                  B   734    sector_lba1				db 0
0062BB 00                  B   735    sector_lba2				db 0
0062BC 00                  B   736    sector_lba3				db 0
                           B   737    
                           B   738    ;----------------------------------------------
                           B   739    
0062BD 000000              B   740    cursor_pos				dw24 0			; 3rd b
                           B   741    
       000062BD            B   742    cursor_y 				equ cursor_pos
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
       000062BE            B   743    cursor_x 				equ cursor_pos+1
                           B   744    						
0062C0 00                  B   745    cursorflashtimer		db 0
0062C1 00                  B   746    cursor_status			db 0
0062C2 00                  B   747    os_linecount			db 0
                           B   748    		
0062C3 000000              B   749    mem_mon_addr			dw24 0
0062C6 000000              B   750    cmdop_start_address		dw24 0
0062C9 000000              B   751    cmdop_end_address		dw24 0
0062CC 000000              B   752    copy_dest_address		dw24 0
0062CF 000000              B   753    hex_address				dw24 0
                           B   754    
0062D2 000000              B   755    find_hexstringascii 	dw24 0
0062D5 000000              B   756    xrr_temp				dw24 0
0062D8 00                  B   757    temphex					db 0
0062D9 00                  B   758    fillbyte				db 0 
0062DA 00                  B   759    ui_im_cache				db 0
                           B   760    
0062DB 00 00 00 00 00 00   B   761    commandstring			blkb max_buffer_chars+2
0062E1 00 00 00 00 00 00 
0062E7 00 00 00 00 00 00 
0062ED 00 00 00 00 00 00 
0062F3 00 00 00 00 00 00 
0062F9 00 00 00 00 00 00 
0062FF 00 00 00 00 00 00 
006305 00 00 00 00 00 00 
00630B 00 00 00 00 00 00 
006311 00 00 00 00 00 00 
006317 00 00 00 00 00 00 
00631D 00 00 00 00 00 00 
006323 00 00 00 00 00 00 
006329 00 00 00 00 
00632D 00 00 00 00 00 00   B   762    output_line				blkb max_buffer_chars+2
006333 00 00 00 00 00 00 
006339 00 00 00 00 00 00 
00633F 00 00 00 00 00 00 
006345 00 00 00 00 00 00 
00634B 00 00 00 00 00 00 
006351 00 00 00 00 00 00 
006357 00 00 00 00 00 00 
00635D 00 00 00 00 00 00 
006363 00 00 00 00 00 00 
006369 00 00 00 00 00 00 
00636F 00 00 00 00 00 00 
006375 00 00 00 00 00 00 
00637B 00 00 00 00 
                           B   763    				
00637F 000000              B   764    os_args_loc				dw24 0
006382 000000              B   765    os_args_pos_cache		dw24 0
                           B   766    
006385 000000              B   767    os_dir_block_cache  	dw24 0
006388 000000              B   768    os_extcmd_jmp_addr		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   769    
                           B   770    
00638B 000000              B   771    script_dir				dw24 0
00638E 000000              B   772    script_file_offset		dw24 0
006391 000000              B   773    script_length			dw24 0
                           B   774    
006394 00                  B   775    script_flags			db 0
                           B   776    
006395 00 00 00 00 00 00   B   777    if_name_txt				blkb max_if_chars+2,0
00639B 00 00 00 00 00 00 
0063A1 00 00 00 00 00 00 
0063A7 00 00 00 00 00 00   B   778    if_value_txt			blkb max_if_chars+2,0
0063AD 00 00 00 00 00 00 
0063B3 00 00 00 00 00 00 
0063B9 00 00 00 00 00 00   B   779    if_label_txt			blkb max_if_chars+2,0
0063BF 00 00 00 00 00 00 
0063C5 00 00 00 00 00 00 
                           B   780    
                           B   781    
0063CB 0000                B   782    char_to_print			db 0,0	; zero terminat
                           B   783    
                           B   784    ;----------------------------------------------
                           B   785    ; Keyboard buffer and registers
                           B   786    ;----------------------------------------------
                           B   787    
0063CD 00 00 00 00 00 00   B   788    scancode_buffer			blkb 32,0
0063D3 00 00 00 00 00 00 
0063D9 00 00 00 00 00 00 
0063DF 00 00 00 00 00 00 
0063E5 00 00 00 00 00 00 
0063EB 00 00 
                           B   789    
0063ED 00                  B   790    key_buf_wr_idx			db 0
0063EE 00                  B   791    key_buf_rd_idx			db 0
0063EF 00                  B   792    key_release_mode		db 0		
0063F0 00                  B   793    not_currently_used		db 0
0063F1 00                  B   794    key_mod_flags			db 0
0063F2 00                  B   795    insert_mode				db 0
0063F3 00                  B   796    current_scancode		db 0
0063F4 00                  B   797    current_asciicode		db 0
                           B   798    
                           B   799    ;----------------------------------------------
                           B   800    ; Mouse related registers
                           B   801    ;----------------------------------------------
                           B   802    
0063F5 00                  B   803    mouse_id				db 0
0063F6 00                  B   804    mouse_packet_size		db 0
                           B   805    
0063F7 00 00 00 00         B   806    mouse_packet			blkb 4,0			; t
0063FB 00                  B   807    mouse_packet_index		db 0				;
0063FC 00                  B   808    mouse_buttons			db 0				;
0063FD 000000              B   809    mouse_disp_x			dw24 0				; c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006400 000000              B   810    mouse_disp_y			dw24 0				; c
006403 00                  B   811    mouse_wheel				db 0				; m
006404 00                  B   812    mouse_updated			db 0
                           B   813    
006405 000000              B   814    mouse_window_size_x		dw24 0				; t
006408 000000              B   815    mouse_window_size_y		dw24 0
00640B 000000              B   816    mouse_abs_x				dw24 0
00640E 000000              B   817    mouse_abs_y				dw24 0
006411 000000              B   818    mouse_disp_x_old		dw24 0
006414 000000              B   819    mouse_disp_y_old		dw24 0
006417 000000              B   820    mouse_disp_x_buffer		dw24 0
00641A 000000              B   821    mouse_disp_y_buffer		dw24 0
00641D 00                  B   822    mouse_new_window		db 0
                           B   823    
                           B   824    ;----------------------------------------------
       000062BD            B   825    first_os_var			equ cursor_y
00641E 00                  B   826    last_os_var				db 0
                           B   827    ;----------------------------------------------
                           B   828    
                           B   829    ;==============================================
                           B   830    ; Environment variables
                           B   831    ;==============================================
                           B   832    
00641F 4552524F 523D3030   B   833    envar_list				db "ERROR=00",0
006427 00 
006428 FF                  B   834    first_ext_ev_entry		db 0ffh
006429 00 00 00 00 00 00   B   835    						blkb envar_buffer_size,
00642F 00 00 00 00 00 00 
006435 00 00 00 00 00 00 
00643B 00 00 00 00 00 00 
006441 00 00 00 00 00 00 
006447 00 00 00 00 00 00 
00644D 00 00 00 00 00 00 
006453 00 00 00 00 00 00 
006459 00 00 00 00 00 00 
00645F 00 00 00 00 00 00 
006465 00 00 00 00 00 00 
00646B 00 00 00 00 00 00 
006471 00 00 00 00 00 00 
006477 00 00 00 00 00 00 
00647D 00 00 00 00 00 00 
006483 00 00 00 00 00 00 
006489 00 00 00 00 00 00 
00648F 00 00 00 00 00 00 
006495 00 00 00 00 00 00 
00649B 00 00 00 00 00 00 
0064A1 00 00 00 00 00 00 
0064A7 00 00 00 00 00 00 
0064AD 00 00 00 00 00 00 
0064B3 00 00 00 00 00 00 
0064B9 00 00 00 00 00 00 
0064BF 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0064C5 00 00 00 00 00 00 
0064CB 00 00 00 00 00 00 
0064D1 00 00 00 00 00 00 
0064D7 00 00 00 00 00 00 
0064DD 00 00 00 00 00 00 
0064E3 00 00 00 00 00 00 
0064E9 00 00 00 00 00 00 
0064EF 00 00 00 00 00 00 
0064F5 00 00 00 00 00 00 
0064FB 00 00 00 00 00 00 
006501 00 00 00 00 00 00 
006507 00 00 00 00 00 00 
00650D 00 00 00 00 00 00 
006513 00 00 00 00 00 00 
006519 00 00 00 00 00 00 
00651F 00 00 00 00 00 00 
006525 00 00 00 00 
                           B   836    
006529 286400              B   837    envar_top_loc			dw24 first_ext_ev_entry
                           B   838    
                           B   839    ;==============================================
                           B   840    
                           B     0    	include		'prose_font_packed.asm'
00652C                     B     1    packed_font_start:
00652C 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
006534 00181800 EEEE6601 
00653C 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
006544 6C00187E E07C0EFC 
00654C 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
006554 C60078EC EC78EDEE 
00655C 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
006564 18300160 03301800 
00656C 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
006574 105438FE 38541000 
00657C 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
006584 07383870 0100037E 
00658C 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
006594 0E1C3870 E0007CE6 
00659C EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
0065A4 0138047C 007CEE0E 
0065AC 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
0065B4 0C0ECE7C 001E3E76 
0065BC E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
0065C4 010E03FC 007EE0FC 
0065CC 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
0065D4 18013803 007CE6E6 
0065DC 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
0065E4 037E0E7C 01000318 
0065EC 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
0065F4 30003030 600E1C38 
0065FC 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
006604 007E0100 0370381C 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
00660C 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
006614 3C380038 007CE601 
00661C EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
006624 FE01E603 00FCE6E6 
00662C FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
006634 E003E67C 00FC01E6 
00663C 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
006644 E0FE00FE E0E0F801 
00664C E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
006654 E67C0001 E603FE01 
00665C E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
006664 007E011C 04DC7800 
00666C E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
006674 01E006FE 00C6EEFE 
00667C D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
006684 FEEEE6E6 007C01E6 
00668C 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
006694 E0E0007C 01E603EA 
00669C EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
0066A4 E6E6007C EEE07C0E 
0066AC EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
0066B4 01E6067C 0001E605 
0066BC 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
0066C4 6C00E6E6 6C3874E6 
0066CC E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
0066D4 00FE0E1C 3870E0FE 
0066DC 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
0066E4 E070381C 0E060078 
0066EC 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
0066F4 C601000B FE381C01 
0066FC 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
006704 00E0E0FC E6E6FC01 
00670C 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
006714 0006067E E6E67E01 
00671C 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
006724 003E70FC 01700301 
00672C 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
006734 00E0E0FC 01E60300 
00673C 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
006744 001C0001 1C047800 
00674C E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
006754 78013804 7C010003 
00675C ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
006764 FC01E604 0100037C 
00676C 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
006774 E6E6FCE0 E000007E 
00677C E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
006784 E601E003 0100037E 
00678C F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
006794 0138031E 01000301 
00679C E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
0067A4 036C3801 0003E2EA 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
0067AC FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
0067B4 387CE601 000301E6 
0067BC 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
0067C4 3870FE00 3C303060 
0067CC 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
0067D4 7818180C 18187800 
0067DC 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
0067E4 070100FF 01001A1C 
0067EC 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
0067F4 297CC6BA A2BAC67C 
0067FC 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
006804 FF0100FF 01009C 
00680B                     B    48    packed_font_end:
                           A  3122    
00680B 00 00 00 00 00 00   A  3123    sector_buffer	blkb 512,0
006811 00 00 00 00 00 00 
006817 00 00 00 00 00 00 
00681D 00 00 00 00 00 00 
006823 00 00 00 00 00 00 
006829 00 00 00 00 00 00 
00682F 00 00 00 00 00 00 
006835 00 00 00 00 00 00 
00683B 00 00 00 00 00 00 
006841 00 00 00 00 00 00 
006847 00 00 00 00 00 00 
00684D 00 00 00 00 00 00 
006853 00 00 00 00 00 00 
006859 00 00 00 00 00 00 
00685F 00 00 00 00 00 00 
006865 00 00 00 00 00 00 
00686B 00 00 00 00 00 00 
006871 00 00 00 00 00 00 
006877 00 00 00 00 00 00 
00687D 00 00 00 00 00 00 
006883 00 00 00 00 00 00 
006889 00 00 00 00 00 00 
00688F 00 00 00 00 00 00 
006895 00 00 00 00 00 00 
00689B 00 00 00 00 00 00 
0068A1 00 00 00 00 00 00 
0068A7 00 00 00 00 00 00 
0068AD 00 00 00 00 00 00 
0068B3 00 00 00 00 00 00 
0068B9 00 00 00 00 00 00 
0068BF 00 00 00 00 00 00 
0068C5 00 00 00 00 00 00 
0068CB 00 00 00 00 00 00 
0068D1 00 00 00 00 00 00 
0068D7 00 00 00 00 00 00 
0068DD 00 00 00 00 00 00 
0068E3 00 00 00 00 00 00 
0068E9 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0068EF 00 00 00 00 00 00 
0068F5 00 00 00 00 00 00 
0068FB 00 00 00 00 00 00 
006901 00 00 00 00 00 00 
006907 00 00 00 00 00 00 
00690D 00 00 00 00 00 00 
006913 00 00 00 00 00 00 
006919 00 00 00 00 00 00 
00691F 00 00 00 00 00 00 
006925 00 00 00 00 00 00 
00692B 00 00 00 00 00 00 
006931 00 00 00 00 00 00 
006937 00 00 00 00 00 00 
00693D 00 00 00 00 00 00 
006943 00 00 00 00 00 00 
006949 00 00 00 00 00 00 
00694F 00 00 00 00 00 00 
006955 00 00 00 00 00 00 
00695B 00 00 00 00 00 00 
006961 00 00 00 00 00 00 
006967 00 00 00 00 00 00 
00696D 00 00 00 00 00 00 
006973 00 00 00 00 00 00 
006979 00 00 00 00 00 00 
00697F 00 00 00 00 00 00 
006985 00 00 00 00 00 00 
00698B 00 00 00 00 00 00 
006991 00 00 00 00 00 00 
006997 00 00 00 00 00 00 
00699D 00 00 00 00 00 00 
0069A3 00 00 00 00 00 00 
0069A9 00 00 00 00 00 00 
0069AF 00 00 00 00 00 00 
0069B5 00 00 00 00 00 00 
0069BB 00 00 00 00 00 00 
0069C1 00 00 00 00 00 00 
0069C7 00 00 00 00 00 00 
0069CD 00 00 00 00 00 00 
0069D3 00 00 00 00 00 00 
0069D9 00 00 00 00 00 00 
0069DF 00 00 00 00 00 00 
0069E5 00 00 00 00 00 00 
0069EB 00 00 00 00 00 00 
0069F1 00 00 00 00 00 00 
0069F7 00 00 00 00 00 00 
0069FD 00 00 00 00 00 00 
006A03 00 00 00 00 00 00 
006A09 00 00 
                           A  3124    
006A0B 00 00 00 00 00 00   A  3125    scratch_pad		blkb 256,0
006A11 00 00 00 00 00 00 
006A17 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006A1D 00 00 00 00 00 00 
006A23 00 00 00 00 00 00 
006A29 00 00 00 00 00 00 
006A2F 00 00 00 00 00 00 
006A35 00 00 00 00 00 00 
006A3B 00 00 00 00 00 00 
006A41 00 00 00 00 00 00 
006A47 00 00 00 00 00 00 
006A4D 00 00 00 00 00 00 
006A53 00 00 00 00 00 00 
006A59 00 00 00 00 00 00 
006A5F 00 00 00 00 00 00 
006A65 00 00 00 00 00 00 
006A6B 00 00 00 00 00 00 
006A71 00 00 00 00 00 00 
006A77 00 00 00 00 00 00 
006A7D 00 00 00 00 00 00 
006A83 00 00 00 00 00 00 
006A89 00 00 00 00 00 00 
006A8F 00 00 00 00 00 00 
006A95 00 00 00 00 00 00 
006A9B 00 00 00 00 00 00 
006AA1 00 00 00 00 00 00 
006AA7 00 00 00 00 00 00 
006AAD 00 00 00 00 00 00 
006AB3 00 00 00 00 00 00 
006AB9 00 00 00 00 00 00 
006ABF 00 00 00 00 00 00 
006AC5 00 00 00 00 00 00 
006ACB 00 00 00 00 00 00 
006AD1 00 00 00 00 00 00 
006AD7 00 00 00 00 00 00 
006ADD 00 00 00 00 00 00 
006AE3 00 00 00 00 00 00 
006AE9 00 00 00 00 00 00 
006AEF 00 00 00 00 00 00 
006AF5 00 00 00 00 00 00 
006AFB 00 00 00 00 00 00 
006B01 00 00 00 00 00 00 
006B07 00 00 00 00 
                           A  3126    
                           A  3127    ;==============================================
                           A  3128    	
006B0B 00                  A  3129    os_max_addr		db 0							                           A  3130    	
                           A  3131    				end		
                           A  3132    ;==============================================
                           A  3133    
                           A  3134    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)19-Jul-11     19:53:52     page: 254


PC     Object              I  Line    Source 


Errors: 0
Warnings: 0
Lines Assembled: 12663
