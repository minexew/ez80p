Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       0000002E            A    17    prose_version	equ 2eh
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 A4 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 2D 55 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 49 5F 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD 4F 3A 00         A    88    				call disable_irqs
000A5C CD D7 3B 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A 8E 60 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD FC 41 00         A    94    				call init_keyboard
000A6B 28 06               A    95    				jr z,kb_ok
000A6D 21 8F 60 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 8E 60 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 BE 60 00         A   102    				ld hl,os_variables				000A7C 01 C8 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 41 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 E5 5E 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD 3D 41 00         A   110    				call hwsc_default_hw_settings
                           A   111    				
000A91 3A A8 5E 00         A   112    				ld a,(video_mode)
000A95 CD EC 34 00         A   113    				call set_vmode					                           A   114    
000A99 21 94 63 00         A   115    				ld hl,packed_font_start
000A9D ED5B E2 5E 00       A   116    				ld de,(font_addr)
000AA2 01 DF 02 00         A   117    				ld bc,packed_font_end-packed_fo
000AA6 CD 9F 15 00         A   118    				call unpack_rle
                           A   119    
000AAA 3E5F                A   120    				ld a,5fh
000AAC 32 CE 5E 00         A   121    				ld (req_cursor_image),a
                           A   122    
000AB0 21 FC 55 00         A   123    				ld hl,welcome_message			000AB4 CD 1B 0F 00         A   124    				call os_print_string
000AB8 CD 3E 36 00         A   125    				call os_get_mem_high			000ABC EB                  A   126    				ex de,hl
000ABD CD E6 12 00         A   127    				call os_show_hex_address
                           A   128    
000AC1 CD AE 13 00         A   129    				call os_new_line
000AC5 CD AE 13 00         A   130    				call os_new_line
000AC9 CD ED 31 00         A   131    				call os_cmd_vers				000ACD CD E1 31 00         A   132    				call os_cmd_remount				                           A   133    
000AD1 CD AE 13 00         A   134    				call os_new_line				                           A   135    
000AD5 CD BA 42 00         A   136    				call purge_keyboard
                           A   137    				
000AD9 CD 1A 3A 00         A   138    				call set_irq_vector
000ADD CD 2C 3A 00         A   139    				call enable_os_irqs
000AE1 FB                  A   140    				ei
000AE2 CD BF 3B 00         A   141    				call set_nmi_vector
                           A   142    				
000AE6 21 8F 60 00         A   143    				ld hl,devices_connected			000AEA CB46                A   144    				bit 0,(hl)
000AEC 20 08               A   145    				jr nz,kb_present
000AEE 21 39 5B 00         A   146    				ld hl,no_keyboard_msg
000AF2 CD E5 13 00         A   147    				call os_show_packed_text
000AF6                     A   148    kb_present				
000AF6 21 4C 56 00         A   149    				ld hl,startup_script_fn
000AFA 22 E7 61 00         A   150    				ld (os_args_loc),hl
000AFE CD 1E 32 00         A   151    				call os_cmd_exec				                           A   152    									
000B02 3A 8D 60 00         A   153    				ld a,(frozen)					000B06 B7                  A   154    				or a
000B07 28 11               A   155    				jr z,os_main_loop
000B09 AF                  A   156    				xor a
000B0A 32 8D 60 00         A   157    				ld (frozen),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0E 21 A4 56 00         A   158    				ld hl,nmi_freeze_txt
000B12 CD 1B 0F 00         A   159    				call os_print_string
000B16 CD 38 2D 00         A   160    				call os_cmd_r
                           A   161    				
                           A   162    	
                           A   163    ;==============================================
                           A   164    
000B1A                     A   165    os_main_loop
                           A   166    								
000B1A CD 2D 41 00         A   167    				call hwsc_wait_vrt				                           A   168    
000B1E CD 6C 0F 00         A   169    				call os_cursor_flash
                           A   170    
000B22 CD 90 44 00         A   171    				call os_get_key_press
000B26 20 F2               A   172    				jr nz,os_main_loop
                           A   173    	
000B28 32 5B 62 00         A   174    				ld (current_scancode),a
000B2C 78                  A   175    				ld a,b
000B2D 32 5C 62 00         A   176    				ld (current_asciicode),a		                           A   177    	
000B31 CD 75 3F 00         A   178    				call hwsc_remove_cursor
000B35 3E18                A   179    				ld a,24							000B37 32 28 61 00         A   180    				ld (cursorflashtimer),a			000B3B AF                  A   181    				xor a
000B3C 32 29 61 00         A   182    				ld (cursor_status),a
                           A   183    				
000B40 3A 5B 62 00         A   184    				ld a,(current_scancode)			000B44 FE70                A   185    				cp 70h
000B46 20 16               A   186    				jr nz,os_notins
000B48 3A 5A 62 00         A   187     				ld a,(insert_mode)
000B4C EE01                A   188    				xor 1
000B4E 32 5A 62 00         A   189    				ld (insert_mode),a
000B52 3E5F                A   190    				ld a,5fh
000B54 28 02               A   191    				jr z,linecurs
000B56 3E7F                A   192    				ld a,7fh
000B58 32 CE 5E 00         A   193    linecurs		ld (req_cursor_image),a
000B5C 18 BC               A   194    				jr os_main_loop
                           A   195    
000B5E 21 26 61 00         A   196    os_notins		ld hl,cursor_x					000B62 FE6B                A   197    				cp 06bh			
000B64 20 0E               A   198    				jr nz,os_ntlft
000B66 35                  A   199    				dec (hl)
000B67 7E                  A   200    				ld a,(hl)
000B68 FEFF                A   201    				cp 0ffh	
000B6A 20 AE               A   202    				jr nz,os_main_loop
000B6C 3A D3 5E 00         A   203    				ld a,(window_columns)
000B70 3D                  A   204    				dec a
000B71 77                  A   205    				ld (hl),a						000B72 18 A6               A   206    				jr os_main_loop
                           A   207    
000B74 FE74                A   208    os_ntlft		cp 074h							000B76 20 0C               A   209    				jr nz,os_ntrig
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B78 34                  A   210    				inc (hl)
000B79 3A D3 5E 00         A   211    				ld a,(window_columns)
000B7D BE                  A   212    				cp (hl)
000B7E 20 9A               A   213    				jr nz,os_main_loop
000B80 3600                A   214    				ld (hl),0						000B82 18 96               A   215    				jr os_main_loop
                           A   216    
000B84 21 25 61 00         A   217    os_ntrig		ld hl,cursor_y
000B88 FE75                A   218    				cp 075h							000B8A 20 09               A   219    				jr nz,os_ntup
000B8C 35                  A   220    				dec (hl)
000B8D CB7E                A   221    				bit 7,(hl)
000B8F 28 89               A   222    				jr z,os_main_loop
000B91 3600                A   223    				ld (hl),0						000B93 18 85               A   224    				jr os_main_loop
                           A   225    
000B95 FE72                A   226    os_ntup			cp 072h
000B97 20 14               A   227    				jr nz,os_ntdwn					000B99 34                  A   228    				inc (hl)
000B9A 3A D0 5E 00         A   229    				ld a,(window_rows)
000B9E BE                  A   230    				cp (hl)
000B9F C2 1A 0B 00         A   231    				jr nz,os_main_loop
000BA3 3D                  A   232    				dec a
000BA4 77                  A   233    				ld (hl),a						000BA5 CD A4 3D 00         A   234    				call hwsc_scroll_up
000BA9 C3 1A 0B 00         A   235    				jr os_main_loop
                           A   236    
000BAD FE71                A   237    os_ntdwn		cp 071h							000BAF 20 08               A   238    				jr nz,os_nodel		
000BB1 3A 26 61 00         A   239    				ld a,(cursor_x)					000BB5 47                  A   240    				ld b,a
000BB6 04                  A   241    				inc b
000BB7 18 13               A   242    				jr os_chrbk
                           A   243    
000BB9 FE66                A   244    os_nodel		cp 066h							000BBB 20 17               A   245    				jr nz,os_nbksp
000BBD 3A 26 61 00         A   246    				ld a,(cursor_x)					000BC1 B7                  A   247    				or a							000BC2 CA 1A 0B 00         A   248    				jp z,os_main_loop
000BC6 47                  A   249    				ld b,a
000BC7 3D                  A   250    				dec a
000BC8 32 26 61 00         A   251    				ld (cursor_x),a					000BCC CD 3E 40 00         A   252    os_chrbk		call hwsc_chars_left			000BD0 C3 1A 0B 00         A   253    				jp os_main_loop
                           A   254    
000BD4 FE5A                A   255    os_nbksp		cp 05ah							000BD6 CA 1D 0C 00         A   256    				jp z,os_enter_pressed
                           A   257    	
000BDA 3A 5C 62 00         A   258    				ld a,(current_asciicode)		000BDE B7                  A   259    				or a							000BDF 28 38               A   260    				jr z,os_nvdun					                           A   261    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BE1 FE7B                A   262    				cp 07bh							000BE3 30 12               A   263    				jr nc,os_gtcha					000BE5 FE61                A   264    				cp 061h
000BE7 38 04               A   265    				jr c,os_ntupc
000BE9 D620                A   266    				sub 020h
000BEB 18 0A               A   267    				jr os_gtcha
000BED FE5B                A   268    os_ntupc		cp 05bh
000BEF 30 06               A   269    				jr nc,os_gtcha
000BF1 FE41                A   270    				cp 041h
000BF3 38 02               A   271    				jr c,os_gtcha
000BF5 C620                A   272    				add a,020h
000BF7 57                  A   273    os_gtcha		ld d,a							000BF8 3A 5A 62 00         A   274    				ld a,(insert_mode)				000BFC B7                  A   275    				or a
000BFD CC 85 40 00         A   276    				call z,hwsc_chars_right
                           A   277    				
000C01 ED4B 25 61 00       A   278    os_schi			ld bc,(cursor_pos)				000C06 7A                  A   279    				ld a,d							000C07 CD 48 3E 00         A   280    				call hwsc_plot_char		
000C0B 21 26 61 00         A   281    				ld hl,cursor_x					000C0F 34                  A   282    				inc (hl)
000C10 3A D3 5E 00         A   283    				ld a,(window_columns)
000C14 BE                  A   284    				cp (hl)							000C15 20 02               A   285    				jr nz,os_nvdun
000C17 3600                A   286    				ld (hl),0
                           A   287    
000C19 C3 1A 0B 00         A   288    os_nvdun		jp os_main_loop
                           A   289    	
                           A   290    
                           A   291    ;----------------------------------------------
                           A   292    
000C1D                     A   293    os_enter_pressed
                           A   294    	
000C1D CD 10 41 00         A   295    				call hwsc_charline_to_command_s
                           A   296    
000C21 AF                  A   297    				xor a
000C22 32 26 61 00         A   298    				ld (cursor_x),a					000C26 21 25 61 00         A   299    				ld hl,cursor_y					000C2A 34                  A   300    				inc (hl)
000C2B 3A D0 5E 00         A   301    				ld a,(window_rows)
000C2F BE                  A   302    				cp (hl)
000C30 20 06               A   303    				jr nz,os_esdok
000C32 3D                  A   304    				dec a
000C33 77                  A   305    				ld (hl),a
000C34 CD A4 3D 00         A   306    				call hwsc_scroll_up
                           A   307    
000C38 CD 40 0C 00         A   308    os_esdok		call os_parse_cmd_chk_ps		                           A   309    
000C3C C3 1A 0B 00         A   310    post_csb		jp os_main_loop
                           A   311    
                           A   312    	
                           A   313    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   314    
                           A   315    
000C40                     A   316    os_parse_cmd_chk_ps
                           A   317    
000C40 CD 53 0C 00         A   318    				call os_parse_command_line
000C44 FEFE                A   319    				cp 0feh							000C46 C0                  A   320    				ret nz
000C47 01500000            A   321    				ld bc,max_buffer_chars			000C4B 11 43 61 00         A   322    				ld de,commandstring				000C4F EDB0                A   323    				ldir
000C51 18 ED               A   324    				jr os_parse_cmd_chk_ps
                           A   325    
                           A   326    	
                           A   327    ;----------------------------------------------
                           A   328    	
000C53                     A   329    os_parse_command_line
                           A   330    
000C53 3E01                A   331    				ld a,1
000C55 32 BE 60 00         A   332    				ld (store_registers),a			                           A   333    
000C59 21 43 61 00         A   334    				ld hl,commandstring				000C5D 0650                A   335    				ld b,max_buffer_chars			000C5F CD B1 0F 00         A   336    				call os_scan_for_non_space		000C63 B7                  A   337    				or a							000C64 C8                  A   338    				ret z
000C65 11 C8 56 00         A   339    				ld de,dictionary-1				000C69 D5                  A   340    				push de
000C6A D1                  A   341    compcstr		pop de
000C6B E5                  A   342    				push hl
000C6C FDE1                A   343    				pop iy
000C6E 13                  A   344    notacmd			inc de
000C6F 1A                  A   345    				ld a,(de)
000C70 FE01                A   346    				cp 1							000C72 CA 0C 0D 00         A   347    				jp z,os_no_kernal_command_found
000C76 CB7F                A   348    				bit 7,a
000C78 28 F4               A   349    				jr z,notacmd					000C7A E67F                A   350    				and 07fh
000C7C 4F                  A   351    				ld c,a							000C7D D5                  A   352    				push de
000C7E 13                  A   353    cmdnscan		inc de
000C7F FD7E00              A   354    				ld a,(iy)						000C82 CD 0F 12 00         A   355    				call os_uppercasify
000C86 47                  A   356    				ld b,a
000C87 1A                  A   357    				ld a,(de)						000C88 B8                  A   358    				cp b
000C89 FD23                A   359    				inc iy
000C8B 28 F1               A   360    				jr z,cmdnscan					000C8D 1A                  A   361    nomatch			ld a,(de)						000C8E B7                  A   362    				or a
000C8F 28 04               A   363    				jr z,posmatch					000C91 CB7F                A   364    				bit 7,a			
000C93 28 D5               A   365    				jr z,compcstr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C95 FD7EFF              A   366    posmatch		ld a,(iy-1)						000C98 FE20                A   367    				cp 32
000C9A 20 CE               A   368    				jr nz,compcstr					                           A   369    	
000C9C D1                  A   370    				pop de				
000C9D FDE5                A   371    				push iy							000C9F E1                  A   372    				pop hl
000CA0 CD B1 0F 00         A   373    				call os_scan_for_non_space
000CA4 22 E7 61 00         A   374    				ld (os_args_loc),hl				                           A   375    	
000CA8 21 33 5C 00         A   376    				ld hl,os_cmd_locs
000CAC 11030000            A   377    				ld de,3
000CB0 51                  A   378    				ld d,c
000CB1 ED5C                A   379    				mlt de							000CB3 19                  A   380    				add hl,de
000CB4 ED37                A   381    				ld ix,(hl)						                           A   382    
000CB6 2A E7 61 00         A   383    				ld hl,(os_args_loc)				000CBA CD EE 0E 00         A   384    				call os_run_command				                           A   385    
000CBE C8                  A   386    				ret z							000CBF B7                  A   387    				or a
000CC0 20 13               A   388    				jr nz,show_erm
000CC2 78                  A   389    os_hwe1			ld a,b							000CC3 21 C8 59 00         A   390    os_hwerr		ld hl,hex_byte_txt		
000CC7 CD 5E 10 00         A   391    				call hexbyte_to_ascii	
000CCB 21 2C 5B 00         A   392    				ld hl,hw_err_msg
000CCF CD E5 13 00         A   393    				call os_show_packed_text
000CD3 AF                  A   394    				xor a
000CD4 C9                  A   395    				ret
                           A   396    
000CD5 01000000            A   397    show_erm		ld bc,0							000CD9 4F                  A   398    				ld c,a
000CDA D680                A   399    				sub 080h						000CDC 38 11               A   400    				jr c,no_trans					000CDE 21 58 5D 00         A   401    				ld hl,kernal_error_code_transla
000CE2 CB77                A   402    				bit 6,a							000CE4 28 06               A   403    				jr z,not_fs_err					000CE6 21 65 5D 00         A   404    				ld hl,fs_error_code_translation
000CEA D640                A   405    				sub 040h
000CEC 4F                  A   406    not_fs_err		ld c,a
000CED 09                  A   407    				add hl,bc
000CEE 4E                  A   408    				ld c,(hl)
000CEF 0600                A   409    no_trans		ld b,0
000CF1 21 99 5C 00         A   410    				ld hl,packed_msg_list
000CF5 7E                  A   411    findmsg			ld a,(hl)
000CF6 FEFF                A   412    				cp 0ffh
000CF8 C8                  A   413    				ret z							000CF9 23                  A   414    				inc hl
000CFA B7                  A   415    				or a
000CFB 20 F8               A   416    				jr nz,findmsg					000CFD 04                  A   417    				inc b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CFE 79                  A   418    				ld a,c							000CFF B8                  A   419    				cp b
000D00 20 F3               A   420    				jr nz,findmsg
000D02 CD E5 13 00         A   421    				call os_show_packed_text
000D06 CD AE 13 00         A   422    				call os_new_line
000D0A AF                  A   423    				xor a
000D0B C9                  A   424    				ret
                           A   425    	
                           A   426    
000D0C                     A   427    os_no_kernal_command_found
                           A   428    
000D0C 3E30                A   429    				ld a,030h						000D0E 32 52 5F 00         A   430    fvolcmd			ld (vol_txt+4),a				000D12 F5                  A   431    				push af			
000D13 11 4F 5F 00         A   432    				ld de,vol_txt+1		
000D17 0605                A   433    				ld b,5			
000D19 CD D5 11 00         A   434    				call os_compare_strings	
000D1D 28 08               A   435    				jr z,gotvolcmd		
000D1F F1                  A   436    				pop af				
000D20 3C                  A   437    				inc a			
000D21 FE38                A   438    				cp 030h+max_volumes		
000D23 20 E9               A   439    				jr nz,fvolcmd		
000D25 18 0B               A   440    				jr novolcmd		
000D27 F1                  A   441    gotvolcmd		pop af
000D28 D630                A   442    				sub 030h
000D2A CD 8C 1A 00         A   443    				call os_change_volume
000D2E C3 D3 0E 00         A   444    				jp extcmderf					                           A   445    		
                           A   446    
                           A   447    
000D32 7E                  A   448    novolcmd		ld a,(hl)						000D33 FE47                A   449    				cp 'G'							000D35 20 29               A   450    				jr nz,not_g_cmd					000D37 23                  A   451    				inc hl
000D38 7E                  A   452    				ld a,(hl)
000D39 2B                  A   453    				dec hl
000D3A FE20                A   454    				cp ' '
000D3C 20 22               A   455    				jr nz,not_g_cmd
000D3E 23                  A   456    				inc hl
000D3F CD B1 0F 00         A   457    				call os_scan_for_non_space
000D43 22 E7 61 00         A   458    				ld (os_args_loc),hl				000D47 B7                  A   459    				or a
000D48 20 04               A   460    				jr nz,gotgargs
000D4A 3E1F                A   461    				ld a,01fh						000D4C 18 87               A   462    				jr show_erm
000D4E CD 9D 10 00         A   463    gotgargs		call ascii_to_hex_no_scan		000D52 B7                  A   464    				or a
000D53 20 80               A   465    				jr nz,show_erm
000D55 CD CE 3B 00         A   466    				call enable_nmi					000D59 D5                  A   467    				push de
000D5A DDE1                A   468    				pop ix			
000D5C C3 EE 0E 00         A   469    				jp os_run_command				Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   470    				
                           A   471    				
                           A   472    
000D60 22 E7 61 00         A   473    not_g_cmd		ld (os_args_loc),hl				000D64 22 EA 61 00         A   474    				ld (os_args_pos_cache),hl
000D68 CD E5 0F 00         A   475    				call os_args_to_fn_append_ezp	                           A   476    	
000D6C CD F8 0E 00         A   477    				call cache_dir_block			                           A   478    
000D70 CD A3 48 00         A   479    				call fs_check_disk_format		000D74 38 3C               A   480    				jr c,os_ndfxc
000D76 B7                  A   481    				or a							000D77 20 39               A   482    				jr nz,os_ndfxc
                           A   483    	
000D79 CD 45 4A 00         A   484    				call fs_open_file_command		000D7D DA C3 0C 00         A   485    				jp c,os_hwerr			 		000D81 B7                  A   486    				or a
000D82 28 38               A   487    				jr z,os_gecmd					                           A   488    
000D84 CD 16 4A 00         A   489    				call fs_goto_root_dir_command	000D88 21 43 56 00         A   490    				ld hl,os_dos_cmds_txt
000D8C CD A4 52 00         A   491    				call fs_hl_to_filename
000D90 CD F1 49 00         A   492    				call fs_change_dir_command		000D94 DA C3 0C 00         A   493    				jp c,os_hwerr
000D98 B7                  A   494    				or a
000D99 20 17               A   495    				jr nz,os_ndfxc					                           A   496    	
000D9B 2A EA 61 00         A   497    				ld hl,(os_args_pos_cache)		000D9F 22 E7 61 00         A   498    				ld (os_args_loc),hl
000DA3 CD E5 0F 00         A   499    				call os_args_to_fn_append_ezp	000DA7 CD 45 4A 00         A   500    				call fs_open_file_command		000DAB DA C3 0C 00         A   501    				jp c,os_hwerr
000DAF B7                  A   502    				or a
000DB0 28 0A               A   503    				jr z,os_gecmd
000DB2 CD 04 0F 00         A   504    os_ndfxc		call restore_dir_block			000DB6 3E0B                A   505    				ld a,0bh						000DB8 C3 D5 0C 00         A   506    				jp show_erm
                           A   507    
000DBC 2A E7 61 00         A   508    os_gecmd		ld hl,(os_args_loc)				000DC0 CD B1 0F 00         A   509    				call os_scan_for_non_space		000DC4 22 E7 61 00         A   510    				ld (os_args_loc),hl
                           A   511    
000DC8 11100000            A   512    				ld de,16
000DCC CD 04 16 00         A   513    				call os_set_load_length			000DD0 21 73 68 00         A   514    				ld hl,scratch_pad
000DD4 22 04 55 00         A   515    				ld (fs_ez80_address),hl
000DD8 CD 90 4A 00         A   516    				call fs_read_data_command
000DDC DA C3 0C 00         A   517    				jp c,os_hwerr					000DE0 B7                  A   518    				or a
000DE1 C2 D5 0C 00         A   519    				jp nz,show_erm					000DE5 2A 75 68 00         A   520    				ld hl,(scratch_pad+2)
000DE9 1150524F            A   521    				ld de,04f5250h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DED AF                  A   522    				xor a	
000DEE ED52                A   523    				sbc hl,de
000DF0 28 0A               A   524    				jr z,loc_header
000DF2 CD 04 0F 00         A   525    				call restore_dir_block			000DF6 3E1A                A   526    				ld a,01ah						000DF8 C3 D5 0C 00         A   527    				jp show_erm						                           A   528    				
000DFC 3A 82 68 00         A   529    loc_header		ld a,(scratch_pad+15)			000E00 32 BD 60 00         A   530    				ld (store_adl),a			
000E04 CD 45 4A 00         A   531    				call fs_open_file_command		000E08 DA C3 0C 00         A   532    				jp c,os_hwerr
000E0C B7                  A   533    				or a	
000E0D 20 A3               A   534    				jr nz,os_ndfxc
000E0F 2A 78 68 00         A   535    				ld hl,(scratch_pad+5)			000E13 22 04 55 00         A   536    				ld (fs_ez80_address),hl
000E17 ED5B 90 60 00       A   537    				ld de,(sys_ram_high)
000E1C AF                  A   538    				xor a
000E1D E5                  A   539    				push hl
000E1E ED52                A   540    				sbc hl,de
000E20 E1                  A   541    				pop hl
000E21 30 0A               A   542    				jr nc,osmemok
000E23 CD 04 0F 00         A   543    				call restore_dir_block			000E27 3E26                A   544    				ld a,026h
000E29 C3 D5 0C 00         A   545    				jp show_erm
                           A   546    
000E2D ED5B 7E 68 00       A   547    osmemok			ld de,(scratch_pad+11)			000E32 7B                  A   548    				ld a,e
000E33 B2                  A   549    				or d
000E34 28 14               A   550    				jr z,noprov_spec				000E36 212E0000            A   551    				ld hl,prose_version
000E3A AF                  A   552    				xor a
000E3B 40ED52              A   553    				sbc.sis hl,de					000E3E 30 0A               A   554    				jr nc,noprov_spec
000E40 CD 04 0F 00         A   555    				call restore_dir_block
000E44 3E1B                A   556    				ld a,01bh						000E46 C3 D5 0C 00         A   557    				jp show_erm
                           A   558    				
000E4A CD 80 41 00         A   559    noprov_spec		call hwsc_get_version			000E4E 2A 80 68 00         A   560    				ld hl,(scratch_pad+13)			000E52 EB                  A   561    				ex de,hl						000E53 7B                  A   562    				ld a,e
000E54 B2                  A   563    				or d
000E55 28 10               A   564    				jr z,nohwv_spec					000E57 AF                  A   565    				xor a
000E58 40ED52              A   566    				sbc.sis hl,de					000E5B 30 0A               A   567    				jr nc,nohwv_spec
000E5D CD 04 0F 00         A   568    				call restore_dir_block
000E61 3E2B                A   569    				ld a,02bh						000E63 C3 D5 0C 00         A   570    				jp show_erm
                           A   571    
000E67 ED5B 7B 68 00       A   572    nohwv_spec		ld de,(scratch_pad+8)			000E6C 3A 7D 68 00         A   573    				ld a,(scratch_pad+10)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E70 B2                  A   574    				or d
000E71 B3                  A   575    				or e
000E72 28 04               A   576    				jr z,readcode					000E74 CD 04 16 00         A   577    				call os_set_load_length			                           A   578    		
000E78 2A 78 68 00         A   579    readcode		ld hl,(scratch_pad+5)
000E7C 22 F0 61 00         A   580    				ld (os_extcmd_jmp_addr),hl		000E80 CD 90 4A 00         A   581    				call fs_read_data_command
000E84 F5                  A   582    				push af
000E85 CD 04 0F 00         A   583    				call restore_dir_block			000E89 F1                  A   584    				pop af
000E8A DA C3 0C 00         A   585    				jp c,os_hwerr					000E8E B7                  A   586    				or a
000E8F C2 D5 0C 00         A   587    				jp nz,show_erm					                           A   588    	
000E93 CD CE 3B 00         A   589    				call enable_nmi					000E97 DD2A F0 61 00       A   590    				ld ix,(os_extcmd_jmp_addr)		000E9C 2A E7 61 00         A   591    				ld hl,(os_args_loc)				000EA0 C3 EE 0E 00         A   592    				jp os_run_command				                           A   593    
000EA4 F5                  A   594    extcmd_return	push af							000EA5 CD 3D 41 00         A   595    				call hwsc_default_hw_settings	000EA9 3A BE 60 00         A   596    				ld a,(store_registers)
000EAD B7                  A   597    				or a
000EAE 28 06               A   598    				jr z,skp_strg
000EB0 F1                  A   599    				pop af
000EB1 CD 27 13 00         A   600    				call os_store_CPU_regs			000EB5 F5                  A   601    				push af
000EB6 F1                  A   602    skp_strg		pop af
                           A   603    
000EB7 F5                  A   604    cntuasr			push af
000EB8 21 73 68 00         A   605    				ld hl,scratch_pad				000EBC CD 5E 10 00         A   606    				call hexbyte_to_ascii
000EC0 3600                A   607    				ld (hl),0
000EC2 11 73 68 00         A   608    				ld de,scratch_pad
000EC6 21 BC 56 00         A   609    				ld hl,error_txt
000ECA CD 37 1B 00         A   610    				call os_set_envar
000ECE CD D7 3B 00         A   611    				call disable_nmi				000ED2 F1                  A   612    				pop af
000ED3 28 12               A   613    extcmderf		jr z,not_errc					000ED5 B7                  A   614    				or a
000ED6 CA C2 0C 00         A   615    				jp z,os_hwe1					000EDA FEFF                A   616    				cp 0ffh							000EDC CA 48 0A 00         A   617    				jp z,os_cold_start
000EE0 FEFE                A   618    				cp 0feh							000EE2 C8                  A   619    				ret z
000EE3 C3 D5 0C 00         A   620    				jp show_erm						000EE7 FEFF                A   621    not_errc		cp 0ffh							000EE9 CA 48 0A 00         A   622    				jp z,os_cold_start
000EED C9                  A   623    				ret
                           A   624    				
                           A   625    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   626    
000EEE                     A   627    os_run_command									000EEE ED3906              A   628    				out0 (port_nmi_ack),a			000EF1 DD22 BF 60 00       A   629    				ld (com_start_addr),ix			000EF6 DDE9                A   630    				jp (ix)							                           A   631    
                           A   632    ;----------------------------------------------
                           A   633    
000EF8                     A   634    cache_dir_block
                           A   635    
                           A   636    	
000EF8 D5                  A   637    				push de
000EF9 CD 30 1A 00         A   638    				call fs_get_dir_cluster	
000EFD ED53 ED 61 00       A   639    				ld (os_dir_block_cache),de
000F02 D1                  A   640    				pop de	
000F03 C9                  A   641    				ret
                           A   642    		
                           A   643    
000F04                     A   644    restore_dir_block
                           A   645    
000F04 D5                  A   646    				push de
000F05 ED5B ED 61 00       A   647    				ld de,(os_dir_block_cache)
000F0A CD 3C 1A 00         A   648    				call fs_update_dir_cluster
000F0E D1                  A   649    				pop de
000F0F C9                  A   650    				ret
                           A   651    		
                           A   652    ;==============================================
                           A   653    ; Routines called by command line
                           A   654    ;==============================================
                           A   655    
                           A   656    ; Set:-
                           A   657    ; HL to address of string
                           A   658    ; c = y
                           A   659    ; b = x
                           A   660    
000F10                     A   661    ext_print_string
                           A   662    
000F10 CC 68 15 00         A   663    				call z,mbase_hl
000F14 18 05               A   664    				jr os_print_string
                           A   665    
000F16                     A   666    os_print_string_cond
                           A   667    
000F16 CD E3 19 00         A   668    				call test_quiet_mode
000F1A C0                  A   669    				ret nz
                           A   670    
000F1B                     A   671    os_print_string
                           A   672    
000F1B D5                  A   673    				push de
000F1C C5                  A   674    				push bc
000F1D ED4B 25 61 00       A   675    				ld bc,(cursor_pos)				000F22 7E                  A   676    prstr_lp		ld a,(hl)
000F23 23                  A   677    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F24 B7                  A   678    				or a
000F25 20 09               A   679    				jr nz,prstr_ne
000F27 ED43 25 61 00       A   680    				ld (cursor_pos),bc
000F2C C1                  A   681    				pop bc
000F2D D1                  A   682    				pop de
000F2E AF                  A   683    				xor a							000F2F C9                  A   684    				ret
                           A   685    
000F30 FE0D                A   686    prstr_ne		cp 13
000F32 20 04               A   687    				jr nz,not_cr
000F34 0600                A   688    				ld b,0
000F36 18 EA               A   689    				jr prstr_lp
000F38 FE0A                A   690    not_cr			cp 10
000F3A 28 12               A   691    				jr z,line_feed				
000F3C FE0B                A   692    				cp 11
000F3E 28 0C               A   693    				jr z,next_line
000F40 CD 48 3E 00         A   694    				call hwsc_plot_char
000F44 04                  A   695    				inc b
000F45 3A D3 5E 00         A   696    				ld a,(window_columns)
000F49 B8                  A   697    				cp b
000F4A 20 D6               A   698    				jr nz,prstr_lp
000F4C 0600                A   699    next_line		ld b,0
000F4E 0C                  A   700    line_feed		inc c
000F4F 3A D0 5E 00         A   701    				ld a,(window_rows)
000F53 B9                  A   702    				cp c
000F54 20 CC               A   703    				jr nz,prstr_lp
000F56 0D                  A   704    				dec c
000F57 CD A4 3D 00         A   705    				call hwsc_scroll_up
000F5B 18 C5               A   706    				jr prstr_lp
                           A   707    
                           A   708    ;----------------------------------------------
                           A   709    
000F5D 21 33 62 00         A   710    os_print_char	ld hl,char_to_print
000F61 77                  A   711    				ld (hl),a
000F62 18 B7               A   712    				jr os_print_string
                           A   713    
                           A   714    ;----------------------------------------------
                           A   715    
000F64 F5                  A   716    home_cursor		push af
000F65 AF                  A   717    				xor a
000F66 32 26 61 00         A   718    				ld (cursor_x),a
000F6A F1                  A   719    				pop af
000F6B C9                  A   720    				ret
                           A   721    				
                           A   722    ;----------------------------------------------
                           A   723    
000F6C                     A   724    os_cursor_flash
                           A   725    
000F6C 21 28 61 00         A   726    				ld hl,cursorflashtimer
000F70 34                  A   727    				inc (hl)
000F71 7E                  A   728    				ld a,(hl)
000F72 FE19                A   729    				cp 25
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F74 C0                  A   730    				ret nz
000F75 3600                A   731    				ld (hl),0
000F77 3A 29 61 00         A   732    				ld a,(cursor_status)
000F7B EE01                A   733    				xor 1
000F7D 32 29 61 00         A   734    				ld (cursor_status),a
000F81 28 05               A   735    				jr z,no_cursor
000F83 CD 88 3F 00         A   736    				call hwsc_draw_cursor			000F87 C9                  A   737    				ret
000F88 CD 75 3F 00         A   738    no_cursor		call hwsc_remove_cursor
000F8C C9                  A   739    				ret
                           A   740    
                           A   741    ;----------------------------------------------
                           A   742    
000F8D                     A   743    os_refresh_screen
                           A   744    
000F8D 0E00                A   745    				ld c,0							000F8F CD E8 40 00         A   746    rs_yloop		call hwsc_redraw_ui_line
000F93 0C                  A   747    				inc c
000F94 3A D0 5E 00         A   748    				ld a,(window_rows)		
000F98 B9                  A   749    				cp c
000F99 20 F4               A   750    				jr nz,rs_yloop
000F9B C9                  A   751    				ret
                           A   752    
                           A   753    ;----------------------------------------------
                           A   754    
000F9C                     A   755    os_next_arg
                           A   756    
000F9C CD A8 0F 00         A   757    				call os_scan_for_space
000FA0 B7                  A   758    				or a
000FA1 C8                  A   759    				ret z
000FA2 CD B1 0F 00         A   760    				call os_scan_for_non_space
000FA6 B7                  A   761    				or a
000FA7 C9                  A   762    				ret
                           A   763    
                           A   764    
                           A   765    ;----------------------------------------------
                           A   766    	
                           A   767    
000FA8                     A   768    os_scan_for_space
                           A   769    
000FA8 7E                  A   770    os_sfspl 		ld a,(hl)						000FA9 B7                  A   771    				or a							000FAA C8                  A   772    				ret z
000FAB FE20                A   773    				cp ' '
000FAD C8                  A   774    				ret z
000FAE 23                  A   775    				inc hl
000FAF 18 F7               A   776    				jr os_sfspl
                           A   777    	
                           A   778    
                           A   779    ;----------------------------------------------
                           A   780    	
                           A   781    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FB1                     A   782    os_scan_for_non_space
                           A   783    
000FB1 2B                  A   784    				dec hl							000FB2 23                  A   785    os_nsplp		inc hl			
000FB3 7E                  A   786    				ld a,(hl)			
000FB4 B7                  A   787    				or a			
000FB5 C8                  A   788    				ret z							000FB6 FE20                A   789    				cp ' '
000FB8 28 F8               A   790    				jr z,os_nsplp
000FBA C9                  A   791    				ret
                           A   792    	
                           A   793    	
                           A   794    ;----------------------------------------------
                           A   795    
000FBB                     A   796    os_args_to_alt_filename
                           A   797    
000FBB CD 15 10 00         A   798    				call os_atfn_pre				000FBF C8                  A   799    				ret z
000FC0 CD 9E 52 00         A   800    				call fs_hl_to_alt_filename
000FC4 18 09               A   801    				jr os_atfrl
                           A   802    	
                           A   803    	
                           A   804    	
                           A   805    		
000FC6                     A   806    os_args_to_filename
                           A   807    
000FC6 CD 15 10 00         A   808    				call os_atfn_pre				000FCA C8                  A   809    				ret z
000FCB CD A4 52 00         A   810    				call fs_hl_to_filename	
                           A   811    
000FCF 7E                  A   812    os_atfrl		ld a,(hl)						000FD0 B7                  A   813    				or a							000FD1 28 0B               A   814    				jr z,os_cfne
000FD3 FE20                A   815    				cp 32
000FD5 28 07               A   816    				jr z,os_cfne
000FD7 FE2F                A   817    				cp 02fh
000FD9 28 03               A   818    				jr z,os_cfne
000FDB 23                  A   819    				inc hl
000FDC 18 F1               A   820    				jr os_atfrl	
000FDE 22 E7 61 00         A   821    os_cfne			ld (os_args_loc),hl				000FE2 79                  A   822    				ld a,c			
000FE3 B7                  A   823    				or a							000FE4 C9                  A   824    				ret
                           A   825    
                           A   826    
                           A   827    
                           A   828    
000FE5                     A   829    os_args_to_fn_append_ezp
                           A   830    
                           A   831    	
000FE5 CD 15 10 00         A   832    				call os_atfn_pre				000FE9 C8                  A   833    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FEA 11 C2 60 00         A   834    				ld de,temp_string
000FEE 7E                  A   835    ccmdtlp			ld a,(hl)						000FEF B7                  A   836    				or a
000FF0 28 0D               A   837    				jr z,goteocmd
000FF2 FE20                A   838    				cp ' '
000FF4 28 09               A   839    				jr z,goteocmd
000FF6 FE2E                A   840    				cp '.'
000FF8 28 05               A   841    				jr z,goteocmd
000FFA 12                  A   842    				ld (de),a
000FFB 13                  A   843    				inc de
000FFC 23                  A   844    				inc hl
000FFD 18 EF               A   845    				jr ccmdtlp
                           A   846    	
000FFF E5                  A   847    goteocmd		push hl
001000 21 96 56 00         A   848    				ld hl,ezp_extension_txt
001004 01050000            A   849    				ld bc,5
001008 EDB0                A   850    				ldir 
00100A 21 C2 60 00         A   851    				ld hl,temp_string
00100E CD A4 52 00         A   852    				call fs_hl_to_filename
001012 E1                  A   853    				pop hl
001013 18 BA               A   854    				jr os_atfrl
                           A   855    	
                           A   856    
                           A   857    
                           A   858    
001015                     A   859    os_atfn_pre
                           A   860    
001015 2A E7 61 00         A   861    				ld hl,(os_args_loc)				001019 CD B1 0F 00         A   862    				call os_scan_for_non_space
00101D B7                  A   863    				or a
00101E C8                  A   864    				ret z
00101F 7E                  A   865    				ld a,(hl)
001020 FE2F                A   866    				cp 02fh							001022 20 01               A   867    				jr nz,notfsl1
001024 23                  A   868    				inc hl
001025 AF                  A   869    notfsl1			xor a
001026 3C                  A   870    				inc a
001027 C9                  A   871    				ret
                           A   872    
                           A   873    
                           A   874    ;--------- Number <-> String functions --------
                           A   875    
                           A   876    
001028                     A   877    os_clear_output_line
                           A   878    
001028 C5                  A   879    				push bc
001029 E5                  A   880    				push hl			
00102A 21 95 61 00         A   881    				ld hl,output_line
00102E 01500000            A   882    				ld bc,max_buffer_chars
001032 3E20                A   883    				ld a,32
001034 CD 41 15 00         A   884    				call os_bchl_memfill
001038 E1                  A   885    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001039 C1                  A   886    				pop bc
00103A C9                  A   887    				ret
                           A   888    	
                           A   889    	
                           A   890    	
00103B                     A   891    os_skip_leading_ascii_zeros
                           A   892    
00103B 7E                  A   893    slazlp			ld a,(hl)						00103C FE30                A   894    				cp '0'							00103E C0                  A   895    				ret nz
00103F 23                  A   896    				inc hl
001040 10 F9               A   897    				djnz slazlp
001042 C9                  A   898    				ret
                           A   899    	
                           A   900    
                           A   901    
001043                     A   902    os_leading_ascii_zeros_to_spaces
                           A   903    
001043 E5                  A   904    				push hl
001044 7E                  A   905    clazlp			ld a,(hl)						001045 FE30                A   906    				cp '0'							001047 20 05               A   907    				jr nz,claze	
001049 3620                A   908    				ld (hl),' '
00104B 23                  A   909    				inc hl
00104C 10 F6               A   910    				djnz clazlp
00104E E1                  A   911    claze			pop hl
00104F C9                  A   912    				ret
                           A   913    	
                           A   914    
                           A   915    
                           A   916    		
001050                     A   917    n_hexbytes_to_ascii
                           A   918    
001050 1A                  A   919    				ld a,(de)						001051 CD 5E 10 00         A   920    				call hexbyte_to_ascii			001055 1B                  A   921    				dec de
001056 10 F8               A   922    				djnz n_hexbytes_to_ascii
001058 C9                  A   923    				ret
                           A   924    			
                           A   925    			
                           A   926    
001059                     A   927    ext_hexbyte_to_ascii
                           A   928    
001059 CC 68 15 00         A   929    				call z,mbase_hl
00105D 7B                  A   930    				ld a,e
                           A   931    
00105E                     A   932    hexbyte_to_ascii
                           A   933    
00105E C5                  A   934    				push bc
00105F 47                  A   935    				ld b,a							001060 CB3F                A   936    				srl a							001062 CB3F                A   937    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001064 CB3F                A   938    				srl a
001066 CB3F                A   939    				srl a
001068 CD 7A 10 00         A   940    				call hxdigconv
00106C 77                  A   941    				ld (hl),a
00106D 23                  A   942    				inc hl
00106E 78                  A   943    				ld a,b
00106F E60F                A   944    				and 0fh
001071 CD 7A 10 00         A   945    				call hxdigconv
001075 77                  A   946    				ld (hl),a
001076 23                  A   947    				inc hl
001077 C1                  A   948    				pop bc
001078 AF                  A   949    				xor a							001079 C9                  A   950    				ret
                           A   951    				
00107A C630                A   952    hxdigconv		add a,030h
00107C FE3A                A   953    				cp 03ah
00107E 38 02               A   954    				jr c,hxdone
001080 C607                A   955    				add a,7
001082 C9                  A   956    hxdone			ret
                           A   957    
                           A   958    
                           A   959    
                           A   960    
001083                     A   961    hexword_to_ascii	
                           A   962    
001083 7A                  A   963    				ld a,d							001084 CD 5E 10 00         A   964    				call hexbyte_to_ascii
001088 7B                  A   965    				ld a,e
001089 CD 5E 10 00         A   966    				call hexbyte_to_ascii
00108D C9                  A   967    				ret
                           A   968    	
                           A   969    
                           A   970    
                           A   971    
00108E                     A   972    ext_ascii_to_hexword
                           A   973    		
00108E CC 68 15 00         A   974    				call z,mbase_hl
                           A   975    
001092                     A   976    ascii_to_hexword
                           A   977    	
001092 CD B1 0F 00         A   978    				call os_scan_for_non_space		001096 B7                  A   979    				or a
001097 20 04               A   980    				jr nz,ascii_to_hex_no_scan
001099 3E81                A   981    				ld a,081h						00109B B7                  A   982    				or a
00109C C9                  A   983    				ret	
                           A   984    
                           A   985    	
00109D                     A   986    ascii_to_hex_no_scan
                           A   987    
00109D DDE5                A   988    				push ix
00109F C5                  A   989    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010A0 DD210000 00         A   990    				ld ix,0
0010A5 0606                A   991    				ld b,6							0010A7 CD D3 10 00         A   992    athlp			call ascii_to_hex_digit
0010AB FEF0                A   993    				cp 0f0h							0010AD 28 17               A   994    				jr z,athend
0010AF FED0                A   995    				cp 0d0h
0010B1 28 13               A   996    				jr z,athend						0010B3 FE10                A   997    				cp 16
0010B5 30 17               A   998    				jr nc,badhex					0010B7 DD29                A   999    				add ix,ix						0010B9 DD29                A  1000    				add ix,ix
0010BB DD29                A  1001    				add ix,ix
0010BD DD29                A  1002    				add ix,ix
0010BF DDB5                A  1003    				or a,ixl
0010C1 DD6F                A  1004    				ld ixl,a
0010C3 23                  A  1005    				inc hl
0010C4 10 E1               A  1006    				djnz athlp
0010C6 DDE5                A  1007    athend			push ix
0010C8 D1                  A  1008    				pop de
0010C9 AF                  A  1009    				xor a
0010CA C1                  A  1010    ath_quit		pop bc
0010CB DDE1                A  1011    				pop ix							0010CD C9                  A  1012    				ret
                           A  1013    		
0010CE 3E82                A  1014    badhex			ld a,82h						0010D0 B7                  A  1015    				or a
0010D1 18 F7               A  1016    				jr ath_quit
                           A  1017    				
                           A  1018    	
                           A  1019    		
0010D3                     A  1020    ascii_to_hex_digit
                           A  1021    
0010D3 7E                  A  1022    				ld a,(hl)						0010D4 FE61                A  1023    				cp 061h
0010D6 38 02               A  1024    				jr c,hc_uppercase
0010D8 D620                A  1025    				sub 020h						0010DA D63A                A  1026    hc_uppercase	sub 03ah						0010DC 38 02               A  1027    				jr c,zeronine
0010DE C6F9                A  1028    				add a,0f9h
0010E0 C60A                A  1029    zeronine		add a,0ah
0010E2 C9                  A  1030    				ret
                           A  1031    
                           A  1032    
                           A  1033    ;--------- Text Input / Non-numeric string func
                           A  1034    
                           A  1035    ; Waits for user to enter a string of character
                           A  1036    ; Before calling, set:  HL = destination of str
                           A  1037    ;                        E = max number of char
                           A  1038    ; Returns:   A  = number of characters in enter
                           A  1039    
                           A  1040    
0010E3                     A  1041    ext_user_input
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010E3 CC 68 15 00         A  1042    				call z,mbase_hl
                           A  1043    				
0010E7                     A  1044    os_user_input
0010E7 AF                  A  1045    				xor a
0010E8 32 A3 5E 00         A  1046    				ld (ui_index),a
0010EC 22 A5 5E 00         A  1047    				ld (ui_string_addr),hl
0010F0 7B                  A  1048    				ld a,e
0010F1 32 A4 5E 00         A  1049    				ld (ui_maxchars),a
                           A  1050    				
0010F5 3A 5A 62 00         A  1051    				ld a,(insert_mode)
0010F9 32 42 61 00         A  1052    				ld (ui_im_cache),a
0010FD AF                  A  1053    				xor a
0010FE 32 5A 62 00         A  1054    				ld (insert_mode),a				                           A  1055    				
001102 CD 88 3F 00         A  1056    ui_loop			call hwsc_draw_cursor			001106 CD 43 44 00         A  1057    				call os_wait_key_press			00110A 32 5B 62 00         A  1058    				ld (current_scancode),a
00110E 78                  A  1059    				ld a,b
00110F 32 5C 62 00         A  1060    				ld (current_asciicode),a		001113 CD 75 3F 00         A  1061    				call hwsc_remove_cursor
                           A  1062    	
001117 3A 5B 62 00         A  1063    				ld a,(current_scancode)
00111B FE66                A  1064    				cp 066h							00111D 20 1F               A  1065    				jr nz,os_nuibs
00111F 3A A3 5E 00         A  1066    				ld a,(ui_index)
001123 B7                  A  1067    				or a
001124 28 DC               A  1068    				jr z,ui_loop					001126 21 26 61 00         A  1069    				ld hl,cursor_x					00112A 35                  A  1070    				dec (hl)						00112B 46                  A  1071    os_uixok		ld b,(hl)		
00112C 3A 25 61 00         A  1072    				ld a,(cursor_y)
001130 4F                  A  1073    				ld c,a
001131 3E20                A  1074    				ld a,32
001133 CD 48 3E 00         A  1075    				call hwsc_plot_char
001137 21 A3 5E 00         A  1076    				ld hl,ui_index
00113B 35                  A  1077    				dec (hl)						00113C 18 C4               A  1078    				jr ui_loop
                           A  1079    
00113E FE76                A  1080    os_nuibs		cp 076h							001140 28 5E               A  1081    				jr z,ui_aborted
001142 FE5A                A  1082    				cp 05ah							001144 28 45               A  1083    				jr z,ui_enter_pressed
                           A  1084    	
001146 3A A3 5E 00         A  1085    				ld a,(ui_index)					00114A 21 A4 5E 00         A  1086    				ld hl,ui_maxchars
00114E BE                  A  1087    				cp (hl)
00114F 28 B1               A  1088    				jr z,ui_loop	
                           A  1089    
001151 3A 5C 62 00         A  1090    				ld a,(current_asciicode)		001155 B7                  A  1091    				or a							001156 28 AA               A  1092    				jr z,ui_loop					                           A  1093    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001158 57                  A  1094    ui_gtcha		ld d,a
001159 2A A5 5E 00         A  1095    				ld hl,(ui_string_addr)
00115D 3A A3 5E 00         A  1096    				ld a,(ui_index)
001161 01000000            A  1097    				ld bc,0
001165 4F                  A  1098    				ld c,a
001166 09                  A  1099    				add hl,bc
001167 72                  A  1100    				ld (hl),d						001168 3C                  A  1101    				inc a
001169 32 A3 5E 00         A  1102    				ld (ui_index),a					                           A  1103    				
00116D ED4B 25 61 00       A  1104    				ld bc,(cursor_y)				001172 7A                  A  1105    				ld a,d
001173 CD 48 3E 00         A  1106    				call hwsc_plot_char		
001177 21 26 61 00         A  1107    				ld hl,cursor_x					00117B 34                  A  1108    				inc (hl)
00117C 3A D3 5E 00         A  1109    				ld a,(window_columns)			001180 BE                  A  1110    				cp (hl)
001181 C2 02 11 00         A  1111    				jp nz,ui_loop
001185 3600                A  1112    				ld (hl),0
001187 C3 02 11 00         A  1113    				jp ui_loop
                           A  1114    
00118B                     A  1115    ui_enter_pressed
                           A  1116    				
00118B 3A 42 61 00         A  1117    				ld a,(ui_im_cache)				00118F 32 5A 62 00         A  1118    				ld (insert_mode),a
001193 3A A3 5E 00         A  1119    				ld a,(ui_index)					001197 B7                  A  1120    				or a
001198 20 04               A  1121    				jr nz,ui_data
00119A 3E81                A  1122    				ld a,081h						00119C B7                  A  1123    				or a
00119D C9                  A  1124    				ret
00119E BF                  A  1125    ui_data			cp a							00119F C9                  A  1126    				ret
                           A  1127    
0011A0 3A 42 61 00         A  1128    ui_aborted		ld a,(ui_im_cache)				0011A4 32 5A 62 00         A  1129    				ld (insert_mode),a
0011A8 3E80                A  1130    				ld a,080h						0011AA B7                  A  1131    				or a							0011AB C9                  A  1132    				ret
                           A  1133    		
                           A  1134    ;----------------------------------------------
                           A  1135    	
0011AC                     A  1136    os_count_lines
                           A  1137    
0011AC E5                  A  1138    				push hl							0011AD 0679                A  1139    				ld b,'y'						0011AF 21 2A 61 00         A  1140    				ld hl,os_linecount			
0011B3 34                  A  1141    				inc (hl)						0011B4 3A D0 5E 00         A  1142    				ld a,(window_rows)
0011B8 D604                A  1143    				sub 4
0011BA BE                  A  1144    				cp (hl)
0011BB 20 0E               A  1145    				jr nz,os_nntpo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011BD 3600                A  1146    				ld (hl),0
0011BF 21 9B 56 00         A  1147    				ld hl,os_more_txt
0011C3 CD 1B 0F 00         A  1148    				call os_print_string
0011C7 CD 43 44 00         A  1149    				call os_wait_key_press	
0011CB E1                  A  1150    os_nntpo		pop hl
0011CC C9                  A  1151    				ret
                           A  1152    
                           A  1153    ;----------------------------------------------
                           A  1154    
0011CD                     A  1155    ext_compare_strings
                           A  1156    	
0011CD CC 68 15 00         A  1157    				call z,mbase_hl
0011D1 CC 79 15 00         A  1158    				call z,mbase_de
                           A  1159    				
0011D5                     A  1160    os_compare_strings
                           A  1161    
                           A  1162    ; both strings at HL/DE should be zero terminat
                           A  1163    ; compare will fail if string lengths are diffe
                           A  1164    ; unless count (B) is reached first
                           A  1165    ; Case is ignored
                           A  1166    ; Zero flag set on return if same
                           A  1167    
0011D5 E5                  A  1168    				push hl							0011D6 D5                  A  1169    				push de							0011D7 1A                  A  1170    ocslp			ld a,(de)						0011D8 B7                  A  1171    				or a
0011D9 28 0C               A  1172    				jr z,ocsbt
0011DB CD 18 12 00         A  1173    				call case_insensitive_compare	0011DF 20 0E               A  1174    				jr nz,ocs_diff
0011E1 13                  A  1175    				inc de
0011E2 23                  A  1176    				inc hl
0011E3 10 F2               A  1177    				djnz ocslp
0011E5 18 04               A  1178    				jr ocs_same
0011E7 1A                  A  1179    ocsbt			ld a,(de)						0011E8 B6                  A  1180    				or (hl)
0011E9 20 04               A  1181    				jr nz,ocs_diff
0011EB D1                  A  1182    ocs_same		pop de
0011EC E1                  A  1183    				pop hl
0011ED AF                  A  1184    				xor a							0011EE C9                  A  1185    				ret
0011EF D1                  A  1186    ocs_diff		pop de
0011F0 E1                  A  1187    				pop hl
0011F1 AF                  A  1188    				xor a							0011F2 3C                  A  1189    				inc a
0011F3 C9                  A  1190    				ret
                           A  1191    
                           A  1192    
                           A  1193    ;----------------------------------------------
                           A  1194    
0011F4                     A  1195    os_copy_ascii_run
                           A  1196    
                           A  1197    ;INPUT HL = source ($00 or $20 terminates)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1198    ;      DE = dest
                           A  1199    ;       b = max chars
                           A  1200    
                           A  1201    ;OUTPUT HL/DE = end of runs
                           A  1202    ;           c = char count
                           A  1203    	
0011F4 0E00                A  1204    				ld c,0
0011F6 7E                  A  1205    cpyar_lp		ld a,(hl)
0011F7 B7                  A  1206    				or a
0011F8 C8                  A  1207    				ret z
0011F9 FE20                A  1208    				cp 32
0011FB C8                  A  1209    				ret z
0011FC 12                  A  1210    				ld (de),a
0011FD 23                  A  1211    				inc hl
0011FE 13                  A  1212    				inc de
0011FF 0C                  A  1213    				inc c
001200 10 F4               A  1214    				djnz cpyar_lp
001202 C9                  A  1215    				ret
                           A  1216    
                           A  1217    ;----------------------------------------------
                           A  1218    
001203                     A  1219    uppercasify_string
                           A  1220    
                           A  1221    ; Set HL to string location ($00 quits)
                           A  1222    ; Set B to max number of chars
                           A  1223    
001203 7E                  A  1224    				ld a,(hl)
001204 B7                  A  1225    				or a
001205 C8                  A  1226    				ret z
001206 CD 0F 12 00         A  1227    				call os_uppercasify
00120A 77                  A  1228    				ld (hl),a
00120B 23                  A  1229    				inc hl
00120C 10 F5               A  1230    				djnz uppercasify_string	
00120E C9                  A  1231    				ret
                           A  1232    	
                           A  1233    
00120F                     A  1234    os_uppercasify
                           A  1235    
                           A  1236    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1237    
00120F FE61                A  1238    				cp 061h			
001211 D8                  A  1239    				ret c
001212 FE7B                A  1240    				cp 07bh
001214 D0                  A  1241    				ret nc
001215 D620                A  1242    				sub 020h				
001217 C9                  A  1243    				ret
                           A  1244    
                           A  1245    ;----------------------------------------------
                           A  1246    
001218                     A  1247    case_insensitive_compare
                           A  1248    
                           A  1249    ; compares A with (HL) disregarding the case of
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1250    ; Zero flag set if the characters are the same
                           A  1251    ; all registers are preserved.
                           A  1252    
001218 C5                  A  1253    				push bc					
001219 4F                  A  1254    				ld c,a
                           A  1255    
00121A CD 0F 12 00         A  1256    				call os_uppercasify				00121E 47                  A  1257    				ld b,a
00121F 7E                  A  1258    				ld a,(hl)
001220 CD 0F 12 00         A  1259    				call os_uppercasify
001224 B8                  A  1260    				cp b
                           A  1261    
001225 79                  A  1262    				ld a,c
001226 C1                  A  1263    				pop bc
001227 C9                  A  1264    				ret
                           A  1265    
                           A  1266    ;----------------------------------------------
                           A  1267    
001228                     A  1268    os_decimal_add
                           A  1269    
                           A  1270    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1271    
001228 C5                  A  1272    				push bc
001229 0E00                A  1273    				ld c,0
00122B 1A                  A  1274    decdlp			ld a,(de)
00122C 86                  A  1275    				add a,(hl)
00122D 81                  A  1276    				add a,c
00122E FE0A                A  1277    				cp 10
001230 38 0B               A  1278    				jr c,daddnc
001232 D60A                A  1279    				sub 10
001234 0E01                A  1280    				ld c,1
001236 12                  A  1281    decnclp			ld (de),a
001237 23                  A  1282    				inc hl
001238 13                  A  1283    				inc de
001239 10 F0               A  1284    				djnz decdlp
00123B C1                  A  1285    				pop bc
00123C C9                  A  1286    				ret
00123D 0E00                A  1287    daddnc			ld c,0
00123F 18 F5               A  1288    				jr decnclp
                           A  1289    	
                           A  1290    ;----------------------------------------------
                           A  1291    
001241                     A  1292    os_hex_to_decimal
                           A  1293    
                           A  1294    ; INPUT xDE hex longword
                           A  1295    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1296    
       00006873            A  1297    hex_to_convert		equ scratch_pad
       00006876            A  1298    decimal_digits		equ scratch_pad+3
       0000687E            A  1299    decimal_add_digits	equ scratch_pad+3+8
                           A  1300    
001241 ED53 73 68 00       A  1301    				ld (hex_to_convert),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1302    		
001246 21 7E 68 00         A  1303    				ld hl,decimal_add_digits
00124A E5                  A  1304    				push hl
00124B 11 76 68 00         A  1305    				ld de,decimal_digits
00124F AF                  A  1306    				xor a
001250 0608                A  1307    				ld b,8
001252 12                  A  1308    setupdec		ld (de),a
001253 77                  A  1309    				ld (hl),a
001254 23                  A  1310    				inc hl
001255 13                  A  1311    				inc de
001256 10 FA               A  1312    				djnz setupdec
001258 E1                  A  1313    				pop hl
001259 3601                A  1314    				ld (hl),1
                           A  1315    	
00125B 21 73 68 00         A  1316    				ld hl,hex_to_convert
00125F 0603                A  1317    				ld b,3
001261 C5                  A  1318    decconvlp		push bc
001262 7E                  A  1319    				ld a,(hl)
001263 CD 81 12 00         A  1320    				call decadder
001267 CD 9A 12 00         A  1321    				call decaddx16
00126B 7E                  A  1322    				ld a,(hl)
00126C 0F                  A  1323    				rrca
00126D 0F                  A  1324    				rrca
00126E 0F                  A  1325    				rrca
00126F 0F                  A  1326    				rrca
001270 CD 81 12 00         A  1327    				call decadder
001274 CD 9A 12 00         A  1328    				call decaddx16
001278 C1                  A  1329    				pop bc
001279 23                  A  1330    				inc hl
00127A 10 E5               A  1331    				djnz decconvlp
00127C 21 76 68 00         A  1332    				ld hl,decimal_digits
001280 C9                  A  1333    				ret
                           A  1334    
                           A  1335    
                           A  1336    
001281 E60F                A  1337    decadder		and 15
001283 C8                  A  1338    				ret z
001284 47                  A  1339    				ld b,a
001285 E5                  A  1340    				push hl
001286 C5                  A  1341    daddlp			push bc
001287 11 76 68 00         A  1342    				ld de,decimal_digits
00128B 21 7E 68 00         A  1343    				ld hl,decimal_add_digits
00128F 0608                A  1344    				ld b,8
001291 CD 28 12 00         A  1345    				call os_decimal_add
001295 C1                  A  1346    				pop bc
001296 10 EE               A  1347    				djnz daddlp	
001298 E1                  A  1348    				pop hl
001299 C9                  A  1349    				ret
                           A  1350    			
                           A  1351    				
00129A E5                  A  1352    decaddx16		push hl
00129B 0604                A  1353    				ld b,4							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00129D C5                  A  1354    x16loop			push bc
00129E 11 7E 68 00         A  1355    				ld de,decimal_add_digits
0012A2 21 7E 68 00         A  1356    				ld hl,decimal_add_digits
0012A6 0608                A  1357    				ld b,8
0012A8 CD 28 12 00         A  1358    				call os_decimal_add
0012AC C1                  A  1359    				pop bc
0012AD 10 EE               A  1360    				djnz x16loop	
0012AF E1                  A  1361    				pop hl
0012B0 C9                  A  1362    				ret
                           A  1363    	
                           A  1364    	
                           A  1365    ;----------------------------------------------
                           A  1366    
0012B1                     A  1367    os_show_decimal
                           A  1368    
0012B1 11 95 61 00         A  1369    				ld de,output_line				0012B5 01090000            A  1370    				ld bc,9
0012B9 09                  A  1371    				add hl,bc
0012BA 060A                A  1372    				ld b,10
0012BC 7E                  A  1373    shdeclp			ld a,(hl)
0012BD B7                  A  1374    				or a
0012BE 28 04               A  1375    				jr z,dnodigit
0012C0 C630                A  1376    				add a,030h
0012C2 12                  A  1377    				ld (de),a
0012C3 13                  A  1378    				inc de
0012C4 2B                  A  1379    dnodigit		dec hl
0012C5 10 F5               A  1380    				djnz shdeclp
0012C7 AF                  A  1381    				xor a
0012C8 12                  A  1382    				ld (de),a
0012C9 CD 11 13 00         A  1383    				call os_print_output_line
0012CD C9                  A  1384    				ret
                           A  1385    				
                           A  1386    ;----------------------------------------------
                           A  1387    		
0012CE                     A  1388    os_copy_to_output_line
                           A  1389    	
0012CE D5                  A  1390    				push de
0012CF C5                  A  1391    				push bc
0012D0 11 95 61 00         A  1392    				ld de,output_line				0012D4 01510000            A  1393    				ld bc,max_buffer_chars+1		0012D8 EDA0                A  1394    os_cloll		ldi
0012DA 7E                  A  1395    				ld a,(hl)
0012DB B7                  A  1396    				or a
0012DC 28 04               A  1397    				jr z,os_clold
0012DE 78                  A  1398    				ld a,b
0012DF B1                  A  1399    				or c
0012E0 20 F6               A  1400    				jr nz,os_cloll
0012E2 12                  A  1401    os_clold		ld (de),a
0012E3 C1                  A  1402    				pop bc
0012E4 D1                  A  1403    				pop de
0012E5 C9                  A  1404    				ret
                           A  1405    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1406    
                           A  1407    ;----------------------------------------------
                           A  1408    
0012E6                     A  1409    os_show_hex_address
                           A  1410    
0012E6 E5                  A  1411    				push hl							0012E7 21 95 61 00         A  1412    				ld hl,output_line
0012EB ED53 37 61 00       A  1413    				ld (hex_address),de
0012F0 3A 39 61 00         A  1414    				ld a,(hex_address+2)
0012F4 CD 5E 10 00         A  1415    				call hexbyte_to_ascii
0012F8 18 10               A  1416    				jr shw_nt
                           A  1417    				
                           A  1418    
0012FA                     A  1419    os_show_hex_byte
                           A  1420    
0012FA E5                  A  1421    				push hl							0012FB 21 95 61 00         A  1422    				ld hl,output_line
0012FF CD 5E 10 00         A  1423    				call hexbyte_to_ascii
001303 18 09               A  1424    				jr shb_nt
                           A  1425    
                           A  1426    
                           A  1427    
001305                     A  1428    os_show_hex_word
                           A  1429    
001305 E5                  A  1430    				push hl							001306 21 95 61 00         A  1431    				ld hl,output_line
00130A CD 83 10 00         A  1432    shw_nt			call hexword_to_ascii
00130E 3600                A  1433    shb_nt			ld (hl),0
001310 E1                  A  1434    				pop hl
                           A  1435    
                           A  1436    	
                           A  1437    
001311                     A  1438    os_print_output_line
                           A  1439    
001311 E5                  A  1440    				push hl
001312 21 95 61 00         A  1441    				ld hl,output_line
001316 CD 1B 0F 00         A  1442    cproline		call os_print_string
00131A E1                  A  1443    				pop hl
00131B C9                  A  1444    				ret
                           A  1445    
                           A  1446    
                           A  1447    
00131C                     A  1448    os_print_output_line_skip_zeroes
                           A  1449    
00131C E5                  A  1450    				push hl
00131D 21 95 61 00         A  1451    				ld hl,output_line
001321 CD 3B 10 00         A  1452    				call os_skip_leading_ascii_zero
001325 18 EF               A  1453    				jr cproline
                           A  1454    				
                           A  1455    		
                           A  1456    ;----------------------------------------------
                           A  1457    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001327                     A  1458    os_store_CPU_regs
                           A  1459    
001327 F3                  A  1460    				di								                           A  1461    
001328 33                  A  1462    				inc sp							001329 33                  A  1463    				inc sp
00132A 33                  A  1464    				inc sp
00132B ED73 B6 60 00       A  1465    				ld (store_spl),sp
001330 3B                  A  1466    				dec sp							001331 3B                  A  1467    				dec sp
001332 3B                  A  1468    				dec sp
                           A  1469    				
001333 F5                  A  1470    				push af
001334 32 99 60 00         A  1471    				ld (store_a1),a					001338 08                  A  1472    				ex af,af'
001339 32 A3 60 00         A  1473    				ld (store_a2),a
00133D 08                  A  1474    				ex af,af'
00133E ED43 9A 60 00       A  1475    				ld (store_bc1),bc		
001343 ED53 9D 60 00       A  1476    				ld (store_de1),de
001348 22 A0 60 00         A  1477    				ld (store_hl1),hl
00134C D9                  A  1478    				exx
00134D ED43 A4 60 00       A  1479    				ld (store_bc2),bc
001352 ED53 A7 60 00       A  1480    				ld (store_de2),de
001357 22 AA 60 00         A  1481    				ld (store_hl2),hl
00135B D9                  A  1482    				exx
00135C DD22 AD 60 00       A  1483    				ld (store_ix),ix
001361 FD22 B0 60 00       A  1484    				ld (store_iy),iy
                           A  1485    				
001366 ED6E                A  1486    			    ld a,MB
001368 32 BB 60 00         A  1487    				ld (store_mbase),a
                           A  1488    								
00136C C5                  A  1489    				push bc
00136D 0600                A  1490    				ld b,0
00136F 20 02               A  1491    				jr nz,zfstzero					001371 CBF0                A  1492    				set 6,b
                           A  1493    
001373 30 02               A  1494    zfstzero		jr nc,cfstzero					001375 CBC0                A  1495    				set 0,b
                           A  1496    
001377 F2 7D 13 00         A  1497    cfstzero		jp p,sfstzero					00137B CBF8                A  1498    				set 7,b
                           A  1499    
00137D EA 83 13 00         A  1500    sfstzero		jp pe,pfstzero					001381 CBD0                A  1501    				set 2,b
                           A  1502    
001383 ED57                A  1503    pfstzero		ld a,i			
001385 EA 8B 13 00         A  1504    				jp pe,ifstzero					001389 CBE0                A  1505    				set 4,b
                           A  1506    
00138B 78                  A  1507    ifstzero		ld a,b
00138C 32 BC 60 00         A  1508    				ld (store_f),a
                           A  1509    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001390 3E00                A  1510    				ld a,os_location/65536			001392 ED6D                A  1511    				ld MB,a							001394 40ED73 B9 60        A  1512    				ld.sis (store_sps),sp
001399 3A BB 60 00         A  1513    				ld a,(store_mbase)				00139D ED6D                A  1514    				ld MB,a
                           A  1515    				
00139F C1                  A  1516    				pop bc
0013A0 F1                  A  1517    				pop af
0013A1 FB                  A  1518    				ei
0013A2 C9                  A  1519    				ret
                           A  1520    
                           A  1521    
                           A  1522    
0013A3                     A  1523    os_dont_store_registers
                           A  1524    
0013A3 AF                  A  1525    				xor a
0013A4 32 BE 60 00         A  1526    				ld (store_registers),a			0013A8 C9                  A  1527    				ret
                           A  1528    	
                           A  1529    	
                           A  1530    ;----------------------------------------------
                           A  1531    
0013A9                     A  1532    os_new_line_cond
                           A  1533    
0013A9 CD E3 19 00         A  1534    				call test_quiet_mode
0013AD C0                  A  1535    				ret nz
                           A  1536    
                           A  1537    	
0013AE                     A  1538    os_new_line
                           A  1539    
0013AE E5                  A  1540    				push hl
0013AF 21 B3 56 00         A  1541    				ld hl,crlfx2_txt+1
0013B3 CD 1B 0F 00         A  1542    				call os_print_string
0013B7 E1                  A  1543    				pop hl
0013B8 C9                  A  1544    				ret
                           A  1545    				
                           A  1546    ;----------------------------------------------
                           A  1547    
0013B9                     A  1548    os_set_cursor_position
                           A  1549    				
                           A  1550    												0013B9 3A D0 5E 00         A  1551    				ld a,(window_rows)				0013BD 3D                  A  1552    				dec a							0013BE B9                  A  1553    				cp c
0013BF 38 14               A  1554    				jr c,badpos
0013C1 79                  A  1555    				ld a,c
0013C2 32 25 61 00         A  1556    				ld (cursor_y),a
                           A  1557    				
0013C6 3A D3 5E 00         A  1558    				ld a,(window_columns)
0013CA 3D                  A  1559    				dec a
0013CB B8                  A  1560    				cp b
0013CC 38 07               A  1561    				jr c,badpos
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013CE 78                  A  1562    				ld a,b
0013CF 32 26 61 00         A  1563    				ld (cursor_x),a
0013D3 AF                  A  1564    				xor a
0013D4 C9                  A  1565    				ret				
                           A  1566    
0013D5 3E82                A  1567    badpos			ld a,82h
0013D7 B7                  A  1568    				or a
0013D8 C9                  A  1569    				ret
                           A  1570    
                           A  1571    
                           A  1572    					
                           A  1573    	
                           A  1574    	
0013D9                     A  1575    os_get_cursor_position
                           A  1576    
0013D9 ED4B 25 61 00       A  1577    				ld bc,(cursor_pos)				0013DE BF                  A  1578    				cp a							0013DF C9                  A  1579    				ret
                           A  1580    
                           A  1581    
                           A  1582    ;----------------------------------------------
                           A  1583    
0013E0                     A  1584    os_show_packed_text_cond
                           A  1585    
0013E0 CD E3 19 00         A  1586    				call test_quiet_mode
0013E4 C0                  A  1587    				ret nz
                           A  1588    
                           A  1589    	
0013E5                     A  1590    os_show_packed_text
                           A  1591    
                           A  1592    ; Construct sentence from internal dictionary u
                           A  1593    	
0013E5 C5                  A  1594    				push bc
0013E6 D5                  A  1595    				push de
0013E7 DDE5                A  1596    				push ix
0013E9 DD21 95 61 00       A  1597    				ld ix,output_line
0013EE 7E                  A  1598    readpind		ld a,(hl)
0013EF B7                  A  1599    				or a
0013F0 20 10               A  1600    				jr nz,getword					0013F2 DD2B                A  1601    				dec ix							0013F4 DD7700              A  1602    				ld (ix),a						                           A  1603    			
0013F7 E5                  A  1604    				push hl
0013F8 CD 11 13 00         A  1605    				call os_print_output_line
0013FC E1                  A  1606    				pop hl
                           A  1607    			
0013FD DDE1                A  1608    				pop ix
0013FF D1                  A  1609    				pop de
001400 C1                  A  1610    				pop bc
001401 C9                  A  1611    				ret
                           A  1612    				
001402 11 C8 56 00         A  1613    getword			ld de,dictionary-1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001406 0E00                A  1614    				ld c,0
001408 13                  A  1615    dictloop		inc de
001409 1A                  A  1616    				ld a,(de)
00140A B7                  A  1617    				or a							00140B 28 04               A  1618    				jr z,faword
00140D CB7F                A  1619    				bit 7,a							00140F 28 F7               A  1620    				jr z,dictloop	
                           A  1621    			
001411 0C                  A  1622    faword			inc c							001412 79                  A  1623    				ld a,c
001413 BE                  A  1624    				cp (hl)
001414 20 F2               A  1625    				jr nz,dictloop
001416 13                  A  1626    copytol			inc de							001417 1A                  A  1627    				ld a,(de)
001418 B7                  A  1628    				or a
001419 28 0B               A  1629    				jr z,eoword						00141B CB7F                A  1630    				bit 7,a
00141D 20 07               A  1631    				jr nz,eoword
00141F DD7700              A  1632    				ld (ix),a						001422 DD23                A  1633    				inc ix
001424 18 F0               A  1634    				jr copytol
001426 DD360020            A  1635    eoword			ld (ix),32						00142A DD23                A  1636    				inc ix
00142C 23                  A  1637    				inc hl
00142D 18 BF               A  1638    				jr readpind
                           A  1639    
                           A  1640    
                           A  1641    		
                           A  1642    ;--------- Mouse functions --------------------
                           A  1643    
00142F                     A  1644    os_set_mouse_window
                           A  1645    
                           A  1646    ; Set: HL/DE = window size mouse pointer is to 
                           A  1647    	
00142F 22 6D 62 00         A  1648    				ld (mouse_window_size_x),hl	 
001433 ED53 70 62 00       A  1649    				ld (mouse_window_size_y),de
001438 21000000            A  1650    				ld hl,0
00143C 22 73 62 00         A  1651    				ld (mouse_abs_x),hl
001440 22 76 62 00         A  1652    				ld (mouse_abs_y),hl
001444 3E01                A  1653    				ld a,1
001446 32 85 62 00         A  1654    				ld (mouse_new_window),a
00144A AF                  A  1655    				xor a
00144B C9                  A  1656    				ret
                           A  1657    				
                           A  1658    			
00144C                     A  1659    os_get_mouse_motion
                           A  1660    			
                           A  1661    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1662    ;          ZF = Not set: Mouse driver not initi
                           A  1663    			
00144C 3A 8F 60 00         A  1664    				ld a,(devices_connected)
001450 E602                A  1665    				and 2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001452 EE02                A  1666    				xor 2
001454 C0                  A  1667    				ret nz
001455 AF                  A  1668    ms_reread		xor a
001456 32 6C 62 00         A  1669    				ld (mouse_updated),a
00145A 2A 65 62 00         A  1670    				ld hl,(mouse_disp_x)			00145E ED5B 68 62 00       A  1671    				ld de,(mouse_disp_y)
001463 3A 6C 62 00         A  1672    				ld a,(mouse_updated)			001467 B7                  A  1673    				or a
001468 20 EB               A  1674    				jr nz,ms_reread
00146A AF                  A  1675    mouse_end		xor a
00146B 3A 6B 62 00         A  1676    				ld a,(mouse_wheel)
00146F 47                  A  1677    				ld b,a
001470 3A 64 62 00         A  1678    				ld a,(mouse_buttons)
001474 C9                  A  1679    				ret
                           A  1680    			
                           A  1681    			
001475                     A  1682    os_get_mouse_position
                           A  1683    
                           A  1684    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1685    ;          ZF = Not set: Mouse driver not initi
                           A  1686    				
001475 CD 4C 14 00         A  1687    				call os_get_mouse_motion
001479 C0                  A  1688    				ret nz
00147A 22 7F 62 00         A  1689    				ld (mouse_disp_x_buffer),hl
00147E ED53 82 62 00       A  1690    				ld (mouse_disp_y_buffer),de
001483 3A 85 62 00         A  1691    				ld a,(mouse_new_window)
001487 B7                  A  1692    				or a
001488 20 6C               A  1693    				jr nz,ms_nmw
                           A  1694    
00148A ED5B 79 62 00       A  1695    				ld de,(mouse_disp_x_old)
00148F AF                  A  1696    				xor a
001490 ED52                A  1697    				sbc hl,de
001492 EB                  A  1698    				ex de,hl
001493 2A 73 62 00         A  1699    				ld hl,(mouse_abs_x)
001497 19                  A  1700    				add hl,de
001498 E5                  A  1701    				push hl
001499 C1                  A  1702    				pop bc
00149A DD210000 80         A  1703    				ld ix,800000h					00149F DD09                A  1704    				add ix,bc
0014A1 30 06               A  1705    				jr nc,ms_x_ok1
0014A3 01000000            A  1706    				ld bc,0
0014A7 18 10               A  1707    				jr ms_x_ok2
0014A9 ED5B 6D 62 00       A  1708    ms_x_ok1		ld de,(mouse_window_size_x)
0014AE AF                  A  1709    				xor a
0014AF ED52                A  1710    				sbc hl,de
0014B1 38 06               A  1711    				jr c,ms_x_ok2
0014B3 ED4B 6D 62 00       A  1712    				ld bc,(mouse_window_size_x)		0014B8 0B                  A  1713    				dec bc
0014B9 ED43 73 62 00       A  1714    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1715    					
0014BE 2A 82 62 00         A  1716    				ld hl,(mouse_disp_y_buffer)
0014C2 ED5B 7C 62 00       A  1717    				ld de,(mouse_disp_y_old)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C7 AF                  A  1718    				xor a
0014C8 ED52                A  1719    				sbc hl,de
0014CA EB                  A  1720    				ex de,hl
0014CB 2A 76 62 00         A  1721    				ld hl,(mouse_abs_y)
0014CF 19                  A  1722    				add hl,de
0014D0 E5                  A  1723    				push hl
0014D1 C1                  A  1724    				pop bc
0014D2 DD210000 80         A  1725    				ld ix,800000h					0014D7 DD09                A  1726    				add ix,bc
0014D9 30 06               A  1727    				jr nc,ms_y_ok1
0014DB 01000000            A  1728    				ld bc,0
0014DF 18 10               A  1729    				jr ms_y_ok2
0014E1 ED5B 70 62 00       A  1730    ms_y_ok1		ld de,(mouse_window_size_y)
0014E6 AF                  A  1731    				xor a
0014E7 ED52                A  1732    				sbc hl,de
0014E9 38 06               A  1733    				jr c,ms_y_ok2
0014EB ED4B 70 62 00       A  1734    				ld bc,(mouse_window_size_y)		0014F0 0B                  A  1735    				dec bc
0014F1 ED43 76 62 00       A  1736    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1737    
                           A  1738    				
0014F6 2A 7F 62 00         A  1739    ms_nmw			ld hl,(mouse_disp_x_buffer)
0014FA 22 79 62 00         A  1740    				ld (mouse_disp_x_old),hl
0014FE 2A 82 62 00         A  1741    				ld hl,(mouse_disp_y_buffer)
001502 22 7C 62 00         A  1742    				ld (mouse_disp_y_old),hl
                           A  1743    				
001506 2A 73 62 00         A  1744    				ld hl,(mouse_abs_x)
00150A ED5B 76 62 00       A  1745    				ld de,(mouse_abs_y)
                           A  1746    				
00150F AF                  A  1747    				xor a
001510 32 85 62 00         A  1748    				ld (mouse_new_window),a
001514 C3 6A 14 00         A  1749    				jp mouse_end
                           A  1750    				
                           A  1751    	
                           A  1752    ;==============================================
                           A  1753    ;----- General Subroutines --------------------
                           A  1754    ;==============================================
                           A  1755    
                           A  1756    ; .--------------.
                           A  1757    ; ! CRC Checksum !
                           A  1758    ; '--------------'
                           A  1759    
                           A  1760    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1761    
001518                     A  1762    crc_checksum
                           A  1763    
001518 21FFFF00            A  1764    				ld hl,0ffffh		
00151C 1A                  A  1765    crcloop			ld a,(de)			
00151D AC                  A  1766    				xor h			
00151E 67                  A  1767    				ld h,a			
00151F 0608                A  1768    				ld b,8
001521 4029                A  1769    crcbyte			add.sis hl,hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001523 30 08               A  1770    				jr nc,crcnext
001525 7C                  A  1771    				ld a,h
001526 EE10                A  1772    				xor 10h
001528 67                  A  1773    				ld h,a
001529 7D                  A  1774    				ld a,l
00152A EE21                A  1775    				xor 21h
00152C 6F                  A  1776    				ld l,a
00152D 10 F2               A  1777    crcnext			djnz crcbyte
00152F 13                  A  1778    				inc de
001530 0D                  A  1779    				dec c
001531 20 E9               A  1780    				jr nz,crcloop
001533 C9                  A  1781    				ret
                           A  1782    
                           A  1783    
                           A  1784    ;----------------------------------------------
                           A  1785    
001534                     A  1786    os_get_key_mod_flags
                           A  1787    
001534 3A 59 62 00         A  1788    				ld a,(key_mod_flags)
001538 BF                  A  1789    				cp a							001539 C9                  A  1790    				ret
                           A  1791    
                           A  1792    ;----------------------------------------------
                           A  1793    
00153A                     A  1794    os_get_display_size
                           A  1795    			
00153A ED4B D0 5E 00       A  1796    				ld bc,(display_parameters)
00153F BF                  A  1797    				cp a
001540 C9                  A  1798    				ret
                           A  1799    
                           A  1800    ;----------------------------------------------
                           A  1801    
001541                     A  1802    os_bchl_memfill
                           A  1803    
                           A  1804    ; fill memory from xHL with A. Count in xBC.
                           A  1805    		
001541 77                  A  1806    mf_loop			ld (hl),a
001542 EDA1                A  1807    				cpi								001544 EA 41 15 00         A  1808    				jp pe,mf_loop
001548 C9                  A  1809    				ret
                           A  1810    	
                           A  1811    ;----------------------------------------------
                           A  1812    
001549 7B                  A  1813    ext_set_pen		ld a,e
                           A  1814    
00154A 32 A9 5E 00         A  1815    os_set_pen		ld (current_pen),a
00154E BF                  A  1816    				cp a							00154F C9                  A  1817    				ret
                           A  1818    
                           A  1819    ;----------------------------------------------
                           A  1820    	
001550 3A A9 5E 00         A  1821    os_get_pen		ld a,(current_pen)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001554 BF                  A  1822    				cp a							001555 C9                  A  1823    				ret	
                           A  1824    
                           A  1825    ;----------------------------------------------
                           A  1826    
001556                     A  1827    ext_background_colours
                           A  1828    				
001556 CC 68 15 00         A  1829    				call z,mbase_hl
00155A C3 4F 3D 00         A  1830    				jp hswc_set_ui_colours
                           A  1831    				
                           A  1832    				
                           A  1833    ;----------------------------------------------
                           A  1834    
00155E                     A  1835    os_get_xde_msb	
                           A  1836    			
00155E ED53 3D 61 00       A  1837    				ld (xrr_temp),de				001563 3A 3F 61 00         A  1838    				ld a,(xrr_temp+2)
001567 C9                  A  1839    				ret
                           A  1840    
                           A  1841    ;----------------------------------------------
                           A  1842    
001568 F5                  A  1843    mbase_hl		push af
001569 22 3D 61 00         A  1844    				ld (xrr_temp),hl				00156D ED6E                A  1845    				ld a,MB
00156F 32 3F 61 00         A  1846    				ld (xrr_temp+2),a
001573 2A 3D 61 00         A  1847    				ld hl,(xrr_temp)
001577 F1                  A  1848    				pop af
001578 C9                  A  1849    				ret
                           A  1850    				
001579 F5                  A  1851    mbase_de		push af
00157A ED53 3D 61 00       A  1852    				ld (xrr_temp),de				00157F ED6E                A  1853    				ld a,MB
001581 32 3F 61 00         A  1854    				ld (xrr_temp+2),a
001585 ED5B 3D 61 00       A  1855    				ld de,(xrr_temp)
00158A F1                  A  1856    				pop af
00158B C9                  A  1857    				ret
                           A  1858    
00158C F5                  A  1859    mbase_ix		push af
00158D DD22 3D 61 00       A  1860    				ld (xrr_temp),ix				001592 ED6E                A  1861    				ld a,MB
001594 32 3F 61 00         A  1862    				ld (xrr_temp+2),a
001598 DD2A 3D 61 00       A  1863    				ld ix,(xrr_temp)
00159D F1                  A  1864    				pop af
00159E C9                  A  1865    				ret
                           A  1866    							
                           A  1867    ;----------------------------------------------
                           A  1868    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1869    ;----------------------------------------------
                           A  1870    
00159F                     A  1871    unpack_rle
                           A  1872    
                           A  1873    ;set xHL = source address of packed file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1874    ;set xDE = destination address for unpacked dat
                           A  1875    ;set xBC = length of packed file
                           A  1876    
00159F E5                  A  1877    			push hl	
0015A0 DDE1                A  1878    			pop ix
0015A2 0B                  A  1879    			dec bc								0015A3 23                  A  1880    			inc hl
0015A4 DD7E00              A  1881    unp_gtok	ld a,(ix)							0015A7 BE                  A  1882    unp_next	cp (hl)								0015A8 28 07               A  1883    			jr z,unp_brun						0015AA EDA0                A  1884    			ldi									0015AC EA A7 15 00         A  1885    			jp pe,unp_next						0015B0 C9                  A  1886    			ret
                           A  1887    	
0015B1 C5                  A  1888    unp_brun	push bc								0015B2 23                  A  1889    			inc hl		
0015B3 7E                  A  1890    			ld a,(hl)							0015B4 23                  A  1891    			inc hl		
0015B5 46                  A  1892    			ld b,(hl)							0015B6 23                  A  1893    			inc hl
                           A  1894    	
0015B7 12                  A  1895    unp_rllp	ld (de),a							0015B8 13                  A  1896    			inc de			
0015B9 10 FC               A  1897    			djnz unp_rllp
                           A  1898    	
0015BB C1                  A  1899    			pop bc	
0015BC 0B                  A  1900    			dec bc								0015BD 0B                  A  1901    			dec bc
0015BE 0B                  A  1902    			dec bc
0015BF E5                  A  1903    			push hl								0015C0 21000000            A  1904    			ld hl,0
0015C4 B7                  A  1905    			or a
0015C5 ED4A                A  1906    			adc hl,bc
0015C7 E1                  A  1907    			pop hl
0015C8 20 DA               A  1908    			jr nz,unp_gtok
0015CA C9                  A  1909    			ret	
                           A  1910    	
                           A  1911    ;----------------------------------------------
                           A  1912    ; Commonly called error messages - gets message
                           A  1913    ;----------------------------------------------
                           A  1914    
                           A  1915    
0015CB 3E0D                A  1916    os_no_fn_error		ld a,0dh
0015CD B7                  A  1917    					or a
0015CE C9                  A  1918    					ret
                           A  1919    			
0015CF 3E15                A  1920    os_fn_too_long		ld a,15h
0015D1 B7                  A  1921    					or a
0015D2 C9                  A  1922    					ret
                           A  1923    				
0015D3 3E16                A  1924    os_no_start_addr	ld a,16h
0015D5 B7                  A  1925    					or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015D6 C9                  A  1926    					ret
                           A  1927    			
0015D7 3E17                A  1928    os_no_filesize		ld a,17h
0015D9 B7                  A  1929    					or a
0015DA C9                  A  1930    					ret
                           A  1931    			
0015DB 3E18                A  1932    os_abort_save		ld a,18h
0015DD B7                  A  1933    					or a
0015DE C9                  A  1934    					ret
                           A  1935    			
0015DF 3E1C                A  1936    os_no_e_addr_error	ld a,1ch
0015E1 B7                  A  1937    					or a
0015E2 C9                  A  1938    					ret
                           A  1939    			
0015E3 3E1D                A  1940    os_no_d_addr_error	ld a,1dh
0015E5 B7                  A  1941    					or a
0015E6 C9                  A  1942    					ret
                           A  1943    				
0015E7 3E1E                A  1944    os_range_error		ld a,1eh
0015E9 B7                  A  1945    					or a
0015EA C9                  A  1946    					ret
                           A  1947    			
0015EB 3E1F                A  1948    os_no_args_error	ld a,1fh
0015ED B7                  A  1949    					or a
0015EE C9                  A  1950    					ret	
                           A  1951    
                           A  1952    ;----------------------------------------------
                           A  1953    
                           A  1954    ; Set xHL to address of zero terminated filenam
                           A  1955    ; RETURNS:	C:xDE  = File length
                           A  1956    ;    		HL     = Start cluster of file
                           A  1957    
0015EF CC 68 15 00         A  1958    ext_find_file	call z,mbase_hl
                           A  1959    
0015F3 CD A4 52 00         A  1960    os_find_file	call fs_hl_to_filename
0015F7 CD 45 4A 00         A  1961    				call fs_open_file_command		0015FB 38 02               A  1962    				jr c,os_fferr					0015FD B7                  A  1963    				or a							0015FE C9                  A  1964    				ret 		
                           A  1965    								
0015FF 47                  A  1966    os_fferr		ld b,a							001600 AF                  A  1967    				xor a			
001601 4F                  A  1968    				ld c,a
001602 0C                  A  1969    				inc c							001603 C9                  A  1970    				ret	
                           A  1971    
                           A  1972    ;----------------------------------------------
                           A  1973    
001604                     A  1974    os_set_load_length
                           A  1975    
001604 ED53 FB 54 00       A  1976    				ld (fs_file_transfer_length),de
001609 BF                  A  1977    				cp a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00160A C9                  A  1978    				ret
                           A  1979    				
                           A  1980    ;----------------------------------------------
                           A  1981    
00160B                     A  1982    ext_set_file_pointer
                           A  1983    
00160B 79                  A  1984    				ld a,c
                           A  1985    				
00160C                     A  1986    os_set_file_pointer
                           A  1987    
                           A  1988    ; Moves the 'start of file' pointer allowing ra
                           A  1989    ; Note: File pointer is reset by opening a file
                           A  1990    ; by normal read function.
                           A  1991    
00160C ED53 EF 54 00       A  1992    				ld (fs_file_pointer),de			001611 32 F2 54 00         A  1993    				ld (fs_file_pointer+3),a
001615 F5                  A  1994    				push af
001616 AF                  A  1995    				xor a
001617 32 21 55 00         A  1996    				ld (fs_filepointer_valid),a		00161B F1                  A  1997    				pop af
00161C BF                  A  1998    				cp a							00161D C9                  A  1999    				ret
                           A  2000    				
                           A  2001    ;----------------------------------------------
                           A  2002    
                           A  2003    ; set xHL = load address 
                           A  2004    ; (Before calling this routine, call os_find_fi
                           A  2005    
00161E                     A  2006    ext_read_bytes_from_file
                           A  2007    
00161E CC 68 15 00         A  2008    				call z,mbase_hl					                           A  2009    				
001622                     A  2010    os_read_bytes_from_file
                           A  2011    
001622 22 04 55 00         A  2012    				ld (fs_ez80_address),hl			001626 CD 90 4A 00         A  2013    				call fs_read_data_command
00162A 38 D3               A  2014    				jr c,os_fferr
00162C B7                  A  2015    				or a
00162D C9                  A  2016    				ret
                           A  2017    
                           A  2018    ;----------------------------------------------
                           A  2019    
                           A  2020    ; Before calling, set xHL = address of zero ter
                           A  2021    
00162E CC 68 15 00         A  2022    ext_create_file	call z,mbase_hl
                           A  2023    
001632 CD A4 52 00         A  2024    os_create_file	call fs_hl_to_filename
001636 CD 46 4D 00         A  2025    				call fs_create_file_command		00163A DA FF 15 00         A  2026    				jp c,os_fferr					00163E B7                  A  2027    				or a
00163F C9                  A  2028    				ret
                           A  2029    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2030    ;----------------------------------------------
                           A  2031    
001640                     A  2032    ext_write_bytes_to_file
                           A  2033    
001640 CC 68 15 00         A  2034    				call z,mbase_hl
001644 CC 79 15 00         A  2035    				call z,mbase_de
                           A  2036    
001648                     A  2037    os_write_bytes_to_file
                           A  2038    
                           A  2039    ; Before calling, set..
                           A  2040    
                           A  2041    ; xDE   = address to save data from
                           A  2042    ; xBC   = number of bytes to save
                           A  2043    ; xHL   = address of null-terminated ascii name
                           A  2044    
                           A  2045    ; On return:
                           A  2046    
                           A  2047    ; If zero flag NOT set, there was an error.
                           A  2048    ; If   A = $00, b = hardware error code
                           A  2049    ; Else A = File system error code
                           A  2050    
                           A  2051    ; NOTE:
                           A  2052    ; Will return 'file not found' if the file has 
                           A  2053    				
001648 ED43 FB 54 00       A  2054    				ld (fs_file_transfer_length),bc
00164D ED53 04 55 00       A  2055    				ld (fs_ez80_address),de	 	
001652 CD A4 52 00         A  2056    				call fs_hl_to_filename
001656 CD 78 4D 00         A  2057    				call fs_write_bytes_to_file_com
00165A DA FF 15 00         A  2058    				jp c,os_fferr
00165E B7                  A  2059    				or a
00165F C9                  A  2060    				ret
                           A  2061    		
                           A  2062    		
                           A  2063    ;----------------------------------------------
                           A  2064    	
                           A  2065    
001660                     A  2066    os_check_volume_format
                           A  2067    
001660 CD A3 48 00         A  2068    				call fs_check_disk_format
001664 DA FF 15 00         A  2069    os_rffsc		jp c,os_fferr
001668 B7                  A  2070    				or a
001669 C9                  A  2071    				ret
                           A  2072    
                           A  2073    ;----------------------------------------------
                           A  2074    
                           A  2075    
00166A 7B                  A  2076    ext_format		ld a,e
00166B CC 68 15 00         A  2077    				call z,mbase_hl					                           A  2078    
00166F E5                  A  2079    os_format		push hl							001670 CD 76 1A 00         A  2080    				call dev_to_driver_lookup
001674 E1                  A  2081    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001675 38 04               A  2082    				jr c,sdevok
001677 3ED0                A  2083    				ld a,0d0h						001679 B7                  A  2084    				or a
00167A C9                  A  2085    				ret
                           A  2086    
00167B F5                  A  2087    sdevok			push af				
00167C 11 CB 54 00         A  2088    				ld de,fs_sought_filename
001680 CD B3 53 00         A  2089    				call fs_clear_filename
001684 060B                A  2090    				ld b,11
001686 CD F4 11 00         A  2091    				call os_copy_ascii_run
00168A F1                  A  2092    				pop af
                           A  2093    				
00168B 21 4B 5F 00         A  2094    				ld hl,current_driver
00168F 46                  A  2095    				ld b,(hl)
001690 77                  A  2096    				ld (hl),a
001691 C5                  A  2097    				push bc
001692 E5                  A  2098    				push hl
001693 CD 18 47 00         A  2099    				call fs_format_device_command
001697 E1                  A  2100    				pop hl
001698 C1                  A  2101    				pop bc
001699 70                  A  2102    				ld (hl),b
00169A 18 C8               A  2103    				jr os_rffsc
                           A  2104    
                           A  2105    
                           A  2106    ;----------------------------------------------
                           A  2107    
                           A  2108    
00169C CC 68 15 00         A  2109    ext_make_dir	call z,mbase_hl					                           A  2110    
0016A0 CD A4 52 00         A  2111    os_make_dir		call fs_hl_to_filename
0016A4 CD BE 4B 00         A  2112    				call fs_make_dir_command
0016A8 18 BA               A  2113    				jr os_rffsc
                           A  2114    
                           A  2115    
                           A  2116    ;----------------------------------------------
                           A  2117    
                           A  2118    
0016AA CC 68 15 00         A  2119    ext_change_dir	call z,mbase_hl					                           A  2120    
0016AE CD A4 52 00         A  2121    os_change_dir	call fs_hl_to_filename
0016B2 CD F1 49 00         A  2122    				call fs_change_dir_command
0016B6 18 AC               A  2123    				jr os_rffsc
                           A  2124    				
                           A  2125    	
                           A  2126    ;----------------------------------------------
                           A  2127    	
                           A  2128    	
0016B8 CD 22 4A 00         A  2129    os_parent_dir	call fs_parent_dir_command
0016BC 18 A6               A  2130    				jr os_rffsc
                           A  2131    				
                           A  2132    
                           A  2133    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2134    
                           A  2135    	
0016BE CD 16 4A 00         A  2136    os_root_dir		call fs_goto_root_dir_command
0016C2 18 A0               A  2137    				jr os_rffsc
                           A  2138    
                           A  2139    
                           A  2140    ;----------------------------------------------
                           A  2141    
                           A  2142    
0016C4 CC 68 15 00         A  2143    ext_erase_file	call z,mbase_hl					                           A  2144    
0016C8 CD A4 52 00         A  2145    os_erase_file	call fs_hl_to_filename
0016CC CD 07 4F 00         A  2146    				call fs_erase_file_command
0016D0 18 92               A  2147    				jr os_rffsc
                           A  2148    	
                           A  2149    
                           A  2150    ;----------------------------------------------
                           A  2151    
                           A  2152    
0016D2                     A  2153    os_goto_first_dir_entry	
                           A  2154    
0016D2 CD 62 4F 00         A  2155    				call fs_goto_first_dir_entry
0016D6 18 8C               A  2156    				jr os_rffsc
                           A  2157    
                           A  2158    
                           A  2159    ;----------------------------------------------
                           A  2160    
                           A  2161    
0016D8                     A  2162    os_get_dir_entry		
                           A  2163    
0016D8 CD 79 4F 00         A  2164    				call fs_get_dir_entry	
0016DC 18 86               A  2165    				jr os_rffsc
                           A  2166    
                           A  2167    
                           A  2168    ;----------------------------------------------
                           A  2169    
                           A  2170    
0016DE                     A  2171    os_goto_next_dir_entry	
                           A  2172    	
0016DE CD 06 50 00         A  2173    				call fs_goto_next_dir_entry	
0016E2 18 80               A  2174    				jr os_rffsc
                           A  2175    
                           A  2176    
                           A  2177    ;----------------------------------------------
                           A  2178    
                           A  2179    
0016E4                     A  2180    os_get_current_dir_name
                           A  2181    
0016E4 CD 6A 53 00         A  2182    				call fs_get_current_dir_name
0016E8 C3 64 16 00         A  2183    				jr os_rffsc
                           A  2184    				
                           A  2185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2186    ;----------------------------------------------
                           A  2187    
                           A  2188    
0016EC CC 68 15 00         A  2189    ext_rename_file	call z,mbase_hl
0016F0 CC 79 15 00         A  2190    				call z,mbase_de
                           A  2191    
0016F4 D5                  A  2192    os_rename_file	push de
0016F5 CD 9E 52 00         A  2193    				call fs_hl_to_alt_filename		0016F9 E1                  A  2194    				pop hl				
0016FA CD A4 52 00         A  2195    				call fs_hl_to_filename	
0016FE CD 1E 4F 00         A  2196    				call fs_rename_command
001702 C3 64 16 00         A  2197    				jr os_rffsc
                           A  2198    				
                           A  2199    
                           A  2200    ;----------------------------------------------
                           A  2201    
                           A  2202    
001706 CC 68 15 00         A  2203    ext_delete_dir	call z,mbase_hl					                           A  2204    
00170A CD A4 52 00         A  2205    os_delete_dir	call fs_hl_to_filename
00170E CD 97 4C 00         A  2206    				call fs_delete_dir_command
001712 C3 64 16 00         A  2207    				jp os_rffsc
                           A  2208    	
                           A  2209    	
                           A  2210    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2211    
                           A  2212    
001716                     A  2213    ext_read_sector
001716 CD 61 17 00         A  2214    				call ext_sector_access_preamble
00171A C0                  A  2215    				ret nz
00171B 32 4B 5F 00         A  2216    				ld (current_driver),a
00171F CD 41 54 00         A  2217    				call fs_read_sector
001723 20 11               A  2218    				jr nz,sect_done
001725 38 0F               A  2219    				jr c,sect_done
001727 21 73 66 00         A  2220    				ld hl,sector_buffer
00172B ED5B 5B 5F 00       A  2221    				ld de,(sector_rd_wr_addr)
001730 01000200            A  2222    				ld bc,512
001734 EDB0                A  2223    				ldir			
001736 F5                  A  2224    sect_done		push af
001737 3A 81 60 00         A  2225    				ld a,(sys_driver_backup)		00173B 32 4B 5F 00         A  2226    				ld (current_driver),a
00173F F1                  A  2227    				pop af
001740 C3 64 16 00         A  2228    				jp os_rffsc
                           A  2229    				
                           A  2230    
001744                     A  2231    ext_write_sector
                           A  2232    			
001744 CD 61 17 00         A  2233    				call ext_sector_access_preamble
001748 C0                  A  2234    				ret nz
001749 32 4B 5F 00         A  2235    				ld (current_driver),a
00174D 2A 5B 5F 00         A  2236    				ld hl,(sector_rd_wr_addr)
001751 11 73 66 00         A  2237    				ld de,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001755 01000200            A  2238    				ld bc,512
001759 EDB0                A  2239    				ldir			
00175B CD 59 54 00         A  2240    				call fs_write_sector
00175F 18 D5               A  2241    				jr sect_done
                           A  2242    
                           A  2243    
001761                     A  2244    ext_sector_access_preamble
                           A  2245    
001761 CC 68 15 00         A  2246    				call z,mbase_hl
001765 22 5B 5F 00         A  2247    				ld (sector_rd_wr_addr),hl
                           A  2248    				
001769 78                  A  2249    				ld a,b
00176A F5                  A  2250    				push af							00176B DD21 21 61 00       A  2251    				ld ix,sector_lba0
001770 DD1F00              A  2252    				ld (ix),de						001773 DD7103              A  2253    				ld (ix+3),c
001776 CD 76 1A 00         A  2254    				call dev_to_driver_lookup		00177A E5                  A  2255    				push hl
00177B DDE1                A  2256    				pop ix
00177D 2A 21 61 00         A  2257    				ld hl,(sector_lba0)				001781 3A 24 61 00         A  2258    				ld a,(sector_lba3)				001785 DD0701              A  2259    				ld bc,(ix+1)					001788 B7                  A  2260    				or a							001789 ED42                A  2261    				sbc hl,bc
00178B DD9E04              A  2262    				sbc a,(ix+4)
00178E 38 05               A  2263    				jr c,range_ok
001790 F1                  A  2264    				pop af
001791 3ED5                A  2265    				ld a,0d5h						001793 B7                  A  2266    				or a							001794 C9                  A  2267    				ret
                           A  2268    	
001795 3A 4B 5F 00         A  2269    range_ok		ld a,(current_driver)
001799 32 81 60 00         A  2270    				ld (sys_driver_backup),a
00179D F1                  A  2271    				pop af							00179E CD 76 1A 00         A  2272    				call dev_to_driver_lookup
0017A2 30 02               A  2273    				jr nc,bad_dev
0017A4 BF                  A  2274    os_null			cp a							0017A5 C9                  A  2275    				ret
                           A  2276    					
0017A6 3ED0                A  2277    bad_dev			ld a,0d0h						0017A8 B7                  A  2278    				or a							0017A9 C9                  A  2279    				ret	
                           A  2280    			
                           A  2281    
                           A  2282    ;----------------------------------------------
                           A  2283    
                           A  2284    
0017AA                     A  2285    os_get_device_info
                           A  2286    
0017AA 21 FC 5F 00         A  2287    				ld hl,host_device_hardware_info
0017AE 11 5E 5F 00         A  2288    				ld de,driver_table
0017B2 3A 4C 5F 00         A  2289    				ld a,(device_count)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017B6 47                  A  2290    				ld b,a
0017B7 3A 4B 5F 00         A  2291    				ld a,(current_driver)
0017BB BF                  A  2292    				cp a
0017BC C9                  A  2293    				ret
                           A  2294    
                           A  2295    
                           A  2296    
                           A  2297    
0017BD                     A  2298    os_get_volume_info
                           A  2299    
0017BD 21 7C 5F 00         A  2300    				ld hl,volume_mount_list	
0017C1 3A 4D 5F 00         A  2301    				ld a,(volume_count)
0017C5 47                  A  2302    				ld b,a
0017C6 3A 4A 5F 00         A  2303    				ld a,(current_volume)
0017CA C9                  A  2304    				ret
                           A  2305    				
                           A  2306    		
                           A  2307    ;----------------------------------------------
                           A  2308    
                           A  2309    
0017CB                     A  2310    ext_serial_get_header
                           A  2311    
0017CB CC 68 15 00         A  2312    				call z,mbase_hl
0017CF 7B                  A  2313    				ld a,e
0017D0 CD AB 44 00         A  2314    				call serial_get_header
0017D4 C9                  A  2315    				ret
                           A  2316    				
                           A  2317    				
0017D5                     A  2318    ext_serial_receive_file
                           A  2319    				
0017D5 CC 68 15 00         A  2320    				call z,mbase_hl
0017D9 CD 46 45 00         A  2321    				call serial_receive_file
0017DD C9                  A  2322    				ret
                           A  2323    				
                           A  2324    	
0017DE                     A  2325    ext_serial_send_file
                           A  2326    
0017DE CC 68 15 00         A  2327    				call z,mbase_hl
0017E2 CC 8C 15 00         A  2328    				call z,mbase_ix				
0017E6 CD 0F 46 00         A  2329    				call serial_send_file
0017EA C9                  A  2330    				ret
                           A  2331    
                           A  2332    
0017EB                     A  2333    ext_serial_tx
0017EB 7B                  A  2334    				ld a,e
0017EC CD 18 3C 00         A  2335    				call send_serial_byte
0017F0 AF                  A  2336    				xor a							0017F1 C9                  A  2337    				ret
                           A  2338    
                           A  2339    
0017F2                     A  2340    ext_serial_rx
0017F2 7B                  A  2341    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017F3 32 1A 5F 00         A  2342    				ld (serial_timeout),a
0017F7 CD DD 3B 00         A  2343    				call receive_serial_byte
0017FB C9                  A  2344    				ret
                           A  2345    				
                           A  2346    
                           A  2347    ;----------------------------------------------
                           A  2348    
0017FC                     A  2349    ext_mount_volumes
                           A  2350    
0017FC 7B                  A  2351    				ld a,e
                           A  2352    
0017FD                     A  2353    os_mount_volumes
                           A  2354    				
0017FD 32 82 60 00         A  2355    				ld (os_quiet_mode),a			                           A  2356    				
001801 21 3A 56 00         A  2357    				ld hl,storage_txt
001805 CD 16 0F 00         A  2358    				call os_print_string_cond
001809 CD 31 18 00         A  2359    				call mount_go
00180D AF                  A  2360    				xor a
00180E 32 4A 5F 00         A  2361    tvloop			ld (current_volume),a
001812 CD 8C 1A 00         A  2362    				call os_change_volume			001816 C8                  A  2363    				ret z							001817 3A 4A 5F 00         A  2364    				ld a,(current_volume)			00181B 3C                  A  2365    				inc a
00181C FE08                A  2366    				cp max_volumes
00181E 20 EE               A  2367    				jr nz,tvloop
001820 3A 4C 5F 00         A  2368    				ld a,(device_count)
001824 B7                  A  2369    				or a
001825 20 08               A  2370    				jr nz,mfsdevs
001827 21 30 5D 00         A  2371    				ld hl,none_found_msg
00182B CD E0 13 00         A  2372    				call os_show_packed_text_cond
00182F AF                  A  2373    mfsdevs			xor a
001830 C9                  A  2374    				ret
                           A  2375    
                           A  2376    
                           A  2377    
001831 21 7C 5F 00         A  2378    mount_go		ld hl,volume_mount_list			001835 01800000            A  2379    				ld bc,max_volumes*16
001839 AF                  A  2380    clrdl_lp		xor a
00183A CD 41 15 00         A  2381    				call os_bchl_memfill
                           A  2382    								
00183E 21 64 5F 00         A  2383    				ld hl,volume_dir_clusters		001842 01180000            A  2384    				ld bc,max_volumes*3		
001846 AF                  A  2385    				xor a	
001847 CD 41 15 00         A  2386    				call os_bchl_memfill	
                           A  2387    			
00184B 11 FC 5F 00         A  2388    				ld de,host_device_hardware_info
00184F ED53 7C 60 00       A  2389    				ld (dhwn_temp_pointer),de
                           A  2390    				
001854 FD21 7C 5F 00       A  2391    				ld iy,volume_mount_list
001859 AF                  A  2392    				xor a
00185A 32 4D 5F 00         A  2393    				ld (volume_count),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00185E 32 4C 5F 00         A  2394    				ld (device_count),a
001862 32 4B 5F 00         A  2395    mnt_loop		ld (current_driver),a			001866 CD 02 1A 00         A  2396    				call locate_driver_base			00186A 21000000            A  2397    				ld hl,0
00186E AF                  A  2398    				xor a
00186F ED5A                A  2399    				adc hl,de
001871 C8                  A  2400    				ret z							001872 EB                  A  2401    				ex de,hl						001873 FDE5                A  2402    				push iy
001875 CD 86 18 00         A  2403    				call find_dev					001879 FDE1                A  2404    				pop iy							00187B DC 87 18 00         A  2405    				call c,got_dev		
00187F 3A 4B 5F 00         A  2406    nxt_drv			ld a,(current_driver)			001883 3C                  A  2407    				inc a
001884 18 DC               A  2408    				jr mnt_loop
                           A  2409    
                           A  2410    				
001886 E9                  A  2411    find_dev		jp (hl)
                           A  2412    			
                           A  2413    			
001887 E5                  A  2414    got_dev			push hl							001888 D5                  A  2415    				push de							001889 C5                  A  2416    				push bc
00188A CD A9 13 00         A  2417    				call os_new_line_cond			00188E 015B0100            A  2418    				ld bc,015bh
001892 CD 13 1A 00         A  2419    				call os_print_multiple_chars_co
001896 3A 4B 5F 00         A  2420    				ld a,(current_driver)
00189A CD 02 1A 00         A  2421    				call locate_driver_base
00189E 210C0000            A  2422    				ld hl,0ch
0018A2 19                  A  2423    				add hl,de
0018A3 CD 16 0F 00         A  2424    				call os_print_string_cond		0018A7 015D0100            A  2425    				ld bc,015dh
0018AB CD 13 1A 00         A  2426    				call os_print_multiple_chars_co
0018AF C1                  A  2427    				pop bc
0018B0 D1                  A  2428    				pop de
0018B1 AF                  A  2429    				xor a
0018B2 32 80 60 00         A  2430    				ld (vols_on_device_temp),a
                           A  2431    				
0018B6 21 4C 5F 00         A  2432    				ld hl,device_count
0018BA 34                  A  2433    				inc (hl)						0018BB 3A 4B 5F 00         A  2434    				ld a,(current_driver)
0018BF 2A 7C 60 00         A  2435    				ld hl,(dhwn_temp_pointer)	
0018C3 77                  A  2436    				ld (hl),a
0018C4 23                  A  2437    				inc hl
0018C5 73                  A  2438    				ld (hl),e						0018C6 FD7304              A  2439    				ld (iy+4),e						0018C9 23                  A  2440    				inc hl							0018CA 72                  A  2441    				ld (hl),d
0018CB FD7205              A  2442    				ld (iy+5),d
0018CE 23                  A  2443    				inc hl
0018CF 71                  A  2444    				ld (hl),c			
0018D0 FD7106              A  2445    				ld (iy+6),c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018D3 23                  A  2446    				inc hl
0018D4 70                  A  2447    				ld (hl),b						0018D5 23                  A  2448    				inc hl
0018D6 D1                  A  2449    				pop de
0018D7 EB                  A  2450    				ex de,hl
0018D8 01160000            A  2451    				ld bc,22
0018DC EDB0                A  2452    				ldir							0018DE AF                  A  2453    				xor a
0018DF 0605                A  2454    				ld b,5		
0018E1 12                  A  2455    clrrode			ld (de),a						0018E2 13                  A  2456    				inc de
0018E3 10 FC               A  2457    				djnz clrrode
0018E5 ED53 7C 60 00       A  2458    				ld (dhwn_temp_pointer),de		                           A  2459    					
0018EA AF                  A  2460    				xor a							0018EB FDE5                A  2461    fnxtpart		push iy
0018ED CD 41 48 00         A  2462    				call fs_get_partition_info
0018F1 FDE1                A  2463    				pop iy
0018F3 38 31               A  2464    				jr c,nxt_dev					0018F5 FECE                A  2465    				cp 0ceh							0018F7 28 2D               A  2466    				jr z,nxt_dev
0018F9 F5                  A  2467    				push af
0018FA FD360001            A  2468    				ld (iy),1						0018FE 3A 4B 5F 00         A  2469    				ld a,(current_driver)
001902 FD7701              A  2470    				ld (iy+1),a						001905 3A 7F 60 00         A  2471    				ld a,(partition_temp)	
001909 FD7707              A  2472    				ld (iy+7),a						00190C F1                  A  2473    				pop af
00190D B7                  A  2474    				or a
00190E 28 35               A  2475    				jr z,dev_mbr
001910 AF                  A  2476    				xor a
001911 FD7708              A  2477    				ld (iy+8),a						001914 FD7709              A  2478    				ld (iy+9),a						001917 FD770A              A  2479    				ld (iy+10),a					00191A FD770B              A  2480    				ld (iy+11),a
00191D CD 91 19 00         A  2481    				call show_vol_info
001921 CD 82 19 00         A  2482    				call test_max_vol
001925 C8                  A  2483    				ret z							                           A  2484    			
001926 3A 80 60 00         A  2485    nxt_dev			ld a,(vols_on_device_temp)		00192A B7                  A  2486    				or a
00192B C0                  A  2487    				ret nz		
00192C CD E3 19 00         A  2488    				call test_quiet_mode
001930 20 06               A  2489    				jr nz,skp_cu
001932 3E0A                A  2490    				ld a,10
001934 32 26 61 00         A  2491    				ld (cursor_x),a
001938 21 2D 5D 00         A  2492    skp_cu			ld hl,no_vols_msg				00193C CD E0 13 00         A  2493    				call os_show_packed_text_cond
001940 CD A9 13 00         A  2494    				call os_new_line_cond
001944 C9                  A  2495    				ret
                           A  2496    				
                           A  2497    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001945 11040000            A  2498    dev_mbr			ld de,4
001949 19                  A  2499    				add hl,de
00194A 7E                  A  2500    				ld a,(hl)						00194B B7                  A  2501    				or a
00194C C8                  A  2502    				ret z							00194D 19                  A  2503    				add hl,de
                           A  2504    				
00194E FDE5                A  2505    				push iy
001950 0604                A  2506    				ld b,4
001952 7E                  A  2507    sfmbrlp			ld a,(hl)						001953 FD7708              A  2508    				ld (iy+8),a
001956 23                  A  2509    				inc hl
001957 FD23                A  2510    				inc iy
001959 10 F7               A  2511    				djnz sfmbrlp
00195B FDE1                A  2512    				pop iy
00195D FDE5                A  2513    				push iy
00195F 0603                A  2514    				ld b,3	
001961 7E                  A  2515    nsivlp			ld a,(hl)
001962 FD7704              A  2516    				ld (iy+4),a						001965 23                  A  2517    				inc hl
001966 FD23                A  2518    				inc iy
001968 10 F7               A  2519    				djnz nsivlp
00196A FDE1                A  2520    				pop iy
                           A  2521    				
00196C CD 91 19 00         A  2522    				call show_vol_info
001970 CD 82 19 00         A  2523    				call test_max_vol	
001974 C8                  A  2524    				ret z							001975 3A 7F 60 00         A  2525    				ld a,(partition_temp)
001979 3C                  A  2526    				inc a
00197A FE04                A  2527    				cp 4							00197C C2 EB 18 00         A  2528    				jp nz,fnxtpart
001980 18 A4               A  2529    				jr nxt_dev
                           A  2530    				
                           A  2531    
001982                     A  2532    test_max_vol
                           A  2533    			
001982 11100000            A  2534    				ld de,16
001986 FD19                A  2535    				add iy,de			
001988 21 4D 5F 00         A  2536    				ld hl,volume_count
00198C 34                  A  2537    				inc (hl)
00198D 7E                  A  2538    				ld a,(hl)
00198E FE08                A  2539    				cp max_volumes
001990 C9                  A  2540    				ret
                           A  2541    			
                           A  2542    			
001991                     A  2543    show_vol_info
                           A  2544    				
001991 CD E3 19 00         A  2545    				call test_quiet_mode
001995 20 06               A  2546    				jr nz,skp_cm2
001997 3E09                A  2547    				ld a,9			
001999 32 26 61 00         A  2548    				ld (cursor_x),a
00199D 3A 4D 5F 00         A  2549    skp_cm2			ld a,(volume_count)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019A1 F5                  A  2550    				push af
0019A2 C630                A  2551    				add a,30h		
0019A4 32 52 5F 00         A  2552    				ld (vol_txt+4),a	
0019A8 21 4E 5F 00         A  2553    				ld hl,vol_txt
0019AC CD 16 0F 00         A  2554    				call os_print_string_cond		0019B0 21 80 60 00         A  2555    				ld hl,vols_on_device_temp
0019B4 CBC6                A  2556    				set 0,(hl)						                           A  2557    			
0019B6 F1                  A  2558    				pop af
0019B7 FDE5                A  2559    				push iy
0019B9 CD 8C 1A 00         A  2560    				call os_change_volume			0019BD 28 0A               A  2561    				jr z,vform_ok					0019BF 21 DD 5C 00         A  2562    svi_fe			ld hl,format_err_msg		
0019C3 CD E0 13 00         A  2563    svi_pem			call os_show_packed_text_cond	0019C7 18 0D               A  2564    				jr skpsvl
                           A  2565    			
0019C9 CD 5D 50 00         A  2566    vform_ok		call fs_get_volume_label
0019CD 38 0E               A  2567    				jr c,svi_hwe
0019CF B7                  A  2568    				or a
0019D0 20 ED               A  2569    				jr nz,svi_fe
0019D2 CD 16 0F 00         A  2570    				call os_print_string_cond		                           A  2571    			
0019D6 CD A9 13 00         A  2572    skpsvl			call os_new_line_cond
0019DA FDE1                A  2573    				pop iy
0019DC C9                  A  2574    				ret
                           A  2575    				
0019DD 21 31 5B 00         A  2576    svi_hwe			ld hl,disk_err_msg
0019E1 18 E0               A  2577    				jr svi_pem
                           A  2578    			
                           A  2579    			
0019E3                     A  2580    test_quiet_mode
                           A  2581    			
0019E3 3A 82 60 00         A  2582    				ld a,(os_quiet_mode)
0019E7 B7                  A  2583    				or a
0019E8 C9                  A  2584    				ret
                           A  2585    
                           A  2586    ;----------------------------------------------
                           A  2587    
                           A  2588    
0019E9                     A  2589    show_dev_driver_name
                           A  2590    	
                           A  2591    	
0019E9 CD 02 1A 00         A  2592    				call locate_driver_base			0019ED EB                  A  2593    				ex de,hl
0019EE 110C0000            A  2594    				ld de,0ch
0019F2 19                  A  2595    				add hl,de
0019F3 CD 1B 0F 00         A  2596    				call os_print_string			0019F7 C5                  A  2597    				push bc
0019F8 01200100            A  2598    				ld bc,0120h
0019FC CD 18 1A 00         A  2599    				call os_print_multiple_chars	001A00 C1                  A  2600    				pop bc
001A01 C9                  A  2601    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2602    
                           A  2603    
001A02                     A  2604    locate_driver_base
                           A  2605    
001A02 E5                  A  2606    				push hl							001A03 11030000            A  2607    				ld de,3							001A07 57                  A  2608    				ld d,a
001A08 ED5C                A  2609    				mlt de
001A0A 21 5E 5F 00         A  2610    				ld hl,driver_table
001A0E 19                  A  2611    				add hl,de
001A0F ED17                A  2612    				ld de,(hl)
001A11 E1                  A  2613    				pop hl
001A12 C9                  A  2614    				ret
                           A  2615    				
                           A  2616    		
                           A  2617    ;----------------------------------------------
                           A  2618    
001A13                     A  2619    os_print_multiple_chars_cond
                           A  2620    
001A13 CD E3 19 00         A  2621    				call test_quiet_mode
001A17 C0                  A  2622    				ret nz
                           A  2623    			
001A18                     A  2624    os_print_multiple_chars
                           A  2625    
                           A  2626    ;c = char
                           A  2627    ;b = count
001A18 C5                  A  2628    				push bc
001A19 E5                  A  2629    				push hl
001A1A 79                  A  2630    				ld a,c
001A1B 21 B5 56 00         A  2631    				ld hl,rep_char_txt
001A1F 77                  A  2632    				ld (hl),a
001A20 E5                  A  2633    pmch_lp			push hl
001A21 CD 1B 0F 00         A  2634    				call os_print_string
001A25 E1                  A  2635    				pop hl
001A26 10 F8               A  2636    				djnz pmch_lp
001A28 E1                  A  2637    				pop hl
001A29 C1                  A  2638    				pop bc
001A2A C9                  A  2639    				ret
                           A  2640    
                           A  2641    ;----------------------------------------------
                           A  2642    
                           A  2643    
001A2B 7B                  A  2644    ext_plot_char	ld a,e
001A2C C3 48 3E 00         A  2645    				jp hwsc_plot_char
                           A  2646    				
                           A  2647    
                           A  2648    ;----------------------------------------------
                           A  2649    ; Some file system related routines 
                           A  2650    ;----------------------------------------------
                           A  2651    
                           A  2652    
001A30                     A  2653    fs_get_dir_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2654    
                           A  2655    
001A30 F5                  A  2656    				push af							001A31 E5                  A  2657    				push hl			
001A32 CD 48 1A 00         A  2658    				call fs_get_dir_cluster_address
001A36 ED17                A  2659    				ld de,(hl)
001A38 E1                  A  2660    dclopdone		pop hl
001A39 F1                  A  2661    				pop af
001A3A BF                  A  2662    				cp a							001A3B C9                  A  2663    				ret
                           A  2664    				
                           A  2665    
                           A  2666    
                           A  2667    
                           A  2668    
001A3C                     A  2669    fs_update_dir_cluster
                           A  2670    
001A3C F5                  A  2671    				push af							001A3D E5                  A  2672    				push hl			
001A3E D5                  A  2673    				push de			
001A3F CD 48 1A 00         A  2674    				call fs_get_dir_cluster_address
001A43 D1                  A  2675    				pop de
001A44 ED1F                A  2676    				ld (hl),de
001A46 18 F0               A  2677    				jr dclopdone
                           A  2678    			
                           A  2679    
                           A  2680    
                           A  2681    
                           A  2682    
001A48                     A  2683    fs_get_dir_cluster_address
                           A  2684    
001A48 21 64 5F 00         A  2685    				ld hl,volume_dir_clusters		001A4C 3A 4A 5F 00         A  2686    				ld a,(current_volume)	
001A50 11030000            A  2687    				ld de,3
001A54 57                  A  2688    				ld d,a
001A55 ED5C                A  2689    				mlt de
001A57 19                  A  2690    				add hl,de
001A58 C9                  A  2691    				ret
                           A  2692    				
                           A  2693    	
                           A  2694    
                           A  2695    	
                           A  2696    	
001A59                     A  2697    fs_get_total_sectors
                           A  2698    
                           A  2699    
001A59 F5                  A  2700    				push af
001A5A E5                  A  2701    				push hl							001A5B CD 6A 1A 00         A  2702    				call fs_calc_volume_offset	
001A5F 21 80 5F 00         A  2703    				ld hl,volume_mount_list+4
001A63 19                  A  2704    				add hl,de
001A64 ED17                A  2705    				ld de,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A66 E1                  A  2706    				pop hl
001A67 F1                  A  2707    				pop af
001A68 BF                  A  2708    				cp a							001A69 C9                  A  2709    				ret
                           A  2710    
                           A  2711    
                           A  2712    
                           A  2713    
                           A  2714    
001A6A                     A  2715    fs_calc_volume_offset
                           A  2716    
001A6A 3A 4A 5F 00         A  2717    				ld a,(current_volume)			001A6E 11100000            A  2718    calc_vol		ld de,16
001A72 57                  A  2719    				ld d,a
001A73 ED5C                A  2720    				mlt de
001A75 C9                  A  2721    				ret
                           A  2722    
                           A  2723    
                           A  2724    
                           A  2725    
                           A  2726    
001A76                     A  2727    dev_to_driver_lookup
                           A  2728    
001A76 21 4C 5F 00         A  2729    				ld hl,device_count				001A7A BE                  A  2730    				cp (hl)							001A7B D0                  A  2731    				ret nc
001A7C 11200000            A  2732    				ld de,32						001A80 57                  A  2733    				ld d,a
001A81 ED5C                A  2734    				mlt de
001A83 21 FC 5F 00         A  2735    				ld hl,host_device_hardware_info
001A87 19                  A  2736    				add hl,de
001A88 7E                  A  2737    				ld a,(hl)
001A89 37                  A  2738    				scf
001A8A C9                  A  2739    				ret
                           A  2740    				
                           A  2741    
                           A  2742    
001A8B                     A  2743    ext_change_volume
                           A  2744    
001A8B 7B                  A  2745    				ld a,e
                           A  2746    
001A8C                     A  2747    os_change_volume
                           A  2748    
001A8C 47                  A  2749    				ld b,a							001A8D FE08                A  2750    				cp max_volumes		
001A8F 30 23               A  2751    				jr nc,fs_ccv2					                           A  2752    			
001A91 3A 4A 5F 00         A  2753    				ld a,(current_volume)			001A95 F5                  A  2754    				push af
001A96 78                  A  2755    				ld a,b
001A97 32 4A 5F 00         A  2756    				ld (current_volume),a			001A9B CD B8 1A 00         A  2757    				call fs_set_driver_for_volume	Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2758    				
001A9F CD A3 48 00         A  2759    				call fs_check_disk_format		001AA3 38 06               A  2760    				jr c,fs_cant_chg_vols	
001AA5 B7                  A  2761    				or a
001AA6 20 03               A  2762    				jr nz,fs_cant_chg_vols
001AA8 F1                  A  2763    				pop af							001AA9 AF                  A  2764    				xor a							001AAA C9                  A  2765    				ret
                           A  2766    
                           A  2767    
001AAB                     A  2768    fs_cant_chg_vols
                           A  2769    			
001AAB F1                  A  2770    				pop af
001AAC 32 4A 5F 00         A  2771    				ld (current_volume),a			001AB0 CD B8 1A 00         A  2772    				call fs_set_driver_for_volume	                           A  2773    				
001AB4 3ECF                A  2774    fs_ccv2			ld a,0cfh						001AB6 B7                  A  2775    				or a
001AB7 C9                  A  2776    				ret
                           A  2777    					
                           A  2778    	
001AB8                     A  2779    fs_set_driver_for_volume
                           A  2780    
001AB8 CD 6A 1A 00         A  2781    				call fs_calc_volume_offset		001ABC 21 7D 5F 00         A  2782    				ld hl,volume_mount_list+1
001AC0 19                  A  2783    				add hl,de
001AC1 7E                  A  2784    				ld a,(hl)
001AC2 32 4B 5F 00         A  2785    				ld (current_driver),a
001AC6 C9                  A  2786    				ret
                           A  2787    
                           A  2788    
                           A  2789    ;----------------------------------------------
                           A  2790    
001AC7                     A  2791    ext_file_sector_list
                           A  2792    
                           A  2793    ;Input HL = cluster, E = sector offset
                           A  2794    
                           A  2795    ;Output HL = new cluster, E = new sector number
                           A  2796    ;       IX = address of LBA0 LSB of sector (int
                           A  2797    
                           A  2798    				
001AC7 3A B4 54 00         A  2799    				ld a,(fs_cluster_size)
001ACB BB                  A  2800    				cp e
001ACC 20 0A               A  2801    				jr nz,fsl_sc
001ACE CD E9 52 00         A  2802    				call get_fat_entry_for_cluster
001AD2 DA FF 15 00         A  2803    				jp c,os_fferr
001AD6 1E00                A  2804    				ld e,0
001AD8 CD C0 53 00         A  2805    fsl_sc			call cluster_and_offset_to_lba
001ADC 1C                  A  2806    				inc e
001ADD DD21 21 61 00       A  2807    fsl_done		ld ix,sector_lba0
001AE2 BF                  A  2808    				cp a							001AE3 C9                  A  2809    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2810    				
                           A  2811    ;----------------------------------------------
                           A  2812    
                           A  2813    
001AE4 E5                  A  2814    os_count_chars	push hl							001AE5 01000000            A  2815    				ld bc,0
001AE9 7E                  A  2816    cch_lp			ld a,(hl)
001AEA B7                  A  2817    				or a
001AEB 28 04               A  2818    				jr z,cch_end
001AED 23                  A  2819    				inc hl
001AEE 03                  A  2820    				inc bc
001AEF 18 F8               A  2821    				jr cch_lp
001AF1 E1                  A  2822    cch_end			pop hl
001AF2 C9                  A  2823    				ret
                           A  2824    				
                           A  2825    			
                           A  2826    ;----------------------------------------------
                           A  2827    ; Environment variable code V0.01
                           A  2828    ;----------------------------------------------
                           A  2829    
       00000100            A  2830    envar_buffer_size equ 256
                           A  2831    
                           A  2832    ;----------------------------------------------
                           A  2833    
001AF3                     A  2834    ext_get_envar
001AF3 CC 68 15 00         A  2835    				call z,mbase_hl
                           A  2836    
001AF7                     A  2837    os_get_envar
                           A  2838    
                           A  2839    ;Set: 		HL = name of required variable
                           A  2840    ;Returns:	ZF Set: DE = address of variable's 
                           A  2841    ;        	ZF Not Set: Couldn't find variable
                           A  2842    				
001AF7 DD21 86 62 00       A  2843    				ld ix,envar_list-1
001AFC CD E4 1A 00         A  2844    env_fname		call os_count_chars				001B00 78                  A  2845    				ld a,b
001B01 B1                  A  2846    				or c
001B02 28 27               A  2847    				jr z,env_bad
                           A  2848    								
001B04 ED1201              A  2849    env_cname		lea de,ix+1
001B07 1A                  A  2850    				ld a,(de)
001B08 FEFF                A  2851    				cp 0ffh
001B0A 28 1F               A  2852    				jr z,env_bad
001B0C C5                  A  2853    				push bc
001B0D 41                  A  2854    				ld b,c
001B0E CD D5 11 00         A  2855    				call os_compare_strings
001B12 C1                  A  2856    				pop bc
001B13 20 06               A  2857    				jr nz,env_nomatch
001B15 03                  A  2858    				inc bc							001B16 EB                  A  2859    				ex de,hl
001B17 09                  A  2860    				add hl,bc
001B18 EB                  A  2861    				ex de,hl						Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B19 AF                  A  2862    				xor a
001B1A C9                  A  2863    				ret			
                           A  2864    				
001B1B DD23                A  2865    env_nomatch		inc ix							001B1D CD C3 1B 00         A  2866    				call check_envar_bounds
001B21 20 08               A  2867    				jr nz,env_bad
001B23 DD7E00              A  2868    				ld a,(ix)
001B26 B7                  A  2869    				or a
001B27 28 DB               A  2870    				jr z,env_cname
001B29 18 F0               A  2871    				jr env_nomatch
                           A  2872    
001B2B 3E82                A  2873    env_bad			ld a,82h						001B2D B7                  A  2874    				or a
001B2E C9                  A  2875    				ret	
                           A  2876    				
                           A  2877    ;----------------------------------------------
                           A  2878    
001B2F                     A  2879    ext_set_envar
                           A  2880    
                           A  2881    ;HL = addr of variable name (zero terminated)
                           A  2882    ;DE = addr of data for variable (zero terminate
                           A  2883    
                           A  2884    ;Returns:
                           A  2885    ;ZF = Set: OK
                           A  2886    ;ZF = Not Set: No enough space for new variable
                           A  2887    		
001B2F CC 68 15 00         A  2888    				call z,mbase_hl
001B33 CC 79 15 00         A  2889    				call z,mbase_de
                           A  2890    
001B37 7E                  A  2891    os_set_envar	ld a,(hl)						001B38 B7                  A  2892    				or a
001B39 28 F0               A  2893    				jr z,env_bad
001B3B 1A                  A  2894    				ld a,(de)
001B3C B7                  A  2895    				or a
001B3D 28 EC               A  2896    				jr z,env_bad
                           A  2897    
001B3F E5                  A  2898    				push hl
001B40 D5                  A  2899    				push de
001B41 CD 8D 1B 00         A  2900    				call os_delete_envar			001B45 D1                  A  2901    				pop de
001B46 E1                  A  2902    				pop hl
                           A  2903    				
001B47 DD2A 91 63 00       A  2904    				ld ix,(envar_top_loc)			001B4C CD C3 1B 00         A  2905    env_enlp		call check_envar_bounds
001B50 20 D9               A  2906    				jr nz,env_bad
001B52 7E                  A  2907    				ld a,(hl)						001B53 DD7700              A  2908    				ld (ix),a
001B56 B7                  A  2909    				or a
001B57 28 05               A  2910    				jr z,env_ndone
001B59 23                  A  2911    				inc hl
001B5A DD23                A  2912    				inc ix
001B5C 18 EE               A  2913    				jr env_enlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2914    				
001B5E CD C3 1B 00         A  2915    env_ndone		call check_envar_bounds			001B62 20 C7               A  2916    				jr nz,env_bad
001B64 DD36003D            A  2917    				ld (ix),'='
001B68 DD23                A  2918    				inc ix
                           A  2919    
001B6A CD C3 1B 00         A  2920    env_evlp		call check_envar_bounds			001B6E 20 BB               A  2921    				jr nz,env_bad
001B70 1A                  A  2922    				ld a,(de)
001B71 DD7700              A  2923    				ld (ix),a
001B74 B7                  A  2924    				or a
001B75 28 05               A  2925    				jr z,env_vdone
001B77 13                  A  2926    				inc de
001B78 DD23                A  2927    				inc ix
001B7A 18 EE               A  2928    				jr env_evlp
                           A  2929    
001B7C DD23                A  2930    env_vdone		inc ix
001B7E DD3600FF            A  2931    				ld (ix),0ffh
001B82 DD22 91 63 00       A  2932    				ld (envar_top_loc),ix			001B87 AF                  A  2933    				xor a
001B88 C9                  A  2934    				ret
                           A  2935    
                           A  2936    	
                           A  2937    ;----------------------------------------------
                           A  2938    
001B89                     A  2939    ext_delete_envar
                           A  2940    
001B89 CC 68 15 00         A  2941    				call z,mbase_hl
                           A  2942    
001B8D                     A  2943    os_delete_envar
                           A  2944    
                           A  2945    ;HL = name of required variable (null terminate
                           A  2946    ;ZF = Set: OK
                           A  2947    ;ZF = Not Set: Didnt find named variable
                           A  2948    
                           A  2949    
001B8D CD F7 1A 00         A  2950    				call os_get_envar				001B91 C0                  A  2951    				ret nz
                           A  2952    				
001B92 D5                  A  2953    				push de
001B93 E1                  A  2954    				pop hl
001B94 AF                  A  2955    				xor a
001B95 ED42                A  2956    				sbc hl,bc						                           A  2957    				
001B97 13                  A  2958    env_fnxt		inc de							001B98 D5                  A  2959    				push de
001B99 DDE1                A  2960    				pop ix
001B9B CD C3 1B 00         A  2961    				call check_envar_bounds
001B9F 20 8A               A  2962    				jr nz,env_bad
001BA1 1A                  A  2963    				ld a,(de)
001BA2 B7                  A  2964    				or a
001BA3 20 F2               A  2965    				jr nz,env_fnxt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2966    
001BA5 13                  A  2967    env_gnxt		inc de							001BA6 EB                  A  2968    				ex de,hl
001BA7 7E                  A  2969    env_collp		ld a,(hl)
001BA8 12                  A  2970    				ld (de),a						001BA9 FEFF                A  2971    				cp 0ffh
001BAB 28 0F               A  2972    				jr z,env_clspd					001BAD E5                  A  2973    				push hl
001BAE DDE1                A  2974    				pop ix
001BB0 CD C3 1B 00         A  2975    				call check_envar_bounds
001BB4 C2 2B 1B 00         A  2976    				jr nz,env_bad
001BB8 23                  A  2977    				inc hl
001BB9 13                  A  2978    				inc de
001BBA 18 EB               A  2979    				jr env_collp
                           A  2980    
001BBC ED53 91 63 00       A  2981    env_clspd		ld (envar_top_loc),de			001BC1 AF                  A  2982    				xor a
001BC2 C9                  A  2983    				ret
                           A  2984    				
                           A  2985    ;----------------------------------------------
                           A  2986    
001BC3                     A  2987    check_envar_bounds
                           A  2988    
001BC3 C5                  A  2989    				push bc
001BC4 E5                  A  2990    				push hl
001BC5 DDE5                A  2991    				push ix
001BC7 E1                  A  2992    				pop hl
001BC8 01 88 63 00         A  2993    				ld bc,1+(envar_list+envar_buffe
001BCC AF                  A  2994    				xor a
001BCD ED42                A  2995    				sbc hl,bc
001BCF 38 05               A  2996    				jr c,env_bok
001BD1 AF                  A  2997    				xor a
001BD2 3C                  A  2998    				inc a
001BD3 E1                  A  2999    				pop hl
001BD4 C1                  A  3000    				pop bc
001BD5 C9                  A  3001    				ret
                           A  3002    
001BD6 AF                  A  3003    env_bok			xor a
001BD7 E1                  A  3004    				pop hl
001BD8 C1                  A  3005    				pop bc
001BD9 C9                  A  3006    				ret
                           A  3007    						
                           A  3008    ;----------------------------------------------
                           A  3009    
001BDA                     A  3010    os_get_keymap_location
                           A  3011    
001BDA 21 7D 5D 00         A  3012    				ld hl,unshifted_keymap
001BDE BF                  A  3013    				cp a							001BDF C9                  A  3014    				ret
                           A  3015    
                           A  3016    ;----------------------------------------------
                           A  3017    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BE0                     A  3018    os_get_font_info
                           A  3019    
001BE0 DD21 DC 5E 00       A  3020    				ld ix,font_parameters
001BE5 BF                  A  3021    				cp a
001BE6 C9                  A  3022    				ret
                           A  3023    
                           A  3024    ;==============================================
                           A  3025    ; Internal OS command routines
                           A  3026    ;==============================================
                           A  3027    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001BE7                     B     5    os_cmd_c
                           B     6    
001BE7 CD 1D 1C 00         B     7    				call get_start_and_end			                           B     8    				
001BEB CD 46 1C 00         B     9    				call hexword_or_bust			001BEF CA E3 15 00         B    10    				jp z,os_no_d_addr_error
001BF3 ED53 34 61 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001BF8 CD 0B 1C 00         B    13    				call test_mem_range				001BFC DA E7 15 00         B    14    				jp c,os_range_error				001C00 ED5B 34 61 00       B    15    				ld de,(copy_dest_address)
001C05 EDB0                B    16    				ldir
                           B    17    
001C07 3E20                B    18    copy_done		ld a,020h						001C09 B7                  B    19    				or a
001C0A C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C0B                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C0B 2A 31 61 00         B    33    				ld hl,(cmdop_end_address)	
001C0F ED4B 2E 61 00       B    34    				ld bc,(cmdop_start_address)
001C14 C5                  B    35    				push bc
001C15 AF                  B    36    				xor a
001C16 ED42                B    37    				sbc hl,bc
001C18 E5                  B    38    				push hl
001C19 C1                  B    39    				pop bc
001C1A 03                  B    40    				inc bc
001C1B E1                  B    41    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C1C C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C1D                     B    46    get_start_and_end
                           B    47    			
001C1D CD 92 10 00         B    48    				call ascii_to_hexword			001C21 ED53 2E 61 00       B    49    				ld (cmdop_start_address),de
001C26 23                  B    50    				inc hl
001C27 28 09               B    51    				jr z,st_addrok
001C29 E1                  B    52    				pop hl							001C2A FE82                B    53    				cp 82h							001C2C 28 02               B    54    				jr z,c_badhex
001C2E 3E16                B    55    				ld a,016h						001C30 B7                  B    56    c_badhex		or a
001C31 C9                  B    57    				ret
                           B    58    				
001C32 CD 92 10 00         B    59    st_addrok		call ascii_to_hexword			001C36 ED53 31 61 00       B    60    				ld (cmdop_end_address),de
001C3B 23                  B    61    				inc hl
001C3C B7                  B    62    				or a
001C3D C8                  B    63    				ret z
001C3E E1                  B    64    				pop hl							001C3F FE82                B    65    				cp 82h							001C41 28 ED               B    66    				jr z,c_badhex
001C43 3E1C                B    67    				ld a,01ch						001C45 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C46                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C46 CD 92 10 00         B    79    				call ascii_to_hexword		
001C4A FE82                B    80    				cp 82h
001C4C 20 03               B    81    				jr nz,hex_good
001C4E E1                  B    82    				pop hl						; r
001C4F B7                  B    83    				or a	
001C50 C9                  B    84    				ret			 
001C51 FE81                B    85    hex_good		cp 081h						; n
001C53 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B     4    
001C54                     B     5    os_cmd_cd	
                           B     6    
001C54 CD 60 16 00         B     7    				call os_check_volume_format	
001C58 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C59 7E                  B    11    				ld a,(hl)						001C5A B7                  B    12    				or a				
001C5B CA 02 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C5F 7E                  B    16    				ld a,(hl)						001C60 23                  B    17    				inc hl
001C61 46                  B    18    				ld b,(hl)
001C62 2B                  B    19    				dec hl
001C63 FE2E                B    20    				cp '.'			
001C65 20 08               B    21    				jr nz,cd_nual
001C67 B8                  B    22    				cp b
001C68 20 05               B    23    				jr nz,cd_nual
001C6A CD B8 16 00         B    24    				call os_parent_dir	
001C6E C9                  B    25    				ret
                           B    26    			
                           B    27    			
001C6F FE2F                B    28    cd_nual			cp 02fh			
001C71 20 05               B    29    				jr nz,cd_nogor					001C73 CD BE 16 00         B    30    				call os_root_dir	
001C77 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001C78 FE25                B    34    cd_nogor		cp '%'							001C7A 20 1F               B    35    				jr nz,cd_no_assign
001C7C CD F7 1A 00         B    36    				call os_get_envar
001C80 28 04               B    37    				jr z,cd_evok
001C82 3ED1                B    38    				ld a,0d1h						001C84 B7                  B    39    				or a
001C85 C9                  B    40    				ret
001C86 11000000            B    41    cd_evok			ld de,0
001C8A 5E                  B    42    				ld e,(hl)
001C8B 23                  B    43    				inc hl
001C8C 56                  B    44    				ld d,(hl)
001C8D 23                  B    45    				inc hl
001C8E 7E                  B    46    				ld a,(hl)
001C8F D5                  B    47    				push de
001C90 CD 8C 1A 00         B    48    				call os_change_volume
001C94 D1                  B    49    				pop de
001C95 C0                  B    50    				ret nz
001C96 CD 3C 1A 00         B    51    				call fs_update_dir_cluster
001C9A C9                  B    52    				ret
                           B    53    				
                           B    54    				
001C9B                     B    55    cd_no_assign
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B    56    			
001C9B 3A 4A 5F 00         B    57    				ld a,(current_volume)
001C9F 32 76 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CA3 E5                  B    60    				push hl
001CA4 DDE1                B    61    				pop ix
001CA6 DD7E04              B    62    				ld a,(ix+4)
001CA9 FE3A                B    63    				cp ':'							001CAB 20 25               B    64    				jr nz,cd_nchvol
001CAD 11 4F 5F 00         B    65    				ld de,vol_txt+1
001CB1 0603                B    66    				ld b,3
001CB3 CD D5 11 00         B    67    				call os_compare_strings
001CB7 20 19               B    68    				jr nz,cd_nchvol
001CB9 11050000            B    69    				ld de,5
001CBD 19                  B    70    				add hl,de
001CBE 22 E7 61 00         B    71    				ld (os_args_loc),hl				001CC2 DD7E03              B    72    				ld a,(ix+3)						001CC5 D630                B    73    				sub 030h
001CC7 CD 8C 1A 00         B    74    				call os_change_volume
001CCB C0                  B    75    				ret nz							001CCC CD BE 16 00         B    76    				call os_root_dir				001CD0 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001CD2 CD 30 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001CD6 ED53 73 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001CDB E5                  B    83    cd_mollp		push hl
001CDC CD AE 16 00         B    84    				call os_change_dir				001CE0 E1                  B    85    				pop hl
001CE1 20 0A               B    86    				jr nz,cd_dcherr
001CE3 7E                  B    87    cd_mol			ld a,(hl)						001CE4 23                  B    88    				inc hl
001CE5 B7                  B    89    				or a
001CE6 C8                  B    90    				ret z
001CE7 FE2F                B    91    				cp 02fh
001CE9 28 F0               B    92    				jr z,cd_mollp
001CEB 18 F6               B    93    				jr cd_mol
                           B    94    					
001CED                     B    95    cd_dcherr	
                           B    96    			
001CED F5                  B    97    				push af							001CEE ED5B 73 68 00       B    98    				ld de,(original_dir_cd_cmd)
001CF3 CD 3C 1A 00         B    99    				call fs_update_dir_cluster
001CF7 3A 76 68 00         B   100    				ld a,(original_vol_cd_cmd)
001CFB CD 8C 1A 00         B   101    				call os_change_volume	
001CFF F1                  B   102    				pop af
001D00 B7                  B   103    				or a
001D01 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D02                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D02 0610                B   113    				ld b,max_dirs
001D04 0E00                B   114    				ld c,0
001D06 C5                  B   115    lp1				push bc
001D07 CD 30 1A 00         B   116    				call fs_get_dir_cluster
001D0B C1                  B   117    				pop bc
001D0C D5                  B   118    				push de
001D0D 0C                  B   119    				inc c
001D0E C5                  B   120    				push bc
001D0F CD B8 16 00         B   121    				call os_parent_dir
001D13 C1                  B   122    				pop bc
001D14 20 02               B   123    				jr nz,shdir_lp
001D16 10 EE               B   124    				djnz lp1
                           B   125    				
001D18 D1                  B   126    shdir_lp		pop de
001D19 C5                  B   127    				push bc
001D1A CD 3C 1A 00         B   128    				call fs_update_dir_cluster
001D1E CD E4 16 00         B   129    				call os_get_current_dir_name
001D22 CD 1B 0F 00         B   130    				call os_print_string
001D26 21 38 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D2A CD 1B 0F 00         B   132    				call os_print_string
001D2E C1                  B   133    				pop bc
001D2F 0D                  B   134    				dec c
001D30 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D32 CD AE 13 00         B   137    				call os_new_line	
001D36 AF                  B   138    				xor a
001D37 C9                  B   139    				ret
                           B   140    			
001D38 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006873            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006876            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D3A                     B     5    os_cmd_cls
                           B     6    
001D3A CD 5B 3D 00         B     7    				call hwsc_clear_screen
001D3E AF                  B     8    				xor a
001D3F C9                  B     9    				ret
                           B    10    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cls.asm
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D40                     B     5    os_cmd_colon
                           B     6    	
001D40 CD 46 1C 00         B     7    				call hexword_or_bust			001D44 CA D3 15 00         B     8    				jp z,os_no_start_addr			001D48 D5                  B     9    				push de
001D49 DDE1                B    10    				pop ix							                           B    11    			
001D4B CD 46 1C 00         B    12    wmblp			call hexword_or_bust			001D4F 28 07               B    13    				jr z,os_ccmdn
001D51 DD7300              B    14    				ld (ix),e						001D54 DD23                B    15    				inc ix
001D56 18 F3               B    16    				jr wmblp
                           B    17    
001D58 AF                  B    18    os_ccmdn		xor a
001D59 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001D5A FD21 41 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D5F FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001D63 CD 46 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001D67 28 05               B    10    				jr z,d_no_hex					001D69 ED53 B8 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001D6E 3A D0 5E 00         B    13    d_no_hex		ld a,(window_rows)				001D72 D602                B    14    				sub a,2
001D74 47                  B    15    				ld b,a
001D75 C5                  B    16    dis_loop		push bc
                           B    17    				
001D76 DD2A B8 28 00       B    18    				ld ix,(dis_addr)				001D7B CD 23 23 00         B    19    				call show_ix					001D7F 3E20                B    20    				ld a,' '
001D81 CD 17 23 00         B    21    				call show_ascii_char
                           B    22    
001D85 FD21 41 23 00       B    23    				ld iy,prefix_bits_loc
001D8A FD360000            B    24    				ld (iy),0						001D8E CD CA 1D 00         B    25    				call dis_instr					001D92 DD23                B    26    				inc ix							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B    27    				
001D94 3E1A                B    28    				ld a,26							001D96 32 26 61 00         B    29    				ld (cursor_pos+1),a				001D9A ED4B B8 28 00       B    30    				ld bc,(dis_addr)
001D9F DD22 B8 28 00       B    31    				ld (dis_addr),ix				001DA4 DDE5                B    32    				push ix
001DA6 E1                  B    33    				pop hl
001DA7 AF                  B    34    				xor a
001DA8 ED42                B    35    				sbc hl,bc						001DAA 7D                  B    36    				ld a,l
001DAB E607                B    37    				and 7
001DAD 6F                  B    38    				ld l,a
001DAE 0A                  B    39    shexoplp		ld a,(bc)						001DAF CD 06 23 00         B    40    				call show_hex_byte
001DB3 3E20                B    41    				ld a,' '
001DB5 CD 17 23 00         B    42    				call show_ascii_char
001DB9 03                  B    43    				inc bc
001DBA 2D                  B    44    				dec l
001DBB 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DBD CD AE 13 00         B    47    				call os_new_line
001DC1 C1                  B    48    				pop bc
001DC2 10 B1               B    49    				djnz dis_loop
                           B    50    
001DC4 CD AE 13 00         B    51    				call os_new_line
001DC8 AF                  B    52    				xor a
001DC9 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001DCA DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001DCD FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001DD1 28 04               B    73    			jr z,z80_list					; T
001DD3 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001DD7                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DD7 FE40                B    79    			cp 40h
001DD9 20 0A               B    80    			jr nz,not_sis
001DDB FDCB00B6            B    81    			res il_prefix,(iy)
001DDF FDCB00AE            B    82    			res dot_l_prefix,(iy)
001DE3 18 28               B    83    			jr set_adl_pf
                           B    84    			
001DE5 FE49                B    85    not_sis		cp 49h
001DE7 20 0A               B    86    			jr nz,not_lis
001DE9 FDCB00B6            B    87    			res il_prefix,(iy)
001DED FDCB00EE            B    88    			set dot_l_prefix,(iy)
001DF1 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001DF3 FE52                B    91    not_lis		cp 52h
001DF5 20 0A               B    92    			jr nz,not_sil
001DF7 FDCB00F6            B    93    			set il_prefix,(iy)
001DFB FDCB00AE            B    94    			res dot_l_prefix,(iy)
001DFF 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E01 FE5B                B    97    not_sil		cp 5bh
001E03 20 11               B    98    			jr nz,not_adl_prefix_byte
001E05 FDCB00F6            B    99    			set il_prefix,(iy)
001E09 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E0D FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E11 DD23                B   103    			inc ix
001E13 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E16                     B   108    not_adl_prefix_byte			
                           B   109    			
001E16 FECB                B   110    			cp 0cbh								001E18 20 08               B   111    			jr nz,not_cb
001E1A FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E1E DD23                B   113    			inc ix
001E20 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E22 FEED                B   116    not_cb		cp 0edh
001E24 20 08               B   117    			jr nz,not_ed
001E26 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E2A DD23                B   119    			inc ix
001E2C 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E2E FEDD                B   122    not_ed		cp 0ddh
001E30 20 18               B   123    			jr nz,not_dd
001E32 CD 65 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E36 28 92               B   125    			jr z,dis_instr						001E38 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E3C FECB                B   127    xdcb_query	cp 0cbh								001E3E 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E40 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E44 DD23                B   130    			inc ix								Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E46 DD23                B   131    			inc ix								001E48 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E4A FEFD                B   134    not_dd		cp 0fdh
001E4C 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E4E CD 65 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E52 CA CA 1D 00         B   137    			jr z,dis_instr	
001E56 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E5A 18 E0               B   139    			jr xdcb_query
                           B   140    
001E5C                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E5C DD7E00              B   145    			ld a,(ix)	
001E5F E6C0                B   146    			and 11000000b			; seperate 
001E61 07                  B   147    			rlca
001E62 07                  B   148    			rlca
001E63 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001E66 DD7E00              B   151    			ld a,(ix)
001E69 E638                B   152    			and 00111000b
001E6B CB3F                B   153    			srl a
001E6D CB3F                B   154    			srl a
001E6F CB3F                B   155    			srl a	
001E71 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001E74 DD7E00              B   158    			ld a,(ix)
001E77 E607                B   159    			and 00000111b
001E79 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001E7C DD7E00              B   162    			ld a,(ix)
001E7F E630                B   163    			and 00110000b
001E81 CB3F                B   164    			srl a
001E83 CB3F                B   165    			srl a
001E85 CB3F                B   166    			srl a
001E87 CB3F                B   167    			srl a
001E89 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001E8C DD7E00              B   170    			ld a,(ix)
001E8F E608                B   171    			and 00001000b
001E91 CB3F                B   172    			srl a
001E93 CB3F                B   173    			srl a
001E95 CB3F                B   174    			srl a
001E97 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001E9A CD 73 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001E9E 78                  B   181    index_table	ld a,b							; a
001E9F B7                  B   182    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EA0 28 07               B   183    			jr z,parse_instr				; m
001EA2 CB7E                B   184    d_filp		bit 7,(hl)						; w
001EA4 23                  B   185    			inc hl							; o
001EA5 28 FB               B   186    			jr z,d_filp					
001EA7 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001EA9 FD21 41 23 00       B   190    parse_instr	ld iy,opcode_vars
001EAE 01000000            B   191    			ld bc,0
001EB2 7E                  B   192    			ld a,(hl)						;ge
001EB3 FE80                B   193    			cp 80h
001EB5 C8                  B   194    			ret z
001EB6 E67F                B   195    			and 7fh
                           B   196    			
001EB8 FE26                B   197    			cp '&'							;sy
001EBA 20 28               B   198    			jr nz,not_adlsym
001EBC FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001EC0 CA 4E 20 00         B   200    			jr z,next_opcode_ascii_char
001EC4 0600                B   201    			ld b,0
001EC6 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001ECA 28 02               B   203    			jr z,naplsb
001ECC CBC0                B   204    			set 0,b
001ECE FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001ED2 28 02               B   206    			jr z,napmsb
001ED4 CBC8                B   207    			set 1,b
001ED6 E5                  B   208    napmsb		push hl
001ED7 21 A0 28 00         B   209    			ld hl,adl_prefix_list
001EDB CD 9E 1E 00         B   210    			call index_table				; r
001EDF E1                  B   211    			pop hl
001EE0 C3 4E 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001EE4 FE5E                B   214    not_adlsym	cp '^'							;sy
001EE6 20 0D               B   215    			jr nz,d_not_imm8
001EE8 DD23                B   216    			inc ix							;th
001EEA DD7E00              B   217    			ld a,(ix)
001EED CD 06 23 00         B   218    			call show_hex_byte
001EF1 C3 4E 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001EF5 FE21                B   221    d_not_imm8	cp '!'							;sy
001EF7 20 26               B   222    			jr nz,d_not_imm16					001EF9 11020000            B   223    			ld de,2
001EFD FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F01 28 08               B   225    			jr z,imm16
001F03 13                  B   226    			inc de
001F04 DD7E03              B   227    			ld a,(ix+3)
001F07 CD 06 23 00         B   228    			call show_hex_byte
001F0B DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F0E CD 06 23 00         B   230    			call show_hex_byte			
001F12 DD7E01              B   231    			ld a,(ix+1)						;th
001F15 CD 06 23 00         B   232    			call show_hex_byte
001F19 DD19                B   233    			add ix,de						;ad
001F1B C3 4E 20 00         B   234    			jp next_opcode_ascii_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   235    
001F1F FE2F                B   236    d_not_imm16	cp '/'							;sy
001F21 20 36               B   237    			jr nz,d_not_sb
001F23 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F27 28 05               B   239    			jr z,norm_dbyte
001F29 DD7EFF              B   240    			ld a,(ix-1)						;if
001F2C 18 05               B   241    			jr xdcb_dbyte
001F2E DD23                B   242    norm_dbyte	inc ix
001F30 DD7E00              B   243    			ld a,(ix)						;th
001F33 CB7F                B   244    xdcb_dbyte	bit 7,a
001F35 20 10               B   245    			jr nz,d_sbin					;sh
001F37 F5                  B   246    			push af
001F38 3E2B                B   247    			ld a,'+'
001F3A CD 17 23 00         B   248    			call show_ascii_char
001F3E F1                  B   249    			pop af
001F3F CD 06 23 00         B   250    			call show_hex_byte
001F43 C3 4E 20 00         B   251    			jp next_opcode_ascii_char
001F47 F5                  B   252    d_sbin		push af
001F48 3E2D                B   253    			ld a,'-'
001F4A CD 17 23 00         B   254    			call show_ascii_char
001F4E F1                  B   255    			pop af
001F4F ED44                B   256    			neg
001F51 CD 06 23 00         B   257    			call show_hex_byte
001F55 C3 4E 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F59 FE64                B   260    d_not_sb	cp 'd'							;sy
001F5B 20 1E               B   261    			jr nz,d_not_pcdip
001F5D DD23                B   262    			inc ix
001F5F 01000000            B   263    			ld bc,0
001F63 DD7E00              B   264    			ld a,(ix)
001F66 CB7F                B   265    			bit 7,a
001F68 28 01               B   266    			jr z,d_spcd_pos
001F6A 0B                  B   267    			dec bc
001F6B 4F                  B   268    d_spcd_pos	ld c,a
001F6C 03                  B   269    			inc bc
001F6D DDE5                B   270    			push ix
001F6F DD09                B   271    			add ix,bc
001F71 CD 23 23 00         B   272    			call show_ix
001F75 DDE1                B   273    			pop ix
001F77 C3 4E 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001F7B FE3E                B   276    d_not_pcdip	cp '>'							;sy
001F7D 20 16               B   277    			jr nz,d_not_sdig
001F7F 23                  B   278    			inc hl							;th
001F80 01000000            B   279    			ld bc,0
001F84 4E                  B   280    			ld c,(hl)
001F85 FD21 41 23 00       B   281    			ld iy,opcode_vars
001F8A FD09                B   282    			add iy,bc
001F8C FD7E00              B   283    			ld a,(iy)						;a 
001F8F C630                B   284    			add a,30h						;co
001F91 C3 4A 20 00         B   285    			jp d_output_char
                           B   286    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F95 FE5F                B   287    d_not_sdig	cp '_'
001F97 20 12               B   288    			jr nz,d_nhlsubst				; s
001F99 E5                  B   289    			push hl
001F9A 21 78 28 00         B   290    			ld hl,hl_subs
001F9E CD 56 20 00         B   291    hl_subst	call prefix_to_offset
001FA2 CD 9E 1E 00         B   292    			call index_table				; r
001FA6 E1                  B   293    			pop hl
001FA7 C3 4E 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FAB FE7C                B   296    d_nhlsubst	cp '|'
001FAD 20 07               B   297    			jr nz,d_noinvhls
001FAF E5                  B   298    			push hl
001FB0 21 7E 28 00         B   299    			ld hl,inv_hl_subs
001FB4 18 E8               B   300    			jr hl_subst
                           B   301    			
001FB6 FE68                B   302    d_noinvhls	cp 'h'							;sy
001FB8 20 07               B   303    			jr nz,d_nhsubst
001FBA E5                  B   304    			push hl
001FBB 21 84 28 00         B   305    			ld hl,h_subs
001FBF 18 DD               B   306    			jr hl_subst
                           B   307    			
001FC1 FE6C                B   308    d_nhsubst	cp 'l'							;sy
001FC3 20 07               B   309    			jr nz,d_nlsubst
001FC5 E5                  B   310    			push hl
001FC6 21 8B 28 00         B   311    			ld hl,l_subs
001FCA 18 D2               B   312    			jr hl_subst
                           B   313    			
001FCC FE24                B   314    d_nlsubst	cp '$'
001FCE 20 07               B   315    			jr nz,d_nihlsubst				; s
001FD0 E5                  B   316    			push hl
001FD1 21 92 28 00         B   317    			ld hl,ind_hl_subs
001FD5 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
001FD7                     B   321    d_nihlsubst	
                           B   322    
001FD7 FE7E                B   323    			cp '~'							; s
001FD9 20 1F               B   324    			jr nz,ntable_r
001FDB 11 CD 27 00         B   325    			ld de,table_r
001FDF 23                  B   326    do_table 	inc hl
001FE0 01000000            B   327    			ld bc,0							; t
001FE4 4E                  B   328    			ld c,(hl)
001FE5 FD21 41 23 00       B   329    			ld iy,opcode_vars
001FEA FD09                B   330    			add iy,bc
001FEC FD4600              B   331    			ld b,(iy)						;in
001FEF E5                  B   332    			push hl
001FF0 EB                  B   333    			ex de,hl
001FF1 CD 9E 1E 00         B   334    			call index_table				; r
001FF5 E1                  B   335    			pop hl
001FF6 C3 4E 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
001FFA 11 D8 27 00         B   338    ntable_r	ld de,table_r2					; s
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FFE FE3D                B   339    			cp '='
002000 28 DD               B   340    			jr z,do_table
                           B   341    			
002002 11 E3 27 00         B   342    			ld de,table_rp					; s
002006 FE40                B   343    			cp '@'
002008 28 D5               B   344    			jr z,do_table 
                           B   345    			
00200A 11 EA 27 00         B   346    			ld de,table_rp2					; s
00200E FE2A                B   347    			cp '*'
002010 28 CD               B   348    			jr z,do_table
                           B   349    			
002012 11 50 28 00         B   350    			ld de,table_rp3					; s
002016 FE3C                B   351    			cp '<'
002018 28 C5               B   352    			jr z,do_table
                           B   353    			
00201A 11 58 28 00         B   354    			ld de,table_rp4					; s
00201E FE7D                B   355    			cp '}'
002020 28 BD               B   356    			jr z,do_table
                           B   357    			
002022 11 F2 27 00         B   358    			ld de,table_cc					; s
002026 FE23                B   359    			cp '#'
002028 28 B5               B   360    			jr z,do_table 
                           B   361    			
00202A 11 FE 27 00         B   362    			ld de,table_alu					; s
00202E FE3A                B   363    			cp ':'
002030 28 AD               B   364    			jr z,do_table 
                           B   365    			
002032 11 2A 28 00         B   366    			ld de,table_rot					; s
002036 FE25                B   367    			cp '%'
002038 28 A5               B   368    			jr z,do_table 
                           B   369    			
00203A 11 68 28 00         B   370    			ld de,table_rst					; s
00203E FE3B                B   371    			cp ';'
002040 28 9D               B   372    			jr z,do_table 
                           B   373    
002042 11 60 28 00         B   374    			ld de,table_rp5					; s
002046 FE7B                B   375    			cp '{'
002048 28 95               B   376    			jr z,do_table 
                           B   377    
00204A                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
00204A                     B   382    d_output_char
                           B   383    
00204A CD 17 23 00         B   384    			call show_ascii_char
                           B   385    
00204E                     B   386    next_opcode_ascii_char
                           B   387    
00204E CB7E                B   388    			bit 7,(hl)						;if
002050 C0                  B   389    			ret nz
002051 23                  B   390    			inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002052 C3 A9 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
002056                     B   397    prefix_to_offset
                           B   398    
002056 0602                B   399    			ld b,2							;se
002058 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
00205C C0                  B   401    			ret nz
00205D 05                  B   402    			dec b
00205E FDCB0056            B   403    			bit sub_ix_prefix,(iy)
002062 C0                  B   404    			ret nz
002063 05                  B   405    			dec b
002064 C9                  B   406    			ret
                           B   407    			
                           B   408    			
002065                     B   409    check_nxt_byte_prefix			
                           B   410    
002065 DD23                B   411    			inc ix
002067 DD7E00              B   412    			ld a,(ix)
00206A FEDD                B   413    			cp 0ddh
00206C C8                  B   414    			ret z
00206D FEED                B   415    			cp 0edh
00206F C8                  B   416    			ret z
002070 FEFD                B   417    			cp 0fdh
002072 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
002073                     B   428    find_instruction_ascii
                           B   429    
002073 0600                B   430    			ld b,0						; defau
                           B   431    
002075 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
002079 28 12               B   433    			jr z,not_ddcb_fdcb_inst
00207B 21 A7 27 00         B   434    			ld hl,ddcb_fdcb_z6		
00207F FD46 01             B   435    			ld b,(iy+var_x)				; x is 
002082 FD7E 03             B   436    			ld a,(iy+var_z)
002085 FE06                B   437    			cp 6
002087 C8                  B   438    			ret z
002088 21 6F 27 00         B   439    			ld hl,ddcb_fdcb_zn6					00208C C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   443    
00208D                     B   444    not_ddcb_fdcb_inst
                           B   445    
00208D FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
002091 28 08               B   447    			jr z,not_cb_inst
002093 21 F7 24 00         B   448    			ld hl,cb_group		
002097 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
00209A C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
00209B                     B   454    not_cb_inst
                           B   455    
00209B FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
00209F CA C0 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020A3 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020A6 B7                  B   460    			or a
0020A7 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020A9 FD7E 03             B   464    			ld a,(iy+var_z)				
0020AC B7                  B   465    			or a
0020AD 20 0D               B   466    			jr nz,notedx0z0
0020AF 21 1E 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020B3 FD7E 02             B   468    			ld a,(iy+var_y)
0020B6 FE06                B   469    			cp 6
0020B8 C0                  B   470    			ret nz
0020B9 0601                B   471    			ld b,1
0020BB C9                  B   472    			ret
                           B   473    
0020BC FE01                B   474    notedx0z0	cp 1
0020BE 20 0D               B   475    			jr nz,notedx0z1
0020C0 21 2F 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
0020C4 FD7E 02             B   477    			ld a,(iy+var_y)
0020C7 FE06                B   478    			cp 6
0020C9 C0                  B   479    			ret nz
0020CA 0601                B   480    			ld b,1
0020CC C9                  B   481    			ret
                           B   482    
0020CD FE02                B   483    notedx0z1	cp 2
0020CF 20 05               B   484    			jr nz,notedx0z2
0020D1 21 45 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
0020D5 C9                  B   486    			ret
                           B   487    
0020D6 FE03                B   488    notedx0z2	cp 3
0020D8 20 05               B   489    			jr nz,notedx0z3
0020DA 21 51 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
0020DE C9                  B   491    			ret
                           B   492    			
0020DF FE04                B   493    notedx0z3	cp 4
0020E1 20 05               B   494    			jr nz,notedx0z4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E3 21 5D 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
0020E7 C9                  B   496    			ret
                           B   497    
0020E8 FE06                B   498    notedx0z4	cp 6
0020EA 20 05               B   499    			jr nz,notedx0z6				;x0 / z
0020EC 21 67 25 00         B   500    			ld hl,ed_x0_z6
0020F0 C9                  B   501    			ret
                           B   502    
0020F1 FE07                B   503    notedx0z6	cp 7
0020F3 C2 CA 27 00         B   504    			jr nz,bad_opcode			;x0 / z
0020F7 21 72 25 00         B   505    			ld hl,ed_x0_z7
0020FB FD46 05             B   506    			ld b,(iy+var_q)
0020FE C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
0020FF FE01                B   511    notedx0		cp 1	
002101 20 68               B   512    			jr nz,ed_xn1
                           B   513    
002103 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002106 B7                  B   515    			or a
002107 20 0D               B   516    			jr nz,ed_x1_zn0
002109 21 87 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
00210D FD7E 02             B   518    			ld a,(iy+var_y)
002110 FE06                B   519    			cp 6
002112 C0                  B   520    			ret nz
002113 0601                B   521    			ld b,1
002115 C9                  B   522    			ret
                           B   523    			
002116 FE01                B   524    ed_x1_zn0	cp 1
002118 20 0D               B   525    			jr nz,ed_x1_zn1
00211A 21 97 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
00211E FD7E 02             B   527    			ld a,(iy+var_y)
002121 FE06                B   528    			cp 6
002123 C0                  B   529    			ret nz
002124 0601                B   530    			ld b,1
002126 C9                  B   531    			ret
                           B   532    		
002127 FE02                B   533    ed_x1_zn1	cp 2
002129 20 08               B   534    			jr nz,ed_x1_zn2					;z 
00212B 21 AC 25 00         B   535    			ld hl,ed_x1_z2	
00212F FD46 05             B   536    			ld b,(iy+var_q)
002132 C9                  B   537    			ret
                           B   538    
002133 FE03                B   539    ed_x1_zn2	cp 3
002135 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002137 21 C2 25 00         B   541    			ld hl,ed_x1_z3	
00213B FD46 05             B   542    			ld b,(iy+var_q)
00213E C9                  B   543    			ret
                           B   544    			
00213F FE04                B   545    ed_x1_zn3	cp 4							;z 
002141 20 08               B   546    			jr nz,ed_x1_zn4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002143 21 D7 25 00         B   547    			ld hl,ed_x1_z4
002147 FD46 02             B   548    			ld b,(iy+var_y)
00214A C9                  B   549    			ret
                           B   550    			
00214B FE05                B   551    ed_x1_zn4	cp 5
00214D 20 08               B   552    			jr nz,ed_x1_zn5
00214F 21 0F 26 00         B   553    			ld hl,ed_x1_z5					;z 
002153 FD46 02             B   554    			ld b,(iy+var_y)
002156 C9                  B   555    			ret
                           B   556    			
002157 FE06                B   557    ed_x1_zn5	cp 6
002159 20 08               B   558    			jr nz,ed_x1_zn6					;z=
00215B 21 3E 26 00         B   559    			ld hl,ed_x1_z6
00215F FD46 02             B   560    			ld b,(iy+var_y)
002162 C9                  B   561    			ret
                           B   562    			
002163 21 63 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
002167 FD46 02             B   564    			ld b,(iy+var_y)
00216A C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
00216B FE02                B   569    ed_xn1		cp 2
00216D 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
00216F FD46 02             B   572    			ld b,(iy+var_y)
002172 FD7E 03             B   573    			ld a,(iy+var_z)
002175 B7                  B   574    			or a
002176 20 05               B   575    			jr nz,edx2zn0
002178 21 87 26 00         B   576    			ld hl,ed_x2_z0					;x=
00217C C9                  B   577    			ret
                           B   578    
00217D FE01                B   579    edx2zn0		cp 1
00217F 20 05               B   580    			jr nz,edx2zn1
002181 21 A1 26 00         B   581    			ld hl,ed_x2_z1					;x=
002185 C9                  B   582    			ret
                           B   583    
002186 FE02                B   584    edx2zn1		cp 2
002188 20 05               B   585    			jr nz,edx2zn2
00218A 21 BB 26 00         B   586    			ld hl,ed_x2_z2					;x=
00218E C9                  B   587    			ret
                           B   588    
00218F FE03                B   589    edx2zn2		cp 3
002191 20 05               B   590    			jr nz,edx2zn3
002193 21 EB 26 00         B   591    			ld hl,ed_x2_z3					;x=
002197 C9                  B   592    			ret
                           B   593    
002198 21 1D 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
00219C C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00219D FE03                B   599    ed_xn2		cp 3
00219F 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021A1 FD46 02             B   602    			ld b,(iy+var_y)
0021A4 FD7E 03             B   603    			ld a,(iy+var_z)
0021A7 FE02                B   604    			cp 2
0021A9 20 05               B   605    			jr nz,edx3zn2
0021AB 21 53 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021AF C9                  B   607    			ret
0021B0 FE03                B   608    edx3zn2		cp 3
0021B2 20 05               B   609    			jr nz,edx3zn3
0021B4 21 61 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021B8 C9                  B   611    			ret
                           B   612    
0021B9                     B   613    edx3zn3
                           B   614    
0021B9                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
0021B9                     B   619    invalid_op
0021B9 21 CA 27 00         B   620    			ld hl,bad_opcode				; x
0021BD 0600                B   621    			ld b,0
0021BF C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021C0 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
0021C3 B7                  B   629    			or a
0021C4 C2 5C 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
0021C8 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
0021CB B7                  B   636    			or a
0021CC 20 14               B   637    			jr nz,x0_z_not_zero
0021CE 21 49 23 00         B   638    			ld hl,x0_z0
0021D2 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
0021D5 47                  B   640    			ld b,a
0021D6 D604                B   641    			sub 4
0021D8 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
0021DB 78                  B   643    			ld a,b
0021DC FE04                B   644    			cp 4
0021DE D8                  B   645    			ret c
0021DF 0604                B   646    			ld b,4						;if y >
0021E1 C9                  B   647    			ret
                           B   648    			
0021E2                     B   649    x0_z_not_zero		
                           B   650    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021E2 FE01                B   651    			cp 1
0021E4 20 1A               B   652    			jr nz,x0_z_not_one
0021E6 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
0021E9 FE06                B   654    			cp 6
0021EB 20 0B               B   655    			jr nz,x0z1yn6
0021ED CD FC 22 00         B   656    			call test_ixiy_prefix		;if y=6
0021F1 28 05               B   657    			jr z,x0z1yn6				;altern
0021F3 21 7C 23 00         B   658    			ld hl,x0_z1_y6
0021F7 C9                  B   659    			ret
                           B   660    
0021F8 21 69 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
0021FC FD46 05             B   662    			ld b,(iy+var_q)				;q is t
0021FF C9                  B   663    			ret 
                           B   664    			
002200                     B   665    x0_z_not_one
                           B   666    
002200 FE02                B   667    			cp 2
002202 20 08               B   668    			jr nz,x0_z_not_two
002204 21 84 23 00         B   669    			ld hl,x0_z2
002208 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
00220B C9                  B   671    			ret
                           B   672    			
00220C                     B   673    x0_z_not_two
                           B   674    
00220C FE03                B   675    			cp 3
00220E 20 08               B   676    			jr nz,x0_z_not_three
002210 21 D0 23 00         B   677    			ld hl,x0_z3
002214 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002217 C9                  B   679    			ret
                           B   680    			
002218                     B   681    x0_z_not_three
                           B   682    
002218 FE04                B   683    			cp 4
00221A 20 05               B   684    			jr nz,x0_z_not_four
00221C 21 E0 23 00         B   685    			ld hl,x0_z4					;no ini
002220 C9                  B   686    			ret			
                           B   687    			
002221                     B   688    x0_z_not_four
                           B   689    
002221 FE05                B   690    			cp 5
002223 20 05               B   691    			jr nz,x0_z_not_five
002225 21 E8 23 00         B   692    			ld hl,x0_z5					;no ini
002229 C9                  B   693    			ret				
                           B   694    			
00222A                     B   695    x0_z_not_five
                           B   696    
00222A FE06                B   697    			cp 6
00222C 20 1A               B   698    			jr nz,x0_z_not_six
00222E 21 F0 23 00         B   699    			ld hl,x0_z6					;normal
002232 FD7E 02             B   700    			ld a,(iy+var_y)
002235 FE07                B   701    			cp 7
002237 C0                  B   702    			ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002238 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
00223C 20 05               B   704    			jr nz,altx0z6
00223E FDCB005E            B   705    			bit sub_iy_prefix,(iy)
002242 C8                  B   706    			ret z	
002243 21 F9 23 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002247 C9                  B   708    			ret
                           B   709    
                           B   710    
002248                     B   711    x0_z_not_six
                           B   712    			
002248 21 01 24 00         B   713    			ld hl,x0_z7					;x=0, z
00224C FD46 02             B   714    			ld b,(iy+var_y)				;y is n
00224F CD FC 22 00         B   715    			call test_ixiy_prefix
002253 C8                  B   716    			ret z
002254 21 1B 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
002258 FD46 05             B   718    			ld b,(iy+var_q)				;this i
00225B C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
00225C FE01                B   723    x_not_zero	cp 1						; is x 
00225E 20 32               B   724    			jr nz,x_not_one
                           B   725    			
002260 21 2D 24 00         B   726    			ld hl,x1_table				; x=1
002264 CD FC 22 00         B   727    			call test_ixiy_prefix
002268 20 11               B   728    			jr nz,pref_x1
00226A FD7E 02             B   729    			ld a,(iy+var_y)
00226D FE06                B   730    			cp 6
00226F C0                  B   731    			ret nz
002270 FD7E 03             B   732    			ld a,(iy+var_z)
002273 FE06                B   733    			cp 6
002275 C0                  B   734    			ret nz
002276 21 4B 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
00227A C9                  B   736    			ret
                           B   737    
00227B FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
00227E FE06                B   739    			cp 6
002280 20 05               B   740    			jr nz,x1yn6
002282 21 37 24 00         B   741    			ld hl,x1_y6
002286 C9                  B   742    			ret
                           B   743    			
002287 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
00228A FE06                B   745    			cp 6
00228C C0                  B   746    			ret nz
00228D 21 41 24 00         B   747    			ld hl,x1_z6
002291 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
002292 FE02                B   752    x_not_one	cp 2						; is x 
002294 20 05               B   753    			jr nz,x_not_two
002296 21 4F 24 00         B   754    			ld hl,x2_table				; no in
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00229A C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
00229B FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
00229E B7                  B   760    			or a
00229F 20 05               B   761    			jr nz,x3_z_not_zero
0022A1 21 54 24 00         B   762    			ld hl,x3_z0					; no in
0022A5 C9                  B   763    			ret
                           B   764    						
0022A6                     B   765    x3_z_not_zero
                           B   766    
0022A6 FE01                B   767    			cp 1
0022A8 20 11               B   768    			jr nz,x3_z_not_one
0022AA 21 5C 24 00         B   769    			ld hl,x3_z1_q0
0022AE FD7E 05             B   770    			ld a,(iy+var_q)
0022B1 B7                  B   771    			or a
0022B2 C8                  B   772    			ret z						; no in
0022B3 21 64 24 00         B   773    			ld hl,x3_z1_q1
0022B7 FD46 04             B   774    			ld b,(iy+var_p)				; index
0022BA C9                  B   775    			ret
                           B   776    
0022BB                     B   777    x3_z_not_one
                           B   778    
0022BB FE02                B   779    			cp 2
0022BD 20 05               B   780    			jr nz,x3_z_not_two
0022BF 21 7B 24 00         B   781    			ld hl,x3_z2					;no ini
0022C3 C9                  B   782    			ret
                           B   783    
0022C4                     B   784    x3_z_not_two
                           B   785    
0022C4 FE03                B   786    			cp 3
0022C6 20 08               B   787    			jr nz,x3_z_not_three
0022C8 21 84 24 00         B   788    			ld hl,x3_z3
0022CC FD46 02             B   789    			ld b,(iy+var_y)				;index 
0022CF C9                  B   790    			ret
                           B   791    
0022D0                     B   792    x3_z_not_three
                           B   793    
0022D0 FE04                B   794    			cp 4
0022D2 20 05               B   795    			jr nz,x3_z_not_four
0022D4 21 B9 24 00         B   796    			ld hl,x3_z4				;no initial
0022D8 C9                  B   797    			ret						
                           B   798    
                           B   799    
0022D9                     B   800    x3_z_not_four
                           B   801    
0022D9 FE05                B   802    			cp 5
0022DB 20 11               B   803    			jr nz,x3_z_not_five
0022DD 21 C4 24 00         B   804    			ld hl,x3_z5_q0
0022E1 FD7E 05             B   805    			ld a,(iy+var_q)
0022E4 B7                  B   806    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022E5 C8                  B   807    			ret z						;no ind
0022E6 21 CD 24 00         B   808    			ld hl,x3_z5_q1
0022EA FD46 04             B   809    			ld b,(iy+var_p)				;else i
0022ED C9                  B   810    			ret
                           B   811    
0022EE                     B   812    x3_z_not_five
                           B   813    
0022EE FE06                B   814    			cp 6
0022F0 20 05               B   815    			jr nz,x3_z_not_six
0022F2 21 EB 24 00         B   816    			ld hl,x3_z6					;no ind
0022F6 C9                  B   817    			ret
                           B   818    
0022F7                     B   819    x3_z_not_six
                           B   820    
0022F7 21 EF 24 00         B   821    			ld hl,x3_z7					;x=3, z
0022FB C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
0022FC                     B   827    test_ixiy_prefix
                           B   828    
0022FC FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002300 C0                  B   830    			ret nz
002301 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
002305 C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002306                     B   837    show_hex_byte
                           B   838    
002306 E5                  B   839    			push hl
002307 21 B3 28 00         B   840    			ld hl,output_byte_txt
00230B E5                  B   841    			push hl
00230C CD 5E 10 00         B   842    			call hexbyte_to_ascii
002310 E1                  B   843    			pop hl
002311 CD 1B 0F 00         B   844    			call os_print_string
002315 E1                  B   845    			pop hl
002316 C9                  B   846    			ret
                           B   847    			
                           B   848    
002317                     B   849    show_ascii_char
                           B   850    
002317 E5                  B   851    			push hl
002318 21 B6 28 00         B   852    			ld hl,output_char_txt
00231C 77                  B   853    			ld (hl),a
00231D CD 1B 0F 00         B   854    			call os_print_string
002321 E1                  B   855    			pop hl
002322 C9                  B   856    			ret
                           B   857    		
                           B   858    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002323 DD22 B0 28 00       B   859    show_ix		ld (d_work_address),ix
002328 3A B2 28 00         B   860    			ld a,(d_work_address+2)
00232C CD 06 23 00         B   861    			call show_hex_byte
002330 3A B1 28 00         B   862    			ld a,(d_work_address+1)
002334 CD 06 23 00         B   863    			call show_hex_byte
002338 3A B0 28 00         B   864    			ld a,(d_work_address)
00233C CD 06 23 00         B   865    			call show_hex_byte
002340 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
002341                     B   896    opcode_vars
                           B   897    
002341 00                  B   898    prefix_bits_loc	db 0	
002342 00                  B   899    var_x_loc		db 0	
002343 00                  B   900    var_y_loc		db 0	
002344 00                  B   901    var_z_loc		db 0	
002345 00                  B   902    var_p_loc		db 0	
002346 00                  B   903    var_q_loc		db 0
002347 00                  B   904    var_calc_loc	db 0
002348 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
002349 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
00234C 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
002354 A7 
002355 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
00235C 4A522064 80         B   922    			db 'JR ','d',80h			; y3
002361 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
002369 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
00236F 2C2180 
002372 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
00237A 04 80 
00237C 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
002384 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
00238C 2CC1 
00238E 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
002396 43A9 
002398 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023A0 2CC1 
0023A2 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023AA 45A9 
0023AC 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023B4 DF 
0023B5 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023BD A9 
0023BE 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
0023C6 C1 
0023C7 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
0023CF A9 
                           B   937    
0023D0 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
0023D7 80 
0023D8 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
0023DF 80 
                           B   940    			
0023E0 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
0023E7 80 
                           B   942    
0023E8 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
0023EF 80 
                           B   944    			
0023F0 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
0023F6 2C5E80 
0023F9 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   947    		
002401 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
002405 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002409 524CC1              B   950    			db 'RL','A'+80h			;y=2
00240C 5252C1              B   951    			db 'RR','A'+80h			;y=3
00240F 4441C1              B   952    			db 'DA','A'+80h			;y=4
002412 4350CC              B   953    			db 'CP','L'+80h			;y=5
002415 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002418 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
00241B 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
002421 2C2480 
002424 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
00242C 80 
                           B   959    		
                           B   960    
                           B   961    
00242D 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
002433 2C7E 03 80 
002437 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		00243D 2C3D 03 80 
002441 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002447 2C7E 03 80 
                           B   965    
00244B 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
00244F 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
002454 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
00245B 80 
                           B   975    
00245C 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
002463 80 
002464 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
002469 4558D8              B   978    			db 'EX','X'+80h			;p=1
00246C 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
002472 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
00247A 80 
                           B   981    
00247B 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
002481 2C2180 
                           B   983    
002484 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
00248A 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
002491 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
002499 C1 
00249A 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024A2 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024AA 2C5F80 
0024AD 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024B5 44C9                B   990    			db 'D','I'+80h			;y = 6
0024B7 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
0024B9 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024C1 2C2180 
                           B   994    
0024C4 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
0024CC 80 
0024CD 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
0024D5 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
0024DC 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
0024E3 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
0024EB 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
0024EF 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
0024F6 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
0024F7 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		0024FD 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002504 2C7E 03 80 
002508 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
00250F 2C7E 03 80 
002513 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
00251A 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
00251E 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
002524 2C285EA9 
002528 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
00252F 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002537 2C7E 02 80 
00253B 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			002543 5FA9 
                           B  1022    
002545 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	00254C 2C49582F 80 
002551 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
002558 2C49592F 80 
00255D 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
002565 02 80 
                           B  1026    
002567 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00256F 7D 04 80 
                           B  1028    
002572 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	002578 2C285FA9 
00257C 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		002584 3C 04 80 
                           B  1031    
002587 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
00258C 2C284243 A9 
002591 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
002597 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
00259F 2C7E 02 80 
0025A3 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025AB B0 
                           B  1037    
0025AC 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025B4 40 04 80 
0025B7 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025BF 40 04 80 
                           B  1040    
0025C2 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		0025CA 40 04 80 
0025CD 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	0025D3 2C2821A9 
                           B  1043    
0025D7 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
0025DA 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
0025E0 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			0025E8 49592F80 
0025EC 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
0025F2 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
0025FA 80 
0025FB 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
002601 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002609 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
00260F 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
002615 52455449 2680       B  1054    				db 'RETI&',80h				;y=
00261B 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
002623 49582F80 
002627 BF                  B  1056    				db '?'+80h					;y=
002628 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
002630 80 
002631 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002638 BF                  B  1059    				db '?'+80h					;y=
002639 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
00263E 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
002642 BF                  B  1064    				db '?'+80h					;y=
002643 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002647 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
00264B 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
002653 80 
002654 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
00265B 534CD0              B  1069    				db 'SL','P'+80h				;y=
00265E 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
002663 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
002669 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
00266F 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
002675 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
00267B 5252C4              B  1076    				db 'RR','D'+80h				;y=
00267E 524CC4              B  1077    				db 'RL','D'+80h				;y=
002681 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
002684 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002687 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
00268B 4C444926 80         B  1083    				db 'LDI&',80h					002690 4C444426 80         B  1084    				db 'LDD&',80h					002695 4C444952 2680       B  1085    				db 'LDIR&',80h					00269B 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026A1 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026A5 43504926 80         B  1089    				db 'CPI&',80h					0026AA 43504426 80         B  1090    				db 'CPD&',80h					0026AF 43504952 2680       B  1091    				db 'CPIR&',80h					0026B5 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026BB 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026C1 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
0026C7 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
0026CE 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
0026D5 494E4926 80         B  1098    				db 'INI&',80h		; y4
0026DA 494E4426 80         B  1099    				db 'IND&',80h		; y5
0026DF 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
0026E5 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
0026EB 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
0026F1 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
0026F7 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
0026FE 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
002705 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
00270B 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
002711 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002717 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
00271D 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
002723 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002729 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
002730 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002737 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
00273E 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
002745 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
00274C 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
002753 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
00275A 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
002761 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
002768 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
00276F 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
002775 2C25 02 202480 
00277B 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		002782 2C2480 
002785 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
00278B 2C524553 26203E 02 
002793 2C2480 
002796 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
00279C 2C534554 26203E 02 
0027A4 2C2480 
                           B  1137    
0027A7 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027AC 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027B3 2C2480 
0027B6 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		0027BD 2C2480 
0027C0 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		0027C7 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
0027CA 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
0027CD C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027D5 2480C1 
                           B  1151    
0027D8 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027E0 2480C1 
                           B  1153    
0027E3 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
0027EA 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027F2 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
0027FA 50C5D0CD 
                           B  1159    	
0027FE 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002806 44432620 41AC5355 
00280E 4226A053 42432041 
002816 26AC 
002818 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
002820 26A04F52 26A04350 
002828 26A0 
                           B  1162    			
00282A 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
002832 2680524C 26805252 
00283A 2680 
00283C 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
002844 2680534C 4C268053 
00284C 524C2680 
                           B  1165    	
002850 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
002858 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
002860 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
002868 30B0                B  1172    table_rst	db '0','0'+80h
00286A 30B8                B  1173    			db '0','8'+80h
00286C 31B0                B  1174    			db '1','0'+80h
00286E 31B8                B  1175    			db '1','8'+80h
002870 32B0                B  1176    			db '2','0'+80h
002872 32B8                B  1177    			db '2','8'+80h	
002874 33B0                B  1178    			db '3','0'+80h
002876 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
002878 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
00287E 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
002884 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
00288B CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
002892 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
00289A A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028A0                     B  1198    adl_prefix_list
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1199    
0028A0 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028A8 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028B0 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028B3 2D2D00              B  1206    output_byte_txt	db "--",0
0028B6 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028B8 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028BB                     B     6    os_cmd_del
                           B     7    	
0028BB CD 60 16 00         B     8    				call os_check_volume_format	
0028BF C0                  B     9    				ret nz
                           B    10    			
0028C0 CD C8 28 00         B    11    				call filename_or_bust
                           B    12    				
0028C4 C3 C8 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
0028C8                     B    18    filename_or_bust
                           B    19    			
0028C8 7E                  B    20    				ld a,(hl)					;is
0028C9 B7                  B    21    				or a
0028CA C0                  B    22    				ret nz
0028CB E1                  B    23    				pop hl						;ot
0028CC C3 CB 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
0028D0                     B     5    os_cmd_dir
                           B     6    
0028D0 CD 60 16 00         B     7    				call os_check_volume_format	
0028D4 C0                  B     8    				ret nz
                           B     9    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0028D5 CD AF 29 00         B    10    				call div_line
0028D9 CD 6A 53 00         B    11    				call fs_get_current_dir_name	0028DD D8                  B    12    				ret c
0028DE C0                  B    13    				ret nz
0028DF CD 1B 0F 00         B    14    				call os_print_string
0028E3 CD 30 1A 00         B    15    				call fs_get_dir_cluster			0028E7 7A                  B    16    				ld a,d
0028E8 B3                  B    17    				or e
0028E9 20 08               B    18    				jr nz,dcmdnr
0028EB CD 5D 50 00         B    19    				call fs_get_volume_label
0028EF CD 1B 0F 00         B    20    				call os_print_string
0028F3 CD AE 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
0028F7 CD AF 29 00         B    23    nrootdir		call div_line
0028FB CD 62 4F 00         B    24    				call fs_goto_first_dir_entry
0028FF D8                  B    25    				ret c
002900 20 6F               B    26    				jr nz,os_dlr
002902 AF                  B    27    				xor a
002903 32 2A 61 00         B    28    				ld (os_linecount),a
                           B    29    				
002907 CD 79 4F 00         B    30    os_dfllp		call fs_get_dir_entry			00290B D8                  B    31    				ret c
00290C 20 63               B    32    				jr nz,os_dlr					00290E C5                  B    33    				push bc
00290F CD 1B 0F 00         B    34    				call os_print_string			002913 CD D9 13 00         B    35    				call os_get_cursor_position		002917 060E                B    36    				ld b,14
002919 CD B9 13 00         B    37    				call os_set_cursor_position	
00291D C1                  B    38    				pop bc
00291E CB40                B    39    				bit 0,b							002920 28 06               B    40    				jr z,os_deif		
002922 21 BC 29 00         B    41    				ld hl,dir_txt					002926 18 32               B    42    				jr os_dpl
                           B    43    				
002928 21 58 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			00292C CD 1B 0F 00         B    45    				call os_print_string
002930 ED53 73 68 00       B    46    				ld (scratch_pad),de
002935 79                  B    47    				ld a,c
002936 32 76 68 00         B    48    				ld (scratch_pad+3),a
00293A 21 95 61 00         B    49    				ld hl,output_line
00293E E5                  B    50    				push hl
00293F ED5B 75 68 00       B    51    				ld de,(scratch_pad+2)
002944 CD 83 10 00         B    52    				call hexword_to_ascii
002948 ED5B 73 68 00       B    53    				ld de,(scratch_pad)
00294D CD 83 10 00         B    54    				call hexword_to_ascii
002951 3600                B    55    				ld (hl),0
002953 E1                  B    56    				pop hl
002954 0607                B    57    				ld b,7							002956 CD 3B 10 00         B    58    				call os_skip_leading_ascii_zero
00295A CD 1B 0F 00         B    59    os_dpl			call os_print_string
00295E CD AE 13 00         B    60    				call os_new_line
                           B    61    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002962 CD 06 50 00         B    62    				call fs_goto_next_dir_entry
002966 20 09               B    63    				jr nz,os_dlr					002968 CD AC 11 00         B    64    				call os_count_lines
00296C 3E79                B    65    				ld a,'y'
00296E B8                  B    66    				cp b
00296F 28 96               B    67    				jr z,os_dfllp
                           B    68    				
002971 CD AF 29 00         B    69    os_dlr			call div_line					002975 CD 95 49 00         B    70    				call fs_calc_free_space
002979 D8                  B    71    				ret c	
00297A CD 88 29 00         B    72    				call show_hlde_decimal
00297E 21 C2 29 00         B    73    				ld hl,kb_spare_txt
002982 CD 1B 0F 00         B    74    				call os_print_string
002986 AF                  B    75    				xor a
002987 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
002988                     B    80    show_hlde_decimal
                           B    81    
002988 CD 41 12 00         B    82    				call os_hex_to_decimal			00298C 11070000            B    83    				ld de,7
002990 19                  B    84    				add hl,de						002991 43                  B    85    				ld b,e
002992 11 95 61 00         B    86    				ld de,output_line
002996 D5                  B    87    				push de
002997 7E                  B    88    dec2strlp		ld a,(hl)						002998 B7                  B    89    				or a
002999 20 03               B    90    				jr nz,foundlnz
00299B 2B                  B    91    				dec hl
00299C 10 F9               B    92    				djnz dec2strlp
00299E 04                  B    93    foundlnz		inc b
00299F 7E                  B    94    ndecchar		ld a,(hl)						0029A0 C630                B    95    				add a,030h
0029A2 12                  B    96    				ld (de),a
0029A3 13                  B    97    				inc de
0029A4 2B                  B    98    				dec hl
0029A5 10 F8               B    99    				djnz ndecchar
0029A7 AF                  B   100    				xor a
0029A8 12                  B   101    				ld (de),a
0029A9 E1                  B   102    				pop hl							0029AA CD 1B 0F 00         B   103    				call os_print_string
0029AE C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
0029AF 0E2D                B   108    div_line		ld c,'-'
0029B1 0613                B   109    				ld b,19
0029B3 CD 18 1A 00         B   110    				call os_print_multiple_chars
0029B7 CD AE 13 00         B   111    				call os_new_line
0029BB C9                  B   112    				ret
                           B   113    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B   114    ;----------------------------------------------
                           B   115    
0029BC 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
0029C2 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
0029CA 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0029CC                     B     5    os_cmd_f			
                           B     6    
0029CC CD 1D 1C 00         B     7    				call get_start_and_end			                           B     8    			
0029D0 CD 46 1C 00         B     9    				call hexword_or_bust			0029D4 CA EB 15 00         B    10    				jp z,os_no_args_error			0029D8 7B                  B    11    				ld a,e
0029D9 32 41 61 00         B    12    				ld (fillbyte),a
                           B    13    					
0029DD CD 0B 1C 00         B    14    				call test_mem_range
0029E1 DA E7 15 00         B    15    				jp c,os_range_error				                           B    16    					
0029E5 3A 41 61 00         B    17    				ld a,(fillbyte)
0029E9 77                  B    18    f_floop			ld (hl),a
0029EA EDA1                B    19    				cpi								0029EC EA E9 29 00         B    20    				jp pe,f_floop
                           B    21    					
0029F0 3E20                B    22    				ld a,020h						0029F2 B7                  B    23    				or a
0029F3 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
0029F4                     B     9    os_cmd_format
                           B    10    
0029F4 7E                  B    11    				ld a,(hl)						0029F5 B7                  B    12    				or a
0029F6 20 04               B    13    				jr nz,fgotargs					0029F8 3E1F                B    14    				ld a,01fh						0029FA B7                  B    15    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
0029FB C9                  B    16    				ret
                           B    17    			
0029FC                     B    18    fgotargs	
0029FC 11 CB 54 00         B    19    				ld de,fs_sought_filename
002A00 CD B3 53 00         B    20    				call fs_clear_filename			002A04 E5                  B    21    				push hl							002A05 CD 9C 0F 00         B    22    				call os_next_arg
002A09 20 04               B    23    				jr nz,fgotlab
002A0B 21 3C 2B 00         B    24    				ld hl,default_label
002A0F 060B                B    25    fgotlab			ld b,11
002A11 CD F4 11 00         B    26    				call os_copy_ascii_run
002A15 E1                  B    27    				pop hl
                           B    28    				
002A16 3A 4C 5F 00         B    29    				ld a,(device_count)				002A1A B7                  B    30    				or a
002A1B 28 25               B    31    				jr z,fno_dev
002A1D 47                  B    32    				ld b,a
002A1E 0E00                B    33    				ld c,0							002A20 DD21 FC 5F 00       B    34    				ld ix,host_device_hardware_info
002A25 DD7E00              B    35    fdev_lp			ld a,(ix)						002A28 CD 02 1A 00         B    36    				call locate_driver_base			002A2C D5                  B    37    				push de
002A2D FDE1                B    38    				pop iy
002A2F ED130C              B    39    				lea de,iy+0ch					002A32 C5                  B    40    				push bc
002A33 0607                B    41    				ld b,7
002A35 CD D5 11 00         B    42    				call os_compare_strings
002A39 C1                  B    43    				pop bc
002A3A 28 0A               B    44    				jr z,format_dev
002A3C ED3220              B    45    				lea ix,ix+20h					002A3F 0C                  B    46    				inc c
002A40 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002A42 3ED0                B    49    fno_dev			ld a,0d0h						002A44 B7                  B    50    				or a
002A45 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
002A46 C5                  B    58    format_dev		push bc
002A47 CD AE 13 00         B    59    				call os_new_line
002A4B 21 0D 2B 00         B    60    				ld hl,form_dev_warn1
002A4F CD E5 13 00         B    61    				call os_show_packed_text
002A53 C1                  B    62    				pop bc
                           B    63    				
002A54 79                  B    64    				ld a,c							002A55 C630                B    65    				add a,030h
002A57 32 58 5F 00         B    66    				ld (dev_txt+3),a
002A5B 21 55 5F 00         B    67    				ld hl,dev_txt	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A5F CD 1B 0F 00         B    68    				call os_print_string			                           B    69    				
002A63 79                  B    70    				ld a,c
002A64 CD 76 1A 00         B    71    				call dev_to_driver_lookup		002A68 E5                  B    72    				push hl
002A69 32 4B 5F 00         B    73    				ld (current_driver),a
002A6D CD E9 19 00         B    74    				call show_dev_driver_name		002A71 DDE1                B    75    				pop ix
002A73 DD1701              B    76    				ld de,(ix+1)
002A76 FD21 3D 61 00       B    77    				ld iy,xrr_temp
002A7B FD1F00              B    78    				ld (iy),de						002A7E FDCB023E            B    79    				srl (iy+2)
002A82 FDCB011E            B    80    				rr (iy+1)
002A86 FDCB001E            B    81    				rr (iy+0)						002A8A FD1700              B    82    				ld de,(iy)						002A8D CD 88 29 00         B    83    				call show_hlde_decimal			002A91 21 47 2B 00         B    84    				ld hl,kb_txt
002A95 CD 1B 0F 00         B    85    				call os_print_string
002A99 ED2205              B    86    				lea hl,ix+5		
002A9C CD 1B 0F 00         B    87    				call os_print_string			002AA0 3E29                B    88    				ld a,')'
002AA2 CD 5D 0F 00         B    89    				call os_print_char
                           B    90    				
002AA6 CD AE 13 00         B    91    				call os_new_line
002AAA CD AE 13 00         B    92    				call os_new_line
002AAE 21 14 2B 00         B    93    				ld hl,form_dev_warn2
002AB2 CD 04 2B 00         B    94    				call show_packed_text_and_cr
002AB6 CD EC 2A 00         B    95    				call confirm_yes
002ABA 20 28               B    96    				jr nz,ab_form
                           B    97    				
002ABC 21 1E 2B 00         B    98    				ld hl,formatting_txt			002AC0 CD 1B 0F 00         B    99    				call os_print_string
                           B   100    				
002AC4 CD 18 47 00         B   101    				call fs_format_device_command
002AC8 38 10               B   102    				jr c,form_err
002ACA B7                  B   103    				or a
002ACB 20 0D               B   104    				jr nz,form_err
                           B   105    			
002ACD 21 2E 2B 00         B   106    				ld hl,ok_txt					002AD1 CD 1B 0F 00         B   107    				call os_print_string
                           B   108    				
002AD5 CD E1 31 00         B   109    f_end			call os_cmd_remount				002AD9 C9                  B   110    				ret
                           B   111    			
002ADA                     B   112    form_err
002ADA 21 33 2B 00         B   113    				ld hl,ferr_txt
002ADE CD 1B 0F 00         B   114    				call os_print_string
002AE2 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   120    				
002AE4 CD AE 13 00         B   121    ab_form			call os_new_line
002AE8 3E24                B   122    				ld a,024h						002AEA B7                  B   123    				or a
002AEB C9                  B   124    				ret
                           B   125    				
002AEC                     B   126    confirm_yes
                           B   127    			
002AEC 21 73 68 00         B   128    				ld hl,scratch_pad
002AF0 1E03                B   129    				ld e,3
002AF2 E5                  B   130    				push hl
002AF3 CD E7 10 00         B   131    				call os_user_input
002AF7 E1                  B   132    				pop hl
002AF8 C0                  B   133    				ret nz
002AF9 0603                B   134    				ld b,3
002AFB 11 26 5A 00         B   135    				ld de,yes_txt+1
002AFF CD D5 11 00         B   136    				call os_compare_strings
002B03 C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B04                     B   140    show_packed_text_and_cr
                           B   141    			
002B04 CD E5 13 00         B   142    				call os_show_packed_text
002B08 CD AE 13 00         B   143    				call os_new_line
002B0C C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B0D                     B   148    form_dev_warn1
                           B   149    
002B0D 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
002B14                     B   152    form_dev_warn2
                           B   153    
002B14 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B1C 9700 
                           B   155    
002B1E                     B   156    formatting_txt
                           B   157    
002B1E 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002B26 74696E67 2E2E2000 
                           B   159    
002B2E 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002B33 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002B3B 00 
                           B   163    
002B3C                     B   164    default_label	
                           B   165    
002B3C 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002B44 534B00 
                           B   167    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B47 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00006877            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B4C CD 1D 1C 00         B     5    os_cmd_h		call get_start_and_end			002B50 22 3A 61 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002B54 CD 0B 1C 00         B     8    				call test_mem_range
002B58 DA E7 15 00         B     9    				jp c,os_range_error				                           B    10    			
002B5C AF                  B    11    				xor a
002B5D 32 F9 2B 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002B61 2A 3A 61 00         B    14    				ld hl,(find_hexstringascii)
002B65 0600                B    15    				ld b,0
002B67 7E                  B    16    h_lfascii		ld a,(hl)						002B68 B7                  B    17    				or a
002B69 28 28               B    18    				jr z,h_no_text					002B6B FE22                B    19    				cp 022h
002B6D 28 03               B    20    				jr z,h_found_quote
002B6F 23                  B    21    				inc hl
002B70 18 F5               B    22    				jr h_lfascii
002B72 23                  B    23    h_found_quote	inc hl
002B73 22 3A 61 00         B    24    				ld (find_hexstringascii),hl
002B77 7E                  B    25    h_fasc_len		ld a,(hl)
002B78 B7                  B    26    				or a
002B79 CA EB 15 00         B    27    				jp z,os_no_args_error			002B7D FE22                B    28    				cp 022h
002B7F 28 04               B    29    				jr z,h_startas
002B81 23                  B    30    				inc hl
002B82 04                  B    31    				inc b
002B83 18 F2               B    32    				jr h_fasc_len
                           B    33    
002B85 78                  B    34    h_startas		ld a,b
002B86 B7                  B    35    				or a
002B87 CA EB 15 00         B    36    				jp z,os_no_args_error			002B8B 3E01                B    37    				ld a,1
002B8D 32 F9 2B 00         B    38    				ld (h_ascii_mode),a
002B91 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002B93 2A 3A 61 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002B97 0600                B    43    				ld b,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002B99 CD 46 1C 00         B    44    cntfbyts		call hexword_or_bust			002B9D 28 04               B    45    				jr z,gthexstr
002B9F 04                  B    46    				inc b
002BA0 23                  B    47    				inc hl
002BA1 18 F6               B    48    				jr cntfbyts
002BA3 78                  B    49    gthexstr		ld a,b
002BA4 B7                  B    50    				or a
002BA5 CA EB 15 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002BA9                     B    54    h_start_search
                           B    55    	
002BA9 DD2A 2E 61 00       B    56    				ld ix,(cmdop_start_address)		002BAE DDE5                B    57    fndloop1		push ix
002BB0 FDE1                B    58    				pop iy
002BB2 48                  B    59    				ld c,b							002BB3 2A 3A 61 00         B    60    				ld hl,(find_hexstringascii)
002BB7 3A F9 2B 00         B    61    fcmloop			ld a,(h_ascii_mode)
002BBB B7                  B    62    				or a
002BBC 28 08               B    63    				jr z,h_hex
002BBE FD7E00              B    64    				ld a,(iy)
002BC1 BE                  B    65    				cp (hl)
002BC2 20 23               B    66    				jr nz,nofmatch
002BC4 18 0A               B    67    				jr h_matched
002BC6 CD 92 10 00         B    68    h_hex			call ascii_to_hexword			002BCA FD7E00              B    69    				ld a,(iy)
002BCD BB                  B    70    				cp e
002BCE 20 17               B    71    				jr nz,nofmatch
002BD0 FD23                B    72    h_matched		inc iy
002BD2 23                  B    73    				inc hl
002BD3 0D                  B    74    				dec c
002BD4 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002BD6 DDE5                B    77    				push ix							002BD8 D1                  B    78    				pop de							002BD9 DDE5                B    79    				push ix
002BDB C5                  B    80    				push bc
002BDC CD E6 12 00         B    81    				call os_show_hex_address
002BE0 CD AE 13 00         B    82    				call os_new_line
002BE4 C1                  B    83    				pop bc
002BE5 DDE1                B    84    				pop ix
                           B    85    				
002BE7 DDE5                B    86    nofmatch		push ix
002BE9 DD23                B    87    				inc ix
002BEB D1                  B    88    				pop de
002BEC 2A 31 61 00         B    89    				ld hl,(cmdop_end_address)
002BF0 AF                  B    90    				xor a
002BF1 ED52                B    91    				sbc hl,de
002BF3 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002BF5 3E20                B    94    				ld a,020h						002BF7 B7                  B    95    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BF8 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002BF9 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BFA                     B     5    os_cmd_help		
002BFA AF                  B     6    				xor a
002BFB 32 2A 61 00         B     7    				ld (os_linecount),a
                           B     8    				
002BFF 21 3E 5B 00         B     9    				ld hl,packed_help1
002C03 CD E5 13 00         B    10    show_page		call os_show_packed_text
002C07 E5                  B    11    				push hl
002C08 CD AE 13 00         B    12    				call os_new_line
002C0C E1                  B    13    				pop hl
002C0D 23                  B    14    				inc hl						;sk
002C0E 7E                  B    15    				ld a,(hl)
002C0F FEFF                B    16    				cp 0ffh						;la
002C11 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C13 CD AC 11 00         B    19    				call os_count_lines
002C17 78                  B    20    				ld a,b
002C18 FE79                B    21    				cp 'y'
002C1A 28 E7               B    22    				jr z,show_page
                           B    23    
002C1C                     B    24    last_help_page
002C1C AF                  B    25    				xor a
002C1D C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C1E                     B     5    os_cmd_gtr
                           B     6    
002C1E CD 46 1C 00         B     7    				call hexword_or_bust			002C22 CA D3 15 00         B     8    				jp z,os_no_start_addr
002C26 23                  B     9    fndquot1		inc hl
002C27 7E                  B    10    				ld a,(hl)
002C28 B7                  B    11    				or a
002C29 CA EB 15 00         B    12    				jp z,os_no_args_error
002C2D FE22                B    13    				cp 022h							002C2F 20 F5               B    14    				jr nz,fndquot1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002C31 23                  B    15    				inc hl
002C32 E5                  B    16    				push hl
002C33 7E                  B    17    fndquot2		ld a,(hl)
002C34 23                  B    18    				inc hl
002C35 B7                  B    19    				or a
002C36 28 15               B    20    				jr z,noquot2
002C38 FE22                B    21    				cp 022h							002C3A 20 F7               B    22    				jr nz,fndquot2
002C3C E1                  B    23    				pop hl
                           B    24    					
002C3D 7E                  B    25    wmbalp			ld a,(hl)						002C3E FE22                B    26    				cp 022h
002C40 28 09               B    27    				jr z,os_gtrdn					002C42 FE7D                B    28    				cp 07dh
002C44 28 01               B    29    				jr z,skpnasc
002C46 12                  B    30    				ld (de),a
002C47 13                  B    31    skpnasc			inc de
002C48 23                  B    32    				inc hl
002C49 18 F2               B    33    				jr wmbalp
002C4B AF                  B    34    os_gtrdn		xor a
002C4C C9                  B    35    				ret	
                           B    36    				
002C4D E1                  B    37    noquot2			pop hl							002C4E 3E12                B    38    				ld a,012h
002C50 B7                  B    39    				or a
002C51 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002C52                     B     5    os_cmd_lb
                           B     6    	
002C52 CD 60 16 00         B     7    				call os_check_volume_format	
002C56 C0                  B     8    				ret nz
                           B     9    				
002C57 CD C8 28 00         B    10    				call filename_or_bust			002C5B CD F3 15 00         B    11    				call os_find_file				002C5F C0                  B    12    				ret nz
002C60 ED53 76 68 00       B    13    				ld (filesize_cache),de			002C65 2A 83 60 00         B    14    				ld hl,(default_load_addr)
002C69 22 73 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002C6D 2A E7 61 00         B    17    				ld hl,(os_args_loc)
002C71 CD 9C 0F 00         B    18    				call os_next_arg
                           B    19    
002C75 CD 46 1C 00         B    20    				call hexword_or_bust			002C79 28 05               B    21    				jr z,os_lbnao					002C7B ED53 73 68 00       B    22    				ld (data_load_addr),de
                           B    23    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002C80 ED5B 73 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002C85 2A 90 60 00         B    25    				ld hl,(sys_ram_high)			002C89 2B                  B    26    				dec hl
002C8A AF                  B    27    				xor a
002C8B ED52                B    28    				sbc hl,de
002C8D 38 04               B    29    				jr c,os_lbprok
002C8F 3E26                B    30    				ld a,026h						002C91 B7                  B    31    				or a
002C92 C9                  B    32    				ret
                           B    33    				
002C93 2A 73 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002C97 CD 22 16 00         B    35    				call os_read_bytes_from_file
002C9B C0                  B    36    				ret nz
                           B    37    			
002C9C                     B    38    report_bytes_loaded
                           B    39    
002C9C 21 58 56 00         B    40    				ld hl,os_hex_prefix_txt			002CA0 CD 1B 0F 00         B    41    				call os_print_string			                           B    42    				
002CA4 11 78 68 00         B    43    				ld de,filesize_cache+2			002CA8 21 95 61 00         B    44    				ld hl,output_line
002CAC 0603                B    45    				ld b,3
002CAE CD 50 10 00         B    46    				call n_hexbytes_to_ascii
002CB2 3600                B    47    				ld (hl),0	
002CB4 0605                B    48    				ld b,5							002CB6 CD 1C 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002CBA 21 D4 5C 00         B    51    				ld hl,bytes_loaded_msg			002CBE CD E5 13 00         B    52    				call os_show_packed_text
                           B    53    				
002CC2 21 B7 56 00         B    54    				ld hl,to_txt					002CC6 CD 1B 0F 00         B    55    				call os_print_string
                           B    56    
002CCA 21 58 56 00         B    57    				ld hl,os_hex_prefix_txt			002CCE CD 1B 0F 00         B    58    				call os_print_string	
                           B    59    
002CD2 ED5B 73 68 00       B    60    				ld de,(data_load_addr)			002CD7 CD E6 12 00         B    61    				call os_show_hex_address
                           B    62    
002CDB CD AE 13 00         B    63    				call os_new_line
002CDF AF                  B    64    				xor a
002CE0 C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006873            B    69    data_load_addr	equ scratch_pad
       00006876            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002CE1 CD 46 1C 00         B     7    os_cmd_m		call hexword_or_bust			002CE5 28 05               B     8    				jr z,m_no_hex					002CE7 ED53 2B 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002CEC 0610                B    11    m_no_hex		ld b,16							002CEE C5                  B    12    smbllp			push bc							                           B    13    				
002CEF 21 28 2D 00         B    14    				ld hl,colon_cmd_prefix			002CF3 CD 1B 0F 00         B    15    				call os_print_string
002CF7 ED5B 2B 61 00       B    16    				ld de,(mem_mon_addr)
002CFC CD E6 12 00         B    17    				call os_show_hex_address
                           B    18    
002D00 21 95 61 00         B    19    				ld hl,output_line
002D04 0610                B    20    				ld b,bytes_per_line				002D06 3620                B    21    mmbllp			ld (hl),' '
002D08 23                  B    22    				inc hl
002D09 1A                  B    23    				ld a,(de)	
002D0A CD 5E 10 00         B    24    				call hexbyte_to_ascii
002D0E 13                  B    25    				inc de
002D0F 10 F5               B    26    				djnz mmbllp
                           B    27    
002D11 ED53 2B 61 00       B    28    				ld (mem_mon_addr),de
002D16 360B                B    29    				ld (hl),11
002D18 23                  B    30    				inc hl
002D19 3600                B    31    				ld (hl),0
002D1B 21 95 61 00         B    32    				ld hl,output_line
002D1F CD 1B 0F 00         B    33    				call os_print_string
002D23 C1                  B    34    				pop bc
002D24 10 C8               B    35    				djnz smbllp
                           B    36    				
002D26 AF                  B    37    				xor a
002D27 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002D28 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D2B                     B     5    os_cmd_md
                           B     6    	
002D2B CD 60 16 00         B     7    				call os_check_volume_format	
002D2F C0                  B     8    				ret nz
                           B     9    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
002D30 CD C8 28 00         B    10    				call filename_or_bust
                           B    11    				
002D34 C3 A0 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002D38                     B     5    os_cmd_r	
002D38 DD21 99 60 00       B     6    				ld ix,store_a1					002D3D 21 E2 2D 00         B     7    				ld hl,register_txt
002D41 CD 1B 0F 00         B     8    rcmdloop2		call os_print_string
002D45 7E                  B     9    rcmdloop		ld a,(hl)
002D46 FE01                B    10    				cp 1
002D48 28 0B               B    11    				jr z,showbyte
002D4A FE02                B    12    				cp 2
002D4C 28 15               B    13    				jr z,showword16
002D4E FE03                B    14    				cp 3
002D50 28 2E               B    15    				jr z,showaddr
002D52 23                  B    16    				inc hl
002D53 18 F0               B    17    				jr rcmdloop
                           B    18    				
002D55 DD7E00              B    19    showbyte		ld a,(ix)
002D58 DD23                B    20    				inc ix
002D5A DDE5                B    21    				push ix
002D5C E5                  B    22    				push hl
002D5D CD FA 12 00         B    23    				call os_show_hex_byte
002D61 18 2A               B    24    				jr showreg
                           B    25    
002D63 DD7E01              B    26    showword16		ld a,(ix+1)
002D66 DDE5                B    27    				push ix
002D68 E5                  B    28    				push hl
002D69 CD FA 12 00         B    29    				call os_show_hex_byte
002D6D E1                  B    30    				pop hl
002D6E DDE1                B    31    				pop ix
002D70 DD7E00              B    32    				ld a,(ix)
002D73 DD23                B    33    				inc ix
002D75 DD23                B    34    				inc ix
002D77 DDE5                B    35    				push ix
002D79 E5                  B    36    				push hl
002D7A CD FA 12 00         B    37    				call os_show_hex_byte
002D7E 18 0D               B    38    				jr showreg
                           B    39    
002D80 DD1700              B    40    showaddr		ld de,(ix)
002D83 ED3203              B    41    				lea ix,ix+3
002D86 DDE5                B    42    				push ix
002D88 E5                  B    43    				push hl
002D89 CD E6 12 00         B    44    				call os_show_hex_address
002D8D E1                  B    45    showreg			pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002D8E DDE1                B    46    				pop ix
002D90 23                  B    47    				inc hl
002D91 7E                  B    48    				ld a,(hl)
002D92 B7                  B    49    				or a
002D93 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002D95 CD AE 13 00         B    52    				call os_new_line				002D99 21 46 2E 00         B    53    				ld hl,flag_txt
002D9D CD CE 12 00         B    54    				call os_copy_to_output_line
002DA1 21 99 61 00         B    55    				ld hl,output_line+4
002DA5 01050000            B    56    				ld bc,5
002DA9 3A BC 60 00         B    57    				ld a,(store_f)
002DAD CB77                B    58    				bit 6,a							002DAF 28 02               B    59    				jr z,zfzero
002DB1 3631                B    60    				ld (hl),'1'
002DB3 09                  B    61    zfzero			add hl,bc
002DB4 CB47                B    62    				bit 0,a							002DB6 28 02               B    63    				jr z,cfzero
002DB8 3631                B    64    				ld (hl),'1'
002DBA 09                  B    65    cfzero			add hl,bc
002DBB CB7F                B    66    				bit 7,a							002DBD 28 02               B    67    				jr z,sfzero
002DBF 364D                B    68    				ld (hl),'M'
002DC1 09                  B    69    sfzero			add hl,bc
002DC2 CB57                B    70    				bit 2,a							002DC4 28 02               B    71    				jr z,pfzero
002DC6 364F                B    72    				ld (hl),'O'
002DC8 09                  B    73    pfzero			add hl,bc
002DC9 23                  B    74    				inc hl
002DCA CB67                B    75    				bit 4,a							002DCC 28 02               B    76    				jr z,iffzero
002DCE 3631                B    77    				ld (hl),'1'
002DD0                     B    78    iffzero			
002DD0 01060000            B    79    				ld bc,6
002DD4 09                  B    80    				add hl,bc
002DD5 3A BD 60 00         B    81    				ld a,(store_adl)
002DD9 C630                B    82    				add a,30h
002DDB 77                  B    83    				ld (hl),a
002DDC CD 11 13 00         B    84    				call os_print_output_line
002DE0 AF                  B    85    				xor a
002DE1 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002DE2 20413D00 01         B    91    register_txt		db ' A=',0,1
002DE7 20204243 3D0003     B    92    					db '  BC=',0,3
002DEE 20204445 3D0003     B    93    					db '  DE=',0,3
002DF5 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002DFC 0B                  B    96    					db 11
                           B    97    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DFD 27413D00 01         B    98    					db 027h,'A=',0,1
002E02 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E09 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E10 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E17 0B                  B   103    					db 11
                           B   104    
002E18 2049583D 0003       B   105    					db ' IX=',0,3
002E1E 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002E24 0B                  B   108    					db 11
                           B   109    					
002E25 2050433D 0003       B   110    					db ' PC=',0,3
002E2B 204C5350 3D0003     B   111    					db ' LSP=',0,3
002E32 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002E39 0B                  B   114    					db 11
                           B   115    					
002E3A 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002E42 010000 
                           B   117    					
002E45 0B                  B   118    					db 11
                           B   119    
002E46 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002E4E 3D302053 463D5020 
002E56 50563D45 20494646 
002E5E 3D302041 444C3D30 
002E66 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002E69                     B     5    os_cmd_rd
                           B     6    
002E69 CD 60 16 00         B     7    				call os_check_volume_format	
002E6D C0                  B     8    				ret nz
                           B     9    				
002E6E CD C8 28 00         B    10    				call filename_or_bust
                           B    11    			
002E72 C3 0A 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002E76                     B     5    os_cmd_rn
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
                           B     6    	
002E76 CD 60 16 00         B     7    				call os_check_volume_format	
002E7A C0                  B     8    				ret nz
                           B     9    			
002E7B CD C8 28 00         B    10    				call filename_or_bust
002E7F E5                  B    11    				push hl
002E80 D1                  B    12    				pop de
002E81 CD 9C 0F 00         B    13    				call os_next_arg
002E85 7E                  B    14    				ld a,(hl)						002E86 B7                  B    15    				or a
002E87 20 04               B    16    				jr nz,rn_grfn
002E89 3E1F                B    17    				ld a,01fh						002E8B B7                  B    18    				or a
002E8C C9                  B    19    				ret
                           B    20    
002E8D EB                  B    21    rn_grfn			ex de,hl
002E8E C3 F4 16 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002E92                     B     5    os_cmd_sb
                           B     6    	
002E92 CD 60 16 00         B     7    				call os_check_volume_format		002E96 C0                  B     8    				ret nz
                           B     9    					
002E97 CD C8 28 00         B    10    				call filename_or_bust			002E9B 22 79 68 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002E9F 2A E7 61 00         B    13    				ld hl,(os_args_loc)
002EA3 CD 9C 0F 00         B    14    				call os_next_arg
002EA7 CD 46 1C 00         B    15    				call hexword_or_bust			002EAB CA D3 15 00         B    16    				jp z,os_no_start_addr			002EAF ED53 73 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002EB4 CD 46 1C 00         B    19    				call hexword_or_bust			002EB8 CA D7 15 00         B    20    				jp z,os_no_filesize
002EBC ED53 76 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
002EC1 2A 79 68 00         B    23    				ld hl,(sb_save_name_addr)		002EC5 CD 32 16 00         B    24    				call os_create_file
002EC9 28 18               B    25    				jr z,os_sfapp
002ECB FEC9                B    26    				cp 0c9h							002ECD C0                  B    27    				ret nz			
002ECE 21 05 5B 00         B    28    				ld hl,save_append_msg			002ED2 CD E5 13 00         B    29    				call os_show_packed_text
002ED6 CD 43 44 00         B    30    				call os_wait_key_press
002EDA 3E79                B    31    				ld a,'y'
002EDC B8                  B    32    				cp b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002EDD 28 04               B    33    				jr z,os_sfapp
002EDF 3E2C                B    34    				ld a,2ch						002EE1 B7                  B    35    				or a
002EE2 C9                  B    36    				ret
                           B    37    			
002EE3 2A 79 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002EE7 ED5B 73 68 00       B    39    				ld de,(sb_save_addr)			002EEC ED4B 76 68 00       B    40    				ld bc,(sb_save_length)			002EF1 CD 48 16 00         B    41    				call os_write_bytes_to_file
002EF5 C0                  B    42    				ret nz	
                           B    43    				
002EF6 3E20                B    44    				ld a,020h						002EF8 B7                  B    45    				or a
002EF9 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006873            B    51    sb_save_addr		equ scratch_pad
       00006876            B    52    sb_save_length		equ scratch_pad+3
       00006879            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006973            B     6    buffer_addr				 equ os_max_addr		       00006873            B     7    rx_buffer_ptr			 equ scratch_pad
       00006876            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002EFA 7E                  B    11    os_cmd_rx		ld a,(hl)						002EFB B7                  B    12    				or a
002EFC CA CB 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F00 3E3E                B    15    				ld a,'>'						002F02 BE                  B    16    				cp (hl)
002F03 C2 C6 2F 00         B    17    				jp nz,rx_nrs
002F07 23                  B    18    				inc hl
002F08 3E20                B    19    				ld a,' '
002F0A BE                  B    20    				cp (hl)
002F0B 2B                  B    21    				dec hl
002F0C C2 C6 2F 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F10 CD 60 16 00         B    24    				call os_check_volume_format		002F14 C0                  B    25    				ret nz		
                           B    26    				
002F15 112A0000            B    27    				ld de,02ah						002F19 ED53 07 5F 00       B    28    				ld (serial_filename),de			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002F1E CD CA 30 00         B    29    				call rx_get_header
002F22 C0                  B    30    				ret nz
002F23 CD 08 46 00         B    31    				call s_holdack					                           B    32    				
002F27 21 1B 5F 00         B    33    				ld hl,serial_fileheader			002F2B CD 32 16 00         B    34    				call os_create_file
002F2F C2 A5 2F 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002F33 21 25 5B 00         B    37    				ld hl,ser_recsave_msg
002F37 CD E5 13 00         B    38    				call os_show_packed_text
                           B    39    				
002F3B 2A 2B 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002F3F 22 76 68 00         B    41    				ld (serial_file_length_cache),h
002F43 21 73 69 00         B    42    				ld hl,buffer_addr
002F47 22 73 68 00         B    43    				ld (rx_buffer_ptr),hl
002F4B 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002F4D CD F0 45 00         B    46    rx_lnb			call s_goodack
002F51 CD 9A 45 00         B    47    				call s_getblock
002F55 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002F57 F5                  B    50    				push af							002F58 CD 01 46 00         B    51    				call s_badack					002F5C 21 1B 5F 00         B    52    				ld hl,serial_fileheader			002F60 CD C8 16 00         B    53    				call os_erase_file
002F64 F1                  B    54    				pop af
002F65 C9                  B    55    				ret
                           B    56    
002F66 CD 08 46 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002F6A 21 73 66 00         B    59    				ld hl,sector_buffer
002F6E ED5B 73 68 00       B    60    				ld de,(rx_buffer_ptr)
002F73 01000100            B    61    				ld bc,256
002F77 EDB0                B    62    				ldir
002F79 ED53 73 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002F7E 2A 2B 5F 00         B    65    				ld hl,(serial_fileheader+16)
002F82 11000100            B    66    				ld de,256
002F86 AF                  B    67    				xor a
002F87 ED52                B    68    				sbc hl,de
002F89 22 2B 5F 00         B    69    				ld (serial_fileheader+16),hl
002F8D 28 1D               B    70    				jr z,rx_lbr
002F8F 38 1B               B    71    				jr c,rx_lbr
002F91 10 BA               B    72    				djnz rx_lnb
                           B    73    
002F93 01008000            B    74    				ld bc,buffer_blocks*256
002F97 11 73 69 00         B    75    				ld de,buffer_addr
002F9B 21 1B 5F 00         B    76    				ld hl,serial_fileheader
002F9F CD 48 16 00         B    77    				call os_write_bytes_to_file
002FA3 28 96               B    78    				jr z,rx_rnblk
002FA5 F5                  B    79    rxwtd_fail		push af
002FA6 CD 01 46 00         B    80    				call s_badack
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FAA F1                  B    81    				pop af
002FAB C9                  B    82    				ret
                           B    83    				
002FAC CD F0 45 00         B    84    rx_lbr			call s_goodack
002FB0 ED4B 76 68 00       B    85    				ld bc,(serial_file_length_cache
002FB5 11 73 69 00         B    86    				ld de,buffer_addr
002FB9 21 1B 5F 00         B    87    				ld hl,serial_fileheader
002FBD CD 48 16 00         B    88    				call os_write_bytes_to_file
002FC1 C0                  B    89    				ret nz	
                           B    90    				
002FC2 3E20                B    91    rxtd_done		ld a,020h						002FC4 B7                  B    92    				or a
002FC5 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
002FC6 3E21                B    98    rx_nrs			ld a,'!'						002FC8 BE                  B    99    				cp (hl)							002FC9 C2 74 30 00         B   100    				jr nz,notrxe
002FCD 23                  B   101    				inc hl
002FCE 3E20                B   102    				ld a,' '
002FD0 BE                  B   103    				cp (hl)
002FD1 2B                  B   104    				dec hl
002FD2 C2 74 30 00         B   105    				jr nz,notrxe
002FD6 112A0000            B   106    				ld de,02ah						002FDA ED53 07 5F 00       B   107    				ld (serial_filename),de			002FDF CD CA 30 00         B   108    				call rx_get_header
002FE3 C0                  B   109    				ret nz
002FE4 21 1B 5B 00         B   110    				ld hl,ser_rec2_msg
002FE8 CD E5 13 00         B   111    				call os_show_packed_text
002FEC CD F0 45 00         B   112    				call s_goodack
002FF0 3E01                B   113    				ld a,1							002FF2 32 1A 5F 00         B   114    				ld (serial_timeout),a
002FF6 CD 9A 45 00         B   115    				call s_getblock					002FFA 28 07               B   116    				jr z,rxe_fblok
002FFC F5                  B   117    rxe_badblock	push af							002FFD CD 01 46 00         B   118    				call s_badack					003001 F1                  B   119    				pop af
003002 C9                  B   120    				ret
                           B   121    	
003003 2A 75 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003007 1150524F            B   123    				ld de,04f5250h					00300B AF                  B   124    				xor a
00300C 28 04               B   125    				jr z,rxe_ok
00300E 3E1A                B   126    				ld a,1ah						003010 B7                  B   127    				or a
003011 C9                  B   128    				ret
003012 2A 78 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003016 22 FE 5E 00         B   130    				ld (serial_ez80_address),hl
00301A 01000100            B   131    				ld bc,256						00301E DD21 1B 5F 00       B   132    				ld ix,serial_fileheader
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003023 AF                  B   133    				xor a
003024 DDB612              B   134    				or (ix+18)						003027 20 0A               B   135    				jr nz,mtones
003029 DDB611              B   136    				or a,(ix+17)					00302C 20 05               B   137    				jr nz,mtones
00302E 0600                B   138    				ld b,0
003030 DD4E10              B   139    				ld c,(ix+16)					003033 21 73 66 00         B   140    mtones			ld hl,sector_buffer				003037 ED5B FE 5E 00       B   141    				ld de,(serial_ez80_address)		00303C EDB0                B   142    				ldir
                           B   143    				
00303E D5                  B   144    				push de
00303F CD F0 45 00         B   145    				call s_goodack		
003043 DDE1                B   146    				pop ix							003045 2A 2B 5F 00         B   147    				ld hl,(serial_fileheader+16)	003049 11000100            B   148    				ld de,256
00304D AF                  B   149    				xor a
00304E ED52                B   150    				sbc hl,de						003050 28 18               B   151    				jr z,rxe_done
003052 38 16               B   152    				jr c,rxe_done
003054 EB                  B   153    				ex de,hl
003055 ED53 2B 5F 00       B   154    				ld (serial_fileheader+16),de	00305A DD2A FE 5E 00       B   155    				ld ix,(serial_ez80_address)
00305F 01000100            B   156    				ld bc,256
003063 DD09                B   157    				add ix,bc
003065 CD 58 45 00         B   158    				call s_gbloop					003069 C0                  B   159    				ret nz
00306A E1                  B   160    rxe_done		pop hl							00306B CD CE 3B 00         B   161    				call enable_nmi					00306F 2A FE 5E 00         B   162    				ld hl,(serial_ez80_address)
003073 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
003074 CD 11 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
003078 0610                B   169    				ld b,16							00307A 11 07 5F 00         B   170    				ld de,serial_filename
00307E CD F4 11 00         B   171    				call os_copy_ascii_run			003082 79                  B   172    				ld a,c
003083 32 19 5F 00         B   173    				ld (serial_fn_length),a
003087 CD A8 0F 00         B   174    				call os_scan_for_space
                           B   175    				
00308B CD 46 1C 00         B   176    				call hexword_or_bust			00308F CA D3 15 00         B   177    				jp z,os_no_start_addr			003093 ED53 73 68 00       B   178    				ld (data_load_addr),de			003098 2A 90 60 00         B   179    				ld hl,(sys_ram_high)			00309C 2B                  B   180    				dec hl
00309D AF                  B   181    				xor a
00309E ED52                B   182    				sbc hl,de
0030A0 38 04               B   183    				jr c,os_prok
0030A2 3E26                B   184    				ld a,026h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030A4 B7                  B   185    				or a
0030A5 C9                  B   186    				ret
                           B   187    
0030A6 CD CA 30 00         B   188    os_prok			call rx_get_header
0030AA C0                  B   189    				ret nz
                           B   190    
0030AB 21 1B 5B 00         B   191    				ld hl,ser_rec2_msg
0030AF CD E5 13 00         B   192    				call os_show_packed_text
                           B   193    	
0030B3 2A 73 68 00         B   194    				ld hl,(data_load_addr)			0030B7 CD 46 45 00         B   195    				call serial_receive_file
0030BB C0                  B   196    				ret nz							                           B   197    
0030BC ED5B 2B 5F 00       B   198    				ld de,(serial_fileheader+16)	0030C1 ED53 76 68 00       B   199    				ld (filesize_cache),de
0030C6 C3 9C 2C 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
0030CA                     B   204    rx_get_header
0030CA 21 17 5B 00         B   205    				ld hl,ser_rec_msg
0030CE CD E5 13 00         B   206    				call os_show_packed_text
                           B   207    				
0030D2 3E00                B   208    				ld a,0
0030D4 32 3C 5F 00         B   209    				ld (anim_wait_count),a			0030D8 3A 3C 5F 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0030DC 3C                  B   211    				inc a
0030DD 47                  B   212    				ld b,a
0030DE FE06                B   213    				cp 6
0030E0 20 07               B   214    				jr nz,notsix
0030E2 0E20                B   215    				ld c,' '
0030E4 0605                B   216    				ld b,5
0030E6 AF                  B   217    				xor a
0030E7 18 02               B   218    				jr mcharset
0030E9 0E2E                B   219    notsix			ld c,'.'
0030EB 32 3C 5F 00         B   220    mcharset		ld (anim_wait_count),a
0030EF CD 18 1A 00         B   221    				call os_print_multiple_chars
0030F3 CD 64 0F 00         B   222    				call home_cursor
                           B   223    				
0030F7 21 07 5F 00         B   224    				ld hl,serial_filename			0030FB 3E01                B   225    				ld a,1							0030FD CD AB 44 00         B   226    				call serial_get_header
003101 C8                  B   227    				ret z
003102 FE83                B   228    				cp 083h							003104 C0                  B   229    				ret nz
003105 CD 90 44 00         B   230    				call os_get_key_press
003109 FE76                B   231    				cp 076h
00310B 20 CB               B   232    				jr nz,get_hdr_loop
00310D 3E80                B   233    				ld a,080h						00310F B7                  B   234    notsto			or a
003110 C9                  B   235    				ret								                           B   236    							
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
003111                     B   240    clear_serial_filename
                           B   241    
003111 E5                  B   242    				push hl							003112 21 07 5F 00         B   243    				ld hl,serial_filename
003116 01100000            B   244    				ld bc,16
00311A AF                  B   245    				xor a
00311B CD 41 15 00         B   246    				call os_bchl_memfill
00311F E1                  B   247    				pop hl
003120 C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
003121 7E                  B     5    os_cmd_tx		ld a,(hl)						003122 B7                  B     6    				or a
003123 CA CB 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003127 E5                  B     9    				push hl							003128 21 07 5F 00         B    10    				ld hl,serial_filename
00312C 01100000            B    11    				ld bc,16
003130 AF                  B    12    				xor a
003131 CD 41 15 00         B    13    				call os_bchl_memfill
003135 E1                  B    14    				pop hl
                           B    15    			
003136 0610                B    16    				ld b,16							003138 11 07 5F 00         B    17    				ld de,serial_filename
00313C CD F4 11 00         B    18    				call os_copy_ascii_run			003140 79                  B    19    				ld a,c
003141 32 19 5F 00         B    20    				ld (serial_fn_length),a
003145 CD A8 0F 00         B    21    				call os_scan_for_space
                           B    22    							
003149 CD 46 1C 00         B    23    				call hexword_or_bust			00314D CA D3 15 00         B    24    				jp z,os_no_start_addr			003151 ED53 FE 5E 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003156 CD 46 1C 00         B    27    				call hexword_or_bust			00315A CA D7 15 00         B    28    				jp z,os_no_filesize
00315E ED53 01 5F 00       B    29    				ld (serial_file_length),de
003163 21000000            B    30    				ld hl,0
003167 3E07                B    31    				ld a,07h						003169 B7                  B    32    				or a
00316A ED5A                B    33    				adc hl,de
00316C 28 1D               B    34    				jr z,s_error
                           B    35    				
00316E 21 20 5B 00         B    36    				ld hl,ser_send_msg
003172 CD E5 13 00         B    37    				call os_show_packed_text
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
                           B    38    			
003176 ED5B 01 5F 00       B    39    				ld de,(serial_file_length)
00317B 21 07 5F 00         B    40    				ld hl,serial_filename			00317F DD2A FE 5E 00       B    41    				ld ix,(serial_ez80_address)
003184 CD 0F 46 00         B    42    				call serial_send_file
003188 C0                  B    43    				ret nz			
                           B    44    			
003189 3E20                B    45    				ld a,020h						00318B B7                  B    46    s_error			or a
00318C C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
00318D CD 46 1C 00         B     5    os_cmd_t		call hexword_or_bust			003191 28 05               B     6    				jr z,t_no_hex					003193 ED53 2B 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003198 0610                B     9    t_no_hex		ld b,16
00319A C5                  B    10    smaalp			push bc
                           B    11    				
00319B 21 DE 31 00         B    12    				ld hl,gtr_cmd_prefix			00319F CD 1B 0F 00         B    13    				call os_print_string
0031A3 ED5B 2B 61 00       B    14    				ld de,(mem_mon_addr)
0031A8 CD E6 12 00         B    15    				call os_show_hex_address
                           B    16    
0031AC 21 95 61 00         B    17    				ld hl,output_line
0031B0 3620                B    18    				ld (hl),' '
0031B2 23                  B    19    				inc hl
0031B3 3622                B    20    				ld (hl),022h
0031B5 0610                B    21    				ld b,16
0031B7 23                  B    22    mabllp			inc hl
0031B8 1A                  B    23    				ld a,(de)	
0031B9 FE20                B    24    				cp 020h
0031BB 38 04               B    25    				jr c,chchar
0031BD FE7F                B    26    				cp 07fh
0031BF 38 02               B    27    				jr c,nchchar
0031C1 3E7C                B    28    chchar			ld a,07ch
0031C3 77                  B    29    nchchar			ld (hl),a
0031C4 13                  B    30    				inc de
0031C5 10 F0               B    31    				djnz mabllp
                           B    32    
0031C7 ED53 2B 61 00       B    33    				ld (mem_mon_addr),de
0031CC 23                  B    34    				inc hl
0031CD 3622                B    35    				ld (hl),022h
0031CF 23                  B    36    				inc hl
0031D0 360B                B    37    				ld (hl),11
0031D2 23                  B    38    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
0031D3 3600                B    39    				ld (hl),0
0031D5 CD 11 13 00         B    40    				call os_print_output_line
0031D9 C1                  B    41    				pop bc
0031DA 10 BE               B    42    				djnz smaalp
0031DC AF                  B    43    				xor a
0031DD C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0031DE 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0031E1                     B     5    os_cmd_remount
                           B     6    
0031E1 3E00                B     7    				ld a,0							0031E3 CD FD 17 00         B     8    				call os_mount_volumes
0031E7 CD AE 13 00         B     9    				call os_new_line
0031EB AF                  B    10    				xor a
0031EC C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
0031ED                     B     5    os_cmd_vers
                           B     6    
0031ED 21 5A 56 00         B     7    				ld hl,os_version_txt
0031F1 CD 1B 0F 00         B     8    				call os_print_string
                           B     9    			
0031F5 CD 80 41 00         B    10    				call hwsc_get_version
0031F9 D5                  B    11    				push de
0031FA EB                  B    12    				ex de,hl
0031FB CD 05 13 00         B    13    				call os_show_hex_word
                           B    14    				
0031FF 21 7D 56 00         B    15    				ld hl,fwd_slash_txt
003203 CD 1B 0F 00         B    16    				call os_print_string
                           B    17    				
003207 21 68 56 00         B    18    				ld hl,hw_version_txt
00320B CD 1B 0F 00         B    19    				call os_print_string
00320F D1                  B    20    				pop de
003210 CD 05 13 00         B    21    				call os_show_hex_word
                           B    22    				
003214 CD AE 13 00         B    23    				call os_new_line
003218 CD AE 13 00         B    24    				call os_new_line	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
00321C AF                  B    25    				xor a
00321D C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
00321E 21 FC 61 00         B    22    os_cmd_exec		ld hl,script_flags				003222 CB46                B    23    				bit scr_in_script,(hl)
003224 C2 B5 33 00         B    24    				jp nz,script_error
003228 E5                  B    25    				push hl
003229 CD 31 32 00         B    26    				call do_script
00322D E1                  B    27    				pop hl
00322E CB86                B    28    				res scr_in_script,(hl)
003230 C9                  B    29    				ret
                           B    30    				
003231 CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
003233 2A E7 61 00         B    33    				ld hl,(os_args_loc)				003237 11 14 61 00         B    34    				ld de,script_fn					00323B 060D                B    35    				ld b,13
00323D CD F4 11 00         B    36    				call os_copy_ascii_run
003241 AF                  B    37    				xor a
003242 12                  B    38    				ld (de),a
                           B    39    				
003243 CD 30 1A 00         B    40    				call fs_get_dir_cluster			003247 ED53 F3 61 00       B    41    				ld (script_dir),de
                           B    42    				
00324C CD 60 16 00         B    43    				call os_check_volume_format		003250 C0                  B    44    				ret nz
                           B    45    				
003251 CD 81 33 00         B    46    				call new_script
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
003255 3A 59 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			003259 E602                B    52    				and 2
00325B 28 12               B    53    				jr z,no_quit_script	
00325D CD 90 44 00         B    54    				call os_get_key_press
003261 FE21                B    55    				cp 021h							003263 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
003265 21 34 5B 00         B    58    				ld hl,script_aborted_msg
003269 CD E5 13 00         B    59    				call os_show_packed_text
00326D AF                  B    60    				xor a							00326E C9                  B    61    				ret
                           B    62    					
                           B    63    
00326F CD 94 33 00         B    64    no_quit_script	call open_script				003273 C0                  B    65    				ret nz
003274 CD BF 33 00         B    66    				call read_script				003278 C0                  B    67    				ret nz
003279 21 FC 61 00         B    68    				ld hl,script_flags				00327D CB5E                B    69    				bit scr_end,(hl)
00327F 28 02               B    70    				jr z,scr_to_do
003281 AF                  B    71    scr_done		xor a
003282 C9                  B    72    				ret
                           B    73    				
003283 21 43 61 00         B    74    scr_to_do		ld hl,commandstring				003287 7E                  B    75    				ld a,(hl)
003288 FE5B                B    76    				cp '['
00328A 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
00328C 11 C2 56 00         B    79    				ld de,if_command_txt			003290 0603                B    80    				ld b,3
003292 CD D5 11 00         B    81    				call os_compare_strings
003296 28 18               B    82    				jr z,do_exec_if
                           B    83    				
003298 11 C5 56 00         B    84    				ld de,end_command_txt			00329C 0604                B    85    				ld b,4
00329E CD D5 11 00         B    86    				call os_compare_strings
0032A2 28 DD               B    87    				jr z,scr_done
                           B    88    			
0032A4 CD 40 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
0032A8 21 FC 61 00         B    91    exec_scr_next	ld hl,script_flags
0032AC CBCE                B    92    				set scr_find_new_line,(hl)
0032AE 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
0032B0 21 45 61 00         B   104    do_exec_if		ld hl,commandstring+2			0032B4 CD B1 0F 00         B   105    				call os_scan_for_non_space
0032B8 CA B5 33 00         B   106    				jr z,script_error				0032BC 11 FD 61 00         B   107    				ld de,if_name_txt
0032C0 0610                B   108    				ld b,max_if_chars
0032C2 CD F4 11 00         B   109    				call os_copy_ascii_run			0032C6 AF                  B   110    				xor a
0032C7 12                  B   111    				ld (de),a
                           B   112    				
0032C8 CD B1 0F 00         B   113    				call os_scan_for_non_space		0032CC CA B5 33 00         B   114    				jr z,script_error
0032D0 DD21 FC 61 00       B   115    				ld ix,script_flags
0032D5 DDCB0096            B   116    				res scr_if_condition,(ix)
0032D9 7E                  B   117    				ld a,(hl)
0032DA FE3D                B   118    				cp '='
0032DC 28 04               B   119    				jr z,if_equals
0032DE DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
0032E2 CD A8 0F 00         B   122    if_equals		call os_scan_for_space			0032E6 CD B1 0F 00         B   123    				call os_scan_for_non_space		0032EA CA B5 33 00         B   124    				jr z,script_error
0032EE 11 0F 62 00         B   125    				ld de,if_value_txt				0032F2 0610                B   126    				ld b,max_if_chars
0032F4 CD F4 11 00         B   127    				call os_copy_ascii_run
0032F8 AF                  B   128    				xor a
0032F9 12                  B   129    				ld (de),a
                           B   130    				
0032FA CD B1 0F 00         B   131    				call os_scan_for_non_space
0032FE CA B5 33 00         B   132    				jr z,script_error
003302 11 21 62 00         B   133    				ld de,if_label_txt				003306 0610                B   134    				ld b,max_if_chars
003308 CD F4 11 00         B   135    				call os_copy_ascii_run			00330C AF                  B   136    				xor a
00330D 12                  B   137    				ld (de),a						                           B   138    								
00330E 21 FD 61 00         B   139    				ld hl,if_name_txt				003312 CD F7 1A 00         B   140    				call os_get_envar				003316 C2 A8 32 00         B   141    				jp nz,exec_scr_next				                           B   142    								
00331A 21 0F 62 00         B   143    				ld hl,if_value_txt
00331E DD21 FC 61 00       B   144    				ld ix,script_flags
003323 DDCB0056            B   145    				bit scr_if_condition,(ix)
003327 20 0A               B   146    				jr nz,if_cond_diff
003329 CD D5 11 00         B   147    				call os_compare_strings			00332D C2 A8 32 00         B   148    				jp nz,exec_scr_next				003331 18 08               B   149    				jr if_cond_met
003333 CD D5 11 00         B   150    if_cond_diff	call os_compare_strings			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003337 CA A8 32 00         B   151    				jp z,exec_scr_next				                           B   152    
00333B CD 81 33 00         B   153    if_cond_met		call new_script					                           B   154    
00333F CD 94 33 00         B   155    find_if_label	call open_script				003343 C0                  B   156    				ret nz
                           B   157    
003344 CD BF 33 00         B   158    				call read_script
003348 C0                  B   159    				ret nz
003349 21 FC 61 00         B   160    				ld hl,script_flags
00334D CB5E                B   161    				bit scr_end,(hl)
00334F C2 81 32 00         B   162    				jp nz,scr_done
                           B   163    				
003353 21 43 61 00         B   164    				ld hl,commandstring				003357 7E                  B   165    				ld a,(hl)
003358 FE5B                B   166    				cp '['
00335A 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
00335C 23                  B   169    if_find_csb		inc hl
00335D 7E                  B   170    				ld a,(hl)
00335E B7                  B   171    				or a
00335F 28 18               B   172    				jr z,not_a_label				003361 FE5D                B   173    				cp ']'							003363 20 F7               B   174    				jr nz,if_find_csb
003365 3600                B   175    				ld (hl),0						003367 21 44 61 00         B   176    				ld hl,commandstring+1
00336B 11 21 62 00         B   177    				ld de,if_label_txt				00336F 0610                B   178    				ld b,max_if_chars
003371 CD D5 11 00         B   179    				call os_compare_strings
003375 CA A8 32 00         B   180    				jp z,exec_scr_next				                           B   181    
003379 21 FC 61 00         B   182    not_a_label		ld hl,script_flags
00337D CBCE                B   183    				set scr_find_new_line,(hl)		00337F 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
003381 E5                  B   188    new_script		push hl
003382 21000000            B   189    				ld hl,0
003386 22 F6 61 00         B   190    				ld (script_file_offset),hl		00338A 21 FC 61 00         B   191    				ld hl,script_flags
00338E CB8E                B   192    				res scr_find_new_line,(hl)		003390 CB9E                B   193    				res scr_end,(hl)
003392 E1                  B   194    				pop hl
003393 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
003394 CD 30 1A 00         B   199    open_script		call fs_get_dir_cluster			003398 D5                  B   200    				push de
003399 ED5B F3 61 00       B   201    				ld de,(script_dir)				00339E CD 3C 1A 00         B   202    				call fs_update_dir_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   203    				
0033A2 21 14 61 00         B   204    				ld hl,script_fn					0033A6 CD F3 15 00         B   205    				call os_find_file				0033AA ED53 F9 61 00       B   206    				ld (script_length),de			0033AF D1                  B   207    				pop de
0033B0 C0                  B   208    				ret nz
0033B1 79                  B   209    				ld a,c							0033B2 B7                  B   210    				or a
0033B3 28 04               B   211    				jr z,scr_flok
                           B   212    				
0033B5 3E8C                B   213    script_error	ld a,08ch
0033B7 B7                  B   214    				or a
0033B8 C9                  B   215    				ret
                           B   216    				
0033B9 CD 3C 1A 00         B   217    scr_flok		call fs_update_dir_cluster		0033BD AF                  B   218    				xor a
0033BE C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
0033BF 21 43 61 00         B   224    read_script		ld hl,commandstring				0033C3 01500000            B   225    				ld bc,max_buffer_chars			0033C7 3E20                B   226    				ld a,32
0033C9 CD 41 15 00         B   227    				call os_bchl_memfill
                           B   228    				
0033CD 11500000            B   229    				ld de,max_buffer_chars			0033D1 CD 04 16 00         B   230    				call os_set_load_length
                           B   231    				
0033D5 AF                  B   232    				xor a
0033D6 2A F9 61 00         B   233    				ld hl,(script_length)
0033DA ED5B F6 61 00       B   234    				ld de,(script_file_offset)		0033DF 37                  B   235    				scf
0033E0 ED52                B   236    				sbc hl,de						0033E2 30 08               B   237    				jr nc,not_eoscr					0033E4 21 FC 61 00         B   238    				ld hl,script_flags
0033E8 CBDE                B   239    				set scr_end,(hl)				0033EA AF                  B   240    				xor a
0033EB C9                  B   241    				ret
0033EC CD 0C 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
0033F0 21 43 61 00         B   244    				ld hl,commandstring				0033F4 CD 22 16 00         B   245    				call os_read_bytes_from_file
0033F8 B7                  B   246    				or a			
0033F9 28 03               B   247    				jr z,scr_load_ok
0033FB FECC                B   248    				cp 0cch							0033FD C0                  B   249    				ret nz							                           B   250    
0033FE 21 FC 61 00         B   251    scr_load_ok		ld hl,script_flags
003402 CB4E                B   252    				bit scr_find_new_line,(hl)		003404 20 17               B   253    				jr nz,scr_fnl					                           B   254    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003406 21 43 61 00         B   255    				ld hl,commandstring				00340A 0650                B   256    				ld b,max_buffer_chars
00340C 7E                  B   257    scr_fcr			ld a,(hl)
00340D FE20                B   258    				cp 32
00340F 38 05               B   259    				jr c,scr_gotclcr
003411 23                  B   260    				inc hl
003412 10 F8               B   261    				djnz scr_fcr
003414 AF                  B   262    				xor a
003415 C9                  B   263    				ret
003416 3620                B   264    scr_gotclcr		ld (hl),32						003418 23                  B   265    				inc hl
003419 10 FB               B   266    				djnz scr_gotclcr
00341B AF                  B   267    				xor a
00341C C9                  B   268    				ret
                           B   269    
00341D FD2A F6 61 00       B   270    scr_fnl			ld iy,(script_file_offset)
003422 21 43 61 00         B   271    				ld hl,commandstring	
003426 7E                  B   272    scr_find_cr		ld a,(hl)						003427 B7                  B   273    				or a
003428 20 07               B   274    				jr nz,scr_neocl					00342A FD22 F6 61 00       B   275    scr_eocl		ld (script_file_offset),iy
00342F 18 8E               B   276    				jr read_script				
003431 FE20                B   277    scr_neocl		cp 20h							003433 38 05               B   278    				jr c,scr_got_cr
003435 23                  B   279    				inc hl
003436 FD23                B   280    				inc iy
003438 18 EC               B   281    				jr scr_find_cr
                           B   282    				
00343A 7E                  B   283    scr_got_cr		ld a,(hl)
00343B B7                  B   284    				or a							00343C 28 EC               B   285    				jr z,scr_eocl					00343E FE20                B   286    				cp 20h
003440 30 05               B   287    				jr nc,scr_got_ch				003442 23                  B   288    				inc hl
003443 FD23                B   289    				inc iy
003445 18 F3               B   290    				jr scr_got_cr
                           B   291    
003447 FD22 F6 61 00       B   292    scr_got_ch		ld (script_file_offset),iy
00344C 21 FC 61 00         B   293    				ld hl,script_flags				003450 CB8E                B   294    				res scr_find_new_line,(hl)
003452 C3 BF 33 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003456                     B     7    os_cmd_ltn
                           B     8    
003456 AF                  B     9    				xor a
003457 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003458                     B     5    os_cmd_pen
                           B     6    	
003458 0602                B     7    				ld b,2							00345A DD21 A9 5E 00       B     8    				ld ix,current_pen
                           B     9    				
00345F CD 46 1C 00         B    10    chpenlp			call hexword_or_bust			003463 28 0D               B    11    				jr z,pendone					003465 23                  B    12    				inc hl
003466 DD7300              B    13    				ld (ix),e
003469 DD7201              B    14    				ld (ix+1),d
00346C DD23                B    15    				inc ix
00346E DD23                B    16    				inc ix
003470 10 ED               B    17    				djnz chpenlp	
                           B    18    				
003472 CD 8D 0F 00         B    19    pendone			call os_refresh_screen
003476 AF                  B    20    				xor a
003477 C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003478                     B     5    os_cmd_palette
                           B     6    
003478 0610                B     7    				ld b,16							00347A DD21 AD 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
00347F 0E00                B    10    				ld c,0
003481 C5                  B    11    chcollp			push bc
003482 CD 46 1C 00         B    12    				call hexword_or_bust			003486 C1                  B    13    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
003487 28 0E               B    14    				jr z,colrdone					003489 0C                  B    15    				inc c
00348A 23                  B    16    				inc hl
00348B DD7300              B    17    				ld (ix),e
00348E DD7201              B    18    				ld (ix+1),d
003491 DD23                B    19    				inc ix
003493 DD23                B    20    				inc ix
003495 10 EA               B    21    				djnz chcollp
                           B    22    			
003497 79                  B    23    colrdone		ld a,c
003498 B7                  B    24    				or a
003499 20 04               B    25    				jr nz,pal_ok
00349B 3E81                B    26    				ld a,81h						00349D B7                  B    27    				or a
00349E C9                  B    28    				ret
00349F 21 AD 5E 00         B    29    pal_ok			ld hl,pen_palette
0034A3 CD 4F 3D 00         B    30    				call hswc_set_ui_colours	
0034A7 AF                  B    31    				xor a
0034A8 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
0034A9                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
0034A9 CD 49 3A 00         B    15    				call disable_ms_irq
                           B    16    
0034AD 21 8F 60 00         B    17    				ld hl,devices_connected
0034B1 CB8E                B    18    				res 1,(hl)
                           B    19    		
0034B3 CD C5 42 00         B    20    				call init_mouse
0034B7 C0                  B    21    				ret nz
                           B    22    			
0034B8 AF                  B    23    				xor a
0034B9 32 63 62 00         B    24    				ld (mouse_packet_index),a
0034BD 32 64 62 00         B    25    				ld (mouse_buttons),a
0034C1 21000000            B    26    				ld hl,0
0034C5 22 65 62 00         B    27    				ld (mouse_disp_x),hl
0034C9 22 68 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
0034CD 21800200            B    30    				ld hl,window_width_pixels
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
0034D1 11E00100            B    31    				ld de,window_height_pixels
0034D5 CD 2F 14 00         B    32    				call os_set_mouse_window
                           B    33    
0034D9 CD 43 3A 00         B    34    				call enable_ms_irq
                           B    35    
0034DD 21 8F 60 00         B    36    				ld hl,devices_connected
0034E1 CBCE                B    37    				set 1,(hl)
0034E3 AF                  B    38    				xor a
0034E4 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
0034E5                     B     5    os_cmd_vmode
                           B     6    	
0034E5 CD 46 1C 00         B     7    				call hexword_or_bust			0034E9 28 78               B     8    				jr z,vm_no_data					0034EB 7B                  B     9    				ld a,e
                           B    10    
0034EC FE04                B    11    set_vmode		cp 4
0034EE 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
0034F0 2A E2 5E 00         B    14    				ld hl,(font_addr)				0034F4 ED5B E8 5E 00       B    15    				ld de,(video_window_address)
0034F9 ED4B E5 5E 00       B    16    				ld bc,(font_length)
0034FE EDB0                B    17    				ldir
                           B    18    								
003500 32 A8 5E 00         B    19    				ld (video_mode),a
003504 21070000            B    20    				ld hl,7
003508 67                  B    21    				ld h,a
003509 ED6C                B    22    				mlt hl
00350B E5                  B    23    				push hl
00350C DDE1                B    24    				pop ix
00350E 11 67 35 00         B    25    				ld de,mode_param_list
003512 DD19                B    26    				add ix,de
003514 21000000            B    27    				ld hl,0
003518 11000000            B    28    				ld de,0
00351C DD6E00              B    29    				ld l,(ix)
00351F DD6601              B    30    				ld h,(ix+1)
003522 DD5E02              B    31    				ld e,(ix+2)
003525 DD5603              B    32    				ld d,(ix+3)
003528 DD4604              B    33    				ld b,(ix+4)
00352B DDE5                B    34    				push ix
00352D CD 3C 3C 00         B    35    				call set_bitmap_parameters
003531 DDE1                B    36    				pop ix
003533 DD4605              B    37    				ld b,(ix+5)
003536 DD4E06              B    38    				ld c,(ix+6)
003539 CD A2 3C 00         B    39    				call set_charmap_parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B    40    				
00353D 2A E8 5E 00         B    41    				ld hl,(video_window_address)	003541 ED5B E2 5E 00       B    42    				ld de,(font_addr)				003546 ED4B E5 5E 00       B    43    				ld bc,(font_length)				00354B EDB0                B    44    				ldir
                           B    45    				
00354D CD 5B 3D 00         B    46    				call hwsc_clear_screen
                           B    47    				
003551 01080400            B    48    				ld bc,0408h
003555 CD 70 3C 00         B    49    				call set_font_parameters		                           B    50    				
003559 AF                  B    51    				xor a
00355A 32 CF 5E 00         B    52    				ld (active_cursor_image),a		                           B    53    				
00355E C9                  B    54    				ret
                           B    55    
00355F 3E88                B    56    vm_bad_range	ld a,88h
003561 B7                  B    57    				or a
003562 C9                  B    58    				ret
                           B    59    
003563 3E81                B    60    vm_no_data		ld a,81h
003565 B7                  B    61    				or a
003566 C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
003567                     B    66    mode_param_list
                           B    67    
003567 4001E001            B    68    				dw 640/2,480
00356B 00                  B    69    				db 00b
00356C 503C                B    70    				db 80,60
                           B    71    				
00356E 4001F000            B    72    				dw 640/2,240
003572 01                  B    73    				db 01b
003573 501E                B    74    				db 80,30
                           B    75    				
003575 A000E001            B    76    				dw 320/2,480
003579 02                  B    77    				db 10b
00357A 283C                B    78    				db 40,60
                           B    79    				
00357C A000F000            B    80    				dw 320/2,240
003580 03                  B    81    				db 11b
003581 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003583                     B     5    os_cmd_font
                           B     6    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
003583 CD 60 16 00         B     7    				call os_check_volume_format	
003587 C0                  B     8    				ret nz
                           B     9    				
003588 CD C8 28 00         B    10    				call filename_or_bust			00358C 22 73 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
003590 CD 30 1A 00         B    13    				call fs_get_dir_cluster			003594 ED53 76 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
003599 CD BE 16 00         B    16    				call os_root_dir				00359D C0                  B    17    				ret nz
00359E 21 CE 35 00         B    18    				ld hl,fonts_fn
0035A2 CD AE 16 00         B    19    				call os_change_dir
0035A6 20 1A               B    20    				jr nz,no_font
                           B    21    				
0035A8 2A 73 68 00         B    22    				ld hl,(scratch_pad)
0035AC CD F3 15 00         B    23    				call os_find_file				0035B0 20 10               B    24    				jr nz,no_font
                           B    25    				
0035B2 11000700            B    26    				ld de,700h
0035B6 CD 04 16 00         B    27    				call os_set_load_length			                           B    28    
0035BA 2A E2 5E 00         B    29    				ld hl,(font_addr)				0035BE CD 22 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
0035C2 F5                  B    32    no_font			push af
0035C3 ED5B 76 68 00       B    33    				ld de,(scratch_pad+3)			0035C8 CD 3C 1A 00         B    34    				call fs_update_dir_cluster
0035CC F1                  B    35    				pop af
0035CD C9                  B    36    				ret
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
0035CE 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
0035D4 7E                  B     8    os_cmd_set		ld a,(hl)					; i
0035D5 B7                  B     9    				or a
0035D6 28 3B               B    10    				jr z,show_envars
                           B    11    
0035D8 11 76 68 00         B    12    				ld de,scratch_pad+3			; p
0035DC 7E                  B    13    evsalp1			ld a,(hl)
0035DD 12                  B    14    				ld (de),a
0035DE B7                  B    15    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0035DF 28 2E               B    16    				jr z,set_bad_args
0035E1 FE3D                B    17    				cp '='
0035E3 28 04               B    18    				jr z,evsadone1
0035E5 23                  B    19    				inc hl
0035E6 13                  B    20    				inc de
0035E7 18 F3               B    21    				jr evsalp1
0035E9 AF                  B    22    evsadone1		xor a
0035EA 12                  B    23    				ld (de),a
0035EB 13                  B    24    				inc de
0035EC 23                  B    25    				inc hl
0035ED ED53 73 68 00       B    26    				ld (scratch_pad),de
                           B    27    
0035F2 7E                  B    28    evsalp2			ld a,(hl)
0035F3 12                  B    29    				ld (de),a
0035F4 FE20                B    30    				cp ' '
0035F6 28 07               B    31    				jr z,evsadone2
0035F8 B7                  B    32    				or a
0035F9 28 14               B    33    				jr z,set_bad_args
0035FB 23                  B    34    				inc hl
0035FC 13                  B    35    				inc de
0035FD 18 F3               B    36    				jr evsalp2
0035FF AF                  B    37    evsadone2		xor a
003600 12                  B    38    				ld (de),a
                           B    39    				
003601 21 76 68 00         B    40    				ld hl,scratch_pad+3
003605 ED5B 73 68 00       B    41    				ld de,(scratch_pad)
00360A CD 37 1B 00         B    42    				call os_set_envar
00360E C9                  B    43    				ret
                           B    44    
00360F 3E82                B    45    set_bad_args	ld a,82h
003611 B7                  B    46    				or a
003612 C9                  B    47    				ret
                           B    48    				
                           B    49    
003613 21 87 62 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003617 7E                  B    52    show_envlp		ld a,(hl)
003618 FEFF                B    53    				cp 0ffh
00361A 28 12               B    54    				jr z,set_done
00361C E5                  B    55    				push hl
00361D CD 1B 0F 00         B    56    				call os_print_string
003621 CD AE 13 00         B    57    				call os_new_line
003625 E1                  B    58    				pop hl
                           B    59    				
003626 23                  B    60    set_fnl			inc hl
003627 7E                  B    61    				ld a,(hl)
003628 B7                  B    62    				or a
003629 20 FB               B    63    				jr nz,set_fnl
00362B 23                  B    64    				inc hl
00362C 18 E9               B    65    				jr show_envlp
                           B    66    				
00362E AF                  B    67    set_done		xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
00362F C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003630 FD21 41 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003635 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
003639 C3 63 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           A  3061    
00363D C9                  A  3062    os_cmd_unused	ret		; <- dummy command, sho
                           A  3063    
                           A  3064    ;----------------------------------------------
                           A  3065    
00363E                     A  3066    os_get_mem_high
                           A  3067    
00363E 2A 90 60 00         A  3068    		ld hl,(sys_ram_high)
003642 ED5B 93 60 00       A  3069    		ld de,(vram_a_high)
003647 ED4B 96 60 00       A  3070    		ld bc,(vram_b_high)
00364C AF                  A  3071    		xor a
00364D C9                  A  3072    		ret
                           A  3073    								
                           A  3074    ;----------------------------------------------
                           A  3075    ; Drivers
                           A  3076    ;----------------------------------------------
                           A  3077    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
00364E                     B    49    sd_card_driver				; label of driver c
                           B    50    
00364E C3 62 36 00         B    51    	jp sdc_get_id			; $00 : init / get 
003652 C3 2C 38 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
003656 C3 7C 38 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
00365A 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
003662                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
003662 3E01                B    72    				ld a,1							003664 32 B2 39 00         B    73    				ld (sdc_sdc),a			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    74    
003668 CD F9 39 00         B    75    				call sdc_power_off				00366C CD 04 3A 00         B    76    				call sdc_slow_clock				003670 CD D2 39 00         B    77    				call sdc_select_card			                           B    78    
003674 11004000            B    79    				ld de,16384						003678 CD 9B 41 00         B    80    				call hwsc_time_delay
                           B    81    				
00367C CD EE 39 00         B    82    				call sdc_power_on				                           B    83    
003680 11830000            B    84    				ld de,131						003684 CD 9B 41 00         B    85    				call hwsc_time_delay
                           B    86    
003688 CD DD 39 00         B    87    				call sdc_deselect_card			                           B    88    	
00368C 060A                B    89    				ld b,10							00368E CD 6A 39 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
003692 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
003694 CD D2 39 00         B    93    				call sdc_select_card			                           B    94    	
003698 3E40                B    95    				ld a,040h						00369A 01009500            B    96    				ld bc,09500h					00369E 11000000            B    97    				ld de,00000h
0036A2 CD 18 39 00         B    98    				call sdc_send_command		 
0036A6 CD C3 39 00         B    99    				call sdc_get_byte				0036AA CD 3D 39 00         B   100    				call sdc_wait_ncr				0036AE EE01                B   101    				xor 01h							0036B0 C2 71 39 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
0036B4 01401F00            B   105    				ld bc,8000						0036B8 C5                  B   106    sdc_iwl			push bc							0036B9 3E77                B   107    				ld a,077h						0036BB CD 10 39 00         B   108    				call sdc_send_command_null_args
0036BF CD C3 39 00         B   109    				call sdc_get_byte				0036C3 CD C3 39 00         B   110    				call sdc_get_byte				0036C7 3E69                B   111    				ld a,069h						0036C9 CD 10 39 00         B   112    				call sdc_send_command_null_args
0036CD CD C3 39 00         B   113    				call sdc_get_byte
0036D1 C1                  B   114    				pop bc
0036D2 CD 3D 39 00         B   115    				call sdc_wait_ncr				0036D6 CB57                B   116    				bit 2,a							0036D8 20 0C               B   117    				jr nz,mmc_init			
0036DA B7                  B   118    				or a
0036DB 28 2A               B   119    				jr z,sdc_init_done				0036DD 0B                  B   120    				dec bc
0036DE 78                  B   121    				ld a,b
0036DF B1                  B   122    				or c
0036E0 20 D6               B   123    				jr nz,sdc_iwl
0036E2 C3 7F 39 00         B   124    				jp sdc_init_fail
                           B   125    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   126    
0036E6 AF                  B   127    mmc_init		xor a							0036E7 32 B2 39 00         B   128    				ld (sdc_sdc),a
0036EB 01401F00            B   129    				ld bc,8000						0036EF C5                  B   130    mmc_iwl			push bc
0036F0 3E41                B   131    				ld a,041h						0036F2 CD 10 39 00         B   132    				call sdc_send_command_null_args
0036F6 C1                  B   133    				pop bc
0036F7 CD 3D 39 00         B   134    				call sdc_wait_ncr				0036FB B7                  B   135    				or a							0036FC 28 09               B   136    				jr z,sdc_init_done
0036FE 0B                  B   137    				dec bc
0036FF 78                  B   138    				ld a,b
003700 B1                  B   139    				or c
003701 20 EC               B   140    				jr nz,mmc_iwl
003703 C3 7B 39 00         B   141    				jp mmc_init_fail
                           B   142    
003707                     B   143    sdc_init_done
                           B   144    
003707 3E49                B   145    				ld a,049h						003709 CD 10 39 00         B   146    				call sdc_send_command_null_args
00370D CD 3D 39 00         B   147    				call sdc_wait_ncr				003711 B7                  B   148    				or a							003712 C2 83 39 00         B   149    				jp nz,sdc_id_fail
003716 CD 51 39 00         B   150    				call sdc_wait_data_token		00371A B7                  B   151    				or a
00371B C2 83 39 00         B   152    				jp nz,sdc_id_fail
00371F 21 73 66 00         B   153    				ld hl,sector_buffer				003723 CD 19 38 00         B   154    				call sdc_read_id_bytes	
                           B   155    
003727 3E4A                B   156    				ld a,04ah						003729 CD 10 39 00         B   157    				call sdc_send_command_null_args
00372D CD 3D 39 00         B   158    				call sdc_wait_ncr				003731 B7                  B   159    				or a							003732 C2 83 39 00         B   160    				jp nz,sdc_id_fail
003736 CD 51 39 00         B   161    				call sdc_wait_data_token		00373A B7                  B   162    				or a
00373B C2 83 39 00         B   163    				jp nz,sdc_id_fail
00373F 21 83 66 00         B   164    				ld hl,sector_buffer+16			003743 CD 19 38 00         B   165    				call sdc_read_id_bytes
003747 CD DD 39 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
00374B                     B   169    sdc_quit	
                           B   170    
00374B 21 86 66 00         B   171    				ld hl,sector_buffer+013h		00374F 11 93 66 00         B   172    				ld de,sector_buffer+020h
003753 01050000            B   173    				ld bc,5
003757 3A B2 39 00         B   174    				ld a,(sdc_sdc)
00375B B7                  B   175    				or a
00375C 20 01               B   176    				jr nz,sdc_cn5
00375E 03                  B   177    				inc bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00375F EDB0                B   178    sdc_cn5			ldir
003761 E5                  B   179    				push hl
003762 D5                  B   180    				push de
003763 21 97 39 00         B   181    				ld hl,sdc_vnchars
003767 011A0000            B   182    				ld bc,26
00376B EDB0                B   183    				ldir
00376D D1                  B   184    				pop de
00376E E1                  B   185    				pop hl
00376F 13                  B   186    				inc de
003770 13                  B   187    				inc de
003771 7E                  B   188    				ld a,(hl)
003772 CB3F                B   189    				srl a
003774 CB3F                B   190    				srl a
003776 CB3F                B   191    				srl a
003778 CB3F                B   192    				srl a
00377A C630                B   193    				add a,030h						00377C 12                  B   194    				ld (de),a
00377D 13                  B   195    				inc de
00377E 13                  B   196    				inc de
00377F 7E                  B   197    				ld a,(hl)
003780 E60F                B   198    				and 0fh
003782 C630                B   199    				add a,030h
003784 12                  B   200    				ld (de),a						003785 13                  B   201    				inc de
003786 13                  B   202    				inc de
003787 13                  B   203    				inc de
003788 13                  B   204    				inc de
003789 13                  B   205    				inc de
00378A 23                  B   206    				inc hl
00378B 0604                B   207    				ld b,4
00378D 7E                  B   208    sdc_snulp		ld a,(hl)						00378E CB3F                B   209    				srl a
003790 CB3F                B   210    				srl a
003792 CB3F                B   211    				srl a
003794 CB3F                B   212    				srl a
003796 C630                B   213    				add a,030h
003798 FE3A                B   214    				cp 03ah
00379A 38 02               B   215    				jr c,sdc_hvl1
00379C C607                B   216    				add a,07h
00379E 12                  B   217    sdc_hvl1		ld (de),a
00379F 13                  B   218    				inc de
0037A0 7E                  B   219    				ld a,(hl)
0037A1 E60F                B   220    				and 0fh
0037A3 C630                B   221    				add a,030h
0037A5 FE3A                B   222    				cp 03ah
0037A7 38 02               B   223    				jr c,sdc_hvl2
0037A9 C607                B   224    				add a,07h
0037AB 12                  B   225    sdc_hvl2		ld (de),a
0037AC 13                  B   226    				inc de
0037AD 23                  B   227    				inc hl
0037AE 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   230    	
                           B   231    
0037B0 DD21 73 66 00       B   232    				ld ix,sector_buffer				0037B5 DD7E06              B   233    				ld a,(ix+6)
0037B8 E603                B   234    				and 00000011b
0037BA 57                  B   235    				ld d,a
0037BB DD5E07              B   236    				ld e,(ix+7)
0037BE DD7E08              B   237    				ld a,(ix+8)
0037C1 E6C0                B   238    				and 11000000b
0037C3 CB27                B   239    				sla a
0037C5 CB13                B   240    				rl e
0037C7 CB12                B   241    				rl d
0037C9 CB27                B   242    				sla a
0037CB CB13                B   243    				rl e
0037CD CB12                B   244    				rl d							                           B   245    	
0037CF DD7E09              B   246    				ld a,(ix+9)
0037D2 E603                B   247    				and 00000011b
0037D4 47                  B   248    				ld b,a
0037D5 DD7E0A              B   249    				ld a,(ix+10)
0037D8 E680                B   250    				and 10000000b
0037DA CB27                B   251    				sla a
0037DC CB10                B   252    				rl b							                           B   253    	
0037DE 04                  B   254    				inc b
0037DF 04                  B   255    				inc b
0037E0 21000000            B   256    				ld hl,0
0037E4 CB23                B   257    sdc_cmsh		sla e
0037E6 CB12                B   258    				rl d
0037E8 CB15                B   259    				rl l
0037EA CB14                B   260    				rl h
0037EC 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
0037EE DD7E05              B   263    				ld a,(ix+5)
0037F1 E60F                B   264    				and 00001111b					0037F3 28 17               B   265    				jr z,sdc_nbls
0037F5 47                  B   266    				ld b,a
0037F6 CB23                B   267    sdc_blsh		sla e
0037F8 CB12                B   268    				rl d
0037FA CB15                B   269    				rl l
0037FC CB14                B   270    				rl h
0037FE 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
003800 0609                B   273    				ld b,9							003802 CB3C                B   274    sdc_cbsec		srl h
003804 CB1D                B   275    				rr l
003806 CB1A                B   276    				rr d
003808 CB1B                B   277    				rr e
00380A 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
00380C E5                  B   280    sdc_nbls		push hl
00380D C1                  B   281    				pop bc							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00380E 21 93 66 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
003812 CD 0F 3A 00         B   284    				call sdc_fast_clock				003816 AF                  B   285    				xor a
003817 37                  B   286    				scf
003818 C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
003819                     B   292    sdc_read_id_bytes
                           B   293    
003819 0610                B   294    				ld b,16
00381B CD C3 39 00         B   295    sdc_csdlp		call sdc_get_byte
00381F 77                  B   296    				ld (hl),a
003820 23                  B   297    				inc hl
003821 10 F8               B   298    				djnz sdc_csdlp
003823 CD C3 39 00         B   299    				call sdc_get_byte				003827 CD C3 39 00         B   300    				call sdc_get_byte				00382B C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
00382C                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
00382C CD D2 39 00         B   310    				call sdc_select_card
                           B   311    
003830 21 21 61 00         B   312    				ld hl,sector_lba0
003834 5E                  B   313    				ld e,(hl)						003835 23                  B   314    				inc hl
003836 56                  B   315    				ld d,(hl)
003837 23                  B   316    				inc hl
003838 4E                  B   317    				ld c,(hl)
003839 CB23                B   318    				sla e							00383B CB12                B   319    				rl d
00383D CB11                B   320    				rl c
00383F 3E51                B   321    				ld a,051h						003841 0601                B   322    				ld b,001h						003843 CD 18 39 00         B   323    				call sdc_send_command		
003847 CD 3D 39 00         B   324    				call sdc_wait_ncr				00384B B7                  B   325    				or a							00384C C2 87 39 00         B   326    				jp nz,sdc_bcr_error			
003850 CD 51 39 00         B   327    				call sdc_wait_data_token		003854 B7                  B   328    				or a
003855 C2 8B 39 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
003859 21 73 66 00         B   331    				ld hl,sector_buffer				00385D 0600                B   332    				ld b,0
00385F CD C3 39 00         B   333    sdc_rslp		call sdc_get_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003863 77                  B   334    				ld (hl),a
003864 23                  B   335    				inc hl
003865 CD C3 39 00         B   336    				call sdc_get_byte
003869 77                  B   337    				ld (hl),a
00386A 23                  B   338    				inc hl
00386B 10 F2               B   339    				djnz sdc_rslp
00386D CD C3 39 00         B   340    				call sdc_get_byte				003871 CD C3 39 00         B   341    				call sdc_get_byte				                           B   342    
003875 CD DD 39 00         B   343    				call sdc_deselect_card
003879 AF                  B   344    				xor a
00387A 37                  B   345    				scf
00387B C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
00387C                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
00387C CD D2 39 00         B   354    				call sdc_select_card
                           B   355    
003880 21 21 61 00         B   356    				ld hl,sector_lba0
003884 5E                  B   357    				ld e,(hl)						003885 23                  B   358    				inc hl
003886 56                  B   359    				ld d,(hl)
003887 23                  B   360    				inc hl
003888 4E                  B   361    				ld c,(hl)
003889 CB23                B   362    				sla e							00388B CB12                B   363    				rl d
00388D CB11                B   364    				rl c
00388F 3E58                B   365    				ld a,058h						003891 0601                B   366    				ld b,001h						003893 CD 18 39 00         B   367    				call sdc_send_command		
003897 CD 3D 39 00         B   368    				call sdc_wait_ncr				00389B B7                  B   369    				or a							00389C C2 87 39 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
0038A0 CD 6A 39 00         B   372    				call sdc_send_eight_clocks		                           B   373    
0038A4 3EFE                B   374    				ld a,0feh
0038A6 CD B3 39 00         B   375    				call sdc_send_byte				                           B   376    
0038AA 21 73 66 00         B   377    				ld hl,sector_buffer				0038AE 0600                B   378    				ld b,0
0038B0 7E                  B   379    sdc_wslp		ld a,(hl)
0038B1 CD B3 39 00         B   380    				call sdc_send_byte
0038B5 23                  B   381    				inc hl
0038B6 7E                  B   382    				ld a,(hl)
0038B7 CD B3 39 00         B   383    				call sdc_send_byte
0038BB 23                  B   384    				inc hl
0038BC 10 F2               B   385    				djnz sdc_wslp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   386    
0038BE CD 6A 39 00         B   387    				call sdc_send_eight_clocks		0038C2 CD 6A 39 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
0038C6 CD C3 39 00         B   390    				call sdc_get_byte				0038CA E61F                B   391    				and 01fh
0038CC CB3F                B   392    				srl a
0038CE FE02                B   393    				cp 002h
0038D0 C2 8F 39 00         B   394    				jp nz,sdc_write_fail
                           B   395    
0038D4 0150C300            B   396    				ld bc,50000						0038D8 CD C3 39 00         B   397    sdc_wcbsy		call sdc_get_byte				0038DC FEFF                B   398    				cp 0ffh
0038DE 28 09               B   399    				jr z,sdc_nbusy
0038E0 0B                  B   400    				dec bc
0038E1 78                  B   401    				ld a,b
0038E2 B1                  B   402    				or c
0038E3 20 F3               B   403    				jr nz,sdc_wcbsy
0038E5 C3 93 39 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
0038E9 3E4D                B   406    sdc_nbusy		ld a,04dh						0038EB 01000100            B   407    				ld bc,0100h			
0038EF 11000000            B   408    				ld de,0000h
0038F3 CD 18 39 00         B   409    				call sdc_send_command
0038F7 CD 3D 39 00         B   410    				call sdc_wait_ncr				0038FB B7                  B   411    				or a							0038FC C2 8F 39 00         B   412    				jp nz,sdc_write_fail
003900 CD C3 39 00         B   413    				call sdc_get_byte				003904 B7                  B   414    				or a							003905 C2 8F 39 00         B   415    				jp nz,sdc_write_fail		
003909 CD DD 39 00         B   416    				call sdc_deselect_card			00390D AF                  B   417    				xor a
00390E 37                  B   418    				scf
00390F C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
003910                     B   423    sdc_send_command_null_args
                           B   424    
003910 01000100            B   425    				ld bc,0100h				
003914 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
003918                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
003918 F5                  B   433    				push af				
003919 CD 6A 39 00         B   434    				call sdc_send_eight_clocks		00391D F1                  B   435    				pop af
                           B   436    
00391E CD B3 39 00         B   437    				call sdc_send_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003922 79                  B   438    				ld a,c							003923 CD B3 39 00         B   439    				call sdc_send_byte
003927 7A                  B   440    				ld a,d
003928 CD B3 39 00         B   441    				call sdc_send_byte
00392C 7B                  B   442    				ld a,e
00392D CD B3 39 00         B   443    				call sdc_send_byte
003931 3E00                B   444    				ld a,0
003933 CD B3 39 00         B   445    				call sdc_send_byte
003937 78                  B   446    				ld a,b							003938 CD B3 39 00         B   447    				call sdc_send_byte
00393C C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
00393D                     B   452    sdc_wait_ncr
                           B   453    	
00393D C5                  B   454    				push bc
00393E 01000000            B   455    				ld bc,0
003942 CD C3 39 00         B   456    sdc_wncrl		call sdc_get_byte				003946 CB7F                B   457    				bit 7,a							003948 28 05               B   458    				jr z,sdc_gcr
00394A 0B                  B   459    				dec bc
00394B 78                  B   460    			 	ld a,b
00394C B1                  B   461    				or c
00394D 20 F3               B   462    				jr nz,sdc_wncrl
00394F C1                  B   463    sdc_gcr			pop bc
003950 C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
003951                     B   468    sdc_wait_data_token
                           B   469    
003951 C5                  B   470    				push bc
003952 01000000            B   471    				ld bc,0
003956 CD C3 39 00         B   472    sdc_wdt			call sdc_get_byte				00395A FEFE                B   473    				cp 0feh
00395C 28 09               B   474    				jr z,sdc_gdt
00395E 0B                  B   475    				dec bc
00395F 78                  B   476    			 	ld a,b
003960 B1                  B   477    				or c
003961 20 F3               B   478    				jr nz,sdc_wdt
003963 C1                  B   479    				pop bc
003964 3E01                B   480    				ld a,1							003966 C9                  B   481    				ret
                           B   482    
003967 C1                  B   483    sdc_gdt			pop bc
003968 AF                  B   484    				xor a							003969 C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
00396A                     B   489    sdc_send_eight_clocks
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   490    
00396A 3EFF                B   491    				ld a,0ffh
00396C CD B3 39 00         B   492    				call sdc_send_byte
003970 C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
003971                     B   497    init_spi_mode_fail	
                           B   498    
003971 3E00                B   499    				ld a,sdc_error_spi_mode_failed
003973 F5                  B   500    fail_ret		push af
003974 CD DD 39 00         B   501    				call sdc_deselect_card
003978 F1                  B   502    				pop af
003979 B7                  B   503    				or a
00397A C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
00397B                     B   508    mmc_init_fail
                           B   509    
00397B 3E01                B   510    				ld a,sdc_error_bad_init_mmc
00397D 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
00397F                     B   515    sdc_init_fail
                           B   516    
00397F 3E02                B   517    				ld a,sdc_error_bad_init
003981 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
003983                     B   523    sdc_id_fail
                           B   524    
003983 3E03                B   525    				ld a,sdc_error_bad_id
003985 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
003987                     B   530    sdc_bcr_error
                           B   531    
003987 3E04                B   532    				ld a,sdc_error_bad_command_resp
003989 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
00398B                     B   537    sdc_dt_timeout
                           B   538    
00398B 3E05                B   539    				ld a,sdc_error_data_token_timeo
00398D 18 E4               B   540    				jr fail_ret
                           B   541    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   542    ;----------------------------------------------
                           B   543    
00398F                     B   544    sdc_write_fail
                           B   545    	
00398F 3E07                B   546    				ld a,sdc_error_write_failed
003991 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
003993                     B   551    sdc_card_busy_timeout
                           B   552    
003993 3E06                B   553    				ld a,sdc_error_write_timeout
003995 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
003997 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
00399F 3A303030 30303030 
0039A7 30202020 20202000 
0039AF 000000 
                           B   559    
0039B2 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
0039B3                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
0039B3 C5                  C     9    					push bc
0039B4 01030000            C    10    					ld bc,port_sdc_data
0039B8 ED79                C    11    					out (bc),a					                           C    12    	
0039BA 0E01                C    13    					ld c,port_hw_flags			0039BC ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
0039BF 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
0039C1 C1                  C    17    					pop bc
0039C2 C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
0039C3                     C    22    sdc_get_byte
                           C    23    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    24    ; Returns byte read from card in A
                           C    25    
0039C3 3EFF                C    26    					ld a,0ffh
0039C5 CD B3 39 00         C    27    					call sdc_send_byte
0039C9 C5                  C    28    					push bc
0039CA 01030000            C    29    					ld bc,port_sdc_data
0039CE ED78                C    30    					in a,(bc)					0039D0 C1                  C    31    					pop bc
0039D1 C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
0039D2                     C    36    sdc_select_card
                           C    37    	
0039D2 C5                  C    38    					push bc
0039D3 01020000            C    39    					ld bc,port_sdc_ctrl
0039D7 3E02                C    40    					ld a,1<<sdc_cs				0039D9 ED79                C    41    					out (bc),a
0039DB C1                  C    42    					pop bc
0039DC C9                  C    43    					ret
                           C    44    
                           C    45    
0039DD                     C    46    sdc_deselect_card
                           C    47    
0039DD C5                  C    48    					push bc
0039DE 01020000            C    49    					ld bc,port_sdc_ctrl
0039E2 3E82                C    50    					ld a,080h+(1<<sdc_cs)		0039E4 ED79                C    51    					out (bc),a
0039E6 C1                  C    52    					pop bc
                           C    53    				
0039E7 3EFF                C    54    					ld a,0ffh					0039E9 CD B3 39 00         C    55    					call sdc_send_byte
0039ED C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
0039EE                     C    60    sdc_power_on
                           C    61    
0039EE C5                  C    62    					push bc
0039EF 01020000            C    63    					ld bc,port_sdc_ctrl
0039F3 3E81                C    64    					ld a,80h+(1<<sdc_power)		0039F5 ED79                C    65    					out (bc),a
0039F7 C1                  C    66    					pop bc
0039F8 C9                  C    67    					ret
                           C    68    	
                           C    69    
0039F9                     C    70    sdc_power_off
                           C    71    	
0039F9 C5                  C    72    					push bc						0039FA 01020000            C    73    					ld bc,port_sdc_ctrl
0039FE 3E01                C    74    					ld a,1<<sdc_power			003A00 ED79                C    75    					out (bc),a					Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003A02 C1                  C    76    					pop bc						003A03 C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
003A04                     C    82    sdc_slow_clock
                           C    83    
003A04 C5                  C    84    					push bc
003A05 01020000            C    85    					ld bc,port_sdc_ctrl
003A09 3E04                C    86    					ld a,1<<sdc_speed			003A0B ED79                C    87    					out (bc),a
003A0D C1                  C    88    					pop bc
003A0E C9                  C    89    					ret
                           C    90    
                           C    91    
003A0F                     C    92    sdc_fast_clock
                           C    93    	
003A0F C5                  C    94    					push bc
003A10 01020000            C    95    					ld bc,port_sdc_ctrl
003A14 3E84                C    96    					ld a,080h+(1<<sdc_speed)	003A16 ED79                C    97    					out (bc),a
003A18 C1                  C    98    					pop bc
003A19 C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3079    
                           A  3080    
                           A  3081    ;----------------------------------------------
                           A  3082    ; IO routines
                           A  3083    ;----------------------------------------------
                           A  3084    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003A1A                     B     5    set_irq_vector
                           B     6    
003A1A AF                  B     7    				xor a
003A1B ED47                B     8    				ld i,a
003A1D 3EC3                B     9    				ld a,c3h						003A1F 32320000            B    10    				ld (032h),a	
003A23 21 55 3A 00         B    11    				ld hl,int_routine				003A27 22330000            B    12    				ld (033h),hl
003A2B C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003A2C 21 8F 60 00         B    17    enable_os_irqs	ld hl,devices_connected			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003A30 CB46                B    18    				bit 0,(hl)
003A32 C4 3D 3A 00         B    19    				call nz,enable_kb_irq
003A36 CB4E                B    20    				bit 1,(hl)
003A38 C4 43 3A 00         B    21    				call nz,enable_ms_irq
003A3C C9                  B    22    				ret
                           B    23    
                           B    24    
003A3D 3E81                B    25    enable_kb_irq	ld a,10000001b
003A3F ED3905              B    26    				out0 (port_irq_ctrl),a			003A42 C9                  B    27    				ret
                           B    28    
003A43 3E82                B    29    enable_ms_irq	ld a,10000010b
003A45 ED3905              B    30    				out0 (port_irq_ctrl),a			003A48 C9                  B    31    				ret
                           B    32    
003A49 3E02                B    33    disable_ms_irq	ld a,00000010b
003A4B ED3905              B    34    				out0 (port_irq_ctrl),a			003A4E C9                  B    35    				ret
                           B    36    
003A4F 3E3F                B    37    disable_irqs	ld a,00111111b
003A51 ED3905              B    38    				out0 (port_irq_ctrl),a			003A54 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003A55                     B    44    int_routine
003A55 F5                  B    45    				push af							003A56 ED3807              B    46    				in0 a,(port_ps2_ctrl)			003A59 CB67                B    47    				bit 4,a
003A5B C4 6D 3A 00         B    48    				call nz,kb_interrupt_handler
003A5F ED3807              B    49    				in0 a,(port_ps2_ctrl)			003A62 CB6F                B    50    				bit 5,a
003A64 C4 0F 3B 00         B    51    				call nz,ms_interrupt_handler
003A68 F1                  B    52    				pop af
                           B    53    
003A69 FB                  B    54    				ei								003A6A 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003A6D                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003A6D E5                  B    77    				push hl							003A6E C5                  B    78    				push bc
                           B    79    				
003A6F ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003A72 47                  B    81    				ld b,a
                           B    82    
003A73 3A 57 62 00         B    83    				ld a,(key_release_mode)
003A77 B7                  B    84    				or a
003A78 28 20               B    85    				jr z,key_pressed
                           B    86    			
003A7A 78                  B    87    				ld a,b							003A7B FEE0                B    88    				cp 0e0h							003A7D 28 61               B    89    				jr z,kirq_done	
003A7F FEE1                B    90    				cp 0e1h
003A81 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003A83 CD EA 3A 00         B    93    				call qualifiers					003A87 7D                  B    94    				ld a,l
003A88 2F                  B    95    				cpl
003A89 6F                  B    96    				ld l,a
003A8A 3A 59 62 00         B    97    				ld a,(key_mod_flags)
003A8E A5                  B    98    				and l							003A8F 32 59 62 00         B    99    				ld (key_mod_flags),a
003A93 AF                  B   100    				xor a
003A94 32 57 62 00         B   101    				ld (key_release_mode),a
003A98 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003A9A 78                  B   105    key_pressed		ld a,b							003A9B FEE0                B   106    				cp 0e0h							003A9D 28 41               B   107    				jr z,kirq_done	
003A9F FEE1                B   108    				cp 0e1h
003AA1 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003AA3 FEF0                B   111    				cp 0f0h							003AA5 20 08               B   112    				jr nz,not_krel
003AA7 3E01                B   113    				ld a,1							003AA9 32 57 62 00         B   114    				ld (key_release_mode),a			003AAD 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003AAF CD EA 3A 00         B   118    not_krel		call qualifiers					003AB3 3A 59 62 00         B   119    				ld a,(key_mod_flags)			003AB7 B5                  B   120    				or l
003AB8 32 59 62 00         B   121    				ld (key_mod_flags),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003ABC 68                  B   122    				ld l,b
003ABD 01000000            B   123    				ld bc,0
003AC1 3A 55 62 00         B   124    				ld a,(key_buf_wr_idx)
003AC5 4F                  B   125    				ld c,a
003AC6 7D                  B   126    				ld a,l
003AC7 21 35 62 00         B   127    				ld hl,scancode_buffer
003ACB 09                  B   128    				add hl,bc
003ACC 77                  B   129    				ld (hl),a						003ACD 0E10                B   130    				ld c,16
003ACF 09                  B   131    				add hl,bc
003AD0 3A 59 62 00         B   132    				ld a,(key_mod_flags)			003AD4 77                  B   133    				ld (hl),a	
003AD5 3A 55 62 00         B   134    				ld a,(key_buf_wr_idx)
003AD9 3C                  B   135    				inc a
003ADA E60F                B   136    				and 15
003ADC 32 55 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003AE0 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003AE3 CB67                B   140    				bit 4,a	
003AE5 20 88               B   141    				jr nz,key_loop
                           B   142    
003AE7 C1                  B   143    				pop bc
003AE8 E1                  B   144    				pop hl
003AE9 C9                  B   145    				ret
                           B   146    
                           B   147    
003AEA 2E40                B   148    qualifiers		ld l,040h		;apps
003AEC FE2F                B   149    				cp 02fh
003AEE C8                  B   150    				ret z
                           B   151    			
003AEF 2E20                B   152    				ld l,020h		;r gui
003AF1 FE27                B   153    				cp 027h
003AF3 C8                  B   154    				ret z
                           B   155    			
003AF4 2E10                B   156    				ld l,010h		;r shift
003AF6 FE59                B   157    				cp 059h
003AF8 C8                  B   158    				ret z
                           B   159    			
003AF9 2E08                B   160    				ld l,08h		; alt
003AFB FE11                B   161    				cp 011h
003AFD C8                  B   162    				ret z
                           B   163    			
003AFE 2E04                B   164    				ld l,04h		; l gui
003B00 FE1F                B   165    				cp 01fh
                           B   166    			
003B02 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003B04 FE14                B   168    				cp 14h
003B06 C8                  B   169    				ret z
                           B   170    			
003B07 2E01                B   171    				ld l,01h		;l shift
003B09 FE12                B   172    				cp 12h
003B0B C8                  B   173    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   174    				
003B0C 2E00                B   175    				ld l,0
003B0E C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003B0F                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003B0F C5                  B   198    				push bc							003B10 D5                  B   199    				push de							003B11 E5                  B   200    				push hl							                           B   201    							
003B12 11000000            B   202    ms_loop			ld de,0		
003B16 3A 63 62 00         B   203    				ld a,(mouse_packet_index)		003B1A 5F                  B   204    				ld e,a
003B1B 21 5F 62 00         B   205    				ld hl,mouse_packet	
003B1F 19                  B   206    				add hl,de
003B20 ED3806              B   207    				in0 a,(port_mouse_data)
003B23 77                  B   208    				ld (hl),a
                           B   209    								
003B24 21 5E 62 00         B   210    				ld hl,mouse_packet_size
003B28 1C                  B   211    				inc e							003B29 7B                  B   212    				ld a,e
003B2A BE                  B   213    				cp (hl)
003B2B 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003B2D 3A 5F 62 00         B   216    				ld a,(mouse_packet)				003B31 4F                  B   217    				ld c,a	
003B32 E607                B   218    				and 0111b
003B34 32 64 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003B38 11000000            B   221    				ld de,0							003B3C CB61                B   222    				bit 4,c
003B3E 28 01               B   223    				jr z,mxsignpos
003B40 1B                  B   224    				dec de
003B41 3A 60 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003B45 5F                  B   226    				ld e,a
003B46 2A 65 62 00         B   227    				ld hl,(mouse_disp_x)
003B4A 19                  B   228    				add hl,de
003B4B 22 65 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003B4F 11000000            B   231    				ld de,0							003B53 CB69                B   232    				bit 5,c
003B55 28 01               B   233    				jr z,mysignpos
003B57 1B                  B   234    				dec de
003B58 3A 61 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003B5C 5F                  B   236    				ld e,a
003B5D 2A 68 62 00         B   237    				ld hl,(mouse_disp_y)			003B61 AF                  B   238    				xor a							003B62 ED52                B   239    				sbc hl,de
003B64 22 68 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003B68 21 62 62 00         B   242    				ld hl,mouse_packet+3			003B6C 3A 6B 62 00         B   243    				ld a,(mouse_wheel)
003B70 86                  B   244    				add a,(hl)
003B71 32 6B 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003B75 3E01                B   247    				ld a,1
003B77 32 6C 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003B7B AF                  B   250    				xor a
003B7C 32 63 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003B80 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003B83 CB6F                B   254    				bit 5,a
003B85 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003B87 E1                  B   257    				pop hl
003B88 D1                  B   258    				pop de
003B89 C1                  B   259    				pop bc
003B8A C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
003B8B                     B   266    nmi_routine
003B8B CD 27 13 00         B   267    				call os_store_CPU_regs
                           B   268    				
003B8F 21000000            B   269    				ld hl,0
003B93 39                  B   270    				add hl,sp
003B94 7E                  B   271    				ld a,(hl)						003B95 E601                B   272    				and 1
003B97 32 BD 60 00         B   273    				ld (store_adl),a
003B9B 20 0A               B   274    				jr nz,adl_freeze
003B9D 23                  B   275    				inc hl
003B9E 5E                  B   276    				ld e,(hl)						003B9F 23                  B   277    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BA0 56                  B   278    				ld d,(hl)
003BA1 CD 79 15 00         B   279    				call mbase_de
003BA5 18 02               B   280    				jr got_pc
                           B   281    				
003BA7 33                  B   282    adl_freeze		inc sp
003BA8 D1                  B   283    				pop de							003BA9 ED53 B3 60 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
003BAE CD D7 3B 00         B   286    				call disable_nmi
003BB2 ED3906              B   287    				out0 (port_nmi_ack),a			003BB5 3E01                B   288    				ld a,1
003BB7 32 8D 60 00         B   289    				ld (frozen),a
003BBB C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
003BBF                     B   311    set_nmi_vector
                           B   312    
003BBF 3EC3                B   313    				ld a,0c3h						003BC1 32660000            B   314    				ld (066h),a
003BC5 21 8B 3B 00         B   315    				ld hl,nmi_routine				003BC9 22670000            B   316    				ld (067h),hl
003BCD C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
                           B   320    
003BCE ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			003BD1 3EC0                B   322    				ld a,11000000b					003BD3 ED3905              B   323    				out0 (port_irq_ctrl),a
003BD6 C9                  B   324    				ret
                           B   325    
003BD7 3E40                B   326    disable_nmi		ld a,01000000b					003BD9 ED3905              B   327    				out0 (port_irq_ctrl),a
003BDC C9                  B   328    				ret
                           B   329    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003BDD                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003BDD C5                  B    10    				push bc
003BDE 3A 1A 5F 00         B    11    				ld a,(serial_timeout)
003BE2 47                  B    12    				ld b,a
003BE3 3ECC                B    13    rx_set_timer	ld a,cch
003BE5 ED3981              B    14    				out0 (TMR0_RR_L),a				003BE8 3E0C                B    15    				ld a,0ch
003BEA ED3982              B    16    				out0 (TMR0_RR_H),a				003BED 3E03                B    17    				ld a,00000011b					003BEF ED3980              B    18    				out0 (TMR0_CTL),a				003BF2 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003BF5 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003BF7 ED7401              B    22    				tstio 1							003BFA 20 0E               B    23    				jr nz,rx_in_buffer
003BFC AF                  B    24    				xor a
003BFD B0                  B    25    				or b
003BFE 28 13               B    26    				jr z,rx_time_out
003C00 0E80                B    27    				ld c,TMR0_CTL	
003C02 ED7480              B    28    				tstio 128						003C05 28 EE               B    29    				jr z,rx_byte_lp		
003C07 05                  B    30    				dec b
003C08 18 D9               B    31    				jr rx_set_timer
                           B    32    
003C0A 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003C0E ED78                B    34    				in a,(bc)						003C10 C1                  B    35    				pop bc
003C11 BF                  B    36    				cp a							003C12 C9                  B    37    				ret
                           B    38    
003C13 C1                  B    39    rx_time_out		pop bc
003C14 3E83                B    40    				ld a,083h						003C16 B7                  B    41    				or a							003C17 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003C18                     B    48    send_serial_byte
                           B    49    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    50    ; set A to the byte to send
                           B    51    
003C18 C5                  B    52    				push bc
003C19 0EC5                B    53    				ld c,UART0_LSR					003C1B ED7420              B    54    rs232_swait		tstio 020h						003C1E 28 FB               B    55    				jr z,rs232_swait
003C20 01C00000            B    56    				ld bc,UART0_THR
003C24 ED79                B    57    				out (c),a						003C26 C1                  B    58    				pop bc
003C27 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003C28                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003C28 7A                  B    68    				ld a,d
003C29 CD 18 3C 00         B    69    				call send_serial_byte
003C2D 7B                  B    70    				ld a,e
003C2E CD 18 3C 00         B    71    				call send_serial_byte
003C32 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003C33                     B    76    hwsc_flush_serial_buffer
                           B    77    
003C33 C5                  B    78    				push bc
003C34 01C00000            B    79    				ld bc,UART0_RBR
003C38 ED78                B    80    				in a,(bc)						003C3A C1                  B    81    				pop bc
003C3B C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
003C3C                     B     6    set_bitmap_parameters
                           B     7    				
003C3C 78                  B     8    				ld a,b
003C3D 32 FD 5E 00         B     9    				ld (window_pixel_doubling),a
003C41 22 D6 5E 00         B    10    				ld (window_width_bytes),hl		003C45 ED53 D9 5E 00       B    11    				ld (window_height_lines),de
                           B    12    			
003C4A 21000080            B    13    				ld hl,vram_a_addr				003C4E 22 E8 5E 00         B    14    				ld (video_window_address),hl
003C52 21000000            B    15    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003C56 ED5B D6 5E 00       B    16    				ld de,(window_width_bytes)
003C5B ED4B D9 5E 00       B    17    				ld bc,(window_height_lines)
003C60 19                  B    18    cwsblp			add hl,de
003C61 0B                  B    19    				dec bc
003C62 78                  B    20    				ld a,b
003C63 B1                  B    21    				or c
003C64 20 FA               B    22    				jr nz,cwsblp
003C66 22 F4 5E 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
003C6A CD FB 3C 00         B    25    				call os_set_video_hw_regs
                           B    26    				
003C6E AF                  B    27    				xor a
003C6F C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
003C70                     B    32    set_font_parameters
                           B    33    
003C70 78                  B    34    				ld a,b							003C71 32 DC 5E 00         B    35    				ld (font_width_bytes),a
003C75 79                  B    36    				ld a,c
003C76 32 DF 5E 00         B    37    				ld (font_height_lines),a		003C7A 11000000            B    38    				ld de,0
003C7E 59                  B    39    				ld e,c
003C7F 50                  B    40    				ld d,b
003C80 ED5C                B    41    				mlt de
003C82 21000000            B    42    				ld hl,0
003C86 0638                B    43    				ld b,224/4						003C88 19                  B    44    cfslp			add hl,de
003C89 10 FD               B    45    				djnz cfslp
003C8B 22 E5 5E 00         B    46    				ld (font_length),hl
                           B    47    							
003C8F 41                  B    48    				ld b,c
003C90 21000000            B    49    				ld hl,0
003C94 ED5B D6 5E 00       B    50    				ld de,(window_width_bytes)
003C99 19                  B    51    csualp			add hl,de
003C9A 10 FD               B    52    				djnz csualp
003C9C 22 FA 5E 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
003CA0 AF                  B    55    				xor a
003CA1 C9                  B    56    				ret
                           B    57    				
                           B    58    				
                           B    59    
003CA2                     B    60    set_charmap_parameters
                           B    61    
003CA2 79                  B    62    				ld a,c
003CA3 32 D0 5E 00         B    63    				ld (window_rows),a
003CA7 78                  B    64    				ld a,b
003CA8 32 D3 5E 00         B    65    				ld (window_columns),a
                           B    66    				
003CAC 2A E8 5E 00         B    67    				ld hl,(video_window_address)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003CB0 ED5B F4 5E 00       B    68    				ld de,(total_window_bytes)
003CB5 19                  B    69    				add hl,de
003CB6 22 EB 5E 00         B    70    				ld (charmap_address),hl
                           B    71    
003CBA 11000000            B    72    				ld de,0
003CBE 3A D0 5E 00         B    73    				ld a,(window_rows)
003CC2 5F                  B    74    				ld e,a
003CC3 3A D3 5E 00         B    75    				ld a,(window_columns)
003CC7 57                  B    76    				ld d,a
003CC8 ED5C                B    77    				mlt de
003CCA ED53 F7 5E 00       B    78    				ld (total_charmap_bytes),de
003CCF 19                  B    79    				add hl,de
003CD0 22 EE 5E 00         B    80    				ld (attributes_address),hl
003CD4 19                  B    81    				add hl,de
003CD5 22 F1 5E 00         B    82    				ld (cursor_image_address),hl
003CD9 11000000            B    83    				ld de,0
003CDD 3A DF 5E 00         B    84    				ld a,(font_height_lines)
003CE1 5F                  B    85    				ld e,a
003CE2 3A DC 5E 00         B    86    				ld a,(font_width_bytes)
003CE6 57                  B    87    				ld d,a
003CE7 D5                  B    88    				push de
003CE8 ED5C                B    89    				mlt de
003CEA 19                  B    90    				add hl,de
003CEB 22 E2 5E 00         B    91    				ld (font_addr),hl
003CEF D1                  B    92    				pop de
003CF0 16E0                B    93    				ld d,224
003CF2 ED5C                B    94    				mlt de
003CF4 19                  B    95    				add hl,de				
003CF5 22 93 60 00         B    96    				ld (vram_a_high),hl
003CF9 AF                  B    97    				xor a
003CFA C9                  B    98    				ret
                           B    99    				
                           B   100    
003CFB                     B   101    os_set_video_hw_regs
                           B   102    
003CFB DD210018 FF         B   103    				ld ix,video_control				003D00 3A FD 5E 00         B   104    				ld a,(window_pixel_doubling)
003D04 CB27                B   105    				sla a
003D06 F601                B   106    				or 1
003D08 DD7700              B   107    				ld (ix),a						003D0B DD360100            B   108    				ld (ix+1),0						003D0F DD360200            B   109    				ld (ix+2),0						003D13 DD360463            B   110    				ld (ix+4),99					                           B   111    
003D17 DD212010 FF         B   112    				ld ix,bitmap_parameters			003D1C ED5B E8 5E 00       B   113    				ld de,(video_window_address)	003D21 DD1F00              B   114    				ld (ix),de						003D24 DD360401            B   115    				ld (ix+04h),1					003D28 DD360800            B   116    				ld (ix+08h),0					003D2C DD360C00            B   117    				ld (ix+0ch),0					003D30 ED4B D6 5E 00       B   118    				ld bc,(window_width_bytes)		003D35 CB38                B   119    				srl b							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D37 CB19                B   120    				rr c
003D39 CB38                B   121    				srl b
003D3B CB19                B   122    				rr c
003D3D CB38                B   123    				srl b
003D3F CB19                B   124    				rr c
003D41 0D                  B   125    				dec c
003D42 DD7110              B   126    				ld (ix+10h),c
                           B   127    				
003D45 21 AD 5E 00         B   128    				ld hl,pen_palette
003D49 CD 4F 3D 00         B   129    				call hswc_set_ui_colours
                           B   130    				
003D4D AF                  B   131    				xor a							003D4E C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
                           B   136    				
003D4F                     B   137    hswc_set_ui_colours
                           B   138    
003D4F 110000FF            B   139    				ld de,hw_palette
003D53 01200000            B   140    				ld bc,16*2
003D57 EDB0                B   141    				ldir
003D59 AF                  B   142    				xor a							003D5A C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
003D5B                     B   148    hwsc_clear_screen
                           B   149    
003D5B 2A E8 5E 00         B   150    				ld hl,(video_window_address)	003D5F 3A AB 5E 00         B   151    				ld a,(background_colour)
003D63 E60F                B   152    				and 0fh
003D65 47                  B   153    				ld b,a
003D66 07                  B   154    				rlca
003D67 07                  B   155    				rlca
003D68 07                  B   156    				rlca
003D69 07                  B   157    				rlca
003D6A B0                  B   158    				or b
003D6B 77                  B   159    				ld (hl),a
003D6C E5                  B   160    				push hl
003D6D D1                  B   161    				pop de
003D6E 13                  B   162    				inc de
003D6F ED4B F4 5E 00       B   163    				ld bc,(total_window_bytes)
003D74 0B                  B   164    				dec bc
003D75 EDB0                B   165    				ldir
                           B   166    				
003D77 2A EE 5E 00         B   167    				ld hl,(attributes_address)		003D7B ED4B F7 5E 00       B   168    				ld bc,(total_charmap_bytes)
003D80 0B                  B   169    				dec bc
003D81 3600                B   170    				ld (hl),0
003D83 E5                  B   171    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D84 D1                  B   172    				pop de
003D85 13                  B   173    				inc de
003D86 EDB0                B   174    				ldir				
                           B   175    
003D88 2A EB 5E 00         B   176    				ld hl,(charmap_address)			003D8C ED4B F7 5E 00       B   177    				ld bc,(total_charmap_bytes)
003D91 0B                  B   178    				dec bc
003D92 3620                B   179    				ld (hl),' '
003D94 E5                  B   180    				push hl
003D95 D1                  B   181    				pop de
003D96 13                  B   182    				inc de
003D97 EDB0                B   183    				ldir				
                           B   184    
003D99 01000000            B   185    				ld bc,0
003D9D ED43 25 61 00       B   186    				ld (cursor_y),bc
003DA2 AF                  B   187    				xor a							003DA3 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003DA4                     B   193    hwsc_scroll_up	
                           B   194    				
003DA4 C5                  B   195    				push bc
003DA5 D5                  B   196    				push de
003DA6 E5                  B   197    				push hl
                           B   198    
003DA7 2A F4 5E 00         B   199    				ld hl,(total_window_bytes)
003DAB ED5B FA 5E 00       B   200    				ld de,(total_row_bytes)
003DB0 AF                  B   201    				xor a
003DB1 ED52                B   202    				sbc hl,de
003DB3 E5                  B   203    				push hl
003DB4 C1                  B   204    				pop bc							003DB5 2A E8 5E 00         B   205    				ld hl,(video_window_address)
003DB9 ED5B FA 5E 00       B   206    				ld de,(total_row_bytes)
003DBE 19                  B   207    				add hl,de						003DBF ED5B E8 5E 00       B   208    				ld de,(video_window_address)	003DC4 EDB0                B   209    				ldir
                           B   210    				
003DC6 EB                  B   211    				ex de,hl						003DC7 3A AB 5E 00         B   212    				ld a,(background_colour)
003DCB E60F                B   213    				and 0fh
003DCD 4F                  B   214    				ld c,a
003DCE 07                  B   215    				rlca
003DCF 07                  B   216    				rlca
003DD0 07                  B   217    				rlca
003DD1 07                  B   218    				rlca
003DD2 B1                  B   219    				or c
003DD3 77                  B   220    				ld (hl),a
003DD4 ED4B FA 5E 00       B   221    				ld bc,(total_row_bytes)
003DD9 0B                  B   222    				dec bc
003DDA E5                  B   223    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003DDB D1                  B   224    				pop de
003DDC 13                  B   225    				inc de
003DDD EDB0                B   226    				ldir
                           B   227    
003DDF 2A EB 5E 00         B   228    				ld hl,(charmap_address)			003DE3 ED5B D3 5E 00       B   229    				ld de,(window_columns)
003DE8 19                  B   230    				add hl,de
003DE9 ED5B EB 5E 00       B   231    				ld de,(charmap_address)
003DEE ED4B D0 5E 00       B   232    				ld bc,(window_rows)
003DF3 0D                  B   233    				dec c
003DF4 3A D3 5E 00         B   234    				ld a,(window_columns)
003DF8 47                  B   235    				ld b,a
003DF9 ED4C                B   236    				mlt bc
003DFB C5                  B   237    				push bc
003DFC EDB0                B   238    				ldir
003DFE C1                  B   239    				pop bc							                           B   240    
003DFF 2A EB 5E 00         B   241    				ld hl,(charmap_address)			003E03 09                  B   242    				add hl,bc
003E04 3620                B   243    				ld (hl),' '
003E06 ED4B D3 5E 00       B   244    				ld bc,(window_columns)
003E0B 0B                  B   245    				dec bc
003E0C E5                  B   246    				push hl
003E0D D1                  B   247    				pop de
003E0E 13                  B   248    				inc de
003E0F EDB0                B   249    				ldir
                           B   250    					
003E11 2A EE 5E 00         B   251    				ld hl,(attributes_address)		003E15 ED5B D3 5E 00       B   252    				ld de,(window_columns)
003E1A 19                  B   253    				add hl,de
003E1B ED5B EE 5E 00       B   254    				ld de,(attributes_address)
003E20 ED4B D0 5E 00       B   255    				ld bc,(window_rows)
003E25 0D                  B   256    				dec c
003E26 3A D3 5E 00         B   257    				ld a,(window_columns)
003E2A 47                  B   258    				ld b,a
003E2B ED4C                B   259    				mlt bc
003E2D C5                  B   260    				push bc
003E2E EDB0                B   261    				ldir
003E30 C1                  B   262    				pop bc			
                           B   263    
003E31 2A EE 5E 00         B   264    				ld hl,(attributes_address)		003E35 09                  B   265    				add hl,bc
003E36 3600                B   266    				ld (hl),0
003E38 ED4B D3 5E 00       B   267    				ld bc,(window_columns)
003E3D 0B                  B   268    				dec bc
003E3E E5                  B   269    				push hl
003E3F D1                  B   270    				pop de
003E40 13                  B   271    				inc de
003E41 EDB0                B   272    				ldir
                           B   273    
003E43 E1                  B   274    				pop hl
003E44 D1                  B   275    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E45 C1                  B   276    				pop bc
003E46 AF                  B   277    				xor a							003E47 C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
003E48                     B   291    hwsc_plot_char
003E48 E5                  B   292    				push hl							003E49 F5                  B   293    				push af
003E4A 3A A9 5E 00         B   294    				ld a,(current_pen)
003E4E 32 CD 5E 00         B   295    				ld (plotchar_colour),a
003E52 18 02               B   296    				jr plotc_go
                           B   297    				
003E54                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
003E54 E5                  B   300    				push hl
003E55 F5                  B   301    				push af							003E56 3A D0 5E 00         B   302    plotc_go		ld a,(window_rows)				003E5A 3D                  B   303    				dec a
003E5B B9                  B   304    				cp c							003E5C 38 08               B   305    				jr c,win_err
003E5E 3A D3 5E 00         B   306    				ld a,(window_columns)
003E62 3D                  B   307    				dec a
003E63 B8                  B   308    				cp b
003E64 30 06               B   309    				jr nc,win_ok
003E66 F1                  B   310    win_err			pop af
003E67 E1                  B   311    				pop hl
003E68 3E82                B   312    				ld a,82h						003E6A B7                  B   313    				or a
003E6B C9                  B   314    				ret
                           B   315    				
003E6C F1                  B   316    win_ok			pop af
003E6D D5                  B   317    				push de
003E6E C5                  B   318    				push bc
003E6F DDE5                B   319    				push ix
003E71 FDE5                B   320    				push iy
003E73 2A DF 5E 00         B   321    				ld hl,(font_height_lines)		003E77 D620                B   322    				sub a,32
003E79 67                  B   323    				ld h,a
003E7A C620                B   324    				add a,32
003E7C ED6C                B   325    				mlt hl							003E7E ED5B E2 5E 00       B   326    				ld de,(font_addr)
003E83 19                  B   327    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E84 E5                  B   328    				push hl
003E85 DDE1                B   329    				pop ix							                           B   330    				
003E87 11000000            B   331    				ld de,0
003E8B 2A FA 5E 00         B   332    				ld hl,(total_row_bytes)			003E8F 5D                  B   333    				ld e,l
003E90 51                  B   334    				ld d,c
003E91 ED5C                B   335    				mlt de							003E93 69                  B   336    				ld l,c							003E94 ED6C                B   337    				mlt hl							003E96 29                  B   338    				add hl,hl						003E97 29                  B   339    				add hl,hl
003E98 29                  B   340    				add hl,hl
003E99 29                  B   341    				add hl,hl
003E9A 29                  B   342    				add hl,hl
003E9B 29                  B   343    				add hl,hl
003E9C 29                  B   344    				add hl,hl
003E9D 29                  B   345    				add hl,hl
003E9E 19                  B   346    				add hl,de						003E9F ED5B DC 5E 00       B   347    				ld de,(font_width_bytes)
003EA4 50                  B   348    				ld d,b	
003EA5 ED5C                B   349    				mlt de							003EA7 19                  B   350    				add hl,de						003EA8 ED5B E8 5E 00       B   351    				ld de,(video_window_address)
003EAD 19                  B   352    				add hl,de
003EAE E5                  B   353    				push hl
003EAF FDE1                B   354    				pop iy							                           B   355    				
003EB1 2A D3 5E 00         B   356    				ld hl,(window_columns)			003EB5 61                  B   357    				ld h,c							003EB6 ED6C                B   358    				mlt hl
003EB8 11000000            B   359    				ld de,0
003EBC 58                  B   360    				ld e,b
003EBD 19                  B   361    				add hl,de
003EBE EB                  B   362    				ex de,hl
003EBF 2A EB 5E 00         B   363    				ld hl,(charmap_address)
003EC3 19                  B   364    				add hl,de
003EC4 77                  B   365    				ld (hl),a
                           B   366    
003EC5 3A CD 5E 00         B   367    				ld a,(plotchar_colour)			003EC9 2A EE 5E 00         B   368    				ld hl,(attributes_address)
003ECD 19                  B   369    				add hl,de
003ECE 77                  B   370    				ld (hl),a
                           B   371    
003ECF 57                  B   372    				ld d,a				
003ED0 E6F0                B   373    				and 0f0h
003ED2 20 0E               B   374    				jr nz,notransbg
003ED4 3A AB 5E 00         B   375    				ld a,(background_colour)
003ED8 E60F                B   376    				and 0fh
003EDA 47                  B   377    				ld b,a
003EDB 07                  B   378    				rlca
003EDC 07                  B   379    				rlca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003EDD 07                  B   380    				rlca
003EDE 07                  B   381    				rlca
003EDF 4F                  B   382    				ld c,a
003EE0 18 06               B   383    				jr gotbg
003EE2 4F                  B   384    notransbg		ld c,a							003EE3 0F                  B   385    				rrca
003EE4 0F                  B   386    				rrca
003EE5 0F                  B   387    				rrca
003EE6 0F                  B   388    				rrca
003EE7 47                  B   389    				ld b,a							003EE8 7A                  B   390    gotbg			ld a,d
003EE9 E60F                B   391    				and 0fh
003EEB 20 0E               B   392    				jr nz,notransfg
003EED 3A AB 5E 00         B   393    				ld a,(background_colour)
003EF1 E60F                B   394    				and 0fh
003EF3 57                  B   395    				ld d,a
003EF4 07                  B   396    				rlca
003EF5 07                  B   397    				rlca
003EF6 07                  B   398    				rlca
003EF7 07                  B   399    				rlca
003EF8 5F                  B   400    				ld e,a
003EF9 18 06               B   401    				jr gotfg
003EFB 57                  B   402    notransfg		ld d,a							003EFC 07                  B   403    				rlca
003EFD 07                  B   404    				rlca
003EFE 07                  B   405    				rlca
003EFF 07                  B   406    				rlca
003F00 5F                  B   407    				ld e,a							                           B   408    				
003F01 D9                  B   409    gotfg			exx
003F02 3A DF 5E 00         B   410    				ld a,(font_height_lines)
003F06 47                  B   411    				ld b,a
003F07 2A D6 5E 00         B   412    				ld hl,(window_width_bytes)
003F0B ED5B DC 5E 00       B   413    				ld de,(font_width_bytes)
003F10 AF                  B   414    				xor a
003F11 ED52                B   415    				sbc hl,de
003F13 EB                  B   416    				ex de,hl
                           B   417    						
003F14 D9                  B   418    charloop		exx
003F15 DD6E00              B   419    				ld l,(ix)						003F18 CB25                B   420    				sla l
003F1A 79                  B   421    				ld a,c
003F1B 30 01               B   422    				jr nc,nbgmsb7
003F1D 7B                  B   423    				ld a,e
003F1E CB25                B   424    nbgmsb7			sla l
003F20 30 03               B   425    				jr nc,nfgmsb6
003F22 B2                  B   426    				or d
003F23 18 01               B   427    				jr gotpixcol76
003F25 B0                  B   428    nfgmsb6			or b
003F26 FD7700              B   429    gotpixcol76		ld (iy),a
003F29 FD23                B   430    				inc iy
                           B   431    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F2B CB25                B   432    				sla l
003F2D 79                  B   433    				ld a,c
003F2E 30 01               B   434    				jr nc,nbgmsb5
003F30 7B                  B   435    				ld a,e
003F31 CB25                B   436    nbgmsb5			sla l
003F33 30 03               B   437    				jr nc,nfgmsb4
003F35 B2                  B   438    				or d
003F36 18 01               B   439    				jr gotpixcol54
003F38 B0                  B   440    nfgmsb4			or b
003F39 FD7700              B   441    gotpixcol54		ld (iy),a
003F3C FD23                B   442    				inc iy
                           B   443    				
003F3E CB25                B   444    				sla l
003F40 79                  B   445    				ld a,c
003F41 30 01               B   446    				jr nc,nbgmsb3
003F43 7B                  B   447    				ld a,e
003F44 CB25                B   448    nbgmsb3			sla l
003F46 30 03               B   449    				jr nc,nfgmsb2
003F48 B2                  B   450    				or d
003F49 18 01               B   451    				jr gotpixcol32
003F4B B0                  B   452    nfgmsb2			or b
003F4C FD7700              B   453    gotpixcol32		ld (iy),a
003F4F FD23                B   454    				inc iy
                           B   455    				
003F51 CB25                B   456    				sla l
003F53 79                  B   457    				ld a,c
003F54 30 01               B   458    				jr nc,nbgmsb1
003F56 7B                  B   459    				ld a,e
003F57 CB25                B   460    nbgmsb1			sla l
003F59 30 03               B   461    				jr nc,nfgmsb0
003F5B B2                  B   462    				or d
003F5C 18 01               B   463    				jr gotpixcol10
003F5E B0                  B   464    nfgmsb0			or b
003F5F FD7700              B   465    gotpixcol10		ld (iy),a
003F62 FD23                B   466    				inc iy
                           B   467    				
003F64 DD23                B   468    				inc ix
003F66 D9                  B   469    				exx
003F67 FD19                B   470    				add iy,de
003F69 10 A9               B   471    				djnz charloop
003F6B D9                  B   472    				exx 
                           B   473    				
003F6C FDE1                B   474    				pop iy
003F6E DDE1                B   475    				pop ix
003F70 C1                  B   476    				pop bc
003F71 D1                  B   477    				pop de
003F72 E1                  B   478    				pop hl
003F73 AF                  B   479    				xor a
003F74 C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F75                     B   484    hwsc_remove_cursor
                           B   485    
003F75 ED4B 25 61 00       B   486    				ld bc,(cursor_y)
003F7A CD 1D 40 00         B   487    				call hwsc_get_charmap_addr_xy
003F7E 1A                  B   488    				ld a,(de)
003F7F 32 CD 5E 00         B   489    				ld (plotchar_colour),a
003F83 7E                  B   490    				ld a,(hl)				
003F84 C3 54 3E 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
003F88                     B   494    hwsc_draw_cursor
                           B   495    
003F88 21 CF 5E 00         B   496    				ld hl,active_cursor_image
003F8C 3A CE 5E 00         B   497    				ld a,(req_cursor_image)
003F90 BE                  B   498    				cp (hl)
003F91 C4 E5 3F 00         B   499    				call nz,hwsc_set_cursor_image
                           B   500    
003F95 ED4B 25 61 00       B   501    				ld bc,(cursor_y)
003F9A 2A FA 5E 00         B   502    				ld hl,(total_row_bytes)			003F9E 5D                  B   503    				ld e,l
003F9F 51                  B   504    				ld d,c
003FA0 ED5C                B   505    				mlt de
003FA2 69                  B   506    				ld l,c
003FA3 ED6C                B   507    				mlt hl
003FA5 29                  B   508    				add hl,hl
003FA6 29                  B   509    				add hl,hl
003FA7 29                  B   510    				add hl,hl
003FA8 29                  B   511    				add hl,hl
003FA9 29                  B   512    				add hl,hl
003FAA 29                  B   513    				add hl,hl
003FAB 29                  B   514    				add hl,hl
003FAC 29                  B   515    				add hl,hl
003FAD 19                  B   516    				add hl,de
003FAE ED5B DC 5E 00       B   517    				ld de,(font_width_bytes)
003FB3 50                  B   518    				ld d,b
003FB4 ED5C                B   519    				mlt de		
003FB6 19                  B   520    				add hl,de						003FB7 ED5B E8 5E 00       B   521    				ld de,(video_window_address)
003FBC 19                  B   522    				add hl,de						003FBD E5                  B   523    				push hl
003FBE FDE1                B   524    				pop iy
                           B   525    				
003FC0 ED4B DF 5E 00       B   526    				ld bc,(font_height_lines)
003FC5 DD2A F1 5E 00       B   527    				ld ix,(cursor_image_address)	003FCA ED5B D6 5E 00       B   528    				ld de,(window_width_bytes)
                           B   529    
003FCF ED2300              B   530    curlp2			lea hl,iy+0
003FD2 0604                B   531    				ld b,4							003FD4 7E                  B   532    curlp1			ld a,(hl)
003FD5 DDAE00              B   533    				xor (ix)
003FD8 77                  B   534    				ld (hl),a
003FD9 DD23                B   535    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FDB 23                  B   536    				inc hl
003FDC 10 F6               B   537    				djnz curlp1
                           B   538    											
003FDE FD19                B   539    				add iy,de
003FE0 0D                  B   540    				dec c
003FE1 20 EC               B   541    				jr nz,curlp2
                           B   542    
003FE3 AF                  B   543    				xor a							003FE4 C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
                           B   548    
003FE5                     B   549    hwsc_set_cursor_image
                           B   550    
003FE5 32 CF 5E 00         B   551    				ld (active_cursor_image),a
003FE9 D620                B   552    				sub a,32						003FEB 2A DF 5E 00         B   553    				ld hl,(font_height_lines)
003FEF 67                  B   554    				ld h,a
003FF0 ED6C                B   555    				mlt hl
003FF2 ED5B E2 5E 00       B   556    				ld de,(font_addr)
003FF7 19                  B   557    				add hl,de
003FF8 ED5B F1 5E 00       B   558    				ld de,(cursor_image_address)	003FFD 3A DF 5E 00         B   559    				ld a,(font_height_lines)
004001 47                  B   560    				ld b,a
004002 C5                  B   561    fclp2			push bc
                           B   562    
004003 4E                  B   563    				ld c,(hl)
004004 0604                B   564    				ld b,4							004006 3E00                B   565    fclp1			ld a,0
004008 CB21                B   566    				sla c
00400A 30 02               B   567    				jr nc,nopixl
00400C F6F0                B   568    				or a,0f0h						00400E CB21                B   569    nopixl			sla c
004010 30 02               B   570    				jr nc,nopixr
004012 F60F                B   571    				or a,0fh
004014 12                  B   572    nopixr			ld (de),a
004015 13                  B   573    				inc de
004016 10 EE               B   574    				djnz fclp1
                           B   575    			
004018 23                  B   576    				inc hl
004019 C1                  B   577    				pop bc
00401A 10 E6               B   578    				djnz fclp2
00401C C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
00401D                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   588    				
00401D 11000000            B   589    				ld de,0
004021 3A D3 5E 00         B   590    				ld a,(window_columns)			004025 5F                  B   591    				ld e,a							004026 51                  B   592    				ld d,c							004027 ED5C                B   593    				mlt de
004029 7B                  B   594    				ld a,e
00402A 80                  B   595    				add a,b
00402B 5F                  B   596    				ld e,a
00402C 30 01               B   597    				jr nc,choffh_ok
00402E 14                  B   598    				inc d
00402F 2A EB 5E 00         B   599    choffh_ok		ld hl,(charmap_address)
004033 19                  B   600    				add hl,de
004034 E5                  B   601    				push hl
004035 2A EE 5E 00         B   602    				ld hl,(attributes_address)
004039 19                  B   603    				add hl,de
00403A EB                  B   604    				ex de,hl
00403B E1                  B   605    				pop hl
00403C AF                  B   606    				xor a							00403D C9                  B   607    				ret
                           B   608    								
                           B   609    ;----------------------------------------------
                           B   610    
00403E                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
00403E C5                  B   615    				push bc
00403F D5                  B   616    				push de
004040 E5                  B   617    				push hl
                           B   618    
004041 3A 25 61 00         B   619    				ld a,(cursor_y)
004045 2A D3 5E 00         B   620    				ld hl,(window_columns)
004049 67                  B   621    				ld h,a
00404A ED6C                B   622    				mlt hl
00404C 11000000            B   623    				ld de,0
004050 58                  B   624    				ld e,b
004051 19                  B   625    				add hl,de
004052 EB                  B   626    				ex de,hl
004053 D5                  B   627    				push de
004054 2A EB 5E 00         B   628    				ld hl,(charmap_address)
004058 19                  B   629    				add hl,de						                           B   630    
004059 E5                  B   631    				push hl
00405A D1                  B   632    				pop de
00405B 1B                  B   633    				dec de							00405C 3A D3 5E 00         B   634    				ld a,(window_columns)
004060 90                  B   635    				sub b
004061 01000000            B   636    				ld bc,0
004065 4F                  B   637    				ld c,a							004066 C5                  B   638    				push bc
004067 EDB0                B   639    				ldir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004069 C1                  B   640    				pop bc
00406A 3E20                B   641    				ld a,32
00406C 12                  B   642    				ld (de),a						                           B   643    				
00406D 2A EE 5E 00         B   644    				ld hl,(attributes_address)		004071 D1                  B   645    				pop de
004072 19                  B   646    				add hl,de
004073 E5                  B   647    				push hl
004074 D1                  B   648    				pop de
004075 1B                  B   649    				dec de							004076 EDB0                B   650    				ldir							004078 3A AB 5E 00         B   651    				ld a,(background_colour)
00407C 12                  B   652    				ld (de),a						                           B   653    
00407D CD E3 40 00         B   654    				call hwsc_redraw_line			                           B   655    
004081 E1                  B   656    				pop hl
004082 D1                  B   657    				pop de
004083 C1                  B   658    				pop bc
004084 C9                  B   659    				ret
                           B   660    
                           B   661    
                           B   662    
004085                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
004085 C5                  B   667    				push bc
004086 D5                  B   668    				push de
004087 E5                  B   669    				push hl
                           B   670    	
004088 21 26 61 00         B   671    				ld hl,cursor_x				
00408C 3A D3 5E 00         B   672    				ld a,(window_columns)
004090 3D                  B   673    				dec a
004091 BE                  B   674    				cp (hl)			
004092 28 4B               B   675    				jr z,chright_end
                           B   676    
004094 46                  B   677    				ld b,(hl)
004095 11000000            B   678    				ld de,0
004099 57                  B   679    				ld d,a
00409A 14                  B   680    				inc d
00409B 3A 25 61 00         B   681    				ld a,(cursor_y)
00409F 5F                  B   682    				ld e,a
0040A0 ED5C                B   683    				mlt de
0040A2 D5                  B   684    				push de 
                           B   685    				
0040A3 C5                  B   686    				push bc
0040A4 2A EB 5E 00         B   687    				ld hl,(charmap_address)
0040A8 ED4B D3 5E 00       B   688    				ld bc,(window_columns)
0040AD 0B                  B   689    				dec bc
0040AE 0B                  B   690    				dec bc
0040AF 09                  B   691    				add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0040B0 C1                  B   692    				pop bc
                           B   693    				
0040B1 19                  B   694    				add hl,de						0040B2 E5                  B   695    				push hl
0040B3 D1                  B   696    				pop de
0040B4 13                  B   697    				inc de							0040B5 3A D3 5E 00         B   698    				ld a,(window_columns)
0040B9 3D                  B   699    				dec a
0040BA 90                  B   700    				sub b
0040BB 47                  B   701    				ld b,a
0040BC C5                  B   702    				push bc							0040BD 7E                  B   703    mchrlp			ld a,(hl)
0040BE 12                  B   704    				ld (de),a
0040BF 2B                  B   705    				dec hl
0040C0 1B                  B   706    				dec de
0040C1 10 FA               B   707    				djnz mchrlp
                           B   708    
0040C3 2A EE 5E 00         B   709    				ld hl,(attributes_address)		0040C7 ED4B D3 5E 00       B   710    				ld bc,(window_columns)
0040CC 0B                  B   711    				dec bc
0040CD 0B                  B   712    				dec bc
0040CE 09                  B   713    				add hl,bc
                           B   714    
0040CF C1                  B   715    				pop bc
0040D0 D1                  B   716    				pop de
0040D1 19                  B   717    				add hl,de						0040D2 E5                  B   718    				push hl
0040D3 D1                  B   719    				pop de
0040D4 13                  B   720    				inc de							0040D5 7E                  B   721    mattrlp			ld a,(hl)
0040D6 12                  B   722    				ld (de),a
0040D7 2B                  B   723    				dec hl
0040D8 1B                  B   724    				dec de
0040D9 10 FA               B   725    				djnz mattrlp
                           B   726    
0040DB CD E3 40 00         B   727    				call hwsc_redraw_line			                           B   728    
0040DF E1                  B   729    chright_end		pop hl	
0040E0 D1                  B   730    				pop de
0040E1 C1                  B   731    				pop bc
0040E2 C9                  B   732    				ret
                           B   733    
                           B   734    ;----------------------------------------------
                           B   735    
0040E3                     B   736    hwsc_redraw_line
                           B   737    				
0040E3 3A 25 61 00         B   738    				ld a,(cursor_y)
0040E7 4F                  B   739    				ld c,a
                           B   740    		
0040E8                     B   741    hwsc_redraw_ui_line
                           B   742    
0040E8 ED5B D3 5E 00       B   743    				ld de,(window_columns)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0040ED 51                  B   744    				ld d,c
0040EE ED5C                B   745    				mlt de
0040F0 0600                B   746    				ld b,0							0040F2 2A EE 5E 00         B   747    rs_xloop		ld hl,(attributes_address)		0040F6 19                  B   748    				add hl,de
0040F7 7E                  B   749    				ld a,(hl)						0040F8 32 CD 5E 00         B   750    				ld (plotchar_colour),a
0040FC 2A EB 5E 00         B   751    				ld hl,(charmap_address)
004100 19                  B   752    				add hl,de
004101 7E                  B   753    				ld a,(hl)				
004102 CD 54 3E 00         B   754    				call hwsc_plotchar_specific_att
004106 13                  B   755    				inc de
004107 04                  B   756    				inc b
004108 3A D3 5E 00         B   757    				ld a,(window_columns)
00410C B8                  B   758    				cp b
00410D 20 E3               B   759    				jr nz,rs_xloop
00410F C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
004110                     B   764    hwsc_charline_to_command_string	
                           B   765    								
004110 ED5B D3 5E 00       B   766    				ld de,(window_columns)
004115 3A 25 61 00         B   767    				ld a,(cursor_y)					004119 57                  B   768    				ld d,a
00411A ED5C                B   769    				mlt de
00411C 2A EB 5E 00         B   770    				ld hl,(charmap_address)
004120 19                  B   771    				add hl,de
004121 11 43 61 00         B   772    				ld de,commandstring				004125 ED4B D3 5E 00       B   773    				ld bc,(window_columns)
00412A EDB0                B   774    				ldir
00412C C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
00412D C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
00412E 0E01                B   781    				ld c,1
004130 ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
004133 0E01                B   784    				ld c,port_hw_flags
004135 ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
004138 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
00413A C1                  B   788    				pop bc
00413B BF                  B   789    				cp a							00413C C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
00413D                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
00413D 3E48                B     9    					ld a,01001000b				00413F ED39AA              B    10    					out0 (CS0_CTL),a
004142 3E00                B    11    					ld a,000h					004144 ED39A8              B    12    					out0 (CS0_LBR),a
004147 3EFF                B    13    					ld a,0ffh	
004149 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
00414C 3E58                B    16    					ld a,01011000b
00414E ED39AD              B    17    					out0 (CS1_CTL),a			004151 3E00                B    18    					ld a,0
004153 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004156 3EFF                B    23    					ld a,0ffh
004158 ED399F              B    24    					out0 (PC_DDR),a				00415B AF                  B    25    					xor a
00415C ED39A0              B    26    					out0 (PC_ALT1),a
00415F ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004162 3EFF                B    29    					ld a,0ffh					004164 ED39A3              B    30    					out0 (PD_DDR),a				004167 AF                  B    31    					xor a	
004168 ED39A4              B    32    					out0 (PD_ALT1),a			00416B 3E0F                B    33    					ld a,00fh				
00416D ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004170 ED3892              B    38    					in0 a,(TMR_ISS)
004173 E6FC                B    39    					and 11111100b
004175 F601                B    40    					or  00000001b
004177 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
00417A AF                  B    46    					xor a
00417B 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
00417F C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004180 11000000            B    53    hwsc_get_version	ld de,0
004184 0610                B    54    					ld b,16
004186 78                  B    55    gethwvlp			ld a,b
004187 3D                  B    56    					dec a
004188 ED3908              B    57    					out0 (port_selector),a		00418B DB01                B    58    					in a,(port_hw_flags)		00418D CB27                B    59    					sla a
00418F CB13                B    60    					rl e
004191 CB12                B    61    					rl d
004193 10 F1               B    62    					djnz gethwvlp				                           B    63    									
004195 212E0000            B    64    					ld hl,prose_version
004199 BF                  B    65    					cp a						00419A C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
00419B                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
00419B CD A7 41 00         B    78    					call set_timeout
00419F CD B8 41 00         B    79    twaitlp				call test_timeout
0041A3 28 FA               B    80    					jr z,twaitlp
0041A5 AF                  B    81    					xor a						0041A6 C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
0041A7 7B                  B    86    set_timeout			ld a,e						0041A8 ED3981              B    87    					out0 (TMR0_RR_L),a			0041AB 7A                  B    88    					ld a,d
0041AC ED3982              B    89    					out0 (TMR0_RR_H),a			0041AF 3E03                B    90    					ld a,00000011b				0041B1 ED3980              B    91    					out0 (TMR0_CTL),a			0041B4 ED3880              B    92    					in0 a,(TMR0_CTL)			0041B7 C9                  B    93    					ret
                           B    94    			
0041B8 ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			0041BB CB7F                B    96    					bit 7,a
0041BD C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
0041BE                     B   101    hwsc_read_rtc
0041BE D5                  B   102    					push de
0041BF C5                  B   103    					push bc
0041C0 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041C2 0608                B   105    					ld b,8
0041C4 21 86 60 00         B   106    					ld hl,time_data
0041C8 ED92                B   107    					inimr						0041CA 0EE0                B   108    					ld c,RTC_SEC
0041CC 0600                B   109    					ld b,0
0041CE 1E08                B   110    					ld e,8
0041D0 21 86 60 00         B   111    					ld hl,time_data
0041D4 ED78                B   112    timevloop			in a,(bc)					0041D6 BE                  B   113    					cp (hl)						0041D7 20 E7               B   114    					jr nz,hwsc_rtc_rlp			0041D9 23                  B   115    					inc hl
0041DA 0C                  B   116    					inc c
0041DB 1D                  B   117    					dec e
0041DC 20 F6               B   118    					jr nz,timevloop
0041DE 21 86 60 00         B   119    					ld hl,time_data
0041E2 C1                  B   120    					pop bc
0041E3 D1                  B   121    					pop de
0041E4 BF                  B   122    					cp a						0041E5 C9                  B   123    					ret
                           B   124    
                           B   125    
0041E6                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
0041E6 E5                  B   130    					push hl
0041E7 C5                  B   131    					push bc
0041E8 3E21                B   132    					ld a,00100001b				0041EA ED39ED              B   133    					out0 (RTC_CTRL),a
0041ED 0EE0                B   134    					ld c,RTC_SEC
0041EF 0608                B   135    					ld b,8
0041F1 ED93                B   136    					otimr
0041F3 3E20                B   137    					ld a,00100000b				0041F5 ED39ED              B   138    					out0 (RTC_CTRL),a
0041F8 C1                  B   139    					pop bc
0041F9 E1                  B   140    					pop hl
0041FA BF                  B   141    					cp a						0041FB C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
0041FC                     B   151    init_keyboard
                           B   152    
0041FC 11004000            B   153    			ld de,16384							004200 CD 9B 41 00         B   154    			call hwsc_time_delay
004204 F3                  B   155    			di
004205 CD BA 42 00         B   156    			call purge_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004209 CD 13 42 00         B   157    			call rs_keyboard
00420D FB                  B   158    			ei
00420E D0                  B   159    			ret nc
00420F 3E8B                B   160    			ld a,08bh							004211 B7                  B   161    			or a
004212 C9                  B   162    			ret
                           B   163    			
                           B   164    			
004213                     B   165    rs_keyboard
                           B   166    
004213 3EFF                B   167    			ld a,0ffh
004215 CD 32 42 00         B   168    			call write_to_keyboard
004219 30 04               B   169    			jr nc,kb_connected
00421B 3E8A                B   170    			ld a,08ah							00421D B7                  B   171    			or a
00421E C9                  B   172    			ret
                           B   173    
00421F                     B   174    kb_connected
                           B   175    			
00421F 0605                B   176    			ld b,5
004221 C5                  B   177    kb_initlp	push bc
004222 CD 9E 42 00         B   178    			call wait_kb_byte					004226 C1                  B   179    			pop bc
004227 D8                  B   180    			ret c
004228 FEAA                B   181    			cp 0aah
00422A 28 04               B   182    			jr z,kb_postok
00422C 10 F3               B   183    			djnz kb_initlp						00422E 37                  B   184    			scf									00422F C9                  B   185    			ret
                           B   186    			
                           B   187    			
004230 AF                  B   188    kb_postok	xor a
004231 C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
004232                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
004232 4F                  B   198    			ld c,a								004233 3E01                B   199    			ld a,01b							004235 ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
004238 110A0000            B   202    			ld de,10
00423C CD 9B 41 00         B   203    			call hwsc_time_delay				                           B   204    
004240 3E03                B   205    			ld a,11b
004242 ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
004245 3E02                B   208    			ld a,10b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004247 ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
00424A CD 1A 44 00         B   211    			call wait_kb_clk_high
                           B   212    			
00424E 1601                B   213    			ld d,1								004250 0608                B   214    			ld b,8								004252 CD ED 43 00         B   215    kdoloop		call wait_kb_clk_low	
004256 D8                  B   216    			ret c
004257 AF                  B   217    			xor a
004258 CBCF                B   218    			set 1,a
00425A CB41                B   219    			bit 0,c
00425C 28 03               B   220    			jr z,kdbzero
00425E CB8F                B   221    			res 1,a
004260 14                  B   222    			inc d
004261 ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				004264 CD 1A 44 00         B   224    			call wait_kb_clk_high
004268 D8                  B   225    			ret c
004269 CB19                B   226    			rr c
00426B 10 E5               B   227    			djnz kdoloop
                           B   228    
00426D CD ED 43 00         B   229    			call wait_kb_clk_low
004271 D8                  B   230    			ret c
004272 AF                  B   231    			xor a
004273 CB42                B   232    			bit 0,d
004275 20 02               B   233    			jr nz,kparone
004277 CBCF                B   234    			set 1,a
004279 ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				00427C CD 1A 44 00         B   236    			call wait_kb_clk_high
004280 D8                  B   237    			ret c
                           B   238    			
004281 CD ED 43 00         B   239    			call wait_kb_clk_low
004285 D8                  B   240    			ret c
004286 AF                  B   241    			xor a
004287 ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
00428A CD E9 43 00         B   244    			call wait_kb_data_low				00428E D8                  B   245    			ret c
00428F CD ED 43 00         B   246    			call wait_kb_clk_low				004293 D8                  B   247    			ret c
                           B   248    				
004294 CD 16 44 00         B   249    			call wait_kb_data_high				004298 D8                  B   250    			ret c
004299 CD 1A 44 00         B   251    			call wait_kb_clk_high				00429D C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
00429E                     B   258    wait_kb_byte
                           B   259    
00429E 11008000            B   260    			ld de,8000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042A2 CD A7 41 00         B   261    			call set_timeout					                           B   262    
0042A6 ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
0042A9 CB67                B   264    			bit 4,a
0042AB 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
0042AD CD B8 41 00         B   267    			call test_timeout
0042B1 28 F3               B   268    			jr z,wait_kloop
0042B3 37                  B   269    			scf									0042B4 C9                  B   270    			ret
                           B   271    			
0042B5 ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			0042B8 B7                  B   273    			or a
0042B9 C9                  B   274    			ret
                           B   275    
                           B   276    
                           B   277    ;----------------------------------------------
                           B   278    
0042BA                     B   279    purge_keyboard
                           B   280    			
0042BA ED3807              B   281    			in0 a,(port_ps2_ctrl)
0042BD CB67                B   282    			bit 4,a
0042BF C8                  B   283    			ret z
0042C0 ED3802              B   284    			in0 a,(port_keyboard_data)			0042C3 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
0042C5                     B   295    init_mouse		
0042C5 F3                  B   296    			di
0042C6 CD DE 43 00         B   297    			call purge_mouse
0042CA CD D4 42 00         B   298    			call rs_mouse
0042CE FB                  B   299    			ei
0042CF D0                  B   300    			ret nc
0042D0 3E8B                B   301    			ld a,08bh							0042D2 B7                  B   302    			or a
0042D3 C9                  B   303    			ret
                           B   304    
                           B   305    
0042D4                     B   306    rs_mouse
0042D4 3EFF                B   307    			ld a,0ffh							0042D6 CD 56 43 00         B   308    			call write_to_mouse		
0042DA 30 04               B   309    			jr nc,mouse_connected
0042DC 3E8A                B   310    			ld a,08ah							0042DE B7                  B   311    			or a
0042DF C9                  B   312    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   313    
                           B   314    
0042E0                     B   315    mouse_connected
                           B   316    
0042E0 0605                B   317    			ld b,5
0042E2 C5                  B   318    ms_initlp	push bc
0042E3 CD C2 43 00         B   319    			call wait_mouse_byte				0042E7 C1                  B   320    			pop bc
0042E8 D8                  B   321    			ret c
0042E9 FEAA                B   322    			cp 0aah
0042EB 28 04               B   323    			jr z,ms_postok
0042ED 10 F3               B   324    			djnz ms_initlp
0042EF 18 43               B   325    			jr bad_mouse
                           B   326    			
0042F1 CD C2 43 00         B   327    ms_postok	call wait_mouse_byte				0042F5 D8                  B   328    			ret c
0042F6 B7                  B   329    			or a
0042F7 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
0042F9 3E03                B   332    			ld a,3
0042FB 32 5E 62 00         B   333    			ld (mouse_packet_size),a
                           B   334    
0042FF 21 3D 5F 00         B   335    			ld hl,intellimouse_seq
004303 0606                B   336    			ld b,6
004305 CD 38 43 00         B   337    			call mouse_sequence
004309 D8                  B   338    			ret c
                           B   339    			
00430A 3EF2                B   340    			ld a,0f2h
00430C CD 47 43 00         B   341    			call write_mouse_wait_ack			004310 D8                  B   342    			ret c
004311 CD C2 43 00         B   343    			call wait_mouse_byte				004315 D8                  B   344    			ret c
004316 32 5D 62 00         B   345    			ld (mouse_id),a
00431A B7                  B   346    			or a								00431B 28 0A               B   347    			jr z,standard_mouse
00431D FE03                B   348    			cp 3
00431F 20 13               B   349    			jr nz,bad_mouse						004321 3E04                B   350    			ld a,4
004323 32 5E 62 00         B   351    			ld (mouse_packet_size),a
                           B   352    
004327                     B   353    standard_mouse
                           B   354    		
004327 21 43 5F 00         B   355    			ld hl,mouse_settings_seq
00432B 0606                B   356    			ld b,6
00432D CD 38 43 00         B   357    			call mouse_sequence
004331 D8                  B   358    			ret c
004332 AF                  B   359    			xor a								004333 C9                  B   360    			ret
                           B   361    
                           B   362    
004334 3E89                B   363    bad_mouse	ld a,089h							004336 B7                  B   364    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004337 C9                  B   365    			ret
                           B   366    
                           B   367    
004338                     B   368    mouse_sequence
                           B   369    
004338 7E                  B   370    mseqlp		ld a,(hl)
004339 E5                  B   371    			push hl
00433A C5                  B   372    			push bc
00433B CD 47 43 00         B   373    			call write_mouse_wait_ack
00433F C1                  B   374    			pop bc
004340 E1                  B   375    			pop hl
004341 D8                  B   376    			ret c
004342 23                  B   377    			inc hl
004343 10 F3               B   378    			djnz mseqlp
004345 AF                  B   379    			xor a
004346 C9                  B   380    			ret
                           B   381    
                           B   382    
004347                     B   383    write_mouse_wait_ack
                           B   384    			
004347 CD 56 43 00         B   385    			call write_to_mouse
00434B D8                  B   386    			ret c
00434C CD C2 43 00         B   387    			call wait_mouse_byte				004350 D8                  B   388    			ret c
004351 FEFA                B   389    			cp 0fah								004353 C8                  B   390    			ret z
004354 37                  B   391    			scf
004355 C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
004356                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
004356 4F                  B   400    			ld c,a								004357 3E04                B   401    			ld a,0100b							004359 ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
00435C 110A0000            B   404    			ld de,10
004360 CD 9B 41 00         B   405    			call hwsc_time_delay				                           B   406    
004364 3E0C                B   407    			ld a,1100b
004366 ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
004369 3E08                B   410    			ld a,1000b
00436B ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
00436E CD 22 44 00         B   413    			call wait_mouse_clk_high
                           B   414    			
004372 1601                B   415    			ld d,1								004374 0608                B   416    			ld b,8								Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004376 CD F5 43 00         B   417    mdoloop		call wait_mouse_clk_low	
00437A D8                  B   418    			ret c
00437B AF                  B   419    			xor a
00437C CBDF                B   420    			set 3,a
00437E CB41                B   421    			bit 0,c
004380 28 03               B   422    			jr z,mdbzero
004382 CB9F                B   423    			res 3,a
004384 14                  B   424    			inc d
004385 ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				004388 CD 22 44 00         B   426    			call wait_mouse_clk_high
00438C D8                  B   427    			ret c
00438D CB19                B   428    			rr c
00438F 10 E5               B   429    			djnz mdoloop
                           B   430    
004391 CD F5 43 00         B   431    			call wait_mouse_clk_low
004395 D8                  B   432    			ret c
004396 AF                  B   433    			xor a
004397 CB42                B   434    			bit 0,d
004399 20 02               B   435    			jr nz,parone
00439B CBDF                B   436    			set 3,a
00439D ED3907              B   437    parone		out0 (port_ps2_ctrl),a				0043A0 CD 22 44 00         B   438    			call wait_mouse_clk_high
0043A4 D8                  B   439    			ret c
                           B   440    			
0043A5 CD F5 43 00         B   441    			call wait_mouse_clk_low
0043A9 D8                  B   442    			ret c
0043AA AF                  B   443    			xor a
0043AB ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
0043AE CD F1 43 00         B   446    			call wait_mouse_data_low			0043B2 D8                  B   447    			ret c
0043B3 CD F5 43 00         B   448    			call wait_mouse_clk_low				0043B7 D8                  B   449    			ret c
                           B   450    				
0043B8 CD 1E 44 00         B   451    			call wait_mouse_data_high			0043BC D8                  B   452    			ret c
0043BD CD 22 44 00         B   453    			call wait_mouse_clk_high			0043C1 C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
0043C2                     B   459    wait_mouse_byte
                           B   460    
0043C2 11008000            B   461    			ld de,8000h
0043C6 CD A7 41 00         B   462    			call set_timeout					                           B   463    
0043CA ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
0043CD CB6F                B   465    			bit 5,a
0043CF 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
0043D1 CD B8 41 00         B   468    			call test_timeout
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043D5 28 F3               B   469    			jr z,wait_mloop
0043D7 37                  B   470    			scf									0043D8 C9                  B   471    			ret
                           B   472    			
0043D9 ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				0043DC B7                  B   474    			or a
0043DD C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
0043DE                     B   479    purge_mouse
                           B   480    			
0043DE ED3807              B   481    			in0 a,(port_ps2_ctrl)
0043E1 CB6F                B   482    			bit 5,a
0043E3 C8                  B   483    			ret z
0043E4 ED3806              B   484    			in0 a,(port_mouse_data)			; r
0043E7 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
0043E9                     B   491    wait_kb_data_low
                           B   492    
0043E9 3E02                B   493    			ld a,2
0043EB 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
0043ED                     B   496    wait_kb_clk_low
                           B   497    
0043ED 3E01                B   498    			ld a,1
0043EF 18 06               B   499    			jr test_lo_ps2			
                           B   500    
0043F1                     B   501    wait_mouse_data_low
                           B   502    
0043F1 3E08                B   503    			ld a,8
0043F3 18 02               B   504    			jr test_lo_ps2
                           B   505    
0043F5                     B   506    wait_mouse_clk_low
                           B   507    
0043F5 3E04                B   508    			ld a,4
                           B   509    
0043F7 C5                  B   510    test_lo_ps2	push bc
0043F8 D5                  B   511    			push de
0043F9 4F                  B   512    			ld c,a
0043FA 11004000            B   513    			ld de,04000h					; a
0043FE CD A7 41 00         B   514    			call set_timeout
                           B   515    
004402 CD B8 41 00         B   516    nkb_lw		call test_timeout				; t
004406 28 04               B   517    			jr z,nkb_lnto
004408 D1                  B   518    			pop de
004409 C1                  B   519    			pop bc
00440A 37                  B   520    			scf								; c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00440B C9                  B   521    			ret
00440C ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
00440F A1                  B   523    			and c
004410 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
004412 D1                  B   526    			pop de
004413 C1                  B   527    			pop bc
004414 AF                  B   528    			xor a
004415 C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
                           B   533    
004416                     B   534    wait_kb_data_high
                           B   535    
004416 3E02                B   536    			ld a,2
004418 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
00441A                     B   539    wait_kb_clk_high
                           B   540    
00441A 3E01                B   541    			ld a,1
00441C 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
00441E                     B   545    wait_mouse_data_high
                           B   546    			
00441E 3E08                B   547    			ld a,8
004420 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
004422                     B   550    wait_mouse_clk_high
                           B   551    
004422 3E04                B   552    			ld a,4
                           B   553    
004424 C5                  B   554    test_hi_ps2	push bc
004425 D5                  B   555    			push de
004426 4F                  B   556    			ld c,a
004427 11004000            B   557    			ld de,04000h					; a
00442B CD A7 41 00         B   558    			call set_timeout
                           B   559    
00442F CD B8 41 00         B   560    nkb_hw		call test_timeout				; t
004433 28 04               B   561    			jr z,nkb_hnto
004435 D1                  B   562    			pop de
004436 C1                  B   563    			pop bc
004437 37                  B   564    			scf								; c
004438 C9                  B   565    			ret
004439 ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
00443C A1                  B   567    			and c
00443D 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
00443F D1                  B   570    			pop de
004440 C1                  B   571    			pop bc
004441 AF                  B   572    			xor a							; c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004442 C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           A  3089    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004443                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004443 D5                  B    13    				push de
004444 51                  B    14    				ld d,c
004445 E5                  B    15    				push hl
004446 CD A2 44 00         B    16    wait_kbuf		call get_kb_buffer_indexes		00444A BE                  B    17    				cp (hl)							00444B 28 F9               B    18    				jr z,wait_kbuf		
                           B    19    			
00444D 01000000            B    20    new_key			ld bc,0							004451 4F                  B    21    				ld c,a
004452 21 35 62 00         B    22    				ld hl,scancode_buffer	
004456 09                  B    23    				add hl,bc
                           B    24    												004457 4E                  B    25    				ld c,(hl)						004458 11100000            B    26    				ld de,16
00445C 19                  B    27    				add hl,de						00445D 7E                  B    28    				ld a,(hl)						                           B    29    				
00445E 0600                B    30    				ld b,0
004460 CB4F                B    31    				bit 1,a
004462 20 1B               B    32    				jr nz,gotkdone					                           B    33    								
004464 21 41 5E 00         B    34    				ld hl,alted_keymap				004468 CB5F                B    35    				bit 3,a
00446A 20 0C               B    36    				jr nz,got_kmap	
                           B    37    								
00446C 21 7D 5D 00         B    38    				ld hl,unshifted_keymap			004470 E611                B    39    				and 011h			
004472 28 04               B    40    				jr z,got_kmap
004474 21 DF 5D 00         B    41    				ld hl,shifted_keymap			                           B    42    			
004478 79                  B    43    got_kmap		ld a,c							004479 FE62                B    44    				cp 062h
00447B 30 02               B    45    				jr nc,gotkdone
00447D 09                  B    46    				add hl,bc						Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
00447E 46                  B    47    				ld b,(hl)						                           B    48    			
00447F 3A 56 62 00         B    49    gotkdone		ld a,(key_buf_rd_idx)			004483 3C                  B    50    				inc a							004484 E60F                B    51    				and 15
004486 32 56 62 00         B    52    				ld (key_buf_rd_idx),a			00448A 79                  B    53    				ld a,c							00448B E1                  B    54    				pop hl
00448C 4A                  B    55    				ld c,d
00448D D1                  B    56    				pop de
00448E BF                  B    57    				cp a							00448F C9                  B    58    				ret
                           B    59    			
                           B    60    		
                           B    61    ;----------------------------------------------
                           B    62    			
004490                     B    63    os_get_key_press
                           B    64    				
                           B    65    ; Gets a keycode on-the-fly - If one is availab
                           B    66    ; On return, ZF is set if there is a new scanco
                           B    67    ; (ASCII code is modifed by shift key status), 
                           B    68    			
                           B    69    			
004490 D5                  B    70    				push de
004491 51                  B    71    				ld d,c
004492 E5                  B    72    				push hl
004493 CD A2 44 00         B    73    				call get_kb_buffer_indexes		004497 BE                  B    74    				cp (hl)							004498 20 B3               B    75    				jr nz,new_key					00449A 3E81                B    76    				ld a,81h			
00449C 47                  B    77    				ld b,a
00449D B7                  B    78    				or a
00449E E1                  B    79    				pop hl
00449F 4A                  B    80    				ld c,d
0044A0 D1                  B    81    				pop de
0044A1 C9                  B    82    				ret
                           B    83    			
                           B    84    ;----------------------------------------------
                           B    85    			
0044A2                     B    86    get_kb_buffer_indexes
                           B    87    			
                           B    88    			
0044A2 21 55 62 00         B    89    				ld hl,key_buf_wr_idx			0044A6 3A 56 62 00         B    90    				ld a,(key_buf_rd_idx)			0044AA C9                  B    91    				ret
                           B    92    			
                           B    93    		
                           B    94    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
0044AB                     B    21    serial_get_header
                           B    22    
0044AB 32 1A 5F 00         B    23    				ld (serial_timeout),a			0044AF 22 04 5F 00         B    24    				ld (serial_fn_addr),hl
0044B3 CD 33 3C 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
0044B7 CD 9A 45 00         B    27    				call s_getblock					0044BB 28 0C               B    28    				jr z,s_gbfhok					0044BD F5                  B    29    				push af							0044BE 3A 3B 5F 00         B    30    				ld a,(serial_transfer_started)
0044C2 B7                  B    31    				or a							0044C3 C4 01 46 00         B    32    				call nz,s_badack				0044C7 F1                  B    33    				pop af
0044C8 C9                  B    34    				ret
                           B    35    	
0044C9 21 2F 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			0044CD 11 87 66 00         B    37    				ld de,sector_buffer+20			0044D1 060C                B    38    				ld b,12
0044D3 CD D5 11 00         B    39    				call os_compare_strings
0044D7 20 0F               B    40    				jr nz,s_nfhdr
0044D9 06E0                B    41    				ld b,256-32						0044DB 21 93 66 00         B    42    				ld hl,sector_buffer+32
0044DF 7E                  B    43    s_chdr			ld a,(hl)
0044E0 23                  B    44    				inc hl
0044E1 B7                  B    45    				or a
0044E2 20 04               B    46    				jr nz,s_nfhdr
0044E4 10 F9               B    47    				djnz s_chdr
0044E6 18 08               B    48    				jr s_fhcsok
                           B    49    				
0044E8 CD 01 46 00         B    50    s_nfhdr			call s_badack					0044EC 3E85                B    51    				ld a,085h						0044EE B7                  B    52    				or a
0044EF C9                  B    53    				ret
                           B    54    		
0044F0 21 83 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044F4 11 2B 5F 00         B    56    				ld de,serial_fileheader+16
0044F8 01040000            B    57    				ld bc,4
0044FC EDB0                B    58    				ldir
                           B    59    				
0044FE 21 73 66 00         B    60    				ld hl,sector_buffer
004502 11 1B 5F 00         B    61    				ld de,serial_fileheader			004506 0610                B    62    				ld b,16							004508 7E                  B    63    s_tuclp			ld a,(hl)						004509 B7                  B    64    				or a
00450A 28 0B               B    65    				jr z,s_ffhswz	
00450C CD 0F 12 00         B    66    				call os_uppercasify
004510 12                  B    67    				ld (de),a
004511 23                  B    68    				inc hl
004512 13                  B    69    				inc de
004513 10 F3               B    70    				djnz s_tuclp
004515 18 04               B    71    				jr s_tucdone
004517 12                  B    72    s_ffhswz		ld (de),a
004518 13                  B    73    				inc de
004519 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
00451B 2A 04 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			00451F 7E                  B    77    				ld a,(hl)
004520 FE2A                B    78    				cp '*'
004522 28 14               B    79    				jr z,s_rffns					004524 11 1B 5F 00         B    80    				ld de,serial_fileheader
004528 0610                B    81    				ld b,16
00452A CD D5 11 00         B    82    				call os_compare_strings
00452E 28 08               B    83    				jr z,s_rffns
004530 CD 01 46 00         B    84    s_rfnbad		call s_badack
004534 3E87                B    85    				ld a,087h						004536 B7                  B    86    				or a
004537 C9                  B    87    				ret
                           B    88    				
004538 DD21 1B 5F 00       B    89    s_rffns			ld ix,serial_fileheader			00453D AF                  B    90    				xor a
00453E C9                  B    91    				ret
                           B    92    
00453F F5                  B    93    s_fail			push af				
004540 CD 01 46 00         B    94    				call s_badack		 
004544 F1                  B    95    				pop af
004545 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004546                     B   114    serial_receive_file
                           B   115    
004546 3E0A                B   116    				ld a,10							004548 32 1A 5F 00         B   117    				ld (serial_timeout),a
00454C E5                  B   118    				push hl
00454D CD F0 45 00         B   119    				call s_goodack					004551 DDE1                B   120    				pop ix							004553 ED5B 2B 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004558 CD 9A 45 00         B   123    s_gbloop		call s_getblock
00455C 20 E1               B   124    				jr nz,s_fail
00455E 0E00                B   125    				ld c,0							004560 FD21 73 66 00       B   126    				ld iy,sector_buffer
004565 FD7E00              B   127    s_rfloop		ld a,(iy)
004568 DD7700              B   128    				ld (ix),a						00456B 1B                  B   129    				dec de							00456C 21000000            B   130    				ld hl,0
004570 AF                  B   131    				xor a
004571 ED5A                B   132    				adc hl,de						004573 28 1A               B   133    				jr z,s_rfabr					004575 C5                  B   134    				push bc
004576 01010000            B   135    				ld bc,1
00457A DD09                B   136    				add ix,bc						00457C C1                  B   137    				pop bc
00457D 30 05               B   138    				jr nc,s_nbt
00457F 3E84                B   139    				ld a,84h						004581 B7                  B   140    				or a
004582 18 BB               B   141    				jr s_fail
004584 FD23                B   142    s_nbt			inc iy
004586 0D                  B   143    				dec c
004587 20 DC               B   144    				jr nz,s_rfloop
004589 CD F0 45 00         B   145    				call s_goodack					00458D 18 C9               B   146    				jr s_gbloop
                           B   147    			
00458F CD F0 45 00         B   148    s_rfabr			call s_goodack					004593 DD21 1B 5F 00       B   149    				ld ix,serial_fileheader			004598 AF                  B   150    				xor a							004599 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
00459A                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
00459A AF                  B   159    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00459B 32 3B 5F 00         B   160    				ld (serial_transfer_started),a	00459F E5                  B   161    				push hl							0045A0 D5                  B   162    				push de
0045A1 C5                  B   163    				push bc
0045A2 21 73 66 00         B   164    				ld hl,sector_buffer				0045A6 0600                B   165    				ld b,0
0045A8 D9                  B   166    				exx
0045A9 21FFFF00            B   167    				ld hl,0ffffh					0045AD D9                  B   168    				exx
0045AE CD DD 3B 00         B   169    s_lgb			call receive_serial_byte
0045B2 20 38               B   170    				jr nz,s_gberr					0045B4 F5                  B   171    				push af
0045B5 3E01                B   172    				ld a,1
0045B7 32 3B 5F 00         B   173    				ld (serial_transfer_started),a
0045BB F1                  B   174    				pop af
0045BC 77                  B   175    				ld (hl),a
0045BD D9                  B   176    				exx
0045BE AC                  B   177    				xor h							0045BF 67                  B   178    				ld h,a			
0045C0 0608                B   179    				ld b,8
0045C2 4029                B   180    rxcrcbyte		add.sis hl,hl					0045C4 30 08               B   181    				jr nc,rxcrcnext
0045C6 7C                  B   182    				ld a,h
0045C7 EE10                B   183    				xor 10h
0045C9 67                  B   184    				ld h,a
0045CA 7D                  B   185    				ld a,l
0045CB EE21                B   186    				xor 21h
0045CD 6F                  B   187    				ld l,a
0045CE 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0045D0 D9                  B   189    				exx
0045D1 23                  B   190    				inc hl
0045D2 10 DA               B   191    				djnz s_lgb
0045D4 D9                  B   192    				exx								                           B   193    			
0045D5 CD DD 3B 00         B   194    				call receive_serial_byte		0045D9 20 11               B   195    				jr nz,s_gberr
0045DB 4F                  B   196    				ld c,a
0045DC CD DD 3B 00         B   197    				call receive_serial_byte
0045E0 20 0A               B   198    				jr nz,s_gberr		
0045E2 47                  B   199    				ld b,a
                           B   200    				
0045E3 AF                  B   201    				xor a							0045E4 52ED42              B   202    				sbc.s hl,bc						0045E7 28 03               B   203    				jr z,s_gberr
                           B   204    			
0045E9 3E86                B   205    				ld a,86h						0045EB B7                  B   206    				or a							0045EC C1                  B   207    s_gberr			pop bc
0045ED D1                  B   208    				pop de
0045EE E1                  B   209    				pop hl
0045EF C9                  B   210    				ret
                           B   211    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   212    ;----------------------------------------------
                           B   213    
0045F0 C5                  B   214    s_goodack		push bc
0045F1 014F4B00            B   215    				ld bc,04b4fh					0045F5 79                  B   216    ackbytes		ld a,c
0045F6 CD 18 3C 00         B   217    				call send_serial_byte
0045FA 78                  B   218    				ld a,b
0045FB CD 18 3C 00         B   219    				call send_serial_byte
0045FF C1                  B   220    				pop bc
004600 C9                  B   221    				ret
                           B   222    
004601 C5                  B   223    s_badack		push bc
004602 01585800            B   224    				ld bc,05858h					004606 18 ED               B   225    				jr ackbytes
                           B   226    
004608 C5                  B   227    s_holdack		push bc
004609 01575700            B   228    				ld bc,05757h					00460D 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
00460F                     B   249    serial_send_file
                           B   250    			
00460F 3E01                B   251    				ld a,1							004611 32 1A 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
004615 DD22 FE 5E 00       B   254    				ld (serial_ez80_address),ix
00461A ED53 2B 5F 00       B   255    				ld (serial_fileheader+10h),de	00461F E5                  B   256    				push hl
004620 21000000            B   257    				ld hl,0
004624 AF                  B   258    				xor a
004625 ED5A                B   259    				adc hl,de
004627 20 05               B   260    				jr nz,s_flok
004629 E1                  B   261    				pop hl
00462A 3E81                B   262    				ld a,081h						00462C B7                  B   263    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00462D C9                  B   264    				ret
                           B   265    			
00462E 21 1B 5F 00         B   266    s_flok			ld hl,serial_fileheader			004632 01100000            B   267    				ld bc,16
004636 AF                  B   268    				xor a
004637 CD 41 15 00         B   269    				call os_bchl_memfill
00463B E1                  B   270    				pop hl							00463C 11 1B 5F 00         B   271    				ld de,serial_fileheader
004640 0610                B   272    				ld b,16
004642 CD F4 11 00         B   273    				call os_copy_ascii_run
                           B   274    				
004646 21 2F 5F 00         B   275    				ld hl,serial_header_id			00464A 11 2F 5F 00         B   276    				ld de,serial_fileheader+014h
00464E 010C0000            B   277    				ld bc,12		
004652 EDB0                B   278    				ldir
                           B   279    			
004654 DD21 1B 5F 00       B   280    				ld ix,serial_fileheader			004659 11200000            B   281    				ld de,32
00465D CD 93 46 00         B   282    				call s_makeblock			
004661 C0                  B   283    				ret nz
004662 CD CB 46 00         B   284    				call s_sendblock
004666 C0                  B   285    				ret nz
004667 CD F8 46 00         B   286    				call s_waitack					00466B C0                  B   287    				ret nz							                           B   288    				
00466C DD2A FE 5E 00       B   289    				ld ix,(serial_ez80_address)
004671 ED5B 2B 5F 00       B   290    				ld de,(serial_fileheader+16)	004676 CD 93 46 00         B   291    s_sbloop		call s_makeblock				00467A 38 16               B   292    				jr c,s_rerr
00467C CD CB 46 00         B   293    				call s_sendblock				004680 38 10               B   294    				jr c,s_rerr	
004682 CD F8 46 00         B   295    				call s_waitack					004686 38 0A               B   296    				jr c,s_rerr
004688 21000000            B   297    				ld hl,0
00468C AF                  B   298    				xor a
00468D ED5A                B   299    				adc hl,de
00468F 20 E5               B   300    				jr nz,s_sbloop					004691 AF                  B   301    				xor a							004692 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
004693                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004693 21 73 66 00         B   312    				ld hl,sector_buffer				004697 01000100            B   313    				ld bc,256						00469B AF                  B   314    				xor a							00469C CD 41 15 00         B   315    				call os_bchl_memfill			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   316    				
0046A0 0600                B   317    				ld b,0							0046A2 FD21 73 66 00       B   318    				ld iy,sector_buffer	
0046A7 DD7E00              B   319    s_sloop			ld a,(ix)
0046AA FD7700              B   320    				ld (iy),a
0046AD 1B                  B   321    				dec de							0046AE 21000000            B   322    				ld hl,0
0046B2 AF                  B   323    				xor a
0046B3 ED5A                B   324    				adc hl,de
0046B5 28 12               B   325    				jr z,s_mbend	
0046B7 FD23                B   326    				inc iy							0046B9 C5                  B   327    				push bc
0046BA 01010000            B   328    				ld bc,1
0046BE DD09                B   329    				add ix,bc						0046C0 C1                  B   330    				pop bc							0046C1 20 04               B   331    				jr nz,s_sbok
0046C3 3E84                B   332    				ld a,84h						0046C5 B7                  B   333    				or a
0046C6 C9                  B   334    				ret
0046C7 10 DE               B   335    s_sbok			djnz s_sloop
0046C9 AF                  B   336    s_mbend			xor a
0046CA C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0046CB                     B   341    s_sendblock
                           B   342    
0046CB E5                  B   343    				push hl
0046CC D5                  B   344    				push de							0046CD C5                  B   345    				push bc				
0046CE 21 73 66 00         B   346    				ld hl,sector_buffer			
0046D2 1E00                B   347    				ld e,0
0046D4 7E                  B   348    s_sblklp		ld a,(hl)
0046D5 CD 18 3C 00         B   349    				call send_serial_byte
0046D9 23                  B   350    				inc hl
0046DA 1D                  B   351    				dec e
0046DB 20 F7               B   352    				jr nz,s_sblklp
0046DD 11 73 66 00         B   353    				ld de,sector_buffer
0046E1 01000000            B   354    				ld bc,0
0046E5 CD 18 15 00         B   355    				call crc_checksum
0046E9 7D                  B   356    				ld a,l
0046EA CD 18 3C 00         B   357    				call send_serial_byte
0046EE 7C                  B   358    				ld a,h
0046EF CD 18 3C 00         B   359    				call send_serial_byte
0046F3 AF                  B   360    				xor a
0046F4 C1                  B   361    s_popall		pop bc
0046F5 D1                  B   362    				pop de
0046F6 E1                  B   363    				pop hl
0046F7 C9                  B   364    				ret
                           B   365    	
                           B   366    
0046F8                     B   367    s_waitack
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046F8 E5                  B   368    				push hl
0046F9 D5                  B   369    				push de
0046FA C5                  B   370    				push bc
0046FB CD DD 3B 00         B   371    				call receive_serial_byte		0046FF 20 F3               B   372    				jr nz,s_popall
004701 47                  B   373    				ld b,a
004702 CD DD 3B 00         B   374    				call receive_serial_byte
004706 20 EC               B   375    				jr nz,s_popall
004708 4F                  B   376    				ld c,a
004709 264F                B   377    				ld h,'O'
00470B 2E4B                B   378    				ld l,'K'
00470D AF                  B   379    				xor a
00470E 52ED42              B   380    				sbc.s hl,bc						004711 28 E1               B   381    				jr z,s_popall					                           B   382    			
004713 3E85                B   383    				ld a,085h						004715 B7                  B   384    				or a
004716 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
004718                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
004718 3A 4C 5F 00         B    57    				ld a,(device_count)				00471C 47                  B    58    				ld b,a							00471D DD21 FC 5F 00       B    59    				ld ix,host_device_hardware_info
004722 3A 4B 5F 00         B    60    fdevinfo		ld a,(current_driver)
004726 DDBE00              B    61    				cp (ix)
004729 28 09               B    62    				jr z,got_dev_info
00472B ED3220              B    63    				lea ix,ix+32
00472E 10 F2               B    64    				djnz fdevinfo
004730 AF                  B    65    				xor a
004731 3ED0                B    66    				ld a,0d0h						004733 C9                  B    67    				ret	
                           B    68    	
004734 CD C7 51 00         B    69    got_dev_info	call fs_clear_sector_buffer		004738 11000000            B    70    				ld de,0							00473C CD 2C 48 00         B    71    form_ws			call set_lba_and_write_sector
004740 D8                  B    72    				ret c
004741 13                  B    73    				inc de
004742 7A                  B    74    				ld a,d
004743 FE03                B    75    				cp 3
004745 20 F5               B    76    				jr nz,form_ws
                           B    77    	
004747 21 75 54 00         B    78    				ld hl,bootsector_stub			00474B 11 73 66 00         B    79    				ld de,sector_buffer				00474F 013F0000            B    80    				ld bc,03fh
004753 EDB0                B    81    				ldir
                           B    82    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004755 DD7E04              B    83    				ld a,(ix+4)						004758 B7                  B    84    				or a
004759 20 0C               B    85    				jr nz,above_2gb
00475B 2100FF3F            B    86    				ld hl,3fff00h					00475F DD1701              B    87    				ld de,(ix+1)					004762 AF                  B    88    				xor a			
004763 ED52                B    89    				sbc hl,de						004765 30 08               B    90    				jr nc,lessthan2gb				004767 3E40                B    91    above_2gb		ld a,40h						004769 1100FF3F            B    92    				ld de,3fff00h					00476D 18 11               B    93    				jr spcvalok
                           B    94    
00476F DD4E03              B    95    lessthan2gb		ld c,(ix+3)						004772 0C                  B    96    				inc c							004773 3E01                B    97    spc_loop		ld a,1							004775 B9                  B    98    spc_comp		cp c							004776 28 08               B    99    				jr z,spcvalok
004778 07                  B   100    				rlca
004779 FE80                B   101    				cp 080h							00477B 20 F8               B   102    				jr nz,spc_comp
00477D 0C                  B   103    				inc c			
00477E 18 F3               B   104    				jr spc_loop						                           B   105    							
004780 DD21 73 66 00       B   106    spcvalok		ld ix,sector_buffer
004785 DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
004788 CD 5E 15 00         B   109    				call os_get_xde_msb				00478C 4F                  B   110    				ld c,a							00478D B7                  B   111    				or a							00478E 20 08               B   112    				jr nz,ts_dword					004790 DD7313              B   113    				ld (ix+13h),e					004793 DD7214              B   114    				ld (ix+14h),d
004796 18 07               B   115    				jr ts_done
004798 DD1F20              B   116    ts_dword		ld (ix+20h),de					00479B DD362300            B   117    				ld (ix+23h),0
                           B   118    
00479F EB                  B   119    ts_done			ex de,hl						0047A0 11000000            B   120    				ld de,0						
0047A4 DD560D              B   121    				ld d,(ix+0dh)					0047A7 01000000            B   122    				ld bc,0							0047AB AF                  B   123    div_tscls		xor a							0047AC ED52                B   124    				sbc hl,de
0047AE 28 05               B   125    				jr z,gotfats
0047B0 38 03               B   126    				jr c,gotfats	
0047B2 03                  B   127    				inc bc
0047B3 18 F6               B   128    				jr div_tscls
0047B5 03                  B   129    gotfats			inc bc
0047B6 DD7116              B   130    				ld (ix+16h),c					0047B9 DD7017              B   131    				ld (ix+17h),b
0047BC ED43 C5 54 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
0047C1 010055AA            B   134    				ld bc,0aa5500h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047C5 ED43 70 68 00       B   135    				ld (sector_buffer+1fdh),bc		0047CA 11000000            B   136    				ld de,0
0047CE CD 2C 48 00         B   137    				call set_lba_and_write_sector	0047D2 D8                  B   138    				ret c
                           B   139    				
0047D3 21000000            B   140    				ld hl,0
0047D7 DD6E0E              B   141    				ld l,(ix+0eh)					0047DA DD660F              B   142    				ld h,(ix+0fh)
0047DD 19                  B   143    				add hl,de
0047DE EB                  B   144    				ex de,hl						                           B   145    				
0047DF CD C7 51 00         B   146    				call fs_clear_sector_buffer		0047E3 DD3600FF            B   147    				ld (ix+0),0ffh
0047E7 DD3601F8            B   148    				ld (ix+1),0f8h
0047EB DD3602FF            B   149    				ld (ix+2),0ffh
0047EF DD3603FF            B   150    				ld (ix+3),0ffh
0047F3 CD 2C 48 00         B   151    				call set_lba_and_write_sector	0047F7 D8                  B   152    				ret c
                           B   153    
0047F8 2A C5 54 00         B   154    				ld hl,(fs_sectors_per_fat)	
0047FC 19                  B   155    				add hl,de
0047FD EB                  B   156    				ex de,hl
0047FE CD 2C 48 00         B   157    				call set_lba_and_write_sector 	004802 D8                  B   158    				ret c	
                           B   159    				
004803 D5                  B   160    				push de							004804 CD C7 51 00         B   161    				call fs_clear_sector_buffer
004808 21 CB 54 00         B   162    				ld hl,fs_sought_filename
00480C 11 73 66 00         B   163    				ld de,sector_buffer
004810 010B0000            B   164    				ld bc,11
004814 EDB0                B   165    				ldir							004816 D1                  B   166    				pop de							004817 DD360B08            B   167    				ld (ix+0bh),8					00481B DD361821            B   168    				ld (ix+018h),021h				00481F 2A C5 54 00         B   169    				ld hl,(fs_sectors_per_fat)		004823 19                  B   170    				add hl,de
004824 EB                  B   171    				ex de,hl
004825 CD 2C 48 00         B   172    				call set_lba_and_write_sector	004829 D8                  B   173    				ret c	
                           B   174    			
00482A AF                  B   175    				xor a							00482B C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
00482C                     B   180    set_lba_and_write_sector
                           B   181    
00482C DDE5                B   182    				push ix
00482E DD21 21 61 00       B   183    				ld ix,sector_lba0				004833 DD1F00              B   184    				ld (ix),de						004836 DD360300            B   185    				ld (ix+3),0
00483A DDE1                B   186    				pop ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00483C CD 59 54 00         B   187    				call fs_write_sector
004840 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
004841                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
004841 32 7F 60 00         B   202    				ld (partition_temp),a
                           B   203    				
004845 21000000            B   204    				ld hl,0							004849 22 21 61 00         B   205    				ld (sector_lba0),hl
00484D 7D                  B   206    				ld a,l
00484E 32 24 61 00         B   207    				ld (sector_lba3),a
004852 CD 41 54 00         B   208    				call fs_read_sector
004856 D8                  B   209    				ret c
                           B   210    			
004857 CD 92 48 00         B   211    				call fs_check_fat_sig			00485B 20 42               B   212    				jr nz,formbad
                           B   213    			
00485D CD 83 48 00         B   214    				call check_fat16_id				004861 28 1C               B   215    				jr z,at_pbs						                           B   216    				
004863 3A 35 68 00         B   217    				ld a,(sector_buffer+01c2h)		004867 E604                B   218    				and 4							004869 28 34               B   219    				jr z,formbad	
00486B 11000000            B   220    				ld de,0
00486F 3A 7F 60 00         B   221    				ld a,(partition_temp)
004873 5F                  B   222    				ld e,a
004874 1610                B   223    				ld d,16
004876 ED5C                B   224    				mlt de
004878 21 31 68 00         B   225    				ld hl,sector_buffer+01beh
00487C 19                  B   226    				add hl,de						00487D AF                  B   227    				xor a
00487E C9                  B   228    				ret
                           B   229    					
00487F AF                  B   230    at_pbs			xor a
004880 3ED3                B   231    				ld a,0d3h						004882 C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
004883                     B   236    check_fat16_id
                           B   237    		
004883 21 A9 66 00         B   238    				ld hl,sector_buffer+036h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004887 11 63 59 00         B   239    				ld de,fat16_txt			
00488B 0605                B   240    				ld b,5
00488D CD D5 11 00         B   241    				call os_compare_strings
004891 C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
004892                     B   247    fs_check_fat_sig
                           B   248    
004892 2A 71 68 00         B   249    				ld hl,(sector_buffer+01feh)		004896 1155AA00            B   250    				ld de,0aa55h
00489A AF                  B   251    				xor a
00489B 52ED52              B   252    				sbc.s hl,de						00489E C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
00489F AF                  B   257    formbad			xor a
0048A0 3ECE                B   258    				ld a,0ceh						0048A2 C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
0048A3                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
0048A3 C5                  B   268    				push bc
0048A4 D5                  B   269    				push de
0048A5 E5                  B   270    				push hl
0048A6 CD AE 48 00         B   271    				call go_checkf
0048AA E1                  B   272    				pop hl
0048AB D1                  B   273    				pop de
0048AC C1                  B   274    				pop bc
0048AD C9                  B   275    				ret
                           B   276    				
0048AE CD 6A 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
0048B2 21 7C 5F 00         B   278    				ld hl,volume_mount_list
0048B6 19                  B   279    				add hl,de
0048B7 7E                  B   280    				ld a,(hl)
0048B8 B7                  B   281    				or a							0048B9 20 04               B   282    				jr nz,fs_volpre
0048BB AF                  B   283    				xor a
0048BC 3ECF                B   284    				ld a,cfh						0048BE C9                  B   285    				ret
                           B   286    			
0048BF 11080000            B   287    fs_volpre		ld de,8							0048C3 19                  B   288    				add hl,de
0048C4 11 21 61 00         B   289    				ld de,sector_lba0
0048C8 01040000            B   290    				ld bc,4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048CC EDB0                B   291    				ldir
0048CE CD 41 54 00         B   292    				call fs_read_sector
0048D2 D8                  B   293    				ret c	
                           B   294    				
0048D3 CD 92 48 00         B   295    				call fs_check_fat_sig			0048D7 20 C6               B   296    				jr nz,formbad		
                           B   297    			
0048D9 CD 83 48 00         B   298    				call check_fat16_id				0048DD 20 C0               B   299    				jr nz,formbad
                           B   300    			
0048DF DD21 73 66 00       B   301    				ld ix,sector_buffer
0048E4 DD270B              B   302    				ld hl,(ix+0bh)					0048E7 11000200            B   303    				ld de,512						0048EB AF                  B   304    				xor a
0048EC 52ED52              B   305    				sbc.s hl,de						0048EF 20 AE               B   306    				jr nz,formbad
                           B   307    			
0048F1 DD7E0D              B   308    				ld a,(ix+0dh)					0048F4 32 B4 54 00         B   309    				ld (fs_cluster_size),a
0048F8 CB27                B   310    				sla a
0048FA 32 B6 54 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
0048FE 21000000            B   313    				ld hl,0
004902 DD6E0E              B   314    				ld l,(ix+0eh)					004905 DD660F              B   315    				ld h,(ix+0fh)
004908 22 B8 54 00         B   316    				ld (fs_fat1_position),hl		00490C 11000000            B   317    				ld de,0
004910 DD5E16              B   318    				ld e,(ix+16h)					004913 DD5617              B   319    				ld d,(ix+17h)
004916 ED53 C5 54 00       B   320    				ld (fs_sectors_per_fat),de
00491B 19                  B   321    				add hl,de
00491C 22 BB 54 00         B   322    				ld (fs_fat2_position),hl		004920 19                  B   323    				add hl,de
004921 22 BE 54 00         B   324    				ld (fs_root_dir_position),hl 	004925 EB                  B   325    				ex de,hl
004926 DD6E11              B   326    				ld l,(ix+11h)					004929 DD6612              B   327    				ld h,(ix+12h)					00492C 7C                  B   328    				ld a,h
00492D B5                  B   329    				or l
00492E CA 9F 48 00         B   330    				jr z,formbad					004932 29                  B   331    				add hl,hl						004933 29                  B   332    				add hl,hl						004934 29                  B   333    				add hl,hl
004935 29                  B   334    				add hl,hl
004936 EB                  B   335    				ex de,hl
004937 7A                  B   336    				ld a,d
004938 32 C4 54 00         B   337    				ld (fs_root_dir_sectors),a		00493C 01000000            B   338    				ld bc,0
004940 4A                  B   339    				ld c,d
004941 09                  B   340    				add hl,bc				
004942 22 C1 54 00         B   341    				ld (fs_data_area),hl			                           B   342    												Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004946 21000000            B   343    				ld hl,0
00494A 01000000            B   344    				ld bc,0
00494E DD4E22              B   345    				ld c,(ix+022h)					004951 DD4623              B   346    				ld b,(ix+023h)
004954 DD6E13              B   347    				ld l,(ix+013h)					004957 DD6614              B   348    				ld h,(ix+014h)
00495A 7C                  B   349    				ld a,h							00495B B5                  B   350    				or l
00495C 20 06               B   351    				jr nz,got_tsfbs
00495E DD6E20              B   352    				ld l,(ix+020h)					004961 DD6621              B   353    				ld h,(ix+021h)
004964 ED5B C1 54 00       B   354    got_tsfbs 		ld de,(fs_data_area)
004969 AF                  B   355    				xor a							00496A 52ED52              B   356    				sbc.s hl,de						00496D 30 02               B   357    				jr nc,nomxcb
00496F 520B                B   358    				dec.s bc
004971 3A B4 54 00         B   359    nomxcb			ld a,(fs_cluster_size)
004975 CB3F                B   360    fmaxcl			srl a
004977 28 08               B   361    				jr z,got_cmaxc					004979 CB39                B   362    				srl c				
00497B CB1C                B   363    				rr h
00497D CB1D                B   364    				rr l
00497F 18 F4               B   365    				jr fmaxcl
004981 E5                  B   366    got_cmaxc		push hl							004982 11F0FF00            B   367    				ld de,0fff0h
004986 AF                  B   368    				xor a
004987 52ED52              B   369    				sbc.s hl,de						00498A 38 02               B   370    				jr c,cmaxok
00498C E1                  B   371    				pop hl
00498D D5                  B   372    				push de
00498E E1                  B   373    cmaxok			pop hl
00498F 22 C8 54 00         B   374    				ld (fs_max_data_clusters),hl
004993 AF                  B   375    				xor a
004994 C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
004995                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
004995 ED5B C8 54 00       B   384    				ld de,(fs_max_data_clusters)
00499A 13                  B   385    				inc de
00499B 13                  B   386    				inc de							00499C D5                  B   387    				push de
00499D DDE1                B   388    				pop ix
                           B   389    			
00499F AF                  B   390    				xor a
0049A0 32 0D 55 00         B   391    cfs_lp2			ld (fs_working_sector),a
0049A4 2A B8 54 00         B   392    				ld hl,(fs_fat1_position)
0049A8 CD 17 54 00         B   393    				call set_abs_lba_and_read_secto
0049AC D8                  B   394    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   395    				
0049AD 21 73 66 00         B   396    				ld hl,sector_buffer
0049B1 0600                B   397    				ld b,0
0049B3 AF                  B   398    cfs_lp1			xor a
0049B4 B6                  B   399    				or a,(hl)						0049B5 23                  B   400    				inc hl							0049B6 20 03               B   401    				jr nz,cfs_ciu					0049B8 B6                  B   402    				or a,(hl)
0049B9 28 02               B   403    				jr z,cfs_ddcc
0049BB DD2B                B   404    cfs_ciu			dec ix							0049BD 23                  B   405    cfs_ddcc		inc hl
0049BE 1B                  B   406    				dec de
0049BF 7A                  B   407    				ld a,d
0049C0 B3                  B   408    				or e
0049C1 28 09               B   409    				jr z,cfs_ok						0049C3 10 EE               B   410    				djnz cfs_lp1
0049C5 3A 0D 55 00         B   411    				ld a,(fs_working_sector)
0049C9 3C                  B   412    				inc a
0049CA 18 D4               B   413    				jr cfs_lp2
                           B   414    				
0049CC 3A B4 54 00         B   415    cfs_ok			ld a,(fs_cluster_size)			0049D0 CB3F                B   416    cltoslp			srl a
0049D2 28 04               B   417    				jr z,powdone
0049D4 DD29                B   418    				add ix,ix
0049D6 18 F8               B   419    				jr cltoslp	
0049D8 FD21 3D 61 00       B   420    powdone			ld iy,xrr_temp
0049DD FD3E00              B   421    				ld (iy),ix						0049E0 FDCB023E            B   422    				srl (iy+2)
0049E4 FDCB011E            B   423    				rr (iy+1)
0049E8 FDCB001E            B   424    				rr (iy+0)						0049EC FD1700              B   425    				ld de,(iy)						0049EF AF                  B   426    				xor a
0049F0 C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
0049F1                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
0049F1 CD D9 51 00         B   436    				call fs_find_filename			0049F5 D8                  B   437    				ret c							0049F6 FEC2                B   438    				cp 0c2h							0049F8 20 04               B   439    				jr nz,founddir
0049FA AF                  B   440    				xor a							0049FB 3ED1                B   441    				ld a,0d1h						0049FD C9                  B   442    				ret
0049FE AF                  B   443    founddir		xor a							0049FF 3E04                B   444    				ld a,04h						004A01 DDCB0B66            B   445    				bit 4,(ix+0bh)
004A05 C8                  B   446    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A06 11000000            B   447    				ld de,0
004A0A DD5E1A              B   448    				ld e,(ix+01ah)
004A0D DD561B              B   449    				ld d,(ix+01bh)					004A10 CD 3C 1A 00         B   450    				call fs_update_dir_cluster
004A14 AF                  B   451    				xor a
004A15 C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
004A16                     B   458    fs_goto_root_dir_command
                           B   459    
004A16 D5                  B   460    				push de
004A17 11000000            B   461    				ld de,0
004A1B CD 3C 1A 00         B   462    				call fs_update_dir_cluster
004A1F D1                  B   463    				pop de
004A20 AF                  B   464    				xor a
004A21 C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
004A22                     B   470    fs_parent_dir_command
                           B   471    
004A22 CD 30 1A 00         B   472    				call fs_get_dir_cluster
004A26 7A                  B   473    				ld a,d
004A27 B3                  B   474    				or e
004A28 20 03               B   475    				jr nz,pdnaroot
004A2A 3ECA                B   476    				ld a,0cah						004A2C C9                  B   477    				ret
004A2D 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					004A31 22 CB 54 00         B   479    				ld (fs_sought_filename),hl		004A35 21 CE 54 00         B   480    				ld hl,fs_sought_filename+3		004A39 3E20                B   481    				ld a,32
004A3B 01080000            B   482    				ld bc,8
004A3F CD 41 15 00         B   483    				call os_bchl_memfill
004A43 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
004A45                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
004A45 CD D9 51 00         B   497    				call fs_find_filename			004A49 D8                  B   498    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A4A C0                  B   499    				ret nz							                           B   500    								
004A4B 3EC6                B   501    				ld a,0c6h						004A4D DDCB0B66            B   502    				bit 4,(ix+0bh)
004A51 C0                  B   503    				ret nz
                           B   504    
004A52 AF                  B   505    				xor a
004A53 32 21 55 00         B   506    				ld (fs_filepointer_valid),a		004A57 21000000            B   507    				ld hl,0
004A5B 22 EF 54 00         B   508    				ld (fs_file_pointer),hl			004A5F 32 F2 54 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
004A63 DD171C              B   511    				ld de,(ix+01ch)
004A66 D5                  B   512    				push de
004A67 E1                  B   513    				pop hl
004A68 DD4E1F              B   514    				ld c,(ix+01fh)					004A6B ED53 F3 54 00       B   515    				ld (fs_file_length),de			004A70 79                  B   516    				ld a,c
004A71 32 F6 54 00         B   517    				ld (fs_file_length+3),a			004A75 B7                  B   518    				or a							004A76 28 04               B   519    				jr z,fs_dflsm					004A78 21FFFFFF            B   520    				ld hl,0ffffffh
004A7C 22 FB 54 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
004A80 21000000            B   523    				ld hl,0
004A84 DD6E1A              B   524    				ld l,(ix+01ah)		
004A87 DD661B              B   525    				ld h,(ix+01bh)
004A8A 22 FE 54 00         B   526    				ld (fs_file_start_cluster),hl	004A8E AF                  B   527    				xor a
004A8F C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
004A90                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
004A90 2A FB 54 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
004A94 11000000            B   540    				ld de,0
004A98 AF                  B   541    				xor a
004A99 ED5A                B   542    				adc hl,de
004A9B 20 04               B   543    				jr nz,fs_btrok
004A9D AF                  B   544    fs_fliz			xor a							004A9E 3EC7                B   545    				ld a,0c7h						004AA0 C9                  B   546    				ret
                           B   547    			 
004AA1 2A 04 55 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			004AA5 22 07 55 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004AA9 2A F3 54 00         B   551    				ld hl,(fs_file_length)			004AAD ED4B EF 54 00       B   552    				ld bc,(fs_file_pointer)			004AB2 3A F2 54 00         B   553    				ld a,(fs_file_pointer+3)		004AB6 5F                  B   554    				ld e,a
004AB7 3A F6 54 00         B   555    				ld a,(fs_file_length+3)
004ABB B7                  B   556    				or a							004ABC ED42                B   557    				sbc hl,bc
004ABE 9B                  B   558    				sbc a,e
004ABF 38 09               B   559    				jr c,fs_fpbad
004AC1 01000000            B   560    				ld bc,0
004AC5 AF                  B   561    				xor a
004AC6 ED4A                B   562    				adc hl,bc
004AC8 20 04               B   563    				jr nz,fs_fpok
004ACA AF                  B   564    fs_fpbad		xor a
004ACB 3ECC                B   565    				ld a,0cch						004ACD C9                  B   566    				ret
                           B   567    			
                           B   568    	
004ACE 3A 21 55 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		004AD2 B7                  B   570    				or a							004AD3 28 1B               B   571    				jr z,seek_strt
                           B   572    			
004AD5 ED5B 07 55 00       B   573    				ld de,(fs_ez80_working_address)
004ADA ED4B 22 55 00       B   574    				ld bc,(fs_sector_pos_cnt)		004ADF C5                  B   575    				push bc
004AE0 ED4B 0A 55 00       B   576    				ld bc,(fs_in_sector_offset)
004AE5 21 73 68 00         B   577    				ld hl,sector_buffer+0200h		004AE9 AF                  B   578    				xor a
004AEA ED42                B   579    				sbc hl,bc		
004AEC C3 7C 4B 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
004AF0 3E01                B   583    seek_strt		ld a,1
004AF2 32 21 55 00         B   584    				ld (fs_filepointer_valid),a
004AF6 2A FE 54 00         B   585    				ld hl,(fs_file_start_cluster)	004AFA 22 01 55 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
004AFE 3A F2 54 00         B   588    				ld a,(fs_file_pointer+3)		004B02 2A EF 54 00         B   589    				ld hl,(fs_file_pointer)			004B06 ED4B B5 54 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004B0B AF                  B   591    				xor a
004B0C ED42                B   592    				sbc hl,bc						004B0E DE00                B   593    				sbc a,0
004B10 38 14               B   594    				jr c,fs_fpgbo
004B12 E5                  B   595    fs_fpgnb		push hl				
004B13 2A 01 55 00         B   596    				ld hl,(fs_file_working_cluster)
004B17 CD E9 52 00         B   597    				call get_fat_entry_for_cluster
004B1B 30 02               B   598    				jr nc,fs_ghok					004B1D E1                  B   599    				pop hl
004B1E C9                  B   600    				ret
004B1F 22 01 55 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
004B23 E1                  B   602    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B24 18 E0               B   603    				jr fs_fpblp
                           B   604    			
004B26 09                  B   605    fs_fpgbo		add hl,bc						004B27 4C                  B   606    				ld c,h
004B28 CB39                B   607    				srl c							004B2A 3A B4 54 00         B   608    				ld a,(fs_cluster_size)
004B2E 91                  B   609    				sub c
004B2F 47                  B   610    				ld b,a							004B30 7C                  B   611    				ld a,h
004B31 E601                B   612    				and 01h
004B33 67                  B   613    				ld h,a
004B34 22 0A 55 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
004B38 79                  B   616    fs_flns			ld a,c				
004B39 2A 01 55 00         B   617    				ld hl,(fs_file_working_cluster)
004B3D CD C0 53 00         B   618    				call cluster_and_offset_to_lba
004B41 CD 41 54 00         B   619    				call fs_read_sector				004B45 D8                  B   620    				ret c							                           B   621    			
004B46 C5                  B   622    				push bc							004B47 11000000            B   623    				ld de,0
004B4B 2A 0A 55 00         B   624    				ld hl,(fs_in_sector_offset)		004B4F 5D                  B   625    				ld e,l
004B50 54                  B   626    				ld d,h
004B51 21000200            B   627    				ld hl,512
004B55 AF                  B   628    				xor a
004B56 ED52                B   629    				sbc hl,de						004B58 44                  B   630    				ld b,h
004B59 4D                  B   631    				ld c,l							004B5A 21 73 66 00         B   632    				ld hl,sector_buffer				004B5E 19                  B   633    				add hl,de						004B5F ED5B 07 55 00       B   634    				ld de,(fs_ez80_working_address)
004B64 EDA0                B   635    fs_cblp			ldi 							                           B   636    
004B66 7A                  B   637    				ld a,d							004B67 B3                  B   638    				or e
004B68 20 0C               B   639    				jr nz,fs_edaok
004B6A ED53 07 55 00       B   640    				ld (fs_ez80_working_address),de
004B6F 3A 09 55 00         B   641    				ld a,(fs_ez80_working_address+2
004B73 B7                  B   642    				or a
004B74 28 43               B   643    				jr z,fs_mem_error
                           B   644    
004B76 CD 49 53 00         B   645    fs_edaok		call transfer_length_countdown	004B7A 28 30               B   646    				jr z,fs_bdld
004B7C 78                  B   647    fs_dadok		ld a,b							004B7D B1                  B   648    				or c
004B7E 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
004B80 ED43 0A 55 00       B   651    				ld (fs_in_sector_offset),bc		004B85 ED53 07 55 00       B   652    				ld (fs_ez80_working_address),de
004B8A C1                  B   653    				pop bc							004B8B 0C                  B   654    				inc c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B8C 10 AA               B   655    				djnz fs_flns					                           B   656    			
004B8E 2A 01 55 00         B   657    				ld hl,(fs_file_working_cluster)
004B92 CD E9 52 00         B   658    				call get_fat_entry_for_cluster	004B96 D8                  B   659    				ret c							004B97 22 01 55 00         B   660    				ld (fs_file_working_cluster),hl
004B9B CD 92 50 00         B   661    				call fs_compare_hl_fff8			004B9F D2 CA 4A 00         B   662    				jp nc,fs_fpbad			
004BA3 0E00                B   663    fs_nfbok		ld c,0							004BA5 3A B4 54 00         B   664    				ld a,(fs_cluster_size)	
004BA9 47                  B   665    				ld b,a							004BAA 18 8C               B   666    				jr fs_flns		
                           B   667    			
004BAC ED43 0A 55 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		004BB1 C1                  B   669    				pop bc							004BB2 ED43 22 55 00       B   670    				ld (fs_sector_pos_cnt),bc
004BB7 AF                  B   671    				xor a							004BB8 C9                  B   672    				ret
                           B   673    				
004BB9 3EC8                B   674    fs_mem_error	ld a,0c8h						004BBB C1                  B   675    fs_flerr		pop bc
004BBC B7                  B   676    				or a							004BBD C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
004BBE                     B   681    fs_make_dir_command		
                           B   682    				
004BBE CD D9 51 00         B   683    				call fs_find_filename			004BC2 D8                  B   684    				ret c
004BC3 FEC2                B   685    				cp 0c2h							004BC5 28 04               B   686    				jr z,mdirfnde
004BC7 AF                  B   687    				xor a							004BC8 3EC9                B   688    				ld a,0c9h						004BCA C9                  B   689    				ret
                           B   690    			
004BCB CD 9F 50 00         B   691    mdirfnde		call fs_find_free_cluster		004BCF D8                  B   692    				ret c							004BD0 C0                  B   693    				ret nz							                           B   694    							
004BD1 2A 11 55 00         B   695    				ld hl,(fs_free_cluster)
004BD5 22 14 55 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
004BD9 CD F0 50 00         B   698    				call fs_find_free_dir_entry		004BDD D8                  B   699    				ret c							004BDE C0                  B   700    				ret nz							                           B   701    			
004BDF DDE5                B   702    				push ix							004BE1 D1                  B   703    				pop de
004BE2 21 CB 54 00         B   704    				ld hl,fs_sought_filename
004BE6 010B0000            B   705    				ld bc,11
004BEA EDB0                B   706    				ldir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BEC AF                  B   707    				xor a							004BED 0615                B   708    				ld b,21
004BEF 12                  B   709    clrdiren		ld (de),a
004BF0 13                  B   710    				inc de
004BF1 10 FC               B   711    				djnz clrdiren
004BF3 DD360B10            B   712    				ld (ix+0bh),010h				004BF7 DD361821            B   713    				ld (ix+018h),021h				004BFB ED5B 14 55 00       B   714    				ld de,(fs_new_file_cluster)
004C00 DD731A              B   715    				ld (ix+01ah),e					004C03 DD721B              B   716    				ld (ix+01bh),d
004C06 CD 59 54 00         B   717    				call fs_write_sector			004C0A D8                  B   718    				ret c							                           B   719    				
004C0B CD C7 51 00         B   720    				call fs_clear_sector_buffer
004C0F DD21 73 66 00       B   721    				ld ix,sector_buffer				004C14 DD36002E            B   722    				ld (ix+00h),02eh				004C18 DD360120            B   723    				ld (ix+01h),020h
004C1C DD36202E            B   724    				ld (ix+020h),02eh
004C20 DD36212E            B   725    				ld (ix+021h),02eh
004C24 DD360B10            B   726    				ld (ix+0bh),010h
004C28 DD362B10            B   727    				ld (ix+02bh),010h
004C2C ED5B 14 55 00       B   728    				ld de,(fs_new_file_cluster)		004C31 DD731A              B   729    				ld (ix+01ah),e
004C34 DD721B              B   730    				ld (ix+01bh),d
004C37 CD 30 1A 00         B   731    				call fs_get_dir_cluster			004C3B DD733A              B   732    				ld (ix+03ah),e
004C3E DD723B              B   733    				ld (ix+03bh),d
004C41 DD361821            B   734    				ld (ix+018h),021h				004C45 DD363821            B   735    				ld (ix+038h),021h				004C49 0609                B   736    				ld b,9
004C4B DD360220            B   737    mndelp			ld (ix+002h),32
004C4F DD362220            B   738    				ld (ix+022h),32
004C53 DD23                B   739    				inc ix
004C55 10 F4               B   740    				djnz mndelp
004C57 2A 14 55 00         B   741    				ld hl,(fs_new_file_cluster)		004C5B AF                  B   742    				xor a
004C5C CD C0 53 00         B   743    				call cluster_and_offset_to_lba
004C60 CD 59 54 00         B   744    				call fs_write_sector
004C64 D8                  B   745    				ret c							                           B   746    			
004C65 CD C7 51 00         B   747    				call fs_clear_sector_buffer		004C69 AF                  B   748    				xor a
004C6A 3C                  B   749    wroslp			inc a
004C6B 32 0D 55 00         B   750    				ld (fs_working_sector),a
004C6F 21 B4 54 00         B   751    				ld hl,fs_cluster_size
004C73 BE                  B   752    				cp (hl)
004C74 28 13               B   753    				jr z,allsclr
004C76 2A 14 55 00         B   754    				ld hl,(fs_new_file_cluster)
004C7A CD C0 53 00         B   755    				call cluster_and_offset_to_lba
004C7E CD 59 54 00         B   756    				call fs_write_sector
004C82 D8                  B   757    				ret c
004C83 3A 0D 55 00         B   758    				ld a,(fs_working_sector)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C87 18 E1               B   759    				jr wroslp
                           B   760    			
004C89 2A 14 55 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004C8D 11FFFF00            B   762    				ld de,0ffffh
004C91 CD 15 53 00         B   763    				call update_fat_entry_for_clust
004C95 AF                  B   764    				xor a
004C96 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
004C97                     B   771    fs_delete_dir_command
                           B   772    
004C97 CD D9 51 00         B   773    				call fs_find_filename			004C9B D8                  B   774    				ret c
004C9C 28 04               B   775    				jr z,ddc_gotd
004C9E 3ED1                B   776    				ld a,0d1h						004CA0 B7                  B   777    				or a
004CA1 C9                  B   778    				ret
                           B   779    				
004CA2 DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					004CA6 20 04               B   781    				jr nz,okdeldir
004CA8 AF                  B   782    				xor a
004CA9 3EC4                B   783    				ld a,0c4h						004CAB C9                  B   784    				ret
                           B   785    				
004CAC DD22 17 55 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004CB1 CD 1F 54 00         B   787    				call backup_sector_lba
004CB5 DD6E1A              B   788    				ld l,(ix+01ah)					004CB8 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004CBB 3A B4 54 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004CBF 47                  B   792    				ld b,a							004CC0 0E00                B   793    				ld c,0			
004CC2 79                  B   794    fs_cne2 		ld a,c
004CC3 CD C0 53 00         B   795    				call cluster_and_offset_to_lba
004CC7 CD 41 54 00         B   796    				call fs_read_sector
004CCB D8                  B   797    				ret c							                           B   798    				
004CCC C5                  B   799    				push bc
004CCD 0610                B   800    				ld b,16							004CCF DD21 73 66 00       B   801    				ld ix,sector_buffer
004CD4 11200000            B   802    				ld de,020h
004CD8 DD7E00              B   803    fs_cne1			ld a,(ix)
004CDB B7                  B   804    				or a
004CDC 28 0D               B   805    				jr z,fs_chnde
004CDE FEE5                B   806    				cp 0e5h
004CE0 28 09               B   807    				jr z,fs_chnde
004CE2 FE2E                B   808    				cp '.'
004CE4 28 05               B   809    				jr z,fs_chnde
004CE6 C1                  B   810    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CE7 AF                  B   811    				xor a							004CE8 3EC5                B   812    				ld a,0c5h						004CEA C9                  B   813    				ret
                           B   814    			
004CEB DD19                B   815    fs_chnde		add ix,de
004CED 10 E9               B   816    				djnz fs_cne1
004CEF C1                  B   817    				pop bc
004CF0 0C                  B   818    				inc c
004CF1 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004CF3 CD E9 52 00         B   821    				call get_fat_entry_for_cluster	004CF7 D8                  B   822    				ret c
004CF8 CD 92 50 00         B   823    				call fs_compare_hl_fff8
004CFC 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004CFE CD 34 54 00         B   826    dir_empty		call restore_sector_lba			004D02 CD 41 54 00         B   827    				call fs_read_sector
004D06 D8                  B   828    				ret c							004D07 2A 17 55 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004D0B 36E5                B   830    fs_delco		ld (hl),0e5h					004D0D CD 59 54 00         B   831    				call fs_write_sector
004D11 D8                  B   832    				ret c
                           B   833    			
004D12 E5                  B   834    				push hl
004D13 DDE1                B   835    				pop ix
004D15 DD6E1A              B   836    				ld l,(ix+01ah)
004D18 DD661B              B   837    				ld h,(ix+01bh)
004D1B 22 0E 55 00         B   838    				ld (fs_working_cluster),hl
004D1F 7C                  B   839    				ld a,h							004D20 B5                  B   840    				or l							004D21 C8                  B   841    				ret z							                           B   842    				
004D22 2A 0E 55 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
004D26 CD E9 52 00         B   844    				call get_fat_entry_for_cluster
004D2A D8                  B   845    				ret c
004D2B EB                  B   846    				ex de,hl
                           B   847    				
004D2C 2A 0E 55 00         B   848    				ld hl,(fs_working_cluster)
004D30 ED53 0E 55 00       B   849    				ld (fs_working_cluster),de
004D35 11000000            B   850    				ld de,0
004D39 CD 15 53 00         B   851    				call update_fat_entry_for_clust
004D3D D8                  B   852    				ret c
                           B   853    				
004D3E CD 92 50 00         B   854    				call fs_compare_hl_fff8			004D42 38 DE               B   855    				jr c,clrfatlp
004D44 AF                  B   856    				xor a
004D45 C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
004D46                     B   862    fs_create_file_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
004D46 CD D9 51 00         B   867    				call fs_find_filename			004D4A D8                  B   868    				ret c
004D4B FEC2                B   869    				cp 0c2h							004D4D 28 04               B   870    				jr z,mfilefnde
004D4F AF                  B   871    				xor a							004D50 3EC9                B   872    				ld a,0c9h						004D52 C9                  B   873    				ret
                           B   874    			
004D53 CD F0 50 00         B   875    mfilefnde		call fs_find_free_dir_entry		004D57 D8                  B   876    				ret c							004D58 C0                  B   877    				ret nz							                           B   878    			
004D59 DDE5                B   879    				push ix							004D5B D1                  B   880    				pop de
004D5C 21 CB 54 00         B   881    				ld hl,fs_sought_filename
004D60 010B0000            B   882    				ld bc,11
004D64 EDB0                B   883    				ldir
004D66 AF                  B   884    				xor a							004D67 0615                B   885    				ld b,21
004D69 12                  B   886    clrfnen			ld (de),a
004D6A 13                  B   887    				inc de
004D6B 10 FC               B   888    				djnz clrfnen
004D6D DD361821            B   889    				ld (ix+018h),021h				004D71 CD 59 54 00         B   890    				call fs_write_sector			004D75 D8                  B   891    				ret c							004D76 AF                  B   892    				xor a
004D77 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
004D78                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
004D78 ED5B FB 54 00       B   906    				ld de,(fs_file_transfer_length)
004D7D 21000000            B   907    				ld hl,0
004D81 AF                  B   908    				xor a
004D82 ED5A                B   909    				adc hl,de
004D84 CA 9D 4A 00         B   910    				jp z,fs_fliz					                           B   911    				 
004D88 CD D9 51 00         B   912    				call fs_find_filename			004D8C D8                  B   913    				ret c							004D8D FEC2                B   914    				cp 0c2h				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D8F C8                  B   915    				ret z							004D90 DDCB0B66            B   916    				bit 4,(ix+0bh)					004D94 28 04               B   917    				jr z,fs_oknad					004D96 AF                  B   918    				xor a							004D97 3EC6                B   919    				ld a,0c6h						004D99 C9                  B   920    				ret
                           B   921    
004D9A CD 1F 54 00         B   922    fs_oknad		call backup_sector_lba
004D9E DD22 17 55 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004DA3 DD311C              B   925    				ld iy,(ix+01ch)					004DA6 DD7E1F              B   926    				ld a,(ix+01fh)
004DA9 FD22 F7 54 00       B   927    				ld (fs_existing_file_length),iy
004DAE 32 F7 54 00         B   928    				ld (fs_existing_file_length),a
004DB2 ED5B FB 54 00       B   929    				ld de,(fs_file_transfer_length)
004DB7 FD19                B   930    				add iy,de						004DB9 CE00                B   931    				adc a,0
004DBB DD3E1C              B   932    				ld (ix+01ch),iy					004DBE DD771F              B   933    				ld (ix+01fh),a					004DC1 30 04               B   934    				jr nc,nfsizeok
004DC3 AF                  B   935    				xor a
004DC4 3EC7                B   936    				ld a,0c7h						004DC6 C9                  B   937    				ret
                           B   938    
004DC7 11000000            B   939    nfsizeok		ld de,0
004DCB DD5E1A              B   940    				ld e,(ix+01ah)					004DCE DD561B              B   941    				ld d,(ix+01bh)					004DD1 ED53 01 55 00       B   942    				ld (fs_file_working_cluster),de
004DD6 CD 59 54 00         B   943    				call fs_write_sector			004DDA D8                  B   944    				ret c
004DDB 7A                  B   945    				ld a,d
004DDC B3                  B   946    				or e
004DDD 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004DDF CD 9F 50 00         B   949    				call fs_find_free_cluster		004DE3 D8                  B   950    				ret c
004DE4 C0                  B   951    				ret nz
004DE5 2A 11 55 00         B   952    				ld hl,(fs_free_cluster)
004DE9 22 01 55 00         B   953    				ld (fs_file_working_cluster),hl
004DED 11FFFF00            B   954    				ld de,0ffffh
004DF1 CD 15 53 00         B   955    				call update_fat_entry_for_clust
004DF5 D8                  B   956    				ret c
                           B   957    			
004DF6 CD 34 54 00         B   958    				call restore_sector_lba			004DFA CD 41 54 00         B   959    				call fs_read_sector
004DFE D8                  B   960    				ret c
004DFF DD2A 17 55 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004E04 ED5B 01 55 00       B   962    				ld de,(fs_file_working_cluster)
004E09 DD731A              B   963    				ld (ix+01ah),e
004E0C DD721B              B   964    				ld (ix+01bh),d
004E0F CD 59 54 00         B   965    				call fs_write_sector			004E13 D8                  B   966    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   967    				
                           B   968    					
004E14 2A 01 55 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004E18 CD E9 52 00         B   970    				call get_fat_entry_for_cluster
004E1C D8                  B   971    				ret c
004E1D CD 92 50 00         B   972    				call fs_compare_hl_fff8
004E21 30 1C               B   973    				jr nc,atlclif
004E23 22 01 55 00         B   974    				ld (fs_file_working_cluster),hl
004E27 01000000            B   975    				ld bc,0
004E2B 3A B4 54 00         B   976    				ld a,(fs_cluster_size)
004E2F CB27                B   977    				sla a
004E31 47                  B   978    				ld b,a
004E32 2A F7 54 00         B   979    				ld hl,(fs_existing_file_length)
004E36 AF                  B   980    				xor a							004E37 ED42                B   981    				sbc hl,bc						004E39 22 F7 54 00         B   982    				ld (fs_existing_file_length),hl
004E3D 18 D5               B   983    				jr apenclch
                           B   984    				
004E3F ED4B F7 54 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004E44 CB38                B   986    				srl b				
004E46 48                  B   987    				ld c,b							004E47 3A B4 54 00         B   988    				ld a,(fs_cluster_size)
004E4B 91                  B   989    				sub c
004E4C 47                  B   990    				ld b,a							004E4D 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004E4F 2A 01 55 00         B   993    				ld hl,(fs_file_working_cluster)
004E53 79                  B   994    				ld a,c
004E54 CD C0 53 00         B   995    				call cluster_and_offset_to_lba
004E58 CD 41 54 00         B   996    				call fs_read_sector
004E5C D8                  B   997    				ret c
004E5D C5                  B   998    				push bc							                           B   999    				
004E5E 11000000            B  1000    				ld de,0
004E62 3A F7 54 00         B  1001    				ld a,(fs_existing_file_length)
004E66 5F                  B  1002    				ld e,a
004E67 3A F8 54 00         B  1003    				ld a,(fs_existing_file_length+1
004E6B E601                B  1004    				and 1
004E6D 57                  B  1005    				ld d,a							004E6E 21000200            B  1006    				ld hl,512	
004E72 AF                  B  1007    				xor a
004E73 ED52                B  1008    				sbc hl,de						004E75 E5                  B  1009    				push hl
004E76 C1                  B  1010    				pop bc							004E77 21 73 66 00         B  1011    				ld hl,sector_buffer
004E7B 19                  B  1012    				add hl,de
004E7C EB                  B  1013    				ex de,hl						004E7D 7C                  B  1014    				ld a,h			
004E7E B5                  B  1015    				or l
004E7F 20 04               B  1016    				jr nz,fs_dcsb					004E81 CD C7 51 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
004E85 2A 04 55 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E89 EDA0                B  1019    fs_cbsb			ldi								004E8B 7C                  B  1020    				ld a,h							004E8C B5                  B  1021    				or l
004E8D 20 0D               B  1022    				jr nz,fs_srcadok
004E8F 22 04 55 00         B  1023    				ld (fs_ez80_address),hl
004E93 3A 06 55 00         B  1024    				ld a,(fs_ez80_address+2)
004E97 B7                  B  1025    				or a
004E98 CA B9 4B 00         B  1026    				jp z,fs_mem_error
004E9C CD 49 53 00         B  1027    fs_srcadok		call transfer_length_countdown
004EA0 28 54               B  1028    				jr z,fs_lbof					004EA2 78                  B  1029    fs_sadok		ld a,b							004EA3 B1                  B  1030    				or c
004EA4 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
004EA6 22 04 55 00         B  1033    				ld (fs_ez80_address),hl			004EAA C1                  B  1034    				pop bc							004EAB 79                  B  1035    				ld a,c
004EAC 2A 01 55 00         B  1036    				ld hl,(fs_file_working_cluster)
004EB0 CD C0 53 00         B  1037    				call cluster_and_offset_to_lba
004EB4 CD 59 54 00         B  1038    				call fs_write_sector			004EB8 D8                  B  1039    				ret c							004EB9 0C                  B  1040    				inc c							004EBA 05                  B  1041    				dec b
004EBB 28 0B               B  1042    				jr z,fs_sfncl					004EBD C5                  B  1043    fs_sfns			push bc				
004EBE 01000200            B  1044    				ld bc,512						004EC2 11 73 66 00         B  1045    				ld de,sector_buffer				004EC6 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
004EC8 CD 9F 50 00         B  1048    fs_sfncl		call fs_find_free_cluster		004ECC D8                  B  1049    				ret c							004ECD C0                  B  1050    				ret nz							004ECE 2A 01 55 00         B  1051    				ld hl,(fs_file_working_cluster)
004ED2 ED5B 11 55 00       B  1052    				ld de,(fs_free_cluster)
004ED7 CD 15 53 00         B  1053    				call update_fat_entry_for_clust
004EDB D8                  B  1054    				ret c
004EDC 2A 11 55 00         B  1055    				ld hl,(fs_free_cluster)
004EE0 22 01 55 00         B  1056    				ld (fs_file_working_cluster),hl
004EE4 11FFFF00            B  1057    				ld de,0ffffh
004EE8 CD 15 53 00         B  1058    				call update_fat_entry_for_clust
004EEC D8                  B  1059    				ret c
004EED 3A B4 54 00         B  1060    				ld a,(fs_cluster_size)
004EF1 47                  B  1061    				ld b,a							004EF2 0E00                B  1062    				ld c,0							004EF4 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
004EF6 C1                  B  1065    fs_lbof			pop bc
004EF7 79                  B  1066    				ld a,c							004EF8 2A 01 55 00         B  1067    				ld hl,(fs_file_working_cluster)
004EFC CD C0 53 00         B  1068    				call cluster_and_offset_to_lba
004F00 CD 59 54 00         B  1069    				call fs_write_sector	
004F04 D8                  B  1070    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F05 AF                  B  1071    				xor a							004F06 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004F07                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004F07 CD D9 51 00         B  1079    				call fs_find_filename			004F0B D8                  B  1080    				ret c
004F0C C0                  B  1081    				ret nz
                           B  1082    				
004F0D DDCB0B66            B  1083    				bit 4,(ix+0bh)					004F11 28 04               B  1084    				jr z,okdelf
004F13 AF                  B  1085    				xor a
004F14 3EC6                B  1086    				ld a,0c6h						004F16 C9                  B  1087    				ret
                           B  1088    				
004F17 DDE5                B  1089    okdelf			push ix
004F19 E1                  B  1090    				pop hl
004F1A C3 0B 4D 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
004F1E                     B  1097    fs_rename_command
                           B  1098    
004F1E CD D9 51 00         B  1099    				call fs_find_filename			004F22 D8                  B  1100    				ret c							004F23 FEC2                B  1101    				cp 0c2h							004F25 28 04               B  1102    				jr z,fs_nfnok					004F27 AF                  B  1103    				xor a							004F28 3EC9                B  1104    				ld a,0c9h						004F2A C9                  B  1105    				ret
                           B  1106    			
004F2B 21 CB 54 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		004F2F 11 E3 54 00         B  1108    				ld de,fs_filename_buffer
004F33 010B0000            B  1109    				ld bc,11
004F37 EDB0                B  1110    				ldir
004F39 21 D7 54 00         B  1111    				ld hl,fs_alt_filename			004F3D 11 CB 54 00         B  1112    				ld de,fs_sought_filename
004F41 010B0000            B  1113    				ld bc,11
004F45 EDB0                B  1114    				ldir
004F47 CD D9 51 00         B  1115    				call fs_find_filename			004F4B D8                  B  1116    				ret c
004F4C FEC2                B  1117    				cp 0c2h
004F4E C8                  B  1118    				ret z							                           B  1119    				
004F4F DDE5                B  1120    				push ix
004F51 D1                  B  1121    				pop de
004F52 21 E3 54 00         B  1122    				ld hl,fs_filename_buffer	 	Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F56 010B0000            B  1123    				ld bc,11
004F5A EDB0                B  1124    				ldir							004F5C CD 59 54 00         B  1125    				call fs_write_sector			                           B  1126    				
004F60 AF                  B  1127    fs_rndone		xor a
004F61 C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
004F62                     B  1134    fs_goto_first_dir_entry
                           B  1135    
004F62 CD 30 1A 00         B  1136    				call fs_get_dir_cluster
004F66 ED53 1A 55 00       B  1137    				ld (fs_dir_entry_cluster),de
004F6B AF                  B  1138    				xor a
004F6C 32 20 55 00         B  1139    				ld (fs_dir_entry_sector),a		004F70 11000000            B  1140    				ld de,0
004F74 ED53 1D 55 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
004F79                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
004F79 3A 20 55 00         B  1156    				ld a,(fs_dir_entry_sector)		004F7D 4F                  B  1157    				ld c,a
004F7E 2A 1A 55 00         B  1158    				ld hl,(fs_dir_entry_cluster)	004F82 CD C0 53 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
004F86 7C                  B  1161    				ld a,h							004F87 B5                  B  1162    				or l							004F88 20 09               B  1163    				jr nz,nr_read					004F8A 2A BE 54 00         B  1164    				ld hl,(fs_root_dir_position)	004F8E 79                  B  1165    				ld a,c
004F8F CD 06 54 00         B  1166    				call set_absolute_lba
                           B  1167    				
004F93 CD 41 54 00         B  1168    nr_read			call fs_read_sector				004F97 D8                  B  1169    				ret c							                           B  1170    				
004F98 ED5B 1D 55 00       B  1171    				ld de,(fs_dir_entry_line_offset
004F9D DD21 73 66 00       B  1172    dscan_int_loop	ld ix,sector_buffer
004FA2 DD19                B  1173    				add ix,de
004FA4 DD7E00              B  1174    ds_int_loop		ld a,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FA7 B7                  B  1175    				or a							004FA8 28 0E               B  1176    				jr z,fs_dir_entry_free		
004FAA FEE5                B  1177    				cp 0e5h							004FAC 28 0A               B  1178    				jr z,fs_dir_entry_free	
004FAE FE05                B  1179    				cp 05h							004FB0 28 06               B  1180    				jr z,fs_dir_entry_free	
004FB2 DDCB0B5E            B  1181    				bit 3,(ix+0bh)					004FB6 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
004FB8                     B  1184    fs_dir_entry_free
                           B  1185    
004FB8 EB                  B  1186    				ex de,hl
004FB9 11200000            B  1187    				ld de,32
004FBD 19                  B  1188    				add hl,de
004FBE EB                  B  1189    				ex de,hl
004FBF CB4A                B  1190    				bit 1,d
004FC1 28 DA               B  1191    				jr z,dscan_int_loop
004FC3 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
004FC5                     B  1194    fs_dir_entry_in_use
                           B  1195    				
004FC5 ED53 1D 55 00       B  1196    				ld (fs_dir_entry_line_offset),d
004FCA DDE5                B  1197    				push ix
004FCC E1                  B  1198    				pop hl
004FCD CD 28 10 00         B  1199    				call os_clear_output_line
004FD1 0608                B  1200    				ld b,8							004FD3 11 95 61 00         B  1201    				ld de,output_line
004FD7 7E                  B  1202    dcopyn			ld a,(hl)
004FD8 FE20                B  1203    				cp ' '							004FDA 28 02               B  1204    				jr z,digchar
004FDC 12                  B  1205    				ld (de),a
004FDD 13                  B  1206    				inc de
004FDE 23                  B  1207    digchar			inc hl
004FDF 10 F6               B  1208    				djnz dcopyn
004FE1 7E                  B  1209    				ld a,(hl)						004FE2 FE20                B  1210    				cp ' '							004FE4 28 0A               B  1211    				jr z,dirnoex
004FE6 3E2E                B  1212    				ld a,'.'						004FE8 12                  B  1213    				ld (de),a
004FE9 13                  B  1214    				inc de	
004FEA 01030000            B  1215    				ld bc,3							004FEE EDB0                B  1216    				ldir
004FF0 AF                  B  1217    dirnoex			xor a 
004FF1 12                  B  1218    				ld (de),a						                           B  1219    				
004FF2 47                  B  1220    				ld b,a
004FF3 DDCB0B66            B  1221    				bit 4,(ix+0bh)					004FF7 28 01               B  1222    				jr z,fs_fniaf		
004FF9 04                  B  1223    				inc b							004FFA DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					004FFD DD4E1F              B  1225    				ld c,(ix+01fh)
005000 21 95 61 00         B  1226    				ld hl,output_line				Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005004 AF                  B  1227    				xor a
005005 C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
005006                     B  1233    fs_goto_next_dir_entry
                           B  1234    
005006 11200000            B  1235    				ld de,32
00500A 2A 1D 55 00         B  1236    				ld hl,(fs_dir_entry_line_offset
00500E 19                  B  1237    				add hl,de
00500F 22 1D 55 00         B  1238    				ld (fs_dir_entry_line_offset),h
005013 CB4C                B  1239    				bit 1,h
005015 CA 79 4F 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
005019 21000000            B  1242    dscan_new_sect	ld hl,0				
00501D 22 1D 55 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
005021 21 20 55 00         B  1245    				ld hl,fs_dir_entry_sector
005025 34                  B  1246    				inc (hl)						                           B  1247    			
005026 ED5B 1A 55 00       B  1248    				ld de,(fs_dir_entry_cluster)
00502B 7A                  B  1249    				ld a,d
00502C B3                  B  1250    				or e							00502D 20 0B               B  1251    				jr nz,nonroot2
00502F 3A C4 54 00         B  1252    				ld a,(fs_root_dir_sectors)
005033 BE                  B  1253    				cp (hl)
005034 28 23               B  1254    				jr z,endofdir			
005036 C3 79 4F 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												00503A 3A B4 54 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
00503E BE                  B  1258    				cp (hl)							00503F C2 79 4F 00         B  1259    				jp nz,fs_get_dir_entry
005043 3600                B  1260    				ld (hl),0						005045 2A 1A 55 00         B  1261    				ld hl,(fs_dir_entry_cluster)
005049 CD E9 52 00         B  1262    				call get_fat_entry_for_cluster
00504D 22 1A 55 00         B  1263    				ld (fs_dir_entry_cluster),hl
005051 CD 92 50 00         B  1264    				call fs_compare_hl_fff8			005055 DA 79 4F 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
005059 3ED2                B  1267    endofdir		ld a,0d2h
00505B B7                  B  1268    				or a							00505C C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
00505D                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00505D 2A BE 54 00         B  1279    				ld hl,(fs_root_dir_position)
005061 AF                  B  1280    				xor a
005062 CD 17 54 00         B  1281    				call set_abs_lba_and_read_secto
005066 D8                  B  1282    				ret c
005067 0E10                B  1283    				ld c,16							005069 DD21 73 66 00       B  1284    				ld ix,sector_buffer
00506E DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
005071 FE08                B  1286    				cp 08h
005073 20 11               B  1287    				jr nz,not_label
005075 DD360B00            B  1288    				ld (ix+0bh),0					005079 DDE5                B  1289    				push ix
00507B E1                  B  1290    				pop hl
00507C E5                  B  1291    				push hl
00507D 060B                B  1292    				ld b,11
00507F CD 03 12 00         B  1293    				call uppercasify_string
005083 E1                  B  1294    				pop hl
005084 AF                  B  1295    				xor a
005085 C9                  B  1296    				ret
                           B  1297    				
005086 11200000            B  1298    not_label		ld de,32						00508A DD19                B  1299    				add ix,de						00508C 10 E0               B  1300    				djnz find_vl
00508E AF                  B  1301    				xor a
00508F 3ED4                B  1302    				ld a,0d4h						005091 C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
005092                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
005092 E5                  B  1315    				push hl
005093 D5                  B  1316    				push de
005094 11F8FF00            B  1317    				ld de,0fff8h			
005098 B7                  B  1318    				or a							005099 52ED52              B  1319    				sbc.s hl,de						00509C D1                  B  1320    				pop de
00509D E1                  B  1321    				pop hl
00509E C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
00509F                     B  1327    fs_find_free_cluster
                           B  1328    	
00509F DD210000 00         B  1329    				ld ix,0							0050A4 ED5B B8 54 00       B  1330    				ld de,(fs_fat1_position)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050A9 AF                  B  1331    				xor a				
0050AA 32 0D 55 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
0050AE D5                  B  1333    				push de
0050AF E1                  B  1334    				pop hl
0050B0 3A 0D 55 00         B  1335    				ld a,(fs_working_sector)
0050B4 CD 17 54 00         B  1336    				call set_abs_lba_and_read_secto
0050B8 D8                  B  1337    				ret c
0050B9 21 73 66 00         B  1338    				ld hl,sector_buffer
0050BD 0600                B  1339    				ld b,0
0050BF 7E                  B  1340    fs_ffcl1		ld a,(hl)						0050C0 23                  B  1341    				inc hl
0050C1 B6                  B  1342    				or (hl)
0050C2 23                  B  1343    				inc hl
0050C3 28 14               B  1344    				jr z,fs_gotfc
0050C5 DD23                B  1345    				inc ix
0050C7 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
0050C9 2A C5 54 00         B  1348    				ld hl,(fs_sectors_per_fat)
0050CD 3A 0D 55 00         B  1349    				ld a,(fs_working_sector)		0050D1 3C                  B  1350    				inc a				
0050D2 BD                  B  1351    				cp l		
0050D3 20 D5               B  1352    				jr nz,fs_ffcl2					0050D5 3EC1                B  1353    fs_dfull		ld a,c1h						0050D7 B7                  B  1354    				or a							0050D8 C9                  B  1355    				ret
                           B  1356    			
0050D9 DDE5                B  1357    fs_gotfc		push ix							0050DB E1                  B  1358    				pop hl							0050DC 2B                  B  1359    				dec hl							0050DD 2B                  B  1360    				dec hl							0050DE ED5B C8 54 00       B  1361    				ld de,(fs_max_data_clusters)
0050E3 AF                  B  1362    				xor a
0050E4 52ED52              B  1363    				sbc.s hl,de						0050E7 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
0050E9 DD22 11 55 00       B  1366    				ld (fs_free_cluster),ix
0050EE AF                  B  1367    				xor a
0050EF C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
0050F0                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
0050F0 CD 30 1A 00         B  1380    				call fs_get_dir_cluster			0050F4 EB                  B  1381    				ex de,hl
0050F5 22 01 55 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050F9 AF                  B  1383    				xor a
0050FA 32 0D 55 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
0050FE 2A BE 54 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	005102 3A 0D 55 00         B  1387    				ld a,(fs_working_sector)
005106 CD 06 54 00         B  1388    				call set_absolute_lba
                           B  1389    				
00510A CD 30 1A 00         B  1390    				call fs_get_dir_cluster			00510E 7A                  B  1391    				ld a,d
00510F B3                  B  1392    				or e
005110 28 0C               B  1393    				jr z,at_rootd
005112 2A 01 55 00         B  1394    				ld hl,(fs_file_working_cluster)
005116 3A 0D 55 00         B  1395    				ld a,(fs_working_sector)
00511A CD C0 53 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
00511E CD 41 54 00         B  1398    at_rootd		call fs_read_sector
005122 D8                  B  1399    				ret c
005123 0610                B  1400    				ld b,16							005125 11200000            B  1401    				ld de,32
005129 DD21 73 66 00       B  1402    				ld ix,sector_buffer
00512E DD7E00              B  1403    scdirfe			ld a,(ix)						005131 B7                  B  1404    				or a
005132 28 65               B  1405    				jr z,got_fde
005134 FEE5                B  1406    				cp 0e5h
005136 28 61               B  1407    				jr z,got_fde
005138 DD19                B  1408    				add ix,de						00513A 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
00513C 21 0D 55 00         B  1411    				ld hl,fs_working_sector			005140 34                  B  1412    				inc (hl)
                           B  1413    				
005141 CD 30 1A 00         B  1414    				call fs_get_dir_cluster			005145 7A                  B  1415    				ld a,d
005146 B3                  B  1416    				or e
005147 20 0B               B  1417    				jr nz,ffenotroo
005149 3A C4 54 00         B  1418    				ld a,(fs_root_dir_sectors)		00514D BE                  B  1419    				cp (hl)							00514E 20 AE               B  1420    				jr nz,ffenxtsec
005150 AF                  B  1421    fenotfnd		xor a							005151 3EC3                B  1422    				ld a,0c3h						005153 C9                  B  1423    				ret
                           B  1424    			
005154 3A B4 54 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			005158 BE                  B  1426    				cp (hl)
005159 20 A3               B  1427    				jr nz,ffenxtsec
00515B 2A 01 55 00         B  1428    				ld hl,(fs_file_working_cluster)
00515F CD E9 52 00         B  1429    				call get_fat_entry_for_cluster	005163 D8                  B  1430    				ret c
005164 CD 92 50 00         B  1431    				call fs_compare_hl_fff8			005168 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
00516A CD 9F 50 00         B  1434    				call fs_find_free_cluster		Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00516E D8                  B  1435    				ret c							00516F C0                  B  1436    				ret nz							005170 ED5B 11 55 00       B  1437    				ld de,(fs_free_cluster)
005175 2A 01 55 00         B  1438    				ld hl,(fs_file_working_cluster)
005179 CD 15 53 00         B  1439    				call update_fat_entry_for_clust
00517D D8                  B  1440    				ret c
00517E EB                  B  1441    				ex de,hl						00517F 11FFFF00            B  1442    				ld de,0ffffh
005183 CD 15 53 00         B  1443    				call update_fat_entry_for_clust
005187 D8                  B  1444    				ret c
                           B  1445    			
005188 2A 11 55 00         B  1446    				ld hl,(fs_free_cluster)			00518C CD 9B 51 00         B  1447    				call fs_clear_cluster			005190 D8                  B  1448    				ret c
005191 2A 11 55 00         B  1449    				ld hl,(fs_free_cluster)			005195 C3 F5 50 00         B  1450    				jp ffenxtclu					                           B  1451    			
005199 AF                  B  1452    got_fde			xor a
00519A C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
00519B                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
00519B 22 0E 55 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
00519F CD C7 51 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
0051A3 AF                  B  1466    				xor a				
0051A4 32 0D 55 00         B  1467    				ld (fs_working_sector),a		0051A8 3A 0D 55 00         B  1468    wipeclulp		ld a,(fs_working_sector)		0051AC 2A 0E 55 00         B  1469    				ld hl,(fs_working_cluster)		0051B0 CD C0 53 00         B  1470    				call cluster_and_offset_to_lba	0051B4 CD 59 54 00         B  1471    				call fs_write_sector
0051B8 D8                  B  1472    				ret c
0051B9 21 0D 55 00         B  1473    				ld hl,fs_working_sector
0051BD 34                  B  1474    				inc (hl)
0051BE 3A B4 54 00         B  1475    				ld a,(fs_cluster_size)
0051C2 BE                  B  1476    				cp (hl)
0051C3 20 E3               B  1477    				jr nz,wipeclulp
0051C5 AF                  B  1478    				xor a
0051C6 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
0051C7                     B  1482    fs_clear_sector_buffer
                           B  1483    			
0051C7 E5                  B  1484    				push hl
0051C8 C5                  B  1485    				push bc
0051C9 21 73 66 00         B  1486    				ld hl,sector_buffer			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0051CD 01000200            B  1487    				ld bc,512				
0051D1 AF                  B  1488    				xor a				
0051D2 CD 41 15 00         B  1489    				call os_bchl_memfill	
0051D6 C1                  B  1490    				pop bc
0051D7 E1                  B  1491    				pop hl
0051D8 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
0051D9                     B  1498    fs_find_filename
                           B  1499    
0051D9 AF                  B  1500    				xor a
                           B  1501    
0051DA                     B  1502    fs_search	
                           B  1503    				
0051DA 32 28 55 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
0051DE CD 30 1A 00         B  1508    				call fs_get_dir_cluster
0051E2 ED53 01 55 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
0051E7 AF                  B  1510    				xor a
0051E8 32 0D 55 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
0051EC 2A BE 54 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	0051F0 3A 0D 55 00         B  1514    				ld a,(fs_working_sector)
0051F4 CD 06 54 00         B  1515    				call set_absolute_lba
                           B  1516    				
0051F8 CD 30 1A 00         B  1517    				call fs_get_dir_cluster			0051FC 7A                  B  1518    				ld a,d
0051FD B3                  B  1519    				or e
0051FE 28 0C               B  1520    				jr z,at_rootd2
005200 2A 01 55 00         B  1521    				ld hl,(fs_file_working_cluster)
005204 3A 0D 55 00         B  1522    				ld a,(fs_working_sector)
005208 CD C0 53 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
00520C CD 41 54 00         B  1525    at_rootd2		call fs_read_sector
005210 D8                  B  1526    				ret c
005211 0E10                B  1527    				ld c,16							005213 DD21 73 66 00       B  1528    				ld ix,sector_buffer
005218 DDE5                B  1529    ndirentr		push ix
00521A D1                  B  1530    				pop de
00521B 3A 28 55 00         B  1531    				ld a,(fs_search_type)
00521F B7                  B  1532    				or a
005220 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
005222 DD7E00              B  1535    				ld a,(ix)						005225 FE80                B  1536    				cp 080h							005227 30 35               B  1537    				jr nc,fnnotsame
005229 FE20                B  1538    				cp 020h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00522B 38 31               B  1539    				jr c,fnnotsame
00522D ED5B 25 55 00       B  1540    				ld de,(fs_stash_dir_block)		005232 DD7E1A              B  1541    				ld a,(ix+01ah)
005235 BB                  B  1542    				cp e
005236 20 26               B  1543    				jr nz,fnnotsame
005238 DD7E1B              B  1544    				ld a,(ix+01bh)
00523B BA                  B  1545    				cp d
00523C 28 1E               B  1546    				jr z,fs_found
00523E 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
005240 FD21 CB 54 00       B  1549    fs_ststr		ld iy,fs_sought_filename		005245 060B                B  1550    				ld b,11							005247 1A                  B  1551    cmpfnlp			ld a,(de)						005248 CD 0F 12 00         B  1552    				call os_uppercasify				00524C 6F                  B  1553    				ld l,a
00524D FD7E00              B  1554    				ld a,(iy)
005250 CD 0F 12 00         B  1555    				call os_uppercasify
005254 BD                  B  1556    				cp l				
005255 20 07               B  1557    				jr nz,fnnotsame
005257 FD23                B  1558    				inc iy
005259 13                  B  1559    				inc de
00525A 10 EB               B  1560    				djnz cmpfnlp
00525C AF                  B  1561    fs_found		xor a							00525D C9                  B  1562    				ret
                           B  1563    			
00525E 11200000            B  1564    fnnotsame		ld de,32						005262 DD19                B  1565    				add ix,de
005264 0D                  B  1566    				dec c
005265 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
005267 21 0D 55 00         B  1569    				ld hl,fs_working_sector			00526B 34                  B  1570    				inc (hl)
                           B  1571    				
00526C CD 30 1A 00         B  1572    				call fs_get_dir_cluster			005270 7A                  B  1573    				ld a,d
005271 B3                  B  1574    				or e
005272 20 0D               B  1575    				jr nz,notrootdir
005274 3A C4 54 00         B  1576    				ld a,(fs_root_dir_sectors)		005278 BE                  B  1577    				cp (hl)							005279 C2 EC 51 00         B  1578    				jp nz,ffnnxtsec
00527D 3EC2                B  1579    fnnotfnd		ld a,0c2h						00527F B7                  B  1580    				or a
005280 C9                  B  1581    				ret
                           B  1582    			
005281                     B  1583    notrootdir
                           B  1584    				
005281 3A B4 54 00         B  1585    				ld a,(fs_cluster_size)			005285 BE                  B  1586    				cp (hl)
005286 C2 EC 51 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
00528A 2A 01 55 00         B  1589    				ld hl,(fs_file_working_cluster)
00528E CD E9 52 00         B  1590    				call get_fat_entry_for_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005292 D8                  B  1591    				ret c
005293 CD 92 50 00         B  1592    				call fs_compare_hl_fff8			005297 30 E4               B  1593    				jr nc,fnnotfnd					005299 EB                  B  1594    				ex de,hl						00529A C3 E2 51 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
00529E                     B  1600    fs_hl_to_alt_filename
                           B  1601    
00529E 11 D7 54 00         B  1602    				ld de,fs_alt_filename
0052A2 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
0052A4                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
0052A4 11 CB 54 00         B  1612    				ld de,fs_sought_filename
0052A8 CD B3 53 00         B  1613    hltofngo		call fs_clear_filename			0052AC D5                  B  1614    				push de			
0052AD DDE1                B  1615    				pop ix							                           B  1616    				
0052AF 0E00                B  1617    				ld c,0
0052B1 0608                B  1618    				ld b,8
0052B3 7E                  B  1619    csfnlp2			ld a,(hl)						0052B4 B7                  B  1620    				or a
0052B5 C8                  B  1621    				ret z							0052B6 FE20                B  1622    				cp 32
0052B8 C8                  B  1623    				ret z							0052B9 FE2F                B  1624    				cp 02fh
0052BB C8                  B  1625    				ret z							0052BC FE2E                B  1626    				cp '.'
0052BE 28 16               B  1627    				jr z,dofn_ext					0052C0 12                  B  1628    				ld (de),a
0052C1 13                  B  1629    				inc de
0052C2 23                  B  1630    				inc hl
0052C3 0C                  B  1631    				inc c							0052C4 10 ED               B  1632    				djnz csfnlp2					0052C6 7E                  B  1633    find_ext		ld a,(hl)
0052C7 FE2E                B  1634    				cp '.'							0052C9 28 0B               B  1635    				jr z,dofn_ext	
0052CB FE20                B  1636    				cp ' '							0052CD C8                  B  1637    				ret z
0052CE FE2F                B  1638    				cp 02fh
0052D0 C8                  B  1639    				ret z
0052D1 B7                  B  1640    				or a
0052D2 C8                  B  1641    				ret z
0052D3 23                  B  1642    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052D4 18 F0               B  1643    				jr find_ext
                           B  1644    				
0052D6 23                  B  1645    dofn_ext		inc hl							0052D7 0603                B  1646    				ld b,3				
0052D9 7E                  B  1647    fnextlp			ld a,(hl)						0052DA B7                  B  1648    				or a
0052DB C8                  B  1649    				ret z							0052DC FE20                B  1650    				cp 32
0052DE C8                  B  1651    				ret z
0052DF DD7708              B  1652    				ld (ix+8),a
0052E2 DD23                B  1653    				inc ix
0052E4 23                  B  1654    				inc hl
0052E5 0C                  B  1655    				inc c
0052E6 10 F1               B  1656    				djnz fnextlp
0052E8 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
0052E9                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
0052E9 C5                  B  1666    				push bc
0052EA D5                  B  1667    				push de
0052EB 01000000            B  1668    				ld bc,0
0052EF 4D                  B  1669    				ld c,l
0052F0 7C                  B  1670    				ld a,h
0052F1 2A B8 54 00         B  1671    				ld hl,(fs_fat1_position)
0052F5 CD 17 54 00         B  1672    				call set_abs_lba_and_read_secto
0052F9 38 17               B  1673    				jr c,hwerr
0052FB DDE5                B  1674    				push ix
0052FD DD21 73 66 00       B  1675    				ld ix,sector_buffer
005302 DD09                B  1676    				add ix,bc
005304 DD09                B  1677    				add ix,bc
005306 21000000            B  1678    				ld hl,0
00530A DD6E00              B  1679    				ld l,(ix)
00530D DD6601              B  1680    				ld h,(ix+1)
005310 DDE1                B  1681    				pop ix
005312 D1                  B  1682    hwerr			pop de
005313 C1                  B  1683    				pop bc
005314 C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
005315                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005315 C5                  B  1695    				push bc
005316 E5                  B  1696    				push hl
005317 01000000            B  1697    				ld bc,0
00531B 4D                  B  1698    				ld c,l
00531C 7C                  B  1699    				ld a,h
00531D 2A B8 54 00         B  1700    				ld hl,(fs_fat1_position)		005321 CD 35 53 00         B  1701    				call fat_upd
005325 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
005327 E1                  B  1704    				pop hl
005328 E5                  B  1705    				push hl
005329 7C                  B  1706    				ld a,h
00532A 2A BB 54 00         B  1707    				ld hl,(fs_fat2_position)		00532E CD 35 53 00         B  1708    				call fat_upd
005332 E1                  B  1709    fup_end			pop hl
005333 C1                  B  1710    				pop bc
005334 C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
005335 CD 17 54 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
005339 38 0D               B  1715    				jr c,ufehwerr
00533B 21 73 66 00         B  1716    				ld hl,sector_buffer
00533F 09                  B  1717    				add hl,bc
005340 09                  B  1718    				add hl,bc
005341 73                  B  1719    				ld (hl),e
005342 23                  B  1720    				inc hl
005343 72                  B  1721    				ld (hl),d
005344 CD 59 54 00         B  1722    				call fs_write_sector
005348 C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
005349                     B  1728    transfer_length_countdown
                           B  1729    
005349 E5                  B  1730    				push hl							00534A C5                  B  1731    				push bc
                           B  1732    			
00534B 0604                B  1733    				ld b,4
00534D 21 EF 54 00         B  1734    				ld hl,fs_file_pointer			005351 34                  B  1735    fpinclp			inc (hl)
005352 20 03               B  1736    				jr nz,fs_fpino
005354 23                  B  1737    				inc hl
005355 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
005357 2A FB 54 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
00535B 2B                  B  1741    				dec hl
00535C 22 FB 54 00         B  1742    				ld (fs_file_transfer_length),hl
005360 01000000            B  1743    				ld bc,0
005364 B7                  B  1744    				or a
005365 ED4A                B  1745    				adc hl,bc						                           B  1746    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005367 C1                  B  1747    				pop bc
005368 E1                  B  1748    				pop hl
005369 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
00536A                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
00536A CD 30 1A 00         B  1757    				call fs_get_dir_cluster			00536E 7A                  B  1758    				ld a,d
00536F B3                  B  1759    				or e
005370 20 10               B  1760    				jr nz,fs_dnnr
005372 21 4F 5F 00         B  1761    				ld hl,vol_txt+1					005376 3A 4A 5F 00         B  1762    				ld a,(current_volume)
00537A C630                B  1763    				add a,030h
00537C 32 52 5F 00         B  1764    				ld (vol_txt+4),a
005380 AF                  B  1765    				xor a
005381 C9                  B  1766    				ret
                           B  1767    					
005382 ED53 25 55 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
005387 CD 22 4A 00         B  1769    				call fs_parent_dir_command		00538B D8                  B  1770    				ret c
00538C B7                  B  1771    				or a
00538D C0                  B  1772    				ret nz
00538E 3E01                B  1773    				ld a,1
005390 CD DA 51 00         B  1774    				call fs_search					005394 D8                  B  1775    				ret c
005395 C0                  B  1776    				ret nz
                           B  1777    					
005396 DDE5                B  1778    fs_gdbn			push ix
005398 E1                  B  1779    				pop hl
005399 060B                B  1780    				ld b,11							00539B 7E                  B  1781    ntdirn			ld a,(hl)
00539C FE20                B  1782    				cp ' '
00539E 28 03               B  1783    				jr z,rdirfsp
0053A0 23                  B  1784    				inc hl
0053A1 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
0053A3 3600                B  1787    rdirfsp			ld (hl),0
0053A5 DDE5                B  1788    				push ix
0053A7 ED5B 25 55 00       B  1789    				ld de,(fs_stash_dir_block)
0053AC CD 3C 1A 00         B  1790    				call fs_update_dir_cluster		0053B0 E1                  B  1791    				pop hl	
0053B1 AF                  B  1792    				xor a							0053B2 C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
0053B3                     B  1797    fs_clear_filename
                           B  1798    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0053B3 D5                  B  1799    				push de							0053B4 C5                  B  1800    				push bc
0053B5 060C                B  1801    				ld b,12
0053B7 3E20                B  1802    				ld a,' '
0053B9 12                  B  1803    clrfnlp			ld (de),a
0053BA 13                  B  1804    				inc de
0053BB 10 FC               B  1805    				djnz clrfnlp
0053BD C1                  B  1806    				pop bc
0053BE D1                  B  1807    				pop de
0053BF C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
0053C0                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
0053C0 C5                  B  1817    				push bc
0053C1 D5                  B  1818    				push de
0053C2 E5                  B  1819    				push hl
0053C3 DDE5                B  1820    				push ix
                           B  1821    
0053C5 2B                  B  1822    				dec hl							0053C6 2B                  B  1823    				dec hl							0053C7 11000000            B  1824    				ld de,0							0053CB 01000000            B  1825    				ld bc,0
0053CF 5F                  B  1826    				ld e,a
0053D0 3A B4 54 00         B  1827    				ld a,(fs_cluster_size)			0053D4 CB3F                B  1828    caotllp			srl a
0053D6 28 03               B  1829    				jr z,clusdone
0053D8 29                  B  1830    				add hl,hl						0053D9 18 F9               B  1831    				jr caotllp
                           B  1832    			
0053DB ED4B C1 54 00       B  1833    clusdone		ld bc,(fs_data_area)			0053E0 09                  B  1834    				add hl,bc						0053E1 19                  B  1835    				add hl,de						                           B  1836    				
0053E2 E5                  B  1837    add_ptn_offset	push hl							0053E3 CD 6A 1A 00         B  1838    				call fs_calc_volume_offset
0053E7 DD21 7C 5F 00       B  1839    				ld ix,volume_mount_list
0053EC DD19                B  1840    				add ix,de
0053EE E1                  B  1841    				pop hl
0053EF DD0708              B  1842    				ld bc,(ix+08h)					0053F2 DD7E0B              B  1843    				ld a,(ix+0bh)
0053F5 09                  B  1844    				add hl,bc
0053F6 CE00                B  1845    				adc a,0
0053F8 22 21 61 00         B  1846    				ld (sector_lba0),hl				0053FC 32 24 61 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
005400 DDE1                B  1849    				pop ix
005402 E1                  B  1850    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005403 D1                  B  1851    				pop de
005404 C1                  B  1852    				pop bc
005405 C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
005406                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
005406 C5                  B  1862    				push bc							005407 D5                  B  1863    				push de							005408 E5                  B  1864    				push hl							005409 DDE5                B  1865    				push ix							00540B 01000000            B  1866    				ld bc,0
00540F 11000000            B  1867    				ld de,0
005413 5F                  B  1868    				ld e,a
005414 19                  B  1869    				add hl,de
005415 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
005417                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
005417 CD 06 54 00         B  1875    				call set_absolute_lba
00541B C3 41 54 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
00541F                     B  1881    backup_sector_lba
                           B  1882    
00541F C5                  B  1883    				push bc
005420 D5                  B  1884    				push de
005421 E5                  B  1885    				push hl
005422 21 21 61 00         B  1886    				ld hl,sector_lba0
005426 11 29 55 00         B  1887    				ld de,fs_backed_up_sector_lba0
00542A 01040000            B  1888    lbabur			ld bc,4
00542E EDB0                B  1889    				ldir
005430 E1                  B  1890    				pop hl
005431 D1                  B  1891    				pop de
005432 C1                  B  1892    				pop bc
005433 C9                  B  1893    				ret
                           B  1894    
                           B  1895    
005434                     B  1896    restore_sector_lba
                           B  1897    
005434 C5                  B  1898    				push bc
005435 D5                  B  1899    				push de
005436 E5                  B  1900    				push hl
005437 21 29 55 00         B  1901    				ld hl,fs_backed_up_sector_lba0
00543B 11 21 61 00         B  1902    				ld de,sector_lba0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00543F 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
005441                     B  1907    fs_read_sector
                           B  1908    			
005441 C5                  B  1909    				push bc
005442 D5                  B  1910    				push de
005443 E5                  B  1911    				push hl
005444 DDE5                B  1912    				push ix
005446 FDE5                B  1913    				push iy
005448 01040000            B  1914    				ld bc,04h						00544C CD 6A 54 00         B  1915    				call sector_access_redirect
005450 FDE1                B  1916    secaccend		pop iy
005452 DDE1                B  1917    				pop ix
005454 E1                  B  1918    				pop hl
005455 D1                  B  1919    				pop de
005456 C1                  B  1920    				pop bc
005457 3F                  B  1921    				ccf								005458 C9                  B  1922    				ret								                           B  1923    
                           B  1924    
005459                     B  1925    fs_write_sector	
                           B  1926    				
005459 C5                  B  1927    				push bc
00545A D5                  B  1928    				push de
00545B E5                  B  1929    				push hl
00545C DDE5                B  1930    				push ix
00545E FDE5                B  1931    				push iy
005460 01080000            B  1932    				ld bc,08h						005464 CD 6A 54 00         B  1933    				call sector_access_redirect
005468 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
00546A                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
00546A 3A 4B 5F 00         B  1941    				ld a,(current_driver)			00546E CD 02 1A 00         B  1942    				call locate_driver_base			005472 EB                  B  1943    				ex de,hl
005473 09                  B  1944    				add hl,bc						005474 E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
005475                     B  1949    bootsector_stub
                           B  1950    
005475 EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
00547D 352E3000 02004000 
005485 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
00548D 3F00FF00 00000000 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005495 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
00549D E636984E 4F204E41 
0054A5 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
0054AD 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
0054B4 00                  B  1958    fs_cluster_size				db 0
0054B5 000000              B  1959    fs_bytes_per_cluster		dw24 0
0054B8 000000              B  1960    fs_fat1_position			dw24 0		; offse
0054BB 000000              B  1961    fs_fat2_position			dw24 0		; offse
0054BE 000000              B  1962    fs_root_dir_position		dw24 0		; offse
0054C1 000000              B  1963    fs_data_area				dw24 0		; offse
0054C4 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
0054C5 000000              B  1966    fs_sectors_per_fat			dw24 0
0054C8 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
0054CB 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
0054D1 00 00 00 00 00 00 
0054D7 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
0054DD 00 00 00 00 00 00 
0054E3 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
0054E9 00 00 00 00 00 00 
                           B  1972    
0054EF 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
0054F3 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
0054F7 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
0054FB 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
0054FE 000000              B  1979    fs_file_start_cluster		dw24 0
005501 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
005504 000000              B  1982    fs_ez80_address				dw24 0
005507 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
00550A 000000              B  1985    fs_in_sector_offset			dw24 0
00550D 00                  B  1986    fs_working_sector			db 0
                           B  1987    
00550E 000000              B  1988    fs_working_cluster			dw24 0
005511 000000              B  1989    fs_free_cluster				dw24 0
005514 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
005517 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
00551A 000000              B  1994    fs_dir_entry_cluster		dw24 0
00551D 000000              B  1995    fs_dir_entry_line_offset	dw24 0
005520 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
005521 00                  B  1998    fs_filepointer_valid		db 0
005522 000000              B  1999    fs_sector_pos_cnt			dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  2000    
005525 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
005528 00                  B  2003    fs_search_type				db 0
                           B  2004    
005529 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3093    
                           A  3094    ;----------------------------------------------
                           A  3095    ; OS Data 
                           A  3096    ;----------------------------------------------
                           A  3097    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
00552D                     B     9    kernal_table
                           B    10    
00552D FC1700              B    11    	dw24 ext_mount_volumes			;00		
005530 AA1700              B    12    	dw24 os_get_device_info			;01		
005533 601600              B    13    	dw24 os_check_volume_format		;02		
005536 8B1A00              B    14    	dw24 ext_change_volume			;03		
005539 BD1700              B    15    	dw24 os_get_volume_info			;04		
00553C 6A1600              B    16    	dw24 ext_format					;05		
00553F 9C1600              B    17    	dw24 ext_make_dir				;06		
005542 AA1600              B    18    	dw24 ext_change_dir				;07		
005545 B81600              B    19    	dw24 os_parent_dir				;08		
005548 BE1600              B    20    	dw24 os_root_dir				;09		
00554B 061700              B    21    	dw24 ext_delete_dir				;0a		
00554E EF1500              B    22    	dw24 ext_find_file				;0b		
005551 0B1600              B    23    	dw24 ext_set_file_pointer		;0c		
005554 041600              B    24    	dw24 os_set_load_length			;0d		
005557 1E1600              B    25    	dw24 ext_read_bytes_from_file	;0e		
00555A C41600              B    26    	dw24 ext_erase_file				;0f		
00555D EC1600              B    27    	dw24 ext_rename_file			;10		
005560 2E1600              B    28    	dw24 ext_create_file			;11		
005563 401600              B    29    	dw24 ext_write_bytes_to_file	;12		
005566 591A00              B    30    	dw24 fs_get_total_sectors		;13		
005569 D21600              B    31    	dw24 os_goto_first_dir_entry	;14		 
00556C D81600              B    32    	dw24 os_get_dir_entry			;15		
00556F DE1600              B    33    	dw24 os_goto_next_dir_entry		;16		
005572 161700              B    34    	dw24 ext_read_sector			;17		
005575 441700              B    35    	dw24 ext_write_sector			;18		
005578 C71A00              B    36    	dw24 ext_file_sector_list		;19		
00557B 301A00              B    37    	dw24 fs_get_dir_cluster			;1a		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00557E 3C1A00              B    38    	dw24 fs_update_dir_cluster		;1b		
005581 E41600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005584 434400              B    41    	dw24 os_wait_key_press			;1d		
005587 904400              B    42    	dw24 os_get_key_press			;1e		
00558A 341500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
00558D CB1700              B    45    	dw24 ext_serial_get_header		;20		
005590 D51700              B    46    	dw24 ext_serial_receive_file	;21		 
005593 DE1700              B    47    	dw24 ext_serial_send_file		;22		 
005596 EB1700              B    48    	dw24 ext_serial_tx				;23		
005599 F21700              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
00559C 100F00              B    51    	dw24 ext_print_string			;25		
00559F 5B3D00              B    52    	dw24 hwsc_clear_screen			;26		
0055A2 2D4100              B    53    	dw24 hwsc_wait_vrt				;27		
0055A5 B91300              B    54    	dw24 os_set_cursor_position		;28		
0055A8 2B1A00              B    55    	dw24 ext_plot_char				;29		
0055AB 491500              B    56    	dw24 ext_set_pen				;2a		
0055AE 561500              B    57    	dw24 ext_background_colours		;2b		
0055B1 883F00              B    58    	dw24 hwsc_draw_cursor			;2c		
0055B4 501500              B    59    	dw24 os_get_pen					;2d		
0055B7 A43D00              B    60    	dw24 hwsc_scroll_up				;2e		
0055BA FB3C00              B    61    	dw24 os_set_video_hw_regs		;2f		
0055BD 3A1500              B    62    	dw24 os_get_display_size		;30		
0055C0 1D4000              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0055C3 D91300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0055C6 2F1B00              B    66    	dw24 ext_set_envar				;33		
0055C9 F31A00              B    67    	dw24 ext_get_envar				;34		
0055CC 891B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
0055CF 2F1400              B    70    	dw24 os_set_mouse_window		;36		
0055D2 751400              B    71    	dw24 os_get_mouse_position		;37		
0055D5 4C1400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
0055D8 9B4100              B    74    	dw24 hwsc_time_delay			;39		
0055DB CD1100              B    75    	dw24 ext_compare_strings		;3a		
0055DE 591000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
0055E1 8E1000              B    77    	dw24 ext_ascii_to_hexword		;3c		
0055E4 E31000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
0055E7 804100              B    80    	dw24 hwsc_get_version			;3e		
0055EA A31300              B    81    	dw24 os_dont_store_registers	;3f		
0055ED E01B00              B    82    	dw24 os_get_font_info			;40 	
0055F0 BE4100              B    83    	dw24 hwsc_read_rtc				;41     
0055F3 E64100              B    84    	dw24 hwsc_write_rtc				;42		 
0055F6 DA1B00              B    85    	dw24 os_get_keymap_location		;43		 
0055F9 3E3600              B    86    	dw24 os_get_mem_high			;44
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    ; Non-packed Text Strings
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B    90    ;----------------------------------------------
                           B    91    
0055FC 50524F53 4520666F   B    92    welcome_message			db "PROSE for EZ80P by 
005604 7220455A 38305020 
00560C 62792050 68696C20 
005614 52757374 6F6E2032 
00561C 3031310B 0B 
005621 53595354 454D2052   B    93    						db "SYSTEM RAM free abo
005629 414D2066 72656520 
005631 61626F76 653A2024 
005639 00 
00563A 44726976 65733A0B   B    94    storage_txt				db "Drives:",11,0
005642 00 
005643 434F4D4D 414E4453   B    95    os_dos_cmds_txt			db "COMMANDS",0
00564B 00 
00564C 53544152 5455502E   B    96    startup_script_fn		db "STARTUP.SCR",0
005654 53435200 
005658 2400                B    97    os_hex_prefix_txt		db "$",0
00565A 4F532056 65727369   B    98    os_version_txt			db "OS Version: $",0	005662 6F6E3A20 2400 
005668 414D4F45 42412048   B    99    hw_version_txt			db "AMOEBA HW Version: 
005670 57205665 7273696F 
005678 6E3A2024 00 
00567D 202F2000            B   100    fwd_slash_txt			db " / ",0
005681 4C6F6164 696E672E   B   101    loading_txt				db "Loading..",11,0
005689 2E0B00 
00568C 53617669 6E672E2E   B   102    saving_txt				db "Saving..",11,0
005694 0B00 
005696 2E657A70 20         B   103    ezp_extension_txt		db ".ezp",32
00569B 0B4D6F72 653F0B0B   B   104    os_more_txt				db 11,"More?",11,11,0
0056A3 00 
0056A4 52656769 73746572   B   105    nmi_freeze_txt			db "Register Dump:"
0056AC 2044756D 703A 
0056B2 0B0B00              B   106    crlfx2_txt				db 11,11,0
0056B5 7800                B   107    rep_char_txt			db "x",0
0056B7 20746F20 00         B   108    to_txt					db " to ",0
0056BC 4552524F 5200       B   109    error_txt				db "ERROR",0
0056C2 494620              B   110    if_command_txt			db "IF "
0056C5 454E4420            B   111    end_command_txt			db "END "
                           B   112    
                           B   113    ;----------------------------------------------
                           B   114    ; Packed text section
                           B   115    ;----------------------------------------------
                           B   116    
0056C9 00444542 5547       B   117    dictionary				db 0,"DEBUG"			0056CF 002D2D2D 2D2D       B   118    						db 0,"-----"			0056D5 00494F              B   119    						db 0,"IO"				0056D8 002D2D              B   120    						db 0,"--"				0056DB 004D4953 43         B   121    						db 0,"MISC"				0056E0 002D2D2D 2D         B   122    						db 0,"----"				0056E5 00616464 72         B   123    						db 0,"addr"				0056EA 0050524F 5345       B   124    						db 0,"PROSE"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0056F0 00612062 2063       B   125    						db 0,"a b c"			0056F6 00416464 72657373   B   126    						db 0,"Address"			0056FE 00427974 6573       B   127    						db 0,"Bytes"			005704 00457865 63757461   B   128    						db 0,"Executable"		00570C 626C65 
00570F 0048756E 74         B   129    						db 0,"Hunt"				005714 0046696C 6C         B   130    						db 0,"Fill"				005719 00476F74 6F         B   131    						db 0,"Goto"				                           B   132    						
00571E 0053686F 77         B   133    						db 0,"Show"				005723 00435055            B   134    						db 0,"CPU"				005727 00526567 69737465   B   135    						db 0,"Registers"		00572F 7273 
005731 004173              B   136    						db 0,"As"				005734 00415343 4949       B   137    						db 0,"ASCII"			00573A 00436C65 6172       B   138    						db 0,"Clear"			005740 00536372 65656E     B   139    						db 0,"Screen"			005747 00446973 61737365   B   140    						db 0,"Disassemble"		00574F 6D626C65 
005753 00537769 746368     B   141    						db 0,"Switch"			00575A 00436F70 79         B   142    						db 0,"Copy"				00575F 00446576 696365     B   143    						db 0,"Device"			005766 00436861 6E6765     B   144    						db 0,"Change"			00576D 00447269 7665       B   145    						db 0,"Drive"			005773 00446972            B   146    						db 0,"Dir"				005777 002F                B   147    						db 0,"/"				005779 00666E              B   148    						db 0,"fn"				                           B   149    						
00577C 0044656C 657465     B   150    						db 0,"Delete"			005783 0046696C 65         B   151    						db 0,"File"				005788 00496E66 6F         B   152    						db 0,"Info"				00578D 00564F4C 783A       B   153    						db 0,"VOLx:"			005793 004D616B 65         B   154    						db 0,"Make"				005798 0052656D 6F756E74   B   155    						db 0,"Remount"			0057A0 00537461 7274       B   156    						db 0,"Start"			0057A6 00576172 6E696E67   B   157    						db 0,"Warning!"			0057AE 21 
0057AF 00416C6C            B   158    						db 0,"All"				0057B3 0052656D 6F7665     B   159    						db 0,"Remove"			0057BA 0052656E 616D65     B   160    						db 0,"Rename"			0057C1 004F72              B   161    						db 0,"Or"				0057C4 00526563 65697665   B   162    						db 0,"Receive"			0057CC 00536176 65         B   163    						db 0,"Save"				0057D1 00547261 6E736D69   B   164    						db 0,"Transmit"			0057D9 74 
0057DA 004C6F61 64         B   165    						db 0,"Load"				                           B   166    						
0057DF 004F532F 4857       B   167    						db 0,"OS/HW"			0057E5 00566572 73696F6E   B   168    						db 0,"Version"			0057ED 005B7065 6E207061   B   169    						db 0,"[pen paper]"		0057F5 7065725D 
0057F9 803A                B   170    						db 80h,":"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057FB 813E                B   171    						db 81h,">"				0057FD 002A                B   172    						db 0,"*"				0057FF 00566F6C 756D6573   B   173    						db 0,"Volumes"			005807 8343                B   174    						db 83h,"C"				005809 844344              B   175    						db 84h,"CD"				00580C 85434C53            B   176    						db 85h,"CLS"			005810 8650454E            B   177    						db 86h,"PEN"			005814 8744                B   178    						db 87h,"D"				005816 8844454C            B   179    						db 88h,"DEL"			00581A 89444952            B   180    						db 89h,"DIR"			00581E 8A48                B   181    						db 8ah,"H"				005820 8B46                B   182    						db 8bh,"F"				                           B   183    						
005822 004F6E              B   184    						db 0,"On"				005825 8C464F52 4D4154     B   185    						db 8ch,"FORMAT"			00582C 0047                B   186    						db 0,"G"				00582E 8D4C42              B   187    						db 8dh,"LB"				005831 8E4D                B   188    						db 8eh,"M"				005833 8F4D4F55 4E54       B   189    						db 8fh,"MOUNT"			005839 004265              B   190    						db 0,"Be"				00583C 9052                B   191    						db 90h,"R"				00583E 915244              B   192    						db 91h,"RD"				005841 92524E              B   193    						db 92h,"RN"				005844 935258              B   194    						db 93h,"RX"				005847 945342              B   195    						db 94h,"SB"				00584A 9554                B   196    						db 95h,"T"				00584C 965458              B   197    						db 96h,"TX"				00584F 97564552 53         B   198    						db 97h,"VERS"			005854 00577269 7465       B   199    						db 0,"Write"			                           B   200    						
00585A 004D656D            B   201    						db 0,"Mem"				00585E 00227478 7422       B   202    						db 0,22h,"txt",22h		005864 0057696C 6C         B   203    						db 0,"Will"				005869 00526174 65         B   204    						db 0,"Rate"				00586E 0061                B   205    						db 0,"a"				005870 00507265 70         B   206    						db 0,"Prep"				005875 984D44              B   207    						db 98h,"MD"				005878 00447269 766573     B   208    						db 0,"Drives"			00587F 006F6C64 666E       B   209    						db 0,"oldfn"			005885 006E6577 666E       B   210    						db 0,"newfn"			00588B 006C656E            B   211    						db 0,"len"				00588F 00436F6C 6F757273   B   212    						db 0,"Colours"			005897 993F                B   213    						db 99h,"?"				005899 00436F6D 6D616E64   B   214    						db 0,"Commands"			0058A1 73 
0058A2 0020                B   215    						db 0," "				0058A4 002D                B   216    						db 0,"-"				                           B   217    						
0058A6 00566F6C 756D65     B   218    						db 0,"Volume"			0058AD 0046756C 6C         B   219    						db 0,"Full"				0058B2 004E6F74            B   220    						db 0,"Not"				0058B6 00466F75 6E64       B   221    						db 0,"Found"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058BC 004C656E 677468     B   222    						db 0,"Length"			0058C3 005A6572 6F         B   223    						db 0,"Zero"				0058C8 004F7574            B   224    						db 0,"Out"				0058CC 004F66              B   225    						db 0,"Of"				0058CF 0052616E 6765       B   226    						db 0,"Range"			0058D5 00416C72 65616479   B   227    						db 0,"Already"			0058DD 00457869 737473     B   228    						db 0,"Exists"			0058E4 004174              B   229    						db 0,"At"				0058E7 00526F6F 74         B   230    						db 0,"Root"				0058EC 004D6973 6D617463   B   231    						db 0,"Mismatch"			0058F4 68 
0058F5 00526571 75657374   B   232    						db 0,"Request"			0058FD 00446174 61         B   233    						db 0,"Data"				                           B   234    				
005902 00454F46            B   235    						db 0,"EOF"				005906 00416674 6572       B   236    						db 0,"After"			00590C 00556E6B 6E6F776E   B   237    						db 0,"Unknown"			005914 00436F6D 6D616E64   B   238    						db 0,"Command"			00591C 00426164            B   239    						db 0,"Bad"				005920 00486578            B   240    						db 0,"Hex"				005924 004E6F              B   241    						db 0,"No"				005927 0041626F 72746564   B   242    						db 0,"Aborted"			00592F 00507265 73656E74   B   243    						db 0,"Present"			005937 00436865 636B7375   B   244    						db 0,"Checksum"			00593F 6D 
005940 004C6F61 646564     B   245    						db 0,"Loaded"			005947 00436F6D 6D73       B   246    						db 0,"Comms"			00594D 00457272 6F72       B   247    						db 0,"Error"			005953 00417267 756D656E   B   248    						db 0,"Arguments"		00595B 7473 
00595D 004C6F73 74         B   249    						db 0,"Lost"				                           B   250    						
005962 00                  B   251    						db 0
005963 46415431 36         B   252    fat16_txt				db "FAT16"				                           B   253    
005968 00536572 69616C     B   254    						db 0,"Serial"			00596F 0054696D 65         B   255    						db 0,"Time"				005974 00466F6E 74         B   256    						db 0,"Font"				005979 00546F6F            B   257    						db 0,"Too"				00597D 004C6F6E 67         B   258    						db 0,"Long"				005982 00446573 74696E61   B   259    						db 0,"Destination"		00598A 74696F6E 
00598E 0053656C 65637465   B   260    						db 0,"Selected"			005996 64 
005997 00496E76 616C6964   B   261    						db 0,"Invalid"			00599F 004D6973 73696E67   B   262    						db 0,"Missing"			0059A7 004F4B              B   263    						db 0,"OK"				0059AA 004F53              B   264    						db 0,"OS"				0059AD 0050726F 74656374   B   265    						db 0,"Protected"		0059B5 6564 
0059B7 0041                B   266    						db 0,"A"				0059B9 004973              B   267    						db 0,"Is"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0059BC 00456D70 7479       B   268    						db 0,"Empty"			0059C2 00456E64            B   269    						db 0,"End"				                           B   270    						
0059C6 0024                B   271    						db 0,"$"
0059C8 7878                B   272    hex_byte_txt			db "xx"					                           B   273    						
0059CA 00417070 656E64     B   274    						db 0,"Append"			0059D1 003F                B   275    						db 0,"?"				0059D3 0024                B   276    						db 0,"$"				0059D5 00417761 6974696E   B   277    						db 0,"Awaiting"			0059DD 67 
0059DE 00526563 65697669   B   278    						db 0,"Receiving"		0059E6 6E67 
0059E8 0053656E 64696E67   B   279    						db 0,"Sending"			0059F0 000B                B   280    						db 0,11					0059F2 002E2E              B   281    						db 0,".."				0059F5 004E616D 65         B   282    						db 0,"Name"				0059FA 00204279 746573     B   283    						db 0," Bytes"			005A01 00507265 7373       B   284    						db 0,"Press"			005A07 00416E79            B   285    						db 0,"Any"				005A0B 004B6579            B   286    						db 0,"Key"				005A0F 00456E74 6572       B   287    						db 0,"Enter"			005A15 9A455845 43         B   288    						db 9ah,"EXEC"			                           B   289    				
005A1A 0052756E            B   290    						db 0,"Run"				005A1E 00536372 697074     B   291    						db 0,"Script"			005A25 00594553            B   292    yes_txt					db 0,"YES" 				005A29 00546F              B   293    						db 0,"To"				005A2C 00536574            B   294    						db 0,"Set"				005A30 00436F6E 74696E75   B   295    						db 0,"Continue"			005A38 65 
005A39 004E6F6E 65         B   296    						db 0,"None"				005A3E 00447269 766572     B   297    						db 0,"Driver"			005A45 9B3C                B   298    						db 9bh,"<"				005A47 004E6577 6572       B   299    						db 0,"Newer"			005A4D 00526571 75697265   B   300    						db 0,"Required"			005A55 64 
005A56 00465047 4120636F   B   301    						db 0,"FPGA config"		005A5E 6E666967 
005A62 00556E63 68616E67   B   302    						db 0,"Unchanged"		005A6A 6564 
005A6C 0020                B   303    						db 0," "				005A6E 9C50414C 45545445   B   304    						db 9ch,"PALETTE"		005A76 0070616C 65747465   B   305    						db 0,"palette"			                           B   306    						
005A7E 9D4D4F55 5345       B   307    						db 9dh,"MOUSE"			005A84 00456E61 626C65     B   308    						db 0,"Enable"			005A8B 004B6579 626F6172   B   309    						db 0,"Keyboard"			005A93 64 
005A94 00446574 65637465   B   310    						db 0,"Detected"			005A9C 64 
005A9D 004D6F75 7365       B   311    						db 0,"Mouse"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005AA3 00536563 746F72     B   312    						db 0,"Sector"			005AAA 00496E63 6F727265   B   313    						db 0,"Incorrect"		005AB2 6374 
005AB4 9E564D4F 4445       B   314    						db 9eh,"VMODE"			005ABA 00566964 656F       B   315    						db 0,"Video"			005AC0 004D6F64 65         B   316    						db 0,"Mode"				005AC5 9F464F4E 54         B   317    						db 9fh,"FONT"			005ACA 00416E64            B   318    						db 0,"And"				005ACE 00536176 696E67     B   319    						db 0,"Saving"			005AD5 00556E73 7570706F   B   320    						db 0,"Unsupported"		005ADD 72746564 
005AE1 A0534554            B   321    						db 0a0h,"SET"			005AE5 005B7661 723D7374   B   322    						db 0,"[var=string]"		005AED 72696E67 5D 
                           B   323    
005AF2 00456E76 6172       B   324    						db 0,"Envar"			005AF8 A1445A              B   325    						db 0a1h,"DZ"			005AFB 0041444C            B   326    						db 0,"ADL"				005AFF 005A3830            B   327    						db 0,"Z80"				                           B   328    						
005B03 0001                B   329    						db 0,1					                           B   330    
                           B   331    
                           B   332    
                           B   333    
                           B   334    
005B05 2199696A 5F916F92   B   335    save_append_msg			db 021h,099h,069h,06ah,
005B0D 9700 
005B0F 2F0A9300            B   336    os_loadaddress_msg 		db 02fh,00ah,093h,0		005B13 21649300            B   337    os_filesize_msg			db 021h,064h,093h,0		005B17 94219700            B   338    ser_rec_msg				db 094h,021h,097h,0		005B1B 956F9897 00         B   339    ser_rec2_msg			db 095h,06fh,098h,097h,
005B20 966F9897 00         B   340    ser_send_msg			db 096h,06fh,098h,097h,
005B25 9521BBBC 989700     B   341    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005B2C A77C9097 00         B   342    hw_err_msg				db 0a7h,07ch,090h,097h,
005B31 607C00              B   343    disk_err_msg			db 060h,07ch,0			005B34 A1779797 00         B   344    script_aborted_msg		db 0a1h,077h,097h,097h,
005B39 76B2B397 00         B   345    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   346    
005B3E 9700                B   347    packed_help1				db 097h,0
005B40 0100                B   348    							db 001h,0			005B42 0200                B   349    							db 002h,0			005B44 3307095F 4F500B00   B   350    							db 033h,007h,009h,0
005B4C 3407515F 4F1400     B   351    							db 034h,007h,051h,0
005B53 37070707 5F195000   B   352    							db 037h,007h,007h,0
005B5B 3B075FC2 1700       B   353    							db 03bh,007h,05fh,0
005B61 C1075FC3 1700       B   354    							db 0c1h,007h,05fh,0
005B67 3F070754 5F0E5000   B   355    							db 03fh,007h,007h,0
005B6F 42075F0F 0A00       B   356    							db 042h,007h,05fh,0
005B75 3E070709 5F0D5000   B   357    							db 03eh,007h,007h,0
005B7D 44075F10 500B00     B   358    							db 044h,007h,05fh,0
005B84 475F1011 1200       B   359    							db 047h,05fh,010h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B8A 4C075F10 50131400   B   360    							db 04ch,007h,05fh,0
                           B   361    	
005B92 9700                B   362    							db 097h,0
005B94 0300                B   363    							db 003h,0			005B96 0400                B   364    							db 004h,0			005B98 38231E1D 5F1B601E   B   365    							db 038h,023h,01eh,0
005BA0 1D00 
005BA2 3C1F5F20 2100       B   366    							db 03ch,01fh,05fh,0
005BA8 3D5F101D 00         B   367    							db 03dh,05fh,010h,0
005BAD 411A995F 551C00     B   368    							db 041h,01ah,099h,0
005BB4 431F075F 2F2100     B   369    							db 043h,01fh,007h,0
005BBB 561D5F24 1D00       B   370    							db 056h,01dh,05fh,0
005BC1 455F2557 00         B   371    							db 045h,05fh,025h,0
005BC6 481D5F29 1D00       B   372    							db 048h,01dh,05fh,0
005BCC 4958595F 2A2100     B   373    							db 049h,058h,059h,0
005BD3 4A1F075F 2C2100     B   374    							db 04ah,01fh,007h,0
005BDA 4B1F075A 5F2D2100   B   375    							db 04bh,01fh,007h,0
005BE2 4D1F075A 5F2E2100   B   376    							db 04dh,01fh,007h,0
005BEA 235F1860 00         B   377    							db 023h,05fh,018h,0
                           B   378    
005BEF 9700                B   379    							db 097h,0
005BF1 0500                B   380    							db 005h,0			005BF3 0600                B   381    							db 006h,0			005BF5 395F1516 00         B   382    							db 039h,05fh,015h,0
005BFA 9F1F5FA0 A100       B   383    							db 09fh,01fh,05fh,0
005C00 BA1F5F1B 8200       B   384    							db 0bah,01fh,05fh,0
005C06 B05FB1B0 A700       B   385    							db 0b0h,05fh,0b1h,0
005C0C AE095F1B AF00       B   386    							db 0aeh,09h,05fh,01
005C12 3A325F1B 5B00       B   387    							db 03ah,032h,05fh,0
005C18 BEBF5FA4 C000       B   388    							db 0beh,0bfh,05fh,0
005C1E 4E5F1030 3100       B   389    							db 04eh,05fh,010h,0
005C24 B7095F1B B8B900     B   390    							db 0b7h,09h,5fh,01b
005C2B 5C5F105D 00         B   391    							db 05ch,05fh,010h,0
005C30 9700                B   392    							db 097h,0
005C32 FF                  B   393    							db 0ffh
                           B   394    
                           B   395    
                           B   396    
                           B   397    
005C33 401D00              B   398    os_cmd_locs					dw24 os_cmd_colon	005C36 1E2C00              B   399    							dw24 os_cmd_gtr		005C39 3D3600              B   400    							dw24 os_cmd_unused	005C3C E71B00              B   401    							dw24 os_cmd_c		005C3F 541C00              B   402    							dw24 os_cmd_cd		005C42 3A1D00              B   403    							dw24 os_cmd_cls		005C45 583400              B   404    							dw24 os_cmd_pen		005C48 5A1D00              B   405    							dw24 os_cmd_d		                           B   406    					
005C4B BB2800              B   407    							dw24 os_cmd_del		005C4E D02800              B   408    							dw24 os_cmd_dir		005C51 4C2B00              B   409    							dw24 os_cmd_h		005C54 CC2900              B   410    							dw24 os_cmd_f		Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C57 F42900              B   411    							dw24 os_cmd_format	005C5A 522C00              B   412    							dw24 os_cmd_lb		005C5D E12C00              B   413    							dw24 os_cmd_m		005C60 E13100              B   414    							dw24 os_cmd_remount
                           B   415    
005C63 382D00              B   416    							dw24 os_cmd_r		005C66 692E00              B   417    							dw24 os_cmd_rd		005C69 762E00              B   418    							dw24 os_cmd_rn		005C6C FA2E00              B   419    							dw24 os_cmd_rx		005C6F 922E00              B   420    							dw24 os_cmd_sb		005C72 8D3100              B   421    							dw24 os_cmd_t		005C75 213100              B   422    							dw24 os_cmd_tx		005C78 ED3100              B   423    							dw24 os_cmd_vers	                           B   424    							
005C7B 2B2D00              B   425    							dw24 os_cmd_md		005C7E FA2B00              B   426    							dw24 os_cmd_help	005C81 1E3200              B   427    							dw24 os_cmd_exec	005C84 563400              B   428    							dw24 os_cmd_ltn		005C87 783400              B   429    							dw24 os_cmd_palette
005C8A A93400              B   430    							dw24 os_cmd_mouse	005C8D E53400              B   431    							dw24 os_cmd_vmode	005C90 833500              B   432    							dw24 os_cmd_font	                           B   433    							
005C93 D43500              B   434    							dw24 os_cmd_set		005C96 303600              B   435    							dw24 os_cmd_dz		                           B   436    							
                           B   437    								
005C99 00                  B   438    packed_msg_list				db 0				                           B   439    		
005C9A 606100              B   440    							db 060h,061h,0		005C9D 21626300            B   441    							db 021h,062h,063h,0
005CA1 1D6100              B   442    							db 01dh,061h,0		005CA4 628C1D00            B   443    							db 062h,08ch,01dh,0
005CA8 1D8D628E 00         B   444    							db 01dh,08dh,062h,0
005CAD 628C2100            B   445    							db 062h,08ch,021h,0
005CB1 21648D65 00         B   446    							db 021h,064h,08dh,0
005CB6 0A666768 00         B   447    							db 00ah,066h,067h,0
005CBB 2199696A 00         B   448    							db 021h,099h,069h,0
005CC0 696B6C00            B   449    							db 069h,06bh,06ch,0
                           B   450    					
005CC4 727300              B   451    							db 072h,073h,0		005CC7 877500              B   452    							db 087h,075h,0		005CCA 76219900            B   453    							db 076h,021h,099h,0
                           B   454    					
005CCE 87B500              B   455    							db 087h,0b5h,0		005CD1 797400              B   456    							db 079h,074h,0		005CD4 9A7A00              B   457    bytes_loaded_msg			db 09ah,07ah,0		005CD7 7B7C00              B   458    							db 07bh,07ch,0		005CDA 747D00              B   459    							db 074h,07dh,0		                           B   460    
005CDD 627F00              B   461    format_err_msg				db 062h,07fh,0		                           B   462    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005CE0 816600              B   463    							db 081h,066h,0		005CE3 21998384 00         B   464    							db 021h,099h,083h,0
005CE8 76260A00            B   465    							db 076h,026h,00ah,0
005CEC 76216400            B   466    							db 076h,021h,064h,0
005CF0 2D7700              B   467    							db 02dh,077h,0		005CF3 2D7C6B85 00         B   468    							db 02dh,07ch,06bh,0
005CF8 628C080C 00         B   469    							db 062h,08ch,08h,0c
005CFD A9316708 AA00       B   470    							db 0a9h,031h,067h,0
005D03 768F0A00            B   471    							db 076h,08fh,00ah,0
005D07 76850A00            B   472    							db 076h,085h,00ah,0
                           B   473    					
005D0B 746800              B   474    							db 074h,068h,0		005D0E 887D00              B   475    							db 088h,07dh,0		005D11 8900                B   476    ok_msg						db 089h,0			                           B   477    					
005D13 876000              B   478    							db 087h,060h,0		005D16 1A627800            B   479    							db 01ah,062h,078h,0
                           B   480    					
005D1A 1D626300            B   481    							db 01dh,062h,063h,0
005D1E 7700                B   482    							db 077h,0			                           B   483    					
005D20 21996D00            B   484    							db 021h,099h,06dh,0
005D24 8A508B00            B   485    							db 08ah,050h,08bh,0
005D28 6F71706E 00         B   486    							db 06fh,071h,070h,0
005D2D 763600              B   487    no_vols_msg					db 076h,036h,0		005D30 97A66300            B   488    none_found_msg				db 097h,0a6h,063h,0
                           B   489    							
005D34 B62100              B   490    							db 0b6h,021h,0		005D37 A9316708 AA00       B   491    							db 0a9h,031h,067h,0
005D3D 21AC00              B   492    							db 021h,0ach,0		                           B   493    							
005D40 766F00              B   494    							db 076h,06fh,0		005D43 746F00              B   495    							db 074h,06fh,0		005D46 66676800            B   496    							db 066h,067h,068h,0
005D4A BD1A00              B   497    							db 0bdh,01ah,0		005D4D 1A62B300            B   498    							db 01ah,062h,0b3h,0
005D51 1A7C00              B   499    							db 01ah,07ch,0		005D54 A17C00              B   500    							db 0a1h,07ch,0		                           B   501    							
005D57 FF                  B   502    							db 0ffh				                           B   503    
                           B   504    ;----------------------------------------------
                           B   505    
005D58                     B   506    kernal_error_code_translation
                           B   507    
005D58 242D2E14 08110F2A   B   508    					db 24h,2dh,2eh,14h,08h,11h,
005D60 2F303132 33 
                           B   509    					
005D65                     B   510    fs_error_code_translation
                           B   511    
005D65 00010203 04050607   B   512    					db 00h,01h,02h,03h,04h,05h,
005D6D 08090A0B 0C0D1321 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D75 22232425 260E0000   B   513    					db 22h,23h,24h,25h,26h,0eh,
                           B   514    
                           B   515    
                           B   516    ;----------------------------------------------
                           B   517    ; Scancode to ASCII keymaps
                           B   518    ;----------------------------------------------
                           B   519    
                           C     0    include	'UK_keymap.asm'
005D7D                     C     1    keymap:
005D7D 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005D85 00000000 00006000 
005D8D 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005D95 00007A73 61773200 
005D9D 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005DA5 00207666 74723500 
005DAD 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005DB5 00006D6A 75373800 
005DBD 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005DC5 002E2F6C 3B702D00 
005DCD 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005DD5 0000005D 00230000 
005DDD 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005DE5 00000000 00000000 
005DED AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005DF5 21000000 5A534157 
005DFD 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005E05 A3000020 56465452 
005E0D 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005E15 5E000000 4D4A5526 
005E1D 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005E25 2800003E 3F4C3A50 
005E2D 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005E35 00000000 007D007E 
005E3D 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005E45 00000000 00000000 
005E4D 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005E55 00000000 00000000 
005E5D 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005E65 00000000 00000000 
005E6D 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005E75 00000000 00000000 
005E7D 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005E85 00000000 00000000 
005E8D 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005E95 00000000 00000000 
005E9D 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   521    
       00005D7D            B   522    unshifted_keymap equ keymap+00h
       00005DDF            B   523    shifted_keymap   equ keymap+62h
       00005E41            B   524    alted_keymap	 equ keymap+c4h
                           B   525    	
                           B   526    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   527    
005EA3 00                  B   528    ui_index				db 0				; u
005EA4 00                  B   529    ui_maxchars				db 0				; "
005EA5 000000              B   530    ui_string_addr			dw24 0				; "
                           B   531    
                           B   532    ;----------------------------------------------
                           B   533    ; OS Display parameters
                           B   534    ;----------------------------------------------
                           B   535    
005EA8 00                  B   536    video_mode				db 0
005EA9 0700                B   537    current_pen				dw 07h				; c
005EAB 0000                B   538    background_colour		dw 00h				; f
                           B   539    
005EAD 00000F00 000F0F0F   B   540    pen_palette				dw 0000h,000fh,0f00h,0f
005EB5 F000FF00 F00FFF0F 
005EBD 55059909 CC0C710F   B   541    						dw 0555h,0999h,0ccch,0f
005EC5 7F00F80D 40088C03 
                           B   542    
005ECD 00                  B   543    plotchar_colour			db 0				; c
                           B   544    
005ECE 00                  B   545    req_cursor_image		db 0
005ECF 00                  B   546    active_cursor_image		db 0
                           B   547    
005ED0                     B   548    display_parameters							; D
                           B   549    ;-----------------
                           B   550    
005ED0 000000              B   551    window_rows				dw24 0				; i
005ED3 000000              B   552    window_columns			dw24 0				; i
005ED6 000000              B   553    window_width_bytes		dw24 0				; i
005ED9 000000              B   554    window_height_lines		dw24 0				; i
                           B   555    
005EDC 040000 080000       B   556    font_parameters			dw24 4,8,0,0
005EE2 000000 000000 
       00005EDC            B   557    font_width_bytes		equ font_parameters+0	       00005EDF            B   558    font_height_lines		equ font_parameters+3
       00005EE2            B   559    font_addr				equ font_parameters+6
       00005EE5            B   560    font_length				equ font_parameters+9
                           B   561    
005EE8 000000              B   562    video_window_address	dw24 0
005EEB 000000              B   563    charmap_address			dw24 0
005EEE 000000              B   564    attributes_address		dw24 0
005EF1 000000              B   565    cursor_image_address	dw24 0
005EF4 000000              B   566    total_window_bytes		dw24 0
005EF7 000000              B   567    total_charmap_bytes		dw24 0
005EFA 000000              B   568    total_row_bytes			dw24 0				; i
005EFD 00                  B   569    window_pixel_doubling	db 0
                           B   570    
                           B   571    ;==============================================
                           B   572    ;  Serial Routine Data
                           B   573    ;==============================================
                           B   574    
005EFE 000000              B   575    serial_ez80_address		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F01 000000              B   576    serial_file_length		dw24 0
005F04 000000              B   577    serial_fn_addr			dw24 0
005F07 00 00 00 00 00 00   B   578    serial_filename			blkb 18,0		
005F0D 00 00 00 00 00 00 
005F13 00 00 00 00 00 00 
005F19 00                  B   579    serial_fn_length		db 0
005F1A 00                  B   580    serial_timeout			db 0
                           B   581    
005F1B 00 00 00 00 00 00   B   582    serial_fileheader		blkb 20,0
005F21 00 00 00 00 00 00 
005F27 00 00 00 00 00 00 
005F2D 00 00 
005F2F 5A383050 2E464845   B   583    serial_header_id		db "Z80P.FHEADER"		005F37 41444552 
005F3B 00                  B   584    serial_transfer_started	db 0
                           B   585    
005F3C 00                  B   586    anim_wait_count			db 0
                           B   587    
                           B   588    ;==============================================
                           B   589    
005F3D F3C8                B   590    intellimouse_seq	db 0f3h,200
005F3F F364                B   591    					db 0f3h,100
005F41 F350                B   592    					db 0f3h,80
                           B   593    
005F43 E803                B   594    mouse_settings_seq	db 0e8h,default_resolution
005F45 E6                  B   595    					db default_scaling
005F46 F364                B   596    					db 0f3h,default_sample_rate
005F48 F4                  B   597    					db 0f4h
                           B   598    					
                           B   599    ;----------------------------------------------
                           B   600    ; FILE SYSTEM RELATED VARIABLES
                           B   601    ;----------------------------------------------
                           B   602    
005F49 00                  B   603    boot_drive			db 0
                           B   604    
005F4A 00                  B   605    current_volume		db 0
                           B   606    	
005F4B 00                  B   607    current_driver		db 0			;normally u
                           B   608    
005F4C 00                  B   609    device_count		db 0			;IE: the nu
                           B   610    
005F4D 00                  B   611    volume_count		db 0
                           B   612    				
005F4E 20564F4C 303A00     B   613    vol_txt				db " VOL0:",0	;space pref
005F55 44455630 3A00       B   614    dev_txt				db "DEV0:",0
                           B   615    
005F5B 000000              B   616    sector_rd_wr_addr	dw24 0
                           B   617    
                           B   618    ;==============================================
                           B   619    
                           B   620    ; Add storage device drivers here, end with 0
                           B   621    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F5E 4E3600              B   622    driver_table		dw24 sd_card_driver	;Device
005F61 000000              B   623    					dw24 0				;last d
                           B   624    
                           B   625    ; Each driver's code should have a header in th
                           B   626    ; ---------------------------------------------
                           B   627    ; $0    = JP to get ID routin
                           B   628    ; $4    = JP to read sector routine
                           B   629    ; $8    = JP to write sector routinee
                           B   630    ; $c    = ASCII name of device type (null termi
                           B   631    ;==============================================
                           B   632    
005F64                     B   633    volume_dir_clusters
                           B   634    
005F64 00 00 00 00 00 00   B   635    					blkb max_volumes*3,0
005F6A 00 00 00 00 00 00 
005F70 00 00 00 00 00 00 
005F76 00 00 00 00 00 00 
                           B   636    	
005F7C                     B   637    volume_mount_list
                           B   638    
005F7C 00 00 00 00 00 00   B   639    					blkb max_volumes*16,0
005F82 00 00 00 00 00 00 
005F88 00 00 00 00 00 00 
005F8E 00 00 00 00 00 00 
005F94 00 00 00 00 00 00 
005F9A 00 00 00 00 00 00 
005FA0 00 00 00 00 00 00 
005FA6 00 00 00 00 00 00 
005FAC 00 00 00 00 00 00 
005FB2 00 00 00 00 00 00 
005FB8 00 00 00 00 00 00 
005FBE 00 00 00 00 00 00 
005FC4 00 00 00 00 00 00 
005FCA 00 00 00 00 00 00 
005FD0 00 00 00 00 00 00 
005FD6 00 00 00 00 00 00 
005FDC 00 00 00 00 00 00 
005FE2 00 00 00 00 00 00 
005FE8 00 00 00 00 00 00 
005FEE 00 00 00 00 00 00 
005FF4 00 00 00 00 00 00 
005FFA 00 00 
                           B   640    
                           B   641    ; Each entry is 16 bytes in the form:
                           B   642    
                           B   643    ; OFFSETS
                           B   644    ; -------
                           B   645    ; $00 - Volume is present (0/1)
                           B   646    ; $01 - Volume's host driver number (1 byte)	                           B   647    ; $02 - [reserved]
                           B   648    ; $03 - [reserved]
                           B   649    ; $04 - Volume's capacity in sectors (3 bytes)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   650    ; $07 - Partition number on host drive (0/1/2/3
                           B   651    ; $08 - Offset in sectors from MBR to partition
                           B   652    ; $0c - [reserved]
                           B   653    ; $0d - [reserved]	
                           B   654    ; $0e - [reserved]
                           B   655    ; $0f - [reserved]
                           B   656    
                           B   657    ;==============================================
                           B   658    
005FFC                     B   659    host_device_hardware_info
                           B   660    
005FFC 00 00 00 00 00 00   B   661    					blkb 32*4,0
006002 00 00 00 00 00 00 
006008 00 00 00 00 00 00 
00600E 00 00 00 00 00 00 
006014 00 00 00 00 00 00 
00601A 00 00 00 00 00 00 
006020 00 00 00 00 00 00 
006026 00 00 00 00 00 00 
00602C 00 00 00 00 00 00 
006032 00 00 00 00 00 00 
006038 00 00 00 00 00 00 
00603E 00 00 00 00 00 00 
006044 00 00 00 00 00 00 
00604A 00 00 00 00 00 00 
006050 00 00 00 00 00 00 
006056 00 00 00 00 00 00 
00605C 00 00 00 00 00 00 
006062 00 00 00 00 00 00 
006068 00 00 00 00 00 00 
00606E 00 00 00 00 00 00 
006074 00 00 00 00 00 00 
00607A 00 00 
                           B   662    
                           B   663    ; Each entry is 32 bytes..
                           B   664    ;
                           B   665    ; OFFSETS
                           B   666    ; -------
                           B   667    ; $00 - Device driver number
                           B   668    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   669    ; $05 - Zero terminated hardware name (22 ASCII
                           B   670    ; (remaining bytes to $1F currently unused)
                           B   671    
                           B   672    ;----------------------------------------------
                           B   673    
00607C 000000              B   674    dhwn_temp_pointer		dw24 0
                           B   675    
00607F 00                  B   676    partition_temp			db 0
006080 00                  B   677    vols_on_device_temp		db 0
006081 00                  B   678    sys_driver_backup		db 0
006082 00                  B   679    os_quiet_mode			db 0
                           B   680    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006083 736900              B   681    default_load_addr		dw24 os_max_addr
                           B   682    
                           B   683    ;----------------------------------------------
                           B   684    
006086 00 00 00 00 00 00   B   685    time_data				blkb	7,0
00608C 00 
                           B   686    
00608D 00                  B   687    frozen					db 0
00608E 01                  B   688    first_run				db 1
00608F 01                  B   689    devices_connected		db 1					                           B   690    
                           B   691    ;----------------------------------------------
                           B   692    
006090 736900              B   693    sys_ram_high			dw24 os_max_addr
006093 000080              B   694    vram_a_high				dw24 vram_a_addr
006096 0000C0              B   695    vram_b_high				dw24 vram_b_addr
                           B   696    
                           B   697    ;----------------------------------------------
                           B   698    
006099 00                  B   699    store_a1				db 0		
00609A 000000              B   700    store_bc1				dw24 0
00609D 000000              B   701    store_de1				dw24 0
0060A0 000000              B   702    store_hl1				dw24 0
0060A3 00                  B   703    store_a2				db 0
0060A4 000000              B   704    store_bc2				dw24 0
0060A7 000000              B   705    store_de2				dw24 0
0060AA 000000              B   706    store_hl2				dw24 0
0060AD 000000              B   707    store_ix				dw24 0
0060B0 000000              B   708    store_iy				dw24 0
0060B3 000000              B   709    store_pc				dw24 0		;only relev
0060B6 000000              B   710    store_spl				dw24 0
0060B9 0000                B   711    store_sps				dw 0
0060BB 00                  B   712    store_mbase				db 0
0060BC 00                  B   713    store_f	 				db 0
0060BD 00                  B   714    store_adl				db 0
                           B   715    
                           B   716    ;----------------------------------------------
0060BE                     B   717    os_variables
                           B   718    ;----------------------------------------------
                           B   719    
0060BE 00                  B   720    store_registers			db 0
0060BF 000000              B   721    com_start_addr			dw24 0
                           B   722    
0060C2 00 00 00 00 00 00   B   723    temp_string				blkb max_buffer_chars+2
0060C8 00 00 00 00 00 00 
0060CE 00 00 00 00 00 00 
0060D4 00 00 00 00 00 00 
0060DA 00 00 00 00 00 00 
0060E0 00 00 00 00 00 00 
0060E6 00 00 00 00 00 00 
0060EC 00 00 00 00 00 00 
0060F2 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0060F8 00 00 00 00 00 00 
0060FE 00 00 00 00 00 00 
006104 00 00 00 00 00 00 
00610A 00 00 00 00 00 00 
006110 00 00 00 00 
006114 00 00 00 00 00 00   B   724    script_fn				blkb 13,0
00611A 00 00 00 00 00 00 
006120 00 
                           B   725    
006121 00                  B   726    sector_lba0				db 0			; keep 
006122 00                  B   727    sector_lba1				db 0
006123 00                  B   728    sector_lba2				db 0
006124 00                  B   729    sector_lba3				db 0
                           B   730    
                           B   731    ;----------------------------------------------
                           B   732    
006125 000000              B   733    cursor_pos				dw24 0			; 3rd b
                           B   734    
       00006125            B   735    cursor_y 				equ cursor_pos
       00006126            B   736    cursor_x 				equ cursor_pos+1
                           B   737    						
006128 00                  B   738    cursorflashtimer		db 0
006129 00                  B   739    cursor_status			db 0
00612A 00                  B   740    os_linecount			db 0
                           B   741    		
00612B 000000              B   742    mem_mon_addr			dw24 0
00612E 000000              B   743    cmdop_start_address		dw24 0
006131 000000              B   744    cmdop_end_address		dw24 0
006134 000000              B   745    copy_dest_address		dw24 0
006137 000000              B   746    hex_address				dw24 0
                           B   747    
00613A 000000              B   748    find_hexstringascii 	dw24 0
00613D 000000              B   749    xrr_temp				dw24 0
006140 00                  B   750    temphex					db 0
006141 00                  B   751    fillbyte				db 0 
006142 00                  B   752    ui_im_cache				db 0
                           B   753    
006143 00 00 00 00 00 00   B   754    commandstring			blkb max_buffer_chars+2
006149 00 00 00 00 00 00 
00614F 00 00 00 00 00 00 
006155 00 00 00 00 00 00 
00615B 00 00 00 00 00 00 
006161 00 00 00 00 00 00 
006167 00 00 00 00 00 00 
00616D 00 00 00 00 00 00 
006173 00 00 00 00 00 00 
006179 00 00 00 00 00 00 
00617F 00 00 00 00 00 00 
006185 00 00 00 00 00 00 
00618B 00 00 00 00 00 00 
006191 00 00 00 00 
006195 00 00 00 00 00 00   B   755    output_line				blkb max_buffer_chars+2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00619B 00 00 00 00 00 00 
0061A1 00 00 00 00 00 00 
0061A7 00 00 00 00 00 00 
0061AD 00 00 00 00 00 00 
0061B3 00 00 00 00 00 00 
0061B9 00 00 00 00 00 00 
0061BF 00 00 00 00 00 00 
0061C5 00 00 00 00 00 00 
0061CB 00 00 00 00 00 00 
0061D1 00 00 00 00 00 00 
0061D7 00 00 00 00 00 00 
0061DD 00 00 00 00 00 00 
0061E3 00 00 00 00 
                           B   756    				
0061E7 000000              B   757    os_args_loc				dw24 0
0061EA 000000              B   758    os_args_pos_cache		dw24 0
                           B   759    
0061ED 000000              B   760    os_dir_block_cache  	dw24 0
0061F0 000000              B   761    os_extcmd_jmp_addr		dw24 0
                           B   762    
                           B   763    
0061F3 000000              B   764    script_dir				dw24 0
0061F6 000000              B   765    script_file_offset		dw24 0
0061F9 000000              B   766    script_length			dw24 0
                           B   767    
0061FC 00                  B   768    script_flags			db 0
                           B   769    
0061FD 00 00 00 00 00 00   B   770    if_name_txt				blkb max_if_chars+2,0
006203 00 00 00 00 00 00 
006209 00 00 00 00 00 00 
00620F 00 00 00 00 00 00   B   771    if_value_txt			blkb max_if_chars+2,0
006215 00 00 00 00 00 00 
00621B 00 00 00 00 00 00 
006221 00 00 00 00 00 00   B   772    if_label_txt			blkb max_if_chars+2,0
006227 00 00 00 00 00 00 
00622D 00 00 00 00 00 00 
                           B   773    
                           B   774    
006233 0000                B   775    char_to_print			db 0,0	; zero terminat
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    ; Keyboard buffer and registers
                           B   779    ;----------------------------------------------
                           B   780    
006235 00 00 00 00 00 00   B   781    scancode_buffer			blkb 32,0
00623B 00 00 00 00 00 00 
006241 00 00 00 00 00 00 
006247 00 00 00 00 00 00 
00624D 00 00 00 00 00 00 
006253 00 00 
                           B   782    
006255 00                  B   783    key_buf_wr_idx			db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006256 00                  B   784    key_buf_rd_idx			db 0
006257 00                  B   785    key_release_mode		db 0		
006258 00                  B   786    not_currently_used		db 0
006259 00                  B   787    key_mod_flags			db 0
00625A 00                  B   788    insert_mode				db 0
00625B 00                  B   789    current_scancode		db 0
00625C 00                  B   790    current_asciicode		db 0
                           B   791    
                           B   792    ;----------------------------------------------
                           B   793    ; Mouse related registers
                           B   794    ;----------------------------------------------
                           B   795    
00625D 00                  B   796    mouse_id				db 0
00625E 00                  B   797    mouse_packet_size		db 0
                           B   798    
00625F 00 00 00 00         B   799    mouse_packet			blkb 4,0			; t
006263 00                  B   800    mouse_packet_index		db 0				;
006264 00                  B   801    mouse_buttons			db 0				;
006265 000000              B   802    mouse_disp_x			dw24 0				; c
006268 000000              B   803    mouse_disp_y			dw24 0				; c
00626B 00                  B   804    mouse_wheel				db 0				; m
00626C 00                  B   805    mouse_updated			db 0
                           B   806    
00626D 000000              B   807    mouse_window_size_x		dw24 0				; t
006270 000000              B   808    mouse_window_size_y		dw24 0
006273 000000              B   809    mouse_abs_x				dw24 0
006276 000000              B   810    mouse_abs_y				dw24 0
006279 000000              B   811    mouse_disp_x_old		dw24 0
00627C 000000              B   812    mouse_disp_y_old		dw24 0
00627F 000000              B   813    mouse_disp_x_buffer		dw24 0
006282 000000              B   814    mouse_disp_y_buffer		dw24 0
006285 00                  B   815    mouse_new_window		db 0
                           B   816    
                           B   817    ;----------------------------------------------
       00006125            B   818    first_os_var			equ cursor_y
006286 00                  B   819    last_os_var				db 0
                           B   820    ;----------------------------------------------
                           B   821    
                           B   822    ;==============================================
                           B   823    ; Environment variables
                           B   824    ;==============================================
                           B   825    
006287 4552524F 523D3030   B   826    envar_list				db "ERROR=00",0
00628F 00 
006290 FF                  B   827    first_ext_ev_entry		db 0ffh
006291 00 00 00 00 00 00   B   828    						blkb envar_buffer_size,
006297 00 00 00 00 00 00 
00629D 00 00 00 00 00 00 
0062A3 00 00 00 00 00 00 
0062A9 00 00 00 00 00 00 
0062AF 00 00 00 00 00 00 
0062B5 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0062BB 00 00 00 00 00 00 
0062C1 00 00 00 00 00 00 
0062C7 00 00 00 00 00 00 
0062CD 00 00 00 00 00 00 
0062D3 00 00 00 00 00 00 
0062D9 00 00 00 00 00 00 
0062DF 00 00 00 00 00 00 
0062E5 00 00 00 00 00 00 
0062EB 00 00 00 00 00 00 
0062F1 00 00 00 00 00 00 
0062F7 00 00 00 00 00 00 
0062FD 00 00 00 00 00 00 
006303 00 00 00 00 00 00 
006309 00 00 00 00 00 00 
00630F 00 00 00 00 00 00 
006315 00 00 00 00 00 00 
00631B 00 00 00 00 00 00 
006321 00 00 00 00 00 00 
006327 00 00 00 00 00 00 
00632D 00 00 00 00 00 00 
006333 00 00 00 00 00 00 
006339 00 00 00 00 00 00 
00633F 00 00 00 00 00 00 
006345 00 00 00 00 00 00 
00634B 00 00 00 00 00 00 
006351 00 00 00 00 00 00 
006357 00 00 00 00 00 00 
00635D 00 00 00 00 00 00 
006363 00 00 00 00 00 00 
006369 00 00 00 00 00 00 
00636F 00 00 00 00 00 00 
006375 00 00 00 00 00 00 
00637B 00 00 00 00 00 00 
006381 00 00 00 00 00 00 
006387 00 00 00 00 00 00 
00638D 00 00 00 00 
                           B   829    
006391 906200              B   830    envar_top_loc			dw24 first_ext_ev_entry
                           B   831    
                           B   832    ;==============================================
                           B   833    
                           B     0    	include		'prose_font_packed.asm'
006394                     B     1    packed_font_start:
006394 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
00639C 00181800 EEEE6601 
0063A4 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
0063AC 6C00187E E07C0EFC 
0063B4 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
0063BC C60078EC EC78EDEE 
0063C4 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
0063CC 18300160 03301800 
0063D4 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
0063DC 105438FE 38541000 
0063E4 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
0063EC 07383870 0100037E 
0063F4 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
0063FC 0E1C3870 E0007CE6 
006404 EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
00640C 0138047C 007CEE0E 
006414 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
00641C 0C0ECE7C 001E3E76 
006424 E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
00642C 010E03FC 007EE0FC 
006434 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
00643C 18013803 007CE6E6 
006444 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
00644C 037E0E7C 01000318 
006454 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
00645C 30003030 600E1C38 
006464 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
00646C 007E0100 0370381C 
006474 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
00647C 3C380038 007CE601 
006484 EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
00648C FE01E603 00FCE6E6 
006494 FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
00649C E003E67C 00FC01E6 
0064A4 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
0064AC E0FE00FE E0E0F801 
0064B4 E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
0064BC E67C0001 E603FE01 
0064C4 E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
0064CC 007E011C 04DC7800 
0064D4 E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
0064DC 01E006FE 00C6EEFE 
0064E4 D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
0064EC FEEEE6E6 007C01E6 
0064F4 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
0064FC E0E0007C 01E603EA 
006504 EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
00650C E6E6007C EEE07C0E 
006514 EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
00651C 01E6067C 0001E605 
006524 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
00652C 6C00E6E6 6C3874E6 
006534 E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
00653C 00FE0E1C 3870E0FE 
006544 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
00654C E070381C 0E060078 
006554 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
00655C C601000B FE381C01 
006564 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
00656C 00E0E0FC E6E6FC01 
006574 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
00657C 0006067E E6E67E01 
006584 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
00658C 003E70FC 01700301 
006594 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
00659C 00E0E0FC 01E60300 
0065A4 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
0065AC 001C0001 1C047800 
0065B4 E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
0065BC 78013804 7C010003 
0065C4 ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
0065CC FC01E604 0100037C 
0065D4 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
0065DC E6E6FCE0 E000007E 
0065E4 E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
0065EC E601E003 0100037E 
0065F4 F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
0065FC 0138031E 01000301 
006604 E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
00660C 036C3801 0003E2EA 
006614 FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
00661C 387CE601 000301E6 
006624 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
00662C 3870FE00 3C303060 
006634 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
00663C 7818180C 18187800 
006644 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
00664C 070100FF 01001A1C 
006654 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
00665C 297CC6BA A2BAC67C 
006664 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
00666C FF0100FF 01009C 
006673                     B    48    packed_font_end:
                           A  3100    
006673 00 00 00 00 00 00   A  3101    sector_buffer	blkb 512,0
006679 00 00 00 00 00 00 
00667F 00 00 00 00 00 00 
006685 00 00 00 00 00 00 
00668B 00 00 00 00 00 00 
006691 00 00 00 00 00 00 
006697 00 00 00 00 00 00 
00669D 00 00 00 00 00 00 
0066A3 00 00 00 00 00 00 
0066A9 00 00 00 00 00 00 
0066AF 00 00 00 00 00 00 
0066B5 00 00 00 00 00 00 
0066BB 00 00 00 00 00 00 
0066C1 00 00 00 00 00 00 
0066C7 00 00 00 00 00 00 
0066CD 00 00 00 00 00 00 
0066D3 00 00 00 00 00 00 
0066D9 00 00 00 00 00 00 
0066DF 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0066E5 00 00 00 00 00 00 
0066EB 00 00 00 00 00 00 
0066F1 00 00 00 00 00 00 
0066F7 00 00 00 00 00 00 
0066FD 00 00 00 00 00 00 
006703 00 00 00 00 00 00 
006709 00 00 00 00 00 00 
00670F 00 00 00 00 00 00 
006715 00 00 00 00 00 00 
00671B 00 00 00 00 00 00 
006721 00 00 00 00 00 00 
006727 00 00 00 00 00 00 
00672D 00 00 00 00 00 00 
006733 00 00 00 00 00 00 
006739 00 00 00 00 00 00 
00673F 00 00 00 00 00 00 
006745 00 00 00 00 00 00 
00674B 00 00 00 00 00 00 
006751 00 00 00 00 00 00 
006757 00 00 00 00 00 00 
00675D 00 00 00 00 00 00 
006763 00 00 00 00 00 00 
006769 00 00 00 00 00 00 
00676F 00 00 00 00 00 00 
006775 00 00 00 00 00 00 
00677B 00 00 00 00 00 00 
006781 00 00 00 00 00 00 
006787 00 00 00 00 00 00 
00678D 00 00 00 00 00 00 
006793 00 00 00 00 00 00 
006799 00 00 00 00 00 00 
00679F 00 00 00 00 00 00 
0067A5 00 00 00 00 00 00 
0067AB 00 00 00 00 00 00 
0067B1 00 00 00 00 00 00 
0067B7 00 00 00 00 00 00 
0067BD 00 00 00 00 00 00 
0067C3 00 00 00 00 00 00 
0067C9 00 00 00 00 00 00 
0067CF 00 00 00 00 00 00 
0067D5 00 00 00 00 00 00 
0067DB 00 00 00 00 00 00 
0067E1 00 00 00 00 00 00 
0067E7 00 00 00 00 00 00 
0067ED 00 00 00 00 00 00 
0067F3 00 00 00 00 00 00 
0067F9 00 00 00 00 00 00 
0067FF 00 00 00 00 00 00 
006805 00 00 00 00 00 00 
00680B 00 00 00 00 00 00 
006811 00 00 00 00 00 00 
006817 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00681D 00 00 00 00 00 00 
006823 00 00 00 00 00 00 
006829 00 00 00 00 00 00 
00682F 00 00 00 00 00 00 
006835 00 00 00 00 00 00 
00683B 00 00 00 00 00 00 
006841 00 00 00 00 00 00 
006847 00 00 00 00 00 00 
00684D 00 00 00 00 00 00 
006853 00 00 00 00 00 00 
006859 00 00 00 00 00 00 
00685F 00 00 00 00 00 00 
006865 00 00 00 00 00 00 
00686B 00 00 00 00 00 00 
006871 00 00 
                           A  3102    
006873 00 00 00 00 00 00   A  3103    scratch_pad		blkb 256,0
006879 00 00 00 00 00 00 
00687F 00 00 00 00 00 00 
006885 00 00 00 00 00 00 
00688B 00 00 00 00 00 00 
006891 00 00 00 00 00 00 
006897 00 00 00 00 00 00 
00689D 00 00 00 00 00 00 
0068A3 00 00 00 00 00 00 
0068A9 00 00 00 00 00 00 
0068AF 00 00 00 00 00 00 
0068B5 00 00 00 00 00 00 
0068BB 00 00 00 00 00 00 
0068C1 00 00 00 00 00 00 
0068C7 00 00 00 00 00 00 
0068CD 00 00 00 00 00 00 
0068D3 00 00 00 00 00 00 
0068D9 00 00 00 00 00 00 
0068DF 00 00 00 00 00 00 
0068E5 00 00 00 00 00 00 
0068EB 00 00 00 00 00 00 
0068F1 00 00 00 00 00 00 
0068F7 00 00 00 00 00 00 
0068FD 00 00 00 00 00 00 
006903 00 00 00 00 00 00 
006909 00 00 00 00 00 00 
00690F 00 00 00 00 00 00 
006915 00 00 00 00 00 00 
00691B 00 00 00 00 00 00 
006921 00 00 00 00 00 00 
006927 00 00 00 00 00 00 
00692D 00 00 00 00 00 00 
006933 00 00 00 00 00 00 
006939 00 00 00 00 00 00 
00693F 00 00 00 00 00 00 
006945 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jul-11     10:39:51     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00694B 00 00 00 00 00 00 
006951 00 00 00 00 00 00 
006957 00 00 00 00 00 00 
00695D 00 00 00 00 00 00 
006963 00 00 00 00 00 00 
006969 00 00 00 00 00 00 
00696F 00 00 00 00 
                           A  3104    
                           A  3105    ;==============================================
                           A  3106    	
006973 00                  A  3107    os_max_addr		db 0							                           A  3108    	
                           A  3109    				end		
                           A  3110    ;==============================================
                           A  3111    
                           A  3112    		


Errors: 0
Warnings: 0
Lines Assembled: 12425
