Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   2


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   3


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       00000026            A    17    prose_version	equ 26h
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 AE 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 59 47 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   4


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 4D 51 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD 67 2C 00         A    88    				call disable_irqs
000A5C CD 07 2E 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A 92 52 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD 2C 34 00         A    94    				call reset_keyboard
000A6B 30 06               A    95    				jr nc,kb_ok
000A6D 21 93 52 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 92 52 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 C2 52 00         A   102    				ld hl,os_variables				000A7C 01 EA 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 26 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   5


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 F5 50 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD 6D 33 00         A   110    				call hwsc_default_hw_settings
                           A   111    				
000A91 3A B8 50 00         A   112    				ld a,(video_mode)
000A95 CD 90 27 00         A   113    				call set_vmode					                           A   114    
000A99 21 AD 54 00         A   115    				ld hl,packed_font_start
000A9D ED5B F2 50 00       A   116    				ld de,(font_addr)
000AA2 01 DF 02 00         A   117    				ld bc,packed_font_end-packed_fo
000AA6 CD 84 15 00         A   118    				call unpack_rle
                           A   119    
000AAA 3E5F                A   120    				ld a,5fh
000AAC 32 DE 50 00         A   121    				ld (req_cursor_image),a
                           A   122    
000AB0 21 28 48 00         A   123    				ld hl,welcome_message			000AB4 CD 0C 0F 00         A   124    				call os_print_string
000AB8 CD 79 28 00         A   125    				call os_get_mem_high			000ABC EB                  A   126    				ex de,hl
000ABD CD D7 12 00         A   127    				call os_show_hex_address
                           A   128    
000AC1 CD 97 13 00         A   129    				call os_new_line
000AC5 CD 97 13 00         A   130    				call os_new_line
000AC9 CD BB 25 00         A   131    				call os_cmd_vers				000ACD CD AF 25 00         A   132    				call os_cmd_remount				                           A   133    
000AD1 CD 97 13 00         A   134    				call os_new_line				                           A   135    
000AD5 CD BE 34 00         A   136    				call purge_keyboard
                           A   137    				
000AD9 CD 55 2C 00         A   138    				call set_irq_vector
000ADD CD 6D 2C 00         A   139    				call enable_os_irqs
000AE1 FB                  A   140    				ei
000AE2 CD EF 2D 00         A   141    				call set_nmi_vector
                           A   142    				
000AE6 21 93 52 00         A   143    				ld hl,devices_connected			000AEA CB46                A   144    				bit 0,(hl)
000AEC 20 08               A   145    				jr nz,kb_present
000AEE 21 59 4D 00         A   146    				ld hl,no_keyboard_msg
000AF2 CD CE 13 00         A   147    				call os_show_packed_text
000AF6                     A   148    kb_present				
000AF6 21 78 48 00         A   149    				ld hl,startup_script_fn
000AFA 22 EB 53 00         A   150    				ld (os_args_loc),hl
000AFE CD EC 25 00         A   151    				call os_cmd_exec				000B02 AF                  A   152    				xor a
000B03 32 F7 53 00         A   153    				ld (in_script_flag),a
                           A   154    									
000B07 3A 91 52 00         A   155    				ld a,(frozen)					000B0B B7                  A   156    				or a
000B0C 28 11               A   157    				jr z,os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000B0E AF                  A   158    				xor a
000B0F 32 91 52 00         A   159    				ld (frozen),a
000B13 21 D0 48 00         A   160    				ld hl,nmi_freeze_txt
000B17 CD 0C 0F 00         A   161    				call os_print_string
000B1B CD 04 21 00         A   162    				call os_cmd_r
                           A   163    				
                           A   164    	
                           A   165    ;==============================================
                           A   166    
000B1F                     A   167    os_main_loop
                           A   168    								
000B1F CD 5D 33 00         A   169    				call hwsc_wait_vrt				                           A   170    
000B23 CD 5D 0F 00         A   171    				call os_cursor_flash
                           A   172    
000B27 CD BC 36 00         A   173    				call os_get_key_press
000B2B 20 F2               A   174    				jr nz,os_main_loop
                           A   175    	
000B2D 32 7E 54 00         A   176    				ld (current_scancode),a
000B31 78                  A   177    				ld a,b
000B32 32 7F 54 00         A   178    				ld (current_asciicode),a		                           A   179    	
000B36 CD A5 31 00         A   180    				call hwsc_remove_cursor
000B3A 3E18                A   181    				ld a,24							000B3C 32 2C 53 00         A   182    				ld (cursorflashtimer),a			000B40 AF                  A   183    				xor a
000B41 32 2D 53 00         A   184    				ld (cursor_status),a
                           A   185    				
000B45 3A 7E 54 00         A   186    				ld a,(current_scancode)			000B49 FE70                A   187    				cp 70h
000B4B 20 16               A   188    				jr nz,os_notins
000B4D 3A 7D 54 00         A   189     				ld a,(insert_mode)
000B51 EE01                A   190    				xor 1
000B53 32 7D 54 00         A   191    				ld (insert_mode),a
000B57 3E5F                A   192    				ld a,5fh
000B59 28 02               A   193    				jr z,linecurs
000B5B 3E7F                A   194    				ld a,7fh
000B5D 32 DE 50 00         A   195    linecurs		ld (req_cursor_image),a
000B61 18 BC               A   196    				jr os_main_loop
                           A   197    
000B63 21 2A 53 00         A   198    os_notins		ld hl,cursor_x					000B67 FE6B                A   199    				cp 06bh			
000B69 20 0E               A   200    				jr nz,os_ntlft
000B6B 35                  A   201    				dec (hl)
000B6C 7E                  A   202    				ld a,(hl)
000B6D FEFF                A   203    				cp 0ffh	
000B6F 20 AE               A   204    				jr nz,os_main_loop
000B71 3A E3 50 00         A   205    				ld a,(window_columns)
000B75 3D                  A   206    				dec a
000B76 77                  A   207    				ld (hl),a						000B77 18 A6               A   208    				jr os_main_loop
                           A   209    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000B79 FE74                A   210    os_ntlft		cp 074h							000B7B 20 0C               A   211    				jr nz,os_ntrig
000B7D 34                  A   212    				inc (hl)
000B7E 3A E3 50 00         A   213    				ld a,(window_columns)
000B82 BE                  A   214    				cp (hl)
000B83 20 9A               A   215    				jr nz,os_main_loop
000B85 3600                A   216    				ld (hl),0						000B87 18 96               A   217    				jr os_main_loop
                           A   218    
000B89 21 29 53 00         A   219    os_ntrig		ld hl,cursor_y
000B8D FE75                A   220    				cp 075h							000B8F 20 09               A   221    				jr nz,os_ntup
000B91 35                  A   222    				dec (hl)
000B92 CB7E                A   223    				bit 7,(hl)
000B94 28 89               A   224    				jr z,os_main_loop
000B96 3600                A   225    				ld (hl),0						000B98 18 85               A   226    				jr os_main_loop
                           A   227    
000B9A FE72                A   228    os_ntup			cp 072h
000B9C 20 14               A   229    				jr nz,os_ntdwn					000B9E 34                  A   230    				inc (hl)
000B9F 3A E0 50 00         A   231    				ld a,(window_rows)
000BA3 BE                  A   232    				cp (hl)
000BA4 C2 1F 0B 00         A   233    				jr nz,os_main_loop
000BA8 3D                  A   234    				dec a
000BA9 77                  A   235    				ld (hl),a						000BAA CD D4 2F 00         A   236    				call hwsc_scroll_up
000BAE C3 1F 0B 00         A   237    				jr os_main_loop
                           A   238    
000BB2 FE71                A   239    os_ntdwn		cp 071h							000BB4 20 08               A   240    				jr nz,os_nodel		
000BB6 3A 2A 53 00         A   241    				ld a,(cursor_x)					000BBA 47                  A   242    				ld b,a
000BBB 04                  A   243    				inc b
000BBC 18 13               A   244    				jr os_chrbk
                           A   245    
000BBE FE66                A   246    os_nodel		cp 066h							000BC0 20 17               A   247    				jr nz,os_nbksp
000BC2 3A 2A 53 00         A   248    				ld a,(cursor_x)					000BC6 B7                  A   249    				or a							000BC7 CA 1F 0B 00         A   250    				jp z,os_main_loop
000BCB 47                  A   251    				ld b,a
000BCC 3D                  A   252    				dec a
000BCD 32 2A 53 00         A   253    				ld (cursor_x),a					000BD1 CD 6E 32 00         A   254    os_chrbk		call hwsc_chars_left			000BD5 C3 1F 0B 00         A   255    				jp os_main_loop
                           A   256    
000BD9 FE5A                A   257    os_nbksp		cp 05ah							000BDB CA 22 0C 00         A   258    				jp z,os_enter_pressed
                           A   259    	
000BDF 3A 7F 54 00         A   260    				ld a,(current_asciicode)		000BE3 B7                  A   261    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000BE4 28 38               A   262    				jr z,os_nvdun					                           A   263    
000BE6 FE7B                A   264    				cp 07bh							000BE8 30 12               A   265    				jr nc,os_gtcha					000BEA FE61                A   266    				cp 061h
000BEC 38 04               A   267    				jr c,os_ntupc
000BEE D620                A   268    				sub 020h
000BF0 18 0A               A   269    				jr os_gtcha
000BF2 FE5B                A   270    os_ntupc		cp 05bh
000BF4 30 06               A   271    				jr nc,os_gtcha
000BF6 FE41                A   272    				cp 041h
000BF8 38 02               A   273    				jr c,os_gtcha
000BFA C620                A   274    				add a,020h
000BFC 57                  A   275    os_gtcha		ld d,a							000BFD 3A 7D 54 00         A   276    				ld a,(insert_mode)				000C01 B7                  A   277    				or a
000C02 CC B5 32 00         A   278    				call z,hwsc_chars_right
                           A   279    				
000C06 ED4B 29 53 00       A   280    os_schi			ld bc,(cursor_pos)				000C0B 7A                  A   281    				ld a,d							000C0C CD 78 30 00         A   282    				call hwsc_plot_char		
000C10 21 2A 53 00         A   283    				ld hl,cursor_x					000C14 34                  A   284    				inc (hl)
000C15 3A E3 50 00         A   285    				ld a,(window_columns)
000C19 BE                  A   286    				cp (hl)							000C1A 20 02               A   287    				jr nz,os_nvdun
000C1C 3600                A   288    				ld (hl),0
                           A   289    
000C1E C3 1F 0B 00         A   290    os_nvdun		jp os_main_loop
                           A   291    	
                           A   292    
                           A   293    ;----------------------------------------------
                           A   294    
000C22                     A   295    os_enter_pressed
                           A   296    	
000C22 CD 40 33 00         A   297    				call hwsc_charline_to_command_s
                           A   298    
000C26 AF                  A   299    				xor a
000C27 32 2A 53 00         A   300    				ld (cursor_x),a					000C2B 21 29 53 00         A   301    				ld hl,cursor_y					000C2F 34                  A   302    				inc (hl)
000C30 3A E0 50 00         A   303    				ld a,(window_rows)
000C34 BE                  A   304    				cp (hl)
000C35 20 06               A   305    				jr nz,os_esdok
000C37 3D                  A   306    				dec a
000C38 77                  A   307    				ld (hl),a
000C39 CD D4 2F 00         A   308    				call hwsc_scroll_up
                           A   309    
000C3D CD 4A 0C 00         A   310    os_esdok		call os_parse_cmd_chk_ps		                           A   311    
000C41 AF                  A   312    post_csb		xor a
000C42 32 F7 53 00         A   313    				ld (in_script_flag),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000C46 C3 1F 0B 00         A   314    				jp os_main_loop
                           A   315    
                           A   316    	
                           A   317    ;----------------------------------------------
                           A   318    
                           A   319    
000C4A                     A   320    os_parse_cmd_chk_ps
                           A   321    
000C4A CD 5D 0C 00         A   322    				call os_parse_command_line
000C4E FEFE                A   323    				cp 0feh							000C50 C0                  A   324    				ret nz
000C51 01500000            A   325    				ld bc,max_buffer_chars			000C55 11 47 53 00         A   326    				ld de,commandstring				000C59 EDB0                A   327    				ldir
000C5B 18 ED               A   328    				jr os_parse_cmd_chk_ps
                           A   329    
                           A   330    	
                           A   331    ;----------------------------------------------
                           A   332    	
000C5D                     A   333    os_parse_command_line
                           A   334    
000C5D 3E01                A   335    				ld a,1
000C5F 32 C2 52 00         A   336    				ld (store_registers),a			                           A   337    
000C63 21 47 53 00         A   338    				ld hl,commandstring				000C67 0650                A   339    				ld b,max_buffer_chars			000C69 CD A2 0F 00         A   340    				call os_scan_for_non_space		000C6D B7                  A   341    				or a							000C6E C8                  A   342    				ret z
000C6F 11 E7 48 00         A   343    				ld de,dictionary-1				000C73 D5                  A   344    				push de
000C74 D1                  A   345    compcstr		pop de
000C75 E5                  A   346    				push hl
000C76 FDE1                A   347    				pop iy
000C78 13                  A   348    notacmd			inc de
000C79 1A                  A   349    				ld a,(de)
000C7A FE01                A   350    				cp 1							000C7C CA 16 0D 00         A   351    				jp z,os_no_kernal_command_found
000C80 CB7F                A   352    				bit 7,a
000C82 28 F4               A   353    				jr z,notacmd					000C84 E67F                A   354    				and 07fh
000C86 4F                  A   355    				ld c,a							000C87 D5                  A   356    				push de
000C88 13                  A   357    cmdnscan		inc de
000C89 FD7E00              A   358    				ld a,(iy)						000C8C CD 00 12 00         A   359    				call os_uppercasify
000C90 47                  A   360    				ld b,a
000C91 1A                  A   361    				ld a,(de)						000C92 B8                  A   362    				cp b
000C93 FD23                A   363    				inc iy
000C95 28 F1               A   364    				jr z,cmdnscan					000C97 1A                  A   365    nomatch			ld a,(de)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000C98 B7                  A   366    				or a
000C99 28 04               A   367    				jr z,posmatch					000C9B CB7F                A   368    				bit 7,a			
000C9D 28 D5               A   369    				jr z,compcstr					000C9F FD7EFF              A   370    posmatch		ld a,(iy-1)						000CA2 FE20                A   371    				cp 32
000CA4 20 CE               A   372    				jr nz,compcstr					                           A   373    	
000CA6 D1                  A   374    				pop de				
000CA7 FDE5                A   375    				push iy							000CA9 E1                  A   376    				pop hl
000CAA CD A2 0F 00         A   377    				call os_scan_for_non_space
000CAE 22 EB 53 00         A   378    				ld (os_args_loc),hl				                           A   379    	
000CB2 21 51 4E 00         A   380    				ld hl,os_cmd_locs
000CB6 11030000            A   381    				ld de,3
000CBA 51                  A   382    				ld d,c
000CBB ED5C                A   383    				mlt de							000CBD 19                  A   384    				add hl,de
000CBE ED37                A   385    				ld ix,(hl)						                           A   386    
000CC0 2A EB 53 00         A   387    				ld hl,(os_args_loc)				000CC4 CD E2 0E 00         A   388    				call os_run_command				                           A   389    
000CC8 C8                  A   390    				ret z							000CC9 B7                  A   391    				or a
000CCA 20 13               A   392    				jr nz,show_erm
000CCC 78                  A   393    os_hwe1			ld a,b							000CCD 21 E7 4B 00         A   394    os_hwerr		ld hl,hex_byte_txt		
000CD1 CD 4F 10 00         A   395    				call hexbyte_to_ascii	
000CD5 21 4C 4D 00         A   396    				ld hl,hw_err_msg
000CD9 CD CE 13 00         A   397    				call os_show_packed_text
000CDD AF                  A   398    				xor a
000CDE C9                  A   399    				ret
                           A   400    
000CDF 01000000            A   401    show_erm		ld bc,0							000CE3 4F                  A   402    				ld c,a
000CE4 D680                A   403    				sub 080h						000CE6 38 11               A   404    				jr c,no_trans					000CE8 21 6A 4F 00         A   405    				ld hl,kernal_error_code_transla
000CEC CB77                A   406    				bit 6,a							000CEE 28 06               A   407    				jr z,not_fs_err					000CF0 21 75 4F 00         A   408    				ld hl,fs_error_code_translation
000CF4 D640                A   409    				sub 040h
000CF6 4F                  A   410    not_fs_err		ld c,a
000CF7 09                  A   411    				add hl,bc
000CF8 4E                  A   412    				ld c,(hl)
000CF9 0600                A   413    no_trans		ld b,0
000CFB 21 B1 4E 00         A   414    				ld hl,packed_msg_list
000CFF 7E                  A   415    findmsg			ld a,(hl)
000D00 FEFF                A   416    				cp 0ffh
000D02 C8                  A   417    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000D03 23                  A   418    				inc hl
000D04 B7                  A   419    				or a
000D05 20 F8               A   420    				jr nz,findmsg					000D07 04                  A   421    				inc b
000D08 79                  A   422    				ld a,c							000D09 B8                  A   423    				cp b
000D0A 20 F3               A   424    				jr nz,findmsg
000D0C CD CE 13 00         A   425    				call os_show_packed_text
000D10 CD 97 13 00         A   426    				call os_new_line
000D14 AF                  A   427    				xor a
000D15 C9                  A   428    				ret
                           A   429    	
                           A   430    
000D16                     A   431    os_no_kernal_command_found
                           A   432    
000D16 3E30                A   433    				ld a,030h						000D18 32 56 51 00         A   434    fvolcmd			ld (vol_txt+4),a				000D1C F5                  A   435    				push af			
000D1D 11 53 51 00         A   436    				ld de,vol_txt+1		
000D21 0605                A   437    				ld b,5			
000D23 CD C6 11 00         A   438    				call os_compare_strings	
000D27 28 08               A   439    				jr z,gotvolcmd		
000D29 F1                  A   440    				pop af				
000D2A 3C                  A   441    				inc a			
000D2B FE38                A   442    				cp 030h+max_volumes		
000D2D 20 E9               A   443    				jr nz,fvolcmd		
000D2F 18 0B               A   444    				jr novolcmd		
000D31 F1                  A   445    gotvolcmd		pop af
000D32 D630                A   446    				sub 030h
000D34 CD 71 1A 00         A   447    				call os_change_volume
000D38 C3 C7 0E 00         A   448    				jp extcmderf					                           A   449    		
                           A   450    
                           A   451    
000D3C 7E                  A   452    novolcmd		ld a,(hl)						000D3D FE47                A   453    				cp 'G'							000D3F 20 29               A   454    				jr nz,not_g_cmd					000D41 23                  A   455    				inc hl
000D42 7E                  A   456    				ld a,(hl)
000D43 2B                  A   457    				dec hl
000D44 FE20                A   458    				cp ' '
000D46 20 22               A   459    				jr nz,not_g_cmd
000D48 23                  A   460    				inc hl
000D49 CD A2 0F 00         A   461    				call os_scan_for_non_space
000D4D 22 EB 53 00         A   462    				ld (os_args_loc),hl				000D51 B7                  A   463    				or a
000D52 20 04               A   464    				jr nz,gotgargs
000D54 3E1F                A   465    				ld a,01fh						000D56 18 87               A   466    				jr show_erm
000D58 CD 8E 10 00         A   467    gotgargs		call ascii_to_hex_no_scan		000D5C B7                  A   468    				or a
000D5D 20 80               A   469    				jr nz,show_erm
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  12


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000D5F CD FE 2D 00         A   470    				call enable_nmi					000D63 D5                  A   471    				push de
000D64 DDE1                A   472    				pop ix			
000D66 C3 E2 0E 00         A   473    				jp os_run_command				                           A   474    				
                           A   475    				
                           A   476    
000D6A 22 EB 53 00         A   477    not_g_cmd		ld (os_args_loc),hl				000D6E 22 EE 53 00         A   478    				ld (os_args_pos_cache),hl
000D72 CD D6 0F 00         A   479    				call os_args_to_fn_append_ezp	                           A   480    	
000D76 CD E9 0E 00         A   481    				call cache_dir_block			                           A   482    
000D7A CD CF 3A 00         A   483    				call fs_check_disk_format		000D7E 38 3C               A   484    				jr c,os_ndfxc
000D80 B7                  A   485    				or a							000D81 20 39               A   486    				jr nz,os_ndfxc
                           A   487    	
000D83 CD 71 3C 00         A   488    				call fs_open_file_command		000D87 DA CD 0C 00         A   489    				jp c,os_hwerr			 		000D8B B7                  A   490    				or a
000D8C 28 38               A   491    				jr z,os_gecmd					                           A   492    
000D8E CD 42 3C 00         A   493    				call fs_goto_root_dir_command	000D92 21 6F 48 00         A   494    				ld hl,os_dos_cmds_txt
000D96 CD D0 44 00         A   495    				call fs_hl_to_filename
000D9A CD 1D 3C 00         A   496    				call fs_change_dir_command		000D9E DA CD 0C 00         A   497    				jp c,os_hwerr
000DA2 B7                  A   498    				or a
000DA3 20 17               A   499    				jr nz,os_ndfxc					                           A   500    	
000DA5 2A EE 53 00         A   501    				ld hl,(os_args_pos_cache)		000DA9 22 EB 53 00         A   502    				ld (os_args_loc),hl
000DAD CD D6 0F 00         A   503    				call os_args_to_fn_append_ezp	000DB1 CD 71 3C 00         A   504    				call fs_open_file_command		000DB5 DA CD 0C 00         A   505    				jp c,os_hwerr
000DB9 B7                  A   506    				or a
000DBA 28 0A               A   507    				jr z,os_gecmd
000DBC CD F5 0E 00         A   508    os_ndfxc		call restore_dir_block			000DC0 3E0B                A   509    				ld a,0bh						000DC2 C3 DF 0C 00         A   510    				jp show_erm
                           A   511    
000DC6 2A EB 53 00         A   512    os_gecmd		ld hl,(os_args_loc)				000DCA CD A2 0F 00         A   513    				call os_scan_for_non_space		000DCE 22 EB 53 00         A   514    				ld (os_args_loc),hl
                           A   515    
000DD2 11100000            A   516    				ld de,16
000DD6 CD E9 15 00         A   517    				call os_set_load_length			000DDA 21 8C 59 00         A   518    				ld hl,scratch_pad
000DDE 22 30 47 00         A   519    				ld (fs_ez80_address),hl
000DE2 CD BC 3C 00         A   520    				call fs_read_data_command
000DE6 DA CD 0C 00         A   521    				jp c,os_hwerr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  13


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000DEA B7                  A   522    				or a
000DEB C2 DF 0C 00         A   523    				jp nz,show_erm					000DEF 2A 8E 59 00         A   524    				ld hl,(scratch_pad+2)
000DF3 1150524F            A   525    				ld de,04f5250h					000DF7 AF                  A   526    				xor a	
000DF8 ED52                A   527    				sbc hl,de
000DFA 28 0A               A   528    				jr z,loc_header
000DFC CD F5 0E 00         A   529    				call restore_dir_block			000E00 3E1A                A   530    				ld a,01ah						000E02 C3 DF 0C 00         A   531    				jp show_erm						                           A   532    				
000E06 3A 9B 59 00         A   533    loc_header		ld a,(scratch_pad+15)			000E0A 32 C1 52 00         A   534    				ld (store_adl),a			
000E0E CD 71 3C 00         A   535    				call fs_open_file_command		000E12 DA CD 0C 00         A   536    				jp c,os_hwerr
000E16 B7                  A   537    				or a	
000E17 20 A3               A   538    				jr nz,os_ndfxc
000E19 2A 91 59 00         A   539    				ld hl,(scratch_pad+5)			000E1D 22 30 47 00         A   540    				ld (fs_ez80_address),hl
000E21 ED5B 94 52 00       A   541    				ld de,(sys_ram_high)
000E26 AF                  A   542    				xor a
000E27 E5                  A   543    				push hl
000E28 ED52                A   544    				sbc hl,de
000E2A E1                  A   545    				pop hl
000E2B 30 0A               A   546    				jr nc,osmemok
000E2D CD F5 0E 00         A   547    				call restore_dir_block			000E31 3E26                A   548    				ld a,026h
000E33 C3 DF 0C 00         A   549    				jp show_erm
                           A   550    
000E37 ED5B 97 59 00       A   551    osmemok			ld de,(scratch_pad+11)			000E3C 7B                  A   552    				ld a,e
000E3D B2                  A   553    				or d
000E3E 28 14               A   554    				jr z,noprov_spec				000E40 21260000            A   555    				ld hl,prose_version
000E44 AF                  A   556    				xor a
000E45 40ED52              A   557    				sbc.sis hl,de					000E48 30 0A               A   558    				jr nc,noprov_spec
000E4A CD F5 0E 00         A   559    				call restore_dir_block
000E4E 3E1B                A   560    				ld a,01bh						000E50 C3 DF 0C 00         A   561    				jp show_erm
                           A   562    				
000E54 CD B0 33 00         A   563    noprov_spec		call hwsc_get_version			000E58 2A 99 59 00         A   564    				ld hl,(scratch_pad+13)			000E5C EB                  A   565    				ex de,hl						000E5D 7B                  A   566    				ld a,e
000E5E B2                  A   567    				or d
000E5F 28 10               A   568    				jr z,nohwv_spec					000E61 AF                  A   569    				xor a
000E62 40ED52              A   570    				sbc.sis hl,de					000E65 30 0A               A   571    				jr nc,nohwv_spec
000E67 CD F5 0E 00         A   572    				call restore_dir_block
000E6B 3E2B                A   573    				ld a,02bh						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  14


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000E6D C3 DF 0C 00         A   574    				jp show_erm
                           A   575    
000E71 ED5B 94 59 00       A   576    nohwv_spec		ld de,(scratch_pad+8)			000E76 3A 96 59 00         A   577    				ld a,(scratch_pad+10)			000E7A B2                  A   578    				or d
000E7B B3                  A   579    				or e
000E7C 28 04               A   580    				jr z,readcode					000E7E CD E9 15 00         A   581    				call os_set_load_length			                           A   582    		
000E82 2A 91 59 00         A   583    readcode		ld hl,(scratch_pad+5)
000E86 22 F4 53 00         A   584    				ld (os_extcmd_jmp_addr),hl		000E8A CD BC 3C 00         A   585    				call fs_read_data_command
000E8E F5                  A   586    				push af
000E8F CD F5 0E 00         A   587    				call restore_dir_block			000E93 F1                  A   588    				pop af
000E94 DA CD 0C 00         A   589    				jp c,os_hwerr					000E98 B7                  A   590    				or a
000E99 C2 DF 0C 00         A   591    				jp nz,show_erm					                           A   592    	
000E9D CD FE 2D 00         A   593    				call enable_nmi					000EA1 DD2A F4 53 00       A   594    				ld ix,(os_extcmd_jmp_addr)		000EA6 2A EB 53 00         A   595    				ld hl,(os_args_loc)				000EAA C3 E2 0E 00         A   596    				jp os_run_command				                           A   597    
000EAE F5                  A   598    extcmd_return	push af							000EAF CD 6D 33 00         A   599    				call hwsc_default_hw_settings	000EB3 3A C2 52 00         A   600    				ld a,(store_registers)
000EB7 B7                  A   601    				or a
000EB8 28 06               A   602    				jr z,skp_strg
000EBA F1                  A   603    				pop af
000EBB CD 18 13 00         A   604    				call os_store_CPU_regs			000EBF F5                  A   605    				push af
000EC0 F1                  A   606    skp_strg		pop af
                           A   607    
000EC1 F5                  A   608    cntuasr			push af
000EC2 CD 07 2E 00         A   609    				call disable_nmi				000EC6 F1                  A   610    				pop af
000EC7 28 12               A   611    extcmderf		jr z,not_errc					000EC9 B7                  A   612    				or a
000ECA CA CC 0C 00         A   613    				jp z,os_hwe1					000ECE FEFF                A   614    				cp 0ffh							000ED0 CA 48 0A 00         A   615    				jp z,os_cold_start
000ED4 FEFE                A   616    				cp 0feh							000ED6 C8                  A   617    				ret z
000ED7 C3 DF 0C 00         A   618    				jp show_erm						000EDB FEFF                A   619    not_errc		cp 0ffh							000EDD CA 48 0A 00         A   620    				jp z,os_cold_start
000EE1 C9                  A   621    				ret
                           A   622    				
                           A   623    ;----------------------------------------------
                           A   624    
000EE2                     A   625    os_run_command									Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  15


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A   626    	
000EE2 DD22 C3 52 00       A   627    				ld (com_start_addr),ix			000EE7 DDE9                A   628    				jp (ix)							                           A   629    
                           A   630    ;----------------------------------------------
                           A   631    
000EE9                     A   632    cache_dir_block
                           A   633    
                           A   634    	
000EE9 D5                  A   635    				push de
000EEA CD 15 1A 00         A   636    				call fs_get_dir_cluster	
000EEE ED53 F1 53 00       A   637    				ld (os_dir_block_cache),de
000EF3 D1                  A   638    				pop de	
000EF4 C9                  A   639    				ret
                           A   640    		
                           A   641    
000EF5                     A   642    restore_dir_block
                           A   643    
000EF5 D5                  A   644    				push de
000EF6 ED5B F1 53 00       A   645    				ld de,(os_dir_block_cache)
000EFB CD 21 1A 00         A   646    				call fs_update_dir_cluster
000EFF D1                  A   647    				pop de
000F00 C9                  A   648    				ret
                           A   649    		
                           A   650    ;==============================================
                           A   651    ; Routines called by command line
                           A   652    ;==============================================
                           A   653    
                           A   654    ; Set:-
                           A   655    ; HL to address of string
                           A   656    ; c = y
                           A   657    ; b = x
                           A   658    
000F01                     A   659    ext_print_string
                           A   660    
000F01 CC 4D 15 00         A   661    				call z,mbase_hl
000F05 18 05               A   662    				jr os_print_string
                           A   663    
000F07                     A   664    os_print_string_cond
                           A   665    
000F07 CD C8 19 00         A   666    				call test_quiet_mode
000F0B C0                  A   667    				ret nz
                           A   668    
000F0C                     A   669    os_print_string
                           A   670    
000F0C D5                  A   671    				push de
000F0D C5                  A   672    				push bc
000F0E ED4B 29 53 00       A   673    				ld bc,(cursor_pos)				000F13 7E                  A   674    prstr_lp		ld a,(hl)
000F14 23                  A   675    				inc hl
000F15 B7                  A   676    				or a
000F16 20 09               A   677    				jr nz,prstr_ne
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  16


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000F18 ED43 29 53 00       A   678    				ld (cursor_pos),bc
000F1D C1                  A   679    				pop bc
000F1E D1                  A   680    				pop de
000F1F AF                  A   681    				xor a							000F20 C9                  A   682    				ret
                           A   683    
000F21 FE0D                A   684    prstr_ne		cp 13
000F23 20 04               A   685    				jr nz,not_cr
000F25 0600                A   686    				ld b,0
000F27 18 EA               A   687    				jr prstr_lp
000F29 FE0A                A   688    not_cr			cp 10
000F2B 28 12               A   689    				jr z,line_feed				
000F2D FE0B                A   690    				cp 11
000F2F 28 0C               A   691    				jr z,next_line
000F31 CD 78 30 00         A   692    				call hwsc_plot_char
000F35 04                  A   693    				inc b
000F36 3A E3 50 00         A   694    				ld a,(window_columns)
000F3A B8                  A   695    				cp b
000F3B 20 D6               A   696    				jr nz,prstr_lp
000F3D 0600                A   697    next_line		ld b,0
000F3F 0C                  A   698    line_feed		inc c
000F40 3A E0 50 00         A   699    				ld a,(window_rows)
000F44 B9                  A   700    				cp c
000F45 20 CC               A   701    				jr nz,prstr_lp
000F47 0D                  A   702    				dec c
000F48 CD D4 2F 00         A   703    				call hwsc_scroll_up
000F4C 18 C5               A   704    				jr prstr_lp
                           A   705    
                           A   706    ;----------------------------------------------
                           A   707    
000F4E 21 56 54 00         A   708    os_print_char	ld hl,char_to_print
000F52 77                  A   709    				ld (hl),a
000F53 18 B7               A   710    				jr os_print_string
                           A   711    
                           A   712    ;----------------------------------------------
                           A   713    
000F55 F5                  A   714    home_cursor		push af
000F56 AF                  A   715    				xor a
000F57 32 2A 53 00         A   716    				ld (cursor_x),a
000F5B F1                  A   717    				pop af
000F5C C9                  A   718    				ret
                           A   719    				
                           A   720    ;----------------------------------------------
                           A   721    
000F5D                     A   722    os_cursor_flash
                           A   723    
000F5D 21 2C 53 00         A   724    				ld hl,cursorflashtimer
000F61 34                  A   725    				inc (hl)
000F62 7E                  A   726    				ld a,(hl)
000F63 FE19                A   727    				cp 25
000F65 C0                  A   728    				ret nz
000F66 3600                A   729    				ld (hl),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  17


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000F68 3A 2D 53 00         A   730    				ld a,(cursor_status)
000F6C EE01                A   731    				xor 1
000F6E 32 2D 53 00         A   732    				ld (cursor_status),a
000F72 28 05               A   733    				jr z,no_cursor
000F74 CD B8 31 00         A   734    				call hwsc_draw_cursor			000F78 C9                  A   735    				ret
000F79 CD A5 31 00         A   736    no_cursor		call hwsc_remove_cursor
000F7D C9                  A   737    				ret
                           A   738    
                           A   739    ;----------------------------------------------
                           A   740    
000F7E                     A   741    os_refresh_screen
                           A   742    
000F7E 0E00                A   743    				ld c,0							000F80 CD 18 33 00         A   744    rs_yloop		call hwsc_redraw_ui_line
000F84 0C                  A   745    				inc c
000F85 3A E0 50 00         A   746    				ld a,(window_rows)		
000F89 B9                  A   747    				cp c
000F8A 20 F4               A   748    				jr nz,rs_yloop
000F8C C9                  A   749    				ret
                           A   750    
                           A   751    ;----------------------------------------------
                           A   752    
000F8D                     A   753    os_next_arg
                           A   754    
000F8D CD 99 0F 00         A   755    				call os_scan_for_space
000F91 B7                  A   756    				or a
000F92 C8                  A   757    				ret z
000F93 CD A2 0F 00         A   758    				call os_scan_for_non_space
000F97 B7                  A   759    				or a
000F98 C9                  A   760    				ret
                           A   761    
                           A   762    
                           A   763    ;----------------------------------------------
                           A   764    	
                           A   765    
000F99                     A   766    os_scan_for_space
                           A   767    
000F99 7E                  A   768    os_sfspl 		ld a,(hl)						000F9A B7                  A   769    				or a							000F9B C8                  A   770    				ret z
000F9C FE20                A   771    				cp ' '
000F9E C8                  A   772    				ret z
000F9F 23                  A   773    				inc hl
000FA0 18 F7               A   774    				jr os_sfspl
                           A   775    	
                           A   776    
                           A   777    ;----------------------------------------------
                           A   778    	
                           A   779    
000FA2                     A   780    os_scan_for_non_space
                           A   781    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  18


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000FA2 2B                  A   782    				dec hl							000FA3 23                  A   783    os_nsplp		inc hl			
000FA4 7E                  A   784    				ld a,(hl)			
000FA5 B7                  A   785    				or a			
000FA6 C8                  A   786    				ret z							000FA7 FE20                A   787    				cp ' '
000FA9 28 F8               A   788    				jr z,os_nsplp
000FAB C9                  A   789    				ret
                           A   790    	
                           A   791    	
                           A   792    ;----------------------------------------------
                           A   793    
000FAC                     A   794    os_args_to_alt_filename
                           A   795    
000FAC CD 06 10 00         A   796    				call os_atfn_pre				000FB0 C8                  A   797    				ret z
000FB1 CD CA 44 00         A   798    				call fs_hl_to_alt_filename
000FB5 18 09               A   799    				jr os_atfrl
                           A   800    	
                           A   801    	
                           A   802    	
                           A   803    		
000FB7                     A   804    os_args_to_filename
                           A   805    
000FB7 CD 06 10 00         A   806    				call os_atfn_pre				000FBB C8                  A   807    				ret z
000FBC CD D0 44 00         A   808    				call fs_hl_to_filename	
                           A   809    
000FC0 7E                  A   810    os_atfrl		ld a,(hl)						000FC1 B7                  A   811    				or a							000FC2 28 0B               A   812    				jr z,os_cfne
000FC4 FE20                A   813    				cp 32
000FC6 28 07               A   814    				jr z,os_cfne
000FC8 FE2F                A   815    				cp 02fh
000FCA 28 03               A   816    				jr z,os_cfne
000FCC 23                  A   817    				inc hl
000FCD 18 F1               A   818    				jr os_atfrl	
000FCF 22 EB 53 00         A   819    os_cfne			ld (os_args_loc),hl				000FD3 79                  A   820    				ld a,c			
000FD4 B7                  A   821    				or a							000FD5 C9                  A   822    				ret
                           A   823    
                           A   824    
                           A   825    
                           A   826    
000FD6                     A   827    os_args_to_fn_append_ezp
                           A   828    
                           A   829    	
000FD6 CD 06 10 00         A   830    				call os_atfn_pre				000FDA C8                  A   831    				ret z
000FDB 11 C6 52 00         A   832    				ld de,temp_string
000FDF 7E                  A   833    ccmdtlp			ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  19


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
000FE0 B7                  A   834    				or a
000FE1 28 0D               A   835    				jr z,goteocmd
000FE3 FE20                A   836    				cp ' '
000FE5 28 09               A   837    				jr z,goteocmd
000FE7 FE2E                A   838    				cp '.'
000FE9 28 05               A   839    				jr z,goteocmd
000FEB 12                  A   840    				ld (de),a
000FEC 13                  A   841    				inc de
000FED 23                  A   842    				inc hl
000FEE 18 EF               A   843    				jr ccmdtlp
                           A   844    	
000FF0 E5                  A   845    goteocmd		push hl
000FF1 21 C2 48 00         A   846    				ld hl,ezp_extension_txt
000FF5 01050000            A   847    				ld bc,5
000FF9 EDB0                A   848    				ldir 
000FFB 21 C6 52 00         A   849    				ld hl,temp_string
000FFF CD D0 44 00         A   850    				call fs_hl_to_filename
001003 E1                  A   851    				pop hl
001004 18 BA               A   852    				jr os_atfrl
                           A   853    	
                           A   854    
                           A   855    
                           A   856    
001006                     A   857    os_atfn_pre
                           A   858    
001006 2A EB 53 00         A   859    				ld hl,(os_args_loc)				00100A CD A2 0F 00         A   860    				call os_scan_for_non_space
00100E B7                  A   861    				or a
00100F C8                  A   862    				ret z
001010 7E                  A   863    				ld a,(hl)
001011 FE2F                A   864    				cp 02fh							001013 20 01               A   865    				jr nz,notfsl1
001015 23                  A   866    				inc hl
001016 AF                  A   867    notfsl1			xor a
001017 3C                  A   868    				inc a
001018 C9                  A   869    				ret
                           A   870    
                           A   871    
                           A   872    ;--------- Number <-> String functions --------
                           A   873    
                           A   874    
001019                     A   875    os_clear_output_line
                           A   876    
001019 C5                  A   877    				push bc
00101A E5                  A   878    				push hl			
00101B 21 99 53 00         A   879    				ld hl,output_line
00101F 01500000            A   880    				ld bc,max_buffer_chars
001023 3E20                A   881    				ld a,32
001025 CD 26 15 00         A   882    				call os_bchl_memfill
001029 E1                  A   883    				pop hl
00102A C1                  A   884    				pop bc
00102B C9                  A   885    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  20


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A   886    	
                           A   887    	
                           A   888    	
00102C                     A   889    os_skip_leading_ascii_zeros
                           A   890    
00102C 7E                  A   891    slazlp			ld a,(hl)						00102D FE30                A   892    				cp '0'							00102F C0                  A   893    				ret nz
001030 23                  A   894    				inc hl
001031 10 F9               A   895    				djnz slazlp
001033 C9                  A   896    				ret
                           A   897    	
                           A   898    
                           A   899    
001034                     A   900    os_leading_ascii_zeros_to_spaces
                           A   901    
001034 E5                  A   902    				push hl
001035 7E                  A   903    clazlp			ld a,(hl)						001036 FE30                A   904    				cp '0'							001038 20 05               A   905    				jr nz,claze	
00103A 3620                A   906    				ld (hl),' '
00103C 23                  A   907    				inc hl
00103D 10 F6               A   908    				djnz clazlp
00103F E1                  A   909    claze			pop hl
001040 C9                  A   910    				ret
                           A   911    	
                           A   912    
                           A   913    
                           A   914    		
001041                     A   915    n_hexbytes_to_ascii
                           A   916    
001041 1A                  A   917    				ld a,(de)						001042 CD 4F 10 00         A   918    				call hexbyte_to_ascii			001046 1B                  A   919    				dec de
001047 10 F8               A   920    				djnz n_hexbytes_to_ascii
001049 C9                  A   921    				ret
                           A   922    			
                           A   923    			
                           A   924    
00104A                     A   925    ext_hexbyte_to_ascii
                           A   926    
00104A CC 4D 15 00         A   927    				call z,mbase_hl
00104E 7B                  A   928    				ld a,e
                           A   929    
00104F                     A   930    hexbyte_to_ascii
                           A   931    
00104F C5                  A   932    				push bc
001050 47                  A   933    				ld b,a							001051 CB3F                A   934    				srl a							001053 CB3F                A   935    				srl a
001055 CB3F                A   936    				srl a
001057 CB3F                A   937    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  21


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001059 CD 6B 10 00         A   938    				call hxdigconv
00105D 77                  A   939    				ld (hl),a
00105E 23                  A   940    				inc hl
00105F 78                  A   941    				ld a,b
001060 E60F                A   942    				and 0fh
001062 CD 6B 10 00         A   943    				call hxdigconv
001066 77                  A   944    				ld (hl),a
001067 23                  A   945    				inc hl
001068 C1                  A   946    				pop bc
001069 AF                  A   947    				xor a							00106A C9                  A   948    				ret
                           A   949    				
00106B C630                A   950    hxdigconv		add a,030h
00106D FE3A                A   951    				cp 03ah
00106F 38 02               A   952    				jr c,hxdone
001071 C607                A   953    				add a,7
001073 C9                  A   954    hxdone			ret
                           A   955    
                           A   956    
                           A   957    
                           A   958    
001074                     A   959    hexword_to_ascii	
                           A   960    
001074 7A                  A   961    				ld a,d							001075 CD 4F 10 00         A   962    				call hexbyte_to_ascii
001079 7B                  A   963    				ld a,e
00107A CD 4F 10 00         A   964    				call hexbyte_to_ascii
00107E C9                  A   965    				ret
                           A   966    	
                           A   967    
                           A   968    
                           A   969    
00107F                     A   970    ext_ascii_to_hexword
                           A   971    		
00107F CC 4D 15 00         A   972    				call z,mbase_hl
                           A   973    
001083                     A   974    ascii_to_hexword
                           A   975    	
001083 CD A2 0F 00         A   976    				call os_scan_for_non_space		001087 B7                  A   977    				or a
001088 20 04               A   978    				jr nz,ascii_to_hex_no_scan
00108A 3E81                A   979    				ld a,081h						00108C B7                  A   980    				or a
00108D C9                  A   981    				ret	
                           A   982    
                           A   983    	
00108E                     A   984    ascii_to_hex_no_scan
                           A   985    
00108E DDE5                A   986    				push ix
001090 C5                  A   987    				push bc
001091 DD210000 00         A   988    				ld ix,0
001096 0606                A   989    				ld b,6							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  22


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001098 CD C4 10 00         A   990    athlp			call ascii_to_hex_digit
00109C FEF0                A   991    				cp 0f0h							00109E 28 17               A   992    				jr z,athend
0010A0 FED0                A   993    				cp 0d0h
0010A2 28 13               A   994    				jr z,athend						0010A4 FE10                A   995    				cp 16
0010A6 30 17               A   996    				jr nc,badhex					0010A8 DD29                A   997    				add ix,ix						0010AA DD29                A   998    				add ix,ix
0010AC DD29                A   999    				add ix,ix
0010AE DD29                A  1000    				add ix,ix
0010B0 DDB5                A  1001    				or a,ixl
0010B2 DD6F                A  1002    				ld ixl,a
0010B4 23                  A  1003    				inc hl
0010B5 10 E1               A  1004    				djnz athlp
0010B7 DDE5                A  1005    athend			push ix
0010B9 D1                  A  1006    				pop de
0010BA AF                  A  1007    				xor a
0010BB C1                  A  1008    ath_quit		pop bc
0010BC DDE1                A  1009    				pop ix							0010BE C9                  A  1010    				ret
                           A  1011    		
0010BF 3E82                A  1012    badhex			ld a,82h						0010C1 B7                  A  1013    				or a
0010C2 18 F7               A  1014    				jr ath_quit
                           A  1015    				
                           A  1016    	
                           A  1017    		
0010C4                     A  1018    ascii_to_hex_digit
                           A  1019    
0010C4 7E                  A  1020    				ld a,(hl)						0010C5 FE61                A  1021    				cp 061h
0010C7 38 02               A  1022    				jr c,hc_uppercase
0010C9 D620                A  1023    				sub 020h						0010CB D63A                A  1024    hc_uppercase	sub 03ah						0010CD 38 02               A  1025    				jr c,zeronine
0010CF C6F9                A  1026    				add a,0f9h
0010D1 C60A                A  1027    zeronine		add a,0ah
0010D3 C9                  A  1028    				ret
                           A  1029    
                           A  1030    
                           A  1031    ;--------- Text Input / Non-numeric string func
                           A  1032    
                           A  1033    ; Waits for user to enter a string of character
                           A  1034    ; Before calling, set:  HL = destination of str
                           A  1035    ;                        E = max number of char
                           A  1036    ; Returns:   A  = number of characters in enter
                           A  1037    
                           A  1038    
0010D4                     A  1039    ext_user_input
0010D4 CC 4D 15 00         A  1040    				call z,mbase_hl
                           A  1041    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  23


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0010D8                     A  1042    os_user_input
0010D8 AF                  A  1043    				xor a
0010D9 32 B3 50 00         A  1044    				ld (ui_index),a
0010DD 22 B5 50 00         A  1045    				ld (ui_string_addr),hl
0010E1 7B                  A  1046    				ld a,e
0010E2 32 B4 50 00         A  1047    				ld (ui_maxchars),a
                           A  1048    				
0010E6 3A 7D 54 00         A  1049    				ld a,(insert_mode)
0010EA 32 46 53 00         A  1050    				ld (ui_im_cache),a
0010EE AF                  A  1051    				xor a
0010EF 32 7D 54 00         A  1052    				ld (insert_mode),a				                           A  1053    				
0010F3 CD B8 31 00         A  1054    ui_loop			call hwsc_draw_cursor			0010F7 CD 75 36 00         A  1055    				call os_wait_key_press			0010FB 32 7E 54 00         A  1056    				ld (current_scancode),a
0010FF 78                  A  1057    				ld a,b
001100 32 7F 54 00         A  1058    				ld (current_asciicode),a		001104 CD A5 31 00         A  1059    				call hwsc_remove_cursor
                           A  1060    	
001108 3A 7E 54 00         A  1061    				ld a,(current_scancode)
00110C FE66                A  1062    				cp 066h							00110E 20 1F               A  1063    				jr nz,os_nuibs
001110 3A B3 50 00         A  1064    				ld a,(ui_index)
001114 B7                  A  1065    				or a
001115 28 DC               A  1066    				jr z,ui_loop					001117 21 2A 53 00         A  1067    				ld hl,cursor_x					00111B 35                  A  1068    				dec (hl)						00111C 46                  A  1069    os_uixok		ld b,(hl)		
00111D 3A 29 53 00         A  1070    				ld a,(cursor_y)
001121 4F                  A  1071    				ld c,a
001122 3E20                A  1072    				ld a,32
001124 CD 78 30 00         A  1073    				call hwsc_plot_char
001128 21 B3 50 00         A  1074    				ld hl,ui_index
00112C 35                  A  1075    				dec (hl)						00112D 18 C4               A  1076    				jr ui_loop
                           A  1077    
00112F FE76                A  1078    os_nuibs		cp 076h							001131 28 5E               A  1079    				jr z,ui_aborted
001133 FE5A                A  1080    				cp 05ah							001135 28 45               A  1081    				jr z,ui_enter_pressed
                           A  1082    	
001137 3A B3 50 00         A  1083    				ld a,(ui_index)					00113B 21 B4 50 00         A  1084    				ld hl,ui_maxchars
00113F BE                  A  1085    				cp (hl)
001140 28 B1               A  1086    				jr z,ui_loop	
                           A  1087    
001142 3A 7F 54 00         A  1088    				ld a,(current_asciicode)		001146 B7                  A  1089    				or a							001147 28 AA               A  1090    				jr z,ui_loop					                           A  1091    
001149 57                  A  1092    ui_gtcha		ld d,a
00114A 2A B5 50 00         A  1093    				ld hl,(ui_string_addr)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  24


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
00114E 3A B3 50 00         A  1094    				ld a,(ui_index)
001152 01000000            A  1095    				ld bc,0
001156 4F                  A  1096    				ld c,a
001157 09                  A  1097    				add hl,bc
001158 72                  A  1098    				ld (hl),d						001159 3C                  A  1099    				inc a
00115A 32 B3 50 00         A  1100    				ld (ui_index),a					                           A  1101    				
00115E ED4B 29 53 00       A  1102    				ld bc,(cursor_y)				001163 7A                  A  1103    				ld a,d
001164 CD 78 30 00         A  1104    				call hwsc_plot_char		
001168 21 2A 53 00         A  1105    				ld hl,cursor_x					00116C 34                  A  1106    				inc (hl)
00116D 3A E3 50 00         A  1107    				ld a,(window_columns)			001171 BE                  A  1108    				cp (hl)
001172 C2 F3 10 00         A  1109    				jp nz,ui_loop
001176 3600                A  1110    				ld (hl),0
001178 C3 F3 10 00         A  1111    				jp ui_loop
                           A  1112    
00117C                     A  1113    ui_enter_pressed
                           A  1114    				
00117C 3A 46 53 00         A  1115    				ld a,(ui_im_cache)				001180 32 7D 54 00         A  1116    				ld (insert_mode),a
001184 3A B3 50 00         A  1117    				ld a,(ui_index)					001188 B7                  A  1118    				or a
001189 20 04               A  1119    				jr nz,ui_data
00118B 3E81                A  1120    				ld a,081h						00118D B7                  A  1121    				or a
00118E C9                  A  1122    				ret
00118F BF                  A  1123    ui_data			cp a							001190 C9                  A  1124    				ret
                           A  1125    
001191 3A 46 53 00         A  1126    ui_aborted		ld a,(ui_im_cache)				001195 32 7D 54 00         A  1127    				ld (insert_mode),a
001199 3E80                A  1128    				ld a,080h						00119B B7                  A  1129    				or a							00119C C9                  A  1130    				ret
                           A  1131    		
                           A  1132    ;----------------------------------------------
                           A  1133    	
00119D                     A  1134    os_count_lines
                           A  1135    
00119D E5                  A  1136    				push hl							00119E 0679                A  1137    				ld b,'y'						0011A0 21 2E 53 00         A  1138    				ld hl,os_linecount			
0011A4 34                  A  1139    				inc (hl)						0011A5 3A E0 50 00         A  1140    				ld a,(window_rows)
0011A9 D604                A  1141    				sub 4
0011AB BE                  A  1142    				cp (hl)
0011AC 20 0E               A  1143    				jr nz,os_nntpo
0011AE 3600                A  1144    				ld (hl),0
0011B0 21 C7 48 00         A  1145    				ld hl,os_more_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  25


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0011B4 CD 0C 0F 00         A  1146    				call os_print_string
0011B8 CD 75 36 00         A  1147    				call os_wait_key_press	
0011BC E1                  A  1148    os_nntpo		pop hl
0011BD C9                  A  1149    				ret
                           A  1150    
                           A  1151    ;----------------------------------------------
                           A  1152    
0011BE                     A  1153    ext_compare_strings
                           A  1154    	
0011BE CC 4D 15 00         A  1155    				call z,mbase_hl
0011C2 CC 5E 15 00         A  1156    				call z,mbase_de
                           A  1157    				
0011C6                     A  1158    os_compare_strings
                           A  1159    
                           A  1160    ; both strings at HL/DE should be zero terminat
                           A  1161    ; compare will fail if string lengths are diffe
                           A  1162    ; unless count (B) is reached first
                           A  1163    ; Case is ignored
                           A  1164    ; Zero flag set on return if same
                           A  1165    
0011C6 E5                  A  1166    				push hl							0011C7 D5                  A  1167    				push de							0011C8 1A                  A  1168    ocslp			ld a,(de)						0011C9 B7                  A  1169    				or a
0011CA 28 0C               A  1170    				jr z,ocsbt
0011CC CD 09 12 00         A  1171    				call case_insensitive_compare	0011D0 20 0E               A  1172    				jr nz,ocs_diff
0011D2 13                  A  1173    				inc de
0011D3 23                  A  1174    				inc hl
0011D4 10 F2               A  1175    				djnz ocslp
0011D6 18 04               A  1176    				jr ocs_same
0011D8 1A                  A  1177    ocsbt			ld a,(de)						0011D9 B6                  A  1178    				or (hl)
0011DA 20 04               A  1179    				jr nz,ocs_diff
0011DC D1                  A  1180    ocs_same		pop de
0011DD E1                  A  1181    				pop hl
0011DE AF                  A  1182    				xor a							0011DF C9                  A  1183    				ret
0011E0 D1                  A  1184    ocs_diff		pop de
0011E1 E1                  A  1185    				pop hl
0011E2 AF                  A  1186    				xor a							0011E3 3C                  A  1187    				inc a
0011E4 C9                  A  1188    				ret
                           A  1189    
                           A  1190    
                           A  1191    ;----------------------------------------------
                           A  1192    
0011E5                     A  1193    os_copy_ascii_run
                           A  1194    
                           A  1195    ;INPUT HL = source ($00 or $20 terminates)
                           A  1196    ;      DE = dest
                           A  1197    ;       b = max chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  26


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  1198    
                           A  1199    ;OUTPUT HL/DE = end of runs
                           A  1200    ;           c = char count
                           A  1201    	
0011E5 0E00                A  1202    				ld c,0
0011E7 7E                  A  1203    cpyar_lp		ld a,(hl)
0011E8 B7                  A  1204    				or a
0011E9 C8                  A  1205    				ret z
0011EA FE20                A  1206    				cp 32
0011EC C8                  A  1207    				ret z
0011ED 12                  A  1208    				ld (de),a
0011EE 23                  A  1209    				inc hl
0011EF 13                  A  1210    				inc de
0011F0 0C                  A  1211    				inc c
0011F1 10 F4               A  1212    				djnz cpyar_lp
0011F3 C9                  A  1213    				ret
                           A  1214    
                           A  1215    ;----------------------------------------------
                           A  1216    
0011F4                     A  1217    uppercasify_string
                           A  1218    
                           A  1219    ; Set HL to string location ($00 quits)
                           A  1220    ; Set B to max number of chars
                           A  1221    
0011F4 7E                  A  1222    				ld a,(hl)
0011F5 B7                  A  1223    				or a
0011F6 C8                  A  1224    				ret z
0011F7 CD 00 12 00         A  1225    				call os_uppercasify
0011FB 77                  A  1226    				ld (hl),a
0011FC 23                  A  1227    				inc hl
0011FD 10 F5               A  1228    				djnz uppercasify_string	
0011FF C9                  A  1229    				ret
                           A  1230    	
                           A  1231    
001200                     A  1232    os_uppercasify
                           A  1233    
                           A  1234    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1235    
001200 FE61                A  1236    				cp 061h			
001202 D8                  A  1237    				ret c
001203 FE7B                A  1238    				cp 07bh
001205 D0                  A  1239    				ret nc
001206 D620                A  1240    				sub 020h				
001208 C9                  A  1241    				ret
                           A  1242    
                           A  1243    ;----------------------------------------------
                           A  1244    
001209                     A  1245    case_insensitive_compare
                           A  1246    
                           A  1247    ; compares A with (HL) disregarding the case of
                           A  1248    ; Zero flag set if the characters are the same
                           A  1249    ; all registers are preserved.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  27


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  1250    
001209 C5                  A  1251    				push bc					
00120A 4F                  A  1252    				ld c,a
                           A  1253    
00120B CD 00 12 00         A  1254    				call os_uppercasify				00120F 47                  A  1255    				ld b,a
001210 7E                  A  1256    				ld a,(hl)
001211 CD 00 12 00         A  1257    				call os_uppercasify
001215 B8                  A  1258    				cp b
                           A  1259    
001216 79                  A  1260    				ld a,c
001217 C1                  A  1261    				pop bc
001218 C9                  A  1262    				ret
                           A  1263    
                           A  1264    ;----------------------------------------------
                           A  1265    
001219                     A  1266    os_decimal_add
                           A  1267    
                           A  1268    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1269    
001219 C5                  A  1270    				push bc
00121A 0E00                A  1271    				ld c,0
00121C 1A                  A  1272    decdlp			ld a,(de)
00121D 86                  A  1273    				add a,(hl)
00121E 81                  A  1274    				add a,c
00121F FE0A                A  1275    				cp 10
001221 38 0B               A  1276    				jr c,daddnc
001223 D60A                A  1277    				sub 10
001225 0E01                A  1278    				ld c,1
001227 12                  A  1279    decnclp			ld (de),a
001228 23                  A  1280    				inc hl
001229 13                  A  1281    				inc de
00122A 10 F0               A  1282    				djnz decdlp
00122C C1                  A  1283    				pop bc
00122D C9                  A  1284    				ret
00122E 0E00                A  1285    daddnc			ld c,0
001230 18 F5               A  1286    				jr decnclp
                           A  1287    	
                           A  1288    ;----------------------------------------------
                           A  1289    
001232                     A  1290    os_hex_to_decimal
                           A  1291    
                           A  1292    ; INPUT xDE hex longword
                           A  1293    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1294    
       0000598C            A  1295    hex_to_convert		equ scratch_pad
       0000598F            A  1296    decimal_digits		equ scratch_pad+3
       00005997            A  1297    decimal_add_digits	equ scratch_pad+3+8
                           A  1298    
001232 ED53 8C 59 00       A  1299    				ld (hex_to_convert),de
                           A  1300    		
001237 21 97 59 00         A  1301    				ld hl,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  28


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
00123B E5                  A  1302    				push hl
00123C 11 8F 59 00         A  1303    				ld de,decimal_digits
001240 AF                  A  1304    				xor a
001241 0608                A  1305    				ld b,8
001243 12                  A  1306    setupdec		ld (de),a
001244 77                  A  1307    				ld (hl),a
001245 23                  A  1308    				inc hl
001246 13                  A  1309    				inc de
001247 10 FA               A  1310    				djnz setupdec
001249 E1                  A  1311    				pop hl
00124A 3601                A  1312    				ld (hl),1
                           A  1313    	
00124C 21 8C 59 00         A  1314    				ld hl,hex_to_convert
001250 0603                A  1315    				ld b,3
001252 C5                  A  1316    decconvlp		push bc
001253 7E                  A  1317    				ld a,(hl)
001254 CD 72 12 00         A  1318    				call decadder
001258 CD 8B 12 00         A  1319    				call decaddx16
00125C 7E                  A  1320    				ld a,(hl)
00125D 0F                  A  1321    				rrca
00125E 0F                  A  1322    				rrca
00125F 0F                  A  1323    				rrca
001260 0F                  A  1324    				rrca
001261 CD 72 12 00         A  1325    				call decadder
001265 CD 8B 12 00         A  1326    				call decaddx16
001269 C1                  A  1327    				pop bc
00126A 23                  A  1328    				inc hl
00126B 10 E5               A  1329    				djnz decconvlp
00126D 21 8F 59 00         A  1330    				ld hl,decimal_digits
001271 C9                  A  1331    				ret
                           A  1332    
                           A  1333    
                           A  1334    
001272 E60F                A  1335    decadder		and 15
001274 C8                  A  1336    				ret z
001275 47                  A  1337    				ld b,a
001276 E5                  A  1338    				push hl
001277 C5                  A  1339    daddlp			push bc
001278 11 8F 59 00         A  1340    				ld de,decimal_digits
00127C 21 97 59 00         A  1341    				ld hl,decimal_add_digits
001280 0608                A  1342    				ld b,8
001282 CD 19 12 00         A  1343    				call os_decimal_add
001286 C1                  A  1344    				pop bc
001287 10 EE               A  1345    				djnz daddlp	
001289 E1                  A  1346    				pop hl
00128A C9                  A  1347    				ret
                           A  1348    			
                           A  1349    				
00128B E5                  A  1350    decaddx16		push hl
00128C 0604                A  1351    				ld b,4							00128E C5                  A  1352    x16loop			push bc
00128F 11 97 59 00         A  1353    				ld de,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  29


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001293 21 97 59 00         A  1354    				ld hl,decimal_add_digits
001297 0608                A  1355    				ld b,8
001299 CD 19 12 00         A  1356    				call os_decimal_add
00129D C1                  A  1357    				pop bc
00129E 10 EE               A  1358    				djnz x16loop	
0012A0 E1                  A  1359    				pop hl
0012A1 C9                  A  1360    				ret
                           A  1361    	
                           A  1362    	
                           A  1363    ;----------------------------------------------
                           A  1364    
0012A2                     A  1365    os_show_decimal
                           A  1366    
0012A2 11 99 53 00         A  1367    				ld de,output_line				0012A6 01090000            A  1368    				ld bc,9
0012AA 09                  A  1369    				add hl,bc
0012AB 060A                A  1370    				ld b,10
0012AD 7E                  A  1371    shdeclp			ld a,(hl)
0012AE B7                  A  1372    				or a
0012AF 28 04               A  1373    				jr z,dnodigit
0012B1 C630                A  1374    				add a,030h
0012B3 12                  A  1375    				ld (de),a
0012B4 13                  A  1376    				inc de
0012B5 2B                  A  1377    dnodigit		dec hl
0012B6 10 F5               A  1378    				djnz shdeclp
0012B8 AF                  A  1379    				xor a
0012B9 12                  A  1380    				ld (de),a
0012BA CD 02 13 00         A  1381    				call os_print_output_line
0012BE C9                  A  1382    				ret
                           A  1383    				
                           A  1384    ;----------------------------------------------
                           A  1385    		
0012BF                     A  1386    os_copy_to_output_line
                           A  1387    	
0012BF D5                  A  1388    				push de
0012C0 C5                  A  1389    				push bc
0012C1 11 99 53 00         A  1390    				ld de,output_line				0012C5 01510000            A  1391    				ld bc,max_buffer_chars+1		0012C9 EDA0                A  1392    os_cloll		ldi
0012CB 7E                  A  1393    				ld a,(hl)
0012CC B7                  A  1394    				or a
0012CD 28 04               A  1395    				jr z,os_clold
0012CF 78                  A  1396    				ld a,b
0012D0 B1                  A  1397    				or c
0012D1 20 F6               A  1398    				jr nz,os_cloll
0012D3 12                  A  1399    os_clold		ld (de),a
0012D4 C1                  A  1400    				pop bc
0012D5 D1                  A  1401    				pop de
0012D6 C9                  A  1402    				ret
                           A  1403    
                           A  1404    
                           A  1405    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  30


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  1406    
0012D7                     A  1407    os_show_hex_address
                           A  1408    
0012D7 E5                  A  1409    				push hl							0012D8 21 99 53 00         A  1410    				ld hl,output_line
0012DC ED53 3B 53 00       A  1411    				ld (hex_address),de
0012E1 3A 3D 53 00         A  1412    				ld a,(hex_address+2)
0012E5 CD 4F 10 00         A  1413    				call hexbyte_to_ascii
0012E9 18 10               A  1414    				jr shw_nt
                           A  1415    				
                           A  1416    
0012EB                     A  1417    os_show_hex_byte
                           A  1418    
0012EB E5                  A  1419    				push hl							0012EC 21 99 53 00         A  1420    				ld hl,output_line
0012F0 CD 4F 10 00         A  1421    				call hexbyte_to_ascii
0012F4 18 09               A  1422    				jr shb_nt
                           A  1423    
                           A  1424    
                           A  1425    
0012F6                     A  1426    os_show_hex_word
                           A  1427    
0012F6 E5                  A  1428    				push hl							0012F7 21 99 53 00         A  1429    				ld hl,output_line
0012FB CD 74 10 00         A  1430    shw_nt			call hexword_to_ascii
0012FF 3600                A  1431    shb_nt			ld (hl),0
001301 E1                  A  1432    				pop hl
                           A  1433    
                           A  1434    	
                           A  1435    
001302                     A  1436    os_print_output_line
                           A  1437    
001302 E5                  A  1438    				push hl
001303 21 99 53 00         A  1439    				ld hl,output_line
001307 CD 0C 0F 00         A  1440    cproline		call os_print_string
00130B E1                  A  1441    				pop hl
00130C C9                  A  1442    				ret
                           A  1443    
                           A  1444    
                           A  1445    
00130D                     A  1446    os_print_output_line_skip_zeroes
                           A  1447    
00130D E5                  A  1448    				push hl
00130E 21 99 53 00         A  1449    				ld hl,output_line
001312 CD 2C 10 00         A  1450    				call os_skip_leading_ascii_zero
001316 18 EF               A  1451    				jr cproline
                           A  1452    				
                           A  1453    		
                           A  1454    ;----------------------------------------------
                           A  1455    
001318                     A  1456    os_store_CPU_regs
                           A  1457    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  31


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001318 F5                  A  1458    				push af
001319 32 9D 52 00         A  1459    				ld (store_a1),a					00131D 08                  A  1460    				ex af,af'
00131E 32 A7 52 00         A  1461    				ld (store_a2),a
001322 08                  A  1462    				ex af,af'
001323 ED43 9E 52 00       A  1463    				ld (store_bc1),bc		
001328 ED53 A1 52 00       A  1464    				ld (store_de1),de
00132D 22 A4 52 00         A  1465    				ld (store_hl1),hl
001331 D9                  A  1466    				exx
001332 ED43 A8 52 00       A  1467    				ld (store_bc2),bc
001337 ED53 AB 52 00       A  1468    				ld (store_de2),de
00133C 22 AE 52 00         A  1469    				ld (store_hl2),hl
001340 D9                  A  1470    				exx
001341 DD22 B1 52 00       A  1471    				ld (store_ix),ix
001346 FD22 B4 52 00       A  1472    				ld (store_iy),iy
00134B ED73 BA 52 00       A  1473    				ld (store_spl),sp
001350 ED6E                A  1474    			    ld a,MB
001352 32 BF 52 00         A  1475    				ld (store_mbase),a
                           A  1476    								
001356 C5                  A  1477    				push bc
001357 0600                A  1478    				ld b,0
001359 20 02               A  1479    				jr nz,zfstzero					00135B CBF0                A  1480    				set 6,b
                           A  1481    
00135D 30 02               A  1482    zfstzero		jr nc,cfstzero					00135F CBC0                A  1483    				set 0,b
                           A  1484    
001361 F2 67 13 00         A  1485    cfstzero		jp p,sfstzero					001365 CBF8                A  1486    				set 7,b
                           A  1487    
001367 EA 6D 13 00         A  1488    sfstzero		jp pe,pfstzero					00136B CBD0                A  1489    				set 2,b
                           A  1490    
00136D ED57                A  1491    pfstzero		ld a,i			
00136F EA 75 13 00         A  1492    				jp pe,ifstzero					001373 CBE0                A  1493    				set 4,b
                           A  1494    
001375 78                  A  1495    ifstzero		ld a,b
001376 32 C0 52 00         A  1496    				ld (store_f),a
                           A  1497    				
00137A 3E00                A  1498    				ld a,os_location/65536			00137C ED6D                A  1499    				ld MB,a							00137E 40ED73 BD 52        A  1500    				ld.sis (store_sps),sp
001383 3A BF 52 00         A  1501    				ld a,(store_mbase)				001387 ED6D                A  1502    				ld MB,a
                           A  1503    				
001389 C1                  A  1504    				pop bc
00138A F1                  A  1505    				pop af
00138B C9                  A  1506    				ret
                           A  1507    
                           A  1508    
                           A  1509    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  32


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
00138C                     A  1510    os_dont_store_registers
                           A  1511    
00138C AF                  A  1512    				xor a
00138D 32 C2 52 00         A  1513    				ld (store_registers),a			001391 C9                  A  1514    				ret
                           A  1515    	
                           A  1516    	
                           A  1517    ;----------------------------------------------
                           A  1518    
001392                     A  1519    os_new_line_cond
                           A  1520    
001392 CD C8 19 00         A  1521    				call test_quiet_mode
001396 C0                  A  1522    				ret nz
                           A  1523    
                           A  1524    	
001397                     A  1525    os_new_line
                           A  1526    
001397 E5                  A  1527    				push hl
001398 21 DF 48 00         A  1528    				ld hl,crlfx2_txt+1
00139C CD 0C 0F 00         A  1529    				call os_print_string
0013A0 E1                  A  1530    				pop hl
0013A1 C9                  A  1531    				ret
                           A  1532    				
                           A  1533    ;----------------------------------------------
                           A  1534    
0013A2                     A  1535    os_set_cursor_position
                           A  1536    				
                           A  1537    												0013A2 3A E0 50 00         A  1538    				ld a,(window_rows)				0013A6 3D                  A  1539    				dec a							0013A7 B9                  A  1540    				cp c
0013A8 38 14               A  1541    				jr c,badpos
0013AA 79                  A  1542    				ld a,c
0013AB 32 29 53 00         A  1543    				ld (cursor_y),a
                           A  1544    				
0013AF 3A E3 50 00         A  1545    				ld a,(window_columns)
0013B3 3D                  A  1546    				dec a
0013B4 B8                  A  1547    				cp b
0013B5 38 07               A  1548    				jr c,badpos
0013B7 78                  A  1549    				ld a,b
0013B8 32 2A 53 00         A  1550    				ld (cursor_x),a
0013BC AF                  A  1551    				xor a
0013BD C9                  A  1552    				ret				
                           A  1553    
0013BE 3E82                A  1554    badpos			ld a,82h
0013C0 B7                  A  1555    				or a
0013C1 C9                  A  1556    				ret
                           A  1557    
                           A  1558    
                           A  1559    					
                           A  1560    	
                           A  1561    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  33


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0013C2                     A  1562    os_get_cursor_position
                           A  1563    
0013C2 ED4B 29 53 00       A  1564    				ld bc,(cursor_pos)				0013C7 BF                  A  1565    				cp a							0013C8 C9                  A  1566    				ret
                           A  1567    
                           A  1568    
                           A  1569    ;----------------------------------------------
                           A  1570    
0013C9                     A  1571    os_show_packed_text_cond
                           A  1572    
0013C9 CD C8 19 00         A  1573    				call test_quiet_mode
0013CD C0                  A  1574    				ret nz
                           A  1575    
                           A  1576    	
0013CE                     A  1577    os_show_packed_text
                           A  1578    
                           A  1579    ; Construct sentence from internal dictionary u
                           A  1580    	
0013CE C5                  A  1581    				push bc
0013CF D5                  A  1582    				push de
0013D0 DDE5                A  1583    				push ix
0013D2 DD21 99 53 00       A  1584    				ld ix,output_line
0013D7 7E                  A  1585    readpind		ld a,(hl)
0013D8 B7                  A  1586    				or a
0013D9 20 10               A  1587    				jr nz,getword					0013DB DD2B                A  1588    				dec ix							0013DD DD7700              A  1589    				ld (ix),a						                           A  1590    			
0013E0 E5                  A  1591    				push hl
0013E1 CD 02 13 00         A  1592    				call os_print_output_line
0013E5 E1                  A  1593    				pop hl
                           A  1594    			
0013E6 DDE1                A  1595    				pop ix
0013E8 D1                  A  1596    				pop de
0013E9 C1                  A  1597    				pop bc
0013EA C9                  A  1598    				ret
                           A  1599    				
0013EB 11 E7 48 00         A  1600    getword			ld de,dictionary-1
0013EF 0E00                A  1601    				ld c,0
0013F1 13                  A  1602    dictloop		inc de
0013F2 1A                  A  1603    				ld a,(de)
0013F3 B7                  A  1604    				or a							0013F4 28 04               A  1605    				jr z,faword
0013F6 CB7F                A  1606    				bit 7,a							0013F8 28 F7               A  1607    				jr z,dictloop	
                           A  1608    			
0013FA 0C                  A  1609    faword			inc c							0013FB 79                  A  1610    				ld a,c
0013FC BE                  A  1611    				cp (hl)
0013FD 20 F2               A  1612    				jr nz,dictloop
0013FF 13                  A  1613    copytol			inc de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  34


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001400 1A                  A  1614    				ld a,(de)
001401 B7                  A  1615    				or a
001402 28 0B               A  1616    				jr z,eoword						001404 CB7F                A  1617    				bit 7,a
001406 20 07               A  1618    				jr nz,eoword
001408 DD7700              A  1619    				ld (ix),a						00140B DD23                A  1620    				inc ix
00140D 18 F0               A  1621    				jr copytol
00140F DD360020            A  1622    eoword			ld (ix),32						001413 DD23                A  1623    				inc ix
001415 23                  A  1624    				inc hl
001416 18 BF               A  1625    				jr readpind
                           A  1626    
                           A  1627    
                           A  1628    		
                           A  1629    ;--------- Mouse functions --------------------
                           A  1630    
001418                     A  1631    os_set_mouse_window
                           A  1632    
                           A  1633    ; Set: HL/DE = window size mouse pointer is to 
                           A  1634    	
001418 22 90 54 00         A  1635    				ld (mouse_window_size_x),hl	 
00141C ED53 93 54 00       A  1636    				ld (mouse_window_size_y),de
001421 21000000            A  1637    				ld hl,0
001425 22 96 54 00         A  1638    				ld (mouse_abs_x),hl
001429 22 99 54 00         A  1639    				ld (mouse_abs_y),hl
00142D 3E01                A  1640    				ld a,1
00142F 32 A8 54 00         A  1641    				ld (mouse_new_window),a
001433 AF                  A  1642    				xor a
001434 C9                  A  1643    				ret
                           A  1644    				
                           A  1645    			
001435                     A  1646    os_get_mouse_motion
                           A  1647    			
                           A  1648    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1649    ;          ZF = Not set: Mouse driver not initi
                           A  1650    			
001435 3A 93 52 00         A  1651    				ld a,(devices_connected)
001439 E602                A  1652    				and 2
00143B EE02                A  1653    				xor 2
00143D C0                  A  1654    				ret nz
00143E AF                  A  1655    ms_reread		xor a
00143F 32 8F 54 00         A  1656    				ld (mouse_updated),a
001443 2A 88 54 00         A  1657    				ld hl,(mouse_disp_x)			001447 ED5B 8B 54 00       A  1658    				ld de,(mouse_disp_y)
00144C 3A 8F 54 00         A  1659    				ld a,(mouse_updated)			001450 B7                  A  1660    				or a
001451 20 EB               A  1661    				jr nz,ms_reread
001453 AF                  A  1662    mouse_end		xor a
001454 3A 87 54 00         A  1663    				ld a,(mouse_buttons)
001458 C9                  A  1664    				ret
                           A  1665    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  35


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  1666    			
001459                     A  1667    os_get_mouse_position
                           A  1668    
                           A  1669    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1670    ;          ZF = Not set: Mouse driver not initi
                           A  1671    				
001459 CD 35 14 00         A  1672    				call os_get_mouse_motion
00145D C0                  A  1673    				ret nz
00145E 22 A2 54 00         A  1674    				ld (mouse_disp_x_buffer),hl
001462 ED53 A5 54 00       A  1675    				ld (mouse_disp_y_buffer),de
001467 3A A8 54 00         A  1676    				ld a,(mouse_new_window)
00146B B7                  A  1677    				or a
00146C 20 6C               A  1678    				jr nz,ms_nmw
                           A  1679    
00146E ED5B 9C 54 00       A  1680    				ld de,(mouse_disp_x_old)
001473 AF                  A  1681    				xor a
001474 ED52                A  1682    				sbc hl,de
001476 EB                  A  1683    				ex de,hl
001477 2A 96 54 00         A  1684    				ld hl,(mouse_abs_x)
00147B 19                  A  1685    				add hl,de
00147C E5                  A  1686    				push hl
00147D C1                  A  1687    				pop bc
00147E DD210000 80         A  1688    				ld ix,800000h					001483 DD09                A  1689    				add ix,bc
001485 30 06               A  1690    				jr nc,ms_x_ok1
001487 01000000            A  1691    				ld bc,0
00148B 18 10               A  1692    				jr ms_x_ok2
00148D ED5B 90 54 00       A  1693    ms_x_ok1		ld de,(mouse_window_size_x)
001492 AF                  A  1694    				xor a
001493 ED52                A  1695    				sbc hl,de
001495 38 06               A  1696    				jr c,ms_x_ok2
001497 ED4B 90 54 00       A  1697    				ld bc,(mouse_window_size_x)		00149C 0B                  A  1698    				dec bc
00149D ED43 96 54 00       A  1699    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1700    					
0014A2 2A A5 54 00         A  1701    				ld hl,(mouse_disp_y_buffer)
0014A6 ED5B 9F 54 00       A  1702    				ld de,(mouse_disp_y_old)
0014AB AF                  A  1703    				xor a
0014AC ED52                A  1704    				sbc hl,de
0014AE EB                  A  1705    				ex de,hl
0014AF 2A 99 54 00         A  1706    				ld hl,(mouse_abs_y)
0014B3 19                  A  1707    				add hl,de
0014B4 E5                  A  1708    				push hl
0014B5 C1                  A  1709    				pop bc
0014B6 DD210000 80         A  1710    				ld ix,800000h					0014BB DD09                A  1711    				add ix,bc
0014BD 30 06               A  1712    				jr nc,ms_y_ok1
0014BF 01000000            A  1713    				ld bc,0
0014C3 18 10               A  1714    				jr ms_y_ok2
0014C5 ED5B 93 54 00       A  1715    ms_y_ok1		ld de,(mouse_window_size_y)
0014CA AF                  A  1716    				xor a
0014CB ED52                A  1717    				sbc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  36


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0014CD 38 06               A  1718    				jr c,ms_y_ok2
0014CF ED4B 93 54 00       A  1719    				ld bc,(mouse_window_size_y)		0014D4 0B                  A  1720    				dec bc
0014D5 ED43 99 54 00       A  1721    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1722    
                           A  1723    				
0014DA 2A A2 54 00         A  1724    ms_nmw			ld hl,(mouse_disp_x_buffer)
0014DE 22 9C 54 00         A  1725    				ld (mouse_disp_x_old),hl
0014E2 2A A5 54 00         A  1726    				ld hl,(mouse_disp_y_buffer)
0014E6 22 9F 54 00         A  1727    				ld (mouse_disp_y_old),hl
                           A  1728    				
0014EA 2A 96 54 00         A  1729    				ld hl,(mouse_abs_x)
0014EE ED5B 99 54 00       A  1730    				ld de,(mouse_abs_y)
                           A  1731    				
0014F3 AF                  A  1732    				xor a
0014F4 32 A8 54 00         A  1733    				ld (mouse_new_window),a
0014F8 3A 87 54 00         A  1734    				ld a,(mouse_buttons)
0014FC C9                  A  1735    				ret
                           A  1736    				
                           A  1737    	
                           A  1738    ;==============================================
                           A  1739    ;----- General Subroutines --------------------
                           A  1740    ;==============================================
                           A  1741    
                           A  1742    ; .--------------.
                           A  1743    ; ! CRC Checksum !
                           A  1744    ; '--------------'
                           A  1745    
                           A  1746    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1747    
0014FD                     A  1748    crc_checksum
                           A  1749    
0014FD 21FFFF00            A  1750    				ld hl,0ffffh		
001501 1A                  A  1751    crcloop			ld a,(de)			
001502 AC                  A  1752    				xor h			
001503 67                  A  1753    				ld h,a			
001504 0608                A  1754    				ld b,8
001506 4029                A  1755    crcbyte			add.sis hl,hl					001508 30 08               A  1756    				jr nc,crcnext
00150A 7C                  A  1757    				ld a,h
00150B EE10                A  1758    				xor 10h
00150D 67                  A  1759    				ld h,a
00150E 7D                  A  1760    				ld a,l
00150F EE21                A  1761    				xor 21h
001511 6F                  A  1762    				ld l,a
001512 10 F2               A  1763    crcnext			djnz crcbyte
001514 13                  A  1764    				inc de
001515 0D                  A  1765    				dec c
001516 20 E9               A  1766    				jr nz,crcloop
001518 C9                  A  1767    				ret
                           A  1768    
                           A  1769    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  37


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  1770    ;----------------------------------------------
                           A  1771    
001519                     A  1772    os_get_key_mod_flags
                           A  1773    
001519 3A 7C 54 00         A  1774    				ld a,(key_mod_flags)
00151D BF                  A  1775    				cp a							00151E C9                  A  1776    				ret
                           A  1777    
                           A  1778    ;----------------------------------------------
                           A  1779    
00151F                     A  1780    os_get_display_size
                           A  1781    			
00151F ED4B E0 50 00       A  1782    				ld bc,(display_parameters)
001524 BF                  A  1783    				cp a
001525 C9                  A  1784    				ret
                           A  1785    
                           A  1786    ;----------------------------------------------
                           A  1787    
001526                     A  1788    os_bchl_memfill
                           A  1789    
                           A  1790    ; fill memory from xHL with A. Count in xBC.
                           A  1791    		
001526 77                  A  1792    mf_loop			ld (hl),a
001527 EDA1                A  1793    				cpi								001529 EA 26 15 00         A  1794    				jp pe,mf_loop
00152D C9                  A  1795    				ret
                           A  1796    	
                           A  1797    ;----------------------------------------------
                           A  1798    
00152E 7B                  A  1799    ext_set_pen		ld a,e
                           A  1800    
00152F 32 B9 50 00         A  1801    os_set_pen		ld (current_pen),a
001533 BF                  A  1802    				cp a							001534 C9                  A  1803    				ret
                           A  1804    
                           A  1805    ;----------------------------------------------
                           A  1806    	
001535 3A B9 50 00         A  1807    os_get_pen		ld a,(current_pen)
001539 BF                  A  1808    				cp a							00153A C9                  A  1809    				ret	
                           A  1810    
                           A  1811    ;----------------------------------------------
                           A  1812    
00153B                     A  1813    ext_background_colours
                           A  1814    				
00153B CC 4D 15 00         A  1815    				call z,mbase_hl
00153F C3 7F 2F 00         A  1816    				jp hswc_set_ui_colours
                           A  1817    				
                           A  1818    				
                           A  1819    ;----------------------------------------------
                           A  1820    
001543                     A  1821    os_get_xde_msb	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  38


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  1822    			
001543 ED53 41 53 00       A  1823    				ld (xrr_temp),de				001548 3A 43 53 00         A  1824    				ld a,(xrr_temp+2)
00154C C9                  A  1825    				ret
                           A  1826    
                           A  1827    ;----------------------------------------------
                           A  1828    
00154D F5                  A  1829    mbase_hl		push af
00154E 22 41 53 00         A  1830    				ld (xrr_temp),hl				001552 ED6E                A  1831    				ld a,MB
001554 32 43 53 00         A  1832    				ld (xrr_temp+2),a
001558 2A 41 53 00         A  1833    				ld hl,(xrr_temp)
00155C F1                  A  1834    				pop af
00155D C9                  A  1835    				ret
                           A  1836    				
00155E F5                  A  1837    mbase_de		push af
00155F ED53 41 53 00       A  1838    				ld (xrr_temp),de				001564 ED6E                A  1839    				ld a,MB
001566 32 43 53 00         A  1840    				ld (xrr_temp+2),a
00156A ED5B 41 53 00       A  1841    				ld de,(xrr_temp)
00156F F1                  A  1842    				pop af
001570 C9                  A  1843    				ret
                           A  1844    
001571 F5                  A  1845    mbase_ix		push af
001572 DD22 41 53 00       A  1846    				ld (xrr_temp),ix				001577 ED6E                A  1847    				ld a,MB
001579 32 43 53 00         A  1848    				ld (xrr_temp+2),a
00157D DD2A 41 53 00       A  1849    				ld ix,(xrr_temp)
001582 F1                  A  1850    				pop af
001583 C9                  A  1851    				ret
                           A  1852    							
                           A  1853    ;----------------------------------------------
                           A  1854    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1855    ;----------------------------------------------
                           A  1856    
001584                     A  1857    unpack_rle
                           A  1858    
                           A  1859    ;set xHL = source address of packed file
                           A  1860    ;set xDE = destination address for unpacked dat
                           A  1861    ;set xBC = length of packed file
                           A  1862    
001584 E5                  A  1863    			push hl	
001585 DDE1                A  1864    			pop ix
001587 0B                  A  1865    			dec bc								001588 23                  A  1866    			inc hl
001589 DD7E00              A  1867    unp_gtok	ld a,(ix)							00158C BE                  A  1868    unp_next	cp (hl)								00158D 28 07               A  1869    			jr z,unp_brun						00158F EDA0                A  1870    			ldi									001591 EA 8C 15 00         A  1871    			jp pe,unp_next						001595 C9                  A  1872    			ret
                           A  1873    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  39


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001596 C5                  A  1874    unp_brun	push bc								001597 23                  A  1875    			inc hl		
001598 7E                  A  1876    			ld a,(hl)							001599 23                  A  1877    			inc hl		
00159A 46                  A  1878    			ld b,(hl)							00159B 23                  A  1879    			inc hl
                           A  1880    	
00159C 12                  A  1881    unp_rllp	ld (de),a							00159D 13                  A  1882    			inc de			
00159E 10 FC               A  1883    			djnz unp_rllp
                           A  1884    	
0015A0 C1                  A  1885    			pop bc	
0015A1 0B                  A  1886    			dec bc								0015A2 0B                  A  1887    			dec bc
0015A3 0B                  A  1888    			dec bc
0015A4 E5                  A  1889    			push hl								0015A5 21000000            A  1890    			ld hl,0
0015A9 B7                  A  1891    			or a
0015AA ED4A                A  1892    			adc hl,bc
0015AC E1                  A  1893    			pop hl
0015AD 20 DA               A  1894    			jr nz,unp_gtok
0015AF C9                  A  1895    			ret	
                           A  1896    	
                           A  1897    ;----------------------------------------------
                           A  1898    ; Commonly called error messages - gets message
                           A  1899    ;----------------------------------------------
                           A  1900    
                           A  1901    
0015B0 3E0D                A  1902    os_no_fn_error		ld a,0dh
0015B2 B7                  A  1903    					or a
0015B3 C9                  A  1904    					ret
                           A  1905    			
0015B4 3E15                A  1906    os_fn_too_long		ld a,15h
0015B6 B7                  A  1907    					or a
0015B7 C9                  A  1908    					ret
                           A  1909    				
0015B8 3E16                A  1910    os_no_start_addr	ld a,16h
0015BA B7                  A  1911    					or a
0015BB C9                  A  1912    					ret
                           A  1913    			
0015BC 3E17                A  1914    os_no_filesize		ld a,17h
0015BE B7                  A  1915    					or a
0015BF C9                  A  1916    					ret
                           A  1917    			
0015C0 3E18                A  1918    os_abort_save		ld a,18h
0015C2 B7                  A  1919    					or a
0015C3 C9                  A  1920    					ret
                           A  1921    			
0015C4 3E1C                A  1922    os_no_e_addr_error	ld a,1ch
0015C6 B7                  A  1923    					or a
0015C7 C9                  A  1924    					ret
                           A  1925    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  40


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0015C8 3E1D                A  1926    os_no_d_addr_error	ld a,1dh
0015CA B7                  A  1927    					or a
0015CB C9                  A  1928    					ret
                           A  1929    				
0015CC 3E1E                A  1930    os_range_error		ld a,1eh
0015CE B7                  A  1931    					or a
0015CF C9                  A  1932    					ret
                           A  1933    			
0015D0 3E1F                A  1934    os_no_args_error	ld a,1fh
0015D2 B7                  A  1935    					or a
0015D3 C9                  A  1936    					ret	
                           A  1937    
                           A  1938    ;----------------------------------------------
                           A  1939    
                           A  1940    ; Set xHL to address of zero terminated filenam
                           A  1941    ; RETURNS:	C:xDE  = File length
                           A  1942    ;    		HL     = Start cluster of file
                           A  1943    
0015D4 CC 4D 15 00         A  1944    ext_find_file	call z,mbase_hl
                           A  1945    
0015D8 CD D0 44 00         A  1946    os_find_file	call fs_hl_to_filename
0015DC CD 71 3C 00         A  1947    				call fs_open_file_command		0015E0 38 02               A  1948    				jr c,os_fferr					0015E2 B7                  A  1949    				or a							0015E3 C9                  A  1950    				ret 		
                           A  1951    								
0015E4 47                  A  1952    os_fferr		ld b,a							0015E5 AF                  A  1953    				xor a			
0015E6 4F                  A  1954    				ld c,a
0015E7 0C                  A  1955    				inc c							0015E8 C9                  A  1956    				ret	
                           A  1957    
                           A  1958    ;----------------------------------------------
                           A  1959    
0015E9                     A  1960    os_set_load_length
                           A  1961    
0015E9 ED53 27 47 00       A  1962    				ld (fs_file_transfer_length),de
0015EE BF                  A  1963    				cp a							0015EF C9                  A  1964    				ret
                           A  1965    				
                           A  1966    ;----------------------------------------------
                           A  1967    
0015F0                     A  1968    ext_set_file_pointer
                           A  1969    
0015F0 79                  A  1970    				ld a,c
                           A  1971    				
0015F1                     A  1972    os_set_file_pointer
                           A  1973    
                           A  1974    ; Moves the 'start of file' pointer allowing ra
                           A  1975    ; Note: File pointer is reset by opening a file
                           A  1976    ; by normal read function.
                           A  1977    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  41


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0015F1 ED53 1B 47 00       A  1978    				ld (fs_file_pointer),de			0015F6 32 1E 47 00         A  1979    				ld (fs_file_pointer+3),a
0015FA F5                  A  1980    				push af
0015FB AF                  A  1981    				xor a
0015FC 32 4D 47 00         A  1982    				ld (fs_filepointer_valid),a		001600 F1                  A  1983    				pop af
001601 BF                  A  1984    				cp a							001602 C9                  A  1985    				ret
                           A  1986    				
                           A  1987    ;----------------------------------------------
                           A  1988    
                           A  1989    ; set xHL = load address 
                           A  1990    ; (Before calling this routine, call os_find_fi
                           A  1991    
001603                     A  1992    ext_read_bytes_from_file
                           A  1993    
001603 CC 4D 15 00         A  1994    				call z,mbase_hl					                           A  1995    				
001607                     A  1996    os_read_bytes_from_file
                           A  1997    
001607 22 30 47 00         A  1998    				ld (fs_ez80_address),hl			00160B CD BC 3C 00         A  1999    				call fs_read_data_command
00160F 38 D3               A  2000    				jr c,os_fferr
001611 B7                  A  2001    				or a
001612 C9                  A  2002    				ret
                           A  2003    
                           A  2004    ;----------------------------------------------
                           A  2005    
                           A  2006    ; Before calling, set xHL = address of zero ter
                           A  2007    
001613 CC 4D 15 00         A  2008    ext_create_file	call z,mbase_hl
                           A  2009    
001617 CD D0 44 00         A  2010    os_create_file	call fs_hl_to_filename
00161B CD 72 3F 00         A  2011    				call fs_create_file_command		00161F DA E4 15 00         A  2012    				jp c,os_fferr					001623 B7                  A  2013    				or a
001624 C9                  A  2014    				ret
                           A  2015    
                           A  2016    ;----------------------------------------------
                           A  2017    
001625                     A  2018    ext_write_bytes_to_file
                           A  2019    
001625 CC 4D 15 00         A  2020    				call z,mbase_hl
001629 CC 71 15 00         A  2021    				call z,mbase_ix
                           A  2022    
00162D                     A  2023    os_write_bytes_to_file
                           A  2024    
                           A  2025    ; Before calling, set..
                           A  2026    
                           A  2027    ; xIX   = address to save data from
                           A  2028    ; xDE   = number of bytes to save
                           A  2029    ; xHL   = address of null-terminated ascii name
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  42


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2030    
                           A  2031    ; On return:
                           A  2032    
                           A  2033    ; If zero flag NOT set, there was an error.
                           A  2034    ; If   A = $00, b = hardware error code
                           A  2035    ; Else A = File system error code
                           A  2036    
                           A  2037    ; NOTE:
                           A  2038    ; Will return 'file not found' if the file has 
                           A  2039    
00162D ED53 27 47 00       A  2040    				ld (fs_file_transfer_length),de
001632 DD22 30 47 00       A  2041    				ld (fs_ez80_address),ix	 	
001637 CD D0 44 00         A  2042    				call fs_hl_to_filename
00163B CD A4 3F 00         A  2043    				call fs_write_bytes_to_file_com
00163F DA E4 15 00         A  2044    				jp c,os_fferr
001643 B7                  A  2045    				or a
001644 C9                  A  2046    				ret
                           A  2047    		
                           A  2048    		
                           A  2049    ;----------------------------------------------
                           A  2050    	
                           A  2051    
001645                     A  2052    os_check_volume_format
                           A  2053    
001645 CD CF 3A 00         A  2054    				call fs_check_disk_format
001649 DA E4 15 00         A  2055    os_rffsc		jp c,os_fferr
00164D B7                  A  2056    				or a
00164E C9                  A  2057    				ret
                           A  2058    
                           A  2059    ;----------------------------------------------
                           A  2060    
                           A  2061    
00164F 7B                  A  2062    ext_format		ld a,e
001650 CC 4D 15 00         A  2063    				call z,mbase_hl					                           A  2064    
001654 E5                  A  2065    os_format		push hl							001655 CD 5B 1A 00         A  2066    				call dev_to_driver_lookup
001659 E1                  A  2067    				pop hl
00165A 38 04               A  2068    				jr c,sdevok
00165C 3ED0                A  2069    				ld a,0d0h						00165E B7                  A  2070    				or a
00165F C9                  A  2071    				ret
                           A  2072    
001660 F5                  A  2073    sdevok			push af				
001661 11 F7 46 00         A  2074    				ld de,fs_sought_filename
001665 CD DF 45 00         A  2075    				call fs_clear_filename
001669 060B                A  2076    				ld b,11
00166B CD E5 11 00         A  2077    				call os_copy_ascii_run
00166F F1                  A  2078    				pop af
                           A  2079    				
001670 21 4F 51 00         A  2080    				ld hl,current_driver
001674 46                  A  2081    				ld b,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  43


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001675 77                  A  2082    				ld (hl),a
001676 C5                  A  2083    				push bc
001677 E5                  A  2084    				push hl
001678 CD 44 39 00         A  2085    				call fs_format_device_command
00167C E1                  A  2086    				pop hl
00167D C1                  A  2087    				pop bc
00167E 70                  A  2088    				ld (hl),b
00167F 18 C8               A  2089    				jr os_rffsc
                           A  2090    
                           A  2091    
                           A  2092    ;----------------------------------------------
                           A  2093    
                           A  2094    
001681 CC 4D 15 00         A  2095    ext_make_dir	call z,mbase_hl					                           A  2096    
001685 CD D0 44 00         A  2097    os_make_dir		call fs_hl_to_filename
001689 CD EA 3D 00         A  2098    				call fs_make_dir_command
00168D 18 BA               A  2099    				jr os_rffsc
                           A  2100    
                           A  2101    
                           A  2102    ;----------------------------------------------
                           A  2103    
                           A  2104    
00168F CC 4D 15 00         A  2105    ext_change_dir	call z,mbase_hl					                           A  2106    
001693 CD D0 44 00         A  2107    os_change_dir	call fs_hl_to_filename
001697 CD 1D 3C 00         A  2108    				call fs_change_dir_command
00169B 18 AC               A  2109    				jr os_rffsc
                           A  2110    				
                           A  2111    	
                           A  2112    ;----------------------------------------------
                           A  2113    	
                           A  2114    	
00169D CD 4E 3C 00         A  2115    os_parent_dir	call fs_parent_dir_command
0016A1 18 A6               A  2116    				jr os_rffsc
                           A  2117    				
                           A  2118    
                           A  2119    ;----------------------------------------------
                           A  2120    
                           A  2121    	
0016A3 CD 42 3C 00         A  2122    os_root_dir		call fs_goto_root_dir_command
0016A7 18 A0               A  2123    				jr os_rffsc
                           A  2124    
                           A  2125    
                           A  2126    ;----------------------------------------------
                           A  2127    
                           A  2128    
0016A9 CC 4D 15 00         A  2129    ext_erase_file	call z,mbase_hl					                           A  2130    
0016AD CD D0 44 00         A  2131    os_erase_file	call fs_hl_to_filename
0016B1 CD 33 41 00         A  2132    				call fs_erase_file_command
0016B5 18 92               A  2133    				jr os_rffsc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  44


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2134    	
                           A  2135    
                           A  2136    ;----------------------------------------------
                           A  2137    
                           A  2138    
0016B7                     A  2139    os_goto_first_dir_entry	
                           A  2140    
0016B7 CD 8E 41 00         A  2141    				call fs_goto_first_dir_entry
0016BB 18 8C               A  2142    				jr os_rffsc
                           A  2143    
                           A  2144    
                           A  2145    ;----------------------------------------------
                           A  2146    
                           A  2147    
0016BD                     A  2148    os_get_dir_entry		
                           A  2149    
0016BD CD A5 41 00         A  2150    				call fs_get_dir_entry	
0016C1 18 86               A  2151    				jr os_rffsc
                           A  2152    
                           A  2153    
                           A  2154    ;----------------------------------------------
                           A  2155    
                           A  2156    
0016C3                     A  2157    os_goto_next_dir_entry	
                           A  2158    	
0016C3 CD 32 42 00         A  2159    				call fs_goto_next_dir_entry	
0016C7 18 80               A  2160    				jr os_rffsc
                           A  2161    
                           A  2162    
                           A  2163    ;----------------------------------------------
                           A  2164    
                           A  2165    
0016C9                     A  2166    os_get_current_dir_name
                           A  2167    
0016C9 CD 96 45 00         A  2168    				call fs_get_current_dir_name
0016CD C3 49 16 00         A  2169    				jr os_rffsc
                           A  2170    				
                           A  2171    
                           A  2172    ;----------------------------------------------
                           A  2173    
                           A  2174    
0016D1 CC 4D 15 00         A  2175    ext_rename_file	call z,mbase_hl
0016D5 CC 5E 15 00         A  2176    				call z,mbase_de
                           A  2177    
0016D9 D5                  A  2178    os_rename_file	push de
0016DA CD CA 44 00         A  2179    				call fs_hl_to_alt_filename		0016DE E1                  A  2180    				pop hl				
0016DF CD D0 44 00         A  2181    				call fs_hl_to_filename	
0016E3 CD 4A 41 00         A  2182    				call fs_rename_command
0016E7 C3 49 16 00         A  2183    				jr os_rffsc
                           A  2184    				
                           A  2185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  45


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2186    ;----------------------------------------------
                           A  2187    
                           A  2188    
0016EB CC 4D 15 00         A  2189    ext_delete_dir	call z,mbase_hl					                           A  2190    
0016EF CD D0 44 00         A  2191    os_delete_dir	call fs_hl_to_filename
0016F3 CD C3 3E 00         A  2192    				call fs_delete_dir_command
0016F7 C3 49 16 00         A  2193    				jp os_rffsc
                           A  2194    	
                           A  2195    	
                           A  2196    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2197    
                           A  2198    
0016FB                     A  2199    ext_read_sector
0016FB CD 46 17 00         A  2200    				call ext_sector_access_preamble
0016FF C0                  A  2201    				ret nz
001700 32 4F 51 00         A  2202    				ld (current_driver),a
001704 CD 6D 46 00         A  2203    				call fs_read_sector
001708 20 11               A  2204    				jr nz,sect_done
00170A 38 0F               A  2205    				jr c,sect_done
00170C 21 8C 57 00         A  2206    				ld hl,sector_buffer
001710 ED5B 5F 51 00       A  2207    				ld de,(sector_rd_wr_addr)
001715 01000200            A  2208    				ld bc,512
001719 EDB0                A  2209    				ldir			
00171B F5                  A  2210    sect_done		push af
00171C 3A 85 52 00         A  2211    				ld a,(sys_driver_backup)		001720 32 4F 51 00         A  2212    				ld (current_driver),a
001724 F1                  A  2213    				pop af
001725 C3 49 16 00         A  2214    				jp os_rffsc
                           A  2215    				
                           A  2216    
001729                     A  2217    ext_write_sector
                           A  2218    			
001729 CD 46 17 00         A  2219    				call ext_sector_access_preamble
00172D C0                  A  2220    				ret nz
00172E 32 4F 51 00         A  2221    				ld (current_driver),a
001732 2A 5F 51 00         A  2222    				ld hl,(sector_rd_wr_addr)
001736 11 8C 57 00         A  2223    				ld de,sector_buffer
00173A 01000200            A  2224    				ld bc,512
00173E EDB0                A  2225    				ldir			
001740 CD 85 46 00         A  2226    				call fs_write_sector
001744 18 D5               A  2227    				jr sect_done
                           A  2228    
                           A  2229    
001746                     A  2230    ext_sector_access_preamble
                           A  2231    
001746 CC 4D 15 00         A  2232    				call z,mbase_hl
00174A 22 5F 51 00         A  2233    				ld (sector_rd_wr_addr),hl
                           A  2234    				
00174E 78                  A  2235    				ld a,b
00174F F5                  A  2236    				push af							001750 DD21 25 53 00       A  2237    				ld ix,sector_lba0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  46


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001755 DD1F00              A  2238    				ld (ix),de						001758 DD7103              A  2239    				ld (ix+3),c
00175B CD 5B 1A 00         A  2240    				call dev_to_driver_lookup		00175F E5                  A  2241    				push hl
001760 DDE1                A  2242    				pop ix
001762 2A 25 53 00         A  2243    				ld hl,(sector_lba0)				001766 3A 28 53 00         A  2244    				ld a,(sector_lba3)				00176A DD0701              A  2245    				ld bc,(ix+1)					00176D B7                  A  2246    				or a							00176E ED42                A  2247    				sbc hl,bc
001770 DD9E04              A  2248    				sbc a,(ix+4)
001773 38 05               A  2249    				jr c,range_ok
001775 F1                  A  2250    				pop af
001776 3ED5                A  2251    				ld a,0d5h						001778 B7                  A  2252    				or a							001779 C9                  A  2253    				ret
                           A  2254    	
00177A 3A 4F 51 00         A  2255    range_ok		ld a,(current_driver)
00177E 32 85 52 00         A  2256    				ld (sys_driver_backup),a
001782 F1                  A  2257    				pop af							001783 CD 5B 1A 00         A  2258    				call dev_to_driver_lookup
001787 30 02               A  2259    				jr nc,bad_dev
001789 BF                  A  2260    os_null			cp a							00178A C9                  A  2261    				ret
                           A  2262    					
00178B 3ED0                A  2263    bad_dev			ld a,0d0h						00178D B7                  A  2264    				or a							00178E C9                  A  2265    				ret	
                           A  2266    			
                           A  2267    
                           A  2268    ;----------------------------------------------
                           A  2269    
                           A  2270    
00178F                     A  2271    os_get_device_info
                           A  2272    
00178F 21 00 52 00         A  2273    				ld hl,host_device_hardware_info
001793 11 62 51 00         A  2274    				ld de,driver_table
001797 3A 50 51 00         A  2275    				ld a,(device_count)
00179B 47                  A  2276    				ld b,a
00179C 3A 4F 51 00         A  2277    				ld a,(current_driver)
0017A0 BF                  A  2278    				cp a
0017A1 C9                  A  2279    				ret
                           A  2280    
                           A  2281    
                           A  2282    
                           A  2283    
0017A2                     A  2284    os_get_volume_info
                           A  2285    
0017A2 21 80 51 00         A  2286    				ld hl,volume_mount_list	
0017A6 3A 51 51 00         A  2287    				ld a,(volume_count)
0017AA 47                  A  2288    				ld b,a
0017AB 3A 4E 51 00         A  2289    				ld a,(current_volume)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  47


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0017AF C9                  A  2290    				ret
                           A  2291    				
                           A  2292    		
                           A  2293    ;----------------------------------------------
                           A  2294    
                           A  2295    
0017B0                     A  2296    ext_serial_get_header
                           A  2297    
0017B0 CC 4D 15 00         A  2298    				call z,mbase_hl
0017B4 7B                  A  2299    				ld a,e
0017B5 CD D7 36 00         A  2300    				call serial_get_header
0017B9 C9                  A  2301    				ret
                           A  2302    				
                           A  2303    				
0017BA                     A  2304    ext_serial_receive_file
                           A  2305    				
0017BA CC 4D 15 00         A  2306    				call z,mbase_hl
0017BE CD 72 37 00         A  2307    				call serial_receive_file
0017C2 C9                  A  2308    				ret
                           A  2309    				
                           A  2310    	
0017C3                     A  2311    ext_serial_send_file
                           A  2312    
0017C3 CC 4D 15 00         A  2313    				call z,mbase_hl
0017C7 CC 71 15 00         A  2314    				call z,mbase_ix				
0017CB CD 3B 38 00         A  2315    				call serial_send_file
0017CF C9                  A  2316    				ret
                           A  2317    
                           A  2318    
0017D0                     A  2319    ext_serial_tx
0017D0 7B                  A  2320    				ld a,e
0017D1 CD 48 2E 00         A  2321    				call send_serial_byte
0017D5 AF                  A  2322    				xor a							0017D6 C9                  A  2323    				ret
                           A  2324    
                           A  2325    
0017D7                     A  2326    ext_serial_rx
0017D7 7B                  A  2327    				ld a,e
0017D8 32 2A 51 00         A  2328    				ld (serial_timeout),a
0017DC CD 0D 2E 00         A  2329    				call receive_serial_byte
0017E0 C9                  A  2330    				ret
                           A  2331    				
                           A  2332    
                           A  2333    ;----------------------------------------------
                           A  2334    
0017E1                     A  2335    ext_mount_volumes
                           A  2336    
0017E1 7B                  A  2337    				ld a,e
                           A  2338    
0017E2                     A  2339    os_mount_volumes
                           A  2340    				
0017E2 32 86 52 00         A  2341    				ld (os_quiet_mode),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  48


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2342    				
0017E6 21 66 48 00         A  2343    				ld hl,storage_txt
0017EA CD 07 0F 00         A  2344    				call os_print_string_cond
0017EE CD 16 18 00         A  2345    				call mount_go
0017F2 AF                  A  2346    				xor a
0017F3 32 4E 51 00         A  2347    tvloop			ld (current_volume),a
0017F7 CD 71 1A 00         A  2348    				call os_change_volume			0017FB C8                  A  2349    				ret z							0017FC 3A 4E 51 00         A  2350    				ld a,(current_volume)			001800 3C                  A  2351    				inc a
001801 FE08                A  2352    				cp max_volumes
001803 20 EE               A  2353    				jr nz,tvloop
001805 3A 50 51 00         A  2354    				ld a,(device_count)
001809 B7                  A  2355    				or a
00180A 20 08               A  2356    				jr nz,mfsdevs
00180C 21 48 4F 00         A  2357    				ld hl,none_found_msg
001810 CD C9 13 00         A  2358    				call os_show_packed_text_cond
001814 AF                  A  2359    mfsdevs			xor a
001815 C9                  A  2360    				ret
                           A  2361    
                           A  2362    
                           A  2363    
001816 21 80 51 00         A  2364    mount_go		ld hl,volume_mount_list			00181A 01800000            A  2365    				ld bc,max_volumes*16
00181E AF                  A  2366    clrdl_lp		xor a
00181F CD 26 15 00         A  2367    				call os_bchl_memfill
                           A  2368    								
001823 21 68 51 00         A  2369    				ld hl,volume_dir_clusters		001827 01180000            A  2370    				ld bc,max_volumes*3		
00182B AF                  A  2371    				xor a	
00182C CD 26 15 00         A  2372    				call os_bchl_memfill	
                           A  2373    			
001830 11 00 52 00         A  2374    				ld de,host_device_hardware_info
001834 ED53 80 52 00       A  2375    				ld (dhwn_temp_pointer),de
                           A  2376    				
001839 FD21 80 51 00       A  2377    				ld iy,volume_mount_list
00183E AF                  A  2378    				xor a
00183F 32 51 51 00         A  2379    				ld (volume_count),a
001843 32 50 51 00         A  2380    				ld (device_count),a
001847 32 4F 51 00         A  2381    mnt_loop		ld (current_driver),a			00184B CD E7 19 00         A  2382    				call locate_driver_base			00184F 21000000            A  2383    				ld hl,0
001853 AF                  A  2384    				xor a
001854 ED5A                A  2385    				adc hl,de
001856 C8                  A  2386    				ret z							001857 EB                  A  2387    				ex de,hl						001858 FDE5                A  2388    				push iy
00185A CD 6B 18 00         A  2389    				call find_dev					00185E FDE1                A  2390    				pop iy							001860 DC 6C 18 00         A  2391    				call c,got_dev		
001864 3A 4F 51 00         A  2392    nxt_drv			ld a,(current_driver)			001868 3C                  A  2393    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  49


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001869 18 DC               A  2394    				jr mnt_loop
                           A  2395    
                           A  2396    				
00186B E9                  A  2397    find_dev		jp (hl)
                           A  2398    			
                           A  2399    			
00186C E5                  A  2400    got_dev			push hl							00186D D5                  A  2401    				push de							00186E C5                  A  2402    				push bc
00186F CD 92 13 00         A  2403    				call os_new_line_cond			001873 015B0100            A  2404    				ld bc,015bh
001877 CD F8 19 00         A  2405    				call os_print_multiple_chars_co
00187B 3A 4F 51 00         A  2406    				ld a,(current_driver)
00187F CD E7 19 00         A  2407    				call locate_driver_base
001883 210C0000            A  2408    				ld hl,0ch
001887 19                  A  2409    				add hl,de
001888 CD 07 0F 00         A  2410    				call os_print_string_cond		00188C 015D0100            A  2411    				ld bc,015dh
001890 CD F8 19 00         A  2412    				call os_print_multiple_chars_co
001894 C1                  A  2413    				pop bc
001895 D1                  A  2414    				pop de
001896 AF                  A  2415    				xor a
001897 32 84 52 00         A  2416    				ld (vols_on_device_temp),a
                           A  2417    				
00189B 21 50 51 00         A  2418    				ld hl,device_count
00189F 34                  A  2419    				inc (hl)						0018A0 3A 4F 51 00         A  2420    				ld a,(current_driver)
0018A4 2A 80 52 00         A  2421    				ld hl,(dhwn_temp_pointer)	
0018A8 77                  A  2422    				ld (hl),a
0018A9 23                  A  2423    				inc hl
0018AA 73                  A  2424    				ld (hl),e						0018AB FD7304              A  2425    				ld (iy+4),e						0018AE 23                  A  2426    				inc hl							0018AF 72                  A  2427    				ld (hl),d
0018B0 FD7205              A  2428    				ld (iy+5),d
0018B3 23                  A  2429    				inc hl
0018B4 71                  A  2430    				ld (hl),c			
0018B5 FD7106              A  2431    				ld (iy+6),c
0018B8 23                  A  2432    				inc hl
0018B9 70                  A  2433    				ld (hl),b						0018BA 23                  A  2434    				inc hl
0018BB D1                  A  2435    				pop de
0018BC EB                  A  2436    				ex de,hl
0018BD 01160000            A  2437    				ld bc,22
0018C1 EDB0                A  2438    				ldir							0018C3 AF                  A  2439    				xor a
0018C4 0605                A  2440    				ld b,5		
0018C6 12                  A  2441    clrrode			ld (de),a						0018C7 13                  A  2442    				inc de
0018C8 10 FC               A  2443    				djnz clrrode
0018CA ED53 80 52 00       A  2444    				ld (dhwn_temp_pointer),de		                           A  2445    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  50


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0018CF AF                  A  2446    				xor a							0018D0 FDE5                A  2447    fnxtpart		push iy
0018D2 CD 6D 3A 00         A  2448    				call fs_get_partition_info
0018D6 FDE1                A  2449    				pop iy
0018D8 38 31               A  2450    				jr c,nxt_dev					0018DA FECE                A  2451    				cp 0ceh							0018DC 28 2D               A  2452    				jr z,nxt_dev
0018DE F5                  A  2453    				push af
0018DF FD360001            A  2454    				ld (iy),1						0018E3 3A 4F 51 00         A  2455    				ld a,(current_driver)
0018E7 FD7701              A  2456    				ld (iy+1),a						0018EA 3A 83 52 00         A  2457    				ld a,(partition_temp)	
0018EE FD7707              A  2458    				ld (iy+7),a						0018F1 F1                  A  2459    				pop af
0018F2 B7                  A  2460    				or a
0018F3 28 35               A  2461    				jr z,dev_mbr
0018F5 AF                  A  2462    				xor a
0018F6 FD7708              A  2463    				ld (iy+8),a						0018F9 FD7709              A  2464    				ld (iy+9),a						0018FC FD770A              A  2465    				ld (iy+10),a					0018FF FD770B              A  2466    				ld (iy+11),a
001902 CD 76 19 00         A  2467    				call show_vol_info
001906 CD 67 19 00         A  2468    				call test_max_vol
00190A C8                  A  2469    				ret z							                           A  2470    			
00190B 3A 84 52 00         A  2471    nxt_dev			ld a,(vols_on_device_temp)		00190F B7                  A  2472    				or a
001910 C0                  A  2473    				ret nz		
001911 CD C8 19 00         A  2474    				call test_quiet_mode
001915 20 06               A  2475    				jr nz,skp_cu
001917 3E0A                A  2476    				ld a,10
001919 32 2A 53 00         A  2477    				ld (cursor_x),a
00191D 21 45 4F 00         A  2478    skp_cu			ld hl,no_vols_msg				001921 CD C9 13 00         A  2479    				call os_show_packed_text_cond
001925 CD 92 13 00         A  2480    				call os_new_line_cond
001929 C9                  A  2481    				ret
                           A  2482    				
                           A  2483    			
00192A 11040000            A  2484    dev_mbr			ld de,4
00192E 19                  A  2485    				add hl,de
00192F 7E                  A  2486    				ld a,(hl)						001930 B7                  A  2487    				or a
001931 C8                  A  2488    				ret z							001932 19                  A  2489    				add hl,de
                           A  2490    				
001933 FDE5                A  2491    				push iy
001935 0604                A  2492    				ld b,4
001937 7E                  A  2493    sfmbrlp			ld a,(hl)						001938 FD7708              A  2494    				ld (iy+8),a
00193B 23                  A  2495    				inc hl
00193C FD23                A  2496    				inc iy
00193E 10 F7               A  2497    				djnz sfmbrlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  51


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001940 FDE1                A  2498    				pop iy
001942 FDE5                A  2499    				push iy
001944 0603                A  2500    				ld b,3	
001946 7E                  A  2501    nsivlp			ld a,(hl)
001947 FD7704              A  2502    				ld (iy+4),a						00194A 23                  A  2503    				inc hl
00194B FD23                A  2504    				inc iy
00194D 10 F7               A  2505    				djnz nsivlp
00194F FDE1                A  2506    				pop iy
                           A  2507    				
001951 CD 76 19 00         A  2508    				call show_vol_info
001955 CD 67 19 00         A  2509    				call test_max_vol	
001959 C8                  A  2510    				ret z							00195A 3A 83 52 00         A  2511    				ld a,(partition_temp)
00195E 3C                  A  2512    				inc a
00195F FE04                A  2513    				cp 4							001961 C2 D0 18 00         A  2514    				jp nz,fnxtpart
001965 18 A4               A  2515    				jr nxt_dev
                           A  2516    				
                           A  2517    
001967                     A  2518    test_max_vol
                           A  2519    			
001967 11100000            A  2520    				ld de,16
00196B FD19                A  2521    				add iy,de			
00196D 21 51 51 00         A  2522    				ld hl,volume_count
001971 34                  A  2523    				inc (hl)
001972 7E                  A  2524    				ld a,(hl)
001973 FE08                A  2525    				cp max_volumes
001975 C9                  A  2526    				ret
                           A  2527    			
                           A  2528    			
001976                     A  2529    show_vol_info
                           A  2530    				
001976 CD C8 19 00         A  2531    				call test_quiet_mode
00197A 20 06               A  2532    				jr nz,skp_cm2
00197C 3E09                A  2533    				ld a,9			
00197E 32 2A 53 00         A  2534    				ld (cursor_x),a
001982 3A 51 51 00         A  2535    skp_cm2			ld a,(volume_count)
001986 F5                  A  2536    				push af
001987 C630                A  2537    				add a,30h		
001989 32 56 51 00         A  2538    				ld (vol_txt+4),a	
00198D 21 52 51 00         A  2539    				ld hl,vol_txt
001991 CD 07 0F 00         A  2540    				call os_print_string_cond		001995 21 84 52 00         A  2541    				ld hl,vols_on_device_temp
001999 CBC6                A  2542    				set 0,(hl)						                           A  2543    			
00199B F1                  A  2544    				pop af
00199C FDE5                A  2545    				push iy
00199E CD 71 1A 00         A  2546    				call os_change_volume			0019A2 28 0A               A  2547    				jr z,vform_ok					0019A4 21 F5 4E 00         A  2548    svi_fe			ld hl,format_err_msg		
0019A8 CD C9 13 00         A  2549    svi_pem			call os_show_packed_text_cond	Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  52


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
0019AC 18 0D               A  2550    				jr skpsvl
                           A  2551    			
0019AE CD 89 42 00         A  2552    vform_ok		call fs_get_volume_label
0019B2 38 0E               A  2553    				jr c,svi_hwe
0019B4 B7                  A  2554    				or a
0019B5 20 ED               A  2555    				jr nz,svi_fe
0019B7 CD 07 0F 00         A  2556    				call os_print_string_cond		                           A  2557    			
0019BB CD 92 13 00         A  2558    skpsvl			call os_new_line_cond
0019BF FDE1                A  2559    				pop iy
0019C1 C9                  A  2560    				ret
                           A  2561    				
0019C2 21 51 4D 00         A  2562    svi_hwe			ld hl,disk_err_msg
0019C6 18 E0               A  2563    				jr svi_pem
                           A  2564    			
                           A  2565    			
0019C8                     A  2566    test_quiet_mode
                           A  2567    			
0019C8 3A 86 52 00         A  2568    				ld a,(os_quiet_mode)
0019CC B7                  A  2569    				or a
0019CD C9                  A  2570    				ret
                           A  2571    
                           A  2572    ;----------------------------------------------
                           A  2573    
                           A  2574    
0019CE                     A  2575    show_dev_driver_name
                           A  2576    	
                           A  2577    	
0019CE CD E7 19 00         A  2578    				call locate_driver_base			0019D2 EB                  A  2579    				ex de,hl
0019D3 110C0000            A  2580    				ld de,0ch
0019D7 19                  A  2581    				add hl,de
0019D8 CD 0C 0F 00         A  2582    				call os_print_string			0019DC C5                  A  2583    				push bc
0019DD 01200100            A  2584    				ld bc,0120h
0019E1 CD FD 19 00         A  2585    				call os_print_multiple_chars	0019E5 C1                  A  2586    				pop bc
0019E6 C9                  A  2587    				ret
                           A  2588    
                           A  2589    
0019E7                     A  2590    locate_driver_base
                           A  2591    
0019E7 E5                  A  2592    				push hl							0019E8 11030000            A  2593    				ld de,3							0019EC 57                  A  2594    				ld d,a
0019ED ED5C                A  2595    				mlt de
0019EF 21 62 51 00         A  2596    				ld hl,driver_table
0019F3 19                  A  2597    				add hl,de
0019F4 ED17                A  2598    				ld de,(hl)
0019F6 E1                  A  2599    				pop hl
0019F7 C9                  A  2600    				ret
                           A  2601    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  53


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2602    		
                           A  2603    ;----------------------------------------------
                           A  2604    
0019F8                     A  2605    os_print_multiple_chars_cond
                           A  2606    
0019F8 CD C8 19 00         A  2607    				call test_quiet_mode
0019FC C0                  A  2608    				ret nz
                           A  2609    			
0019FD                     A  2610    os_print_multiple_chars
                           A  2611    
                           A  2612    ;c = char
                           A  2613    ;b = count
0019FD C5                  A  2614    				push bc
0019FE E5                  A  2615    				push hl
0019FF 79                  A  2616    				ld a,c
001A00 21 E1 48 00         A  2617    				ld hl,rep_char_txt
001A04 77                  A  2618    				ld (hl),a
001A05 E5                  A  2619    pmch_lp			push hl
001A06 CD 0C 0F 00         A  2620    				call os_print_string
001A0A E1                  A  2621    				pop hl
001A0B 10 F8               A  2622    				djnz pmch_lp
001A0D E1                  A  2623    				pop hl
001A0E C1                  A  2624    				pop bc
001A0F C9                  A  2625    				ret
                           A  2626    
                           A  2627    ;----------------------------------------------
                           A  2628    
                           A  2629    
001A10 7B                  A  2630    ext_plot_char	ld a,e
001A11 C3 78 30 00         A  2631    				jp hwsc_plot_char
                           A  2632    				
                           A  2633    
                           A  2634    ;----------------------------------------------
                           A  2635    ; Some file system related routines 
                           A  2636    ;----------------------------------------------
                           A  2637    
                           A  2638    
001A15                     A  2639    fs_get_dir_cluster
                           A  2640    
                           A  2641    
001A15 F5                  A  2642    				push af							001A16 E5                  A  2643    				push hl			
001A17 CD 2D 1A 00         A  2644    				call fs_get_dir_cluster_address
001A1B ED17                A  2645    				ld de,(hl)
001A1D E1                  A  2646    dclopdone		pop hl
001A1E F1                  A  2647    				pop af
001A1F BF                  A  2648    				cp a							001A20 C9                  A  2649    				ret
                           A  2650    				
                           A  2651    
                           A  2652    
                           A  2653    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  54


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2654    
001A21                     A  2655    fs_update_dir_cluster
                           A  2656    
001A21 F5                  A  2657    				push af							001A22 E5                  A  2658    				push hl			
001A23 D5                  A  2659    				push de			
001A24 CD 2D 1A 00         A  2660    				call fs_get_dir_cluster_address
001A28 D1                  A  2661    				pop de
001A29 ED1F                A  2662    				ld (hl),de
001A2B 18 F0               A  2663    				jr dclopdone
                           A  2664    			
                           A  2665    
                           A  2666    
                           A  2667    
                           A  2668    
001A2D                     A  2669    fs_get_dir_cluster_address
                           A  2670    
001A2D 21 68 51 00         A  2671    				ld hl,volume_dir_clusters		001A31 3A 4E 51 00         A  2672    				ld a,(current_volume)	
001A35 11030000            A  2673    				ld de,3
001A39 57                  A  2674    				ld d,a
001A3A ED5C                A  2675    				mlt de
001A3C 19                  A  2676    				add hl,de
001A3D C9                  A  2677    				ret
                           A  2678    				
                           A  2679    	
                           A  2680    
                           A  2681    	
                           A  2682    	
001A3E                     A  2683    fs_get_total_sectors
                           A  2684    
                           A  2685    
001A3E F5                  A  2686    				push af
001A3F E5                  A  2687    				push hl							001A40 CD 4F 1A 00         A  2688    				call fs_calc_volume_offset	
001A44 21 84 51 00         A  2689    				ld hl,volume_mount_list+4
001A48 19                  A  2690    				add hl,de
001A49 ED17                A  2691    				ld de,(hl)
001A4B E1                  A  2692    				pop hl
001A4C F1                  A  2693    				pop af
001A4D BF                  A  2694    				cp a							001A4E C9                  A  2695    				ret
                           A  2696    
                           A  2697    
                           A  2698    
                           A  2699    
                           A  2700    
001A4F                     A  2701    fs_calc_volume_offset
                           A  2702    
001A4F 3A 4E 51 00         A  2703    				ld a,(current_volume)			001A53 11100000            A  2704    calc_vol		ld de,16
001A57 57                  A  2705    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  55


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001A58 ED5C                A  2706    				mlt de
001A5A C9                  A  2707    				ret
                           A  2708    
                           A  2709    
                           A  2710    
                           A  2711    
                           A  2712    
001A5B                     A  2713    dev_to_driver_lookup
                           A  2714    
001A5B 21 50 51 00         A  2715    				ld hl,device_count				001A5F BE                  A  2716    				cp (hl)							001A60 D0                  A  2717    				ret nc
001A61 11200000            A  2718    				ld de,32						001A65 57                  A  2719    				ld d,a
001A66 ED5C                A  2720    				mlt de
001A68 21 00 52 00         A  2721    				ld hl,host_device_hardware_info
001A6C 19                  A  2722    				add hl,de
001A6D 7E                  A  2723    				ld a,(hl)
001A6E 37                  A  2724    				scf
001A6F C9                  A  2725    				ret
                           A  2726    				
                           A  2727    
                           A  2728    
001A70                     A  2729    ext_change_volume
                           A  2730    
001A70 7B                  A  2731    				ld a,e
                           A  2732    
001A71                     A  2733    os_change_volume
                           A  2734    
001A71 47                  A  2735    				ld b,a							001A72 FE08                A  2736    				cp max_volumes		
001A74 30 23               A  2737    				jr nc,fs_ccv2					                           A  2738    			
001A76 3A 4E 51 00         A  2739    				ld a,(current_volume)			001A7A F5                  A  2740    				push af
001A7B 78                  A  2741    				ld a,b
001A7C 32 4E 51 00         A  2742    				ld (current_volume),a			001A80 CD 9D 1A 00         A  2743    				call fs_set_driver_for_volume	                           A  2744    				
001A84 CD CF 3A 00         A  2745    				call fs_check_disk_format		001A88 38 06               A  2746    				jr c,fs_cant_chg_vols	
001A8A B7                  A  2747    				or a
001A8B 20 03               A  2748    				jr nz,fs_cant_chg_vols
001A8D F1                  A  2749    				pop af							001A8E AF                  A  2750    				xor a							001A8F C9                  A  2751    				ret
                           A  2752    
                           A  2753    
001A90                     A  2754    fs_cant_chg_vols
                           A  2755    			
001A90 F1                  A  2756    				pop af
001A91 32 4E 51 00         A  2757    				ld (current_volume),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  56


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
001A95 CD 9D 1A 00         A  2758    				call fs_set_driver_for_volume	                           A  2759    				
001A99 3ECF                A  2760    fs_ccv2			ld a,0cfh						001A9B B7                  A  2761    				or a
001A9C C9                  A  2762    				ret
                           A  2763    					
                           A  2764    	
001A9D                     A  2765    fs_set_driver_for_volume
                           A  2766    
001A9D CD 4F 1A 00         A  2767    				call fs_calc_volume_offset		001AA1 21 81 51 00         A  2768    				ld hl,volume_mount_list+1
001AA5 19                  A  2769    				add hl,de
001AA6 7E                  A  2770    				ld a,(hl)
001AA7 32 4F 51 00         A  2771    				ld (current_driver),a
001AAB C9                  A  2772    				ret
                           A  2773    
                           A  2774    
                           A  2775    ;----------------------------------------------
                           A  2776    
001AAC                     A  2777    ext_file_sector_list
                           A  2778    
                           A  2779    ;Input HL = cluster, E = sector offset
                           A  2780    
                           A  2781    ;Output HL = new cluster, E = new sector number
                           A  2782    ;       IX = address of LBA0 LSB of sector (int
                           A  2783    
                           A  2784    				
001AAC 3A E0 46 00         A  2785    				ld a,(fs_cluster_size)
001AB0 BB                  A  2786    				cp e
001AB1 20 0A               A  2787    				jr nz,fsl_sc
001AB3 CD 15 45 00         A  2788    				call get_fat_entry_for_cluster
001AB7 DA E4 15 00         A  2789    				jp c,os_fferr
001ABB 1E00                A  2790    				ld e,0
001ABD CD EC 45 00         A  2791    fsl_sc			call cluster_and_offset_to_lba
001AC1 1C                  A  2792    				inc e
001AC2 DD21 25 53 00       A  2793    fsl_done		ld ix,sector_lba0
001AC7 BF                  A  2794    				cp a							001AC8 C9                  A  2795    				ret
                           A  2796    				
                           A  2797    	
                           A  2798    			
                           A  2799    ;----------------------------------------------
                           A  2800    ; Environment variable code - NOT IMPLEMENTED Y
                           A  2801    ;----------------------------------------------
                           A  2802    
001AC9                     A  2803    ext_get_envar
001AC9 CC 4D 15 00         A  2804    				call z,mbase_hl
                           A  2805    
001ACD                     A  2806    os_get_envar
                           A  2807    
                           A  2808    ;Set: 		HL = name of required variable
                           A  2809    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  57


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2810    ;Returns:	HL = address of variable data
                           A  2811    ;        	ZF = Not Set: Couldn't find variabl
                           A  2812    						
001ACD AF                  A  2813    				xor a
001ACE C9                  A  2814    				ret
                           A  2815    			
                           A  2816    ;----------------------------------------------
                           A  2817    
001ACF                     A  2818    ext_set_envar
                           A  2819    
                           A  2820    ;HL = addr of variable name (4 bytes max ASCII,
                           A  2821    ;DE = addr of data for variable (4 bytes max)
                           A  2822    
                           A  2823    ;Returns:
                           A  2824    
                           A  2825    ;ZF = Not Set: No enough space for new variable
                           A  2826    		
001ACF CC 4D 15 00         A  2827    				call z,mbase_hl
001AD3 CC 5E 15 00         A  2828    				call z,mbase_de
                           A  2829    
001AD7 AF                  A  2830    				xor a
001AD8 C9                  A  2831    				ret
                           A  2832    		
                           A  2833    ;----------------------------------------------
                           A  2834    
001AD9                     A  2835    ext_delete_envar
                           A  2836    
001AD9 CC 4D 15 00         A  2837    				call z,mbase_hl
                           A  2838    
001ADD                     A  2839    os_delete_envar
                           A  2840    
                           A  2841    ;HL = name of required variable (null terminate
                           A  2842    
001ADD AF                  A  2843    				xor a
001ADE C9                  A  2844    				ret
                           A  2845    				
                           A  2846    
                           A  2847    ;----------------------------------------------
                           A  2848    
001ADF                     A  2849    os_get_keymap_location
                           A  2850    
001ADF 21 8D 4F 00         A  2851    				ld hl,unshifted_keymap
001AE3 BF                  A  2852    				cp a							001AE4 C9                  A  2853    				ret
                           A  2854    
                           A  2855    ;----------------------------------------------
                           A  2856    
001AE5                     A  2857    os_get_font_info
                           A  2858    
001AE5 DD21 EC 50 00       A  2859    				ld ix,font_parameters
001AEA BF                  A  2860    				cp a
001AEB C9                  A  2861    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  58


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
                           A  2862    
                           A  2863    ;==============================================
                           A  2864    ; Internal OS command routines
                           A  2865    ;==============================================
                           A  2866    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001AEC                     B     5    os_cmd_c
                           B     6    
001AEC CD 22 1B 00         B     7    				call get_start_and_end			                           B     8    				
001AF0 CD 4B 1B 00         B     9    				call hexword_or_bust			001AF4 CA C8 15 00         B    10    				jp z,os_no_d_addr_error
001AF8 ED53 38 53 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001AFD CD 10 1B 00         B    13    				call test_mem_range				001B01 DA CC 15 00         B    14    				jp c,os_range_error				001B05 ED5B 38 53 00       B    15    				ld de,(copy_dest_address)
001B0A EDB0                B    16    				ldir
                           B    17    
001B0C 3E20                B    18    copy_done		ld a,020h						001B0E B7                  B    19    				or a
001B0F C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001B10                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001B10 2A 35 53 00         B    33    				ld hl,(cmdop_end_address)	
001B14 ED4B 32 53 00       B    34    				ld bc,(cmdop_start_address)
001B19 C5                  B    35    				push bc
001B1A AF                  B    36    				xor a
001B1B ED42                B    37    				sbc hl,bc
001B1D E5                  B    38    				push hl
001B1E C1                  B    39    				pop bc
001B1F 03                  B    40    				inc bc
001B20 E1                  B    41    				pop hl
001B21 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001B22                     B    46    get_start_and_end
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  59


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\c.asm
                           B    47    			
001B22 CD 83 10 00         B    48    				call ascii_to_hexword			001B26 ED53 32 53 00       B    49    				ld (cmdop_start_address),de
001B2B 23                  B    50    				inc hl
001B2C 28 09               B    51    				jr z,st_addrok
001B2E E1                  B    52    				pop hl							001B2F FE82                B    53    				cp 82h							001B31 28 02               B    54    				jr z,c_badhex
001B33 3E16                B    55    				ld a,016h						001B35 B7                  B    56    c_badhex		or a
001B36 C9                  B    57    				ret
                           B    58    				
001B37 CD 83 10 00         B    59    st_addrok		call ascii_to_hexword			001B3B ED53 35 53 00       B    60    				ld (cmdop_end_address),de
001B40 23                  B    61    				inc hl
001B41 B7                  B    62    				or a
001B42 C8                  B    63    				ret z
001B43 E1                  B    64    				pop hl							001B44 FE82                B    65    				cp 82h							001B46 28 ED               B    66    				jr z,c_badhex
001B48 3E1C                B    67    				ld a,01ch						001B4A C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001B4B                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001B4B CD 83 10 00         B    79    				call ascii_to_hexword		
001B4F FE82                B    80    				cp 82h
001B51 20 03               B    81    				jr nz,hex_good
001B53 E1                  B    82    				pop hl						; r
001B54 B7                  B    83    				or a	
001B55 C9                  B    84    				ret			 
001B56 FE81                B    85    hex_good		cp 081h						; n
001B58 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001B59                     B     5    os_cmd_cd	
                           B     6    
001B59 CD 45 16 00         B     7    				call os_check_volume_format	
001B5D C0                  B     8    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  60


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\cd.asm
                           B     9    			
                           B    10    			
001B5E 7E                  B    11    				ld a,(hl)						001B5F B7                  B    12    				or a				
001B60 CA 07 1C 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001B64 7E                  B    16    				ld a,(hl)						001B65 23                  B    17    				inc hl
001B66 46                  B    18    				ld b,(hl)
001B67 2B                  B    19    				dec hl
001B68 FE2E                B    20    				cp '.'			
001B6A 20 08               B    21    				jr nz,cd_nual
001B6C B8                  B    22    				cp b
001B6D 20 05               B    23    				jr nz,cd_nual
001B6F CD 9D 16 00         B    24    				call os_parent_dir	
001B73 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001B74 FE2F                B    28    cd_nual			cp 02fh			
001B76 20 05               B    29    				jr nz,cd_nogor					001B78 CD A3 16 00         B    30    				call os_root_dir	
001B7C C9                  B    31    				ret
                           B    32    				
                           B    33    				
001B7D FE25                B    34    cd_nogor		cp '%'							001B7F 20 1F               B    35    				jr nz,cd_no_assign
001B81 CD CD 1A 00         B    36    				call os_get_envar
001B85 28 04               B    37    				jr z,cd_evok
001B87 3ED1                B    38    				ld a,0d1h						001B89 B7                  B    39    				or a
001B8A C9                  B    40    				ret
001B8B 11000000            B    41    cd_evok			ld de,0
001B8F 5E                  B    42    				ld e,(hl)
001B90 23                  B    43    				inc hl
001B91 56                  B    44    				ld d,(hl)
001B92 23                  B    45    				inc hl
001B93 7E                  B    46    				ld a,(hl)
001B94 D5                  B    47    				push de
001B95 CD 71 1A 00         B    48    				call os_change_volume
001B99 D1                  B    49    				pop de
001B9A C0                  B    50    				ret nz
001B9B CD 21 1A 00         B    51    				call fs_update_dir_cluster
001B9F C9                  B    52    				ret
                           B    53    				
                           B    54    				
001BA0                     B    55    cd_no_assign
                           B    56    			
001BA0 3A 4E 51 00         B    57    				ld a,(current_volume)
001BA4 32 8F 59 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001BA8 E5                  B    60    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  61


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\cd.asm
001BA9 DDE1                B    61    				pop ix
001BAB DD7E04              B    62    				ld a,(ix+4)
001BAE FE3A                B    63    				cp ':'							001BB0 20 25               B    64    				jr nz,cd_nchvol
001BB2 11 53 51 00         B    65    				ld de,vol_txt+1
001BB6 0603                B    66    				ld b,3
001BB8 CD C6 11 00         B    67    				call os_compare_strings
001BBC 20 19               B    68    				jr nz,cd_nchvol
001BBE 11050000            B    69    				ld de,5
001BC2 19                  B    70    				add hl,de
001BC3 22 EB 53 00         B    71    				ld (os_args_loc),hl				001BC7 DD7E03              B    72    				ld a,(ix+3)						001BCA D630                B    73    				sub 030h
001BCC CD 71 1A 00         B    74    				call os_change_volume
001BD0 C0                  B    75    				ret nz							001BD1 CD A3 16 00         B    76    				call os_root_dir				001BD5 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001BD7 CD 15 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001BDB ED53 8C 59 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001BE0 E5                  B    83    cd_mollp		push hl
001BE1 CD 93 16 00         B    84    				call os_change_dir				001BE5 E1                  B    85    				pop hl
001BE6 20 0A               B    86    				jr nz,cd_dcherr
001BE8 7E                  B    87    cd_mol			ld a,(hl)						001BE9 23                  B    88    				inc hl
001BEA B7                  B    89    				or a
001BEB C8                  B    90    				ret z
001BEC FE2F                B    91    				cp 02fh
001BEE 28 F0               B    92    				jr z,cd_mollp
001BF0 18 F6               B    93    				jr cd_mol
                           B    94    					
001BF2                     B    95    cd_dcherr	
                           B    96    			
001BF2 F5                  B    97    				push af							001BF3 ED5B 8C 59 00       B    98    				ld de,(original_dir_cd_cmd)
001BF8 CD 21 1A 00         B    99    				call fs_update_dir_cluster
001BFC 3A 8F 59 00         B   100    				ld a,(original_vol_cd_cmd)
001C00 CD 71 1A 00         B   101    				call os_change_volume	
001C04 F1                  B   102    				pop af
001C05 B7                  B   103    				or a
001C06 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001C07                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  62


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\cd.asm
001C07 0610                B   113    				ld b,max_dirs
001C09 0E00                B   114    				ld c,0
001C0B C5                  B   115    lp1				push bc
001C0C CD 15 1A 00         B   116    				call fs_get_dir_cluster
001C10 C1                  B   117    				pop bc
001C11 D5                  B   118    				push de
001C12 0C                  B   119    				inc c
001C13 C5                  B   120    				push bc
001C14 CD 9D 16 00         B   121    				call os_parent_dir
001C18 C1                  B   122    				pop bc
001C19 20 02               B   123    				jr nz,shdir_lp
001C1B 10 EE               B   124    				djnz lp1
                           B   125    				
001C1D D1                  B   126    shdir_lp		pop de
001C1E C5                  B   127    				push bc
001C1F CD 21 1A 00         B   128    				call fs_update_dir_cluster
001C23 CD C9 16 00         B   129    				call os_get_current_dir_name
001C27 CD 0C 0F 00         B   130    				call os_print_string
001C2B 21 3D 1C 00         B   131    				ld hl,cd_fwdslash_txt
001C2F CD 0C 0F 00         B   132    				call os_print_string
001C33 C1                  B   133    				pop bc
001C34 0D                  B   134    				dec c
001C35 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001C37 CD 97 13 00         B   137    				call os_new_line	
001C3B AF                  B   138    				xor a
001C3C C9                  B   139    				ret
                           B   140    			
001C3D 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       0000598C            B   145    original_dir_cd_cmd		equ scratch_pad 
       0000598F            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C3F                     B     5    os_cmd_cls
                           B     6    
001C3F CD 8B 2F 00         B     7    				call hwsc_clear_screen
001C43 AF                  B     8    				xor a
001C44 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  63


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\colon.asm
                           B     3    ;----------------------------------------------
                           B     4    
001C45                     B     5    os_cmd_colon
                           B     6    	
001C45 CD 4B 1B 00         B     7    				call hexword_or_bust			001C49 CA B8 15 00         B     8    				jp z,os_no_start_addr			001C4D D5                  B     9    				push de
001C4E DDE1                B    10    				pop ix							                           B    11    			
001C50 CD 4B 1B 00         B    12    wmblp			call hexword_or_bust			001C54 28 07               B    13    				jr z,os_ccmdn
001C56 DD7300              B    14    				ld (ix),e						001C59 DD23                B    15    				inc ix
001C5B 18 F3               B    16    				jr wmblp
                           B    17    
001C5D AF                  B    18    os_ccmdn		xor a
001C5E C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: Z80 Disassembler
                           B     3    ;
                           B     4    ; Not currently enabled
                           B     5    ;----------------------------------------------
                           B     6    
001C5F                     B     7    os_cmd_d
                           B     8    
001C5F 21 69 1C 00         B     9    			ld hl,not_yet_txt
001C63 CD 0C 0F 00         B    10    			call os_print_string
001C67 AF                  B    11    			xor a
001C68 C9                  B    12    			ret
                           B    13    
001C69                     B    14    not_yet_txt
                           B    15    
001C69 436F6D6D 616E6420   B    16    			db 'Command not yet implemented.',1
001C71 6E6F7420 79657420 
001C79 696D706C 656D656E 
001C81 7465642E 0B00 
                           B    17    			
                           B    18    ;----------------------------------------------
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
001C87                     B     6    os_cmd_del
                           B     7    	
001C87 CD 45 16 00         B     8    				call os_check_volume_format	
001C8B C0                  B     9    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  64


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\del.asm
                           B    10    			
001C8C CD 94 1C 00         B    11    				call filename_or_bust
                           B    12    				
001C90 C3 AD 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
001C94                     B    18    filename_or_bust
                           B    19    			
001C94 7E                  B    20    				ld a,(hl)					;is
001C95 B7                  B    21    				or a
001C96 C0                  B    22    				ret nz
001C97 E1                  B    23    				pop hl						;ot
001C98 C3 B0 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
001C9C                     B     5    os_cmd_dir
                           B     6    
001C9C CD 45 16 00         B     7    				call os_check_volume_format	
001CA0 C0                  B     8    				ret nz
                           B     9    				
001CA1 CD 7B 1D 00         B    10    				call div_line
001CA5 CD 96 45 00         B    11    				call fs_get_current_dir_name	001CA9 D8                  B    12    				ret c
001CAA C0                  B    13    				ret nz
001CAB CD 0C 0F 00         B    14    				call os_print_string
001CAF CD 15 1A 00         B    15    				call fs_get_dir_cluster			001CB3 7A                  B    16    				ld a,d
001CB4 B3                  B    17    				or e
001CB5 20 08               B    18    				jr nz,dcmdnr
001CB7 CD 89 42 00         B    19    				call fs_get_volume_label
001CBB CD 0C 0F 00         B    20    				call os_print_string
001CBF CD 97 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
001CC3 CD 7B 1D 00         B    23    nrootdir		call div_line
001CC7 CD 8E 41 00         B    24    				call fs_goto_first_dir_entry
001CCB D8                  B    25    				ret c
001CCC 20 6F               B    26    				jr nz,os_dlr
001CCE AF                  B    27    				xor a
001CCF 32 2E 53 00         B    28    				ld (os_linecount),a
                           B    29    				
001CD3 CD A5 41 00         B    30    os_dfllp		call fs_get_dir_entry			001CD7 D8                  B    31    				ret c
001CD8 20 63               B    32    				jr nz,os_dlr					001CDA C5                  B    33    				push bc
001CDB CD 0C 0F 00         B    34    				call os_print_string			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  65


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\dir.asm
001CDF CD C2 13 00         B    35    				call os_get_cursor_position		001CE3 060E                B    36    				ld b,14
001CE5 CD A2 13 00         B    37    				call os_set_cursor_position	
001CE9 C1                  B    38    				pop bc
001CEA CB40                B    39    				bit 0,b							001CEC 28 06               B    40    				jr z,os_deif		
001CEE 21 88 1D 00         B    41    				ld hl,dir_txt					001CF2 18 32               B    42    				jr os_dpl
                           B    43    				
001CF4 21 84 48 00         B    44    os_deif			ld hl,os_hex_prefix_txt			001CF8 CD 0C 0F 00         B    45    				call os_print_string
001CFC ED53 8C 59 00       B    46    				ld (scratch_pad),de
001D01 79                  B    47    				ld a,c
001D02 32 8F 59 00         B    48    				ld (scratch_pad+3),a
001D06 21 99 53 00         B    49    				ld hl,output_line
001D0A E5                  B    50    				push hl
001D0B ED5B 8E 59 00       B    51    				ld de,(scratch_pad+2)
001D10 CD 74 10 00         B    52    				call hexword_to_ascii
001D14 ED5B 8C 59 00       B    53    				ld de,(scratch_pad)
001D19 CD 74 10 00         B    54    				call hexword_to_ascii
001D1D 3600                B    55    				ld (hl),0
001D1F E1                  B    56    				pop hl
001D20 0607                B    57    				ld b,7							001D22 CD 2C 10 00         B    58    				call os_skip_leading_ascii_zero
001D26 CD 0C 0F 00         B    59    os_dpl			call os_print_string
001D2A CD 97 13 00         B    60    				call os_new_line
                           B    61    				
001D2E CD 32 42 00         B    62    				call fs_goto_next_dir_entry
001D32 20 09               B    63    				jr nz,os_dlr					001D34 CD 9D 11 00         B    64    				call os_count_lines
001D38 3E79                B    65    				ld a,'y'
001D3A B8                  B    66    				cp b
001D3B 28 96               B    67    				jr z,os_dfllp
                           B    68    				
001D3D CD 7B 1D 00         B    69    os_dlr			call div_line					001D41 CD C1 3B 00         B    70    				call fs_calc_free_space
001D45 D8                  B    71    				ret c	
001D46 CD 54 1D 00         B    72    				call show_hlde_decimal
001D4A 21 8E 1D 00         B    73    				ld hl,kb_spare_txt
001D4E CD 0C 0F 00         B    74    				call os_print_string
001D52 AF                  B    75    				xor a
001D53 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
001D54                     B    80    show_hlde_decimal
                           B    81    
001D54 CD 32 12 00         B    82    				call os_hex_to_decimal			001D58 11070000            B    83    				ld de,7
001D5C 19                  B    84    				add hl,de						001D5D 43                  B    85    				ld b,e
001D5E 11 99 53 00         B    86    				ld de,output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  66


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\dir.asm
001D62 D5                  B    87    				push de
001D63 7E                  B    88    dec2strlp		ld a,(hl)						001D64 B7                  B    89    				or a
001D65 20 03               B    90    				jr nz,foundlnz
001D67 2B                  B    91    				dec hl
001D68 10 F9               B    92    				djnz dec2strlp
001D6A 04                  B    93    foundlnz		inc b
001D6B 7E                  B    94    ndecchar		ld a,(hl)						001D6C C630                B    95    				add a,030h
001D6E 12                  B    96    				ld (de),a
001D6F 13                  B    97    				inc de
001D70 2B                  B    98    				dec hl
001D71 10 F8               B    99    				djnz ndecchar
001D73 AF                  B   100    				xor a
001D74 12                  B   101    				ld (de),a
001D75 E1                  B   102    				pop hl							001D76 CD 0C 0F 00         B   103    				call os_print_string
001D7A C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
001D7B 0E2D                B   108    div_line		ld c,'-'
001D7D 0613                B   109    				ld b,19
001D7F CD FD 19 00         B   110    				call os_print_multiple_chars
001D83 CD 97 13 00         B   111    				call os_new_line
001D87 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
001D88 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
001D8E 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
001D96 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D98                     B     5    os_cmd_f			
                           B     6    
001D98 CD 22 1B 00         B     7    				call get_start_and_end			                           B     8    			
001D9C CD 4B 1B 00         B     9    				call hexword_or_bust			001DA0 CA D0 15 00         B    10    				jp z,os_no_args_error			001DA4 7B                  B    11    				ld a,e
001DA5 32 45 53 00         B    12    				ld (fillbyte),a
                           B    13    					
001DA9 CD 10 1B 00         B    14    				call test_mem_range
001DAD DA CC 15 00         B    15    				jp c,os_range_error				Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  67


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\f.asm
                           B    16    					
001DB1 3A 45 53 00         B    17    				ld a,(fillbyte)
001DB5 77                  B    18    f_floop			ld (hl),a
001DB6 EDA1                B    19    				cpi								001DB8 EA B5 1D 00         B    20    				jp pe,f_floop
                           B    21    					
001DBC 3E20                B    22    				ld a,020h						001DBE B7                  B    23    				or a
001DBF C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
001DC0                     B     9    os_cmd_format
                           B    10    
001DC0 7E                  B    11    				ld a,(hl)						001DC1 B7                  B    12    				or a
001DC2 20 04               B    13    				jr nz,fgotargs					001DC4 3E1F                B    14    				ld a,01fh						001DC6 B7                  B    15    				or a
001DC7 C9                  B    16    				ret
                           B    17    			
001DC8                     B    18    fgotargs	
001DC8 11 F7 46 00         B    19    				ld de,fs_sought_filename
001DCC CD DF 45 00         B    20    				call fs_clear_filename			001DD0 E5                  B    21    				push hl							001DD1 CD 8D 0F 00         B    22    				call os_next_arg
001DD5 20 04               B    23    				jr nz,fgotlab
001DD7 21 08 1F 00         B    24    				ld hl,default_label
001DDB 060B                B    25    fgotlab			ld b,11
001DDD CD E5 11 00         B    26    				call os_copy_ascii_run
001DE1 E1                  B    27    				pop hl
                           B    28    				
001DE2 3A 50 51 00         B    29    				ld a,(device_count)				001DE6 B7                  B    30    				or a
001DE7 28 25               B    31    				jr z,fno_dev
001DE9 47                  B    32    				ld b,a
001DEA 0E00                B    33    				ld c,0							001DEC DD21 00 52 00       B    34    				ld ix,host_device_hardware_info
001DF1 DD7E00              B    35    fdev_lp			ld a,(ix)						001DF4 CD E7 19 00         B    36    				call locate_driver_base			001DF8 D5                  B    37    				push de
001DF9 FDE1                B    38    				pop iy
001DFB ED130C              B    39    				lea de,iy+0ch					001DFE C5                  B    40    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  68


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\format.asm
001DFF 0607                B    41    				ld b,7
001E01 CD C6 11 00         B    42    				call os_compare_strings
001E05 C1                  B    43    				pop bc
001E06 28 0A               B    44    				jr z,format_dev
001E08 ED3220              B    45    				lea ix,ix+20h					001E0B 0C                  B    46    				inc c
001E0C 10 E3               B    47    				djnz fdev_lp
                           B    48    			
001E0E 3ED0                B    49    fno_dev			ld a,0d0h						001E10 B7                  B    50    				or a
001E11 C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
001E12 C5                  B    58    format_dev		push bc
001E13 CD 97 13 00         B    59    				call os_new_line
001E17 21 D9 1E 00         B    60    				ld hl,form_dev_warn1
001E1B CD CE 13 00         B    61    				call os_show_packed_text
001E1F C1                  B    62    				pop bc
                           B    63    				
001E20 79                  B    64    				ld a,c							001E21 C630                B    65    				add a,030h
001E23 32 5C 51 00         B    66    				ld (dev_txt+3),a
001E27 21 59 51 00         B    67    				ld hl,dev_txt	
001E2B CD 0C 0F 00         B    68    				call os_print_string			                           B    69    				
001E2F 79                  B    70    				ld a,c
001E30 CD 5B 1A 00         B    71    				call dev_to_driver_lookup		001E34 E5                  B    72    				push hl
001E35 32 4F 51 00         B    73    				ld (current_driver),a
001E39 CD CE 19 00         B    74    				call show_dev_driver_name		001E3D DDE1                B    75    				pop ix
001E3F DD1701              B    76    				ld de,(ix+1)
001E42 FD21 41 53 00       B    77    				ld iy,xrr_temp
001E47 FD1F00              B    78    				ld (iy),de						001E4A FDCB023E            B    79    				srl (iy+2)
001E4E FDCB011E            B    80    				rr (iy+1)
001E52 FDCB001E            B    81    				rr (iy+0)						001E56 FD1700              B    82    				ld de,(iy)						001E59 CD 54 1D 00         B    83    				call show_hlde_decimal			001E5D 21 13 1F 00         B    84    				ld hl,kb_txt
001E61 CD 0C 0F 00         B    85    				call os_print_string
001E65 ED2205              B    86    				lea hl,ix+5		
001E68 CD 0C 0F 00         B    87    				call os_print_string			001E6C 3E29                B    88    				ld a,')'
001E6E CD 4E 0F 00         B    89    				call os_print_char
                           B    90    				
001E72 CD 97 13 00         B    91    				call os_new_line
001E76 CD 97 13 00         B    92    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  69


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\format.asm
001E7A 21 E0 1E 00         B    93    				ld hl,form_dev_warn2
001E7E CD D0 1E 00         B    94    				call show_packed_text_and_cr
001E82 CD B8 1E 00         B    95    				call confirm_yes
001E86 20 28               B    96    				jr nz,ab_form
                           B    97    				
001E88 21 EA 1E 00         B    98    				ld hl,formatting_txt			001E8C CD 0C 0F 00         B    99    				call os_print_string
                           B   100    				
001E90 CD 44 39 00         B   101    				call fs_format_device_command
001E94 38 10               B   102    				jr c,form_err
001E96 B7                  B   103    				or a
001E97 20 0D               B   104    				jr nz,form_err
                           B   105    			
001E99 21 FA 1E 00         B   106    				ld hl,ok_txt					001E9D CD 0C 0F 00         B   107    				call os_print_string
                           B   108    				
001EA1 CD AF 25 00         B   109    f_end			call os_cmd_remount				001EA5 C9                  B   110    				ret
                           B   111    			
001EA6                     B   112    form_err
001EA6 21 FF 1E 00         B   113    				ld hl,ferr_txt
001EAA CD 0C 0F 00         B   114    				call os_print_string
001EAE 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
001EB0 CD 97 13 00         B   121    ab_form			call os_new_line
001EB4 3E24                B   122    				ld a,024h						001EB6 B7                  B   123    				or a
001EB7 C9                  B   124    				ret
                           B   125    				
001EB8                     B   126    confirm_yes
                           B   127    			
001EB8 21 8C 59 00         B   128    				ld hl,scratch_pad
001EBC 1E03                B   129    				ld e,3
001EBE E5                  B   130    				push hl
001EBF CD D8 10 00         B   131    				call os_user_input
001EC3 E1                  B   132    				pop hl
001EC4 C0                  B   133    				ret nz
001EC5 0603                B   134    				ld b,3
001EC7 11 45 4C 00         B   135    				ld de,yes_txt+1
001ECB CD C6 11 00         B   136    				call os_compare_strings
001ECF C9                  B   137    				ret
                           B   138    			
                           B   139    			
001ED0                     B   140    show_packed_text_and_cr
                           B   141    			
001ED0 CD CE 13 00         B   142    				call os_show_packed_text
001ED4 CD 97 13 00         B   143    				call os_new_line
001ED8 C9                  B   144    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  70


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\format.asm
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
001ED9                     B   148    form_dev_warn1
                           B   149    
001ED9 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
001EE0                     B   152    form_dev_warn2
                           B   153    
001EE0 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
001EE8 9700 
                           B   155    
001EEA                     B   156    formatting_txt
                           B   157    
001EEA 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
001EF2 74696E67 2E2E2000 
                           B   159    
001EFA 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
001EFF 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
001F07 00 
                           B   163    
001F08                     B   164    default_label	
                           B   165    
001F08 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
001F10 534B00 
                           B   167    
001F13 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00005990            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001F18 CD 22 1B 00         B     5    os_cmd_h		call get_start_and_end			001F1C 22 3E 53 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
001F20 CD 10 1B 00         B     8    				call test_mem_range
001F24 DA CC 15 00         B     9    				jp c,os_range_error				                           B    10    			
001F28 AF                  B    11    				xor a
001F29 32 C5 1F 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
001F2D 2A 3E 53 00         B    14    				ld hl,(find_hexstringascii)
001F31 0600                B    15    				ld b,0
001F33 7E                  B    16    h_lfascii		ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  71


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\h.asm
001F34 B7                  B    17    				or a
001F35 28 28               B    18    				jr z,h_no_text					001F37 FE22                B    19    				cp 022h
001F39 28 03               B    20    				jr z,h_found_quote
001F3B 23                  B    21    				inc hl
001F3C 18 F5               B    22    				jr h_lfascii
001F3E 23                  B    23    h_found_quote	inc hl
001F3F 22 3E 53 00         B    24    				ld (find_hexstringascii),hl
001F43 7E                  B    25    h_fasc_len		ld a,(hl)
001F44 B7                  B    26    				or a
001F45 CA D0 15 00         B    27    				jp z,os_no_args_error			001F49 FE22                B    28    				cp 022h
001F4B 28 04               B    29    				jr z,h_startas
001F4D 23                  B    30    				inc hl
001F4E 04                  B    31    				inc b
001F4F 18 F2               B    32    				jr h_fasc_len
                           B    33    
001F51 78                  B    34    h_startas		ld a,b
001F52 B7                  B    35    				or a
001F53 CA D0 15 00         B    36    				jp z,os_no_args_error			001F57 3E01                B    37    				ld a,1
001F59 32 C5 1F 00         B    38    				ld (h_ascii_mode),a
001F5D 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
001F5F 2A 3E 53 00         B    42    h_no_text		ld hl,(find_hexstringascii)
001F63 0600                B    43    				ld b,0							001F65 CD 4B 1B 00         B    44    cntfbyts		call hexword_or_bust			001F69 28 04               B    45    				jr z,gthexstr
001F6B 04                  B    46    				inc b
001F6C 23                  B    47    				inc hl
001F6D 18 F6               B    48    				jr cntfbyts
001F6F 78                  B    49    gthexstr		ld a,b
001F70 B7                  B    50    				or a
001F71 CA D0 15 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
001F75                     B    54    h_start_search
                           B    55    	
001F75 DD2A 32 53 00       B    56    				ld ix,(cmdop_start_address)		001F7A DDE5                B    57    fndloop1		push ix
001F7C FDE1                B    58    				pop iy
001F7E 48                  B    59    				ld c,b							001F7F 2A 3E 53 00         B    60    				ld hl,(find_hexstringascii)
001F83 3A C5 1F 00         B    61    fcmloop			ld a,(h_ascii_mode)
001F87 B7                  B    62    				or a
001F88 28 08               B    63    				jr z,h_hex
001F8A FD7E00              B    64    				ld a,(iy)
001F8D BE                  B    65    				cp (hl)
001F8E 20 23               B    66    				jr nz,nofmatch
001F90 18 0A               B    67    				jr h_matched
001F92 CD 83 10 00         B    68    h_hex			call ascii_to_hexword			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  72


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\h.asm
001F96 FD7E00              B    69    				ld a,(iy)
001F99 BB                  B    70    				cp e
001F9A 20 17               B    71    				jr nz,nofmatch
001F9C FD23                B    72    h_matched		inc iy
001F9E 23                  B    73    				inc hl
001F9F 0D                  B    74    				dec c
001FA0 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
001FA2 DDE5                B    77    				push ix							001FA4 D1                  B    78    				pop de							001FA5 DDE5                B    79    				push ix
001FA7 C5                  B    80    				push bc
001FA8 CD D7 12 00         B    81    				call os_show_hex_address
001FAC CD 97 13 00         B    82    				call os_new_line
001FB0 C1                  B    83    				pop bc
001FB1 DDE1                B    84    				pop ix
                           B    85    				
001FB3 DDE5                B    86    nofmatch		push ix
001FB5 DD23                B    87    				inc ix
001FB7 D1                  B    88    				pop de
001FB8 2A 35 53 00         B    89    				ld hl,(cmdop_end_address)
001FBC AF                  B    90    				xor a
001FBD ED52                B    91    				sbc hl,de
001FBF 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
001FC1 3E20                B    94    				ld a,020h						001FC3 B7                  B    95    				or a
001FC4 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
001FC5 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001FC6                     B     5    os_cmd_help		
001FC6 AF                  B     6    				xor a
001FC7 32 2E 53 00         B     7    				ld (os_linecount),a
                           B     8    				
001FCB 21 5E 4D 00         B     9    				ld hl,packed_help1
001FCF CD CE 13 00         B    10    show_page		call os_show_packed_text
001FD3 E5                  B    11    				push hl
001FD4 CD 97 13 00         B    12    				call os_new_line
001FD8 E1                  B    13    				pop hl
001FD9 23                  B    14    				inc hl						;sk
001FDA 7E                  B    15    				ld a,(hl)
001FDB FEFF                B    16    				cp 0ffh						;la
001FDD 28 09               B    17    				jr z,last_help_page
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  73


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\help.asm
                           B    18    				
001FDF CD 9D 11 00         B    19    				call os_count_lines
001FE3 78                  B    20    				ld a,b
001FE4 FE79                B    21    				cp 'y'
001FE6 28 E7               B    22    				jr z,show_page
                           B    23    
001FE8                     B    24    last_help_page
001FE8 AF                  B    25    				xor a
001FE9 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
001FEA                     B     5    os_cmd_gtr
                           B     6    
001FEA CD 4B 1B 00         B     7    				call hexword_or_bust			001FEE CA B8 15 00         B     8    				jp z,os_no_start_addr
001FF2 23                  B     9    fndquot1		inc hl
001FF3 7E                  B    10    				ld a,(hl)
001FF4 B7                  B    11    				or a
001FF5 CA D0 15 00         B    12    				jp z,os_no_args_error
001FF9 FE22                B    13    				cp 022h							001FFB 20 F5               B    14    				jr nz,fndquot1
001FFD 23                  B    15    				inc hl
001FFE E5                  B    16    				push hl
001FFF 7E                  B    17    fndquot2		ld a,(hl)
002000 23                  B    18    				inc hl
002001 B7                  B    19    				or a
002002 28 15               B    20    				jr z,noquot2
002004 FE22                B    21    				cp 022h							002006 20 F7               B    22    				jr nz,fndquot2
002008 E1                  B    23    				pop hl
                           B    24    					
002009 7E                  B    25    wmbalp			ld a,(hl)						00200A FE22                B    26    				cp 022h
00200C 28 09               B    27    				jr z,os_gtrdn					00200E FE7D                B    28    				cp 07dh
002010 28 01               B    29    				jr z,skpnasc
002012 12                  B    30    				ld (de),a
002013 13                  B    31    skpnasc			inc de
002014 23                  B    32    				inc hl
002015 18 F2               B    33    				jr wmbalp
002017 AF                  B    34    os_gtrdn		xor a
002018 C9                  B    35    				ret	
                           B    36    				
002019 E1                  B    37    noquot2			pop hl							00201A 3E12                B    38    				ld a,012h
00201C B7                  B    39    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  74


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\gtr.asm
00201D C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
00201E                     B     5    os_cmd_lb
                           B     6    	
00201E CD 45 16 00         B     7    				call os_check_volume_format	
002022 C0                  B     8    				ret nz
                           B     9    				
002023 CD 94 1C 00         B    10    				call filename_or_bust			002027 CD D8 15 00         B    11    				call os_find_file				00202B C0                  B    12    				ret nz
00202C ED53 8F 59 00       B    13    				ld (filesize_cache),de			002031 2A 87 52 00         B    14    				ld hl,(default_load_addr)
002035 22 8C 59 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002039 2A EB 53 00         B    17    				ld hl,(os_args_loc)
00203D CD 8D 0F 00         B    18    				call os_next_arg
                           B    19    
002041 CD 4B 1B 00         B    20    				call hexword_or_bust			002045 28 05               B    21    				jr z,os_lbnao					002047 ED53 8C 59 00       B    22    				ld (data_load_addr),de
                           B    23    
00204C ED5B 8C 59 00       B    24    os_lbnao		ld de,(data_load_addr)			002051 2A 94 52 00         B    25    				ld hl,(sys_ram_high)			002055 2B                  B    26    				dec hl
002056 AF                  B    27    				xor a
002057 ED52                B    28    				sbc hl,de
002059 38 04               B    29    				jr c,os_lbprok
00205B 3E26                B    30    				ld a,026h						00205D B7                  B    31    				or a
00205E C9                  B    32    				ret
                           B    33    				
00205F 2A 8C 59 00         B    34    os_lbprok		ld hl,(data_load_addr)			002063 CD 07 16 00         B    35    				call os_read_bytes_from_file
002067 C0                  B    36    				ret nz
                           B    37    			
002068                     B    38    report_bytes_loaded
                           B    39    
002068 21 84 48 00         B    40    				ld hl,os_hex_prefix_txt			00206C CD 0C 0F 00         B    41    				call os_print_string			                           B    42    				
002070 11 91 59 00         B    43    				ld de,filesize_cache+2			002074 21 99 53 00         B    44    				ld hl,output_line
002078 0603                B    45    				ld b,3
00207A CD 41 10 00         B    46    				call n_hexbytes_to_ascii
00207E 3600                B    47    				ld (hl),0	
002080 0605                B    48    				ld b,5							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  75


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\lb.asm
002082 CD 0D 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002086 21 EC 4E 00         B    51    				ld hl,bytes_loaded_msg			00208A CD CE 13 00         B    52    				call os_show_packed_text
                           B    53    				
00208E 21 E3 48 00         B    54    				ld hl,to_txt					002092 CD 0C 0F 00         B    55    				call os_print_string
                           B    56    
002096 21 84 48 00         B    57    				ld hl,os_hex_prefix_txt			00209A CD 0C 0F 00         B    58    				call os_print_string	
                           B    59    
00209E ED5B 8C 59 00       B    60    				ld de,(data_load_addr)			0020A3 CD D7 12 00         B    61    				call os_show_hex_address
                           B    62    
0020A7 CD 97 13 00         B    63    				call os_new_line
0020AB AF                  B    64    				xor a
0020AC C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       0000598C            B    69    data_load_addr	equ scratch_pad
       0000598F            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
0020AD CD 4B 1B 00         B     7    os_cmd_m		call hexword_or_bust			0020B1 28 05               B     8    				jr z,m_no_hex					0020B3 ED53 2F 53 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
0020B8 0610                B    11    m_no_hex		ld b,16							0020BA C5                  B    12    smbllp			push bc							                           B    13    				
0020BB 21 F4 20 00         B    14    				ld hl,colon_cmd_prefix			0020BF CD 0C 0F 00         B    15    				call os_print_string
0020C3 ED5B 2F 53 00       B    16    				ld de,(mem_mon_addr)
0020C8 CD D7 12 00         B    17    				call os_show_hex_address
                           B    18    
0020CC 21 99 53 00         B    19    				ld hl,output_line
0020D0 0610                B    20    				ld b,bytes_per_line				0020D2 3620                B    21    mmbllp			ld (hl),' '
0020D4 23                  B    22    				inc hl
0020D5 1A                  B    23    				ld a,(de)	
0020D6 CD 4F 10 00         B    24    				call hexbyte_to_ascii
0020DA 13                  B    25    				inc de
0020DB 10 F5               B    26    				djnz mmbllp
                           B    27    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  76


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\m.asm
0020DD ED53 2F 53 00       B    28    				ld (mem_mon_addr),de
0020E2 360B                B    29    				ld (hl),11
0020E4 23                  B    30    				inc hl
0020E5 3600                B    31    				ld (hl),0
0020E7 21 99 53 00         B    32    				ld hl,output_line
0020EB CD 0C 0F 00         B    33    				call os_print_string
0020EF C1                  B    34    				pop bc
0020F0 10 C8               B    35    				djnz smbllp
                           B    36    				
0020F2 AF                  B    37    				xor a
0020F3 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
0020F4 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0020F7                     B     5    os_cmd_md
                           B     6    	
0020F7 CD 45 16 00         B     7    				call os_check_volume_format	
0020FB C0                  B     8    				ret nz
                           B     9    			
0020FC CD 94 1C 00         B    10    				call filename_or_bust
                           B    11    				
002100 C3 85 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002104                     B     5    os_cmd_r	
002104 DD21 9D 52 00       B     6    				ld ix,store_a1					002109 21 AE 21 00         B     7    				ld hl,register_txt
00210D CD 0C 0F 00         B     8    rcmdloop2		call os_print_string
002111 7E                  B     9    rcmdloop		ld a,(hl)
002112 FE01                B    10    				cp 1
002114 28 0B               B    11    				jr z,showbyte
002116 FE02                B    12    				cp 2
002118 28 15               B    13    				jr z,showword16
00211A FE03                B    14    				cp 3
00211C 28 2E               B    15    				jr z,showaddr
00211E 23                  B    16    				inc hl
00211F 18 F0               B    17    				jr rcmdloop
                           B    18    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  77


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\r.asm
002121 DD7E00              B    19    showbyte		ld a,(ix)
002124 DD23                B    20    				inc ix
002126 DDE5                B    21    				push ix
002128 E5                  B    22    				push hl
002129 CD EB 12 00         B    23    				call os_show_hex_byte
00212D 18 2A               B    24    				jr showreg
                           B    25    
00212F DD7E01              B    26    showword16		ld a,(ix+1)
002132 DDE5                B    27    				push ix
002134 E5                  B    28    				push hl
002135 CD EB 12 00         B    29    				call os_show_hex_byte
002139 E1                  B    30    				pop hl
00213A DDE1                B    31    				pop ix
00213C DD7E00              B    32    				ld a,(ix)
00213F DD23                B    33    				inc ix
002141 DD23                B    34    				inc ix
002143 DDE5                B    35    				push ix
002145 E5                  B    36    				push hl
002146 CD EB 12 00         B    37    				call os_show_hex_byte
00214A 18 0D               B    38    				jr showreg
                           B    39    
00214C DD1700              B    40    showaddr		ld de,(ix)
00214F ED3203              B    41    				lea ix,ix+3
002152 DDE5                B    42    				push ix
002154 E5                  B    43    				push hl
002155 CD D7 12 00         B    44    				call os_show_hex_address
002159 E1                  B    45    showreg			pop hl
00215A DDE1                B    46    				pop ix
00215C 23                  B    47    				inc hl
00215D 7E                  B    48    				ld a,(hl)
00215E B7                  B    49    				or a
00215F 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002161 CD 97 13 00         B    52    				call os_new_line				002165 21 12 22 00         B    53    				ld hl,flag_txt
002169 CD BF 12 00         B    54    				call os_copy_to_output_line
00216D 21 9D 53 00         B    55    				ld hl,output_line+4
002171 01050000            B    56    				ld bc,5
002175 3A C0 52 00         B    57    				ld a,(store_f)
002179 CB77                B    58    				bit 6,a							00217B 28 02               B    59    				jr z,zfzero
00217D 3631                B    60    				ld (hl),'1'
00217F 09                  B    61    zfzero			add hl,bc
002180 CB47                B    62    				bit 0,a							002182 28 02               B    63    				jr z,cfzero
002184 3631                B    64    				ld (hl),'1'
002186 09                  B    65    cfzero			add hl,bc
002187 CB7F                B    66    				bit 7,a							002189 28 02               B    67    				jr z,sfzero
00218B 364D                B    68    				ld (hl),'M'
00218D 09                  B    69    sfzero			add hl,bc
00218E CB57                B    70    				bit 2,a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  78


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\r.asm
002190 28 02               B    71    				jr z,pfzero
002192 364F                B    72    				ld (hl),'O'
002194 09                  B    73    pfzero			add hl,bc
002195 23                  B    74    				inc hl
002196 CB67                B    75    				bit 4,a							002198 28 02               B    76    				jr z,iffzero
00219A 3631                B    77    				ld (hl),'1'
00219C                     B    78    iffzero			
00219C 01060000            B    79    				ld bc,6
0021A0 09                  B    80    				add hl,bc
0021A1 3A C1 52 00         B    81    				ld a,(store_adl)
0021A5 C630                B    82    				add a,30h
0021A7 77                  B    83    				ld (hl),a
0021A8 CD 02 13 00         B    84    				call os_print_output_line
0021AC AF                  B    85    				xor a
0021AD C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
0021AE 20413D00 01         B    91    register_txt		db ' A=',0,1
0021B3 20204243 3D0003     B    92    					db '  BC=',0,3
0021BA 20204445 3D0003     B    93    					db '  DE=',0,3
0021C1 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
0021C8 0B                  B    96    					db 11
                           B    97    
0021C9 27413D00 01         B    98    					db 027h,'A=',0,1
0021CE 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
0021D5 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
0021DC 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
0021E3 0B                  B   103    					db 11
                           B   104    
0021E4 2049583D 0003       B   105    					db ' IX=',0,3
0021EA 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
0021F0 0B                  B   108    					db 11
                           B   109    					
0021F1 2050433D 0003       B   110    					db ' PC=',0,3
0021F7 204C5350 3D0003     B   111    					db ' LSP=',0,3
0021FE 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002205 0B                  B   114    					db 11
                           B   115    					
002206 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
00220E 010000 
                           B   117    					
002211 0B                  B   118    					db 11
                           B   119    
002212 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
00221A 3D302053 463D5020 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  79


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\r.asm
002222 50563D45 20494646 
00222A 3D302041 444C3D30 
002232 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002235                     B     5    os_cmd_rd
                           B     6    
002235 CD 45 16 00         B     7    				call os_check_volume_format	
002239 C0                  B     8    				ret nz
                           B     9    				
00223A CD 94 1C 00         B    10    				call filename_or_bust
                           B    11    			
00223E C3 EF 16 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002242                     B     5    os_cmd_rn
                           B     6    	
002242 CD 45 16 00         B     7    				call os_check_volume_format	
002246 C0                  B     8    				ret nz
                           B     9    			
002247 CD 94 1C 00         B    10    				call filename_or_bust
00224B E5                  B    11    				push hl
00224C D1                  B    12    				pop de
00224D CD 8D 0F 00         B    13    				call os_next_arg
002251 7E                  B    14    				ld a,(hl)						002252 B7                  B    15    				or a
002253 20 04               B    16    				jr nz,rn_grfn
002255 3E1F                B    17    				ld a,01fh						002257 B7                  B    18    				or a
002258 C9                  B    19    				ret
                           B    20    
002259 EB                  B    21    rn_grfn			ex de,hl
00225A C3 D9 16 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
00225E                     B     5    os_cmd_sb
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  80


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\sb.asm
                           B     6    	
00225E CD 45 16 00         B     7    				call os_check_volume_format		002262 C0                  B     8    				ret nz
                           B     9    					
002263 CD 94 1C 00         B    10    				call filename_or_bust			002267 22 92 59 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
00226B 2A EB 53 00         B    13    				ld hl,(os_args_loc)
00226F CD 8D 0F 00         B    14    				call os_next_arg
002273 CD 4B 1B 00         B    15    				call hexword_or_bust			002277 CA B8 15 00         B    16    				jp z,os_no_start_addr			00227B ED53 8C 59 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002280 CD 4B 1B 00         B    19    				call hexword_or_bust			002284 CA BC 15 00         B    20    				jp z,os_no_filesize
002288 ED53 8F 59 00       B    21    				ld (sb_save_length),de
                           B    22    				
00228D 2A 92 59 00         B    23    				ld hl,(sb_save_name_addr)		002291 CD 17 16 00         B    24    				call os_create_file
002295 28 18               B    25    				jr z,os_sfapp
002297 FEC9                B    26    				cp 0c9h							002299 C0                  B    27    				ret nz			
00229A 21 25 4D 00         B    28    				ld hl,save_append_msg			00229E CD CE 13 00         B    29    				call os_show_packed_text
0022A2 CD 75 36 00         B    30    				call os_wait_key_press
0022A6 3E79                B    31    				ld a,'y'
0022A8 B8                  B    32    				cp b
0022A9 28 04               B    33    				jr z,os_sfapp
0022AB 3E2C                B    34    				ld a,2ch						0022AD B7                  B    35    				or a
0022AE C9                  B    36    				ret
                           B    37    			
0022AF 2A 92 59 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		0022B3 DD2A 8C 59 00       B    39    				ld ix,(sb_save_addr)			0022B8 ED5B 8F 59 00       B    40    				ld de,(sb_save_length)			0022BD CD 2D 16 00         B    41    				call os_write_bytes_to_file
0022C1 C0                  B    42    				ret nz	
                           B    43    				
0022C2 3E20                B    44    				ld a,020h						0022C4 B7                  B    45    				or a
0022C5 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       0000598C            B    51    sb_save_addr		equ scratch_pad
       0000598F            B    52    sb_save_length		equ scratch_pad+3
       00005992            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  81


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\rx.asm
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00005A8C            B     6    buffer_addr				 equ os_max_addr		       0000598C            B     7    rx_buffer_ptr			 equ scratch_pad
       0000598F            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
0022C6 7E                  B    11    os_cmd_rx		ld a,(hl)						0022C7 B7                  B    12    				or a
0022C8 CA B0 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
0022CC 3E3E                B    15    				ld a,'>'						0022CE BE                  B    16    				cp (hl)
0022CF C2 94 23 00         B    17    				jp nz,rx_nrs
0022D3 23                  B    18    				inc hl
0022D4 3E20                B    19    				ld a,' '
0022D6 BE                  B    20    				cp (hl)
0022D7 2B                  B    21    				dec hl
0022D8 C2 94 23 00         B    22    				jp nz,rx_nrs
                           B    23    				
0022DC CD 45 16 00         B    24    				call os_check_volume_format		0022E0 C0                  B    25    				ret nz		
                           B    26    				
0022E1 112A0000            B    27    				ld de,02ah						0022E5 ED53 17 51 00       B    28    				ld (serial_filename),de			0022EA CD 98 24 00         B    29    				call rx_get_header
0022EE C0                  B    30    				ret nz
0022EF CD 34 38 00         B    31    				call s_holdack					                           B    32    				
0022F3 21 2B 51 00         B    33    				ld hl,serial_fileheader			0022F7 CD 17 16 00         B    34    				call os_create_file
0022FB C2 72 23 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
0022FF 21 45 4D 00         B    37    				ld hl,ser_recsave_msg
002303 CD CE 13 00         B    38    				call os_show_packed_text
                           B    39    				
002307 2A 3B 51 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	00230B 22 8F 59 00         B    41    				ld (serial_file_length_cache),h
00230F 21 8C 5A 00         B    42    				ld hl,buffer_addr
002313 22 8C 59 00         B    43    				ld (rx_buffer_ptr),hl
002317 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002319 CD 1C 38 00         B    46    rx_lnb			call s_goodack
00231D CD C6 37 00         B    47    				call s_getblock
002321 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002323 F5                  B    50    				push af							002324 CD 2D 38 00         B    51    				call s_badack					002328 21 2B 51 00         B    52    				ld hl,serial_fileheader			00232C CD AD 16 00         B    53    				call os_erase_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  82


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\rx.asm
002330 F1                  B    54    				pop af
002331 C9                  B    55    				ret
                           B    56    
002332 CD 34 38 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002336 21 8C 57 00         B    59    				ld hl,sector_buffer
00233A ED5B 8C 59 00       B    60    				ld de,(rx_buffer_ptr)
00233F 01000100            B    61    				ld bc,256
002343 EDB0                B    62    				ldir
002345 ED53 8C 59 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
00234A 2A 3B 51 00         B    65    				ld hl,(serial_fileheader+16)
00234E 11000100            B    66    				ld de,256
002352 AF                  B    67    				xor a
002353 ED52                B    68    				sbc hl,de
002355 22 3B 51 00         B    69    				ld (serial_fileheader+16),hl
002359 28 1E               B    70    				jr z,rx_lbr
00235B 38 1C               B    71    				jr c,rx_lbr
00235D 10 BA               B    72    				djnz rx_lnb
                           B    73    
00235F 11008000            B    74    				ld de,buffer_blocks*256
002363 DD21 8C 5A 00       B    75    				ld ix,buffer_addr
002368 21 2B 51 00         B    76    				ld hl,serial_fileheader
00236C CD 2D 16 00         B    77    				call os_write_bytes_to_file
002370 28 95               B    78    				jr z,rx_rnblk
002372 F5                  B    79    rxwtd_fail		push af
002373 CD 2D 38 00         B    80    				call s_badack
002377 F1                  B    81    				pop af
002378 C9                  B    82    				ret
                           B    83    				
002379 CD 1C 38 00         B    84    rx_lbr			call s_goodack
00237D ED5B 8F 59 00       B    85    				ld de,(serial_file_length_cache
002382 DD21 8C 5A 00       B    86    				ld ix,buffer_addr
002387 21 2B 51 00         B    87    				ld hl,serial_fileheader
00238B CD 2D 16 00         B    88    				call os_write_bytes_to_file
00238F C0                  B    89    				ret nz	
                           B    90    				
002390 3E20                B    91    rxtd_done		ld a,020h						002392 B7                  B    92    				or a
002393 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
002394 3E21                B    98    rx_nrs			ld a,'!'						002396 BE                  B    99    				cp (hl)							002397 C2 42 24 00         B   100    				jr nz,notrxe
00239B 23                  B   101    				inc hl
00239C 3E20                B   102    				ld a,' '
00239E BE                  B   103    				cp (hl)
00239F 2B                  B   104    				dec hl
0023A0 C2 42 24 00         B   105    				jr nz,notrxe
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  83


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\rx.asm
0023A4 112A0000            B   106    				ld de,02ah						0023A8 ED53 17 51 00       B   107    				ld (serial_filename),de			0023AD CD 98 24 00         B   108    				call rx_get_header
0023B1 C0                  B   109    				ret nz
0023B2 21 3B 4D 00         B   110    				ld hl,ser_rec2_msg
0023B6 CD CE 13 00         B   111    				call os_show_packed_text
0023BA CD 1C 38 00         B   112    				call s_goodack
0023BE 3E01                B   113    				ld a,1							0023C0 32 2A 51 00         B   114    				ld (serial_timeout),a
0023C4 CD C6 37 00         B   115    				call s_getblock					0023C8 28 07               B   116    				jr z,rxe_fblok
0023CA F5                  B   117    rxe_badblock	push af							0023CB CD 2D 38 00         B   118    				call s_badack					0023CF F1                  B   119    				pop af
0023D0 C9                  B   120    				ret
                           B   121    	
0023D1 2A 8E 57 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
0023D5 1150524F            B   123    				ld de,04f5250h					0023D9 AF                  B   124    				xor a
0023DA 28 04               B   125    				jr z,rxe_ok
0023DC 3E1A                B   126    				ld a,1ah						0023DE B7                  B   127    				or a
0023DF C9                  B   128    				ret
0023E0 2A 91 57 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			0023E4 22 0E 51 00         B   130    				ld (serial_ez80_address),hl
0023E8 01000100            B   131    				ld bc,256						0023EC DD21 2B 51 00       B   132    				ld ix,serial_fileheader
0023F1 AF                  B   133    				xor a
0023F2 DDB612              B   134    				or (ix+18)						0023F5 20 0A               B   135    				jr nz,mtones
0023F7 DDB611              B   136    				or a,(ix+17)					0023FA 20 05               B   137    				jr nz,mtones
0023FC 0600                B   138    				ld b,0
0023FE DD4E10              B   139    				ld c,(ix+16)					002401 21 8C 57 00         B   140    mtones			ld hl,sector_buffer				002405 ED5B 0E 51 00       B   141    				ld de,(serial_ez80_address)		00240A EDB0                B   142    				ldir
                           B   143    				
00240C D5                  B   144    				push de
00240D CD 1C 38 00         B   145    				call s_goodack		
002411 DDE1                B   146    				pop ix							002413 2A 3B 51 00         B   147    				ld hl,(serial_fileheader+16)	002417 11000100            B   148    				ld de,256
00241B AF                  B   149    				xor a
00241C ED52                B   150    				sbc hl,de						00241E 28 18               B   151    				jr z,rxe_done
002420 38 16               B   152    				jr c,rxe_done
002422 EB                  B   153    				ex de,hl
002423 ED53 3B 51 00       B   154    				ld (serial_fileheader+16),de	002428 DD2A 0E 51 00       B   155    				ld ix,(serial_ez80_address)
00242D 01000100            B   156    				ld bc,256
002431 DD09                B   157    				add ix,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  84


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\rx.asm
002433 CD 84 37 00         B   158    				call s_gbloop					002437 C0                  B   159    				ret nz
002438 E1                  B   160    rxe_done		pop hl							002439 CD FE 2D 00         B   161    				call enable_nmi					00243D 2A 0E 51 00         B   162    				ld hl,(serial_ez80_address)
002441 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
002442 CD DF 24 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
002446 0610                B   169    				ld b,16							002448 11 17 51 00         B   170    				ld de,serial_filename
00244C CD E5 11 00         B   171    				call os_copy_ascii_run			002450 79                  B   172    				ld a,c
002451 32 29 51 00         B   173    				ld (serial_fn_length),a
002455 CD 99 0F 00         B   174    				call os_scan_for_space
                           B   175    				
002459 CD 4B 1B 00         B   176    				call hexword_or_bust			00245D CA B8 15 00         B   177    				jp z,os_no_start_addr			002461 ED53 8C 59 00       B   178    				ld (data_load_addr),de			002466 2A 94 52 00         B   179    				ld hl,(sys_ram_high)			00246A 2B                  B   180    				dec hl
00246B AF                  B   181    				xor a
00246C ED52                B   182    				sbc hl,de
00246E 38 04               B   183    				jr c,os_prok
002470 3E26                B   184    				ld a,026h						002472 B7                  B   185    				or a
002473 C9                  B   186    				ret
                           B   187    
002474 CD 98 24 00         B   188    os_prok			call rx_get_header
002478 C0                  B   189    				ret nz
                           B   190    
002479 21 3B 4D 00         B   191    				ld hl,ser_rec2_msg
00247D CD CE 13 00         B   192    				call os_show_packed_text
                           B   193    	
002481 2A 8C 59 00         B   194    				ld hl,(data_load_addr)			002485 CD 72 37 00         B   195    				call serial_receive_file
002489 C0                  B   196    				ret nz							                           B   197    
00248A ED5B 3B 51 00       B   198    				ld de,(serial_fileheader+16)	00248F ED53 8F 59 00       B   199    				ld (filesize_cache),de
002494 C3 68 20 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
002498                     B   204    rx_get_header
002498 21 37 4D 00         B   205    				ld hl,ser_rec_msg
00249C CD CE 13 00         B   206    				call os_show_packed_text
                           B   207    				
0024A0 3E00                B   208    				ld a,0
0024A2 32 4C 51 00         B   209    				ld (anim_wait_count),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  85


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\rx.asm
0024A6 3A 4C 51 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0024AA 3C                  B   211    				inc a
0024AB 47                  B   212    				ld b,a
0024AC FE06                B   213    				cp 6
0024AE 20 07               B   214    				jr nz,notsix
0024B0 0E20                B   215    				ld c,' '
0024B2 0605                B   216    				ld b,5
0024B4 AF                  B   217    				xor a
0024B5 18 02               B   218    				jr mcharset
0024B7 0E2E                B   219    notsix			ld c,'.'
0024B9 32 4C 51 00         B   220    mcharset		ld (anim_wait_count),a
0024BD CD FD 19 00         B   221    				call os_print_multiple_chars
0024C1 CD 55 0F 00         B   222    				call home_cursor
                           B   223    				
0024C5 21 17 51 00         B   224    				ld hl,serial_filename			0024C9 3E01                B   225    				ld a,1							0024CB CD D7 36 00         B   226    				call serial_get_header
0024CF C8                  B   227    				ret z
0024D0 FE83                B   228    				cp 083h							0024D2 C0                  B   229    				ret nz
0024D3 CD BC 36 00         B   230    				call os_get_key_press
0024D7 FE76                B   231    				cp 076h
0024D9 20 CB               B   232    				jr nz,get_hdr_loop
0024DB 3E80                B   233    				ld a,080h						0024DD B7                  B   234    notsto			or a
0024DE C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
0024DF                     B   240    clear_serial_filename
                           B   241    
0024DF E5                  B   242    				push hl							0024E0 21 17 51 00         B   243    				ld hl,serial_filename
0024E4 01100000            B   244    				ld bc,16
0024E8 AF                  B   245    				xor a
0024E9 CD 26 15 00         B   246    				call os_bchl_memfill
0024ED E1                  B   247    				pop hl
0024EE C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
0024EF 7E                  B     5    os_cmd_tx		ld a,(hl)						0024F0 B7                  B     6    				or a
0024F1 CA B0 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0024F5 E5                  B     9    				push hl							0024F6 21 17 51 00         B    10    				ld hl,serial_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  86


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\tx.asm
0024FA 01100000            B    11    				ld bc,16
0024FE AF                  B    12    				xor a
0024FF CD 26 15 00         B    13    				call os_bchl_memfill
002503 E1                  B    14    				pop hl
                           B    15    			
002504 0610                B    16    				ld b,16							002506 11 17 51 00         B    17    				ld de,serial_filename
00250A CD E5 11 00         B    18    				call os_copy_ascii_run			00250E 79                  B    19    				ld a,c
00250F 32 29 51 00         B    20    				ld (serial_fn_length),a
002513 CD 99 0F 00         B    21    				call os_scan_for_space
                           B    22    							
002517 CD 4B 1B 00         B    23    				call hexword_or_bust			00251B CA B8 15 00         B    24    				jp z,os_no_start_addr			00251F ED53 0E 51 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
002524 CD 4B 1B 00         B    27    				call hexword_or_bust			002528 CA BC 15 00         B    28    				jp z,os_no_filesize
00252C ED53 11 51 00       B    29    				ld (serial_file_length),de
002531 21000000            B    30    				ld hl,0
002535 3E07                B    31    				ld a,07h						002537 B7                  B    32    				or a
002538 ED5A                B    33    				adc hl,de
00253A 28 1D               B    34    				jr z,s_error
                           B    35    				
00253C 21 40 4D 00         B    36    				ld hl,ser_send_msg
002540 CD CE 13 00         B    37    				call os_show_packed_text
                           B    38    			
002544 ED5B 11 51 00       B    39    				ld de,(serial_file_length)
002549 21 17 51 00         B    40    				ld hl,serial_filename			00254D DD2A 0E 51 00       B    41    				ld ix,(serial_ez80_address)
002552 CD 3B 38 00         B    42    				call serial_send_file
002556 C0                  B    43    				ret nz			
                           B    44    			
002557 3E20                B    45    				ld a,020h						002559 B7                  B    46    s_error			or a
00255A C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
00255B CD 4B 1B 00         B     5    os_cmd_t		call hexword_or_bust			00255F 28 05               B     6    				jr z,t_no_hex					002561 ED53 2F 53 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
002566 0610                B     9    t_no_hex		ld b,16
002568 C5                  B    10    smaalp			push bc
                           B    11    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  87


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\t.asm
002569 21 AC 25 00         B    12    				ld hl,gtr_cmd_prefix			00256D CD 0C 0F 00         B    13    				call os_print_string
002571 ED5B 2F 53 00       B    14    				ld de,(mem_mon_addr)
002576 CD D7 12 00         B    15    				call os_show_hex_address
                           B    16    
00257A 21 99 53 00         B    17    				ld hl,output_line
00257E 3620                B    18    				ld (hl),' '
002580 23                  B    19    				inc hl
002581 3622                B    20    				ld (hl),022h
002583 0610                B    21    				ld b,16
002585 23                  B    22    mabllp			inc hl
002586 1A                  B    23    				ld a,(de)	
002587 FE20                B    24    				cp 020h
002589 38 04               B    25    				jr c,chchar
00258B FE7F                B    26    				cp 07fh
00258D 38 02               B    27    				jr c,nchchar
00258F 3E7C                B    28    chchar			ld a,07ch
002591 77                  B    29    nchchar			ld (hl),a
002592 13                  B    30    				inc de
002593 10 F0               B    31    				djnz mabllp
                           B    32    
002595 ED53 2F 53 00       B    33    				ld (mem_mon_addr),de
00259A 23                  B    34    				inc hl
00259B 3622                B    35    				ld (hl),022h
00259D 23                  B    36    				inc hl
00259E 360B                B    37    				ld (hl),11
0025A0 23                  B    38    				inc hl
0025A1 3600                B    39    				ld (hl),0
0025A3 CD 02 13 00         B    40    				call os_print_output_line
0025A7 C1                  B    41    				pop bc
0025A8 10 BE               B    42    				djnz smaalp
0025AA AF                  B    43    				xor a
0025AB C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0025AC 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0025AF                     B     5    os_cmd_remount
                           B     6    
0025AF 3E00                B     7    				ld a,0							0025B1 CD E2 17 00         B     8    				call os_mount_volumes
0025B5 CD 97 13 00         B     9    				call os_new_line
0025B9 AF                  B    10    				xor a
0025BA C9                  B    11    				ret
                           B    12    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  88


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\mount.asm
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
0025BB                     B     5    os_cmd_vers
                           B     6    
0025BB 21 86 48 00         B     7    				ld hl,os_version_txt
0025BF CD 0C 0F 00         B     8    				call os_print_string
                           B     9    			
0025C3 CD B0 33 00         B    10    				call hwsc_get_version
0025C7 D5                  B    11    				push de
0025C8 EB                  B    12    				ex de,hl
0025C9 CD F6 12 00         B    13    				call os_show_hex_word
                           B    14    				
0025CD 21 A9 48 00         B    15    				ld hl,fwd_slash_txt
0025D1 CD 0C 0F 00         B    16    				call os_print_string
                           B    17    				
0025D5 21 94 48 00         B    18    				ld hl,hw_version_txt
0025D9 CD 0C 0F 00         B    19    				call os_print_string
0025DD D1                  B    20    				pop de
0025DE CD F6 12 00         B    21    				call os_show_hex_word
                           B    22    				
0025E2 CD 97 13 00         B    23    				call os_new_line
0025E6 CD 97 13 00         B    24    				call os_new_line	
0025EA AF                  B    25    				xor a
0025EB C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.03 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;----------------------------------------------
                           B     8    
0025EC                     B     9    os_cmd_exec
                           B    10    
0025EC 21 F7 53 00         B    11    				ld hl,in_script_flag			0025F0 CB46                B    12    				bit 0,(hl)
0025F2 28 02               B    13    				jr z,oktlscr
0025F4 AF                  B    14    				xor a
0025F5 C9                  B    15    				ret
0025F6 CBC6                B    16    oktlscr			set 0,(hl)
                           B    17    			
0025F8 2A EB 53 00         B    18    				ld hl,(os_args_loc)				0025FC 11 18 53 00         B    19    				ld de,script_fn					Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  89


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\exec.asm
002600 060D                B    20    				ld b,13
002602 CD E5 11 00         B    21    				call os_copy_ascii_run
002606 CD 15 1A 00         B    22    				call fs_get_dir_cluster			00260A ED53 F8 53 00       B    23    				ld (script_dir),de
                           B    24    				
00260F CD 45 16 00         B    25    				call os_check_volume_format	
002613 C0                  B    26    				ret nz
                           B    27    				
002614 21000000            B    28    				ld hl,0
002618 22 4D 54 00         B    29    				ld (script_file_offset),hl
                           B    30    				
                           B    31    			
00261C 3A 7C 54 00         B    32    scrp_loop		ld a,(key_mod_flags)			002620 E602                B    33    				and 2
002622 28 27               B    34    				jr z,noskip_script	
002624 1600                B    35    				ld d,0
002626 CD BC 36 00         B    36    chk_c			call os_get_key_press
00262A FE21                B    37    				cp 021h
00262C 20 1A               B    38    				jr nz,no_cpr
00262E 1619                B    39    wkend			ld d,25							002630 CD 5D 33 00         B    40    wkend2			call hwsc_wait_vrt				002634 CD BC 36 00         B    41    				call os_get_key_press		
002638 B7                  B    42    				or a
002639 20 F3               B    43    				jr nz,wkend
00263B 15                  B    44    				dec d
00263C 20 F2               B    45    				jr nz,wkend2
00263E 21 54 4D 00         B    46    				ld hl,script_aborted_msg
002642 CD CE 13 00         B    47    				call os_show_packed_text
002646 AF                  B    48    				xor a							002647 C9                  B    49    				ret
002648 15                  B    50    no_cpr			dec d
002649 20 DB               B    51    				jr nz,chk_c
                           B    52    			
                           B    53    			
00264B                     B    54    noskip_script
                           B    55    		
00264B 21 FB 53 00         B    56    				ld hl,script_buffer				00264F 11 47 53 00         B    57    				ld de,commandstring
002653 0651                B    58    				ld b,max_buffer_chars+1
002655 3E20                B    59    				ld a,020h						002657 77                  B    60    scrp_flp		ld (hl),a
002658 12                  B    61    				ld (de),a
002659 23                  B    62    				inc hl
00265A 13                  B    63    				inc de
00265B 10 FA               B    64    				djnz scrp_flp
                           B    65    				
00265D CD 15 1A 00         B    66    				call fs_get_dir_cluster			002661 D5                  B    67    				push de
002662 ED5B F8 53 00       B    68    				ld de,(script_dir)				002667 CD 21 1A 00         B    69    				call fs_update_dir_cluster
00266B 21 18 53 00         B    70    				ld hl,script_fn					00266F CD D0 44 00         B    71    				call fs_hl_to_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  90


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\exec.asm
002673 CD 71 3C 00         B    72    				call fs_open_file_command		002677 38 71               B    73    				jr c,pop_ret
002679 B7                  B    74    				or a
00267A 20 6E               B    75    				jr nz,pop_ret
00267C D1                  B    76    				pop de
00267D CD 21 1A 00         B    77    				call fs_update_dir_cluster		                           B    78    			
002681 11500000            B    79    				ld de,max_buffer_chars			002685 CD E9 15 00         B    80    				call os_set_load_length
002689 AF                  B    81    				xor a
00268A ED5B 4D 54 00       B    82    				ld de,(script_file_offset)		00268F CD F1 15 00         B    83    				call os_set_file_pointer
                           B    84    					
002693 21 FB 53 00         B    85    				ld hl,script_buffer				002697 CD 07 16 00         B    86    				call os_read_bytes_from_file
00269B B7                  B    87    				or a			
00269C 28 03               B    88    				jr z,scrp_ok					00269E FECC                B    89    				cp 0cch			
0026A0 C0                  B    90    				ret nz							                           B    91    				
0026A1 FD2A 4D 54 00       B    92    scrp_ok			ld iy,(script_file_offset)
0026A6 21 FB 53 00         B    93    				ld hl,script_buffer				0026AA 11 47 53 00         B    94    				ld de,commandstring
0026AE 3E50                B    95    				ld a,max_buffer_chars
0026B0 47                  B    96    				ld b,a
0026B1 7E                  B    97    scrp_cmd		ld a,(hl)
0026B2 FE20                B    98    				cp 020h
0026B4 38 07               B    99    				jr c,scrp_eol
0026B6 12                  B   100    				ld (de),a
0026B7 23                  B   101    				inc hl
0026B8 13                  B   102    				inc de
0026B9 FD23                B   103    				inc iy
0026BB 10 F4               B   104    				djnz scrp_cmd
                           B   105    				
0026BD AF                  B   106    scrp_eol		xor a
0026BE 12                  B   107    				ld (de),a						0026BF FD22 4D 54 00       B   108    				ld (script_file_offset),iy
0026C4 22 50 54 00         B   109    				ld (script_buffer_offset),hl
                           B   110    			
0026C8 CD 4A 0C 00         B   111    				call os_parse_cmd_chk_ps		                           B   112    				
0026CC FD2A 4D 54 00       B   113    				ld iy,(script_file_offset)		0026D1 2A 50 54 00         B   114    				ld hl,(script_buffer_offset)
0026D5 7E                  B   115    scrp_fnc		ld a,(hl)		
0026D6 B7                  B   116    				or a
0026D7 C8                  B   117    				ret z							0026D8 FE20                B   118    				cp 020h
0026DA 30 05               B   119    				jr nc,scrp_gnc					0026DC 23                  B   120    				inc hl		
0026DD FD23                B   121    				inc iy							0026DF 18 F4               B   122    				jr scrp_fnc
                           B   123    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  91


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\exec.asm
0026E1 FD22 4D 54 00       B   124    scrp_gnc		ld (script_file_offset),iy		0026E6 C3 1C 26 00         B   125    				jp scrp_loop	
                           B   126    			
                           B   127    			
                           B   128    			
0026EA D1                  B   129    pop_ret			pop de
0026EB C9                  B   130    				ret
                           B   131    				
                           B   132    			
                           B   133    ;----------------------------------------------
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0026EC                     B     7    os_cmd_ltn
                           B     8    
0026EC AF                  B     9    				xor a
0026ED C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0026EE                     B     5    os_cmd_pen
                           B     6    	
0026EE 0602                B     7    				ld b,2							0026F0 DD21 B9 50 00       B     8    				ld ix,current_pen
                           B     9    				
0026F5 CD 4B 1B 00         B    10    chpenlp			call hexword_or_bust			0026F9 28 0D               B    11    				jr z,pendone					0026FB 23                  B    12    				inc hl
0026FC DD7300              B    13    				ld (ix),e
0026FF DD7201              B    14    				ld (ix+1),d
002702 DD23                B    15    				inc ix
002704 DD23                B    16    				inc ix
002706 10 ED               B    17    				djnz chpenlp	
                           B    18    				
002708 CD 7E 0F 00         B    19    pendone			call os_refresh_screen
00270C AF                  B    20    				xor a
00270D C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  92


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\palette.asm
                           B     3    ;----------------------------------------------
                           B     4    
00270E                     B     5    os_cmd_palette
                           B     6    
00270E 0610                B     7    				ld b,16							002710 DD21 BD 50 00       B     8    				ld ix,pen_palette
                           B     9    				
002715 0E00                B    10    				ld c,0
002717 C5                  B    11    chcollp			push bc
002718 CD 4B 1B 00         B    12    				call hexword_or_bust			00271C C1                  B    13    				pop bc
00271D 28 0E               B    14    				jr z,colrdone					00271F 0C                  B    15    				inc c
002720 23                  B    16    				inc hl
002721 DD7300              B    17    				ld (ix),e
002724 DD7201              B    18    				ld (ix+1),d
002727 DD23                B    19    				inc ix
002729 DD23                B    20    				inc ix
00272B 10 EA               B    21    				djnz chcollp
                           B    22    			
00272D 79                  B    23    colrdone		ld a,c
00272E B7                  B    24    				or a
00272F 20 04               B    25    				jr nz,pal_ok
002731 3E81                B    26    				ld a,81h						002733 B7                  B    27    				or a
002734 C9                  B    28    				ret
002735 21 BD 50 00         B    29    pal_ok			ld hl,pen_palette
002739 CD 7F 2F 00         B    30    				call hswc_set_ui_colours	
00273D AF                  B    31    				xor a
00273E C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.04 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
00273F                     B    12    os_cmd_mouse
                           B    13    
00273F 3E64                B    14    				ld a,default_sample_rate
002741 32 A9 54 00         B    15    				ld (mouse_sample_rate),a
002745 3E03                B    16    				ld a,default_resolution
002747 32 AA 54 00         B    17    				ld (mouse_resolution),a
00274B 3EE6                B    18    				ld a,default_scaling
00274D 32 AB 54 00         B    19    				ld (mouse_scaling),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  93


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\mouse.asm
                           B    20    
002751 21 93 52 00         B    21    				ld hl,devices_connected
002755 CB8E                B    22    				res 1,(hl)
                           B    23    		
002757 CD C9 34 00         B    24    				call reset_mouse
00275B C0                  B    25    				ret nz
                           B    26    			
00275C AF                  B    27    				xor a
00275D 32 86 54 00         B    28    				ld (mouse_packet_index),a
002761 32 87 54 00         B    29    				ld (mouse_buttons),a
002765 21000000            B    30    				ld hl,0
002769 22 88 54 00         B    31    				ld (mouse_disp_x),hl
00276D 22 8B 54 00         B    32    				ld (mouse_disp_y),hl
                           B    33    
002771 21800200            B    34    				ld hl,window_width_pixels
002775 11E00100            B    35    				ld de,window_height_pixels
002779 CD 18 14 00         B    36    				call os_set_mouse_window
                           B    37    
00277D CD 84 2C 00         B    38    				call enable_ms_irq
                           B    39    
002781 21 93 52 00         B    40    				ld hl,devices_connected
002785 CBCE                B    41    				set 1,(hl)
002787 AF                  B    42    				xor a
002788 C9                  B    43    				ret				
                           B    44    				
                           B    45    ;----------------------------------------------
                           B    46    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
002789                     B     5    os_cmd_vmode
                           B     6    	
002789 CD 4B 1B 00         B     7    				call hexword_or_bust			00278D 28 78               B     8    				jr z,vm_no_data					00278F 7B                  B     9    				ld a,e
                           B    10    
002790 FE04                B    11    set_vmode		cp 4
002792 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
002794 2A F2 50 00         B    14    				ld hl,(font_addr)				002798 ED5B F8 50 00       B    15    				ld de,(video_window_address)
00279D ED4B F5 50 00       B    16    				ld bc,(font_length)
0027A2 EDB0                B    17    				ldir
                           B    18    								
0027A4 32 B8 50 00         B    19    				ld (video_mode),a
0027A8 21070000            B    20    				ld hl,7
0027AC 67                  B    21    				ld h,a
0027AD ED6C                B    22    				mlt hl
0027AF E5                  B    23    				push hl
0027B0 DDE1                B    24    				pop ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  94


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\vmode.asm
0027B2 11 0B 28 00         B    25    				ld de,mode_param_list
0027B6 DD19                B    26    				add ix,de
0027B8 21000000            B    27    				ld hl,0
0027BC 11000000            B    28    				ld de,0
0027C0 DD6E00              B    29    				ld l,(ix)
0027C3 DD6601              B    30    				ld h,(ix+1)
0027C6 DD5E02              B    31    				ld e,(ix+2)
0027C9 DD5603              B    32    				ld d,(ix+3)
0027CC DD4604              B    33    				ld b,(ix+4)
0027CF DDE5                B    34    				push ix
0027D1 CD 6C 2E 00         B    35    				call set_bitmap_parameters
0027D5 DDE1                B    36    				pop ix
0027D7 DD4605              B    37    				ld b,(ix+5)
0027DA DD4E06              B    38    				ld c,(ix+6)
0027DD CD D2 2E 00         B    39    				call set_charmap_parameters
                           B    40    				
0027E1 2A F8 50 00         B    41    				ld hl,(video_window_address)	0027E5 ED5B F2 50 00       B    42    				ld de,(font_addr)				0027EA ED4B F5 50 00       B    43    				ld bc,(font_length)				0027EF EDB0                B    44    				ldir
                           B    45    				
0027F1 CD 8B 2F 00         B    46    				call hwsc_clear_screen
                           B    47    				
0027F5 01080400            B    48    				ld bc,0408h
0027F9 CD A0 2E 00         B    49    				call set_font_parameters		                           B    50    				
0027FD AF                  B    51    				xor a
0027FE 32 DF 50 00         B    52    				ld (active_cursor_image),a		                           B    53    				
002802 C9                  B    54    				ret
                           B    55    
002803 3E88                B    56    vm_bad_range	ld a,88h
002805 B7                  B    57    				or a
002806 C9                  B    58    				ret
                           B    59    
002807 3E81                B    60    vm_no_data		ld a,81h
002809 B7                  B    61    				or a
00280A C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
00280B                     B    66    mode_param_list
                           B    67    
00280B 4001E001            B    68    				dw 640/2,480
00280F 00                  B    69    				db 00b
002810 503C                B    70    				db 80,60
                           B    71    				
002812 4001F000            B    72    				dw 640/2,240
002816 01                  B    73    				db 01b
002817 501E                B    74    				db 80,30
                           B    75    				
002819 A000E001            B    76    				dw 320/2,480
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  95


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\commands\vmode.asm
00281D 02                  B    77    				db 10b
00281E 283C                B    78    				db 40,60
                           B    79    				
002820 A000F000            B    80    				dw 320/2,240
002824 03                  B    81    				db 11b
002825 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002827                     B     5    os_cmd_font
                           B     6    	
002827 CD 45 16 00         B     7    				call os_check_volume_format	
00282B C0                  B     8    				ret nz
                           B     9    				
00282C CD 94 1C 00         B    10    				call filename_or_bust			002830 22 8C 59 00         B    11    				ld (scratch_pad),hl
                           B    12    
002834 CD 15 1A 00         B    13    				call fs_get_dir_cluster			002838 ED53 8F 59 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00283D CD A3 16 00         B    16    				call os_root_dir				002841 C0                  B    17    				ret nz
002842 21 72 28 00         B    18    				ld hl,fonts_fn
002846 CD 93 16 00         B    19    				call os_change_dir
00284A 20 1A               B    20    				jr nz,no_font
                           B    21    				
00284C 2A 8C 59 00         B    22    				ld hl,(scratch_pad)
002850 CD D8 15 00         B    23    				call os_find_file				002854 20 10               B    24    				jr nz,no_font
                           B    25    				
002856 11000700            B    26    				ld de,700h
00285A CD E9 15 00         B    27    				call os_set_load_length			                           B    28    
00285E 2A F2 50 00         B    29    				ld hl,(font_addr)				002862 CD 07 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
002866 F5                  B    32    no_font			push af
002867 ED5B 8F 59 00       B    33    				ld de,(scratch_pad+3)			00286C CD 21 1A 00         B    34    				call fs_update_dir_cluster
002870 F1                  B    35    				pop af
002871 C9                  B    36    				ret
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
002872 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           A  2898    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  96


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
002878 C9                  A  2899    os_cmd_unused	ret		; <- dummy command, sho
                           A  2900    
                           A  2901    
                           A  2902    ;----------------------------------------------
                           A  2903    
002879                     A  2904    os_get_mem_high
                           A  2905    
002879 2A 94 52 00         A  2906    		ld hl,(sys_ram_high)
00287D ED5B 97 52 00       A  2907    		ld de,(vram_a_high)
002882 ED4B 9A 52 00       A  2908    		ld bc,(vram_b_high)
002887 AF                  A  2909    		xor a
002888 C9                  A  2910    		ret
                           A  2911    								
                           A  2912    ;----------------------------------------------
                           A  2913    ; Drivers
                           A  2914    ;----------------------------------------------
                           A  2915    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  97


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
002889                     B    49    sd_card_driver				; label of driver c
                           B    50    
002889 C3 9D 28 00         B    51    	jp sdc_get_id			; $00 : init / get 
00288D C3 67 2A 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
002891 C3 B7 2A 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
002895 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
00289D                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
00289D 3E01                B    72    				ld a,1							00289F 32 ED 2B 00         B    73    				ld (sdc_sdc),a			
                           B    74    
0028A3 CD 34 2C 00         B    75    				call sdc_power_off				0028A7 CD 3F 2C 00         B    76    				call sdc_slow_clock				0028AB CD 0D 2C 00         B    77    				call sdc_select_card			                           B    78    
0028AF 11004000            B    79    				ld de,16384						0028B3 CD CB 33 00         B    80    				call hwsc_time_delay
                           B    81    				
0028B7 CD 29 2C 00         B    82    				call sdc_power_on				                           B    83    
0028BB 11830000            B    84    				ld de,131						0028BF CD CB 33 00         B    85    				call hwsc_time_delay
                           B    86    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  98


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
0028C3 CD 18 2C 00         B    87    				call sdc_deselect_card			                           B    88    	
0028C7 060A                B    89    				ld b,10							0028C9 CD A5 2B 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
0028CD 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
0028CF CD 0D 2C 00         B    93    				call sdc_select_card			                           B    94    	
0028D3 3E40                B    95    				ld a,040h						0028D5 01009500            B    96    				ld bc,09500h					0028D9 11000000            B    97    				ld de,00000h
0028DD CD 53 2B 00         B    98    				call sdc_send_command		 
0028E1 CD FE 2B 00         B    99    				call sdc_get_byte				0028E5 CD 78 2B 00         B   100    				call sdc_wait_ncr				0028E9 EE01                B   101    				xor 01h							0028EB C2 AC 2B 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
0028EF 01401F00            B   105    				ld bc,8000						0028F3 C5                  B   106    sdc_iwl			push bc							0028F4 3E77                B   107    				ld a,077h						0028F6 CD 4B 2B 00         B   108    				call sdc_send_command_null_args
0028FA CD FE 2B 00         B   109    				call sdc_get_byte				0028FE CD FE 2B 00         B   110    				call sdc_get_byte				002902 3E69                B   111    				ld a,069h						002904 CD 4B 2B 00         B   112    				call sdc_send_command_null_args
002908 CD FE 2B 00         B   113    				call sdc_get_byte
00290C C1                  B   114    				pop bc
00290D CD 78 2B 00         B   115    				call sdc_wait_ncr				002911 CB57                B   116    				bit 2,a							002913 20 0C               B   117    				jr nz,mmc_init			
002915 B7                  B   118    				or a
002916 28 2A               B   119    				jr z,sdc_init_done				002918 0B                  B   120    				dec bc
002919 78                  B   121    				ld a,b
00291A B1                  B   122    				or c
00291B 20 D6               B   123    				jr nz,sdc_iwl
00291D C3 BA 2B 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
002921 AF                  B   127    mmc_init		xor a							002922 32 ED 2B 00         B   128    				ld (sdc_sdc),a
002926 01401F00            B   129    				ld bc,8000						00292A C5                  B   130    mmc_iwl			push bc
00292B 3E41                B   131    				ld a,041h						00292D CD 4B 2B 00         B   132    				call sdc_send_command_null_args
002931 C1                  B   133    				pop bc
002932 CD 78 2B 00         B   134    				call sdc_wait_ncr				002936 B7                  B   135    				or a							002937 28 09               B   136    				jr z,sdc_init_done
002939 0B                  B   137    				dec bc
00293A 78                  B   138    				ld a,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page:  99


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
00293B B1                  B   139    				or c
00293C 20 EC               B   140    				jr nz,mmc_iwl
00293E C3 B6 2B 00         B   141    				jp mmc_init_fail
                           B   142    
002942                     B   143    sdc_init_done
                           B   144    
002942 3E49                B   145    				ld a,049h						002944 CD 4B 2B 00         B   146    				call sdc_send_command_null_args
002948 CD 78 2B 00         B   147    				call sdc_wait_ncr				00294C B7                  B   148    				or a							00294D C2 BE 2B 00         B   149    				jp nz,sdc_id_fail
002951 CD 8C 2B 00         B   150    				call sdc_wait_data_token		002955 B7                  B   151    				or a
002956 C2 BE 2B 00         B   152    				jp nz,sdc_id_fail
00295A 21 8C 57 00         B   153    				ld hl,sector_buffer				00295E CD 54 2A 00         B   154    				call sdc_read_id_bytes	
                           B   155    
002962 3E4A                B   156    				ld a,04ah						002964 CD 4B 2B 00         B   157    				call sdc_send_command_null_args
002968 CD 78 2B 00         B   158    				call sdc_wait_ncr				00296C B7                  B   159    				or a							00296D C2 BE 2B 00         B   160    				jp nz,sdc_id_fail
002971 CD 8C 2B 00         B   161    				call sdc_wait_data_token		002975 B7                  B   162    				or a
002976 C2 BE 2B 00         B   163    				jp nz,sdc_id_fail
00297A 21 9C 57 00         B   164    				ld hl,sector_buffer+16			00297E CD 54 2A 00         B   165    				call sdc_read_id_bytes
002982 CD 18 2C 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
002986                     B   169    sdc_quit	
                           B   170    
002986 21 9F 57 00         B   171    				ld hl,sector_buffer+013h		00298A 11 AC 57 00         B   172    				ld de,sector_buffer+020h
00298E 01050000            B   173    				ld bc,5
002992 3A ED 2B 00         B   174    				ld a,(sdc_sdc)
002996 B7                  B   175    				or a
002997 20 01               B   176    				jr nz,sdc_cn5
002999 03                  B   177    				inc bc
00299A EDB0                B   178    sdc_cn5			ldir
00299C E5                  B   179    				push hl
00299D D5                  B   180    				push de
00299E 21 D2 2B 00         B   181    				ld hl,sdc_vnchars
0029A2 011A0000            B   182    				ld bc,26
0029A6 EDB0                B   183    				ldir
0029A8 D1                  B   184    				pop de
0029A9 E1                  B   185    				pop hl
0029AA 13                  B   186    				inc de
0029AB 13                  B   187    				inc de
0029AC 7E                  B   188    				ld a,(hl)
0029AD CB3F                B   189    				srl a
0029AF CB3F                B   190    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 100


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
0029B1 CB3F                B   191    				srl a
0029B3 CB3F                B   192    				srl a
0029B5 C630                B   193    				add a,030h						0029B7 12                  B   194    				ld (de),a
0029B8 13                  B   195    				inc de
0029B9 13                  B   196    				inc de
0029BA 7E                  B   197    				ld a,(hl)
0029BB E60F                B   198    				and 0fh
0029BD C630                B   199    				add a,030h
0029BF 12                  B   200    				ld (de),a						0029C0 13                  B   201    				inc de
0029C1 13                  B   202    				inc de
0029C2 13                  B   203    				inc de
0029C3 13                  B   204    				inc de
0029C4 13                  B   205    				inc de
0029C5 23                  B   206    				inc hl
0029C6 0604                B   207    				ld b,4
0029C8 7E                  B   208    sdc_snulp		ld a,(hl)						0029C9 CB3F                B   209    				srl a
0029CB CB3F                B   210    				srl a
0029CD CB3F                B   211    				srl a
0029CF CB3F                B   212    				srl a
0029D1 C630                B   213    				add a,030h
0029D3 FE3A                B   214    				cp 03ah
0029D5 38 02               B   215    				jr c,sdc_hvl1
0029D7 C607                B   216    				add a,07h
0029D9 12                  B   217    sdc_hvl1		ld (de),a
0029DA 13                  B   218    				inc de
0029DB 7E                  B   219    				ld a,(hl)
0029DC E60F                B   220    				and 0fh
0029DE C630                B   221    				add a,030h
0029E0 FE3A                B   222    				cp 03ah
0029E2 38 02               B   223    				jr c,sdc_hvl2
0029E4 C607                B   224    				add a,07h
0029E6 12                  B   225    sdc_hvl2		ld (de),a
0029E7 13                  B   226    				inc de
0029E8 23                  B   227    				inc hl
0029E9 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
0029EB DD21 8C 57 00       B   232    				ld ix,sector_buffer				0029F0 DD7E06              B   233    				ld a,(ix+6)
0029F3 E603                B   234    				and 00000011b
0029F5 57                  B   235    				ld d,a
0029F6 DD5E07              B   236    				ld e,(ix+7)
0029F9 DD7E08              B   237    				ld a,(ix+8)
0029FC E6C0                B   238    				and 11000000b
0029FE CB27                B   239    				sla a
002A00 CB13                B   240    				rl e
002A02 CB12                B   241    				rl d
002A04 CB27                B   242    				sla a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 101


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
002A06 CB13                B   243    				rl e
002A08 CB12                B   244    				rl d							                           B   245    	
002A0A DD7E09              B   246    				ld a,(ix+9)
002A0D E603                B   247    				and 00000011b
002A0F 47                  B   248    				ld b,a
002A10 DD7E0A              B   249    				ld a,(ix+10)
002A13 E680                B   250    				and 10000000b
002A15 CB27                B   251    				sla a
002A17 CB10                B   252    				rl b							                           B   253    	
002A19 04                  B   254    				inc b
002A1A 04                  B   255    				inc b
002A1B 21000000            B   256    				ld hl,0
002A1F CB23                B   257    sdc_cmsh		sla e
002A21 CB12                B   258    				rl d
002A23 CB15                B   259    				rl l
002A25 CB14                B   260    				rl h
002A27 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
002A29 DD7E05              B   263    				ld a,(ix+5)
002A2C E60F                B   264    				and 00001111b					002A2E 28 17               B   265    				jr z,sdc_nbls
002A30 47                  B   266    				ld b,a
002A31 CB23                B   267    sdc_blsh		sla e
002A33 CB12                B   268    				rl d
002A35 CB15                B   269    				rl l
002A37 CB14                B   270    				rl h
002A39 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
002A3B 0609                B   273    				ld b,9							002A3D CB3C                B   274    sdc_cbsec		srl h
002A3F CB1D                B   275    				rr l
002A41 CB1A                B   276    				rr d
002A43 CB1B                B   277    				rr e
002A45 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
002A47 E5                  B   280    sdc_nbls		push hl
002A48 C1                  B   281    				pop bc							002A49 21 AC 57 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
002A4D CD 4A 2C 00         B   284    				call sdc_fast_clock				002A51 AF                  B   285    				xor a
002A52 37                  B   286    				scf
002A53 C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
002A54                     B   292    sdc_read_id_bytes
                           B   293    
002A54 0610                B   294    				ld b,16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 102


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
002A56 CD FE 2B 00         B   295    sdc_csdlp		call sdc_get_byte
002A5A 77                  B   296    				ld (hl),a
002A5B 23                  B   297    				inc hl
002A5C 10 F8               B   298    				djnz sdc_csdlp
002A5E CD FE 2B 00         B   299    				call sdc_get_byte				002A62 CD FE 2B 00         B   300    				call sdc_get_byte				002A66 C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
002A67                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
002A67 CD 0D 2C 00         B   310    				call sdc_select_card
                           B   311    
002A6B 21 25 53 00         B   312    				ld hl,sector_lba0
002A6F 5E                  B   313    				ld e,(hl)						002A70 23                  B   314    				inc hl
002A71 56                  B   315    				ld d,(hl)
002A72 23                  B   316    				inc hl
002A73 4E                  B   317    				ld c,(hl)
002A74 CB23                B   318    				sla e							002A76 CB12                B   319    				rl d
002A78 CB11                B   320    				rl c
002A7A 3E51                B   321    				ld a,051h						002A7C 0601                B   322    				ld b,001h						002A7E CD 53 2B 00         B   323    				call sdc_send_command		
002A82 CD 78 2B 00         B   324    				call sdc_wait_ncr				002A86 B7                  B   325    				or a							002A87 C2 C2 2B 00         B   326    				jp nz,sdc_bcr_error			
002A8B CD 8C 2B 00         B   327    				call sdc_wait_data_token		002A8F B7                  B   328    				or a
002A90 C2 C6 2B 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
002A94 21 8C 57 00         B   331    				ld hl,sector_buffer				002A98 0600                B   332    				ld b,0
002A9A CD FE 2B 00         B   333    sdc_rslp		call sdc_get_byte
002A9E 77                  B   334    				ld (hl),a
002A9F 23                  B   335    				inc hl
002AA0 CD FE 2B 00         B   336    				call sdc_get_byte
002AA4 77                  B   337    				ld (hl),a
002AA5 23                  B   338    				inc hl
002AA6 10 F2               B   339    				djnz sdc_rslp
002AA8 CD FE 2B 00         B   340    				call sdc_get_byte				002AAC CD FE 2B 00         B   341    				call sdc_get_byte				                           B   342    
002AB0 CD 18 2C 00         B   343    				call sdc_deselect_card
002AB4 AF                  B   344    				xor a
002AB5 37                  B   345    				scf
002AB6 C9                  B   346    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 103


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
002AB7                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
002AB7 CD 0D 2C 00         B   354    				call sdc_select_card
                           B   355    
002ABB 21 25 53 00         B   356    				ld hl,sector_lba0
002ABF 5E                  B   357    				ld e,(hl)						002AC0 23                  B   358    				inc hl
002AC1 56                  B   359    				ld d,(hl)
002AC2 23                  B   360    				inc hl
002AC3 4E                  B   361    				ld c,(hl)
002AC4 CB23                B   362    				sla e							002AC6 CB12                B   363    				rl d
002AC8 CB11                B   364    				rl c
002ACA 3E58                B   365    				ld a,058h						002ACC 0601                B   366    				ld b,001h						002ACE CD 53 2B 00         B   367    				call sdc_send_command		
002AD2 CD 78 2B 00         B   368    				call sdc_wait_ncr				002AD6 B7                  B   369    				or a							002AD7 C2 C2 2B 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
002ADB CD A5 2B 00         B   372    				call sdc_send_eight_clocks		                           B   373    
002ADF 3EFE                B   374    				ld a,0feh
002AE1 CD EE 2B 00         B   375    				call sdc_send_byte				                           B   376    
002AE5 21 8C 57 00         B   377    				ld hl,sector_buffer				002AE9 0600                B   378    				ld b,0
002AEB 7E                  B   379    sdc_wslp		ld a,(hl)
002AEC CD EE 2B 00         B   380    				call sdc_send_byte
002AF0 23                  B   381    				inc hl
002AF1 7E                  B   382    				ld a,(hl)
002AF2 CD EE 2B 00         B   383    				call sdc_send_byte
002AF6 23                  B   384    				inc hl
002AF7 10 F2               B   385    				djnz sdc_wslp
                           B   386    
002AF9 CD A5 2B 00         B   387    				call sdc_send_eight_clocks		002AFD CD A5 2B 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
002B01 CD FE 2B 00         B   390    				call sdc_get_byte				002B05 E61F                B   391    				and 01fh
002B07 CB3F                B   392    				srl a
002B09 FE02                B   393    				cp 002h
002B0B C2 CA 2B 00         B   394    				jp nz,sdc_write_fail
                           B   395    
002B0F 0150C300            B   396    				ld bc,50000						002B13 CD FE 2B 00         B   397    sdc_wcbsy		call sdc_get_byte				002B17 FEFF                B   398    				cp 0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 104


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
002B19 28 09               B   399    				jr z,sdc_nbusy
002B1B 0B                  B   400    				dec bc
002B1C 78                  B   401    				ld a,b
002B1D B1                  B   402    				or c
002B1E 20 F3               B   403    				jr nz,sdc_wcbsy
002B20 C3 CE 2B 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
002B24 3E4D                B   406    sdc_nbusy		ld a,04dh						002B26 01000100            B   407    				ld bc,0100h			
002B2A 11000000            B   408    				ld de,0000h
002B2E CD 53 2B 00         B   409    				call sdc_send_command
002B32 CD 78 2B 00         B   410    				call sdc_wait_ncr				002B36 B7                  B   411    				or a							002B37 C2 CA 2B 00         B   412    				jp nz,sdc_write_fail
002B3B CD FE 2B 00         B   413    				call sdc_get_byte				002B3F B7                  B   414    				or a							002B40 C2 CA 2B 00         B   415    				jp nz,sdc_write_fail		
002B44 CD 18 2C 00         B   416    				call sdc_deselect_card			002B48 AF                  B   417    				xor a
002B49 37                  B   418    				scf
002B4A C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
002B4B                     B   423    sdc_send_command_null_args
                           B   424    
002B4B 01000100            B   425    				ld bc,0100h				
002B4F 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
002B53                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
002B53 F5                  B   433    				push af				
002B54 CD A5 2B 00         B   434    				call sdc_send_eight_clocks		002B58 F1                  B   435    				pop af
                           B   436    
002B59 CD EE 2B 00         B   437    				call sdc_send_byte				002B5D 79                  B   438    				ld a,c							002B5E CD EE 2B 00         B   439    				call sdc_send_byte
002B62 7A                  B   440    				ld a,d
002B63 CD EE 2B 00         B   441    				call sdc_send_byte
002B67 7B                  B   442    				ld a,e
002B68 CD EE 2B 00         B   443    				call sdc_send_byte
002B6C 3E00                B   444    				ld a,0
002B6E CD EE 2B 00         B   445    				call sdc_send_byte
002B72 78                  B   446    				ld a,b							002B73 CD EE 2B 00         B   447    				call sdc_send_byte
002B77 C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 105


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
                           B   451    
002B78                     B   452    sdc_wait_ncr
                           B   453    	
002B78 C5                  B   454    				push bc
002B79 01000000            B   455    				ld bc,0
002B7D CD FE 2B 00         B   456    sdc_wncrl		call sdc_get_byte				002B81 CB7F                B   457    				bit 7,a							002B83 28 05               B   458    				jr z,sdc_gcr
002B85 0B                  B   459    				dec bc
002B86 78                  B   460    			 	ld a,b
002B87 B1                  B   461    				or c
002B88 20 F3               B   462    				jr nz,sdc_wncrl
002B8A C1                  B   463    sdc_gcr			pop bc
002B8B C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
002B8C                     B   468    sdc_wait_data_token
                           B   469    
002B8C C5                  B   470    				push bc
002B8D 01000000            B   471    				ld bc,0
002B91 CD FE 2B 00         B   472    sdc_wdt			call sdc_get_byte				002B95 FEFE                B   473    				cp 0feh
002B97 28 09               B   474    				jr z,sdc_gdt
002B99 0B                  B   475    				dec bc
002B9A 78                  B   476    			 	ld a,b
002B9B B1                  B   477    				or c
002B9C 20 F3               B   478    				jr nz,sdc_wdt
002B9E C1                  B   479    				pop bc
002B9F 3E01                B   480    				ld a,1							002BA1 C9                  B   481    				ret
                           B   482    
002BA2 C1                  B   483    sdc_gdt			pop bc
002BA3 AF                  B   484    				xor a							002BA4 C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
002BA5                     B   489    sdc_send_eight_clocks
                           B   490    
002BA5 3EFF                B   491    				ld a,0ffh
002BA7 CD EE 2B 00         B   492    				call sdc_send_byte
002BAB C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
002BAC                     B   497    init_spi_mode_fail	
                           B   498    
002BAC 3E00                B   499    				ld a,sdc_error_spi_mode_failed
002BAE F5                  B   500    fail_ret		push af
002BAF CD 18 2C 00         B   501    				call sdc_deselect_card
002BB3 F1                  B   502    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 106


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
002BB4 B7                  B   503    				or a
002BB5 C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
002BB6                     B   508    mmc_init_fail
                           B   509    
002BB6 3E01                B   510    				ld a,sdc_error_bad_init_mmc
002BB8 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
002BBA                     B   515    sdc_init_fail
                           B   516    
002BBA 3E02                B   517    				ld a,sdc_error_bad_init
002BBC 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
002BBE                     B   523    sdc_id_fail
                           B   524    
002BBE 3E03                B   525    				ld a,sdc_error_bad_id
002BC0 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
002BC2                     B   530    sdc_bcr_error
                           B   531    
002BC2 3E04                B   532    				ld a,sdc_error_bad_command_resp
002BC4 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
002BC6                     B   537    sdc_dt_timeout
                           B   538    
002BC6 3E05                B   539    				ld a,sdc_error_data_token_timeo
002BC8 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
002BCA                     B   544    sdc_write_fail
                           B   545    	
002BCA 3E07                B   546    				ld a,sdc_error_write_failed
002BCC 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
002BCE                     B   551    sdc_card_busy_timeout
                           B   552    
002BCE 3E06                B   553    				ld a,sdc_error_write_timeout
002BD0 18 DC               B   554    				jr fail_ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 107


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_sdcard_driver.asm
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
002BD2 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
002BDA 3A303030 30303030 
002BE2 30202020 20202000 
002BEA 000000 
                           B   559    
002BED 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
002BEE                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
002BEE C5                  C     9    					push bc
002BEF 01030000            C    10    					ld bc,port_sdc_data
002BF3 ED79                C    11    					out (bc),a					                           C    12    	
002BF5 0E01                C    13    					ld c,port_hw_flags			002BF7 ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
002BFA 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
002BFC C1                  C    17    					pop bc
002BFD C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
002BFE                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
002BFE 3EFF                C    26    					ld a,0ffh
002C00 CD EE 2B 00         C    27    					call sdc_send_byte
002C04 C5                  C    28    					push bc
002C05 01030000            C    29    					ld bc,port_sdc_data
002C09 ED78                C    30    					in a,(bc)					002C0B C1                  C    31    					pop bc
002C0C C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
002C0D                     C    36    sdc_select_card
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 108


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    37    	
002C0D C5                  C    38    					push bc
002C0E 01020000            C    39    					ld bc,port_sdc_ctrl
002C12 3E02                C    40    					ld a,1<<sdc_cs				002C14 ED79                C    41    					out (bc),a
002C16 C1                  C    42    					pop bc
002C17 C9                  C    43    					ret
                           C    44    
                           C    45    
002C18                     C    46    sdc_deselect_card
                           C    47    
002C18 C5                  C    48    					push bc
002C19 01020000            C    49    					ld bc,port_sdc_ctrl
002C1D 3E82                C    50    					ld a,080h+(1<<sdc_cs)		002C1F ED79                C    51    					out (bc),a
002C21 C1                  C    52    					pop bc
                           C    53    				
002C22 3EFF                C    54    					ld a,0ffh					002C24 CD EE 2B 00         C    55    					call sdc_send_byte
002C28 C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
002C29                     C    60    sdc_power_on
                           C    61    
002C29 C5                  C    62    					push bc
002C2A 01020000            C    63    					ld bc,port_sdc_ctrl
002C2E 3E81                C    64    					ld a,80h+(1<<sdc_power)		002C30 ED79                C    65    					out (bc),a
002C32 C1                  C    66    					pop bc
002C33 C9                  C    67    					ret
                           C    68    	
                           C    69    
002C34                     C    70    sdc_power_off
                           C    71    	
002C34 C5                  C    72    					push bc						002C35 01020000            C    73    					ld bc,port_sdc_ctrl
002C39 3E01                C    74    					ld a,1<<sdc_power			002C3B ED79                C    75    					out (bc),a					002C3D C1                  C    76    					pop bc						002C3E C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
002C3F                     C    82    sdc_slow_clock
                           C    83    
002C3F C5                  C    84    					push bc
002C40 01020000            C    85    					ld bc,port_sdc_ctrl
002C44 3E04                C    86    					ld a,1<<sdc_speed			002C46 ED79                C    87    					out (bc),a
002C48 C1                  C    88    					pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 109


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_sdcard_code.asm
002C49 C9                  C    89    					ret
                           C    90    
                           C    91    
002C4A                     C    92    sdc_fast_clock
                           C    93    	
002C4A C5                  C    94    					push bc
002C4B 01020000            C    95    					ld bc,port_sdc_ctrl
002C4F 3E84                C    96    					ld a,080h+(1<<sdc_speed)	002C51 ED79                C    97    					out (bc),a
002C53 C1                  C    98    					pop bc
002C54 C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  2917    
                           A  2918    
                           A  2919    ;----------------------------------------------
                           A  2920    ; IO routines
                           A  2921    ;----------------------------------------------
                           A  2922    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
002C55                     B     5    set_irq_vector
                           B     6    
002C55 AF                  B     7    				xor a
002C56 ED47                B     8    				ld i,a
002C58 3EC3                B     9    				ld a,c3h						002C5A 32320000            B    10    				ld (032h),a	
002C5E 21 8A 2C 00         B    11    				ld hl,int_routine				002C62 22330000            B    12    				ld (033h),hl
002C66 C9                  B    13    				ret
                           B    14    
                           B    15    
002C67 3E3F                B    16    disable_irqs	ld a,00111111b
002C69 ED3905              B    17    				out0 (port_irq_ctrl),a			002C6C C9                  B    18    				ret
                           B    19    
002C6D 21 93 52 00         B    20    enable_os_irqs	ld hl,devices_connected			002C71 CB46                B    21    				bit 0,(hl)
002C73 C4 7E 2C 00         B    22    				call nz,enable_kb_irq
002C77 CB4E                B    23    				bit 1,(hl)
002C79 C4 84 2C 00         B    24    				call nz,enable_ms_irq
002C7D C9                  B    25    				ret
                           B    26    				
002C7E 3E81                B    27    enable_kb_irq	ld a,10000001b
002C80 ED3905              B    28    				out0 (port_irq_ctrl),a			002C83 C9                  B    29    				ret
                           B    30    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 110


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_interrupt_code.asm
002C84 3E82                B    31    enable_ms_irq	ld a,10000010b
002C86 ED3905              B    32    				out0 (port_irq_ctrl),a			002C89 C9                  B    33    				ret
                           B    34    
                           B    35    ;----------------------------------------------
                           B    36    
                           B    37    
002C8A                     B    38    int_routine
002C8A F5                  B    39    				push af							002C8B ED3807              B    40    				in0 a,(port_ps2_ctrl)			002C8E CB67                B    41    				bit 4,a
002C90 C4 A2 2C 00         B    42    				call nz,kb_interrupt_handler
002C94 ED3807              B    43    				in0 a,(port_ps2_ctrl)			002C97 CB6F                B    44    				bit 5,a
002C99 C4 44 2D 00         B    45    				call nz,ms_interrupt_handler
002C9D F1                  B    46    				pop af
                           B    47    
002C9E FB                  B    48    				ei								002C9F 5BED4D              B    49    				reti.l							                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    ; Keyboard IRQ routine v0.03
                           B    53    ;----------------------------------------------
                           B    54    
002CA2                     B    55    kb_interrupt_handler
                           B    56    
                           B    57    ;--- irq test ---------------------------------
                           B    58    
                           B    59    ;				push bc
                           B    60    ;				ld a,0ffh
                           B    61    ;				ld (hw_palette),a
                           B    62    ;				ld b,0
                           B    63    ;testlp1		djnz testlp1
                           B    64    ;				ld a,0
                           B    65    ;				ld (hw_palette),a
                           B    66    ;				pop bc
                           B    67    				
                           B    68    ;--- end of test ------------------------------
                           B    69    
                           B    70    
002CA2 E5                  B    71    				push hl							002CA3 C5                  B    72    				push bc
                           B    73    				
002CA4 ED3802              B    74    key_loop		in0 a,(port_keyboard_data)		002CA7 47                  B    75    				ld b,a
                           B    76    
002CA8 3A 7A 54 00         B    77    				ld a,(key_release_mode)
002CAC B7                  B    78    				or a
002CAD 28 20               B    79    				jr z,key_pressed
                           B    80    			
002CAF 78                  B    81    				ld a,b							002CB0 FEE0                B    82    				cp 0e0h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 111


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_interrupt_code.asm
002CB2 28 61               B    83    				jr z,kirq_done	
002CB4 FEE1                B    84    				cp 0e1h
002CB6 28 5D               B    85    				jr z,kirq_done	
                           B    86    				
002CB8 CD 1F 2D 00         B    87    				call qualifiers					002CBC 7D                  B    88    				ld a,l
002CBD 2F                  B    89    				cpl
002CBE 6F                  B    90    				ld l,a
002CBF 3A 7C 54 00         B    91    				ld a,(key_mod_flags)
002CC3 A5                  B    92    				and l							002CC4 32 7C 54 00         B    93    				ld (key_mod_flags),a
002CC8 AF                  B    94    				xor a
002CC9 32 7A 54 00         B    95    				ld (key_release_mode),a
002CCD 18 46               B    96    				jr kirq_done
                           B    97    	
                           B    98    
002CCF 78                  B    99    key_pressed		ld a,b							002CD0 FEE0                B   100    				cp 0e0h							002CD2 28 41               B   101    				jr z,kirq_done	
002CD4 FEE1                B   102    				cp 0e1h
002CD6 28 3D               B   103    				jr z,kirq_done	
                           B   104    			
002CD8 FEF0                B   105    				cp 0f0h							002CDA 20 08               B   106    				jr nz,not_krel
002CDC 3E01                B   107    				ld a,1							002CDE 32 7A 54 00         B   108    				ld (key_release_mode),a			002CE2 18 31               B   109    				jr kirq_done
                           B   110    	
                           B   111    	
002CE4 CD 1F 2D 00         B   112    not_krel		call qualifiers					002CE8 3A 7C 54 00         B   113    				ld a,(key_mod_flags)			002CEC B5                  B   114    				or l
002CED 32 7C 54 00         B   115    				ld (key_mod_flags),a			002CF1 68                  B   116    				ld l,b
002CF2 01000000            B   117    				ld bc,0
002CF6 3A 78 54 00         B   118    				ld a,(key_buf_wr_idx)
002CFA 4F                  B   119    				ld c,a
002CFB 7D                  B   120    				ld a,l
002CFC 21 58 54 00         B   121    				ld hl,scancode_buffer
002D00 09                  B   122    				add hl,bc
002D01 77                  B   123    				ld (hl),a						002D02 0E10                B   124    				ld c,16
002D04 09                  B   125    				add hl,bc
002D05 3A 7C 54 00         B   126    				ld a,(key_mod_flags)			002D09 77                  B   127    				ld (hl),a	
002D0A 3A 78 54 00         B   128    				ld a,(key_buf_wr_idx)
002D0E 3C                  B   129    				inc a
002D0F E60F                B   130    				and 15
002D11 32 78 54 00         B   131    				ld (key_buf_wr_idx),a			                           B   132    				
002D15 ED3807              B   133    kirq_done		in0 a,(port_ps2_ctrl)			002D18 CB67                B   134    				bit 4,a	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 112


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_interrupt_code.asm
002D1A 20 88               B   135    				jr nz,key_loop
                           B   136    
002D1C C1                  B   137    				pop bc
002D1D E1                  B   138    				pop hl
002D1E C9                  B   139    				ret
                           B   140    
                           B   141    
002D1F 2E40                B   142    qualifiers		ld l,040h
002D21 FE2F                B   143    				cp 02fh
002D23 C8                  B   144    				ret z
                           B   145    			
002D24 2E20                B   146    				ld l,020h
002D26 FE27                B   147    				cp 027h
002D28 C8                  B   148    				ret z
                           B   149    			
002D29 2E10                B   150    				ld l,010h
002D2B FE59                B   151    				cp 059h
002D2D C8                  B   152    				ret z
                           B   153    			
002D2E 2E08                B   154    				ld l,08h
002D30 FE11                B   155    				cp 011h
002D32 C8                  B   156    				ret z
                           B   157    			
002D33 2E04                B   158    				ld l,04h
002D35 FE1F                B   159    				cp 01fh
                           B   160    			
002D37 2E02                B   161    				ld l,02h
002D39 FE14                B   162    				cp 14h
002D3B C8                  B   163    				ret z
                           B   164    			
002D3C 2E01                B   165    				ld l,01h
002D3E FE12                B   166    				cp 12h
002D40 C8                  B   167    				ret z
                           B   168    				
002D41 2E00                B   169    				ld l,0
002D43 C9                  B   170    				ret
                           B   171    
                           B   172    ;----------------------------------------------
                           B   173    ; Mouse IRQ routine v0.03
                           B   174    ;----------------------------------------------
                           B   175    
002D44                     B   176    ms_interrupt_handler
                           B   177    
                           B   178    ;--- irq test ---------------------------------
                           B   179    
                           B   180    ;				push bc
                           B   181    ;				ld a,0ffh
                           B   182    ;				ld (hw_palette),a
                           B   183    ;				ld b,0
                           B   184    ;testlp1		djnz testlp1
                           B   185    ;				ld a,0
                           B   186    ;				ld (hw_palette),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 113


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   187    ;				pop bc
                           B   188    				
                           B   189    ;--- end of test ------------------------------
                           B   190    
                           B   191    
002D44 C5                  B   192    				push bc							002D45 D5                  B   193    				push de							002D46 E5                  B   194    				push hl							                           B   195    							
002D47 11000000            B   196    ms_loop			ld de,0		
002D4B 3A 86 54 00         B   197    				ld a,(mouse_packet_index)		002D4F 5F                  B   198    				ld e,a
002D50 21 82 54 00         B   199    				ld hl,mouse_packet	
002D54 19                  B   200    				add hl,de
002D55 ED3806              B   201    				in0 a,(port_mouse_data)
002D58 77                  B   202    				ld (hl),a
                           B   203    								
002D59 21 81 54 00         B   204    				ld hl,mouse_packet_size
002D5D 1C                  B   205    				inc e							002D5E 7B                  B   206    				ld a,e
002D5F BE                  B   207    				cp (hl)
002D60 20 4A               B   208    				jr nz,msubpkt
                           B   209    
002D62 3A 82 54 00         B   210    				ld a,(mouse_packet)				002D66 4F                  B   211    				ld c,a	
002D67 E607                B   212    				and 0111b
002D69 32 87 54 00         B   213    				ld (mouse_buttons),a
                           B   214    				
002D6D 11000000            B   215    				ld de,0							002D71 CB61                B   216    				bit 4,c
002D73 28 01               B   217    				jr z,mxsignpos
002D75 1B                  B   218    				dec de
002D76 3A 83 54 00         B   219    mxsignpos		ld a,(mouse_packet+1)
002D7A 5F                  B   220    				ld e,a
002D7B 2A 88 54 00         B   221    				ld hl,(mouse_disp_x)
002D7F 19                  B   222    				add hl,de
002D80 22 88 54 00         B   223    				ld (mouse_disp_x),hl
                           B   224    				
002D84 11000000            B   225    				ld de,0							002D88 CB69                B   226    				bit 5,c
002D8A 28 01               B   227    				jr z,mysignpos
002D8C 1B                  B   228    				dec de
002D8D 3A 84 54 00         B   229    mysignpos		ld a,(mouse_packet+2)
002D91 5F                  B   230    				ld e,a
002D92 2A 8B 54 00         B   231    				ld hl,(mouse_disp_y)			002D96 AF                  B   232    				xor a							002D97 ED52                B   233    				sbc hl,de
002D99 22 8B 54 00         B   234    				ld (mouse_disp_y),hl
                           B   235    				
002D9D 3A 85 54 00         B   236    				ld a,(mouse_packet+3)			002DA1 32 8E 54 00         B   237    				ld (mouse_wheel),a
                           B   238    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 114


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_interrupt_code.asm
002DA5 3E01                B   239    				ld a,1
002DA7 32 8F 54 00         B   240    				ld (mouse_updated),a			                           B   241    				
002DAB AF                  B   242    				xor a
002DAC 32 86 54 00         B   243    msubpkt			ld (mouse_packet_index),a
                           B   244    				
002DB0 ED3807              B   245    				in0 a,(port_ps2_ctrl)			002DB3 CB6F                B   246    				bit 5,a
002DB5 20 90               B   247    				jr nz,ms_loop				
                           B   248    				
002DB7 E1                  B   249    				pop hl
002DB8 D1                  B   250    				pop de
002DB9 C1                  B   251    				pop bc
002DBA C9                  B   252    				ret
                           B   253    				
                           B   254    ;----------------------------------------------
                           B   255    ; ez80p NMI code v0.02
                           B   256    ;----------------------------------------------
                           B   257    
002DBB                     B   258    nmi_routine
002DBB CD 18 13 00         B   259    				call os_store_CPU_regs
                           B   260    				
002DBF 21000000            B   261    				ld hl,0
002DC3 39                  B   262    				add hl,sp
002DC4 7E                  B   263    				ld a,(hl)						002DC5 E601                B   264    				and 1
002DC7 32 C1 52 00         B   265    				ld (store_adl),a
002DCB 20 0A               B   266    				jr nz,adl_freeze
002DCD 23                  B   267    				inc hl
002DCE 5E                  B   268    				ld e,(hl)						002DCF 23                  B   269    				inc hl
002DD0 56                  B   270    				ld d,(hl)
002DD1 CD 5E 15 00         B   271    				call mbase_de
002DD5 18 02               B   272    				jr got_pc
                           B   273    				
002DD7 33                  B   274    adl_freeze		inc sp
002DD8 D1                  B   275    				pop de							002DD9 ED53 B7 52 00       B   276    got_pc			ld (store_pc),de				                           B   277    				
002DDE CD 07 2E 00         B   278    				call disable_nmi
002DE2 ED3906              B   279    				out0 (port_nmi_ack),a			002DE5 3E01                B   280    				ld a,1
002DE7 32 91 52 00         B   281    				ld (frozen),a
002DEB C3 48 0A 00         B   282    				jp os_cold_start				                           B   283    
                           B   284    ;----------------------------------------------
                           B   285    
                           B   286    ;nmi_routine
                           B   287    ;
                           B   288    ;				push af							                           B   289    ;				push bc
                           B   290    ;				ld a,0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 115


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   291    ;				ld (hw_palette),a
                           B   292    ;				ld b,0
                           B   293    ;nmi_testlp2		djnz nmi_testlp2
                           B   294    ;				ld a,0
                           B   295    ;				ld (hw_palette),a
                           B   296    ;				pop bc
                           B   297    ;				pop af
                           B   298    ;				out0 (port_nmi_ack),a			                           B   299    ;				retn.l							                           B   300    
                           B   301    ;----------------------------------------------
                           B   302    
002DEF                     B   303    set_nmi_vector
                           B   304    
002DEF 3EC3                B   305    				ld a,0c3h						002DF1 32660000            B   306    				ld (066h),a
002DF5 21 BB 2D 00         B   307    				ld hl,nmi_routine				002DF9 22670000            B   308    				ld (067h),hl
002DFD C9                  B   309    				ret
                           B   310    
                           B   311    ;----------------------------------------------
                           B   312    
002DFE ED3906              B   313    enable_nmi		out0 (port_nmi_ack),a			002E01 3EC0                B   314    				ld a,11000000b					002E03 ED3905              B   315    				out0 (port_irq_ctrl),a
002E06 C9                  B   316    				ret
                           B   317    
002E07 3E40                B   318    disable_nmi		ld a,01000000b					002E09 ED3905              B   319    				out0 (port_irq_ctrl),a
002E0C C9                  B   320    				ret
                           B   321    
                           B   322    ;----------------------------------------------
                           B   323    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
002E0D                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
002E0D C5                  B    10    				push bc
002E0E 3A 2A 51 00         B    11    				ld a,(serial_timeout)
002E12 47                  B    12    				ld b,a
002E13 3ECC                B    13    rx_set_timer	ld a,cch
002E15 ED3981              B    14    				out0 (TMR0_RR_L),a				002E18 3E0C                B    15    				ld a,0ch
002E1A ED3982              B    16    				out0 (TMR0_RR_H),a				002E1D 3E03                B    17    				ld a,00000011b					002E1F ED3980              B    18    				out0 (TMR0_CTL),a				Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 116


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_rs232_code.asm
002E22 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
002E25 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					002E27 ED7401              B    22    				tstio 1							002E2A 20 0E               B    23    				jr nz,rx_in_buffer
002E2C AF                  B    24    				xor a
002E2D B0                  B    25    				or b
002E2E 28 13               B    26    				jr z,rx_time_out
002E30 0E80                B    27    				ld c,TMR0_CTL	
002E32 ED7480              B    28    				tstio 128						002E35 28 EE               B    29    				jr z,rx_byte_lp		
002E37 05                  B    30    				dec b
002E38 18 D9               B    31    				jr rx_set_timer
                           B    32    
002E3A 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
002E3E ED78                B    34    				in a,(bc)						002E40 C1                  B    35    				pop bc
002E41 BF                  B    36    				cp a							002E42 C9                  B    37    				ret
                           B    38    
002E43 C1                  B    39    rx_time_out		pop bc
002E44 3E83                B    40    				ld a,083h						002E46 B7                  B    41    				or a							002E47 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
002E48                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
002E48 C5                  B    52    				push bc
002E49 0EC5                B    53    				ld c,UART0_LSR					002E4B ED7420              B    54    rs232_swait		tstio 020h						002E4E 28 FB               B    55    				jr z,rs232_swait
002E50 01C00000            B    56    				ld bc,UART0_THR
002E54 ED79                B    57    				out (c),a						002E56 C1                  B    58    				pop bc
002E57 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
002E58                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
002E58 7A                  B    68    				ld a,d
002E59 CD 48 2E 00         B    69    				call send_serial_byte
002E5D 7B                  B    70    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 117


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_rs232_code.asm
002E5E CD 48 2E 00         B    71    				call send_serial_byte
002E62 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
002E63                     B    76    hwsc_flush_serial_buffer
                           B    77    
002E63 C5                  B    78    				push bc
002E64 01C00000            B    79    				ld bc,UART0_RBR
002E68 ED78                B    80    				in a,(bc)						002E6A C1                  B    81    				pop bc
002E6B C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
002E6C                     B     6    set_bitmap_parameters
                           B     7    				
002E6C 78                  B     8    				ld a,b
002E6D 32 0D 51 00         B     9    				ld (window_pixel_doubling),a
002E71 22 E6 50 00         B    10    				ld (window_width_bytes),hl		002E75 ED53 E9 50 00       B    11    				ld (window_height_lines),de
                           B    12    			
002E7A 21000080            B    13    				ld hl,vram_a_addr				002E7E 22 F8 50 00         B    14    				ld (video_window_address),hl
002E82 21000000            B    15    				ld hl,0
002E86 ED5B E6 50 00       B    16    				ld de,(window_width_bytes)
002E8B ED4B E9 50 00       B    17    				ld bc,(window_height_lines)
002E90 19                  B    18    cwsblp			add hl,de
002E91 0B                  B    19    				dec bc
002E92 78                  B    20    				ld a,b
002E93 B1                  B    21    				or c
002E94 20 FA               B    22    				jr nz,cwsblp
002E96 22 04 51 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
002E9A CD 2B 2F 00         B    25    				call os_set_video_hw_regs
                           B    26    				
002E9E AF                  B    27    				xor a
002E9F C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
002EA0                     B    32    set_font_parameters
                           B    33    
002EA0 78                  B    34    				ld a,b							002EA1 32 EC 50 00         B    35    				ld (font_width_bytes),a
002EA5 79                  B    36    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 118


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
002EA6 32 EF 50 00         B    37    				ld (font_height_lines),a		002EAA 11000000            B    38    				ld de,0
002EAE 59                  B    39    				ld e,c
002EAF 50                  B    40    				ld d,b
002EB0 ED5C                B    41    				mlt de
002EB2 21000000            B    42    				ld hl,0
002EB6 0638                B    43    				ld b,224/4						002EB8 19                  B    44    cfslp			add hl,de
002EB9 10 FD               B    45    				djnz cfslp
002EBB 22 F5 50 00         B    46    				ld (font_length),hl
                           B    47    							
002EBF 41                  B    48    				ld b,c
002EC0 21000000            B    49    				ld hl,0
002EC4 ED5B E6 50 00       B    50    				ld de,(window_width_bytes)
002EC9 19                  B    51    csualp			add hl,de
002ECA 10 FD               B    52    				djnz csualp
002ECC 22 0A 51 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
002ED0 AF                  B    55    				xor a
002ED1 C9                  B    56    				ret
                           B    57    				
                           B    58    				
                           B    59    
002ED2                     B    60    set_charmap_parameters
                           B    61    
002ED2 79                  B    62    				ld a,c
002ED3 32 E0 50 00         B    63    				ld (window_rows),a
002ED7 78                  B    64    				ld a,b
002ED8 32 E3 50 00         B    65    				ld (window_columns),a
                           B    66    				
002EDC 2A F8 50 00         B    67    				ld hl,(video_window_address)
002EE0 ED5B 04 51 00       B    68    				ld de,(total_window_bytes)
002EE5 19                  B    69    				add hl,de
002EE6 22 FB 50 00         B    70    				ld (charmap_address),hl
                           B    71    
002EEA 11000000            B    72    				ld de,0
002EEE 3A E0 50 00         B    73    				ld a,(window_rows)
002EF2 5F                  B    74    				ld e,a
002EF3 3A E3 50 00         B    75    				ld a,(window_columns)
002EF7 57                  B    76    				ld d,a
002EF8 ED5C                B    77    				mlt de
002EFA ED53 07 51 00       B    78    				ld (total_charmap_bytes),de
002EFF 19                  B    79    				add hl,de
002F00 22 FE 50 00         B    80    				ld (attributes_address),hl
002F04 19                  B    81    				add hl,de
002F05 22 01 51 00         B    82    				ld (cursor_image_address),hl
002F09 11000000            B    83    				ld de,0
002F0D 3A EF 50 00         B    84    				ld a,(font_height_lines)
002F11 5F                  B    85    				ld e,a
002F12 3A EC 50 00         B    86    				ld a,(font_width_bytes)
002F16 57                  B    87    				ld d,a
002F17 D5                  B    88    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 119


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
002F18 ED5C                B    89    				mlt de
002F1A 19                  B    90    				add hl,de
002F1B 22 F2 50 00         B    91    				ld (font_addr),hl
002F1F D1                  B    92    				pop de
002F20 16E0                B    93    				ld d,224
002F22 ED5C                B    94    				mlt de
002F24 19                  B    95    				add hl,de				
002F25 22 97 52 00         B    96    				ld (vram_a_high),hl
002F29 AF                  B    97    				xor a
002F2A C9                  B    98    				ret
                           B    99    				
                           B   100    
002F2B                     B   101    os_set_video_hw_regs
                           B   102    
002F2B DD210018 FF         B   103    				ld ix,video_control				002F30 3A 0D 51 00         B   104    				ld a,(window_pixel_doubling)
002F34 CB27                B   105    				sla a
002F36 F601                B   106    				or 1
002F38 DD7700              B   107    				ld (ix),a						002F3B DD360100            B   108    				ld (ix+1),0						002F3F DD360200            B   109    				ld (ix+2),0						002F43 DD360463            B   110    				ld (ix+4),99					                           B   111    
002F47 DD212010 FF         B   112    				ld ix,bitmap_parameters			002F4C ED5B F8 50 00       B   113    				ld de,(video_window_address)	002F51 DD1F00              B   114    				ld (ix),de						002F54 DD360401            B   115    				ld (ix+04h),1					002F58 DD360800            B   116    				ld (ix+08h),0					002F5C DD360C00            B   117    				ld (ix+0ch),0					002F60 ED4B E6 50 00       B   118    				ld bc,(window_width_bytes)		002F65 CB38                B   119    				srl b							002F67 CB19                B   120    				rr c
002F69 CB38                B   121    				srl b
002F6B CB19                B   122    				rr c
002F6D CB38                B   123    				srl b
002F6F CB19                B   124    				rr c
002F71 0D                  B   125    				dec c
002F72 DD7110              B   126    				ld (ix+10h),c
                           B   127    				
002F75 21 BD 50 00         B   128    				ld hl,pen_palette
002F79 CD 7F 2F 00         B   129    				call hswc_set_ui_colours
                           B   130    				
002F7D AF                  B   131    				xor a							002F7E C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
                           B   136    				
002F7F                     B   137    hswc_set_ui_colours
                           B   138    
002F7F 110000FF            B   139    				ld de,hw_palette
002F83 01200000            B   140    				ld bc,16*2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 120


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
002F87 EDB0                B   141    				ldir
002F89 AF                  B   142    				xor a							002F8A C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
002F8B                     B   148    hwsc_clear_screen
                           B   149    
002F8B 2A F8 50 00         B   150    				ld hl,(video_window_address)	002F8F 3A BB 50 00         B   151    				ld a,(background_colour)
002F93 E60F                B   152    				and 0fh
002F95 47                  B   153    				ld b,a
002F96 07                  B   154    				rlca
002F97 07                  B   155    				rlca
002F98 07                  B   156    				rlca
002F99 07                  B   157    				rlca
002F9A B0                  B   158    				or b
002F9B 77                  B   159    				ld (hl),a
002F9C E5                  B   160    				push hl
002F9D D1                  B   161    				pop de
002F9E 13                  B   162    				inc de
002F9F ED4B 04 51 00       B   163    				ld bc,(total_window_bytes)
002FA4 0B                  B   164    				dec bc
002FA5 EDB0                B   165    				ldir
                           B   166    				
002FA7 2A FE 50 00         B   167    				ld hl,(attributes_address)		002FAB ED4B 07 51 00       B   168    				ld bc,(total_charmap_bytes)
002FB0 0B                  B   169    				dec bc
002FB1 3600                B   170    				ld (hl),0
002FB3 E5                  B   171    				push hl
002FB4 D1                  B   172    				pop de
002FB5 13                  B   173    				inc de
002FB6 EDB0                B   174    				ldir				
                           B   175    
002FB8 2A FB 50 00         B   176    				ld hl,(charmap_address)			002FBC ED4B 07 51 00       B   177    				ld bc,(total_charmap_bytes)
002FC1 0B                  B   178    				dec bc
002FC2 3620                B   179    				ld (hl),' '
002FC4 E5                  B   180    				push hl
002FC5 D1                  B   181    				pop de
002FC6 13                  B   182    				inc de
002FC7 EDB0                B   183    				ldir				
                           B   184    
002FC9 01000000            B   185    				ld bc,0
002FCD ED43 29 53 00       B   186    				ld (cursor_y),bc
002FD2 AF                  B   187    				xor a							002FD3 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 121


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
002FD4                     B   193    hwsc_scroll_up	
                           B   194    				
002FD4 C5                  B   195    				push bc
002FD5 D5                  B   196    				push de
002FD6 E5                  B   197    				push hl
                           B   198    
002FD7 2A 04 51 00         B   199    				ld hl,(total_window_bytes)
002FDB ED5B 0A 51 00       B   200    				ld de,(total_row_bytes)
002FE0 AF                  B   201    				xor a
002FE1 ED52                B   202    				sbc hl,de
002FE3 E5                  B   203    				push hl
002FE4 C1                  B   204    				pop bc							002FE5 2A F8 50 00         B   205    				ld hl,(video_window_address)
002FE9 ED5B 0A 51 00       B   206    				ld de,(total_row_bytes)
002FEE 19                  B   207    				add hl,de						002FEF ED5B F8 50 00       B   208    				ld de,(video_window_address)	002FF4 EDB0                B   209    				ldir
                           B   210    				
002FF6 EB                  B   211    				ex de,hl						002FF7 3A BB 50 00         B   212    				ld a,(background_colour)
002FFB E60F                B   213    				and 0fh
002FFD 4F                  B   214    				ld c,a
002FFE 07                  B   215    				rlca
002FFF 07                  B   216    				rlca
003000 07                  B   217    				rlca
003001 07                  B   218    				rlca
003002 B1                  B   219    				or c
003003 77                  B   220    				ld (hl),a
003004 ED4B 0A 51 00       B   221    				ld bc,(total_row_bytes)
003009 0B                  B   222    				dec bc
00300A E5                  B   223    				push hl
00300B D1                  B   224    				pop de
00300C 13                  B   225    				inc de
00300D EDB0                B   226    				ldir
                           B   227    
00300F 2A FB 50 00         B   228    				ld hl,(charmap_address)			003013 ED5B E3 50 00       B   229    				ld de,(window_columns)
003018 19                  B   230    				add hl,de
003019 ED5B FB 50 00       B   231    				ld de,(charmap_address)
00301E ED4B E0 50 00       B   232    				ld bc,(window_rows)
003023 0D                  B   233    				dec c
003024 3A E3 50 00         B   234    				ld a,(window_columns)
003028 47                  B   235    				ld b,a
003029 ED4C                B   236    				mlt bc
00302B C5                  B   237    				push bc
00302C EDB0                B   238    				ldir
00302E C1                  B   239    				pop bc							                           B   240    
00302F 2A FB 50 00         B   241    				ld hl,(charmap_address)			003033 09                  B   242    				add hl,bc
003034 3620                B   243    				ld (hl),' '
003036 ED4B E3 50 00       B   244    				ld bc,(window_columns)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 122


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
00303B 0B                  B   245    				dec bc
00303C E5                  B   246    				push hl
00303D D1                  B   247    				pop de
00303E 13                  B   248    				inc de
00303F EDB0                B   249    				ldir
                           B   250    					
003041 2A FE 50 00         B   251    				ld hl,(attributes_address)		003045 ED5B E3 50 00       B   252    				ld de,(window_columns)
00304A 19                  B   253    				add hl,de
00304B ED5B FE 50 00       B   254    				ld de,(attributes_address)
003050 ED4B E0 50 00       B   255    				ld bc,(window_rows)
003055 0D                  B   256    				dec c
003056 3A E3 50 00         B   257    				ld a,(window_columns)
00305A 47                  B   258    				ld b,a
00305B ED4C                B   259    				mlt bc
00305D C5                  B   260    				push bc
00305E EDB0                B   261    				ldir
003060 C1                  B   262    				pop bc			
                           B   263    
003061 2A FE 50 00         B   264    				ld hl,(attributes_address)		003065 09                  B   265    				add hl,bc
003066 3600                B   266    				ld (hl),0
003068 ED4B E3 50 00       B   267    				ld bc,(window_columns)
00306D 0B                  B   268    				dec bc
00306E E5                  B   269    				push hl
00306F D1                  B   270    				pop de
003070 13                  B   271    				inc de
003071 EDB0                B   272    				ldir
                           B   273    
003073 E1                  B   274    				pop hl
003074 D1                  B   275    				pop de
003075 C1                  B   276    				pop bc
003076 AF                  B   277    				xor a							003077 C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
003078                     B   291    hwsc_plot_char
003078 E5                  B   292    				push hl							003079 F5                  B   293    				push af
00307A 3A B9 50 00         B   294    				ld a,(current_pen)
00307E 32 DD 50 00         B   295    				ld (plotchar_colour),a
003082 18 02               B   296    				jr plotc_go
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 123


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
                           B   297    				
003084                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
003084 E5                  B   300    				push hl
003085 F5                  B   301    				push af							003086 3A E0 50 00         B   302    plotc_go		ld a,(window_rows)				00308A 3D                  B   303    				dec a
00308B B9                  B   304    				cp c							00308C 38 08               B   305    				jr c,win_err
00308E 3A E3 50 00         B   306    				ld a,(window_columns)
003092 3D                  B   307    				dec a
003093 B8                  B   308    				cp b
003094 30 06               B   309    				jr nc,win_ok
003096 F1                  B   310    win_err			pop af
003097 E1                  B   311    				pop hl
003098 3E82                B   312    				ld a,82h						00309A B7                  B   313    				or a
00309B C9                  B   314    				ret
                           B   315    				
00309C F1                  B   316    win_ok			pop af
00309D D5                  B   317    				push de
00309E C5                  B   318    				push bc
00309F DDE5                B   319    				push ix
0030A1 FDE5                B   320    				push iy
0030A3 2A EF 50 00         B   321    				ld hl,(font_height_lines)		0030A7 D620                B   322    				sub a,32
0030A9 67                  B   323    				ld h,a
0030AA C620                B   324    				add a,32
0030AC ED6C                B   325    				mlt hl							0030AE ED5B F2 50 00       B   326    				ld de,(font_addr)
0030B3 19                  B   327    				add hl,de
0030B4 E5                  B   328    				push hl
0030B5 DDE1                B   329    				pop ix							                           B   330    				
0030B7 11000000            B   331    				ld de,0
0030BB 2A 0A 51 00         B   332    				ld hl,(total_row_bytes)			0030BF 5D                  B   333    				ld e,l
0030C0 51                  B   334    				ld d,c
0030C1 ED5C                B   335    				mlt de							0030C3 69                  B   336    				ld l,c							0030C4 ED6C                B   337    				mlt hl							0030C6 29                  B   338    				add hl,hl						0030C7 29                  B   339    				add hl,hl
0030C8 29                  B   340    				add hl,hl
0030C9 29                  B   341    				add hl,hl
0030CA 29                  B   342    				add hl,hl
0030CB 29                  B   343    				add hl,hl
0030CC 29                  B   344    				add hl,hl
0030CD 29                  B   345    				add hl,hl
0030CE 19                  B   346    				add hl,de						0030CF ED5B EC 50 00       B   347    				ld de,(font_width_bytes)
0030D4 50                  B   348    				ld d,b	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 124


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
0030D5 ED5C                B   349    				mlt de							0030D7 19                  B   350    				add hl,de						0030D8 ED5B F8 50 00       B   351    				ld de,(video_window_address)
0030DD 19                  B   352    				add hl,de
0030DE E5                  B   353    				push hl
0030DF FDE1                B   354    				pop iy							                           B   355    				
0030E1 2A E3 50 00         B   356    				ld hl,(window_columns)			0030E5 61                  B   357    				ld h,c							0030E6 ED6C                B   358    				mlt hl
0030E8 11000000            B   359    				ld de,0
0030EC 58                  B   360    				ld e,b
0030ED 19                  B   361    				add hl,de
0030EE EB                  B   362    				ex de,hl
0030EF 2A FB 50 00         B   363    				ld hl,(charmap_address)
0030F3 19                  B   364    				add hl,de
0030F4 77                  B   365    				ld (hl),a
                           B   366    
0030F5 3A DD 50 00         B   367    				ld a,(plotchar_colour)			0030F9 2A FE 50 00         B   368    				ld hl,(attributes_address)
0030FD 19                  B   369    				add hl,de
0030FE 77                  B   370    				ld (hl),a
                           B   371    
0030FF 57                  B   372    				ld d,a				
003100 E6F0                B   373    				and 0f0h
003102 20 0E               B   374    				jr nz,notransbg
003104 3A BB 50 00         B   375    				ld a,(background_colour)
003108 E60F                B   376    				and 0fh
00310A 47                  B   377    				ld b,a
00310B 07                  B   378    				rlca
00310C 07                  B   379    				rlca
00310D 07                  B   380    				rlca
00310E 07                  B   381    				rlca
00310F 4F                  B   382    				ld c,a
003110 18 06               B   383    				jr gotbg
003112 4F                  B   384    notransbg		ld c,a							003113 0F                  B   385    				rrca
003114 0F                  B   386    				rrca
003115 0F                  B   387    				rrca
003116 0F                  B   388    				rrca
003117 47                  B   389    				ld b,a							003118 7A                  B   390    gotbg			ld a,d
003119 E60F                B   391    				and 0fh
00311B 20 0E               B   392    				jr nz,notransfg
00311D 3A BB 50 00         B   393    				ld a,(background_colour)
003121 E60F                B   394    				and 0fh
003123 57                  B   395    				ld d,a
003124 07                  B   396    				rlca
003125 07                  B   397    				rlca
003126 07                  B   398    				rlca
003127 07                  B   399    				rlca
003128 5F                  B   400    				ld e,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 125


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
003129 18 06               B   401    				jr gotfg
00312B 57                  B   402    notransfg		ld d,a							00312C 07                  B   403    				rlca
00312D 07                  B   404    				rlca
00312E 07                  B   405    				rlca
00312F 07                  B   406    				rlca
003130 5F                  B   407    				ld e,a							                           B   408    				
003131 D9                  B   409    gotfg			exx
003132 3A EF 50 00         B   410    				ld a,(font_height_lines)
003136 47                  B   411    				ld b,a
003137 2A E6 50 00         B   412    				ld hl,(window_width_bytes)
00313B ED5B EC 50 00       B   413    				ld de,(font_width_bytes)
003140 AF                  B   414    				xor a
003141 ED52                B   415    				sbc hl,de
003143 EB                  B   416    				ex de,hl
                           B   417    						
003144 D9                  B   418    charloop		exx
003145 DD6E00              B   419    				ld l,(ix)						003148 CB25                B   420    				sla l
00314A 79                  B   421    				ld a,c
00314B 30 01               B   422    				jr nc,nbgmsb7
00314D 7B                  B   423    				ld a,e
00314E CB25                B   424    nbgmsb7			sla l
003150 30 03               B   425    				jr nc,nfgmsb6
003152 B2                  B   426    				or d
003153 18 01               B   427    				jr gotpixcol76
003155 B0                  B   428    nfgmsb6			or b
003156 FD7700              B   429    gotpixcol76		ld (iy),a
003159 FD23                B   430    				inc iy
                           B   431    
00315B CB25                B   432    				sla l
00315D 79                  B   433    				ld a,c
00315E 30 01               B   434    				jr nc,nbgmsb5
003160 7B                  B   435    				ld a,e
003161 CB25                B   436    nbgmsb5			sla l
003163 30 03               B   437    				jr nc,nfgmsb4
003165 B2                  B   438    				or d
003166 18 01               B   439    				jr gotpixcol54
003168 B0                  B   440    nfgmsb4			or b
003169 FD7700              B   441    gotpixcol54		ld (iy),a
00316C FD23                B   442    				inc iy
                           B   443    				
00316E CB25                B   444    				sla l
003170 79                  B   445    				ld a,c
003171 30 01               B   446    				jr nc,nbgmsb3
003173 7B                  B   447    				ld a,e
003174 CB25                B   448    nbgmsb3			sla l
003176 30 03               B   449    				jr nc,nfgmsb2
003178 B2                  B   450    				or d
003179 18 01               B   451    				jr gotpixcol32
00317B B0                  B   452    nfgmsb2			or b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 126


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
00317C FD7700              B   453    gotpixcol32		ld (iy),a
00317F FD23                B   454    				inc iy
                           B   455    				
003181 CB25                B   456    				sla l
003183 79                  B   457    				ld a,c
003184 30 01               B   458    				jr nc,nbgmsb1
003186 7B                  B   459    				ld a,e
003187 CB25                B   460    nbgmsb1			sla l
003189 30 03               B   461    				jr nc,nfgmsb0
00318B B2                  B   462    				or d
00318C 18 01               B   463    				jr gotpixcol10
00318E B0                  B   464    nfgmsb0			or b
00318F FD7700              B   465    gotpixcol10		ld (iy),a
003192 FD23                B   466    				inc iy
                           B   467    				
003194 DD23                B   468    				inc ix
003196 D9                  B   469    				exx
003197 FD19                B   470    				add iy,de
003199 10 A9               B   471    				djnz charloop
00319B D9                  B   472    				exx 
                           B   473    				
00319C FDE1                B   474    				pop iy
00319E DDE1                B   475    				pop ix
0031A0 C1                  B   476    				pop bc
0031A1 D1                  B   477    				pop de
0031A2 E1                  B   478    				pop hl
0031A3 AF                  B   479    				xor a
0031A4 C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
0031A5                     B   484    hwsc_remove_cursor
                           B   485    
0031A5 ED4B 29 53 00       B   486    				ld bc,(cursor_y)
0031AA CD 4D 32 00         B   487    				call hwsc_get_charmap_addr_xy
0031AE 1A                  B   488    				ld a,(de)
0031AF 32 DD 50 00         B   489    				ld (plotchar_colour),a
0031B3 7E                  B   490    				ld a,(hl)				
0031B4 C3 84 30 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
0031B8                     B   494    hwsc_draw_cursor
                           B   495    
0031B8 21 DF 50 00         B   496    				ld hl,active_cursor_image
0031BC 3A DE 50 00         B   497    				ld a,(req_cursor_image)
0031C0 BE                  B   498    				cp (hl)
0031C1 C4 15 32 00         B   499    				call nz,hwsc_set_cursor_image
                           B   500    
0031C5 ED4B 29 53 00       B   501    				ld bc,(cursor_y)
0031CA 2A 0A 51 00         B   502    				ld hl,(total_row_bytes)			0031CE 5D                  B   503    				ld e,l
0031CF 51                  B   504    				ld d,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 127


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
0031D0 ED5C                B   505    				mlt de
0031D2 69                  B   506    				ld l,c
0031D3 ED6C                B   507    				mlt hl
0031D5 29                  B   508    				add hl,hl
0031D6 29                  B   509    				add hl,hl
0031D7 29                  B   510    				add hl,hl
0031D8 29                  B   511    				add hl,hl
0031D9 29                  B   512    				add hl,hl
0031DA 29                  B   513    				add hl,hl
0031DB 29                  B   514    				add hl,hl
0031DC 29                  B   515    				add hl,hl
0031DD 19                  B   516    				add hl,de
0031DE ED5B EC 50 00       B   517    				ld de,(font_width_bytes)
0031E3 50                  B   518    				ld d,b
0031E4 ED5C                B   519    				mlt de		
0031E6 19                  B   520    				add hl,de						0031E7 ED5B F8 50 00       B   521    				ld de,(video_window_address)
0031EC 19                  B   522    				add hl,de						0031ED E5                  B   523    				push hl
0031EE FDE1                B   524    				pop iy
                           B   525    				
0031F0 ED4B EF 50 00       B   526    				ld bc,(font_height_lines)
0031F5 DD2A 01 51 00       B   527    				ld ix,(cursor_image_address)	0031FA ED5B E6 50 00       B   528    				ld de,(window_width_bytes)
                           B   529    
0031FF ED2300              B   530    curlp2			lea hl,iy+0
003202 0604                B   531    				ld b,4							003204 7E                  B   532    curlp1			ld a,(hl)
003205 DDAE00              B   533    				xor (ix)
003208 77                  B   534    				ld (hl),a
003209 DD23                B   535    				inc ix
00320B 23                  B   536    				inc hl
00320C 10 F6               B   537    				djnz curlp1
                           B   538    											
00320E FD19                B   539    				add iy,de
003210 0D                  B   540    				dec c
003211 20 EC               B   541    				jr nz,curlp2
                           B   542    
003213 AF                  B   543    				xor a							003214 C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
                           B   548    
003215                     B   549    hwsc_set_cursor_image
                           B   550    
003215 32 DF 50 00         B   551    				ld (active_cursor_image),a
003219 D620                B   552    				sub a,32						00321B 2A EF 50 00         B   553    				ld hl,(font_height_lines)
00321F 67                  B   554    				ld h,a
003220 ED6C                B   555    				mlt hl
003222 ED5B F2 50 00       B   556    				ld de,(font_addr)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 128


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
003227 19                  B   557    				add hl,de
003228 ED5B 01 51 00       B   558    				ld de,(cursor_image_address)	00322D 3A EF 50 00         B   559    				ld a,(font_height_lines)
003231 47                  B   560    				ld b,a
003232 C5                  B   561    fclp2			push bc
                           B   562    
003233 4E                  B   563    				ld c,(hl)
003234 0604                B   564    				ld b,4							003236 3E00                B   565    fclp1			ld a,0
003238 CB21                B   566    				sla c
00323A 30 02               B   567    				jr nc,nopixl
00323C F6F0                B   568    				or a,0f0h						00323E CB21                B   569    nopixl			sla c
003240 30 02               B   570    				jr nc,nopixr
003242 F60F                B   571    				or a,0fh
003244 12                  B   572    nopixr			ld (de),a
003245 13                  B   573    				inc de
003246 10 EE               B   574    				djnz fclp1
                           B   575    			
003248 23                  B   576    				inc hl
003249 C1                  B   577    				pop bc
00324A 10 E6               B   578    				djnz fclp2
00324C C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
00324D                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
                           B   588    				
00324D 11000000            B   589    				ld de,0
003251 3A E3 50 00         B   590    				ld a,(window_columns)			003255 5F                  B   591    				ld e,a							003256 51                  B   592    				ld d,c							003257 ED5C                B   593    				mlt de
003259 7B                  B   594    				ld a,e
00325A 80                  B   595    				add a,b
00325B 5F                  B   596    				ld e,a
00325C 30 01               B   597    				jr nc,choffh_ok
00325E 14                  B   598    				inc d
00325F 2A FB 50 00         B   599    choffh_ok		ld hl,(charmap_address)
003263 19                  B   600    				add hl,de
003264 E5                  B   601    				push hl
003265 2A FE 50 00         B   602    				ld hl,(attributes_address)
003269 19                  B   603    				add hl,de
00326A EB                  B   604    				ex de,hl
00326B E1                  B   605    				pop hl
00326C AF                  B   606    				xor a							00326D C9                  B   607    				ret
                           B   608    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 129


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
                           B   609    ;----------------------------------------------
                           B   610    
00326E                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
00326E C5                  B   615    				push bc
00326F D5                  B   616    				push de
003270 E5                  B   617    				push hl
                           B   618    
003271 3A 29 53 00         B   619    				ld a,(cursor_y)
003275 2A E3 50 00         B   620    				ld hl,(window_columns)
003279 67                  B   621    				ld h,a
00327A ED6C                B   622    				mlt hl
00327C 11000000            B   623    				ld de,0
003280 58                  B   624    				ld e,b
003281 19                  B   625    				add hl,de
003282 EB                  B   626    				ex de,hl
003283 D5                  B   627    				push de
003284 2A FB 50 00         B   628    				ld hl,(charmap_address)
003288 19                  B   629    				add hl,de						                           B   630    
003289 E5                  B   631    				push hl
00328A D1                  B   632    				pop de
00328B 1B                  B   633    				dec de							00328C 3A E3 50 00         B   634    				ld a,(window_columns)
003290 90                  B   635    				sub b
003291 01000000            B   636    				ld bc,0
003295 4F                  B   637    				ld c,a							003296 C5                  B   638    				push bc
003297 EDB0                B   639    				ldir
003299 C1                  B   640    				pop bc
00329A 3E20                B   641    				ld a,32
00329C 12                  B   642    				ld (de),a						                           B   643    				
00329D 2A FE 50 00         B   644    				ld hl,(attributes_address)		0032A1 D1                  B   645    				pop de
0032A2 19                  B   646    				add hl,de
0032A3 E5                  B   647    				push hl
0032A4 D1                  B   648    				pop de
0032A5 1B                  B   649    				dec de							0032A6 EDB0                B   650    				ldir							0032A8 3A BB 50 00         B   651    				ld a,(background_colour)
0032AC 12                  B   652    				ld (de),a						                           B   653    
0032AD CD 13 33 00         B   654    				call hwsc_redraw_line			                           B   655    
0032B1 E1                  B   656    				pop hl
0032B2 D1                  B   657    				pop de
0032B3 C1                  B   658    				pop bc
0032B4 C9                  B   659    				ret
                           B   660    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 130


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
                           B   661    
                           B   662    
0032B5                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
0032B5 C5                  B   667    				push bc
0032B6 D5                  B   668    				push de
0032B7 E5                  B   669    				push hl
                           B   670    	
0032B8 21 2A 53 00         B   671    				ld hl,cursor_x				
0032BC 3A E3 50 00         B   672    				ld a,(window_columns)
0032C0 3D                  B   673    				dec a
0032C1 BE                  B   674    				cp (hl)			
0032C2 28 4B               B   675    				jr z,chright_end
                           B   676    
0032C4 46                  B   677    				ld b,(hl)
0032C5 11000000            B   678    				ld de,0
0032C9 57                  B   679    				ld d,a
0032CA 14                  B   680    				inc d
0032CB 3A 29 53 00         B   681    				ld a,(cursor_y)
0032CF 5F                  B   682    				ld e,a
0032D0 ED5C                B   683    				mlt de
0032D2 D5                  B   684    				push de 
                           B   685    				
0032D3 C5                  B   686    				push bc
0032D4 2A FB 50 00         B   687    				ld hl,(charmap_address)
0032D8 ED4B E3 50 00       B   688    				ld bc,(window_columns)
0032DD 0B                  B   689    				dec bc
0032DE 0B                  B   690    				dec bc
0032DF 09                  B   691    				add hl,bc
0032E0 C1                  B   692    				pop bc
                           B   693    				
0032E1 19                  B   694    				add hl,de						0032E2 E5                  B   695    				push hl
0032E3 D1                  B   696    				pop de
0032E4 13                  B   697    				inc de							0032E5 3A E3 50 00         B   698    				ld a,(window_columns)
0032E9 3D                  B   699    				dec a
0032EA 90                  B   700    				sub b
0032EB 47                  B   701    				ld b,a
0032EC C5                  B   702    				push bc							0032ED 7E                  B   703    mchrlp			ld a,(hl)
0032EE 12                  B   704    				ld (de),a
0032EF 2B                  B   705    				dec hl
0032F0 1B                  B   706    				dec de
0032F1 10 FA               B   707    				djnz mchrlp
                           B   708    
0032F3 2A FE 50 00         B   709    				ld hl,(attributes_address)		0032F7 ED4B E3 50 00       B   710    				ld bc,(window_columns)
0032FC 0B                  B   711    				dec bc
0032FD 0B                  B   712    				dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 131


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
0032FE 09                  B   713    				add hl,bc
                           B   714    
0032FF C1                  B   715    				pop bc
003300 D1                  B   716    				pop de
003301 19                  B   717    				add hl,de						003302 E5                  B   718    				push hl
003303 D1                  B   719    				pop de
003304 13                  B   720    				inc de							003305 7E                  B   721    mattrlp			ld a,(hl)
003306 12                  B   722    				ld (de),a
003307 2B                  B   723    				dec hl
003308 1B                  B   724    				dec de
003309 10 FA               B   725    				djnz mattrlp
                           B   726    
00330B CD 13 33 00         B   727    				call hwsc_redraw_line			                           B   728    
00330F E1                  B   729    chright_end		pop hl	
003310 D1                  B   730    				pop de
003311 C1                  B   731    				pop bc
003312 C9                  B   732    				ret
                           B   733    
                           B   734    ;----------------------------------------------
                           B   735    
003313                     B   736    hwsc_redraw_line
                           B   737    				
003313 3A 29 53 00         B   738    				ld a,(cursor_y)
003317 4F                  B   739    				ld c,a
                           B   740    		
003318                     B   741    hwsc_redraw_ui_line
                           B   742    
003318 ED5B E3 50 00       B   743    				ld de,(window_columns)			00331D 51                  B   744    				ld d,c
00331E ED5C                B   745    				mlt de
003320 0600                B   746    				ld b,0							003322 2A FE 50 00         B   747    rs_xloop		ld hl,(attributes_address)		003326 19                  B   748    				add hl,de
003327 7E                  B   749    				ld a,(hl)						003328 32 DD 50 00         B   750    				ld (plotchar_colour),a
00332C 2A FB 50 00         B   751    				ld hl,(charmap_address)
003330 19                  B   752    				add hl,de
003331 7E                  B   753    				ld a,(hl)				
003332 CD 84 30 00         B   754    				call hwsc_plotchar_specific_att
003336 13                  B   755    				inc de
003337 04                  B   756    				inc b
003338 3A E3 50 00         B   757    				ld a,(window_columns)
00333C B8                  B   758    				cp b
00333D 20 E3               B   759    				jr nz,rs_xloop
00333F C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
003340                     B   764    hwsc_charline_to_command_string	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 132


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_video_code.asm
                           B   765    								
003340 ED5B E3 50 00       B   766    				ld de,(window_columns)
003345 3A 29 53 00         B   767    				ld a,(cursor_y)					003349 57                  B   768    				ld d,a
00334A ED5C                B   769    				mlt de
00334C 2A FB 50 00         B   770    				ld hl,(charmap_address)
003350 19                  B   771    				add hl,de
003351 11 47 53 00         B   772    				ld de,commandstring				003355 ED4B E3 50 00       B   773    				ld bc,(window_columns)
00335A EDB0                B   774    				ldir
00335C C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
00335D C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
00335E 0E01                B   781    				ld c,1
003360 ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
003363 0E01                B   784    				ld c,port_hw_flags
003365 ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
003368 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
00336A C1                  B   788    				pop bc
00336B BF                  B   789    				cp a							00336C C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
00336D                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
00336D 3E48                B     9    					ld a,01001000b				00336F ED39AA              B    10    					out0 (CS0_CTL),a
003372 3E00                B    11    					ld a,000h					003374 ED39A8              B    12    					out0 (CS0_LBR),a
003377 3EFF                B    13    					ld a,0ffh	
003379 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
00337C 3E58                B    16    					ld a,01011000b
00337E ED39AD              B    17    					out0 (CS1_CTL),a			003381 3E00                B    18    					ld a,0
003383 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 133


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
                           B    22    
003386 3EFF                B    23    					ld a,0ffh
003388 ED399F              B    24    					out0 (PC_DDR),a				00338B AF                  B    25    					xor a
00338C ED39A0              B    26    					out0 (PC_ALT1),a
00338F ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
003392 3EFF                B    29    					ld a,0ffh					003394 ED39A3              B    30    					out0 (PD_DDR),a				003397 AF                  B    31    					xor a	
003398 ED39A4              B    32    					out0 (PD_ALT1),a			00339B 3E0F                B    33    					ld a,00fh				
00339D ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0033A0 ED3892              B    38    					in0 a,(TMR_ISS)
0033A3 E6FC                B    39    					and 11111100b
0033A5 F601                B    40    					or  00000001b
0033A7 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
0033AA AF                  B    46    					xor a
0033AB 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
0033AF C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
0033B0 11000000            B    53    hwsc_get_version	ld de,0
0033B4 0610                B    54    					ld b,16
0033B6 78                  B    55    gethwvlp			ld a,b
0033B7 3D                  B    56    					dec a
0033B8 ED3908              B    57    					out0 (port_selector),a		0033BB DB01                B    58    					in a,(port_hw_flags)		0033BD CB27                B    59    					sla a
0033BF CB13                B    60    					rl e
0033C1 CB12                B    61    					rl d
0033C3 10 F1               B    62    					djnz gethwvlp				                           B    63    									
0033C5 21260000            B    64    					ld hl,prose_version
0033C9 BF                  B    65    					cp a						0033CA C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 134


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
0033CB                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
0033CB CD D7 33 00         B    78    					call set_timeout
0033CF CD E8 33 00         B    79    twaitlp				call test_timeout
0033D3 28 FA               B    80    					jr z,twaitlp
0033D5 AF                  B    81    					xor a						0033D6 C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
0033D7 7B                  B    86    set_timeout			ld a,e						0033D8 ED3981              B    87    					out0 (TMR0_RR_L),a			0033DB 7A                  B    88    					ld a,d
0033DC ED3982              B    89    					out0 (TMR0_RR_H),a			0033DF 3E03                B    90    					ld a,00000011b				0033E1 ED3980              B    91    					out0 (TMR0_CTL),a			0033E4 ED3880              B    92    					in0 a,(TMR0_CTL)			0033E7 C9                  B    93    					ret
                           B    94    			
0033E8 ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			0033EB CB7F                B    96    					bit 7,a
0033ED C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
0033EE                     B   101    hwsc_read_rtc
0033EE D5                  B   102    					push de
0033EF C5                  B   103    					push bc
0033F0 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
0033F2 0608                B   105    					ld b,8
0033F4 21 8A 52 00         B   106    					ld hl,time_data
0033F8 ED92                B   107    					inimr						0033FA 0EE0                B   108    					ld c,RTC_SEC
0033FC 0600                B   109    					ld b,0
0033FE 1E08                B   110    					ld e,8
003400 21 8A 52 00         B   111    					ld hl,time_data
003404 ED78                B   112    timevloop			in a,(bc)					003406 BE                  B   113    					cp (hl)						003407 20 E7               B   114    					jr nz,hwsc_rtc_rlp			003409 23                  B   115    					inc hl
00340A 0C                  B   116    					inc c
00340B 1D                  B   117    					dec e
00340C 20 F6               B   118    					jr nz,timevloop
00340E 21 8A 52 00         B   119    					ld hl,time_data
003412 C1                  B   120    					pop bc
003413 D1                  B   121    					pop de
003414 BF                  B   122    					cp a						003415 C9                  B   123    					ret
                           B   124    
                           B   125    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 135


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
003416                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
003416 E5                  B   130    					push hl
003417 C5                  B   131    					push bc
003418 3E21                B   132    					ld a,00100001b				00341A ED39ED              B   133    					out0 (RTC_CTRL),a
00341D 0EE0                B   134    					ld c,RTC_SEC
00341F 0608                B   135    					ld b,8
003421 ED93                B   136    					otimr
003423 3E20                B   137    					ld a,00100000b				003425 ED39ED              B   138    					out0 (RTC_CTRL),a
003428 C1                  B   139    					pop bc
003429 E1                  B   140    					pop hl
00342A BF                  B   141    					cp a						00342B C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; RESET KEYBOARD ROUTINE 
                           B   147    ;----------------------------------------------
                           B   148    
00342C                     B   149    reset_keyboard
                           B   150    
                           B   151    ; If on return carry flag is set, keyboard init
                           B   152    
00342C 3E01                B   153    			ld a,0001b						; p
00342E ED3907              B   154    			out0 (port_ps2_ctrl),a
                           B   155    
003431 11080000            B   156    			ld de,8							; w
003435 CD CB 33 00         B   157    			call hwsc_time_delay
                           B   158    						
003439 3E03                B   159    			ld a,0011b
00343B ED3907              B   160    			out0 (port_ps2_ctrl),a			; p
00343E 3E02                B   161    			ld a,0010b
003440 ED3907              B   162    			out0 (port_ps2_ctrl),a			; r
                           B   163    
003443 2E09                B   164    			ld l,9							; 8
003445 CD 6C 34 00         B   165    kb_byte		call wait_kb_clk_low	
003449 D8                  B   166    			ret c
00344A AF                  B   167    			xor a
00344B ED3907              B   168    			out0 (port_ps2_ctrl),a			; K
00344E CD 95 34 00         B   169    			call wait_kb_clk_high
003452 D8                  B   170    			ret c
003453 2D                  B   171    			dec l
003454 20 EF               B   172    			jr nz,kb_byte
                           B   173    
003456 CD 6C 34 00         B   174    			call wait_kb_clk_low			; w
00345A D8                  B   175    			ret c
00345B CD 70 34 00         B   176    			call wait_kb_data_low			; w
00345F D8                  B   177    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 136


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
003460 CD 95 34 00         B   178    			call wait_kb_clk_high			; w
003464 D8                  B   179    			ret c
003465 CD 99 34 00         B   180    			call wait_kb_data_high
003469 D8                  B   181    			ret c
                           B   182    
00346A AF                  B   183    			xor a
00346B C9                  B   184    			ret
                           B   185    			
                           B   186    
                           B   187    
00346C                     B   188    wait_kb_clk_low
                           B   189    
00346C 3E01                B   190    			ld a,1
00346E 18 02               B   191    			jr ps2_test_lo
                           B   192    
003470                     B   193    wait_kb_data_low
                           B   194    		
003470 3E02                B   195    			ld a,2
                           B   196    
003472 C5                  B   197    ps2_test_lo	push bc
003473 D5                  B   198    			push de
003474 4F                  B   199    			ld c,a
003475 11004000            B   200    			ld de,04000h					; a
003479 CD D7 33 00         B   201    			call set_timeout
00347D 0604                B   202    kb_lw		ld b,4							; m
00347F CD E8 33 00         B   203    kb_lnlp		call test_timeout				; t
003483 28 04               B   204    			jr z,kb_lnto
003485 D1                  B   205    			pop de
003486 C1                  B   206    			pop bc
003487 37                  B   207    			scf								; c
003488 C9                  B   208    			ret
003489 ED3807              B   209    kb_lnto		in0 a,(port_ps2_ctrl)
00348C A1                  B   210    			and c
00348D 20 EE               B   211    			jr nz,kb_lw
00348F 10 EE               B   212    			djnz kb_lnlp		
003491 D1                  B   213    			pop de
003492 C1                  B   214    			pop bc
003493 AF                  B   215    			xor a
003494 C9                  B   216    			ret								; c
                           B   217    
                           B   218    
003495                     B   219    wait_kb_clk_high
                           B   220    
003495 3E01                B   221    			ld a,1
003497 18 02               B   222    			jr ps2_test_hi
                           B   223    
003499                     B   224    wait_kb_data_high
                           B   225    		
003499 3E02                B   226    			ld a,2
                           B   227    			
00349B C5                  B   228    ps2_test_hi	push bc
00349C D5                  B   229    			push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 137


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
00349D 4F                  B   230    			ld c,a
00349E 11004000            B   231    			ld de,04000h					; a
0034A2 CD D7 33 00         B   232    			call set_timeout
0034A6 0604                B   233    kb_hw		ld b,4							; m
0034A8 CD E8 33 00         B   234    kb_hnlp		call test_timeout				; t
0034AC 28 04               B   235    			jr z,kb_hnto
0034AE D1                  B   236    			pop de
0034AF C1                  B   237    			pop bc
0034B0 37                  B   238    			scf								; c
0034B1 C9                  B   239    			ret
0034B2 ED3807              B   240    kb_hnto		in0 a,(port_ps2_ctrl)
0034B5 A1                  B   241    			and c
0034B6 28 EE               B   242    			jr z,kb_hw
0034B8 10 EE               B   243    			djnz kb_hnlp		
0034BA D1                  B   244    			pop de
0034BB C1                  B   245    			pop bc
0034BC AF                  B   246    			xor a							; c
0034BD C9                  B   247    			ret
                           B   248    
                           B   249    
                           B   250    ;----------------------------------------------
                           B   251    
0034BE                     B   252    purge_keyboard
                           B   253    			
0034BE ED3807              B   254    			in0 a,(port_ps2_ctrl)
0034C1 CB67                B   255    			bit 4,a
0034C3 C8                  B   256    			ret z
0034C4 ED3802              B   257    			in0 a,(port_keyboard_data)			0034C7 18 F5               B   258    			jr purge_keyboard
                           B   259    
                           B   260    ;----------------------------------------------
                           B   261    
0034C9                     B   262    reset_mouse
                           B   263    			
0034C9 CD D2 34 00         B   264    			call mouse_init
0034CD D0                  B   265    			ret nc
0034CE 3E8A                B   266    			ld a,08ah							0034D0 B7                  B   267    			or a
0034D1 C9                  B   268    			ret
                           B   269    
                           B   270    
0034D2                     B   271    mouse_init			
                           B   272    
                           B   273    ; Returns with carry flag set if mouse did not 
                           B   274    
0034D2 3E02                B   275    			ld a,00000010b
0034D4 ED3905              B   276    			out0 (port_irq_ctrl),a				                           B   277    
0034D7 3E03                B   278    			ld a,3
0034D9 32 81 54 00         B   279    			ld (mouse_packet_size),a
0034DD AF                  B   280    			xor a
0034DE 32 80 54 00         B   281    			ld (mouse_id),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 138


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
                           B   282    			
                           B   283    
0034E2 3EFF                B   284    			ld a,0ffh							0034E4 CD C4 35 00         B   285    			call write_to_mouse_absorb_loopback
0034E8 D8                  B   286    			ret c
0034E9 0605                B   287    			ld b,5
0034EB C5                  B   288    ms_initlp	push bc
0034EC CD 36 36 00         B   289    			call wait_mouse_byte				0034F0 C1                  B   290    			pop bc
0034F1 D8                  B   291    			ret c
0034F2 FEAA                B   292    			cp 0aah
0034F4 28 06               B   293    			jr z,ms_postok
0034F6 10 F3               B   294    			djnz ms_initlp
0034F8 C3 C0 35 00         B   295    			jr bad_mouse
                           B   296    			
0034FC CD 36 36 00         B   297    ms_postok	call wait_mouse_byte				003500 D8                  B   298    			ret c
003501 B7                  B   299    			or a
003502 C2 C0 35 00         B   300    			jr nz,bad_mouse						                           B   301    			
                           B   302    			
003506 3EF3                B   303    			ld a,0f3h							003508 CD C4 35 00         B   304    			call write_to_mouse_absorb_loopback
00350C D8                  B   305    			ret c
00350D CD 36 36 00         B   306    			call wait_mouse_byte				003511 D8                  B   307    			ret c
003512 3EC8                B   308    			ld a,200							003514 CD C4 35 00         B   309    			call write_to_mouse_absorb_loopback
003518 D8                  B   310    			ret c
003519 CD 36 36 00         B   311    			call wait_mouse_byte				00351D D8                  B   312    			ret c
                           B   313    			
00351E 3EF3                B   314    			ld a,0f3h
003520 CD C4 35 00         B   315    			call write_to_mouse_absorb_loopback
003524 D8                  B   316    			ret c
003525 CD 36 36 00         B   317    			call wait_mouse_byte				003529 D8                  B   318    			ret c
00352A 3E64                B   319    			ld a,100							00352C CD C4 35 00         B   320    			call write_to_mouse_absorb_loopback
003530 D8                  B   321    			ret c
003531 CD 36 36 00         B   322    			call wait_mouse_byte				003535 D8                  B   323    			ret c
                           B   324    
003536 3EF3                B   325    			ld a,0f3h
003538 CD C4 35 00         B   326    			call write_to_mouse_absorb_loopback
00353C D8                  B   327    			ret c
00353D CD 36 36 00         B   328    			call wait_mouse_byte				003541 D8                  B   329    			ret c
003542 3E50                B   330    			ld a,80								003544 CD C4 35 00         B   331    			call write_to_mouse_absorb_loopback
003548 D8                  B   332    			ret c
003549 CD 36 36 00         B   333    			call wait_mouse_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 139


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
00354D D8                  B   334    			ret c
                           B   335    
00354E 3EF2                B   336    			ld a,0f2h
003550 CD C4 35 00         B   337    			call write_to_mouse_absorb_loopback
003554 D8                  B   338    			ret c
003555 CD 36 36 00         B   339    			call wait_mouse_byte				003559 D8                  B   340    			ret c
00355A CD 36 36 00         B   341    			call wait_mouse_byte				00355E D8                  B   342    			ret c
00355F 32 80 54 00         B   343    			ld (mouse_id),a
003563 B7                  B   344    			or a								003564 28 0A               B   345    			jr z,standard_mouse
003566 FE03                B   346    			cp 3
003568 20 56               B   347    			jr nz,bad_mouse						00356A 3E04                B   348    			ld a,4
00356C 32 81 54 00         B   349    			ld (mouse_packet_size),a
                           B   350    
003570                     B   351    standard_mouse
                           B   352    
003570 3EE8                B   353    			ld a,0e8h							003572 CD C4 35 00         B   354    			call write_to_mouse_absorb_loopback
003576 D8                  B   355    			ret c
003577 CD 36 36 00         B   356    			call wait_mouse_byte				00357B D8                  B   357    			ret c
00357C 3A AA 54 00         B   358    			ld a,(mouse_resolution)				003580 CD C4 35 00         B   359    			call write_to_mouse_absorb_loopback
003584 D8                  B   360    			ret c
003585 CD 36 36 00         B   361    			call wait_mouse_byte				003589 D8                  B   362    			ret c
                           B   363    	
00358A 3A AB 54 00         B   364    			ld a,(mouse_scaling)				00358E CD C4 35 00         B   365    			call write_to_mouse_absorb_loopback
003592 D8                  B   366    			ret c
003593 CD 36 36 00         B   367    			call wait_mouse_byte				003597 D8                  B   368    			ret c
                           B   369    				
003598 3EF3                B   370    			ld a,0f3h							00359A CD C4 35 00         B   371    			call write_to_mouse_absorb_loopback
00359E D8                  B   372    			ret c
00359F CD 36 36 00         B   373    			call wait_mouse_byte				0035A3 D8                  B   374    			ret c
0035A4 3A A9 54 00         B   375    			ld a,(mouse_sample_rate)			0035A8 CD C4 35 00         B   376    			call write_to_mouse_absorb_loopback
0035AC D8                  B   377    			ret c
0035AD CD 36 36 00         B   378    			call wait_mouse_byte				0035B1 D8                  B   379    			ret c
                           B   380    
0035B2 3EF4                B   381    			ld a,0f4h							0035B4 CD C4 35 00         B   382    			call write_to_mouse_absorb_loopback
0035B8 D8                  B   383    			ret c
0035B9 CD 36 36 00         B   384    			call wait_mouse_byte				0035BD D8                  B   385    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 140


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
0035BE AF                  B   386    			xor a								0035BF C9                  B   387    			ret
                           B   388    
0035C0 3E89                B   389    bad_mouse	ld a,089h							0035C2 B7                  B   390    			or a
0035C3 C9                  B   391    			ret
                           B   392    
                           B   393    
                           B   394    
0035C4                     B   395    write_to_mouse_absorb_loopback
                           B   396    			
0035C4 CD CE 35 00         B   397    			call write_to_mouse
0035C8 D8                  B   398    			ret c
0035C9 CD 36 36 00         B   399    			call wait_mouse_byte				0035CD C9                  B   400    			ret
                           B   401    			
                           B   402    ;----------------------------------------------
                           B   403    				
0035CE                     B   404    write_to_mouse
                           B   405    
                           B   406    ; Put byte to send to mouse in A
                           B   407    
0035CE 4F                  B   408    			ld c,a								0035CF 3E04                B   409    			ld a,0100b							0035D1 ED3907              B   410    			out0 (port_ps2_ctrl),a
0035D4 11080000            B   411    			ld de,8
0035D8 CD CB 33 00         B   412    			call hwsc_time_delay				0035DC 3E0C                B   413    			ld a,1100b
0035DE ED3907              B   414    			out0 (port_ps2_ctrl),a				0035E1 3E08                B   415    			ld a,1000b
0035E3 ED3907              B   416    			out0 (port_ps2_ctrl),a				                           B   417    			
0035E6 1601                B   418    			ld d,1								0035E8 0608                B   419    			ld b,8								0035EA CD 52 36 00         B   420    mdoloop		call wait_mouse_clk_low	
0035EE D8                  B   421    			ret c
0035EF AF                  B   422    			xor a
0035F0 CBDF                B   423    			set 3,a
0035F2 CB41                B   424    			bit 0,c
0035F4 28 03               B   425    			jr z,mdbzero
0035F6 CB9F                B   426    			res 3,a
0035F8 14                  B   427    			inc d
0035F9 ED3907              B   428    mdbzero		out0 (port_ps2_ctrl),a				0035FC CD 5E 36 00         B   429    			call wait_mouse_clk_high
003600 D8                  B   430    			ret c
003601 CB19                B   431    			rr c
003603 10 E5               B   432    			djnz mdoloop
                           B   433    
003605 CD 52 36 00         B   434    			call wait_mouse_clk_low
003609 D8                  B   435    			ret c
00360A AF                  B   436    			xor a
00360B CB42                B   437    			bit 0,d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 141


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
00360D 20 02               B   438    			jr nz,parone
00360F CBDF                B   439    			set 3,a
003611 ED3907              B   440    parone		out0 (port_ps2_ctrl),a				003614 CD 5E 36 00         B   441    			call wait_mouse_clk_high
003618 D8                  B   442    			ret c
                           B   443    			
003619 CD 52 36 00         B   444    			call wait_mouse_clk_low
00361D D8                  B   445    			ret c
00361E AF                  B   446    			xor a
00361F ED3907              B   447    			out0 (port_ps2_ctrl),a				                           B   448    
003622 CD 58 36 00         B   449    			call wait_mouse_data_low			003626 D8                  B   450    			ret c
003627 CD 52 36 00         B   451    			call wait_mouse_clk_low				00362B D8                  B   452    			ret c
                           B   453    				
00362C CD 64 36 00         B   454    			call wait_mouse_data_high			003630 D8                  B   455    			ret c
003631 CD 5E 36 00         B   456    			call wait_mouse_clk_high			003635 C9                  B   457    			ret 
                           B   458    
                           B   459    ;----------------------------------------------
                           B   460    
                           B   461    
003636                     B   462    wait_mouse_byte
                           B   463    
003636 11008000            B   464    			ld de,8000h
00363A CD D7 33 00         B   465    			call set_timeout					                           B   466    
00363E ED3807              B   467    wait_mloop	in0 a,(port_ps2_ctrl)
003641 CB6F                B   468    			bit 5,a
003643 20 08               B   469    			jr nz,rec_mbyte
                           B   470    			
003645 CD E8 33 00         B   471    			call test_timeout
003649 28 F3               B   472    			jr z,wait_mloop
00364B 37                  B   473    			scf									00364C C9                  B   474    			ret
                           B   475    			
00364D ED3806              B   476    rec_mbyte	in0 a,(port_mouse_data)				003650 B7                  B   477    			or a
003651 C9                  B   478    			ret
                           B   479    			
                           B   480    ;----------------------------------------------
                           B   481    
003652                     B   482    wait_mouse_clk_low
                           B   483    
003652 3E04                B   484    			ld a,4
003654 C3 72 34 00         B   485    			jp ps2_test_lo
                           B   486    
003658                     B   487    wait_mouse_data_low
                           B   488    		
003658 3E08                B   489    			ld a,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 142


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\ez80p_misc_code.asm
00365A C3 72 34 00         B   490    			jp ps2_test_lo	
                           B   491    
00365E                     B   492    wait_mouse_clk_high
                           B   493    
00365E 3E04                B   494    			ld a,4
003660 C3 9B 34 00         B   495    			jp ps2_test_hi
                           B   496    
003664                     B   497    wait_mouse_data_high
                           B   498    		
003664 3E08                B   499    			ld a,8
003666 C3 9B 34 00         B   500    			jp ps2_test_hi			
                           B   501    			
                           B   502    
                           B   503    ;----------------------------------------------
                           B   504    
00366A ED3807              B   505    purge_mouse	in0 a,(port_ps2_ctrl)
00366D CB6F                B   506    			bit 5,a
00366F C8                  B   507    			ret z
003670 ED3806              B   508    			in0 a,(port_mouse_data)				003673 18 F5               B   509    			jr purge_mouse
                           B   510    
                           B   511    ;----------------------------------------------
                           A  2927    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003675                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
003675 D5                  B    13    				push de
003676 51                  B    14    				ld d,c
003677 E5                  B    15    				push hl
003678 CD CE 36 00         B    16    wait_kbuf		call get_kb_buffer_indexes		00367C BE                  B    17    				cp (hl)							00367D 28 F9               B    18    				jr z,wait_kbuf		
                           B    19    			
00367F 01000000            B    20    new_key			ld bc,0							003683 4F                  B    21    				ld c,a
003684 21 58 54 00         B    22    				ld hl,scancode_buffer	
003688 09                  B    23    				add hl,bc
                           B    24    												003689 4E                  B    25    				ld c,(hl)						00368A 11100000            B    26    				ld de,16
00368E 19                  B    27    				add hl,de						00368F 7E                  B    28    				ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 143


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_keyboard_routines.asm
                           B    29    				
003690 21 51 50 00         B    30    				ld hl,alted_keymap				003694 CB5F                B    31    				bit 3,a
003696 20 0C               B    32    				jr nz,got_kmap	
003698 21 8D 4F 00         B    33    				ld hl,unshifted_keymap			00369C E611                B    34    				and 011h			
00369E 28 04               B    35    				jr z,got_kmap
0036A0 21 EF 4F 00         B    36    				ld hl,shifted_keymap			                           B    37    			
0036A4 79                  B    38    got_kmap		ld a,c							0036A5 FE62                B    39    				cp 062h
0036A7 30 02               B    40    				jr nc,gotkdone
0036A9 09                  B    41    				add hl,bc						0036AA 46                  B    42    				ld b,(hl)						                           B    43    			
0036AB 3A 79 54 00         B    44    gotkdone		ld a,(key_buf_rd_idx)			0036AF 3C                  B    45    				inc a							0036B0 E60F                B    46    				and 15
0036B2 32 79 54 00         B    47    				ld (key_buf_rd_idx),a			0036B6 79                  B    48    				ld a,c							0036B7 E1                  B    49    				pop hl
0036B8 4A                  B    50    				ld c,d
0036B9 D1                  B    51    				pop de
0036BA BF                  B    52    				cp a							0036BB C9                  B    53    				ret
                           B    54    			
                           B    55    		
                           B    56    ;----------------------------------------------
                           B    57    			
0036BC                     B    58    os_get_key_press
                           B    59    				
                           B    60    ; Gets a keycode on-the-fly - If one is availab
                           B    61    ; On return, ZF is set if there is a new scanco
                           B    62    ; (ASCII code is modifed by shift key status), 
                           B    63    			
                           B    64    			
0036BC D5                  B    65    				push de
0036BD 51                  B    66    				ld d,c
0036BE E5                  B    67    				push hl
0036BF CD CE 36 00         B    68    				call get_kb_buffer_indexes		0036C3 BE                  B    69    				cp (hl)							0036C4 20 B9               B    70    				jr nz,new_key					0036C6 3E81                B    71    				ld a,81h			
0036C8 47                  B    72    				ld b,a
0036C9 B7                  B    73    				or a
0036CA E1                  B    74    				pop hl
0036CB 4A                  B    75    				ld c,d
0036CC D1                  B    76    				pop de
0036CD C9                  B    77    				ret
                           B    78    			
                           B    79    ;----------------------------------------------
                           B    80    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 144


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_keyboard_routines.asm
0036CE                     B    81    get_kb_buffer_indexes
                           B    82    			
                           B    83    			
0036CE 21 78 54 00         B    84    				ld hl,key_buf_wr_idx			0036D2 3A 79 54 00         B    85    				ld a,(key_buf_rd_idx)			0036D6 C9                  B    86    				ret
                           B    87    			
                           B    88    		
                           B    89    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
0036D7                     B    21    serial_get_header
                           B    22    
0036D7 32 2A 51 00         B    23    				ld (serial_timeout),a			0036DB 22 14 51 00         B    24    				ld (serial_fn_addr),hl
0036DF CD 63 2E 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
0036E3 CD C6 37 00         B    27    				call s_getblock					0036E7 28 0C               B    28    				jr z,s_gbfhok					0036E9 F5                  B    29    				push af							0036EA 3A 4B 51 00         B    30    				ld a,(serial_transfer_started)
0036EE B7                  B    31    				or a							0036EF C4 2D 38 00         B    32    				call nz,s_badack				0036F3 F1                  B    33    				pop af
0036F4 C9                  B    34    				ret
                           B    35    	
0036F5 21 3F 51 00         B    36    s_gbfhok		ld hl,serial_header_id			0036F9 11 A0 57 00         B    37    				ld de,sector_buffer+20			0036FD 060C                B    38    				ld b,12
0036FF CD C6 11 00         B    39    				call os_compare_strings
003703 20 0F               B    40    				jr nz,s_nfhdr
003705 06E0                B    41    				ld b,256-32						003707 21 AC 57 00         B    42    				ld hl,sector_buffer+32
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 145


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
00370B 7E                  B    43    s_chdr			ld a,(hl)
00370C 23                  B    44    				inc hl
00370D B7                  B    45    				or a
00370E 20 04               B    46    				jr nz,s_nfhdr
003710 10 F9               B    47    				djnz s_chdr
003712 18 08               B    48    				jr s_fhcsok
                           B    49    				
003714 CD 2D 38 00         B    50    s_nfhdr			call s_badack					003718 3E85                B    51    				ld a,085h						00371A B7                  B    52    				or a
00371B C9                  B    53    				ret
                           B    54    		
00371C 21 9C 57 00         B    55    s_fhcsok		ld hl,sector_buffer+16			003720 11 3B 51 00         B    56    				ld de,serial_fileheader+16
003724 01040000            B    57    				ld bc,4
003728 EDB0                B    58    				ldir
                           B    59    				
00372A 21 8C 57 00         B    60    				ld hl,sector_buffer
00372E 11 2B 51 00         B    61    				ld de,serial_fileheader			003732 0610                B    62    				ld b,16							003734 7E                  B    63    s_tuclp			ld a,(hl)						003735 B7                  B    64    				or a
003736 28 0B               B    65    				jr z,s_ffhswz	
003738 CD 00 12 00         B    66    				call os_uppercasify
00373C 12                  B    67    				ld (de),a
00373D 23                  B    68    				inc hl
00373E 13                  B    69    				inc de
00373F 10 F3               B    70    				djnz s_tuclp
003741 18 04               B    71    				jr s_tucdone
003743 12                  B    72    s_ffhswz		ld (de),a
003744 13                  B    73    				inc de
003745 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
003747 2A 14 51 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			00374B 7E                  B    77    				ld a,(hl)
00374C FE2A                B    78    				cp '*'
00374E 28 14               B    79    				jr z,s_rffns					003750 11 2B 51 00         B    80    				ld de,serial_fileheader
003754 0610                B    81    				ld b,16
003756 CD C6 11 00         B    82    				call os_compare_strings
00375A 28 08               B    83    				jr z,s_rffns
00375C CD 2D 38 00         B    84    s_rfnbad		call s_badack
003760 3E87                B    85    				ld a,087h						003762 B7                  B    86    				or a
003763 C9                  B    87    				ret
                           B    88    				
003764 DD21 2B 51 00       B    89    s_rffns			ld ix,serial_fileheader			003769 AF                  B    90    				xor a
00376A C9                  B    91    				ret
                           B    92    
00376B F5                  B    93    s_fail			push af				
00376C CD 2D 38 00         B    94    				call s_badack		 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 146


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
003770 F1                  B    95    				pop af
003771 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
003772                     B   114    serial_receive_file
                           B   115    
003772 3E0A                B   116    				ld a,10							003774 32 2A 51 00         B   117    				ld (serial_timeout),a
003778 E5                  B   118    				push hl
003779 CD 1C 38 00         B   119    				call s_goodack					00377D DDE1                B   120    				pop ix							00377F ED5B 3B 51 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
003784 CD C6 37 00         B   123    s_gbloop		call s_getblock
003788 20 E1               B   124    				jr nz,s_fail
00378A 0E00                B   125    				ld c,0							00378C FD21 8C 57 00       B   126    				ld iy,sector_buffer
003791 FD7E00              B   127    s_rfloop		ld a,(iy)
003794 DD7700              B   128    				ld (ix),a						003797 1B                  B   129    				dec de							003798 21000000            B   130    				ld hl,0
00379C AF                  B   131    				xor a
00379D ED5A                B   132    				adc hl,de						00379F 28 1A               B   133    				jr z,s_rfabr					0037A1 C5                  B   134    				push bc
0037A2 01010000            B   135    				ld bc,1
0037A6 DD09                B   136    				add ix,bc						0037A8 C1                  B   137    				pop bc
0037A9 30 05               B   138    				jr nc,s_nbt
0037AB 3E84                B   139    				ld a,84h						0037AD B7                  B   140    				or a
0037AE 18 BB               B   141    				jr s_fail
0037B0 FD23                B   142    s_nbt			inc iy
0037B2 0D                  B   143    				dec c
0037B3 20 DC               B   144    				jr nz,s_rfloop
0037B5 CD 1C 38 00         B   145    				call s_goodack					0037B9 18 C9               B   146    				jr s_gbloop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 147


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
                           B   147    			
0037BB CD 1C 38 00         B   148    s_rfabr			call s_goodack					0037BF DD21 2B 51 00       B   149    				ld ix,serial_fileheader			0037C4 AF                  B   150    				xor a							0037C5 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
0037C6                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
0037C6 AF                  B   159    				xor a
0037C7 32 4B 51 00         B   160    				ld (serial_transfer_started),a	0037CB E5                  B   161    				push hl							0037CC D5                  B   162    				push de
0037CD C5                  B   163    				push bc
0037CE 21 8C 57 00         B   164    				ld hl,sector_buffer				0037D2 0600                B   165    				ld b,0
0037D4 D9                  B   166    				exx
0037D5 21FFFF00            B   167    				ld hl,0ffffh					0037D9 D9                  B   168    				exx
0037DA CD 0D 2E 00         B   169    s_lgb			call receive_serial_byte
0037DE 20 38               B   170    				jr nz,s_gberr					0037E0 F5                  B   171    				push af
0037E1 3E01                B   172    				ld a,1
0037E3 32 4B 51 00         B   173    				ld (serial_transfer_started),a
0037E7 F1                  B   174    				pop af
0037E8 77                  B   175    				ld (hl),a
0037E9 D9                  B   176    				exx
0037EA AC                  B   177    				xor h							0037EB 67                  B   178    				ld h,a			
0037EC 0608                B   179    				ld b,8
0037EE 4029                B   180    rxcrcbyte		add.sis hl,hl					0037F0 30 08               B   181    				jr nc,rxcrcnext
0037F2 7C                  B   182    				ld a,h
0037F3 EE10                B   183    				xor 10h
0037F5 67                  B   184    				ld h,a
0037F6 7D                  B   185    				ld a,l
0037F7 EE21                B   186    				xor 21h
0037F9 6F                  B   187    				ld l,a
0037FA 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0037FC D9                  B   189    				exx
0037FD 23                  B   190    				inc hl
0037FE 10 DA               B   191    				djnz s_lgb
003800 D9                  B   192    				exx								                           B   193    			
003801 CD 0D 2E 00         B   194    				call receive_serial_byte		003805 20 11               B   195    				jr nz,s_gberr
003807 4F                  B   196    				ld c,a
003808 CD 0D 2E 00         B   197    				call receive_serial_byte
00380C 20 0A               B   198    				jr nz,s_gberr		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 148


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
00380E 47                  B   199    				ld b,a
                           B   200    				
00380F AF                  B   201    				xor a							003810 52ED42              B   202    				sbc.s hl,bc						003813 28 03               B   203    				jr z,s_gberr
                           B   204    			
003815 3E86                B   205    				ld a,86h						003817 B7                  B   206    				or a							003818 C1                  B   207    s_gberr			pop bc
003819 D1                  B   208    				pop de
00381A E1                  B   209    				pop hl
00381B C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
00381C C5                  B   214    s_goodack		push bc
00381D 014F4B00            B   215    				ld bc,04b4fh					003821 79                  B   216    ackbytes		ld a,c
003822 CD 48 2E 00         B   217    				call send_serial_byte
003826 78                  B   218    				ld a,b
003827 CD 48 2E 00         B   219    				call send_serial_byte
00382B C1                  B   220    				pop bc
00382C C9                  B   221    				ret
                           B   222    
00382D C5                  B   223    s_badack		push bc
00382E 01585800            B   224    				ld bc,05858h					003832 18 ED               B   225    				jr ackbytes
                           B   226    
003834 C5                  B   227    s_holdack		push bc
003835 01575700            B   228    				ld bc,05757h					003839 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
00383B                     B   249    serial_send_file
                           B   250    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 149


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
00383B 3E01                B   251    				ld a,1							00383D 32 2A 51 00         B   252    				ld (serial_timeout),a
                           B   253    			
003841 DD22 0E 51 00       B   254    				ld (serial_ez80_address),ix
003846 ED53 3B 51 00       B   255    				ld (serial_fileheader+10h),de	00384B E5                  B   256    				push hl
00384C 21000000            B   257    				ld hl,0
003850 AF                  B   258    				xor a
003851 ED5A                B   259    				adc hl,de
003853 20 05               B   260    				jr nz,s_flok
003855 E1                  B   261    				pop hl
003856 3E81                B   262    				ld a,081h						003858 B7                  B   263    				or a							003859 C9                  B   264    				ret
                           B   265    			
00385A 21 2B 51 00         B   266    s_flok			ld hl,serial_fileheader			00385E 01100000            B   267    				ld bc,16
003862 AF                  B   268    				xor a
003863 CD 26 15 00         B   269    				call os_bchl_memfill
003867 E1                  B   270    				pop hl							003868 11 2B 51 00         B   271    				ld de,serial_fileheader
00386C 0610                B   272    				ld b,16
00386E CD E5 11 00         B   273    				call os_copy_ascii_run
                           B   274    				
003872 21 3F 51 00         B   275    				ld hl,serial_header_id			003876 11 3F 51 00         B   276    				ld de,serial_fileheader+014h
00387A 010C0000            B   277    				ld bc,12		
00387E EDB0                B   278    				ldir
                           B   279    			
003880 DD21 2B 51 00       B   280    				ld ix,serial_fileheader			003885 11200000            B   281    				ld de,32
003889 CD BF 38 00         B   282    				call s_makeblock			
00388D C0                  B   283    				ret nz
00388E CD F7 38 00         B   284    				call s_sendblock
003892 C0                  B   285    				ret nz
003893 CD 24 39 00         B   286    				call s_waitack					003897 C0                  B   287    				ret nz							                           B   288    				
003898 DD2A 0E 51 00       B   289    				ld ix,(serial_ez80_address)
00389D ED5B 3B 51 00       B   290    				ld de,(serial_fileheader+16)	0038A2 CD BF 38 00         B   291    s_sbloop		call s_makeblock				0038A6 38 16               B   292    				jr c,s_rerr
0038A8 CD F7 38 00         B   293    				call s_sendblock				0038AC 38 10               B   294    				jr c,s_rerr	
0038AE CD 24 39 00         B   295    				call s_waitack					0038B2 38 0A               B   296    				jr c,s_rerr
0038B4 21000000            B   297    				ld hl,0
0038B8 AF                  B   298    				xor a
0038B9 ED5A                B   299    				adc hl,de
0038BB 20 E5               B   300    				jr nz,s_sbloop					0038BD AF                  B   301    				xor a							0038BE C9                  B   302    s_rerr			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 150


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0038BF                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0038BF 21 8C 57 00         B   312    				ld hl,sector_buffer				0038C3 01000100            B   313    				ld bc,256						0038C7 AF                  B   314    				xor a							0038C8 CD 26 15 00         B   315    				call os_bchl_memfill			                           B   316    				
0038CC 0600                B   317    				ld b,0							0038CE FD21 8C 57 00       B   318    				ld iy,sector_buffer	
0038D3 DD7E00              B   319    s_sloop			ld a,(ix)
0038D6 FD7700              B   320    				ld (iy),a
0038D9 1B                  B   321    				dec de							0038DA 21000000            B   322    				ld hl,0
0038DE AF                  B   323    				xor a
0038DF ED5A                B   324    				adc hl,de
0038E1 28 12               B   325    				jr z,s_mbend	
0038E3 FD23                B   326    				inc iy							0038E5 C5                  B   327    				push bc
0038E6 01010000            B   328    				ld bc,1
0038EA DD09                B   329    				add ix,bc						0038EC C1                  B   330    				pop bc							0038ED 20 04               B   331    				jr nz,s_sbok
0038EF 3E84                B   332    				ld a,84h						0038F1 B7                  B   333    				or a
0038F2 C9                  B   334    				ret
0038F3 10 DE               B   335    s_sbok			djnz s_sloop
0038F5 AF                  B   336    s_mbend			xor a
0038F6 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0038F7                     B   341    s_sendblock
                           B   342    
0038F7 E5                  B   343    				push hl
0038F8 D5                  B   344    				push de							0038F9 C5                  B   345    				push bc				
0038FA 21 8C 57 00         B   346    				ld hl,sector_buffer			
0038FE 1E00                B   347    				ld e,0
003900 7E                  B   348    s_sblklp		ld a,(hl)
003901 CD 48 2E 00         B   349    				call send_serial_byte
003905 23                  B   350    				inc hl
003906 1D                  B   351    				dec e
003907 20 F7               B   352    				jr nz,s_sblklp
003909 11 8C 57 00         B   353    				ld de,sector_buffer
00390D 01000000            B   354    				ld bc,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 151


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_serial_routines.asm
003911 CD FD 14 00         B   355    				call crc_checksum
003915 7D                  B   356    				ld a,l
003916 CD 48 2E 00         B   357    				call send_serial_byte
00391A 7C                  B   358    				ld a,h
00391B CD 48 2E 00         B   359    				call send_serial_byte
00391F AF                  B   360    				xor a
003920 C1                  B   361    s_popall		pop bc
003921 D1                  B   362    				pop de
003922 E1                  B   363    				pop hl
003923 C9                  B   364    				ret
                           B   365    	
                           B   366    
003924                     B   367    s_waitack
003924 E5                  B   368    				push hl
003925 D5                  B   369    				push de
003926 C5                  B   370    				push bc
003927 CD 0D 2E 00         B   371    				call receive_serial_byte		00392B 20 F3               B   372    				jr nz,s_popall
00392D 47                  B   373    				ld b,a
00392E CD 0D 2E 00         B   374    				call receive_serial_byte
003932 20 EC               B   375    				jr nz,s_popall
003934 4F                  B   376    				ld c,a
003935 264F                B   377    				ld h,'O'
003937 2E4B                B   378    				ld l,'K'
003939 AF                  B   379    				xor a
00393A 52ED42              B   380    				sbc.s hl,bc						00393D 28 E1               B   381    				jr z,s_popall					                           B   382    			
00393F 3E85                B   383    				ld a,085h						003941 B7                  B   384    				or a
003942 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 152


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
003944                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
003944 3A 50 51 00         B    57    				ld a,(device_count)				003948 47                  B    58    				ld b,a							003949 DD21 00 52 00       B    59    				ld ix,host_device_hardware_info
00394E 3A 4F 51 00         B    60    fdevinfo		ld a,(current_driver)
003952 DDBE00              B    61    				cp (ix)
003955 28 09               B    62    				jr z,got_dev_info
003957 ED3220              B    63    				lea ix,ix+32
00395A 10 F2               B    64    				djnz fdevinfo
00395C AF                  B    65    				xor a
00395D 3ED0                B    66    				ld a,0d0h						00395F C9                  B    67    				ret	
                           B    68    	
003960 CD F3 43 00         B    69    got_dev_info	call fs_clear_sector_buffer		Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 153


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003964 11000000            B    70    				ld de,0							003968 CD 58 3A 00         B    71    form_ws			call set_lba_and_write_sector
00396C D8                  B    72    				ret c
00396D 13                  B    73    				inc de
00396E 7A                  B    74    				ld a,d
00396F FE03                B    75    				cp 3
003971 20 F5               B    76    				jr nz,form_ws
                           B    77    	
003973 21 A1 46 00         B    78    				ld hl,bootsector_stub			003977 11 8C 57 00         B    79    				ld de,sector_buffer				00397B 013F0000            B    80    				ld bc,03fh
00397F EDB0                B    81    				ldir
                           B    82    	
003981 DD7E04              B    83    				ld a,(ix+4)						003984 B7                  B    84    				or a
003985 20 0C               B    85    				jr nz,above_2gb
003987 2100FF3F            B    86    				ld hl,3fff00h					00398B DD1701              B    87    				ld de,(ix+1)					00398E AF                  B    88    				xor a			
00398F ED52                B    89    				sbc hl,de						003991 30 08               B    90    				jr nc,lessthan2gb				003993 3E40                B    91    above_2gb		ld a,40h						003995 1100FF3F            B    92    				ld de,3fff00h					003999 18 11               B    93    				jr spcvalok
                           B    94    
00399B DD4E03              B    95    lessthan2gb		ld c,(ix+3)						00399E 0C                  B    96    				inc c							00399F 3E01                B    97    spc_loop		ld a,1							0039A1 B9                  B    98    spc_comp		cp c							0039A2 28 08               B    99    				jr z,spcvalok
0039A4 07                  B   100    				rlca
0039A5 FE80                B   101    				cp 080h							0039A7 20 F8               B   102    				jr nz,spc_comp
0039A9 0C                  B   103    				inc c			
0039AA 18 F3               B   104    				jr spc_loop						                           B   105    							
0039AC DD21 8C 57 00       B   106    spcvalok		ld ix,sector_buffer
0039B1 DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
0039B4 CD 43 15 00         B   109    				call os_get_xde_msb				0039B8 4F                  B   110    				ld c,a							0039B9 B7                  B   111    				or a							0039BA 20 08               B   112    				jr nz,ts_dword					0039BC DD7313              B   113    				ld (ix+13h),e					0039BF DD7214              B   114    				ld (ix+14h),d
0039C2 18 07               B   115    				jr ts_done
0039C4 DD1F20              B   116    ts_dword		ld (ix+20h),de					0039C7 DD362300            B   117    				ld (ix+23h),0
                           B   118    
0039CB EB                  B   119    ts_done			ex de,hl						0039CC 11000000            B   120    				ld de,0						
0039D0 DD560D              B   121    				ld d,(ix+0dh)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 154


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
0039D3 01000000            B   122    				ld bc,0							0039D7 AF                  B   123    div_tscls		xor a							0039D8 ED52                B   124    				sbc hl,de
0039DA 28 05               B   125    				jr z,gotfats
0039DC 38 03               B   126    				jr c,gotfats	
0039DE 03                  B   127    				inc bc
0039DF 18 F6               B   128    				jr div_tscls
0039E1 03                  B   129    gotfats			inc bc
0039E2 DD7116              B   130    				ld (ix+16h),c					0039E5 DD7017              B   131    				ld (ix+17h),b
0039E8 ED43 F1 46 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
0039ED 010055AA            B   134    				ld bc,0aa5500h
0039F1 ED43 89 59 00       B   135    				ld (sector_buffer+1fdh),bc		0039F6 11000000            B   136    				ld de,0
0039FA CD 58 3A 00         B   137    				call set_lba_and_write_sector	0039FE D8                  B   138    				ret c
                           B   139    				
0039FF 21000000            B   140    				ld hl,0
003A03 DD6E0E              B   141    				ld l,(ix+0eh)					003A06 DD660F              B   142    				ld h,(ix+0fh)
003A09 19                  B   143    				add hl,de
003A0A EB                  B   144    				ex de,hl						                           B   145    				
003A0B CD F3 43 00         B   146    				call fs_clear_sector_buffer		003A0F DD3600FF            B   147    				ld (ix+0),0ffh
003A13 DD3601F8            B   148    				ld (ix+1),0f8h
003A17 DD3602FF            B   149    				ld (ix+2),0ffh
003A1B DD3603FF            B   150    				ld (ix+3),0ffh
003A1F CD 58 3A 00         B   151    				call set_lba_and_write_sector	003A23 D8                  B   152    				ret c
                           B   153    
003A24 2A F1 46 00         B   154    				ld hl,(fs_sectors_per_fat)	
003A28 19                  B   155    				add hl,de
003A29 EB                  B   156    				ex de,hl
003A2A CD 58 3A 00         B   157    				call set_lba_and_write_sector 	003A2E D8                  B   158    				ret c	
                           B   159    				
003A2F D5                  B   160    				push de							003A30 CD F3 43 00         B   161    				call fs_clear_sector_buffer
003A34 21 F7 46 00         B   162    				ld hl,fs_sought_filename
003A38 11 8C 57 00         B   163    				ld de,sector_buffer
003A3C 010B0000            B   164    				ld bc,11
003A40 EDB0                B   165    				ldir							003A42 D1                  B   166    				pop de							003A43 DD360B08            B   167    				ld (ix+0bh),8					003A47 DD361821            B   168    				ld (ix+018h),021h				003A4B 2A F1 46 00         B   169    				ld hl,(fs_sectors_per_fat)		003A4F 19                  B   170    				add hl,de
003A50 EB                  B   171    				ex de,hl
003A51 CD 58 3A 00         B   172    				call set_lba_and_write_sector	003A55 D8                  B   173    				ret c	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 155


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   174    			
003A56 AF                  B   175    				xor a							003A57 C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
003A58                     B   180    set_lba_and_write_sector
                           B   181    
003A58 DDE5                B   182    				push ix
003A5A DD21 25 53 00       B   183    				ld ix,sector_lba0				003A5F DD1F00              B   184    				ld (ix),de						003A62 DD360300            B   185    				ld (ix+3),0
003A66 DDE1                B   186    				pop ix
003A68 CD 85 46 00         B   187    				call fs_write_sector
003A6C C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003A6D                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
003A6D 32 83 52 00         B   202    				ld (partition_temp),a
                           B   203    				
003A71 21000000            B   204    				ld hl,0							003A75 22 25 53 00         B   205    				ld (sector_lba0),hl
003A79 7D                  B   206    				ld a,l
003A7A 32 28 53 00         B   207    				ld (sector_lba3),a
003A7E CD 6D 46 00         B   208    				call fs_read_sector
003A82 D8                  B   209    				ret c
                           B   210    			
003A83 CD BE 3A 00         B   211    				call fs_check_fat_sig			003A87 20 42               B   212    				jr nz,formbad
                           B   213    			
003A89 CD AF 3A 00         B   214    				call check_fat16_id				003A8D 28 1C               B   215    				jr z,at_pbs						                           B   216    				
003A8F 3A 4E 59 00         B   217    				ld a,(sector_buffer+01c2h)		003A93 E604                B   218    				and 4							003A95 28 34               B   219    				jr z,formbad	
003A97 11000000            B   220    				ld de,0
003A9B 3A 83 52 00         B   221    				ld a,(partition_temp)
003A9F 5F                  B   222    				ld e,a
003AA0 1610                B   223    				ld d,16
003AA2 ED5C                B   224    				mlt de
003AA4 21 4A 59 00         B   225    				ld hl,sector_buffer+01beh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 156


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003AA8 19                  B   226    				add hl,de						003AA9 AF                  B   227    				xor a
003AAA C9                  B   228    				ret
                           B   229    					
003AAB AF                  B   230    at_pbs			xor a
003AAC 3ED3                B   231    				ld a,0d3h						003AAE C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
003AAF                     B   236    check_fat16_id
                           B   237    		
003AAF 21 C2 57 00         B   238    				ld hl,sector_buffer+036h		003AB3 11 82 4B 00         B   239    				ld de,fat16_txt			
003AB7 0605                B   240    				ld b,5
003AB9 CD C6 11 00         B   241    				call os_compare_strings
003ABD C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
003ABE                     B   247    fs_check_fat_sig
                           B   248    
003ABE 2A 8A 59 00         B   249    				ld hl,(sector_buffer+01feh)		003AC2 1155AA00            B   250    				ld de,0aa55h
003AC6 AF                  B   251    				xor a
003AC7 52ED52              B   252    				sbc.s hl,de						003ACA C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
003ACB AF                  B   257    formbad			xor a
003ACC 3ECE                B   258    				ld a,0ceh						003ACE C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
003ACF                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
003ACF C5                  B   268    				push bc
003AD0 D5                  B   269    				push de
003AD1 E5                  B   270    				push hl
003AD2 CD DA 3A 00         B   271    				call go_checkf
003AD6 E1                  B   272    				pop hl
003AD7 D1                  B   273    				pop de
003AD8 C1                  B   274    				pop bc
003AD9 C9                  B   275    				ret
                           B   276    				
003ADA CD 4F 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 157


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003ADE 21 80 51 00         B   278    				ld hl,volume_mount_list
003AE2 19                  B   279    				add hl,de
003AE3 7E                  B   280    				ld a,(hl)
003AE4 B7                  B   281    				or a							003AE5 20 04               B   282    				jr nz,fs_volpre
003AE7 AF                  B   283    				xor a
003AE8 3ECF                B   284    				ld a,cfh						003AEA C9                  B   285    				ret
                           B   286    			
003AEB 11080000            B   287    fs_volpre		ld de,8							003AEF 19                  B   288    				add hl,de
003AF0 11 25 53 00         B   289    				ld de,sector_lba0
003AF4 01040000            B   290    				ld bc,4
003AF8 EDB0                B   291    				ldir
003AFA CD 6D 46 00         B   292    				call fs_read_sector
003AFE D8                  B   293    				ret c	
                           B   294    				
003AFF CD BE 3A 00         B   295    				call fs_check_fat_sig			003B03 20 C6               B   296    				jr nz,formbad		
                           B   297    			
003B05 CD AF 3A 00         B   298    				call check_fat16_id				003B09 20 C0               B   299    				jr nz,formbad
                           B   300    			
003B0B DD21 8C 57 00       B   301    				ld ix,sector_buffer
003B10 DD270B              B   302    				ld hl,(ix+0bh)					003B13 11000200            B   303    				ld de,512						003B17 AF                  B   304    				xor a
003B18 52ED52              B   305    				sbc.s hl,de						003B1B 20 AE               B   306    				jr nz,formbad
                           B   307    			
003B1D DD7E0D              B   308    				ld a,(ix+0dh)					003B20 32 E0 46 00         B   309    				ld (fs_cluster_size),a
003B24 CB27                B   310    				sla a
003B26 32 E2 46 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
003B2A 21000000            B   313    				ld hl,0
003B2E DD6E0E              B   314    				ld l,(ix+0eh)					003B31 DD660F              B   315    				ld h,(ix+0fh)
003B34 22 E4 46 00         B   316    				ld (fs_fat1_position),hl		003B38 11000000            B   317    				ld de,0
003B3C DD5E16              B   318    				ld e,(ix+16h)					003B3F DD5617              B   319    				ld d,(ix+17h)
003B42 ED53 F1 46 00       B   320    				ld (fs_sectors_per_fat),de
003B47 19                  B   321    				add hl,de
003B48 22 E7 46 00         B   322    				ld (fs_fat2_position),hl		003B4C 19                  B   323    				add hl,de
003B4D 22 EA 46 00         B   324    				ld (fs_root_dir_position),hl 	003B51 EB                  B   325    				ex de,hl
003B52 DD6E11              B   326    				ld l,(ix+11h)					003B55 DD6612              B   327    				ld h,(ix+12h)					003B58 7C                  B   328    				ld a,h
003B59 B5                  B   329    				or l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 158


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003B5A CA CB 3A 00         B   330    				jr z,formbad					003B5E 29                  B   331    				add hl,hl						003B5F 29                  B   332    				add hl,hl						003B60 29                  B   333    				add hl,hl
003B61 29                  B   334    				add hl,hl
003B62 EB                  B   335    				ex de,hl
003B63 7A                  B   336    				ld a,d
003B64 32 F0 46 00         B   337    				ld (fs_root_dir_sectors),a		003B68 01000000            B   338    				ld bc,0
003B6C 4A                  B   339    				ld c,d
003B6D 09                  B   340    				add hl,bc				
003B6E 22 ED 46 00         B   341    				ld (fs_data_area),hl			                           B   342    												003B72 21000000            B   343    				ld hl,0
003B76 01000000            B   344    				ld bc,0
003B7A DD4E22              B   345    				ld c,(ix+022h)					003B7D DD4623              B   346    				ld b,(ix+023h)
003B80 DD6E13              B   347    				ld l,(ix+013h)					003B83 DD6614              B   348    				ld h,(ix+014h)
003B86 7C                  B   349    				ld a,h							003B87 B5                  B   350    				or l
003B88 20 06               B   351    				jr nz,got_tsfbs
003B8A DD6E20              B   352    				ld l,(ix+020h)					003B8D DD6621              B   353    				ld h,(ix+021h)
003B90 ED5B ED 46 00       B   354    got_tsfbs 		ld de,(fs_data_area)
003B95 AF                  B   355    				xor a							003B96 52ED52              B   356    				sbc.s hl,de						003B99 30 02               B   357    				jr nc,nomxcb
003B9B 520B                B   358    				dec.s bc
003B9D 3A E0 46 00         B   359    nomxcb			ld a,(fs_cluster_size)
003BA1 CB3F                B   360    fmaxcl			srl a
003BA3 28 08               B   361    				jr z,got_cmaxc					003BA5 CB39                B   362    				srl c				
003BA7 CB1C                B   363    				rr h
003BA9 CB1D                B   364    				rr l
003BAB 18 F4               B   365    				jr fmaxcl
003BAD E5                  B   366    got_cmaxc		push hl							003BAE 11F0FF00            B   367    				ld de,0fff0h
003BB2 AF                  B   368    				xor a
003BB3 52ED52              B   369    				sbc.s hl,de						003BB6 38 02               B   370    				jr c,cmaxok
003BB8 E1                  B   371    				pop hl
003BB9 D5                  B   372    				push de
003BBA E1                  B   373    cmaxok			pop hl
003BBB 22 F4 46 00         B   374    				ld (fs_max_data_clusters),hl
003BBF AF                  B   375    				xor a
003BC0 C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
003BC1                     B   380    fs_calc_free_space
                           B   381    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 159


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
003BC1 ED5B F4 46 00       B   384    				ld de,(fs_max_data_clusters)
003BC6 13                  B   385    				inc de
003BC7 13                  B   386    				inc de							003BC8 D5                  B   387    				push de
003BC9 DDE1                B   388    				pop ix
                           B   389    			
003BCB AF                  B   390    				xor a
003BCC 32 39 47 00         B   391    cfs_lp2			ld (fs_working_sector),a
003BD0 2A E4 46 00         B   392    				ld hl,(fs_fat1_position)
003BD4 CD 43 46 00         B   393    				call set_abs_lba_and_read_secto
003BD8 D8                  B   394    				ret c
                           B   395    				
003BD9 21 8C 57 00         B   396    				ld hl,sector_buffer
003BDD 0600                B   397    				ld b,0
003BDF AF                  B   398    cfs_lp1			xor a
003BE0 B6                  B   399    				or a,(hl)						003BE1 23                  B   400    				inc hl							003BE2 20 03               B   401    				jr nz,cfs_ciu					003BE4 B6                  B   402    				or a,(hl)
003BE5 28 02               B   403    				jr z,cfs_ddcc
003BE7 DD2B                B   404    cfs_ciu			dec ix							003BE9 23                  B   405    cfs_ddcc		inc hl
003BEA 1B                  B   406    				dec de
003BEB 7A                  B   407    				ld a,d
003BEC B3                  B   408    				or e
003BED 28 09               B   409    				jr z,cfs_ok						003BEF 10 EE               B   410    				djnz cfs_lp1
003BF1 3A 39 47 00         B   411    				ld a,(fs_working_sector)
003BF5 3C                  B   412    				inc a
003BF6 18 D4               B   413    				jr cfs_lp2
                           B   414    				
003BF8 3A E0 46 00         B   415    cfs_ok			ld a,(fs_cluster_size)			003BFC CB3F                B   416    cltoslp			srl a
003BFE 28 04               B   417    				jr z,powdone
003C00 DD29                B   418    				add ix,ix
003C02 18 F8               B   419    				jr cltoslp	
003C04 FD21 41 53 00       B   420    powdone			ld iy,xrr_temp
003C09 FD3E00              B   421    				ld (iy),ix						003C0C FDCB023E            B   422    				srl (iy+2)
003C10 FDCB011E            B   423    				rr (iy+1)
003C14 FDCB001E            B   424    				rr (iy+0)						003C18 FD1700              B   425    				ld de,(iy)						003C1B AF                  B   426    				xor a
003C1C C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
003C1D                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 160


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   434    			
                           B   435    			
003C1D CD 05 44 00         B   436    				call fs_find_filename			003C21 D8                  B   437    				ret c							003C22 FEC2                B   438    				cp 0c2h							003C24 20 04               B   439    				jr nz,founddir
003C26 AF                  B   440    				xor a							003C27 3ED1                B   441    				ld a,0d1h						003C29 C9                  B   442    				ret
003C2A AF                  B   443    founddir		xor a							003C2B 3E04                B   444    				ld a,04h						003C2D DDCB0B66            B   445    				bit 4,(ix+0bh)
003C31 C8                  B   446    				ret z
003C32 11000000            B   447    				ld de,0
003C36 DD5E1A              B   448    				ld e,(ix+01ah)
003C39 DD561B              B   449    				ld d,(ix+01bh)					003C3C CD 21 1A 00         B   450    				call fs_update_dir_cluster
003C40 AF                  B   451    				xor a
003C41 C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
003C42                     B   458    fs_goto_root_dir_command
                           B   459    
003C42 D5                  B   460    				push de
003C43 11000000            B   461    				ld de,0
003C47 CD 21 1A 00         B   462    				call fs_update_dir_cluster
003C4B D1                  B   463    				pop de
003C4C AF                  B   464    				xor a
003C4D C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
003C4E                     B   470    fs_parent_dir_command
                           B   471    
003C4E CD 15 1A 00         B   472    				call fs_get_dir_cluster
003C52 7A                  B   473    				ld a,d
003C53 B3                  B   474    				or e
003C54 20 03               B   475    				jr nz,pdnaroot
003C56 3ECA                B   476    				ld a,0cah						003C58 C9                  B   477    				ret
003C59 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					003C5D 22 F7 46 00         B   479    				ld (fs_sought_filename),hl		003C61 21 FA 46 00         B   480    				ld hl,fs_sought_filename+3		003C65 3E20                B   481    				ld a,32
003C67 01080000            B   482    				ld bc,8
003C6B CD 26 15 00         B   483    				call os_bchl_memfill
003C6F 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 161


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
003C71                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
003C71 CD 05 44 00         B   497    				call fs_find_filename			003C75 D8                  B   498    				ret c							003C76 C0                  B   499    				ret nz							                           B   500    								
003C77 3EC6                B   501    				ld a,0c6h						003C79 DDCB0B66            B   502    				bit 4,(ix+0bh)
003C7D C0                  B   503    				ret nz
                           B   504    
003C7E AF                  B   505    				xor a
003C7F 32 4D 47 00         B   506    				ld (fs_filepointer_valid),a		003C83 21000000            B   507    				ld hl,0
003C87 22 1B 47 00         B   508    				ld (fs_file_pointer),hl			003C8B 32 1E 47 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
003C8F DD171C              B   511    				ld de,(ix+01ch)
003C92 D5                  B   512    				push de
003C93 E1                  B   513    				pop hl
003C94 DD4E1F              B   514    				ld c,(ix+01fh)					003C97 ED53 1F 47 00       B   515    				ld (fs_file_length),de			003C9C 79                  B   516    				ld a,c
003C9D 32 22 47 00         B   517    				ld (fs_file_length+3),a			003CA1 B7                  B   518    				or a							003CA2 28 04               B   519    				jr z,fs_dflsm					003CA4 21FFFFFF            B   520    				ld hl,0ffffffh
003CA8 22 27 47 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
003CAC 21000000            B   523    				ld hl,0
003CB0 DD6E1A              B   524    				ld l,(ix+01ah)		
003CB3 DD661B              B   525    				ld h,(ix+01bh)
003CB6 22 2A 47 00         B   526    				ld (fs_file_start_cluster),hl	003CBA AF                  B   527    				xor a
003CBB C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
003CBC                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 162


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   538    		
003CBC 2A 27 47 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
003CC0 11000000            B   540    				ld de,0
003CC4 AF                  B   541    				xor a
003CC5 ED5A                B   542    				adc hl,de
003CC7 20 04               B   543    				jr nz,fs_btrok
003CC9 AF                  B   544    fs_fliz			xor a							003CCA 3EC7                B   545    				ld a,0c7h						003CCC C9                  B   546    				ret
                           B   547    			 
003CCD 2A 30 47 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			003CD1 22 33 47 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
003CD5 2A 1F 47 00         B   551    				ld hl,(fs_file_length)			003CD9 ED4B 1B 47 00       B   552    				ld bc,(fs_file_pointer)			003CDE 3A 1E 47 00         B   553    				ld a,(fs_file_pointer+3)		003CE2 5F                  B   554    				ld e,a
003CE3 3A 22 47 00         B   555    				ld a,(fs_file_length+3)
003CE7 B7                  B   556    				or a							003CE8 ED42                B   557    				sbc hl,bc
003CEA 9B                  B   558    				sbc a,e
003CEB 38 09               B   559    				jr c,fs_fpbad
003CED 01000000            B   560    				ld bc,0
003CF1 AF                  B   561    				xor a
003CF2 ED4A                B   562    				adc hl,bc
003CF4 20 04               B   563    				jr nz,fs_fpok
003CF6 AF                  B   564    fs_fpbad		xor a
003CF7 3ECC                B   565    				ld a,0cch						003CF9 C9                  B   566    				ret
                           B   567    			
                           B   568    	
003CFA 3A 4D 47 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		003CFE B7                  B   570    				or a							003CFF 28 1B               B   571    				jr z,seek_strt
                           B   572    			
003D01 ED5B 33 47 00       B   573    				ld de,(fs_ez80_working_address)
003D06 ED4B 4E 47 00       B   574    				ld bc,(fs_sector_pos_cnt)		003D0B C5                  B   575    				push bc
003D0C ED4B 36 47 00       B   576    				ld bc,(fs_in_sector_offset)
003D11 21 8C 59 00         B   577    				ld hl,sector_buffer+0200h		003D15 AF                  B   578    				xor a
003D16 ED42                B   579    				sbc hl,bc		
003D18 C3 A8 3D 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
003D1C 3E01                B   583    seek_strt		ld a,1
003D1E 32 4D 47 00         B   584    				ld (fs_filepointer_valid),a
003D22 2A 2A 47 00         B   585    				ld hl,(fs_file_start_cluster)	003D26 22 2D 47 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
003D2A 3A 1E 47 00         B   588    				ld a,(fs_file_pointer+3)		003D2E 2A 1B 47 00         B   589    				ld hl,(fs_file_pointer)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 163


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003D32 ED4B E1 46 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
003D37 AF                  B   591    				xor a
003D38 ED42                B   592    				sbc hl,bc						003D3A DE00                B   593    				sbc a,0
003D3C 38 14               B   594    				jr c,fs_fpgbo
003D3E E5                  B   595    fs_fpgnb		push hl				
003D3F 2A 2D 47 00         B   596    				ld hl,(fs_file_working_cluster)
003D43 CD 15 45 00         B   597    				call get_fat_entry_for_cluster
003D47 30 02               B   598    				jr nc,fs_ghok					003D49 E1                  B   599    				pop hl
003D4A C9                  B   600    				ret
003D4B 22 2D 47 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
003D4F E1                  B   602    				pop hl
003D50 18 E0               B   603    				jr fs_fpblp
                           B   604    			
003D52 09                  B   605    fs_fpgbo		add hl,bc						003D53 4C                  B   606    				ld c,h
003D54 CB39                B   607    				srl c							003D56 3A E0 46 00         B   608    				ld a,(fs_cluster_size)
003D5A 91                  B   609    				sub c
003D5B 47                  B   610    				ld b,a							003D5C 7C                  B   611    				ld a,h
003D5D E601                B   612    				and 01h
003D5F 67                  B   613    				ld h,a
003D60 22 36 47 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
003D64 79                  B   616    fs_flns			ld a,c				
003D65 2A 2D 47 00         B   617    				ld hl,(fs_file_working_cluster)
003D69 CD EC 45 00         B   618    				call cluster_and_offset_to_lba
003D6D CD 6D 46 00         B   619    				call fs_read_sector				003D71 D8                  B   620    				ret c							                           B   621    			
003D72 C5                  B   622    				push bc							003D73 11000000            B   623    				ld de,0
003D77 2A 36 47 00         B   624    				ld hl,(fs_in_sector_offset)		003D7B 5D                  B   625    				ld e,l
003D7C 54                  B   626    				ld d,h
003D7D 21000200            B   627    				ld hl,512
003D81 AF                  B   628    				xor a
003D82 ED52                B   629    				sbc hl,de						003D84 44                  B   630    				ld b,h
003D85 4D                  B   631    				ld c,l							003D86 21 8C 57 00         B   632    				ld hl,sector_buffer				003D8A 19                  B   633    				add hl,de						003D8B ED5B 33 47 00       B   634    				ld de,(fs_ez80_working_address)
003D90 EDA0                B   635    fs_cblp			ldi 							                           B   636    
003D92 7A                  B   637    				ld a,d							003D93 B3                  B   638    				or e
003D94 20 0C               B   639    				jr nz,fs_edaok
003D96 ED53 33 47 00       B   640    				ld (fs_ez80_working_address),de
003D9B 3A 35 47 00         B   641    				ld a,(fs_ez80_working_address+2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 164


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003D9F B7                  B   642    				or a
003DA0 28 43               B   643    				jr z,fs_mem_error
                           B   644    
003DA2 CD 75 45 00         B   645    fs_edaok		call transfer_length_countdown	003DA6 28 30               B   646    				jr z,fs_bdld
003DA8 78                  B   647    fs_dadok		ld a,b							003DA9 B1                  B   648    				or c
003DAA 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
003DAC ED43 36 47 00       B   651    				ld (fs_in_sector_offset),bc		003DB1 ED53 33 47 00       B   652    				ld (fs_ez80_working_address),de
003DB6 C1                  B   653    				pop bc							003DB7 0C                  B   654    				inc c							003DB8 10 AA               B   655    				djnz fs_flns					                           B   656    			
003DBA 2A 2D 47 00         B   657    				ld hl,(fs_file_working_cluster)
003DBE CD 15 45 00         B   658    				call get_fat_entry_for_cluster	003DC2 D8                  B   659    				ret c							003DC3 22 2D 47 00         B   660    				ld (fs_file_working_cluster),hl
003DC7 CD BE 42 00         B   661    				call fs_compare_hl_fff8			003DCB D2 F6 3C 00         B   662    				jp nc,fs_fpbad			
003DCF 0E00                B   663    fs_nfbok		ld c,0							003DD1 3A E0 46 00         B   664    				ld a,(fs_cluster_size)	
003DD5 47                  B   665    				ld b,a							003DD6 18 8C               B   666    				jr fs_flns		
                           B   667    			
003DD8 ED43 36 47 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		003DDD C1                  B   669    				pop bc							003DDE ED43 4E 47 00       B   670    				ld (fs_sector_pos_cnt),bc
003DE3 AF                  B   671    				xor a							003DE4 C9                  B   672    				ret
                           B   673    				
003DE5 3EC8                B   674    fs_mem_error	ld a,0c8h						003DE7 C1                  B   675    fs_flerr		pop bc
003DE8 B7                  B   676    				or a							003DE9 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
003DEA                     B   681    fs_make_dir_command		
                           B   682    				
003DEA CD 05 44 00         B   683    				call fs_find_filename			003DEE D8                  B   684    				ret c
003DEF FEC2                B   685    				cp 0c2h							003DF1 28 04               B   686    				jr z,mdirfnde
003DF3 AF                  B   687    				xor a							003DF4 3EC9                B   688    				ld a,0c9h						003DF6 C9                  B   689    				ret
                           B   690    			
003DF7 CD CB 42 00         B   691    mdirfnde		call fs_find_free_cluster		003DFB D8                  B   692    				ret c							003DFC C0                  B   693    				ret nz							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 165


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   694    							
003DFD 2A 3D 47 00         B   695    				ld hl,(fs_free_cluster)
003E01 22 40 47 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
003E05 CD 1C 43 00         B   698    				call fs_find_free_dir_entry		003E09 D8                  B   699    				ret c							003E0A C0                  B   700    				ret nz							                           B   701    			
003E0B DDE5                B   702    				push ix							003E0D D1                  B   703    				pop de
003E0E 21 F7 46 00         B   704    				ld hl,fs_sought_filename
003E12 010B0000            B   705    				ld bc,11
003E16 EDB0                B   706    				ldir
003E18 AF                  B   707    				xor a							003E19 0615                B   708    				ld b,21
003E1B 12                  B   709    clrdiren		ld (de),a
003E1C 13                  B   710    				inc de
003E1D 10 FC               B   711    				djnz clrdiren
003E1F DD360B10            B   712    				ld (ix+0bh),010h				003E23 DD361821            B   713    				ld (ix+018h),021h				003E27 ED5B 40 47 00       B   714    				ld de,(fs_new_file_cluster)
003E2C DD731A              B   715    				ld (ix+01ah),e					003E2F DD721B              B   716    				ld (ix+01bh),d
003E32 CD 85 46 00         B   717    				call fs_write_sector			003E36 D8                  B   718    				ret c							                           B   719    				
003E37 CD F3 43 00         B   720    				call fs_clear_sector_buffer
003E3B DD21 8C 57 00       B   721    				ld ix,sector_buffer				003E40 DD36002E            B   722    				ld (ix+00h),02eh				003E44 DD360120            B   723    				ld (ix+01h),020h
003E48 DD36202E            B   724    				ld (ix+020h),02eh
003E4C DD36212E            B   725    				ld (ix+021h),02eh
003E50 DD360B10            B   726    				ld (ix+0bh),010h
003E54 DD362B10            B   727    				ld (ix+02bh),010h
003E58 ED5B 40 47 00       B   728    				ld de,(fs_new_file_cluster)		003E5D DD731A              B   729    				ld (ix+01ah),e
003E60 DD721B              B   730    				ld (ix+01bh),d
003E63 CD 15 1A 00         B   731    				call fs_get_dir_cluster			003E67 DD733A              B   732    				ld (ix+03ah),e
003E6A DD723B              B   733    				ld (ix+03bh),d
003E6D DD361821            B   734    				ld (ix+018h),021h				003E71 DD363821            B   735    				ld (ix+038h),021h				003E75 0609                B   736    				ld b,9
003E77 DD360220            B   737    mndelp			ld (ix+002h),32
003E7B DD362220            B   738    				ld (ix+022h),32
003E7F DD23                B   739    				inc ix
003E81 10 F4               B   740    				djnz mndelp
003E83 2A 40 47 00         B   741    				ld hl,(fs_new_file_cluster)		003E87 AF                  B   742    				xor a
003E88 CD EC 45 00         B   743    				call cluster_and_offset_to_lba
003E8C CD 85 46 00         B   744    				call fs_write_sector
003E90 D8                  B   745    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 166


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   746    			
003E91 CD F3 43 00         B   747    				call fs_clear_sector_buffer		003E95 AF                  B   748    				xor a
003E96 3C                  B   749    wroslp			inc a
003E97 32 39 47 00         B   750    				ld (fs_working_sector),a
003E9B 21 E0 46 00         B   751    				ld hl,fs_cluster_size
003E9F BE                  B   752    				cp (hl)
003EA0 28 13               B   753    				jr z,allsclr
003EA2 2A 40 47 00         B   754    				ld hl,(fs_new_file_cluster)
003EA6 CD EC 45 00         B   755    				call cluster_and_offset_to_lba
003EAA CD 85 46 00         B   756    				call fs_write_sector
003EAE D8                  B   757    				ret c
003EAF 3A 39 47 00         B   758    				ld a,(fs_working_sector)
003EB3 18 E1               B   759    				jr wroslp
                           B   760    			
003EB5 2A 40 47 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		003EB9 11FFFF00            B   762    				ld de,0ffffh
003EBD CD 41 45 00         B   763    				call update_fat_entry_for_clust
003EC1 AF                  B   764    				xor a
003EC2 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
003EC3                     B   771    fs_delete_dir_command
                           B   772    
003EC3 CD 05 44 00         B   773    				call fs_find_filename			003EC7 D8                  B   774    				ret c
003EC8 28 04               B   775    				jr z,ddc_gotd
003ECA 3ED1                B   776    				ld a,0d1h						003ECC B7                  B   777    				or a
003ECD C9                  B   778    				ret
                           B   779    				
003ECE DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					003ED2 20 04               B   781    				jr nz,okdeldir
003ED4 AF                  B   782    				xor a
003ED5 3EC4                B   783    				ld a,0c4h						003ED7 C9                  B   784    				ret
                           B   785    				
003ED8 DD22 43 47 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
003EDD CD 4B 46 00         B   787    				call backup_sector_lba
003EE1 DD6E1A              B   788    				ld l,(ix+01ah)					003EE4 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
003EE7 3A E0 46 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
003EEB 47                  B   792    				ld b,a							003EEC 0E00                B   793    				ld c,0			
003EEE 79                  B   794    fs_cne2 		ld a,c
003EEF CD EC 45 00         B   795    				call cluster_and_offset_to_lba
003EF3 CD 6D 46 00         B   796    				call fs_read_sector
003EF7 D8                  B   797    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 167


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   798    				
003EF8 C5                  B   799    				push bc
003EF9 0610                B   800    				ld b,16							003EFB DD21 8C 57 00       B   801    				ld ix,sector_buffer
003F00 11200000            B   802    				ld de,020h
003F04 DD7E00              B   803    fs_cne1			ld a,(ix)
003F07 B7                  B   804    				or a
003F08 28 0D               B   805    				jr z,fs_chnde
003F0A FEE5                B   806    				cp 0e5h
003F0C 28 09               B   807    				jr z,fs_chnde
003F0E FE2E                B   808    				cp '.'
003F10 28 05               B   809    				jr z,fs_chnde
003F12 C1                  B   810    				pop bc
003F13 AF                  B   811    				xor a							003F14 3EC5                B   812    				ld a,0c5h						003F16 C9                  B   813    				ret
                           B   814    			
003F17 DD19                B   815    fs_chnde		add ix,de
003F19 10 E9               B   816    				djnz fs_cne1
003F1B C1                  B   817    				pop bc
003F1C 0C                  B   818    				inc c
003F1D 10 CF               B   819    				djnz fs_cne2
                           B   820    			
003F1F CD 15 45 00         B   821    				call get_fat_entry_for_cluster	003F23 D8                  B   822    				ret c
003F24 CD BE 42 00         B   823    				call fs_compare_hl_fff8
003F28 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
003F2A CD 60 46 00         B   826    dir_empty		call restore_sector_lba			003F2E CD 6D 46 00         B   827    				call fs_read_sector
003F32 D8                  B   828    				ret c							003F33 2A 43 47 00         B   829    				ld hl,(fs_fname_in_sector_addr)
003F37 36E5                B   830    fs_delco		ld (hl),0e5h					003F39 CD 85 46 00         B   831    				call fs_write_sector
003F3D D8                  B   832    				ret c
                           B   833    			
003F3E E5                  B   834    				push hl
003F3F DDE1                B   835    				pop ix
003F41 DD6E1A              B   836    				ld l,(ix+01ah)
003F44 DD661B              B   837    				ld h,(ix+01bh)
003F47 22 3A 47 00         B   838    				ld (fs_working_cluster),hl
003F4B 7C                  B   839    				ld a,h							003F4C B5                  B   840    				or l							003F4D C8                  B   841    				ret z							                           B   842    				
003F4E 2A 3A 47 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
003F52 CD 15 45 00         B   844    				call get_fat_entry_for_cluster
003F56 D8                  B   845    				ret c
003F57 EB                  B   846    				ex de,hl
                           B   847    				
003F58 2A 3A 47 00         B   848    				ld hl,(fs_working_cluster)
003F5C ED53 3A 47 00       B   849    				ld (fs_working_cluster),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 168


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
003F61 11000000            B   850    				ld de,0
003F65 CD 41 45 00         B   851    				call update_fat_entry_for_clust
003F69 D8                  B   852    				ret c
                           B   853    				
003F6A CD BE 42 00         B   854    				call fs_compare_hl_fff8			003F6E 38 DE               B   855    				jr c,clrfatlp
003F70 AF                  B   856    				xor a
003F71 C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
003F72                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
003F72 CD 05 44 00         B   867    				call fs_find_filename			003F76 D8                  B   868    				ret c
003F77 FEC2                B   869    				cp 0c2h							003F79 28 04               B   870    				jr z,mfilefnde
003F7B AF                  B   871    				xor a							003F7C 3EC9                B   872    				ld a,0c9h						003F7E C9                  B   873    				ret
                           B   874    			
003F7F CD 1C 43 00         B   875    mfilefnde		call fs_find_free_dir_entry		003F83 D8                  B   876    				ret c							003F84 C0                  B   877    				ret nz							                           B   878    			
003F85 DDE5                B   879    				push ix							003F87 D1                  B   880    				pop de
003F88 21 F7 46 00         B   881    				ld hl,fs_sought_filename
003F8C 010B0000            B   882    				ld bc,11
003F90 EDB0                B   883    				ldir
003F92 AF                  B   884    				xor a							003F93 0615                B   885    				ld b,21
003F95 12                  B   886    clrfnen			ld (de),a
003F96 13                  B   887    				inc de
003F97 10 FC               B   888    				djnz clrfnen
003F99 DD361821            B   889    				ld (ix+018h),021h				003F9D CD 85 46 00         B   890    				call fs_write_sector			003FA1 D8                  B   891    				ret c							003FA2 AF                  B   892    				xor a
003FA3 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
003FA4                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 169


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
003FA4 ED5B 27 47 00       B   906    				ld de,(fs_file_transfer_length)
003FA9 21000000            B   907    				ld hl,0
003FAD AF                  B   908    				xor a
003FAE ED5A                B   909    				adc hl,de
003FB0 CA C9 3C 00         B   910    				jp z,fs_fliz					                           B   911    				 
003FB4 CD 05 44 00         B   912    				call fs_find_filename			003FB8 D8                  B   913    				ret c							003FB9 FEC2                B   914    				cp 0c2h				
003FBB C8                  B   915    				ret z							003FBC DDCB0B66            B   916    				bit 4,(ix+0bh)					003FC0 28 04               B   917    				jr z,fs_oknad					003FC2 AF                  B   918    				xor a							003FC3 3EC6                B   919    				ld a,0c6h						003FC5 C9                  B   920    				ret
                           B   921    
003FC6 CD 4B 46 00         B   922    fs_oknad		call backup_sector_lba
003FCA DD22 43 47 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
003FCF DD311C              B   925    				ld iy,(ix+01ch)					003FD2 DD7E1F              B   926    				ld a,(ix+01fh)
003FD5 FD22 23 47 00       B   927    				ld (fs_existing_file_length),iy
003FDA 32 23 47 00         B   928    				ld (fs_existing_file_length),a
003FDE ED5B 27 47 00       B   929    				ld de,(fs_file_transfer_length)
003FE3 FD19                B   930    				add iy,de						003FE5 CE00                B   931    				adc a,0
003FE7 DD3E1C              B   932    				ld (ix+01ch),iy					003FEA DD771F              B   933    				ld (ix+01fh),a					003FED 30 04               B   934    				jr nc,nfsizeok
003FEF AF                  B   935    				xor a
003FF0 3EC7                B   936    				ld a,0c7h						003FF2 C9                  B   937    				ret
                           B   938    
003FF3 11000000            B   939    nfsizeok		ld de,0
003FF7 DD5E1A              B   940    				ld e,(ix+01ah)					003FFA DD561B              B   941    				ld d,(ix+01bh)					003FFD ED53 2D 47 00       B   942    				ld (fs_file_working_cluster),de
004002 CD 85 46 00         B   943    				call fs_write_sector			004006 D8                  B   944    				ret c
004007 7A                  B   945    				ld a,d
004008 B3                  B   946    				or e
004009 20 35               B   947    				jr nz,apenclch	
                           B   948    				
00400B CD CB 42 00         B   949    				call fs_find_free_cluster		00400F D8                  B   950    				ret c
004010 C0                  B   951    				ret nz
004011 2A 3D 47 00         B   952    				ld hl,(fs_free_cluster)
004015 22 2D 47 00         B   953    				ld (fs_file_working_cluster),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 170


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
004019 11FFFF00            B   954    				ld de,0ffffh
00401D CD 41 45 00         B   955    				call update_fat_entry_for_clust
004021 D8                  B   956    				ret c
                           B   957    			
004022 CD 60 46 00         B   958    				call restore_sector_lba			004026 CD 6D 46 00         B   959    				call fs_read_sector
00402A D8                  B   960    				ret c
00402B DD2A 43 47 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004030 ED5B 2D 47 00       B   962    				ld de,(fs_file_working_cluster)
004035 DD731A              B   963    				ld (ix+01ah),e
004038 DD721B              B   964    				ld (ix+01bh),d
00403B CD 85 46 00         B   965    				call fs_write_sector			00403F D8                  B   966    				ret c
                           B   967    				
                           B   968    					
004040 2A 2D 47 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004044 CD 15 45 00         B   970    				call get_fat_entry_for_cluster
004048 D8                  B   971    				ret c
004049 CD BE 42 00         B   972    				call fs_compare_hl_fff8
00404D 30 1C               B   973    				jr nc,atlclif
00404F 22 2D 47 00         B   974    				ld (fs_file_working_cluster),hl
004053 01000000            B   975    				ld bc,0
004057 3A E0 46 00         B   976    				ld a,(fs_cluster_size)
00405B CB27                B   977    				sla a
00405D 47                  B   978    				ld b,a
00405E 2A 23 47 00         B   979    				ld hl,(fs_existing_file_length)
004062 AF                  B   980    				xor a							004063 ED42                B   981    				sbc hl,bc						004065 22 23 47 00         B   982    				ld (fs_existing_file_length),hl
004069 18 D5               B   983    				jr apenclch
                           B   984    				
00406B ED4B 23 47 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004070 CB38                B   986    				srl b				
004072 48                  B   987    				ld c,b							004073 3A E0 46 00         B   988    				ld a,(fs_cluster_size)
004077 91                  B   989    				sub c
004078 47                  B   990    				ld b,a							004079 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
00407B 2A 2D 47 00         B   993    				ld hl,(fs_file_working_cluster)
00407F 79                  B   994    				ld a,c
004080 CD EC 45 00         B   995    				call cluster_and_offset_to_lba
004084 CD 6D 46 00         B   996    				call fs_read_sector
004088 D8                  B   997    				ret c
004089 C5                  B   998    				push bc							                           B   999    				
00408A 11000000            B  1000    				ld de,0
00408E 3A 23 47 00         B  1001    				ld a,(fs_existing_file_length)
004092 5F                  B  1002    				ld e,a
004093 3A 24 47 00         B  1003    				ld a,(fs_existing_file_length+1
004097 E601                B  1004    				and 1
004099 57                  B  1005    				ld d,a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 171


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00409A 21000200            B  1006    				ld hl,512	
00409E AF                  B  1007    				xor a
00409F ED52                B  1008    				sbc hl,de						0040A1 E5                  B  1009    				push hl
0040A2 C1                  B  1010    				pop bc							0040A3 21 8C 57 00         B  1011    				ld hl,sector_buffer
0040A7 19                  B  1012    				add hl,de
0040A8 EB                  B  1013    				ex de,hl						0040A9 7C                  B  1014    				ld a,h			
0040AA B5                  B  1015    				or l
0040AB 20 04               B  1016    				jr nz,fs_dcsb					0040AD CD F3 43 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
0040B1 2A 30 47 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			0040B5 EDA0                B  1019    fs_cbsb			ldi								0040B7 7C                  B  1020    				ld a,h							0040B8 B5                  B  1021    				or l
0040B9 20 0D               B  1022    				jr nz,fs_srcadok
0040BB 22 30 47 00         B  1023    				ld (fs_ez80_address),hl
0040BF 3A 32 47 00         B  1024    				ld a,(fs_ez80_address+2)
0040C3 B7                  B  1025    				or a
0040C4 CA E5 3D 00         B  1026    				jp z,fs_mem_error
0040C8 CD 75 45 00         B  1027    fs_srcadok		call transfer_length_countdown
0040CC 28 54               B  1028    				jr z,fs_lbof					0040CE 78                  B  1029    fs_sadok		ld a,b							0040CF B1                  B  1030    				or c
0040D0 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
0040D2 22 30 47 00         B  1033    				ld (fs_ez80_address),hl			0040D6 C1                  B  1034    				pop bc							0040D7 79                  B  1035    				ld a,c
0040D8 2A 2D 47 00         B  1036    				ld hl,(fs_file_working_cluster)
0040DC CD EC 45 00         B  1037    				call cluster_and_offset_to_lba
0040E0 CD 85 46 00         B  1038    				call fs_write_sector			0040E4 D8                  B  1039    				ret c							0040E5 0C                  B  1040    				inc c							0040E6 05                  B  1041    				dec b
0040E7 28 0B               B  1042    				jr z,fs_sfncl					0040E9 C5                  B  1043    fs_sfns			push bc				
0040EA 01000200            B  1044    				ld bc,512						0040EE 11 8C 57 00         B  1045    				ld de,sector_buffer				0040F2 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
0040F4 CD CB 42 00         B  1048    fs_sfncl		call fs_find_free_cluster		0040F8 D8                  B  1049    				ret c							0040F9 C0                  B  1050    				ret nz							0040FA 2A 2D 47 00         B  1051    				ld hl,(fs_file_working_cluster)
0040FE ED5B 3D 47 00       B  1052    				ld de,(fs_free_cluster)
004103 CD 41 45 00         B  1053    				call update_fat_entry_for_clust
004107 D8                  B  1054    				ret c
004108 2A 3D 47 00         B  1055    				ld hl,(fs_free_cluster)
00410C 22 2D 47 00         B  1056    				ld (fs_file_working_cluster),hl
004110 11FFFF00            B  1057    				ld de,0ffffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 172


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
004114 CD 41 45 00         B  1058    				call update_fat_entry_for_clust
004118 D8                  B  1059    				ret c
004119 3A E0 46 00         B  1060    				ld a,(fs_cluster_size)
00411D 47                  B  1061    				ld b,a							00411E 0E00                B  1062    				ld c,0							004120 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
004122 C1                  B  1065    fs_lbof			pop bc
004123 79                  B  1066    				ld a,c							004124 2A 2D 47 00         B  1067    				ld hl,(fs_file_working_cluster)
004128 CD EC 45 00         B  1068    				call cluster_and_offset_to_lba
00412C CD 85 46 00         B  1069    				call fs_write_sector	
004130 D8                  B  1070    				ret c
004131 AF                  B  1071    				xor a							004132 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004133                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004133 CD 05 44 00         B  1079    				call fs_find_filename			004137 D8                  B  1080    				ret c
004138 C0                  B  1081    				ret nz
                           B  1082    				
004139 DDCB0B66            B  1083    				bit 4,(ix+0bh)					00413D 28 04               B  1084    				jr z,okdelf
00413F AF                  B  1085    				xor a
004140 3EC6                B  1086    				ld a,0c6h						004142 C9                  B  1087    				ret
                           B  1088    				
004143 DDE5                B  1089    okdelf			push ix
004145 E1                  B  1090    				pop hl
004146 C3 37 3F 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
00414A                     B  1097    fs_rename_command
                           B  1098    
00414A CD 05 44 00         B  1099    				call fs_find_filename			00414E D8                  B  1100    				ret c							00414F FEC2                B  1101    				cp 0c2h							004151 28 04               B  1102    				jr z,fs_nfnok					004153 AF                  B  1103    				xor a							004154 3EC9                B  1104    				ld a,0c9h						004156 C9                  B  1105    				ret
                           B  1106    			
004157 21 F7 46 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		00415B 11 0F 47 00         B  1108    				ld de,fs_filename_buffer
00415F 010B0000            B  1109    				ld bc,11
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 173


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
004163 EDB0                B  1110    				ldir
004165 21 03 47 00         B  1111    				ld hl,fs_alt_filename			004169 11 F7 46 00         B  1112    				ld de,fs_sought_filename
00416D 010B0000            B  1113    				ld bc,11
004171 EDB0                B  1114    				ldir
004173 CD 05 44 00         B  1115    				call fs_find_filename			004177 D8                  B  1116    				ret c
004178 FEC2                B  1117    				cp 0c2h
00417A C8                  B  1118    				ret z							                           B  1119    				
00417B DDE5                B  1120    				push ix
00417D D1                  B  1121    				pop de
00417E 21 0F 47 00         B  1122    				ld hl,fs_filename_buffer	 	004182 010B0000            B  1123    				ld bc,11
004186 EDB0                B  1124    				ldir							004188 CD 85 46 00         B  1125    				call fs_write_sector			                           B  1126    				
00418C AF                  B  1127    fs_rndone		xor a
00418D C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
00418E                     B  1134    fs_goto_first_dir_entry
                           B  1135    
00418E CD 15 1A 00         B  1136    				call fs_get_dir_cluster
004192 ED53 46 47 00       B  1137    				ld (fs_dir_entry_cluster),de
004197 AF                  B  1138    				xor a
004198 32 4C 47 00         B  1139    				ld (fs_dir_entry_sector),a		00419C 11000000            B  1140    				ld de,0
0041A0 ED53 49 47 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
0041A5                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
0041A5 3A 4C 47 00         B  1156    				ld a,(fs_dir_entry_sector)		0041A9 4F                  B  1157    				ld c,a
0041AA 2A 46 47 00         B  1158    				ld hl,(fs_dir_entry_cluster)	0041AE CD EC 45 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
0041B2 7C                  B  1161    				ld a,h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 174


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
0041B3 B5                  B  1162    				or l							0041B4 20 09               B  1163    				jr nz,nr_read					0041B6 2A EA 46 00         B  1164    				ld hl,(fs_root_dir_position)	0041BA 79                  B  1165    				ld a,c
0041BB CD 32 46 00         B  1166    				call set_absolute_lba
                           B  1167    				
0041BF CD 6D 46 00         B  1168    nr_read			call fs_read_sector				0041C3 D8                  B  1169    				ret c							                           B  1170    				
0041C4 ED5B 49 47 00       B  1171    				ld de,(fs_dir_entry_line_offset
0041C9 DD21 8C 57 00       B  1172    dscan_int_loop	ld ix,sector_buffer
0041CE DD19                B  1173    				add ix,de
0041D0 DD7E00              B  1174    ds_int_loop		ld a,(ix)
0041D3 B7                  B  1175    				or a							0041D4 28 0E               B  1176    				jr z,fs_dir_entry_free		
0041D6 FEE5                B  1177    				cp 0e5h							0041D8 28 0A               B  1178    				jr z,fs_dir_entry_free	
0041DA FE05                B  1179    				cp 05h							0041DC 28 06               B  1180    				jr z,fs_dir_entry_free	
0041DE DDCB0B5E            B  1181    				bit 3,(ix+0bh)					0041E2 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
0041E4                     B  1184    fs_dir_entry_free
                           B  1185    
0041E4 EB                  B  1186    				ex de,hl
0041E5 11200000            B  1187    				ld de,32
0041E9 19                  B  1188    				add hl,de
0041EA EB                  B  1189    				ex de,hl
0041EB CB4A                B  1190    				bit 1,d
0041ED 28 DA               B  1191    				jr z,dscan_int_loop
0041EF 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
0041F1                     B  1194    fs_dir_entry_in_use
                           B  1195    				
0041F1 ED53 49 47 00       B  1196    				ld (fs_dir_entry_line_offset),d
0041F6 DDE5                B  1197    				push ix
0041F8 E1                  B  1198    				pop hl
0041F9 CD 19 10 00         B  1199    				call os_clear_output_line
0041FD 0608                B  1200    				ld b,8							0041FF 11 99 53 00         B  1201    				ld de,output_line
004203 7E                  B  1202    dcopyn			ld a,(hl)
004204 FE20                B  1203    				cp ' '							004206 28 02               B  1204    				jr z,digchar
004208 12                  B  1205    				ld (de),a
004209 13                  B  1206    				inc de
00420A 23                  B  1207    digchar			inc hl
00420B 10 F6               B  1208    				djnz dcopyn
00420D 7E                  B  1209    				ld a,(hl)						00420E FE20                B  1210    				cp ' '							004210 28 0A               B  1211    				jr z,dirnoex
004212 3E2E                B  1212    				ld a,'.'						004214 12                  B  1213    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 175


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
004215 13                  B  1214    				inc de	
004216 01030000            B  1215    				ld bc,3							00421A EDB0                B  1216    				ldir
00421C AF                  B  1217    dirnoex			xor a 
00421D 12                  B  1218    				ld (de),a						                           B  1219    				
00421E 47                  B  1220    				ld b,a
00421F DDCB0B66            B  1221    				bit 4,(ix+0bh)					004223 28 01               B  1222    				jr z,fs_fniaf		
004225 04                  B  1223    				inc b							004226 DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					004229 DD4E1F              B  1225    				ld c,(ix+01fh)
00422C 21 99 53 00         B  1226    				ld hl,output_line				004230 AF                  B  1227    				xor a
004231 C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
004232                     B  1233    fs_goto_next_dir_entry
                           B  1234    
004232 11200000            B  1235    				ld de,32
004236 2A 49 47 00         B  1236    				ld hl,(fs_dir_entry_line_offset
00423A 19                  B  1237    				add hl,de
00423B 22 49 47 00         B  1238    				ld (fs_dir_entry_line_offset),h
00423F CB4C                B  1239    				bit 1,h
004241 CA A5 41 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
004245 21000000            B  1242    dscan_new_sect	ld hl,0				
004249 22 49 47 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
00424D 21 4C 47 00         B  1245    				ld hl,fs_dir_entry_sector
004251 34                  B  1246    				inc (hl)						                           B  1247    			
004252 ED5B 46 47 00       B  1248    				ld de,(fs_dir_entry_cluster)
004257 7A                  B  1249    				ld a,d
004258 B3                  B  1250    				or e							004259 20 0B               B  1251    				jr nz,nonroot2
00425B 3A F0 46 00         B  1252    				ld a,(fs_root_dir_sectors)
00425F BE                  B  1253    				cp (hl)
004260 28 23               B  1254    				jr z,endofdir			
004262 C3 A5 41 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												004266 3A E0 46 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
00426A BE                  B  1258    				cp (hl)							00426B C2 A5 41 00         B  1259    				jp nz,fs_get_dir_entry
00426F 3600                B  1260    				ld (hl),0						004271 2A 46 47 00         B  1261    				ld hl,(fs_dir_entry_cluster)
004275 CD 15 45 00         B  1262    				call get_fat_entry_for_cluster
004279 22 46 47 00         B  1263    				ld (fs_dir_entry_cluster),hl
00427D CD BE 42 00         B  1264    				call fs_compare_hl_fff8			004281 DA A5 41 00         B  1265    				jp c,fs_get_dir_entry
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 176


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B  1266    	
004285 3ED2                B  1267    endofdir		ld a,0d2h
004287 B7                  B  1268    				or a							004288 C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
004289                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
004289 2A EA 46 00         B  1279    				ld hl,(fs_root_dir_position)
00428D AF                  B  1280    				xor a
00428E CD 43 46 00         B  1281    				call set_abs_lba_and_read_secto
004292 D8                  B  1282    				ret c
004293 0E10                B  1283    				ld c,16							004295 DD21 8C 57 00       B  1284    				ld ix,sector_buffer
00429A DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
00429D FE08                B  1286    				cp 08h
00429F 20 11               B  1287    				jr nz,not_label
0042A1 DD360B00            B  1288    				ld (ix+0bh),0					0042A5 DDE5                B  1289    				push ix
0042A7 E1                  B  1290    				pop hl
0042A8 E5                  B  1291    				push hl
0042A9 060B                B  1292    				ld b,11
0042AB CD F4 11 00         B  1293    				call uppercasify_string
0042AF E1                  B  1294    				pop hl
0042B0 AF                  B  1295    				xor a
0042B1 C9                  B  1296    				ret
                           B  1297    				
0042B2 11200000            B  1298    not_label		ld de,32						0042B6 DD19                B  1299    				add ix,de						0042B8 10 E0               B  1300    				djnz find_vl
0042BA AF                  B  1301    				xor a
0042BB 3ED4                B  1302    				ld a,0d4h						0042BD C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
0042BE                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
0042BE E5                  B  1315    				push hl
0042BF D5                  B  1316    				push de
0042C0 11F8FF00            B  1317    				ld de,0fff8h			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 177


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
0042C4 B7                  B  1318    				or a							0042C5 52ED52              B  1319    				sbc.s hl,de						0042C8 D1                  B  1320    				pop de
0042C9 E1                  B  1321    				pop hl
0042CA C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
0042CB                     B  1327    fs_find_free_cluster
                           B  1328    	
0042CB DD210000 00         B  1329    				ld ix,0							0042D0 ED5B E4 46 00       B  1330    				ld de,(fs_fat1_position)		0042D5 AF                  B  1331    				xor a				
0042D6 32 39 47 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
0042DA D5                  B  1333    				push de
0042DB E1                  B  1334    				pop hl
0042DC 3A 39 47 00         B  1335    				ld a,(fs_working_sector)
0042E0 CD 43 46 00         B  1336    				call set_abs_lba_and_read_secto
0042E4 D8                  B  1337    				ret c
0042E5 21 8C 57 00         B  1338    				ld hl,sector_buffer
0042E9 0600                B  1339    				ld b,0
0042EB 7E                  B  1340    fs_ffcl1		ld a,(hl)						0042EC 23                  B  1341    				inc hl
0042ED B6                  B  1342    				or (hl)
0042EE 23                  B  1343    				inc hl
0042EF 28 14               B  1344    				jr z,fs_gotfc
0042F1 DD23                B  1345    				inc ix
0042F3 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
0042F5 2A F1 46 00         B  1348    				ld hl,(fs_sectors_per_fat)
0042F9 3A 39 47 00         B  1349    				ld a,(fs_working_sector)		0042FD 3C                  B  1350    				inc a				
0042FE BD                  B  1351    				cp l		
0042FF 20 D5               B  1352    				jr nz,fs_ffcl2					004301 3EC1                B  1353    fs_dfull		ld a,c1h						004303 B7                  B  1354    				or a							004304 C9                  B  1355    				ret
                           B  1356    			
004305 DDE5                B  1357    fs_gotfc		push ix							004307 E1                  B  1358    				pop hl							004308 2B                  B  1359    				dec hl							004309 2B                  B  1360    				dec hl							00430A ED5B F4 46 00       B  1361    				ld de,(fs_max_data_clusters)
00430F AF                  B  1362    				xor a
004310 52ED52              B  1363    				sbc.s hl,de						004313 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
004315 DD22 3D 47 00       B  1366    				ld (fs_free_cluster),ix
00431A AF                  B  1367    				xor a
00431B C9                  B  1368    				ret
                           B  1369    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 178


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
00431C                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
00431C CD 15 1A 00         B  1380    				call fs_get_dir_cluster			004320 EB                  B  1381    				ex de,hl
004321 22 2D 47 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
004325 AF                  B  1383    				xor a
004326 32 39 47 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
00432A 2A EA 46 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	00432E 3A 39 47 00         B  1387    				ld a,(fs_working_sector)
004332 CD 32 46 00         B  1388    				call set_absolute_lba
                           B  1389    				
004336 CD 15 1A 00         B  1390    				call fs_get_dir_cluster			00433A 7A                  B  1391    				ld a,d
00433B B3                  B  1392    				or e
00433C 28 0C               B  1393    				jr z,at_rootd
00433E 2A 2D 47 00         B  1394    				ld hl,(fs_file_working_cluster)
004342 3A 39 47 00         B  1395    				ld a,(fs_working_sector)
004346 CD EC 45 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
00434A CD 6D 46 00         B  1398    at_rootd		call fs_read_sector
00434E D8                  B  1399    				ret c
00434F 0610                B  1400    				ld b,16							004351 11200000            B  1401    				ld de,32
004355 DD21 8C 57 00       B  1402    				ld ix,sector_buffer
00435A DD7E00              B  1403    scdirfe			ld a,(ix)						00435D B7                  B  1404    				or a
00435E 28 65               B  1405    				jr z,got_fde
004360 FEE5                B  1406    				cp 0e5h
004362 28 61               B  1407    				jr z,got_fde
004364 DD19                B  1408    				add ix,de						004366 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
004368 21 39 47 00         B  1411    				ld hl,fs_working_sector			00436C 34                  B  1412    				inc (hl)
                           B  1413    				
00436D CD 15 1A 00         B  1414    				call fs_get_dir_cluster			004371 7A                  B  1415    				ld a,d
004372 B3                  B  1416    				or e
004373 20 0B               B  1417    				jr nz,ffenotroo
004375 3A F0 46 00         B  1418    				ld a,(fs_root_dir_sectors)		004379 BE                  B  1419    				cp (hl)							00437A 20 AE               B  1420    				jr nz,ffenxtsec
00437C AF                  B  1421    fenotfnd		xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 179


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00437D 3EC3                B  1422    				ld a,0c3h						00437F C9                  B  1423    				ret
                           B  1424    			
004380 3A E0 46 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			004384 BE                  B  1426    				cp (hl)
004385 20 A3               B  1427    				jr nz,ffenxtsec
004387 2A 2D 47 00         B  1428    				ld hl,(fs_file_working_cluster)
00438B CD 15 45 00         B  1429    				call get_fat_entry_for_cluster	00438F D8                  B  1430    				ret c
004390 CD BE 42 00         B  1431    				call fs_compare_hl_fff8			004394 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
004396 CD CB 42 00         B  1434    				call fs_find_free_cluster		00439A D8                  B  1435    				ret c							00439B C0                  B  1436    				ret nz							00439C ED5B 3D 47 00       B  1437    				ld de,(fs_free_cluster)
0043A1 2A 2D 47 00         B  1438    				ld hl,(fs_file_working_cluster)
0043A5 CD 41 45 00         B  1439    				call update_fat_entry_for_clust
0043A9 D8                  B  1440    				ret c
0043AA EB                  B  1441    				ex de,hl						0043AB 11FFFF00            B  1442    				ld de,0ffffh
0043AF CD 41 45 00         B  1443    				call update_fat_entry_for_clust
0043B3 D8                  B  1444    				ret c
                           B  1445    			
0043B4 2A 3D 47 00         B  1446    				ld hl,(fs_free_cluster)			0043B8 CD C7 43 00         B  1447    				call fs_clear_cluster			0043BC D8                  B  1448    				ret c
0043BD 2A 3D 47 00         B  1449    				ld hl,(fs_free_cluster)			0043C1 C3 21 43 00         B  1450    				jp ffenxtclu					                           B  1451    			
0043C5 AF                  B  1452    got_fde			xor a
0043C6 C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
0043C7                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
0043C7 22 3A 47 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
0043CB CD F3 43 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
0043CF AF                  B  1466    				xor a				
0043D0 32 39 47 00         B  1467    				ld (fs_working_sector),a		0043D4 3A 39 47 00         B  1468    wipeclulp		ld a,(fs_working_sector)		0043D8 2A 3A 47 00         B  1469    				ld hl,(fs_working_cluster)		0043DC CD EC 45 00         B  1470    				call cluster_and_offset_to_lba	0043E0 CD 85 46 00         B  1471    				call fs_write_sector
0043E4 D8                  B  1472    				ret c
0043E5 21 39 47 00         B  1473    				ld hl,fs_working_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 180


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
0043E9 34                  B  1474    				inc (hl)
0043EA 3A E0 46 00         B  1475    				ld a,(fs_cluster_size)
0043EE BE                  B  1476    				cp (hl)
0043EF 20 E3               B  1477    				jr nz,wipeclulp
0043F1 AF                  B  1478    				xor a
0043F2 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
0043F3                     B  1482    fs_clear_sector_buffer
                           B  1483    			
0043F3 E5                  B  1484    				push hl
0043F4 C5                  B  1485    				push bc
0043F5 21 8C 57 00         B  1486    				ld hl,sector_buffer			
0043F9 01000200            B  1487    				ld bc,512				
0043FD AF                  B  1488    				xor a				
0043FE CD 26 15 00         B  1489    				call os_bchl_memfill	
004402 C1                  B  1490    				pop bc
004403 E1                  B  1491    				pop hl
004404 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
004405                     B  1498    fs_find_filename
                           B  1499    
004405 AF                  B  1500    				xor a
                           B  1501    
004406                     B  1502    fs_search	
                           B  1503    				
004406 32 54 47 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
00440A CD 15 1A 00         B  1508    				call fs_get_dir_cluster
00440E ED53 2D 47 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
004413 AF                  B  1510    				xor a
004414 32 39 47 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
004418 2A EA 46 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	00441C 3A 39 47 00         B  1514    				ld a,(fs_working_sector)
004420 CD 32 46 00         B  1515    				call set_absolute_lba
                           B  1516    				
004424 CD 15 1A 00         B  1517    				call fs_get_dir_cluster			004428 7A                  B  1518    				ld a,d
004429 B3                  B  1519    				or e
00442A 28 0C               B  1520    				jr z,at_rootd2
00442C 2A 2D 47 00         B  1521    				ld hl,(fs_file_working_cluster)
004430 3A 39 47 00         B  1522    				ld a,(fs_working_sector)
004434 CD EC 45 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
004438 CD 6D 46 00         B  1525    at_rootd2		call fs_read_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 181


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00443C D8                  B  1526    				ret c
00443D 0E10                B  1527    				ld c,16							00443F DD21 8C 57 00       B  1528    				ld ix,sector_buffer
004444 DDE5                B  1529    ndirentr		push ix
004446 D1                  B  1530    				pop de
004447 3A 54 47 00         B  1531    				ld a,(fs_search_type)
00444B B7                  B  1532    				or a
00444C 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
00444E DD7E00              B  1535    				ld a,(ix)						004451 FE80                B  1536    				cp 080h							004453 30 35               B  1537    				jr nc,fnnotsame
004455 FE20                B  1538    				cp 020h
004457 38 31               B  1539    				jr c,fnnotsame
004459 ED5B 51 47 00       B  1540    				ld de,(fs_stash_dir_block)		00445E DD7E1A              B  1541    				ld a,(ix+01ah)
004461 BB                  B  1542    				cp e
004462 20 26               B  1543    				jr nz,fnnotsame
004464 DD7E1B              B  1544    				ld a,(ix+01bh)
004467 BA                  B  1545    				cp d
004468 28 1E               B  1546    				jr z,fs_found
00446A 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
00446C FD21 F7 46 00       B  1549    fs_ststr		ld iy,fs_sought_filename		004471 060B                B  1550    				ld b,11							004473 1A                  B  1551    cmpfnlp			ld a,(de)						004474 CD 00 12 00         B  1552    				call os_uppercasify				004478 6F                  B  1553    				ld l,a
004479 FD7E00              B  1554    				ld a,(iy)
00447C CD 00 12 00         B  1555    				call os_uppercasify
004480 BD                  B  1556    				cp l				
004481 20 07               B  1557    				jr nz,fnnotsame
004483 FD23                B  1558    				inc iy
004485 13                  B  1559    				inc de
004486 10 EB               B  1560    				djnz cmpfnlp
004488 AF                  B  1561    fs_found		xor a							004489 C9                  B  1562    				ret
                           B  1563    			
00448A 11200000            B  1564    fnnotsame		ld de,32						00448E DD19                B  1565    				add ix,de
004490 0D                  B  1566    				dec c
004491 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
004493 21 39 47 00         B  1569    				ld hl,fs_working_sector			004497 34                  B  1570    				inc (hl)
                           B  1571    				
004498 CD 15 1A 00         B  1572    				call fs_get_dir_cluster			00449C 7A                  B  1573    				ld a,d
00449D B3                  B  1574    				or e
00449E 20 0D               B  1575    				jr nz,notrootdir
0044A0 3A F0 46 00         B  1576    				ld a,(fs_root_dir_sectors)		0044A4 BE                  B  1577    				cp (hl)							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 182


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
0044A5 C2 18 44 00         B  1578    				jp nz,ffnnxtsec
0044A9 3EC2                B  1579    fnnotfnd		ld a,0c2h						0044AB B7                  B  1580    				or a
0044AC C9                  B  1581    				ret
                           B  1582    			
0044AD                     B  1583    notrootdir
                           B  1584    				
0044AD 3A E0 46 00         B  1585    				ld a,(fs_cluster_size)			0044B1 BE                  B  1586    				cp (hl)
0044B2 C2 18 44 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
0044B6 2A 2D 47 00         B  1589    				ld hl,(fs_file_working_cluster)
0044BA CD 15 45 00         B  1590    				call get_fat_entry_for_cluster
0044BE D8                  B  1591    				ret c
0044BF CD BE 42 00         B  1592    				call fs_compare_hl_fff8			0044C3 30 E4               B  1593    				jr nc,fnnotfnd					0044C5 EB                  B  1594    				ex de,hl						0044C6 C3 0E 44 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
0044CA                     B  1600    fs_hl_to_alt_filename
                           B  1601    
0044CA 11 03 47 00         B  1602    				ld de,fs_alt_filename
0044CE 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
0044D0                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
0044D0 11 F7 46 00         B  1612    				ld de,fs_sought_filename
0044D4 CD DF 45 00         B  1613    hltofngo		call fs_clear_filename			0044D8 D5                  B  1614    				push de			
0044D9 DDE1                B  1615    				pop ix							                           B  1616    				
0044DB 0E00                B  1617    				ld c,0
0044DD 0608                B  1618    				ld b,8
0044DF 7E                  B  1619    csfnlp2			ld a,(hl)						0044E0 B7                  B  1620    				or a
0044E1 C8                  B  1621    				ret z							0044E2 FE20                B  1622    				cp 32
0044E4 C8                  B  1623    				ret z							0044E5 FE2F                B  1624    				cp 02fh
0044E7 C8                  B  1625    				ret z							0044E8 FE2E                B  1626    				cp '.'
0044EA 28 16               B  1627    				jr z,dofn_ext					0044EC 12                  B  1628    				ld (de),a
0044ED 13                  B  1629    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 183


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
0044EE 23                  B  1630    				inc hl
0044EF 0C                  B  1631    				inc c							0044F0 10 ED               B  1632    				djnz csfnlp2					0044F2 7E                  B  1633    find_ext		ld a,(hl)
0044F3 FE2E                B  1634    				cp '.'							0044F5 28 0B               B  1635    				jr z,dofn_ext	
0044F7 FE20                B  1636    				cp ' '							0044F9 C8                  B  1637    				ret z
0044FA FE2F                B  1638    				cp 02fh
0044FC C8                  B  1639    				ret z
0044FD B7                  B  1640    				or a
0044FE C8                  B  1641    				ret z
0044FF 23                  B  1642    				inc hl
004500 18 F0               B  1643    				jr find_ext
                           B  1644    				
004502 23                  B  1645    dofn_ext		inc hl							004503 0603                B  1646    				ld b,3				
004505 7E                  B  1647    fnextlp			ld a,(hl)						004506 B7                  B  1648    				or a
004507 C8                  B  1649    				ret z							004508 FE20                B  1650    				cp 32
00450A C8                  B  1651    				ret z
00450B DD7708              B  1652    				ld (ix+8),a
00450E DD23                B  1653    				inc ix
004510 23                  B  1654    				inc hl
004511 0C                  B  1655    				inc c
004512 10 F1               B  1656    				djnz fnextlp
004514 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
004515                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
004515 C5                  B  1666    				push bc
004516 D5                  B  1667    				push de
004517 01000000            B  1668    				ld bc,0
00451B 4D                  B  1669    				ld c,l
00451C 7C                  B  1670    				ld a,h
00451D 2A E4 46 00         B  1671    				ld hl,(fs_fat1_position)
004521 CD 43 46 00         B  1672    				call set_abs_lba_and_read_secto
004525 38 17               B  1673    				jr c,hwerr
004527 DDE5                B  1674    				push ix
004529 DD21 8C 57 00       B  1675    				ld ix,sector_buffer
00452E DD09                B  1676    				add ix,bc
004530 DD09                B  1677    				add ix,bc
004532 21000000            B  1678    				ld hl,0
004536 DD6E00              B  1679    				ld l,(ix)
004539 DD6601              B  1680    				ld h,(ix+1)
00453C DDE1                B  1681    				pop ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 184


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00453E D1                  B  1682    hwerr			pop de
00453F C1                  B  1683    				pop bc
004540 C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
004541                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
004541 C5                  B  1695    				push bc
004542 E5                  B  1696    				push hl
004543 01000000            B  1697    				ld bc,0
004547 4D                  B  1698    				ld c,l
004548 7C                  B  1699    				ld a,h
004549 2A E4 46 00         B  1700    				ld hl,(fs_fat1_position)		00454D CD 61 45 00         B  1701    				call fat_upd
004551 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
004553 E1                  B  1704    				pop hl
004554 E5                  B  1705    				push hl
004555 7C                  B  1706    				ld a,h
004556 2A E7 46 00         B  1707    				ld hl,(fs_fat2_position)		00455A CD 61 45 00         B  1708    				call fat_upd
00455E E1                  B  1709    fup_end			pop hl
00455F C1                  B  1710    				pop bc
004560 C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
004561 CD 43 46 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
004565 38 0D               B  1715    				jr c,ufehwerr
004567 21 8C 57 00         B  1716    				ld hl,sector_buffer
00456B 09                  B  1717    				add hl,bc
00456C 09                  B  1718    				add hl,bc
00456D 73                  B  1719    				ld (hl),e
00456E 23                  B  1720    				inc hl
00456F 72                  B  1721    				ld (hl),d
004570 CD 85 46 00         B  1722    				call fs_write_sector
004574 C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
004575                     B  1728    transfer_length_countdown
                           B  1729    
004575 E5                  B  1730    				push hl							004576 C5                  B  1731    				push bc
                           B  1732    			
004577 0604                B  1733    				ld b,4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 185


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
004579 21 1B 47 00         B  1734    				ld hl,fs_file_pointer			00457D 34                  B  1735    fpinclp			inc (hl)
00457E 20 03               B  1736    				jr nz,fs_fpino
004580 23                  B  1737    				inc hl
004581 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
004583 2A 27 47 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
004587 2B                  B  1741    				dec hl
004588 22 27 47 00         B  1742    				ld (fs_file_transfer_length),hl
00458C 01000000            B  1743    				ld bc,0
004590 B7                  B  1744    				or a
004591 ED4A                B  1745    				adc hl,bc						                           B  1746    				
004593 C1                  B  1747    				pop bc
004594 E1                  B  1748    				pop hl
004595 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
004596                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
004596 CD 15 1A 00         B  1757    				call fs_get_dir_cluster			00459A 7A                  B  1758    				ld a,d
00459B B3                  B  1759    				or e
00459C 20 10               B  1760    				jr nz,fs_dnnr
00459E 21 53 51 00         B  1761    				ld hl,vol_txt+1					0045A2 3A 4E 51 00         B  1762    				ld a,(current_volume)
0045A6 C630                B  1763    				add a,030h
0045A8 32 56 51 00         B  1764    				ld (vol_txt+4),a
0045AC AF                  B  1765    				xor a
0045AD C9                  B  1766    				ret
                           B  1767    					
0045AE ED53 51 47 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
0045B3 CD 4E 3C 00         B  1769    				call fs_parent_dir_command		0045B7 D8                  B  1770    				ret c
0045B8 B7                  B  1771    				or a
0045B9 C0                  B  1772    				ret nz
0045BA 3E01                B  1773    				ld a,1
0045BC CD 06 44 00         B  1774    				call fs_search					0045C0 D8                  B  1775    				ret c
0045C1 C0                  B  1776    				ret nz
                           B  1777    					
0045C2 DDE5                B  1778    fs_gdbn			push ix
0045C4 E1                  B  1779    				pop hl
0045C5 060B                B  1780    				ld b,11							0045C7 7E                  B  1781    ntdirn			ld a,(hl)
0045C8 FE20                B  1782    				cp ' '
0045CA 28 03               B  1783    				jr z,rdirfsp
0045CC 23                  B  1784    				inc hl
0045CD 10 F8               B  1785    rdirnsp			djnz ntdirn
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 186


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B  1786    				
0045CF 3600                B  1787    rdirfsp			ld (hl),0
0045D1 DDE5                B  1788    				push ix
0045D3 ED5B 51 47 00       B  1789    				ld de,(fs_stash_dir_block)
0045D8 CD 21 1A 00         B  1790    				call fs_update_dir_cluster		0045DC E1                  B  1791    				pop hl	
0045DD AF                  B  1792    				xor a							0045DE C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
0045DF                     B  1797    fs_clear_filename
                           B  1798    
0045DF D5                  B  1799    				push de							0045E0 C5                  B  1800    				push bc
0045E1 060C                B  1801    				ld b,12
0045E3 3E20                B  1802    				ld a,' '
0045E5 12                  B  1803    clrfnlp			ld (de),a
0045E6 13                  B  1804    				inc de
0045E7 10 FC               B  1805    				djnz clrfnlp
0045E9 C1                  B  1806    				pop bc
0045EA D1                  B  1807    				pop de
0045EB C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
0045EC                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
0045EC C5                  B  1817    				push bc
0045ED D5                  B  1818    				push de
0045EE E5                  B  1819    				push hl
0045EF DDE5                B  1820    				push ix
                           B  1821    
0045F1 2B                  B  1822    				dec hl							0045F2 2B                  B  1823    				dec hl							0045F3 11000000            B  1824    				ld de,0							0045F7 01000000            B  1825    				ld bc,0
0045FB 5F                  B  1826    				ld e,a
0045FC 3A E0 46 00         B  1827    				ld a,(fs_cluster_size)			004600 CB3F                B  1828    caotllp			srl a
004602 28 03               B  1829    				jr z,clusdone
004604 29                  B  1830    				add hl,hl						004605 18 F9               B  1831    				jr caotllp
                           B  1832    			
004607 ED4B ED 46 00       B  1833    clusdone		ld bc,(fs_data_area)			00460C 09                  B  1834    				add hl,bc						00460D 19                  B  1835    				add hl,de						                           B  1836    				
00460E E5                  B  1837    add_ptn_offset	push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 187


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00460F CD 4F 1A 00         B  1838    				call fs_calc_volume_offset
004613 DD21 80 51 00       B  1839    				ld ix,volume_mount_list
004618 DD19                B  1840    				add ix,de
00461A E1                  B  1841    				pop hl
00461B DD0708              B  1842    				ld bc,(ix+08h)					00461E DD7E0B              B  1843    				ld a,(ix+0bh)
004621 09                  B  1844    				add hl,bc
004622 CE00                B  1845    				adc a,0
004624 22 25 53 00         B  1846    				ld (sector_lba0),hl				004628 32 28 53 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
00462C DDE1                B  1849    				pop ix
00462E E1                  B  1850    				pop hl
00462F D1                  B  1851    				pop de
004630 C1                  B  1852    				pop bc
004631 C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
004632                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
004632 C5                  B  1862    				push bc							004633 D5                  B  1863    				push de							004634 E5                  B  1864    				push hl							004635 DDE5                B  1865    				push ix							004637 01000000            B  1866    				ld bc,0
00463B 11000000            B  1867    				ld de,0
00463F 5F                  B  1868    				ld e,a
004640 19                  B  1869    				add hl,de
004641 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
004643                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
004643 CD 32 46 00         B  1875    				call set_absolute_lba
004647 C3 6D 46 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
00464B                     B  1881    backup_sector_lba
                           B  1882    
00464B C5                  B  1883    				push bc
00464C D5                  B  1884    				push de
00464D E5                  B  1885    				push hl
00464E 21 25 53 00         B  1886    				ld hl,sector_lba0
004652 11 55 47 00         B  1887    				ld de,fs_backed_up_sector_lba0
004656 01040000            B  1888    lbabur			ld bc,4
00465A EDB0                B  1889    				ldir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 188


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00465C E1                  B  1890    				pop hl
00465D D1                  B  1891    				pop de
00465E C1                  B  1892    				pop bc
00465F C9                  B  1893    				ret
                           B  1894    
                           B  1895    
004660                     B  1896    restore_sector_lba
                           B  1897    
004660 C5                  B  1898    				push bc
004661 D5                  B  1899    				push de
004662 E5                  B  1900    				push hl
004663 21 55 47 00         B  1901    				ld hl,fs_backed_up_sector_lba0
004667 11 25 53 00         B  1902    				ld de,sector_lba0
00466B 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
00466D                     B  1907    fs_read_sector
                           B  1908    			
00466D C5                  B  1909    				push bc
00466E D5                  B  1910    				push de
00466F E5                  B  1911    				push hl
004670 DDE5                B  1912    				push ix
004672 FDE5                B  1913    				push iy
004674 01040000            B  1914    				ld bc,04h						004678 CD 96 46 00         B  1915    				call sector_access_redirect
00467C FDE1                B  1916    secaccend		pop iy
00467E DDE1                B  1917    				pop ix
004680 E1                  B  1918    				pop hl
004681 D1                  B  1919    				pop de
004682 C1                  B  1920    				pop bc
004683 3F                  B  1921    				ccf								004684 C9                  B  1922    				ret								                           B  1923    
                           B  1924    
004685                     B  1925    fs_write_sector	
                           B  1926    				
004685 C5                  B  1927    				push bc
004686 D5                  B  1928    				push de
004687 E5                  B  1929    				push hl
004688 DDE5                B  1930    				push ix
00468A FDE5                B  1931    				push iy
00468C 01080000            B  1932    				ld bc,08h						004690 CD 96 46 00         B  1933    				call sector_access_redirect
004694 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
004696                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
004696 3A 4F 51 00         B  1941    				ld a,(current_driver)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 189


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
00469A CD E7 19 00         B  1942    				call locate_driver_base			00469E EB                  B  1943    				ex de,hl
00469F 09                  B  1944    				add hl,bc						0046A0 E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
0046A1                     B  1949    bootsector_stub
                           B  1950    
0046A1 EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
0046A9 352E3000 02004000 
0046B1 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
0046B9 3F00FF00 00000000 
0046C1 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
0046C9 E636984E 4F204E41 
0046D1 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
0046D9 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
0046E0 00                  B  1958    fs_cluster_size				db 0
0046E1 000000              B  1959    fs_bytes_per_cluster		dw24 0
0046E4 000000              B  1960    fs_fat1_position			dw24 0		; offse
0046E7 000000              B  1961    fs_fat2_position			dw24 0		; offse
0046EA 000000              B  1962    fs_root_dir_position		dw24 0		; offse
0046ED 000000              B  1963    fs_data_area				dw24 0		; offse
0046F0 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
0046F1 000000              B  1966    fs_sectors_per_fat			dw24 0
0046F4 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
0046F7 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
0046FD 00 00 00 00 00 00 
004703 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
004709 00 00 00 00 00 00 
00470F 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
004715 00 00 00 00 00 00 
                           B  1972    
00471B 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
00471F 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
004723 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
004727 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
00472A 000000              B  1979    fs_file_start_cluster		dw24 0
00472D 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
004730 000000              B  1982    fs_ez80_address				dw24 0
004733 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
004736 000000              B  1985    fs_in_sector_offset			dw24 0
004739 00                  B  1986    fs_working_sector			db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 190


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_fat16_code.asm
                           B  1987    
00473A 000000              B  1988    fs_working_cluster			dw24 0
00473D 000000              B  1989    fs_free_cluster				dw24 0
004740 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
004743 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
004746 000000              B  1994    fs_dir_entry_cluster		dw24 0
004749 000000              B  1995    fs_dir_entry_line_offset	dw24 0
00474C 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
00474D 00                  B  1998    fs_filepointer_valid		db 0
00474E 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
004751 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
004754 00                  B  2003    fs_search_type				db 0
                           B  2004    
004755 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  2931    
                           A  2932    ;----------------------------------------------
                           A  2933    ; OS Data 
                           A  2934    ;----------------------------------------------
                           A  2935    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
004759                     B     9    kernal_table
                           B    10    
004759 E11700              B    11    	dw24 ext_mount_volumes			;00		
00475C 8F1700              B    12    	dw24 os_get_device_info			;01		
00475F 451600              B    13    	dw24 os_check_volume_format		;02		
004762 701A00              B    14    	dw24 ext_change_volume			;03		
004765 A21700              B    15    	dw24 os_get_volume_info			;04		
004768 4F1600              B    16    	dw24 ext_format					;05		
00476B 811600              B    17    	dw24 ext_make_dir				;06		
00476E 8F1600              B    18    	dw24 ext_change_dir				;07		
004771 9D1600              B    19    	dw24 os_parent_dir				;08		
004774 A31600              B    20    	dw24 os_root_dir				;09		
004777 EB1600              B    21    	dw24 ext_delete_dir				;0a		
00477A D41500              B    22    	dw24 ext_find_file				;0b		
00477D F01500              B    23    	dw24 ext_set_file_pointer		;0c		
004780 E91500              B    24    	dw24 os_set_load_length			;0d		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 191


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004783 031600              B    25    	dw24 ext_read_bytes_from_file	;0e		
004786 A91600              B    26    	dw24 ext_erase_file				;0f		
004789 D11600              B    27    	dw24 ext_rename_file			;10		
00478C 131600              B    28    	dw24 ext_create_file			;11		
00478F 251600              B    29    	dw24 ext_write_bytes_to_file	;12		
004792 3E1A00              B    30    	dw24 fs_get_total_sectors		;13		
004795 B71600              B    31    	dw24 os_goto_first_dir_entry	;14		 
004798 BD1600              B    32    	dw24 os_get_dir_entry			;15		
00479B C31600              B    33    	dw24 os_goto_next_dir_entry		;16		
00479E FB1600              B    34    	dw24 ext_read_sector			;17		
0047A1 291700              B    35    	dw24 ext_write_sector			;18		
0047A4 AC1A00              B    36    	dw24 ext_file_sector_list		;19		
0047A7 151A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0047AA 211A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0047AD C91600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0047B0 753600              B    41    	dw24 os_wait_key_press			;1d		
0047B3 BC3600              B    42    	dw24 os_get_key_press			;1e		
0047B6 191500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0047B9 B01700              B    45    	dw24 ext_serial_get_header		;20		
0047BC BA1700              B    46    	dw24 ext_serial_receive_file	;21		 
0047BF C31700              B    47    	dw24 ext_serial_send_file		;22		 
0047C2 D01700              B    48    	dw24 ext_serial_tx				;23		
0047C5 D71700              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
0047C8 010F00              B    51    	dw24 ext_print_string			;25		
0047CB 8B2F00              B    52    	dw24 hwsc_clear_screen			;26		
0047CE 5D3300              B    53    	dw24 hwsc_wait_vrt				;27		
0047D1 A21300              B    54    	dw24 os_set_cursor_position		;28		
0047D4 101A00              B    55    	dw24 ext_plot_char				;29		
0047D7 2E1500              B    56    	dw24 ext_set_pen				;2a		
0047DA 3B1500              B    57    	dw24 ext_background_colours		;2b		
0047DD B83100              B    58    	dw24 hwsc_draw_cursor			;2c		
0047E0 351500              B    59    	dw24 os_get_pen					;2d		
0047E3 D42F00              B    60    	dw24 hwsc_scroll_up				;2e		
0047E6 2B2F00              B    61    	dw24 os_set_video_hw_regs		;2f		
0047E9 1F1500              B    62    	dw24 os_get_display_size		;30		
0047EC 4D3200              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0047EF C21300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0047F2 CF1A00              B    66    	dw24 ext_set_envar				;33		
0047F5 C91A00              B    67    	dw24 ext_get_envar				;34		
0047F8 D91A00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
0047FB 181400              B    70    	dw24 os_set_mouse_window		;36		
0047FE 591400              B    71    	dw24 os_get_mouse_position		;37		
004801 351400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
004804 CB3300              B    74    	dw24 hwsc_time_delay			;39		
004807 BE1100              B    75    	dw24 ext_compare_strings		;3a		
00480A 4A1000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 192


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
00480D 7F1000              B    77    	dw24 ext_ascii_to_hexword		;3c		
004810 D41000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
004813 B03300              B    80    	dw24 hwsc_get_version			;3e		
004816 8C1300              B    81    	dw24 os_dont_store_registers	;3f		
004819 E51A00              B    82    	dw24 os_get_font_info			;40 	
00481C EE3300              B    83    	dw24 hwsc_read_rtc				;41     
00481F 163400              B    84    	dw24 hwsc_write_rtc				;42		 
004822 DF1A00              B    85    	dw24 os_get_keymap_location		;43		 
004825 792800              B    86    	dw24 os_get_mem_high			;44
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    ; Non-packed Text Strings
                           B    90    ;----------------------------------------------
                           B    91    
004828 50524F53 4520666F   B    92    welcome_message			db "PROSE for EZ80P by 
004830 7220455A 38305020 
004838 62792050 68696C20 
004840 52757374 6F6E2032 
004848 3031310B 0B 
00484D 53595354 454D2052   B    93    						db "SYSTEM RAM free abo
004855 414D2066 72656520 
00485D 61626F76 653A2024 
004865 00 
004866 44726976 65733A0B   B    94    storage_txt				db "Drives:",11,0
00486E 00 
00486F 434F4D4D 414E4453   B    95    os_dos_cmds_txt			db "COMMANDS",0
004877 00 
004878 53544152 5455502E   B    96    startup_script_fn		db "STARTUP.SCR",0
004880 53435200 
004884 2400                B    97    os_hex_prefix_txt		db "$",0
004886 4F532056 65727369   B    98    os_version_txt			db "OS Version: $",0	00488E 6F6E3A20 2400 
004894 414D4F45 42412048   B    99    hw_version_txt			db "AMOEBA HW Version: 
00489C 57205665 7273696F 
0048A4 6E3A2024 00 
0048A9 202F2000            B   100    fwd_slash_txt			db " / ",0
0048AD 4C6F6164 696E672E   B   101    loading_txt				db "Loading..",11,0
0048B5 2E0B00 
0048B8 53617669 6E672E2E   B   102    saving_txt				db "Saving..",11,0
0048C0 0B00 
0048C2 2E657A70 20         B   103    ezp_extension_txt		db ".ezp",32
0048C7 0B4D6F72 653F0B0B   B   104    os_more_txt				db 11,"More?",11,11,0
0048CF 00 
0048D0 52656769 73746572   B   105    nmi_freeze_txt			db "Register Dump:"
0048D8 2044756D 703A 
0048DE 0B0B00              B   106    crlfx2_txt				db 11,11,0
0048E1 7800                B   107    rep_char_txt			db "x",0
0048E3 20746F20 00         B   108    to_txt					db " to ",0
                           B   109    
                           B   110    ;----------------------------------------------
                           B   111    ; Packed text section
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 193


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
                           B   112    ;----------------------------------------------
                           B   113    
0048E8 00444542 5547       B   114    dictionary				db 0,"DEBUG"			0048EE 002D2D2D 2D2D       B   115    						db 0,"-----"			0048F4 00494F              B   116    						db 0,"IO"				0048F7 002D2D              B   117    						db 0,"--"				0048FA 004D4953 43         B   118    						db 0,"MISC"				0048FF 002D2D2D 2D         B   119    						db 0,"----"				004904 00616464 72         B   120    						db 0,"addr"				004909 0050524F 5345       B   121    						db 0,"PROSE"			00490F 00612062 2063       B   122    						db 0,"a b c"			004915 00416464 72657373   B   123    						db 0,"Address"			00491D 00427974 6573       B   124    						db 0,"Bytes"			004923 00457865 63757461   B   125    						db 0,"Executable"		00492B 626C65 
00492E 0048756E 74         B   126    						db 0,"Hunt"				004933 0046696C 6C         B   127    						db 0,"Fill"				004938 00476F74 6F         B   128    						db 0,"Goto"				                           B   129    						
00493D 0053686F 77         B   130    						db 0,"Show"				004942 00435055            B   131    						db 0,"CPU"				004946 00526567 69737465   B   132    						db 0,"Registers"		00494E 7273 
004950 004173              B   133    						db 0,"As"				004953 00415343 4949       B   134    						db 0,"ASCII"			004959 00436C65 6172       B   135    						db 0,"Clear"			00495F 00536372 65656E     B   136    						db 0,"Screen"			004966 00446973 61737365   B   137    						db 0,"Disassemble"		00496E 6D626C65 
004972 00537769 746368     B   138    						db 0,"Switch"			004979 00436F70 79         B   139    						db 0,"Copy"				00497E 00446576 696365     B   140    						db 0,"Device"			004985 00436861 6E6765     B   141    						db 0,"Change"			00498C 00447269 7665       B   142    						db 0,"Drive"			004992 00446972            B   143    						db 0,"Dir"				004996 002F                B   144    						db 0,"/"				004998 00666E              B   145    						db 0,"fn"				                           B   146    						
00499B 0044656C 657465     B   147    						db 0,"Delete"			0049A2 0046696C 65         B   148    						db 0,"File"				0049A7 00496E66 6F         B   149    						db 0,"Info"				0049AC 00564F4C 783A       B   150    						db 0,"VOLx:"			0049B2 004D616B 65         B   151    						db 0,"Make"				0049B7 0052656D 6F756E74   B   152    						db 0,"Remount"			0049BF 00537461 7274       B   153    						db 0,"Start"			0049C5 00576172 6E696E67   B   154    						db 0,"Warning!"			0049CD 21 
0049CE 00416C6C            B   155    						db 0,"All"				0049D2 0052656D 6F7665     B   156    						db 0,"Remove"			0049D9 0052656E 616D65     B   157    						db 0,"Rename"			0049E0 004F72              B   158    						db 0,"Or"				0049E3 00526563 65697665   B   159    						db 0,"Receive"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 194


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
0049EB 00536176 65         B   160    						db 0,"Save"				0049F0 00547261 6E736D69   B   161    						db 0,"Transmit"			0049F8 74 
0049F9 004C6F61 64         B   162    						db 0,"Load"				                           B   163    						
0049FE 004F532F 4857       B   164    						db 0,"OS/HW"			004A04 00566572 73696F6E   B   165    						db 0,"Version"			004A0C 005B7065 6E207061   B   166    						db 0,"[pen paper]"		004A14 7065725D 
004A18 803A                B   167    						db 80h,":"				004A1A 813E                B   168    						db 81h,">"				004A1C 002A                B   169    						db 0,"*"				004A1E 00566F6C 756D6573   B   170    						db 0,"Volumes"			004A26 8343                B   171    						db 83h,"C"				004A28 844344              B   172    						db 84h,"CD"				004A2B 85434C53            B   173    						db 85h,"CLS"			004A2F 8650454E            B   174    						db 86h,"PEN"			004A33 8744                B   175    						db 87h,"D"				004A35 8844454C            B   176    						db 88h,"DEL"			004A39 89444952            B   177    						db 89h,"DIR"			004A3D 8A48                B   178    						db 8ah,"H"				004A3F 8B46                B   179    						db 8bh,"F"				                           B   180    						
004A41 004F6E              B   181    						db 0,"On"				004A44 8C464F52 4D4154     B   182    						db 8ch,"FORMAT"			004A4B 0047                B   183    						db 0,"G"				004A4D 8D4C42              B   184    						db 8dh,"LB"				004A50 8E4D                B   185    						db 8eh,"M"				004A52 8F4D4F55 4E54       B   186    						db 8fh,"MOUNT"			004A58 004265              B   187    						db 0,"Be"				004A5B 9052                B   188    						db 90h,"R"				004A5D 915244              B   189    						db 91h,"RD"				004A60 92524E              B   190    						db 92h,"RN"				004A63 935258              B   191    						db 93h,"RX"				004A66 945342              B   192    						db 94h,"SB"				004A69 9554                B   193    						db 95h,"T"				004A6B 965458              B   194    						db 96h,"TX"				004A6E 97564552 53         B   195    						db 97h,"VERS"			004A73 00577269 7465       B   196    						db 0,"Write"			                           B   197    						
004A79 004D656D            B   198    						db 0,"Mem"				004A7D 00227478 7422       B   199    						db 0,22h,"txt",22h		004A83 0057696C 6C         B   200    						db 0,"Will"				004A88 00526174 65         B   201    						db 0,"Rate"				004A8D 0061                B   202    						db 0,"a"				004A8F 00507265 70         B   203    						db 0,"Prep"				004A94 984D44              B   204    						db 98h,"MD"				004A97 00447269 766573     B   205    						db 0,"Drives"			004A9E 006F6C64 666E       B   206    						db 0,"oldfn"			004AA4 006E6577 666E       B   207    						db 0,"newfn"			004AAA 006C656E            B   208    						db 0,"len"				004AAE 00436F6C 6F757273   B   209    						db 0,"Colours"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 195


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004AB6 993F                B   210    						db 99h,"?"				004AB8 00436F6D 6D616E64   B   211    						db 0,"Commands"			004AC0 73 
004AC1 0020                B   212    						db 0," "				004AC3 002D                B   213    						db 0,"-"				                           B   214    						
004AC5 00566F6C 756D65     B   215    						db 0,"Volume"			004ACC 0046756C 6C         B   216    						db 0,"Full"				004AD1 004E6F74            B   217    						db 0,"Not"				004AD5 00466F75 6E64       B   218    						db 0,"Found"			004ADB 004C656E 677468     B   219    						db 0,"Length"			004AE2 005A6572 6F         B   220    						db 0,"Zero"				004AE7 004F7574            B   221    						db 0,"Out"				004AEB 004F66              B   222    						db 0,"Of"				004AEE 0052616E 6765       B   223    						db 0,"Range"			004AF4 00416C72 65616479   B   224    						db 0,"Already"			004AFC 00457869 737473     B   225    						db 0,"Exists"			004B03 004174              B   226    						db 0,"At"				004B06 00526F6F 74         B   227    						db 0,"Root"				004B0B 004D6973 6D617463   B   228    						db 0,"Mismatch"			004B13 68 
004B14 00526571 75657374   B   229    						db 0,"Request"			004B1C 00446174 61         B   230    						db 0,"Data"				                           B   231    				
004B21 00454F46            B   232    						db 0,"EOF"				004B25 00416674 6572       B   233    						db 0,"After"			004B2B 00556E6B 6E6F776E   B   234    						db 0,"Unknown"			004B33 00436F6D 6D616E64   B   235    						db 0,"Command"			004B3B 00426164            B   236    						db 0,"Bad"				004B3F 00486578            B   237    						db 0,"Hex"				004B43 004E6F              B   238    						db 0,"No"				004B46 0041626F 72746564   B   239    						db 0,"Aborted"			004B4E 00507265 73656E74   B   240    						db 0,"Present"			004B56 00436865 636B7375   B   241    						db 0,"Checksum"			004B5E 6D 
004B5F 004C6F61 646564     B   242    						db 0,"Loaded"			004B66 00436F6D 6D73       B   243    						db 0,"Comms"			004B6C 00457272 6F72       B   244    						db 0,"Error"			004B72 00417267 756D656E   B   245    						db 0,"Arguments"		004B7A 7473 
004B7C 004C6F73 74         B   246    						db 0,"Lost"				                           B   247    						
004B81 00                  B   248    						db 0
004B82 46415431 36         B   249    fat16_txt				db "FAT16"				                           B   250    
004B87 00536572 69616C     B   251    						db 0,"Serial"			004B8E 0054696D 65         B   252    						db 0,"Time"				004B93 00466F6E 74         B   253    						db 0,"Font"				004B98 00546F6F            B   254    						db 0,"Too"				004B9C 004C6F6E 67         B   255    						db 0,"Long"				004BA1 00446573 74696E61   B   256    						db 0,"Destination"		004BA9 74696F6E 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 196


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004BAD 0053656C 65637465   B   257    						db 0,"Selected"			004BB5 64 
004BB6 00496E76 616C6964   B   258    						db 0,"Invalid"			004BBE 004D6973 73696E67   B   259    						db 0,"Missing"			004BC6 004F4B              B   260    						db 0,"OK"				004BC9 004F53              B   261    						db 0,"OS"				004BCC 0050726F 74656374   B   262    						db 0,"Protected"		004BD4 6564 
004BD6 0041                B   263    						db 0,"A"				004BD8 004973              B   264    						db 0,"Is"				004BDB 00456D70 7479       B   265    						db 0,"Empty"			004BE1 00456E64            B   266    						db 0,"End"				                           B   267    						
004BE5 0024                B   268    						db 0,"$"
004BE7 7878                B   269    hex_byte_txt			db "xx"					                           B   270    						
004BE9 00417070 656E64     B   271    						db 0,"Append"			004BF0 003F                B   272    						db 0,"?"				004BF2 0024                B   273    						db 0,"$"				004BF4 00417761 6974696E   B   274    						db 0,"Awaiting"			004BFC 67 
004BFD 00526563 65697669   B   275    						db 0,"Receiving"		004C05 6E67 
004C07 0053656E 64696E67   B   276    						db 0,"Sending"			004C0F 000B                B   277    						db 0,11					004C11 002E2E              B   278    						db 0,".."				004C14 004E616D 65         B   279    						db 0,"Name"				004C19 00204279 746573     B   280    						db 0," Bytes"			004C20 00507265 7373       B   281    						db 0,"Press"			004C26 00416E79            B   282    						db 0,"Any"				004C2A 004B6579            B   283    						db 0,"Key"				004C2E 00456E74 6572       B   284    						db 0,"Enter"			004C34 9A455845 43         B   285    						db 9ah,"EXEC"			                           B   286    				
004C39 0052756E            B   287    						db 0,"Run"				004C3D 00536372 697074     B   288    						db 0,"Script"			004C44 00594553            B   289    yes_txt					db 0,"YES" 				004C48 00546F              B   290    						db 0,"To"				004C4B 00536574            B   291    						db 0,"Set"				004C4F 00436F6E 74696E75   B   292    						db 0,"Continue"			004C57 65 
004C58 004E6F6E 65         B   293    						db 0,"None"				004C5D 00447269 766572     B   294    						db 0,"Driver"			004C64 9B3C                B   295    						db 9bh,"<"				004C66 004E6577 6572       B   296    						db 0,"Newer"			004C6C 00526571 75697265   B   297    						db 0,"Required"			004C74 64 
004C75 00465047 4120636F   B   298    						db 0,"FPGA config"		004C7D 6E666967 
004C81 00556E63 68616E67   B   299    						db 0,"Unchanged"		004C89 6564 
004C8B 00202849 6620666E   B   300    						db 0," (If fn = ! recei
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 197


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004C93 203D2021 20726563 
004C9B 65697665 20616E64 
004CA3 2072756E 2070726F 
004CAB 6772616D 29 
004CB0 9C50414C 45545445   B   301    						db 9ch,"PALETTE"		004CB8 0070616C 65747465   B   302    						db 0,"palette"			                           B   303    						
004CC0 9D4D4F55 5345       B   304    						db 9dh,"MOUSE"			004CC6 00456E61 626C65     B   305    						db 0,"Enable"			004CCD 004B6579 626F6172   B   306    						db 0,"Keyboard"			004CD5 64 
004CD6 00446574 65637465   B   307    						db 0,"Detected"			004CDE 64 
004CDF 004D6F75 7365       B   308    						db 0,"Mouse"			004CE5 00536563 746F72     B   309    						db 0,"Sector"			004CEC 00496E63 6F727265   B   310    						db 0,"Incorrect"		004CF4 6374 
004CF6 9E564D4F 4445       B   311    						db 9eh,"VMODE"			004CFC 00566964 656F       B   312    						db 0,"Video"			004D02 004D6F64 65         B   313    						db 0,"Mode"				004D07 9F464F4E 54         B   314    						db 9fh,"FONT"			004D0C 00416E64            B   315    						db 0,"And"				004D10 00536176 696E67     B   316    						db 0,"Saving"			004D17 00556E73 7570706F   B   317    						db 0,"Unsupported"		004D1F 72746564 
                           B   318    						
004D23 0001                B   319    						db 0,1					                           B   320    
                           B   321    
                           B   322    
                           B   323    
                           B   324    
004D25 2199696A 5F916F92   B   325    save_append_msg			db 021h,099h,069h,06ah,
004D2D 9700 
004D2F 2F0A9300            B   326    os_loadaddress_msg 		db 02fh,00ah,093h,0		004D33 21649300            B   327    os_filesize_msg			db 021h,064h,093h,0		004D37 94219700            B   328    ser_rec_msg				db 094h,021h,097h,0		004D3B 956F9897 00         B   329    ser_rec2_msg			db 095h,06fh,098h,097h,
004D40 966F9897 00         B   330    ser_send_msg			db 096h,06fh,098h,097h,
004D45 9521BBBC 989700     B   331    ser_recsave_msg			db 095h,021h,0bbh,0bch,
004D4C A77C9097 00         B   332    hw_err_msg				db 0a7h,07ch,090h,097h,
004D51 607C00              B   333    disk_err_msg			db 060h,07ch,0			004D54 A1779797 00         B   334    script_aborted_msg		db 0a1h,077h,097h,097h,
004D59 76B2B397 00         B   335    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   336    
004D5E 9700                B   337    packed_help1				db 097h,0
004D60 0100                B   338    							db 001h,0			004D62 0200                B   339    							db 002h,0			004D64 3307095F 4F500B00   B   340    							db 033h,007h,009h,0
004D6C 3407515F 4F1400     B   341    							db 034h,007h,051h,0
004D73 A807095F 4F0B1E17   B   342    							db 0a8h,007h,009h,0
004D7B 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 198


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
                           B   343    
004D7C 37070707 5F195000   B   344    							db 037h,007h,007h,0
004D84 3B07075F 1700       B   345    							db 03bh,007h,007h,0
004D8A 3F070754 5F0E5000   B   346    							db 03fh,007h,007h,0
004D92 42075F0F 0A00       B   347    							db 042h,007h,05fh,0
004D98 3E070709 5F0D5000   B   348    							db 03eh,007h,007h,0
004DA0 44075F10 500B00     B   349    							db 044h,007h,05fh,0
004DA7 475F1011 1200       B   350    							db 047h,05fh,010h,0
004DAD 4C075F10 50131400   B   351    							db 04ch,007h,05fh,0
                           B   352    	
004DB5 9700                B   353    							db 097h,0
004DB7 0300                B   354    							db 003h,0			004DB9 0400                B   355    							db 004h,0			004DBB 38231E1D 5F1B601E   B   356    							db 038h,023h,01eh,0
004DC3 1D00 
004DC5 3C1F5F20 2100       B   357    							db 03ch,01fh,05fh,0
004DCB 3D5F101D 00         B   358    							db 03dh,05fh,010h,0
004DD0 411A995F 551C00     B   359    							db 041h,01ah,099h,0
004DD7 431F075F 2F2100     B   360    							db 043h,01fh,007h,0
004DDE 561D5F24 1D00       B   361    							db 056h,01dh,05fh,0
004DE4 455F2557 00         B   362    							db 045h,05fh,025h,0
004DE9 481D5F29 1D00       B   363    							db 048h,01dh,05fh,0
004DEF 4958595F 2A2100     B   364    							db 049h,058h,059h,0
004DF6 4A1F075F 2C21AD00   B   365    							db 04ah,01fh,007h,0
004DFE 4B1F075A 5F2D2100   B   366    							db 04bh,01fh,007h,0
004E06 4D1F075A 5F2E2100   B   367    							db 04dh,01fh,007h,0
004E0E 235F1860 00         B   368    							db 023h,05fh,018h,0
                           B   369    
004E13 9700                B   370    							db 097h,0
004E15 0500                B   371    							db 005h,0			004E17 0600                B   372    							db 006h,0			004E19 395F1516 00         B   373    							db 039h,05fh,015h,0
004E1E 9F1F5FA0 A100       B   374    							db 09fh,01fh,05fh,0
004E24 BA1F5F1B 8200       B   375    							db 0bah,01fh,05fh,0
004E2A B05FB1B0 A700       B   376    							db 0b0h,05fh,0b1h,0
004E30 AE095F1B AF00       B   377    							db 0aeh,09h,05fh,01
004E36 3A325F1B 5B00       B   378    							db 03ah,032h,05fh,0
004E3C 4E5F1030 3100       B   379    							db 04eh,05fh,010h,0
004E42 B7095F1B B8B900     B   380    							db 0b7h,09h,5fh,01b
004E49 5C5F105D 00         B   381    							db 05ch,05fh,010h,0
004E4E 9700                B   382    							db 097h,0
004E50 FF                  B   383    							db 0ffh
                           B   384    
                           B   385    
                           B   386    
                           B   387    
004E51 451C00              B   388    os_cmd_locs					dw24 os_cmd_colon	004E54 EA1F00              B   389    							dw24 os_cmd_gtr		004E57 782800              B   390    							dw24 os_cmd_unused	004E5A EC1A00              B   391    							dw24 os_cmd_c		004E5D 591B00              B   392    							dw24 os_cmd_cd		004E60 3F1C00              B   393    							dw24 os_cmd_cls		Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 199


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004E63 EE2600              B   394    							dw24 os_cmd_pen		004E66 5F1C00              B   395    							dw24 os_cmd_d		                           B   396    					
004E69 871C00              B   397    							dw24 os_cmd_del		004E6C 9C1C00              B   398    							dw24 os_cmd_dir		004E6F 181F00              B   399    							dw24 os_cmd_h		004E72 981D00              B   400    							dw24 os_cmd_f		004E75 C01D00              B   401    							dw24 os_cmd_format	004E78 1E2000              B   402    							dw24 os_cmd_lb		004E7B AD2000              B   403    							dw24 os_cmd_m		                           B   404    					
004E7E AF2500              B   405    							dw24 os_cmd_remount
004E81 042100              B   406    							dw24 os_cmd_r		004E84 352200              B   407    							dw24 os_cmd_rd		004E87 422200              B   408    							dw24 os_cmd_rn		004E8A C62200              B   409    							dw24 os_cmd_rx		004E8D 5E2200              B   410    							dw24 os_cmd_sb		004E90 5B2500              B   411    							dw24 os_cmd_t		004E93 EF2400              B   412    							dw24 os_cmd_tx		                           B   413    					
004E96 BB2500              B   414    							dw24 os_cmd_vers	004E99 F72000              B   415    							dw24 os_cmd_md		004E9C C61F00              B   416    							dw24 os_cmd_help	004E9F EC2500              B   417    							dw24 os_cmd_exec	004EA2 EC2600              B   418    							dw24 os_cmd_ltn		004EA5 0E2700              B   419    							dw24 os_cmd_palette
004EA8 3F2700              B   420    							dw24 os_cmd_mouse	004EAB 892700              B   421    							dw24 os_cmd_vmode	004EAE 272800              B   422    							dw24 os_cmd_font	                           B   423    							
                           B   424    								
004EB1 00                  B   425    packed_msg_list				db 0				                           B   426    		
004EB2 606100              B   427    							db 060h,061h,0		004EB5 21626300            B   428    							db 021h,062h,063h,0
004EB9 1D6100              B   429    							db 01dh,061h,0		004EBC 628C1D00            B   430    							db 062h,08ch,01dh,0
004EC0 1D8D628E 00         B   431    							db 01dh,08dh,062h,0
004EC5 628C2100            B   432    							db 062h,08ch,021h,0
004EC9 21648D65 00         B   433    							db 021h,064h,08dh,0
004ECE 0A666768 00         B   434    							db 00ah,066h,067h,0
004ED3 2199696A 00         B   435    							db 021h,099h,069h,0
004ED8 696B6C00            B   436    							db 069h,06bh,06ch,0
                           B   437    					
004EDC 727300              B   438    							db 072h,073h,0		004EDF 877500              B   439    							db 087h,075h,0		004EE2 76219900            B   440    							db 076h,021h,099h,0
                           B   441    					
004EE6 87B500              B   442    							db 087h,0b5h,0		004EE9 797400              B   443    							db 079h,074h,0		004EEC 9A7A00              B   444    bytes_loaded_msg			db 09ah,07ah,0		004EEF 7B7C00              B   445    							db 07bh,07ch,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 200


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004EF2 747D00              B   446    							db 074h,07dh,0		                           B   447    
004EF5 627F00              B   448    format_err_msg				db 062h,07fh,0		                           B   449    
004EF8 816600              B   450    							db 081h,066h,0		004EFB 21998384 00         B   451    							db 021h,099h,083h,0
004F00 76260A00            B   452    							db 076h,026h,00ah,0
004F04 76216400            B   453    							db 076h,021h,064h,0
004F08 2D7700              B   454    							db 02dh,077h,0		004F0B 2D7C6B85 00         B   455    							db 02dh,07ch,06bh,0
004F10 628C080C 00         B   456    							db 062h,08ch,08h,0c
004F15 A9316708 AA00       B   457    							db 0a9h,031h,067h,0
004F1B 768F0A00            B   458    							db 076h,08fh,00ah,0
004F1F 76850A00            B   459    							db 076h,085h,00ah,0
                           B   460    					
004F23 746800              B   461    							db 074h,068h,0		004F26 887D00              B   462    							db 088h,07dh,0		004F29 8900                B   463    ok_msg						db 089h,0			                           B   464    					
004F2B 876000              B   465    							db 087h,060h,0		004F2E 1A627800            B   466    							db 01ah,062h,078h,0
                           B   467    					
004F32 1D626300            B   468    							db 01dh,062h,063h,0
004F36 7700                B   469    							db 077h,0			                           B   470    					
004F38 21996D00            B   471    							db 021h,099h,06dh,0
004F3C 8A508B00            B   472    							db 08ah,050h,08bh,0
004F40 6F71706E 00         B   473    							db 06fh,071h,070h,0
004F45 763600              B   474    no_vols_msg					db 076h,036h,0		004F48 97A66300            B   475    none_found_msg				db 097h,0a6h,063h,0
                           B   476    							
004F4C B62100              B   477    							db 0b6h,021h,0		004F4F A9316708 AA00       B   478    							db 0a9h,031h,067h,0
004F55 21AC00              B   479    							db 021h,0ach,0		                           B   480    							
004F58 766F00              B   481    							db 076h,06fh,0		004F5B 746F00              B   482    							db 074h,06fh,0		004F5E 66676800            B   483    							db 066h,067h,068h,0
004F62 BD1A00              B   484    							db 0bdh,01ah,0		004F65 1A62B300            B   485    							db 01ah,062h,0b3h,0
                           B   486    							
004F69 FF                  B   487    							db 0ffh				                           B   488    
                           B   489    ;----------------------------------------------
                           B   490    
004F6A                     B   491    kernal_error_code_translation
                           B   492    
004F6A 242D2E14 08110F2A   B   493    					db 24h,2dh,2eh,14h, 08h,11h
004F72 2F3031 
                           B   494    					
004F75                     B   495    fs_error_code_translation
                           B   496    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 201


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
004F75 00010203 04050607   B   497    					db 00h,01h,02h,03h,04h,05h,
004F7D 08090A0B 0C0D1321 
004F85 22232425 260E0000   B   498    					db 22h,23h,24h,25h,26h,0eh,
                           B   499    
                           B   500    
                           B   501    ;----------------------------------------------
                           B   502    ; Scancode to ASCII keymaps
                           B   503    ;----------------------------------------------
                           B   504    
                           C     0    include	'UK_keymap.asm'
004F8D                     C     1    keymap:
004F8D 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
004F95 00000000 00006000 
004F9D 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
004FA5 00007A73 61773200 
004FAD 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
004FB5 00207666 74723500 
004FBD 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
004FC5 00006D6A 75373800 
004FCD 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
004FD5 002E2F6C 3B702D00 
004FDD 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
004FE5 0000005D 00230000 
004FED 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
004FF5 00000000 00000000 
004FFD AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005005 21000000 5A534157 
00500D 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005015 A3000020 56465452 
00501D 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005025 5E000000 4D4A5526 
00502D 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005035 2800003E 3F4C3A50 
00503D 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005045 00000000 007D007E 
00504D 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005055 00000000 00000000 
00505D 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005065 00000000 00000000 
00506D 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005075 00000000 00000000 
00507D 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005085 00000000 00000000 
00508D 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005095 00000000 00000000 
00509D 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
0050A5 00000000 00000000 
0050AD 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   506    
       00004F8D            B   507    unshifted_keymap equ keymap+00h
       00004FEF            B   508    shifted_keymap   equ keymap+62h
       00005051            B   509    alted_keymap	 equ keymap+c4h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 202


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
                           B   510    	
                           B   511    ;----------------------------------------------
                           B   512    
0050B3 00                  B   513    ui_index				db 0				; u
0050B4 00                  B   514    ui_maxchars				db 0				; "
0050B5 000000              B   515    ui_string_addr			dw24 0				; "
                           B   516    
                           B   517    ;----------------------------------------------
                           B   518    ; OS Display parameters
                           B   519    ;----------------------------------------------
                           B   520    
0050B8 00                  B   521    video_mode				db 0
0050B9 0700                B   522    current_pen				dw 07h				; c
0050BB 0000                B   523    background_colour		dw 00h				; f
                           B   524    
0050BD 00000F00 000F0F0F   B   525    pen_palette				dw 0000h,000fh,0f00h,0f
0050C5 F000FF00 F00FFF0F 
0050CD 55059909 CC0C710F   B   526    						dw 0555h,0999h,0ccch,0f
0050D5 7F00F80D 40088C03 
                           B   527    
0050DD 00                  B   528    plotchar_colour			db 0				; c
                           B   529    
0050DE 00                  B   530    req_cursor_image		db 0
0050DF 00                  B   531    active_cursor_image		db 0
                           B   532    
0050E0                     B   533    display_parameters							; D
                           B   534    ;-----------------
                           B   535    
0050E0 000000              B   536    window_rows				dw24 0				; i
0050E3 000000              B   537    window_columns			dw24 0				; i
0050E6 000000              B   538    window_width_bytes		dw24 0				; i
0050E9 000000              B   539    window_height_lines		dw24 0				; i
                           B   540    
0050EC 040000 080000       B   541    font_parameters			dw24 4,8,0,0
0050F2 000000 000000 
       000050EC            B   542    font_width_bytes		equ font_parameters+0	       000050EF            B   543    font_height_lines		equ font_parameters+3
       000050F2            B   544    font_addr				equ font_parameters+6
       000050F5            B   545    font_length				equ font_parameters+9
                           B   546    
0050F8 000000              B   547    video_window_address	dw24 0
0050FB 000000              B   548    charmap_address			dw24 0
0050FE 000000              B   549    attributes_address		dw24 0
005101 000000              B   550    cursor_image_address	dw24 0
005104 000000              B   551    total_window_bytes		dw24 0
005107 000000              B   552    total_charmap_bytes		dw24 0
00510A 000000              B   553    total_row_bytes			dw24 0				; i
00510D 00                  B   554    window_pixel_doubling	db 0
                           B   555    
                           B   556    ;==============================================
                           B   557    ;  Serial Routine Data
                           B   558    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 203


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
                           B   559    
00510E 000000              B   560    serial_ez80_address		dw24 0
005111 000000              B   561    serial_file_length		dw24 0
005114 000000              B   562    serial_fn_addr			dw24 0
005117 00 00 00 00 00 00   B   563    serial_filename			blkb 18,0		
00511D 00 00 00 00 00 00 
005123 00 00 00 00 00 00 
005129 00                  B   564    serial_fn_length		db 0
00512A 00                  B   565    serial_timeout			db 0
                           B   566    
00512B 00 00 00 00 00 00   B   567    serial_fileheader		blkb 20,0
005131 00 00 00 00 00 00 
005137 00 00 00 00 00 00 
00513D 00 00 
00513F 5A383050 2E464845   B   568    serial_header_id		db "Z80P.FHEADER"		005147 41444552 
00514B 00                  B   569    serial_transfer_started	db 0
                           B   570    
00514C 00                  B   571    anim_wait_count			db 0
                           B   572    
                           B   573    ;----------------------------------------------
                           B   574    ; FILE SYSTEM RELATED VARIABLES
                           B   575    ;----------------------------------------------
                           B   576    
00514D 00                  B   577    boot_drive			db 0
                           B   578    
00514E 00                  B   579    current_volume		db 0
                           B   580    	
00514F 00                  B   581    current_driver		db 0			;normally u
                           B   582    
005150 00                  B   583    device_count		db 0			;IE: the nu
                           B   584    
005151 00                  B   585    volume_count		db 0
                           B   586    				
005152 20564F4C 303A00     B   587    vol_txt				db " VOL0:",0	;space pref
005159 44455630 3A00       B   588    dev_txt				db "DEV0:",0
                           B   589    
00515F 000000              B   590    sector_rd_wr_addr	dw24 0
                           B   591    
                           B   592    ;==============================================
                           B   593    
                           B   594    ; Add storage device drivers here, end with 0
                           B   595    
005162 892800              B   596    driver_table		dw24 sd_card_driver	;Device
005165 000000              B   597    					dw24 0				;last d
                           B   598    
                           B   599    ; Each driver's code should have a header in th
                           B   600    ; ---------------------------------------------
                           B   601    ; $0    = JP to get ID routin
                           B   602    ; $4    = JP to read sector routine
                           B   603    ; $8    = JP to write sector routinee
                           B   604    ; $c    = ASCII name of device type (null termi
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 204


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
                           B   605    ;==============================================
                           B   606    
005168                     B   607    volume_dir_clusters
                           B   608    
005168 00 00 00 00 00 00   B   609    					blkb max_volumes*3,0
00516E 00 00 00 00 00 00 
005174 00 00 00 00 00 00 
00517A 00 00 00 00 00 00 
                           B   610    	
005180                     B   611    volume_mount_list
                           B   612    
005180 00 00 00 00 00 00   B   613    					blkb max_volumes*16,0
005186 00 00 00 00 00 00 
00518C 00 00 00 00 00 00 
005192 00 00 00 00 00 00 
005198 00 00 00 00 00 00 
00519E 00 00 00 00 00 00 
0051A4 00 00 00 00 00 00 
0051AA 00 00 00 00 00 00 
0051B0 00 00 00 00 00 00 
0051B6 00 00 00 00 00 00 
0051BC 00 00 00 00 00 00 
0051C2 00 00 00 00 00 00 
0051C8 00 00 00 00 00 00 
0051CE 00 00 00 00 00 00 
0051D4 00 00 00 00 00 00 
0051DA 00 00 00 00 00 00 
0051E0 00 00 00 00 00 00 
0051E6 00 00 00 00 00 00 
0051EC 00 00 00 00 00 00 
0051F2 00 00 00 00 00 00 
0051F8 00 00 00 00 00 00 
0051FE 00 00 
                           B   614    
                           B   615    ; Each entry is 16 bytes in the form:
                           B   616    
                           B   617    ; OFFSETS
                           B   618    ; -------
                           B   619    ; $00 - Volume is present (0/1)
                           B   620    ; $01 - Volume's host driver number (1 byte)	                           B   621    ; $02 - [reserved]
                           B   622    ; $03 - [reserved]
                           B   623    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   624    ; $07 - Partition number on host drive (0/1/2/3
                           B   625    ; $08 - Offset in sectors from MBR to partition
                           B   626    ; $0c - [reserved]
                           B   627    ; $0d - [reserved]	
                           B   628    ; $0e - [reserved]
                           B   629    ; $0f - [reserved]
                           B   630    
                           B   631    ;==============================================
                           B   632    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 205


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
005200                     B   633    host_device_hardware_info
                           B   634    
005200 00 00 00 00 00 00   B   635    					blkb 32*4,0
005206 00 00 00 00 00 00 
00520C 00 00 00 00 00 00 
005212 00 00 00 00 00 00 
005218 00 00 00 00 00 00 
00521E 00 00 00 00 00 00 
005224 00 00 00 00 00 00 
00522A 00 00 00 00 00 00 
005230 00 00 00 00 00 00 
005236 00 00 00 00 00 00 
00523C 00 00 00 00 00 00 
005242 00 00 00 00 00 00 
005248 00 00 00 00 00 00 
00524E 00 00 00 00 00 00 
005254 00 00 00 00 00 00 
00525A 00 00 00 00 00 00 
005260 00 00 00 00 00 00 
005266 00 00 00 00 00 00 
00526C 00 00 00 00 00 00 
005272 00 00 00 00 00 00 
005278 00 00 00 00 00 00 
00527E 00 00 
                           B   636    
                           B   637    ; Each entry is 32 bytes..
                           B   638    ;
                           B   639    ; OFFSETS
                           B   640    ; -------
                           B   641    ; $00 - Device driver number
                           B   642    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   643    ; $05 - Zero terminated hardware name (22 ASCII
                           B   644    ; (remaining bytes to $1F currently unused)
                           B   645    
                           B   646    ;----------------------------------------------
                           B   647    
005280 000000              B   648    dhwn_temp_pointer		dw24 0
                           B   649    
005283 00                  B   650    partition_temp			db 0
005284 00                  B   651    vols_on_device_temp		db 0
005285 00                  B   652    sys_driver_backup		db 0
005286 00                  B   653    os_quiet_mode			db 0
                           B   654    
005287 8C5A00              B   655    default_load_addr		dw24 os_max_addr
                           B   656    
                           B   657    ;----------------------------------------------
                           B   658    
00528A 00 00 00 00 00 00   B   659    time_data				blkb	7,0
005290 00 
                           B   660    
005291 00                  B   661    frozen					db 0
005292 01                  B   662    first_run				db 1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 206


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
005293 01                  B   663    devices_connected		db 1					                           B   664    
                           B   665    ;----------------------------------------------
                           B   666    
005294 8C5A00              B   667    sys_ram_high			dw24 os_max_addr
005297 000080              B   668    vram_a_high				dw24 vram_a_addr
00529A 0000C0              B   669    vram_b_high				dw24 vram_b_addr
                           B   670    
                           B   671    ;----------------------------------------------
                           B   672    
00529D 00                  B   673    store_a1				db 0		
00529E 000000              B   674    store_bc1				dw24 0
0052A1 000000              B   675    store_de1				dw24 0
0052A4 000000              B   676    store_hl1				dw24 0
0052A7 00                  B   677    store_a2				db 0
0052A8 000000              B   678    store_bc2				dw24 0
0052AB 000000              B   679    store_de2				dw24 0
0052AE 000000              B   680    store_hl2				dw24 0
0052B1 000000              B   681    store_ix				dw24 0
0052B4 000000              B   682    store_iy				dw24 0
0052B7 000000              B   683    store_pc				dw24 0		;only relev
0052BA 000000              B   684    store_spl				dw24 0
0052BD 0000                B   685    store_sps				dw 0
0052BF 00                  B   686    store_mbase				db 0
0052C0 00                  B   687    store_f	 				db 0
0052C1 00                  B   688    store_adl				db 0
                           B   689    
                           B   690    ;----------------------------------------------
0052C2                     B   691    os_variables
                           B   692    ;----------------------------------------------
                           B   693    
0052C2 00                  B   694    store_registers			db 0
0052C3 000000              B   695    com_start_addr			dw24 0
                           B   696    
0052C6 00 00 00 00 00 00   B   697    temp_string				blkb max_buffer_chars+2
0052CC 00 00 00 00 00 00 
0052D2 00 00 00 00 00 00 
0052D8 00 00 00 00 00 00 
0052DE 00 00 00 00 00 00 
0052E4 00 00 00 00 00 00 
0052EA 00 00 00 00 00 00 
0052F0 00 00 00 00 00 00 
0052F6 00 00 00 00 00 00 
0052FC 00 00 00 00 00 00 
005302 00 00 00 00 00 00 
005308 00 00 00 00 00 00 
00530E 00 00 00 00 00 00 
005314 00 00 00 00 
005318 00 00 00 00 00 00   B   698    script_fn				blkb 13,0
00531E 00 00 00 00 00 00 
005324 00 
                           B   699    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 207


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
005325 00                  B   700    sector_lba0				db 0			; keep 
005326 00                  B   701    sector_lba1				db 0
005327 00                  B   702    sector_lba2				db 0
005328 00                  B   703    sector_lba3				db 0
                           B   704    
                           B   705    ;----------------------------------------------
                           B   706    
005329 000000              B   707    cursor_pos				dw24 0			; 3rd b
                           B   708    
       00005329            B   709    cursor_y 				equ cursor_pos
       0000532A            B   710    cursor_x 				equ cursor_pos+1
                           B   711    						
00532C 00                  B   712    cursorflashtimer		db 0
00532D 00                  B   713    cursor_status			db 0
00532E 00                  B   714    os_linecount			db 0
                           B   715    		
00532F 000000              B   716    mem_mon_addr			dw24 0
005332 000000              B   717    cmdop_start_address		dw24 0
005335 000000              B   718    cmdop_end_address		dw24 0
005338 000000              B   719    copy_dest_address		dw24 0
00533B 000000              B   720    hex_address				dw24 0
                           B   721    
00533E 000000              B   722    find_hexstringascii 	dw24 0
005341 000000              B   723    xrr_temp				dw24 0
005344 00                  B   724    temphex					db 0
005345 00                  B   725    fillbyte				db 0 
005346 00                  B   726    ui_im_cache				db 0
                           B   727    
005347 00 00 00 00 00 00   B   728    commandstring			blkb max_buffer_chars+2
00534D 00 00 00 00 00 00 
005353 00 00 00 00 00 00 
005359 00 00 00 00 00 00 
00535F 00 00 00 00 00 00 
005365 00 00 00 00 00 00 
00536B 00 00 00 00 00 00 
005371 00 00 00 00 00 00 
005377 00 00 00 00 00 00 
00537D 00 00 00 00 00 00 
005383 00 00 00 00 00 00 
005389 00 00 00 00 00 00 
00538F 00 00 00 00 00 00 
005395 00 00 00 00 
005399 00 00 00 00 00 00   B   729    output_line				blkb max_buffer_chars+2
00539F 00 00 00 00 00 00 
0053A5 00 00 00 00 00 00 
0053AB 00 00 00 00 00 00 
0053B1 00 00 00 00 00 00 
0053B7 00 00 00 00 00 00 
0053BD 00 00 00 00 00 00 
0053C3 00 00 00 00 00 00 
0053C9 00 00 00 00 00 00 
0053CF 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 208


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
0053D5 00 00 00 00 00 00 
0053DB 00 00 00 00 00 00 
0053E1 00 00 00 00 00 00 
0053E7 00 00 00 00 
                           B   730    				
0053EB 000000              B   731    os_args_loc				dw24 0
0053EE 000000              B   732    os_args_pos_cache		dw24 0
                           B   733    
0053F1 000000              B   734    os_dir_block_cache  	dw24 0
0053F4 000000              B   735    os_extcmd_jmp_addr		dw24 0
                           B   736    
0053F7 00                  B   737    in_script_flag			db 0
0053F8 000000              B   738    script_dir				dw24 0
0053FB 00 00 00 00 00 00   B   739    script_buffer			blkb max_buffer_chars+2
005401 00 00 00 00 00 00 
005407 00 00 00 00 00 00 
00540D 00 00 00 00 00 00 
005413 00 00 00 00 00 00 
005419 00 00 00 00 00 00 
00541F 00 00 00 00 00 00 
005425 00 00 00 00 00 00 
00542B 00 00 00 00 00 00 
005431 00 00 00 00 00 00 
005437 00 00 00 00 00 00 
00543D 00 00 00 00 00 00 
005443 00 00 00 00 00 00 
005449 00 00 00 00 
00544D 000000              B   740    script_file_offset		dw24 0
005450 000000              B   741    script_buffer_offset	dw24 0
005453 000000              B   742    script_orig_dir			dw24 0
                           B   743    
005456 0000                B   744    char_to_print			db 0,0	; zero terminat
                           B   745    
                           B   746    ;----------------------------------------------
                           B   747    ; Keyboard buffer and registers
                           B   748    ;----------------------------------------------
                           B   749    
005458 00 00 00 00 00 00   B   750    scancode_buffer			blkb 32,0
00545E 00 00 00 00 00 00 
005464 00 00 00 00 00 00 
00546A 00 00 00 00 00 00 
005470 00 00 00 00 00 00 
005476 00 00 
                           B   751    
005478 00                  B   752    key_buf_wr_idx			db 0
005479 00                  B   753    key_buf_rd_idx			db 0
00547A 00                  B   754    key_release_mode		db 0		
00547B 00                  B   755    not_currently_used		db 0
00547C 00                  B   756    key_mod_flags			db 0
00547D 00                  B   757    insert_mode				db 0
00547E 00                  B   758    current_scancode		db 0
00547F 00                  B   759    current_asciicode		db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 209


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_data.asm
                           B   760    
                           B   761    ;----------------------------------------------
                           B   762    ; Mouse related registers
                           B   763    ;----------------------------------------------
                           B   764    
005480 00                  B   765    mouse_id				db 0
005481 00                  B   766    mouse_packet_size		db 0
                           B   767    
005482 00 00 00 00         B   768    mouse_packet			blkb 4,0			; t
005486 00                  B   769    mouse_packet_index		db 0				;
005487 00                  B   770    mouse_buttons			db 0				;
005488 000000              B   771    mouse_disp_x			dw24 0				; c
00548B 000000              B   772    mouse_disp_y			dw24 0				; c
00548E 00                  B   773    mouse_wheel				db 0				; m
00548F 00                  B   774    mouse_updated			db 0
                           B   775    
005490 000000              B   776    mouse_window_size_x		dw24 0				; t
005493 000000              B   777    mouse_window_size_y		dw24 0
005496 000000              B   778    mouse_abs_x				dw24 0
005499 000000              B   779    mouse_abs_y				dw24 0
00549C 000000              B   780    mouse_disp_x_old		dw24 0
00549F 000000              B   781    mouse_disp_y_old		dw24 0
0054A2 000000              B   782    mouse_disp_x_buffer		dw24 0
0054A5 000000              B   783    mouse_disp_y_buffer		dw24 0
0054A8 00                  B   784    mouse_new_window		db 0
                           B   785    
0054A9 00                  B   786    mouse_sample_rate		db 0
0054AA 00                  B   787    mouse_resolution		db 0
0054AB 00                  B   788    mouse_scaling			db 0
                           B   789    
                           B   790    ;==============================================
0054AC 00                  B   791    last_os_var				db 0 
                           B   792    ;==============================================
                           B   793    
       00005329            B   794    first_os_var			equ cursor_y
                           B   795    
                           B   796    ;==============================================
                           B   797    
                           B   798    
                           B     0    	include		'prose_font_packed.asm'
0054AD                     B     1    packed_font_start:
0054AD 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
0054B5 00181800 EEEE6601 
0054BD 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
0054C5 6C00187E E07C0EFC 
0054CD 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
0054D5 C60078EC EC78EDEE 
0054DD 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
0054E5 18300160 03301800 
0054ED 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
0054F5 105438FE 38541000 
0054FD 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 210


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_font_packed.asm
005505 07383870 0100037E 
00550D 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
005515 0E1C3870 E0007CE6 
00551D EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
005525 0138047C 007CEE0E 
00552D 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
005535 0C0ECE7C 001E3E76 
00553D E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
005545 010E03FC 007EE0FC 
00554D 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
005555 18013803 007CE6E6 
00555D 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
005565 037E0E7C 01000318 
00556D 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
005575 30003030 600E1C38 
00557D 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
005585 007E0100 0370381C 
00558D 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
005595 3C380038 007CE601 
00559D EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
0055A5 FE01E603 00FCE6E6 
0055AD FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
0055B5 E003E67C 00FC01E6 
0055BD 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
0055C5 E0FE00FE E0E0F801 
0055CD E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
0055D5 E67C0001 E603FE01 
0055DD E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
0055E5 007E011C 04DC7800 
0055ED E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
0055F5 01E006FE 00C6EEFE 
0055FD D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
005605 FEEEE6E6 007C01E6 
00560D 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
005615 E0E0007C 01E603EA 
00561D EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
005625 E6E6007C EEE07C0E 
00562D EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
005635 01E6067C 0001E605 
00563D 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
005645 6C00E6E6 6C3874E6 
00564D E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
005655 00FE0E1C 3870E0FE 
00565D 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
005665 E070381C 0E060078 
00566D 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
005675 C601000B FE381C01 
00567D 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
005685 00E0E0FC E6E6FC01 
00568D 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
005695 0006067E E6E67E01 
00569D 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 211


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_font_packed.asm
0056A5 003E70FC 01700301 
0056AD 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
0056B5 00E0E0FC 01E60300 
0056BD 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
0056C5 001C0001 1C047800 
0056CD E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
0056D5 78013804 7C010003 
0056DD ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
0056E5 FC01E604 0100037C 
0056ED 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
0056F5 E6E6FCE0 E000007E 
0056FD E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
005705 E601E003 0100037E 
00570D F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
005715 0138031E 01000301 
00571D E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
005725 036C3801 0003E2EA 
00572D FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
005735 387CE601 000301E6 
00573D 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
005745 3870FE00 3C303060 
00574D 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
005755 7818180C 18187800 
00575D 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
005765 070100FF 01001A1C 
00576D 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
005775 297CC6BA A2BAC67C 
00577D 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
005785 FF0100FF 01009C 
00578C                     B    48    packed_font_end:
                           A  2938    
00578C 00 00 00 00 00 00   A  2939    sector_buffer	blkb 512,0
005792 00 00 00 00 00 00 
005798 00 00 00 00 00 00 
00579E 00 00 00 00 00 00 
0057A4 00 00 00 00 00 00 
0057AA 00 00 00 00 00 00 
0057B0 00 00 00 00 00 00 
0057B6 00 00 00 00 00 00 
0057BC 00 00 00 00 00 00 
0057C2 00 00 00 00 00 00 
0057C8 00 00 00 00 00 00 
0057CE 00 00 00 00 00 00 
0057D4 00 00 00 00 00 00 
0057DA 00 00 00 00 00 00 
0057E0 00 00 00 00 00 00 
0057E6 00 00 00 00 00 00 
0057EC 00 00 00 00 00 00 
0057F2 00 00 00 00 00 00 
0057F8 00 00 00 00 00 00 
0057FE 00 00 00 00 00 00 
005804 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 212


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
00580A 00 00 00 00 00 00 
005810 00 00 00 00 00 00 
005816 00 00 00 00 00 00 
00581C 00 00 00 00 00 00 
005822 00 00 00 00 00 00 
005828 00 00 00 00 00 00 
00582E 00 00 00 00 00 00 
005834 00 00 00 00 00 00 
00583A 00 00 00 00 00 00 
005840 00 00 00 00 00 00 
005846 00 00 00 00 00 00 
00584C 00 00 00 00 00 00 
005852 00 00 00 00 00 00 
005858 00 00 00 00 00 00 
00585E 00 00 00 00 00 00 
005864 00 00 00 00 00 00 
00586A 00 00 00 00 00 00 
005870 00 00 00 00 00 00 
005876 00 00 00 00 00 00 
00587C 00 00 00 00 00 00 
005882 00 00 00 00 00 00 
005888 00 00 00 00 00 00 
00588E 00 00 00 00 00 00 
005894 00 00 00 00 00 00 
00589A 00 00 00 00 00 00 
0058A0 00 00 00 00 00 00 
0058A6 00 00 00 00 00 00 
0058AC 00 00 00 00 00 00 
0058B2 00 00 00 00 00 00 
0058B8 00 00 00 00 00 00 
0058BE 00 00 00 00 00 00 
0058C4 00 00 00 00 00 00 
0058CA 00 00 00 00 00 00 
0058D0 00 00 00 00 00 00 
0058D6 00 00 00 00 00 00 
0058DC 00 00 00 00 00 00 
0058E2 00 00 00 00 00 00 
0058E8 00 00 00 00 00 00 
0058EE 00 00 00 00 00 00 
0058F4 00 00 00 00 00 00 
0058FA 00 00 00 00 00 00 
005900 00 00 00 00 00 00 
005906 00 00 00 00 00 00 
00590C 00 00 00 00 00 00 
005912 00 00 00 00 00 00 
005918 00 00 00 00 00 00 
00591E 00 00 00 00 00 00 
005924 00 00 00 00 00 00 
00592A 00 00 00 00 00 00 
005930 00 00 00 00 00 00 
005936 00 00 00 00 00 00 
00593C 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 213


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
005942 00 00 00 00 00 00 
005948 00 00 00 00 00 00 
00594E 00 00 00 00 00 00 
005954 00 00 00 00 00 00 
00595A 00 00 00 00 00 00 
005960 00 00 00 00 00 00 
005966 00 00 00 00 00 00 
00596C 00 00 00 00 00 00 
005972 00 00 00 00 00 00 
005978 00 00 00 00 00 00 
00597E 00 00 00 00 00 00 
005984 00 00 00 00 00 00 
00598A 00 00 
                           A  2940    
00598C 00 00 00 00 00 00   A  2941    scratch_pad		blkb 256,0
005992 00 00 00 00 00 00 
005998 00 00 00 00 00 00 
00599E 00 00 00 00 00 00 
0059A4 00 00 00 00 00 00 
0059AA 00 00 00 00 00 00 
0059B0 00 00 00 00 00 00 
0059B6 00 00 00 00 00 00 
0059BC 00 00 00 00 00 00 
0059C2 00 00 00 00 00 00 
0059C8 00 00 00 00 00 00 
0059CE 00 00 00 00 00 00 
0059D4 00 00 00 00 00 00 
0059DA 00 00 00 00 00 00 
0059E0 00 00 00 00 00 00 
0059E6 00 00 00 00 00 00 
0059EC 00 00 00 00 00 00 
0059F2 00 00 00 00 00 00 
0059F8 00 00 00 00 00 00 
0059FE 00 00 00 00 00 00 
005A04 00 00 00 00 00 00 
005A0A 00 00 00 00 00 00 
005A10 00 00 00 00 00 00 
005A16 00 00 00 00 00 00 
005A1C 00 00 00 00 00 00 
005A22 00 00 00 00 00 00 
005A28 00 00 00 00 00 00 
005A2E 00 00 00 00 00 00 
005A34 00 00 00 00 00 00 
005A3A 00 00 00 00 00 00 
005A40 00 00 00 00 00 00 
005A46 00 00 00 00 00 00 
005A4C 00 00 00 00 00 00 
005A52 00 00 00 00 00 00 
005A58 00 00 00 00 00 00 
005A5E 00 00 00 00 00 00 
005A64 00 00 00 00 00 00 
005A6A 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Jun-11     20:09:48     page: 214


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSE\src\prose_main.asm
005A70 00 00 00 00 00 00 
005A76 00 00 00 00 00 00 
005A7C 00 00 00 00 00 00 
005A82 00 00 00 00 00 00 
005A88 00 00 00 00 
                           A  2942    
                           A  2943    ;==============================================
                           A  2944    	
005A8C 00                  A  2945    os_max_addr		db 0							                           A  2946    	
                           A  2947    				end		
                           A  2948    ;==============================================
                           A  2949    
                           A  2950    		


Errors: 0
Warnings: 0
Lines Assembled: 10709
