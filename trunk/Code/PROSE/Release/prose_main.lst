Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    49    irq_line_hi				equ hw_video_settings+0
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location		equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 	equ os_location + 14h
       00000A20            B     7    prose_kernal 	equ os_location + 20h
                           B     8    
                           B     9    ;----------------------------------------------
                           A    12    	
                           A    13    ;----------------------------------------------
                           A    14    
       00000037            A    15    prose_version			equ 37h
       00000107            A    16    amoeba_version_required	equ 107h
                           A    17    
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    35    			
000A10 C3 4E 0A 00         A    36    				jp os_first_run					000A14 C3 E4 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
                           A    42    
                           A    43    ; External apps can call kernal routines by doi
                           A    44    ; Set A to kernal routine number required (see 
                           A    45    ; (this routine is always located at os_locatio
                           A    46    
000A20 D9                  A    47    				exx
000A21 DD22 8B 61 00       A    48    				ld (kernal_ix_cache),ix
000A26 DD21 A9 55 00       A    49    				ld ix,kernal_table				000A2B 11030000            A    50    				ld de,3
000A2F 57                  A    51    				ld d,a
000A30 ED5C                A    52    				mlt de
000A32 DD19                A    53    				add ix,de						000A34 DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A37 E3                  A    56    				ex (sp),hl
000A38 7D                  A    57    				ld a,l							000A39 E601                A    58    				and 1							000A3B E3                  A    59    				ex (sp),hl
000A3C D9                  A    60    				exx
000A3D FDE5                A    61    				push iy
000A3F CD 4C 0A 00         A    62    				call kr_jump					000A43 FDE1                A    63    				pop iy							000A45 DD2A 8B 61 00       A    64    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    65    				ret.l							                           A    66    				
000A4C DDE9                A    67    kr_jump			jp (ix)							                           A    68    						
                           A    69    ;----------------------------------------------
                           A    70    
                           A    71    ; *******************
                           A    72    ; *   START UP OS   *
                           A    73    ; *******************
                           A    74    
000A4E                     A    75    os_first_run
                           A    76    	
000A4E B7                  A    77    				or a							000A4F 20 05               A    78    				jr nz,os_cold_start		
000A51 78                  A    79    				ld a,b
000A52 32 19 60 00         A    80    				ld (boot_drive),a				                           A    81    
000A56                     A    82    os_cold_start
000A56 ED7D                A    83    				stmix							000A58 F3                  A    84    				di								000A59 ED5E                A    85    				im 2							000A5B AF                  A    86    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A5C ED6D                A    87    				ld MB,a							000A5E 4031FFFF            A    88    				ld.sis sp,0ffffh				000A62 31FFFF07            A    89    				ld sp,sys_mem_top				                           A    90    
000A66 CD 2C 3C 00         A    91    				call disable_irqs
000A6A CD C1 3D 00         A    92    				call disable_all_nmis
                           A    93    				
000A6E 3A 58 61 00         A    94    				ld a,(first_run)				000A72 B7                  A    95    				or a
000A73 28 11               A    96    				jr z,dont_resetkb
000A75 CD 64 41 00         A    97    				call init_keyboard
000A79 28 06               A    98    				jr z,kb_ok
000A7B 21 59 61 00         A    99    				ld hl,devices_connected
000A7F CB86                A   100    				res 0,(hl)
000A81 AF                  A   101    kb_ok			xor a
000A82 32 58 61 00         A   102    				ld (first_run),a
000A86                     A   103    dont_resetkb
                           A   104    				
000A86 21 63 64 00         A   105    				ld hl,packed_font_start
000A8A 11000080            A   106    				ld de,vram_a_addr
000A8E 01 E2 02 00         A   107    				ld bc,packed_font_end-packed_fo
000A92 CD 0E 16 00         A   108    				call unpack_rle
000A96 CD CA 35 00         A   109    				call convert_font
                           A   110    
000A9A CD 1B 37 00         A   111    				call test_amoeba_vers
                           A   112    				
000A9E 21 8B 61 00         A   113    				ld hl,os_variables				000AA2 01 CA 01 00         A   114    				ld bc,last_os_var-os_variables
000AA6 AF                  A   115    				xor a
000AA7 CD C3 15 00         A   116    				call os_bchl_memfill
                           A   117    	
000AAB CD A3 40 00         A   118    				call hwsc_default_hw_settings
000AAF CD F8 43 00         A   119    				call hwsc_disable_audio
                           A   120    				
000AB3 3A 91 5F 00         A   121    				ld a,(video_mode)
000AB7 CD 9C 15 00         A   122    				call os_set_vmode				                           A   123    				
000ABB 21 96 56 00         A   124    				ld hl,welcome_message			000ABF CD 57 0F 00         A   125    				call os_print_string
                           A   126    				
000AC3 CD 0B 37 00         A   127    				call os_get_mem_high			000AC7 EB                  A   128    				ex de,hl
000AC8 CD 37 13 00         A   129    				call os_show_hex_address
                           A   130    
000ACC CD FF 13 00         A   131    				call os_new_line
000AD0 CD FF 13 00         A   132    				call os_new_line
000AD4 CD 6F 32 00         A   133    				call os_cmd_vers				000AD8 CD 63 32 00         A   134    				call os_cmd_remount				                           A   135    
000ADC CD FF 13 00         A   136    				call os_new_line				                           A   137    
000AE0 CD 22 42 00         A   138    				call purge_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   139    				
000AE4 CD B1 3B 00         A   140    				call set_irq_vectors
000AE8 CD 09 3C 00         A   141    				call enable_os_irqs
000AEC FB                  A   142    				ei
                           A   143    				
000AED 21 59 61 00         A   144    				ld hl,devices_connected			000AF1 CB46                A   145    				bit 0,(hl)
000AF3 20 08               A   146    				jr nz,kb_present
000AF5 21 19 5C 00         A   147    				ld hl,no_keyboard_msg
000AF9 CD 36 14 00         A   148    				call os_show_packed_text
000AFD                     A   149    kb_present				
000AFD 21 E6 56 00         A   150    				ld hl,startup_script_fn
000B01 22 B7 62 00         A   151    				ld (os_args_loc),hl
000B05 CD A0 32 00         A   152    				call os_cmd_exec				                           A   153    									
000B09 3A 57 61 00         A   154    				ld a,(frozen)					000B0D B7                  A   155    				or a
000B0E 28 11               A   156    				jr z,os_main_loop
000B10 AF                  A   157    				xor a
000B11 32 57 61 00         A   158    				ld (frozen),a
000B15 21 3E 57 00         A   159    				ld hl,nmi_freeze_txt
000B19 CD 57 0F 00         A   160    				call os_print_string
000B1D CD BA 2D 00         A   161    				call os_cmd_r
                           A   162    				
                           A   163    
                           A   164    ;==============================================
                           A   165    
000B21 CD 93 40 00         A   166    os_main_loop	call hwsc_wait_vrt				                           A   167    
000B25 CD A8 0F 00         A   168    				call os_cursor_flash
                           A   169    
000B29 CD 99 44 00         A   170    				call os_get_key_press
000B2D 20 F2               A   171    				jr nz,os_main_loop
                           A   172    	
000B2F 32 2A 63 00         A   173    				ld (current_scancode),a
000B33 78                  A   174    				ld a,b
000B34 32 2B 63 00         A   175    				ld (current_asciicode),a		                           A   176    	
000B38 CD 72 3F 00         A   177    				call hwsc_remove_cursor
000B3C 3E18                A   178    				ld a,24							000B3E 32 F8 61 00         A   179    				ld (cursorflashtimer),a			000B42 AF                  A   180    				xor a
000B43 32 F9 61 00         A   181    				ld (cursor_status),a
                           A   182    				
000B47 3A 2A 63 00         A   183    				ld a,(current_scancode)			000B4B FE70                A   184    				cp 70h
000B4D 20 0C               A   185    				jr nz,os_notins
000B4F 3A B9 5F 00         A   186     				ld a,(overwrite_mode)
000B53 EE01                A   187    				xor 1
000B55 32 B9 5F 00         A   188    				ld (overwrite_mode),a
000B59 18 C6               A   189    				jr os_main_loop
                           A   190    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B5B FE6C                A   191    os_notins		cp 6ch
000B5D 20 07               A   192    				jr nz,not_homekey
000B5F AF                  A   193    				xor a
000B60 32 F6 61 00         A   194    				ld (cursor_x),a
000B64 18 BB               A   195    				jr os_main_loop
                           A   196    								
000B66 FE69                A   197    not_homekey		cp 69h
000B68 20 24               A   198    				jr nz,not_endkey
000B6A 3A F5 61 00         A   199    				ld a,(cursor_y)					000B6E 4F                  A   200    				ld c,a
000B6F 3A BF 5F 00         A   201    				ld a,(charmap_columns)
000B73 47                  A   202    				ld b,a
000B74 05                  A   203    fendloop		dec b
000B75 CD E0 3F 00         A   204    				call hwsc_get_charmap_addr_xy
000B79 7E                  A   205    				ld a,(hl)
000B7A FE20                A   206    				cp 20h
000B7C 28 F6               A   207    				jr z,fendloop
000B7E 04                  A   208    				inc b
000B7F 3A BF 5F 00         A   209    				ld a,(charmap_columns)
000B83 B8                  A   210    				cp b
000B84 20 01               A   211    				jr nz,endxposok
000B86 05                  A   212    				dec b
000B87 78                  A   213    endxposok		ld a,b
000B88 32 F6 61 00         A   214    				ld (cursor_x),a
000B8C 18 93               A   215    				jr os_main_loop
                           A   216    
000B8E 21 F6 61 00         A   217    not_endkey		ld hl,cursor_x					000B92 FE6B                A   218    				cp 06bh			
000B94 20 10               A   219    				jr nz,os_ntlft
000B96 35                  A   220    				dec (hl)
000B97 7E                  A   221    				ld a,(hl)
000B98 FEFF                A   222    				cp 0ffh	
000B9A 20 85               A   223    				jr nz,os_main_loop
000B9C 3A BF 5F 00         A   224    				ld a,(charmap_columns)
000BA0 3D                  A   225    				dec a
000BA1 77                  A   226    				ld (hl),a						000BA2 C3 21 0B 00         A   227    				jr os_main_loop
                           A   228    
000BA6 FE74                A   229    os_ntlft		cp 074h							000BA8 20 10               A   230    				jr nz,os_ntrig
000BAA 34                  A   231    				inc (hl)
000BAB 3A BF 5F 00         A   232    				ld a,(charmap_columns)
000BAF BE                  A   233    				cp (hl)
000BB0 C2 21 0B 00         A   234    				jr nz,os_main_loop
000BB4 3600                A   235    				ld (hl),0						000BB6 C3 21 0B 00         A   236    				jr os_main_loop
                           A   237    
000BBA 21 F5 61 00         A   238    os_ntrig		ld hl,cursor_y
000BBE FE75                A   239    				cp 075h							000BC0 20 0D               A   240    				jr nz,os_ntup
000BC2 35                  A   241    				dec (hl)
000BC3 CB7E                A   242    				bit 7,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BC5 CA 21 0B 00         A   243    				jr z,os_main_loop
000BC9 3600                A   244    				ld (hl),0						000BCB C3 21 0B 00         A   245    				jr os_main_loop
                           A   246    
000BCF FE72                A   247    os_ntup			cp 072h
000BD1 20 14               A   248    				jr nz,os_ntdwn					000BD3 34                  A   249    				inc (hl)
000BD4 3A BC 5F 00         A   250    				ld a,(charmap_rows)
000BD8 BE                  A   251    				cp (hl)
000BD9 C2 21 0B 00         A   252    				jr nz,os_main_loop
000BDD 3D                  A   253    				dec a
000BDE 77                  A   254    				ld (hl),a						000BDF CD FE 3E 00         A   255    				call hwsc_scroll_up
000BE3 C3 21 0B 00         A   256    				jr os_main_loop
                           A   257    
000BE7 FE71                A   258    os_ntdwn		cp 071h							000BE9 20 08               A   259    				jr nz,os_nodel		
000BEB 3A F6 61 00         A   260    				ld a,(cursor_x)					000BEF 47                  A   261    				ld b,a
000BF0 04                  A   262    				inc b
000BF1 18 13               A   263    				jr os_chrbk
                           A   264    
000BF3 FE66                A   265    os_nodel		cp 066h							000BF5 20 17               A   266    				jr nz,os_nbksp
000BF7 3A F6 61 00         A   267    				ld a,(cursor_x)					000BFB B7                  A   268    				or a							000BFC CA 21 0B 00         A   269    				jp z,os_main_loop
000C00 47                  A   270    				ld b,a
000C01 3D                  A   271    				dec a
000C02 32 F6 61 00         A   272    				ld (cursor_x),a					000C06 CD F8 3F 00         A   273    os_chrbk		call hwsc_chars_left			000C0A C3 21 0B 00         A   274    				jp os_main_loop
                           A   275    
000C0E FE5A                A   276    os_nbksp		cp 05ah							000C10 CA 58 0C 00         A   277    				jp z,os_enter_pressed
                           A   278    	
000C14 3A 2B 63 00         A   279    				ld a,(current_asciicode)		000C18 FE20                A   280    				cp 32							000C1A 38 38               A   281    				jr c,os_nvdun					                           A   282    
000C1C FE7B                A   283    				cp 07bh							000C1E 30 12               A   284    				jr nc,os_gtcha					000C20 FE61                A   285    				cp 061h
000C22 38 04               A   286    				jr c,os_ntupc
000C24 D620                A   287    				sub 020h
000C26 18 0A               A   288    				jr os_gtcha
000C28 FE5B                A   289    os_ntupc		cp 05bh
000C2A 30 06               A   290    				jr nc,os_gtcha
000C2C FE41                A   291    				cp 041h
000C2E 38 02               A   292    				jr c,os_gtcha
000C30 C620                A   293    				add a,020h
000C32 57                  A   294    os_gtcha		ld d,a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C33 3A B9 5F 00         A   295    				ld a,(overwrite_mode)			000C37 B7                  A   296    				or a
000C38 CC 31 40 00         A   297    				call z,hwsc_chars_right
                           A   298    				
000C3C ED4B F5 61 00       A   299    os_schi			ld bc,(cursor_pos)				000C41 7A                  A   300    				ld a,d							000C42 CD 39 3F 00         A   301    				call hwsc_plot_char		
000C46 21 F6 61 00         A   302    				ld hl,cursor_x					000C4A 34                  A   303    				inc (hl)
000C4B 3A BF 5F 00         A   304    				ld a,(charmap_columns)
000C4F BE                  A   305    				cp (hl)							000C50 20 02               A   306    				jr nz,os_nvdun
000C52 3600                A   307    				ld (hl),0
                           A   308    
000C54 C3 21 0B 00         A   309    os_nvdun		jp os_main_loop
                           A   310    	
                           A   311    
                           A   312    ;----------------------------------------------
                           A   313    
000C58                     A   314    os_enter_pressed
                           A   315    	
000C58 CD 74 40 00         A   316    				call hwsc_charline_to_command_s
                           A   317    
000C5C AF                  A   318    				xor a
000C5D 32 F6 61 00         A   319    				ld (cursor_x),a					000C61 21 F5 61 00         A   320    				ld hl,cursor_y					000C65 34                  A   321    				inc (hl)
000C66 3A BC 5F 00         A   322    				ld a,(charmap_rows)
000C6A BE                  A   323    				cp (hl)
000C6B 20 06               A   324    				jr nz,os_esdok
000C6D 3D                  A   325    				dec a
000C6E 77                  A   326    				ld (hl),a
000C6F CD FE 3E 00         A   327    				call hwsc_scroll_up
                           A   328    
000C73 CD 7B 0C 00         A   329    os_esdok		call os_parse_cmd_chk_ps		                           A   330    
000C77 C3 21 0B 00         A   331    post_csb		jp os_main_loop
                           A   332    
                           A   333    	
                           A   334    ;----------------------------------------------
                           A   335    
                           A   336    
000C7B                     A   337    os_parse_cmd_chk_ps
                           A   338    
000C7B CD 8E 0C 00         A   339    				call os_parse_command_line
000C7F FEFE                A   340    				cp 0feh							000C81 C0                  A   341    				ret nz
000C82 01500000            A   342    				ld bc,max_buffer_chars			000C86 11 13 62 00         A   343    				ld de,commandstring				000C8A EDB0                A   344    				ldir
000C8C 18 ED               A   345    				jr os_parse_cmd_chk_ps
                           A   346    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   347    	
                           A   348    ;----------------------------------------------
                           A   349    	
000C8E                     A   350    os_parse_command_line
                           A   351    
000C8E 3E01                A   352    				ld a,1
000C90 32 8E 61 00         A   353    				ld (store_registers),a			                           A   354    
000C94 21 13 62 00         A   355    				ld hl,commandstring				000C98 0650                A   356    				ld b,max_buffer_chars			000C9A CD F5 0F 00         A   357    				call os_scan_for_non_space		000C9E B7                  A   358    				or a							000C9F C8                  A   359    				ret z
000CA0 11 7C 57 00         A   360    				ld de,dictionary-1				000CA4 D5                  A   361    				push de
000CA5 D1                  A   362    compcstr		pop de
000CA6 E5                  A   363    				push hl
000CA7 FDE1                A   364    				pop iy
000CA9 13                  A   365    notacmd			inc de
000CAA 1A                  A   366    				ld a,(de)
000CAB FE01                A   367    				cp 1							000CAD CA 51 0D 00         A   368    				jp z,os_no_kernal_command_found
000CB1 CB7F                A   369    				bit 7,a
000CB3 28 F4               A   370    				jr z,notacmd					000CB5 E67F                A   371    				and 07fh
000CB7 4F                  A   372    				ld c,a							000CB8 D5                  A   373    				push de
000CB9 13                  A   374    cmdnscan		inc de
000CBA FD7E00              A   375    				ld a,(iy)						000CBD CD 60 12 00         A   376    				call os_uppercasify
000CC1 47                  A   377    				ld b,a
000CC2 1A                  A   378    				ld a,(de)						000CC3 B8                  A   379    				cp b
000CC4 FD23                A   380    				inc iy
000CC6 28 F1               A   381    				jr z,cmdnscan					000CC8 1A                  A   382    nomatch			ld a,(de)						000CC9 B7                  A   383    				or a
000CCA 28 04               A   384    				jr z,posmatch					000CCC CB7F                A   385    				bit 7,a			
000CCE 28 D5               A   386    				jr z,compcstr					000CD0 FD7EFF              A   387    posmatch		ld a,(iy-1)						000CD3 FE20                A   388    				cp 32
000CD5 20 CE               A   389    				jr nz,compcstr					                           A   390    	
000CD7 D1                  A   391    				pop de				
000CD8 FDE5                A   392    				push iy							000CDA E1                  A   393    				pop hl
000CDB CD F5 0F 00         A   394    				call os_scan_for_non_space
000CDF 22 B7 62 00         A   395    				ld (os_args_loc),hl				                           A   396    	
000CE3 21 1B 5D 00         A   397    				ld hl,os_cmd_locs
000CE7 11030000            A   398    				ld de,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CEB 51                  A   399    				ld d,c
000CEC ED5C                A   400    				mlt de							000CEE 19                  A   401    				add hl,de
000CEF ED37                A   402    				ld ix,(hl)						                           A   403    
000CF1 2A B7 62 00         A   404    				ld hl,(os_args_loc)				000CF5 CD 2A 0F 00         A   405    				call os_run_command				                           A   406    
000CF9 B7                  A   407    				or a
000CFA C8                  A   408    				ret z							000CFB FE01                A   409    				cp 1
000CFD 20 17               A   410    				jr nz,show_erm
000CFF 78                  A   411    os_hwe1			ld a,b							000D00 21 80 5A 00         A   412    os_hwerr		ld hl,hex_byte_txt		
000D04 CD A2 10 00         A   413    				call hexbyte_to_ascii	
000D08 CD FF 13 00         A   414    				call os_new_line
000D0C 21 0C 5C 00         A   415    				ld hl,hw_err_msg
000D10 CD 36 14 00         A   416    				call os_show_packed_text
000D14 AF                  A   417    				xor a
000D15 C9                  A   418    				ret
                           A   419    
000D16 01000000            A   420    show_erm		ld bc,0							000D1A 4F                  A   421    				ld c,a
000D1B D680                A   422    				sub 080h						000D1D 38 11               A   423    				jr c,no_trans					000D1F 21 40 5E 00         A   424    				ld hl,kernal_error_code_transla
000D23 CB77                A   425    				bit 6,a							000D25 28 06               A   426    				jr z,not_fs_err					000D27 21 4E 5E 00         A   427    				ld hl,fs_error_code_translation
000D2B D640                A   428    				sub 040h
000D2D 4F                  A   429    not_fs_err		ld c,a
000D2E 09                  A   430    				add hl,bc
000D2F 4E                  A   431    				ld c,(hl)
000D30 0600                A   432    no_trans		ld b,0
000D32 21 81 5D 00         A   433    				ld hl,packed_msg_list
000D36 7E                  A   434    findmsg			ld a,(hl)
000D37 FEFF                A   435    				cp 0ffh
000D39 C8                  A   436    				ret z							000D3A 23                  A   437    				inc hl
000D3B B7                  A   438    				or a
000D3C 20 F8               A   439    				jr nz,findmsg					000D3E 04                  A   440    				inc b
000D3F 79                  A   441    				ld a,c							000D40 B8                  A   442    				cp b
000D41 20 F3               A   443    				jr nz,findmsg
000D43 CD FF 13 00         A   444    				call os_new_line
000D47 CD 36 14 00         A   445    				call os_show_packed_text
000D4B CD FF 13 00         A   446    				call os_new_line
000D4F AF                  A   447    				xor a
000D50 C9                  A   448    				ret
                           A   449    	
                           A   450    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D51                     A   451    os_no_kernal_command_found
                           A   452    
000D51 3E30                A   453    				ld a,030h						000D53 32 22 60 00         A   454    fvolcmd			ld (vol_txt+4),a				000D57 F5                  A   455    				push af			
000D58 11 1F 60 00         A   456    				ld de,vol_txt+1		
000D5C 0605                A   457    				ld b,5			
000D5E CD 26 12 00         A   458    				call os_compare_strings	
000D62 28 08               A   459    				jr z,gotvolcmd		
000D64 F1                  A   460    				pop af				
000D65 3C                  A   461    				inc a			
000D66 FE38                A   462    				cp 030h+max_volumes		
000D68 20 E9               A   463    				jr nz,fvolcmd		
000D6A 18 0B               A   464    				jr novolcmd		
000D6C F1                  A   465    gotvolcmd		pop af
000D6D D630                A   466    				sub 030h
000D6F CD FD 1A 00         A   467    				call os_change_volume
000D73 C3 15 0F 00         A   468    				jp extcmderf					                           A   469    		
                           A   470    
                           A   471    
000D77 7E                  A   472    novolcmd		ld a,(hl)						000D78 FE47                A   473    				cp 'G'							000D7A 20 2B               A   474    				jr nz,not_g_cmd					000D7C 23                  A   475    				inc hl
000D7D 7E                  A   476    				ld a,(hl)
000D7E 2B                  A   477    				dec hl
000D7F FE20                A   478    				cp ' '
000D81 20 24               A   479    				jr nz,not_g_cmd
000D83 23                  A   480    				inc hl
000D84 CD F5 0F 00         A   481    				call os_scan_for_non_space
000D88 22 B7 62 00         A   482    				ld (os_args_loc),hl				000D8C B7                  A   483    				or a
000D8D 20 04               A   484    				jr nz,gotgargs
000D8F 3E1F                A   485    				ld a,01fh						000D91 18 83               A   486    				jr show_erm
000D93 CD E1 10 00         A   487    gotgargs		call ascii_to_hex_no_scan		000D97 B7                  A   488    				or a
000D98 C2 16 0D 00         A   489    				jr nz,show_erm
000D9C CD B0 3D 00         A   490    				call enable_button_nmi			000DA0 D5                  A   491    				push de
000DA1 DDE1                A   492    				pop ix			
000DA3 C3 2A 0F 00         A   493    				jp os_run_command				                           A   494    				
                           A   495    				
                           A   496    
000DA7 22 B7 62 00         A   497    not_g_cmd		ld (os_args_loc),hl				000DAB 22 BA 62 00         A   498    				ld (os_args_pos_cache),hl
000DAF CD 29 10 00         A   499    				call os_args_to_fn_append_ezp	                           A   500    	
000DB3 CD 34 0F 00         A   501    				call cache_dir_block			                           A   502    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DB7 CD AC 48 00         A   503    				call fs_check_disk_format		000DBB 38 38               A   504    				jr c,os_ndfxc					000DBD 20 36               A   505    				jr nz,os_ndfxc
                           A   506    	
000DBF CD 55 4A 00         A   507    				call fs_open_file_command		000DC3 DA 00 0D 00         A   508    				jp c,os_hwerr			 		000DC7 28 36               A   509    				jr z,os_gecmd					                           A   510    
000DC9 CD 26 4A 00         A   511    				call fs_goto_root_dir_command	000DCD 21 DD 56 00         A   512    				ld hl,os_dos_cmds_txt
000DD1 CD EE 52 00         A   513    				call fs_hl_to_filename
000DD5 CD FF 49 00         A   514    				call fs_change_dir_command		000DD9 DA 00 0D 00         A   515    				jp c,os_hwerr
000DDD 20 16               A   516    				jr nz,os_ndfxc					                           A   517    	
000DDF 2A BA 62 00         A   518    				ld hl,(os_args_pos_cache)		000DE3 22 B7 62 00         A   519    				ld (os_args_loc),hl
000DE7 CD 29 10 00         A   520    				call os_args_to_fn_append_ezp	000DEB CD 55 4A 00         A   521    				call fs_open_file_command		000DEF DA 00 0D 00         A   522    				jp c,os_hwerr
000DF3 28 0A               A   523    				jr z,os_gecmd
000DF5 CD 40 0F 00         A   524    os_ndfxc		call restore_dir_block			000DF9 3E0B                A   525    				ld a,0bh						000DFB C3 16 0D 00         A   526    				jp show_erm
                           A   527    
000DFF 2A B7 62 00         A   528    os_gecmd		ld hl,(os_args_loc)				000E03 CD F5 0F 00         A   529    				call os_scan_for_non_space		000E07 22 B7 62 00         A   530    				ld (os_args_loc),hl
                           A   531    
000E0B 11100000            A   532    				ld de,16
000E0F CD 71 16 00         A   533    				call os_set_load_length			000E13 21 45 69 00         A   534    				ld hl,scratch_pad
000E17 22 7C 55 00         A   535    				ld (fs_ez80_address),hl
000E1B CD A8 4A 00         A   536    				call fs_read_data_command
000E1F DA 00 0D 00         A   537    				jp c,os_hwerr					000E23 C2 16 0D 00         A   538    				jp nz,show_erm					000E27 2A 47 69 00         A   539    				ld hl,(scratch_pad+2)
000E2B 1150524F            A   540    				ld de,04f5250h					000E2F AF                  A   541    				xor a	
000E30 ED52                A   542    				sbc hl,de
000E32 28 0A               A   543    				jr z,loc_header
000E34 CD 40 0F 00         A   544    				call restore_dir_block			000E38 3E1A                A   545    				ld a,01ah						000E3A C3 16 0D 00         A   546    				jp show_erm						                           A   547    				
000E3E 3A 54 69 00         A   548    loc_header		ld a,(scratch_pad+15)			000E42 32 8A 61 00         A   549    				ld (store_adl),a			
000E46 CD 55 4A 00         A   550    				call fs_open_file_command		000E4A DA 00 0D 00         A   551    				jp c,os_hwerr
000E4E 20 A5               A   552    				jr nz,os_ndfxc
000E50 2A 4A 69 00         A   553    				ld hl,(scratch_pad+5)			000E54 22 7C 55 00         A   554    				ld (fs_ez80_address),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E58 ED5B 5A 61 00       A   555    				ld de,(sysram_os_highest)
000E5D AF                  A   556    				xor a
000E5E E5                  A   557    				push hl
000E5F ED52                A   558    				sbc hl,de
000E61 E1                  A   559    				pop hl
000E62 30 0A               A   560    				jr nc,osmemok
000E64 CD 40 0F 00         A   561    				call restore_dir_block			000E68 3E26                A   562    				ld a,026h
000E6A C3 16 0D 00         A   563    				jp show_erm
                           A   564    
000E6E ED5B 50 69 00       A   565    osmemok			ld de,(scratch_pad+11)			000E73 7B                  A   566    				ld a,e
000E74 B2                  A   567    				or d
000E75 28 14               A   568    				jr z,noprov_spec				000E77 21370000            A   569    				ld hl,prose_version
000E7B AF                  A   570    				xor a
000E7C 40ED52              A   571    				sbc.sis hl,de					000E7F 30 0A               A   572    				jr nc,noprov_spec
000E81 CD 40 0F 00         A   573    				call restore_dir_block
000E85 3E1B                A   574    				ld a,01bh						000E87 C3 16 0D 00         A   575    				jp show_erm
                           A   576    				
000E8B CD E8 40 00         A   577    noprov_spec		call hwsc_get_version			000E8F 2A 52 69 00         A   578    				ld hl,(scratch_pad+13)			000E93 EB                  A   579    				ex de,hl						000E94 7B                  A   580    				ld a,e
000E95 B2                  A   581    				or d
000E96 28 10               A   582    				jr z,nohwv_spec					000E98 AF                  A   583    				xor a
000E99 40ED52              A   584    				sbc.sis hl,de					000E9C 30 0A               A   585    				jr nc,nohwv_spec
000E9E CD 40 0F 00         A   586    				call restore_dir_block
000EA2 3E2B                A   587    				ld a,02bh						000EA4 C3 16 0D 00         A   588    				jp show_erm
                           A   589    
000EA8 ED5B 4D 69 00       A   590    nohwv_spec		ld de,(scratch_pad+8)			000EAD 3A 4F 69 00         A   591    				ld a,(scratch_pad+10)			000EB1 B2                  A   592    				or d
000EB2 B3                  A   593    				or e
000EB3 28 04               A   594    				jr z,readcode					000EB5 CD 71 16 00         A   595    				call os_set_load_length			                           A   596    		
000EB9 2A 4A 69 00         A   597    readcode		ld hl,(scratch_pad+5)
000EBD 22 C0 62 00         A   598    				ld (os_extcmd_jmp_addr),hl		000EC1 CD A8 4A 00         A   599    				call fs_read_data_command
000EC5 F5                  A   600    				push af
000EC6 CD 40 0F 00         A   601    				call restore_dir_block			000ECA F1                  A   602    				pop af
000ECB DA 00 0D 00         A   603    				jp c,os_hwerr					000ECF C2 16 0D 00         A   604    				jp nz,show_erm					                           A   605    	
000ED3 CD B0 3D 00         A   606    				call enable_button_nmi			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000ED7 DD2A C0 62 00       A   607    				ld ix,(os_extcmd_jmp_addr)		000EDC 2A B7 62 00         A   608    				ld hl,(os_args_loc)				000EE0 C3 2A 0F 00         A   609    				jp os_run_command				                           A   610    
000EE4 F5                  A   611    extcmd_return	push af							000EE5 CD A3 40 00         A   612    				call hwsc_default_hw_settings	000EE9 3A 8E 61 00         A   613    				ld a,(store_registers)
000EED B7                  A   614    				or a
000EEE 28 06               A   615    				jr z,skp_strg
000EF0 F1                  A   616    				pop af
000EF1 CD 78 13 00         A   617    				call os_store_CPU_regs			000EF5 F5                  A   618    				push af
000EF6 F1                  A   619    skp_strg		pop af
                           A   620    
000EF7 F5                  A   621    cntuasr			push af
000EF8 C5                  A   622    				push bc							000EF9 21 45 69 00         A   623    				ld hl,scratch_pad				000EFD CD A2 10 00         A   624    				call hexbyte_to_ascii
000F01 3600                A   625    				ld (hl),0
000F03 11 45 69 00         A   626    				ld de,scratch_pad
000F07 21 56 57 00         A   627    				ld hl,error_txt
000F0B CD B0 1B 00         A   628    				call os_set_envar
000F0F CD BB 3D 00         A   629    				call disable_button_nmi			000F13 C1                  A   630    				pop bc
000F14 F1                  A   631    				pop af
000F15 B7                  A   632    extcmderf		or a							000F16 C8                  A   633    				ret z	
000F17 FE01                A   634    				cp 1							000F19 CA FF 0C 00         A   635    				jp z,os_hwe1					000F1D FEFF                A   636    				cp 0ffh							000F1F CA 56 0A 00         A   637    				jp z,os_cold_start
000F23 FEFE                A   638    				cp 0feh							000F25 C8                  A   639    				ret z
000F26 C3 16 0D 00         A   640    				jp show_erm						                           A   641    				
                           A   642    ;----------------------------------------------
                           A   643    
000F2A                     A   644    os_run_command									000F2A ED3906              A   645    				out0 (port_nmi_ack),a			000F2D DD22 8F 61 00       A   646    				ld (com_start_addr),ix			000F32 DDE9                A   647    				jp (ix)							                           A   648    
                           A   649    ;----------------------------------------------
                           A   650    
000F34                     A   651    cache_dir_block
                           A   652    
                           A   653    	
000F34 D5                  A   654    				push de
000F35 CD A1 1A 00         A   655    				call fs_get_dir_cluster	
000F39 ED53 BD 62 00       A   656    				ld (os_dir_block_cache),de
000F3E D1                  A   657    				pop de	
000F3F C9                  A   658    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   659    		
                           A   660    
000F40                     A   661    restore_dir_block
                           A   662    
000F40 D5                  A   663    				push de
000F41 ED5B BD 62 00       A   664    				ld de,(os_dir_block_cache)
000F46 CD AD 1A 00         A   665    				call fs_update_dir_cluster
000F4A D1                  A   666    				pop de
000F4B C9                  A   667    				ret
                           A   668    		
                           A   669    ;==============================================
                           A   670    ; Routines called by command line
                           A   671    ;==============================================
                           A   672    
                           A   673    ; Set:-
                           A   674    ; HL to address of string
                           A   675    ; c = y
                           A   676    ; b = x
                           A   677    
000F4C                     A   678    ext_print_string
                           A   679    
000F4C CC EA 15 00         A   680    				call z,mbase_hl
000F50 18 05               A   681    				jr os_print_string
                           A   682    
000F52                     A   683    os_print_string_cond
                           A   684    
000F52 CD 54 1A 00         A   685    				call test_quiet_mode
000F56 C0                  A   686    				ret nz
                           A   687    
000F57                     A   688    os_print_string
                           A   689    
000F57 D5                  A   690    				push de
000F58 C5                  A   691    				push bc
000F59 ED4B F5 61 00       A   692    				ld bc,(cursor_pos)				000F5E 7E                  A   693    prstr_lp		ld a,(hl)
000F5F 23                  A   694    				inc hl
000F60 B7                  A   695    				or a
000F61 20 09               A   696    				jr nz,prstr_ne
000F63 ED43 F5 61 00       A   697    				ld (cursor_pos),bc
000F68 C1                  A   698    				pop bc
000F69 D1                  A   699    				pop de
000F6A AF                  A   700    				xor a							000F6B C9                  A   701    				ret
                           A   702    
000F6C FE0D                A   703    prstr_ne		cp 13
000F6E 20 04               A   704    				jr nz,not_cr
000F70 0600                A   705    				ld b,0
000F72 18 EA               A   706    				jr prstr_lp
000F74 FE0A                A   707    not_cr			cp 10
000F76 28 12               A   708    				jr z,line_feed				
000F78 FE0B                A   709    				cp 11
000F7A 28 0C               A   710    				jr z,next_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F7C CD 39 3F 00         A   711    				call hwsc_plot_char
000F80 04                  A   712    				inc b
000F81 3A BF 5F 00         A   713    				ld a,(charmap_columns)
000F85 B8                  A   714    				cp b
000F86 20 D6               A   715    				jr nz,prstr_lp
000F88 0600                A   716    next_line		ld b,0
000F8A 0C                  A   717    line_feed		inc c
000F8B 3A BC 5F 00         A   718    				ld a,(charmap_rows)
000F8F B9                  A   719    				cp c
000F90 20 CC               A   720    				jr nz,prstr_lp
000F92 0D                  A   721    				dec c
000F93 CD FE 3E 00         A   722    				call hwsc_scroll_up
000F97 18 C5               A   723    				jr prstr_lp
                           A   724    
                           A   725    ;----------------------------------------------
                           A   726    
000F99 21 03 63 00         A   727    os_print_char	ld hl,char_to_print
000F9D 77                  A   728    				ld (hl),a
000F9E 18 B7               A   729    				jr os_print_string
                           A   730    
                           A   731    ;----------------------------------------------
                           A   732    
000FA0 F5                  A   733    home_cursor		push af
000FA1 AF                  A   734    				xor a
000FA2 32 F6 61 00         A   735    				ld (cursor_x),a
000FA6 F1                  A   736    				pop af
000FA7 C9                  A   737    				ret
                           A   738    				
                           A   739    ;----------------------------------------------
                           A   740    
000FA8                     A   741    os_cursor_flash
                           A   742    
000FA8 21 F8 61 00         A   743    				ld hl,cursorflashtimer
000FAC 34                  A   744    				inc (hl)
000FAD 7E                  A   745    				ld a,(hl)
000FAE FE19                A   746    				cp 25
000FB0 C0                  A   747    				ret nz
000FB1 3600                A   748    				ld (hl),0
000FB3 3A F9 61 00         A   749    				ld a,(cursor_status)
000FB7 EE01                A   750    				xor 1
000FB9 32 F9 61 00         A   751    				ld (cursor_status),a
000FBD 28 15               A   752    				jr z,no_cursor
000FBF 3E5F                A   753    				ld a,05fh
000FC1 21 B9 5F 00         A   754    				ld hl,overwrite_mode
000FC5 CB46                A   755    				bit 0,(hl)
000FC7 28 02               A   756    				jr z,cursor_selected
000FC9 3E7F                A   757    				ld a,07fh
                           A   758    				
000FCB CD DA 0F 00         A   759    cursor_selected	call os_set_cursor_image
000FCF CD 8C 3F 00         A   760    				call hwsc_draw_cursor			000FD3 C9                  A   761    				ret
                           A   762    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FD4 CD 72 3F 00         A   763    no_cursor		call hwsc_remove_cursor
000FD8 C9                  A   764    				ret
                           A   765    
                           A   766    
                           A   767    ;----------------------------------------------
                           A   768    
000FD9                     A   769    ext_set_cursor_image
                           A   770    
000FD9 7B                  A   771    				ld a,e
                           A   772    				
000FDA                     A   773    os_set_cursor_image
                           A   774    			
000FDA 32 BA 5F 00         A   775    				ld (cursor_image_char),a
000FDE BF                  A   776    				cp a
000FDF C9                  A   777    				ret
                           A   778    
                           A   779    ;----------------------------------------------
                           A   780    
000FE0                     A   781    os_next_arg
                           A   782    
000FE0 CD EC 0F 00         A   783    				call os_scan_for_space
000FE4 B7                  A   784    				or a
000FE5 C8                  A   785    				ret z
000FE6 CD F5 0F 00         A   786    				call os_scan_for_non_space
000FEA B7                  A   787    				or a
000FEB C9                  A   788    				ret
                           A   789    
                           A   790    
                           A   791    ;----------------------------------------------
                           A   792    	
                           A   793    
000FEC                     A   794    os_scan_for_space
                           A   795    
000FEC 7E                  A   796    os_sfspl 		ld a,(hl)						000FED B7                  A   797    				or a							000FEE C8                  A   798    				ret z
000FEF FE20                A   799    				cp ' '
000FF1 C8                  A   800    				ret z
000FF2 23                  A   801    				inc hl
000FF3 18 F7               A   802    				jr os_sfspl
                           A   803    	
                           A   804    
                           A   805    ;----------------------------------------------
                           A   806    	
                           A   807    
000FF5                     A   808    os_scan_for_non_space
                           A   809    
000FF5 2B                  A   810    				dec hl							000FF6 23                  A   811    os_nsplp		inc hl			
000FF7 7E                  A   812    				ld a,(hl)			
000FF8 B7                  A   813    				or a			
000FF9 C8                  A   814    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FFA FE20                A   815    				cp ' '
000FFC 28 F8               A   816    				jr z,os_nsplp
000FFE C9                  A   817    				ret
                           A   818    	
                           A   819    	
                           A   820    ;----------------------------------------------
                           A   821    
000FFF                     A   822    os_args_to_alt_filename
                           A   823    
000FFF CD 59 10 00         A   824    				call os_atfn_pre				001003 C8                  A   825    				ret z
001004 CD E8 52 00         A   826    				call fs_hl_to_alt_filename
001008 18 09               A   827    				jr os_atfrl
                           A   828    	
                           A   829    	
                           A   830    	
                           A   831    		
00100A                     A   832    os_args_to_filename
                           A   833    
00100A CD 59 10 00         A   834    				call os_atfn_pre				00100E C8                  A   835    				ret z
00100F CD EE 52 00         A   836    				call fs_hl_to_filename	
                           A   837    
001013 7E                  A   838    os_atfrl		ld a,(hl)						001014 B7                  A   839    				or a							001015 28 0B               A   840    				jr z,os_cfne
001017 FE20                A   841    				cp 32
001019 28 07               A   842    				jr z,os_cfne
00101B FE2F                A   843    				cp 02fh
00101D 28 03               A   844    				jr z,os_cfne
00101F 23                  A   845    				inc hl
001020 18 F1               A   846    				jr os_atfrl	
001022 22 B7 62 00         A   847    os_cfne			ld (os_args_loc),hl				001026 79                  A   848    				ld a,c			
001027 B7                  A   849    				or a							001028 C9                  A   850    				ret
                           A   851    
                           A   852    
                           A   853    
                           A   854    
001029                     A   855    os_args_to_fn_append_ezp
                           A   856    
                           A   857    	
001029 CD 59 10 00         A   858    				call os_atfn_pre				00102D C8                  A   859    				ret z
00102E 11 92 61 00         A   860    				ld de,temp_string
001032 7E                  A   861    ccmdtlp			ld a,(hl)						001033 B7                  A   862    				or a
001034 28 0D               A   863    				jr z,goteocmd
001036 FE20                A   864    				cp ' '
001038 28 09               A   865    				jr z,goteocmd
00103A FE2E                A   866    				cp '.'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00103C 28 05               A   867    				jr z,goteocmd
00103E 12                  A   868    				ld (de),a
00103F 13                  A   869    				inc de
001040 23                  A   870    				inc hl
001041 18 EF               A   871    				jr ccmdtlp
                           A   872    	
001043 E5                  A   873    goteocmd		push hl
001044 21 30 57 00         A   874    				ld hl,ezp_extension_txt
001048 01050000            A   875    				ld bc,5
00104C EDB0                A   876    				ldir 
00104E 21 92 61 00         A   877    				ld hl,temp_string
001052 CD EE 52 00         A   878    				call fs_hl_to_filename
001056 E1                  A   879    				pop hl
001057 18 BA               A   880    				jr os_atfrl
                           A   881    	
                           A   882    
                           A   883    
                           A   884    
001059                     A   885    os_atfn_pre
                           A   886    
001059 2A B7 62 00         A   887    				ld hl,(os_args_loc)				00105D CD F5 0F 00         A   888    				call os_scan_for_non_space
001061 B7                  A   889    				or a
001062 C8                  A   890    				ret z
001063 7E                  A   891    				ld a,(hl)
001064 FE2F                A   892    				cp 02fh							001066 20 01               A   893    				jr nz,notfsl1
001068 23                  A   894    				inc hl
001069 AF                  A   895    notfsl1			xor a
00106A 3C                  A   896    				inc a
00106B C9                  A   897    				ret
                           A   898    
                           A   899    
                           A   900    ;--------- Number <-> String functions --------
                           A   901    
                           A   902    
00106C                     A   903    os_clear_output_line
                           A   904    
00106C C5                  A   905    				push bc
00106D E5                  A   906    				push hl			
00106E 21 65 62 00         A   907    				ld hl,output_line
001072 01500000            A   908    				ld bc,max_buffer_chars
001076 3E20                A   909    				ld a,32
001078 CD C3 15 00         A   910    				call os_bchl_memfill
00107C E1                  A   911    				pop hl
00107D C1                  A   912    				pop bc
00107E C9                  A   913    				ret
                           A   914    	
                           A   915    	
                           A   916    	
00107F                     A   917    os_skip_leading_ascii_zeros
                           A   918    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00107F 7E                  A   919    slazlp			ld a,(hl)						001080 FE30                A   920    				cp '0'							001082 C0                  A   921    				ret nz
001083 23                  A   922    				inc hl
001084 10 F9               A   923    				djnz slazlp
001086 C9                  A   924    				ret
                           A   925    	
                           A   926    
                           A   927    
001087                     A   928    os_leading_ascii_zeros_to_spaces
                           A   929    
001087 E5                  A   930    				push hl
001088 7E                  A   931    clazlp			ld a,(hl)						001089 FE30                A   932    				cp '0'							00108B 20 05               A   933    				jr nz,claze	
00108D 3620                A   934    				ld (hl),' '
00108F 23                  A   935    				inc hl
001090 10 F6               A   936    				djnz clazlp
001092 E1                  A   937    claze			pop hl
001093 C9                  A   938    				ret
                           A   939    	
                           A   940    
                           A   941    
                           A   942    		
001094                     A   943    n_hexbytes_to_ascii
                           A   944    
001094 1A                  A   945    				ld a,(de)						001095 CD A2 10 00         A   946    				call hexbyte_to_ascii			001099 1B                  A   947    				dec de
00109A 10 F8               A   948    				djnz n_hexbytes_to_ascii
00109C C9                  A   949    				ret
                           A   950    			
                           A   951    			
                           A   952    
00109D                     A   953    ext_hexbyte_to_ascii
                           A   954    
00109D CC EA 15 00         A   955    				call z,mbase_hl
0010A1 7B                  A   956    				ld a,e
                           A   957    
0010A2                     A   958    hexbyte_to_ascii
                           A   959    
0010A2 C5                  A   960    				push bc
0010A3 47                  A   961    				ld b,a							0010A4 CB3F                A   962    				srl a							0010A6 CB3F                A   963    				srl a
0010A8 CB3F                A   964    				srl a
0010AA CB3F                A   965    				srl a
0010AC CD BE 10 00         A   966    				call hxdigconv
0010B0 77                  A   967    				ld (hl),a
0010B1 23                  A   968    				inc hl
0010B2 78                  A   969    				ld a,b
0010B3 E60F                A   970    				and 0fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010B5 CD BE 10 00         A   971    				call hxdigconv
0010B9 77                  A   972    				ld (hl),a
0010BA 23                  A   973    				inc hl
0010BB C1                  A   974    				pop bc
0010BC AF                  A   975    				xor a							0010BD C9                  A   976    				ret
                           A   977    				
0010BE C630                A   978    hxdigconv		add a,030h
0010C0 FE3A                A   979    				cp 03ah
0010C2 38 02               A   980    				jr c,hxdone
0010C4 C607                A   981    				add a,7
0010C6 C9                  A   982    hxdone			ret
                           A   983    
                           A   984    
                           A   985    
                           A   986    
0010C7                     A   987    hexword_to_ascii	
                           A   988    
0010C7 7A                  A   989    				ld a,d							0010C8 CD A2 10 00         A   990    				call hexbyte_to_ascii
0010CC 7B                  A   991    				ld a,e
0010CD CD A2 10 00         A   992    				call hexbyte_to_ascii
0010D1 C9                  A   993    				ret
                           A   994    	
                           A   995    
                           A   996    
                           A   997    
0010D2                     A   998    ext_ascii_to_hexword
                           A   999    		
0010D2 CC EA 15 00         A  1000    				call z,mbase_hl
                           A  1001    
0010D6                     A  1002    ascii_to_hexword
                           A  1003    	
0010D6 CD F5 0F 00         A  1004    				call os_scan_for_non_space		0010DA B7                  A  1005    				or a
0010DB 20 04               A  1006    				jr nz,ascii_to_hex_no_scan
0010DD 3E81                A  1007    				ld a,081h						0010DF B7                  A  1008    				or a
0010E0 C9                  A  1009    				ret	
                           A  1010    
                           A  1011    	
0010E1                     A  1012    ascii_to_hex_no_scan
                           A  1013    
0010E1 DDE5                A  1014    				push ix
0010E3 C5                  A  1015    				push bc
0010E4 DD210000 00         A  1016    				ld ix,0
0010E9 0606                A  1017    				ld b,6							0010EB CD 17 11 00         A  1018    athlp			call ascii_to_hex_digit
0010EF FEF0                A  1019    				cp 0f0h							0010F1 28 17               A  1020    				jr z,athend
0010F3 FED0                A  1021    				cp 0d0h
0010F5 28 13               A  1022    				jr z,athend						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010F7 FE10                A  1023    				cp 16
0010F9 30 17               A  1024    				jr nc,badhex					0010FB DD29                A  1025    				add ix,ix						0010FD DD29                A  1026    				add ix,ix
0010FF DD29                A  1027    				add ix,ix
001101 DD29                A  1028    				add ix,ix
001103 DDB5                A  1029    				or a,ixl
001105 DD6F                A  1030    				ld ixl,a
001107 23                  A  1031    				inc hl
001108 10 E1               A  1032    				djnz athlp
00110A DDE5                A  1033    athend			push ix
00110C D1                  A  1034    				pop de
00110D AF                  A  1035    				xor a
00110E C1                  A  1036    ath_quit		pop bc
00110F DDE1                A  1037    				pop ix							001111 C9                  A  1038    				ret
                           A  1039    		
001112 3E82                A  1040    badhex			ld a,82h						001114 B7                  A  1041    				or a
001115 18 F7               A  1042    				jr ath_quit
                           A  1043    				
                           A  1044    	
                           A  1045    		
001117                     A  1046    ascii_to_hex_digit
                           A  1047    
001117 7E                  A  1048    				ld a,(hl)						001118 FE61                A  1049    				cp 061h
00111A 38 02               A  1050    				jr c,hc_uppercase
00111C D620                A  1051    				sub 020h						00111E D63A                A  1052    hc_uppercase	sub 03ah						001120 38 02               A  1053    				jr c,zeronine
001122 C6F9                A  1054    				add a,0f9h
001124 C60A                A  1055    zeronine		add a,0ah
001126 C9                  A  1056    				ret
                           A  1057    
                           A  1058    
                           A  1059    ;--------- Text Input / Non-numeric string func
                           A  1060    
                           A  1061    ; Waits for user to enter a string of character
                           A  1062    ; Before calling, set:  HL = destination of str
                           A  1063    ;                        E = max number of char
                           A  1064    ; Returns:   A  = number of characters in enter
                           A  1065    
                           A  1066    
001127                     A  1067    ext_user_input
001127 CC EA 15 00         A  1068    				call z,mbase_hl
                           A  1069    				
00112B                     A  1070    os_user_input
00112B AF                  A  1071    				xor a
00112C 32 8C 5F 00         A  1072    				ld (ui_index),a
001130 22 8E 5F 00         A  1073    				ld (ui_string_addr),hl
001134 7B                  A  1074    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001135 32 8D 5F 00         A  1075    				ld (ui_maxchars),a
                           A  1076    				
001139 3A B9 5F 00         A  1077    				ld a,(overwrite_mode)
00113D 32 12 62 00         A  1078    				ld (ui_im_cache),a
001141 AF                  A  1079    				xor a
001142 32 B9 5F 00         A  1080    				ld (overwrite_mode),a			                           A  1081    				
001146 CD 8C 3F 00         A  1082    ui_loop			call hwsc_draw_cursor			00114A CD 3E 44 00         A  1083    				call os_wait_key_press			00114E 32 2A 63 00         A  1084    				ld (current_scancode),a
001152 78                  A  1085    				ld a,b
001153 32 2B 63 00         A  1086    				ld (current_asciicode),a		001157 CD 72 3F 00         A  1087    				call hwsc_remove_cursor
                           A  1088    	
00115B 3A 2A 63 00         A  1089    				ld a,(current_scancode)
00115F FE66                A  1090    				cp 066h							001161 20 1F               A  1091    				jr nz,os_nuibs
001163 3A 8C 5F 00         A  1092    				ld a,(ui_index)
001167 B7                  A  1093    				or a
001168 28 DC               A  1094    				jr z,ui_loop					00116A 21 F6 61 00         A  1095    				ld hl,cursor_x					00116E 35                  A  1096    				dec (hl)						00116F 46                  A  1097    os_uixok		ld b,(hl)		
001170 3A F5 61 00         A  1098    				ld a,(cursor_y)
001174 4F                  A  1099    				ld c,a
001175 3E20                A  1100    				ld a,32
001177 CD 39 3F 00         A  1101    				call hwsc_plot_char
00117B 21 8C 5F 00         A  1102    				ld hl,ui_index
00117F 35                  A  1103    				dec (hl)						001180 18 C4               A  1104    				jr ui_loop
                           A  1105    
001182 FE76                A  1106    os_nuibs		cp 076h							001184 28 6B               A  1107    				jr z,ui_aborted
001186 FE5A                A  1108    				cp 05ah							001188 28 46               A  1109    				jr z,ui_enter_pressed
                           A  1110    	
00118A 3A 8C 5F 00         A  1111    				ld a,(ui_index)					00118E 21 8D 5F 00         A  1112    				ld hl,ui_maxchars
001192 BE                  A  1113    				cp (hl)
001193 28 B1               A  1114    				jr z,ui_loop	
                           A  1115    
001195 3A 2B 63 00         A  1116    				ld a,(current_asciicode)		001199 FE20                A  1117    				cp 32							00119B 38 A9               A  1118    				jr c,ui_loop					                           A  1119    
00119D 57                  A  1120    ui_gtcha		ld d,a
00119E 2A 8E 5F 00         A  1121    				ld hl,(ui_string_addr)
0011A2 3A 8C 5F 00         A  1122    				ld a,(ui_index)
0011A6 01000000            A  1123    				ld bc,0
0011AA 4F                  A  1124    				ld c,a
0011AB 09                  A  1125    				add hl,bc
0011AC 72                  A  1126    				ld (hl),d						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011AD 3C                  A  1127    				inc a
0011AE 32 8C 5F 00         A  1128    				ld (ui_index),a					                           A  1129    				
0011B2 ED4B F5 61 00       A  1130    				ld bc,(cursor_y)				0011B7 7A                  A  1131    				ld a,d
0011B8 CD 39 3F 00         A  1132    				call hwsc_plot_char		
0011BC 21 F6 61 00         A  1133    				ld hl,cursor_x					0011C0 34                  A  1134    				inc (hl)
0011C1 3A BF 5F 00         A  1135    				ld a,(charmap_columns)			0011C5 BE                  A  1136    				cp (hl)
0011C6 C2 46 11 00         A  1137    				jp nz,ui_loop
0011CA 3600                A  1138    				ld (hl),0
0011CC C3 46 11 00         A  1139    				jp ui_loop
                           A  1140    
0011D0                     A  1141    ui_enter_pressed
                           A  1142    				
0011D0 3A 12 62 00         A  1143    				ld a,(ui_im_cache)				0011D4 32 B9 5F 00         A  1144    				ld (overwrite_mode),a
0011D8 3A 8C 5F 00         A  1145    				ld a,(ui_index)					0011DC B7                  A  1146    				or a
0011DD 20 04               A  1147    				jr nz,ui_data
0011DF 3E81                A  1148    				ld a,081h						0011E1 B7                  A  1149    				or a
0011E2 C9                  A  1150    				ret
0011E3 2A 8E 5F 00         A  1151    ui_data			ld hl,(ui_string_addr)
0011E7 11000000            A  1152    				ld de,0
0011EB 5F                  A  1153    				ld e,a
0011EC 19                  A  1154    				add hl,de
0011ED 3600                A  1155    				ld (hl),0						0011EF BF                  A  1156    				cp a							0011F0 C9                  A  1157    				ret
                           A  1158    
0011F1 3A 12 62 00         A  1159    ui_aborted		ld a,(ui_im_cache)				0011F5 32 B9 5F 00         A  1160    				ld (overwrite_mode),a
0011F9 3E80                A  1161    				ld a,080h						0011FB B7                  A  1162    				or a							0011FC C9                  A  1163    				ret
                           A  1164    		
                           A  1165    ;----------------------------------------------
                           A  1166    	
0011FD                     A  1167    os_count_lines
                           A  1168    
0011FD E5                  A  1169    				push hl							0011FE 0679                A  1170    				ld b,'y'						001200 21 FA 61 00         A  1171    				ld hl,os_linecount			
001204 34                  A  1172    				inc (hl)						001205 3A BC 5F 00         A  1173    				ld a,(charmap_rows)
001209 D604                A  1174    				sub 4
00120B BE                  A  1175    				cp (hl)
00120C 20 0E               A  1176    				jr nz,os_nntpo
00120E 3600                A  1177    				ld (hl),0
001210 21 35 57 00         A  1178    				ld hl,os_more_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001214 CD 57 0F 00         A  1179    				call os_print_string
001218 CD 3E 44 00         A  1180    				call os_wait_key_press	
00121C E1                  A  1181    os_nntpo		pop hl
00121D C9                  A  1182    				ret
                           A  1183    
                           A  1184    ;----------------------------------------------
                           A  1185    
00121E                     A  1186    ext_compare_strings
                           A  1187    	
00121E CC EA 15 00         A  1188    				call z,mbase_hl
001222 CC FB 15 00         A  1189    				call z,mbase_de
                           A  1190    				
001226                     A  1191    os_compare_strings
                           A  1192    
                           A  1193    ; both strings at HL/DE should be zero terminat
                           A  1194    ; compare will fail if string lengths are diffe
                           A  1195    ; unless count (B) is reached first
                           A  1196    ; Case is ignored
                           A  1197    ; Zero flag set on return if same
                           A  1198    
001226 E5                  A  1199    				push hl							001227 D5                  A  1200    				push de							001228 1A                  A  1201    ocslp			ld a,(de)						001229 B7                  A  1202    				or a
00122A 28 0C               A  1203    				jr z,ocsbt
00122C CD 69 12 00         A  1204    				call case_insensitive_compare	001230 20 0E               A  1205    				jr nz,ocs_diff
001232 13                  A  1206    				inc de
001233 23                  A  1207    				inc hl
001234 10 F2               A  1208    				djnz ocslp
001236 18 04               A  1209    				jr ocs_same
001238 1A                  A  1210    ocsbt			ld a,(de)						001239 B6                  A  1211    				or (hl)
00123A 20 04               A  1212    				jr nz,ocs_diff
00123C D1                  A  1213    ocs_same		pop de
00123D E1                  A  1214    				pop hl
00123E AF                  A  1215    				xor a							00123F C9                  A  1216    				ret
001240 D1                  A  1217    ocs_diff		pop de
001241 E1                  A  1218    				pop hl
001242 AF                  A  1219    				xor a							001243 3C                  A  1220    				inc a
001244 C9                  A  1221    				ret
                           A  1222    
                           A  1223    
                           A  1224    ;----------------------------------------------
                           A  1225    
001245                     A  1226    os_copy_ascii_run
                           A  1227    
                           A  1228    ;INPUT HL = source ($00 or $20 terminates)
                           A  1229    ;      DE = dest
                           A  1230    ;       b = max chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1231    
                           A  1232    ;OUTPUT HL/DE = end of runs
                           A  1233    ;           c = char count
                           A  1234    	
001245 0E00                A  1235    				ld c,0
001247 7E                  A  1236    cpyar_lp		ld a,(hl)
001248 B7                  A  1237    				or a
001249 C8                  A  1238    				ret z
00124A FE20                A  1239    				cp 32
00124C C8                  A  1240    				ret z
00124D 12                  A  1241    				ld (de),a
00124E 23                  A  1242    				inc hl
00124F 13                  A  1243    				inc de
001250 0C                  A  1244    				inc c
001251 10 F4               A  1245    				djnz cpyar_lp
001253 C9                  A  1246    				ret
                           A  1247    
                           A  1248    ;----------------------------------------------
                           A  1249    
001254                     A  1250    uppercasify_string
                           A  1251    
                           A  1252    ; Set HL to string location ($00 quits)
                           A  1253    ; Set B to max number of chars
                           A  1254    
001254 7E                  A  1255    				ld a,(hl)
001255 B7                  A  1256    				or a
001256 C8                  A  1257    				ret z
001257 CD 60 12 00         A  1258    				call os_uppercasify
00125B 77                  A  1259    				ld (hl),a
00125C 23                  A  1260    				inc hl
00125D 10 F5               A  1261    				djnz uppercasify_string	
00125F C9                  A  1262    				ret
                           A  1263    	
                           A  1264    
001260                     A  1265    os_uppercasify
                           A  1266    
                           A  1267    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1268    
001260 FE61                A  1269    				cp 061h			
001262 D8                  A  1270    				ret c
001263 FE7B                A  1271    				cp 07bh
001265 D0                  A  1272    				ret nc
001266 D620                A  1273    				sub 020h				
001268 C9                  A  1274    				ret
                           A  1275    
                           A  1276    ;----------------------------------------------
                           A  1277    
001269                     A  1278    case_insensitive_compare
                           A  1279    
                           A  1280    ; compares A with (HL) disregarding the case of
                           A  1281    ; Zero flag set if the characters are the same
                           A  1282    ; all registers are preserved.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1283    
001269 C5                  A  1284    				push bc					
00126A 4F                  A  1285    				ld c,a
                           A  1286    
00126B CD 60 12 00         A  1287    				call os_uppercasify				00126F 47                  A  1288    				ld b,a
001270 7E                  A  1289    				ld a,(hl)
001271 CD 60 12 00         A  1290    				call os_uppercasify
001275 B8                  A  1291    				cp b
                           A  1292    
001276 79                  A  1293    				ld a,c
001277 C1                  A  1294    				pop bc
001278 C9                  A  1295    				ret
                           A  1296    
                           A  1297    ;----------------------------------------------
                           A  1298    
001279                     A  1299    os_decimal_add
                           A  1300    
                           A  1301    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1302    
001279 C5                  A  1303    				push bc
00127A 0E00                A  1304    				ld c,0
00127C 1A                  A  1305    decdlp			ld a,(de)
00127D 86                  A  1306    				add a,(hl)
00127E 81                  A  1307    				add a,c
00127F FE0A                A  1308    				cp 10
001281 38 0B               A  1309    				jr c,daddnc
001283 D60A                A  1310    				sub 10
001285 0E01                A  1311    				ld c,1
001287 12                  A  1312    decnclp			ld (de),a
001288 23                  A  1313    				inc hl
001289 13                  A  1314    				inc de
00128A 10 F0               A  1315    				djnz decdlp
00128C C1                  A  1316    				pop bc
00128D C9                  A  1317    				ret
00128E 0E00                A  1318    daddnc			ld c,0
001290 18 F5               A  1319    				jr decnclp
                           A  1320    	
                           A  1321    ;----------------------------------------------
                           A  1322    
001292                     A  1323    os_hex_to_decimal
                           A  1324    
                           A  1325    ; INPUT xDE hex longword
                           A  1326    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1327    
       00006945            A  1328    hex_to_convert		equ scratch_pad
       00006948            A  1329    decimal_digits		equ scratch_pad+3
       00006950            A  1330    decimal_add_digits	equ scratch_pad+3+8
                           A  1331    
001292 ED53 45 69 00       A  1332    				ld (hex_to_convert),de
                           A  1333    		
001297 21 50 69 00         A  1334    				ld hl,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00129B E5                  A  1335    				push hl
00129C 11 48 69 00         A  1336    				ld de,decimal_digits
0012A0 AF                  A  1337    				xor a
0012A1 0608                A  1338    				ld b,8
0012A3 12                  A  1339    setupdec		ld (de),a
0012A4 77                  A  1340    				ld (hl),a
0012A5 23                  A  1341    				inc hl
0012A6 13                  A  1342    				inc de
0012A7 10 FA               A  1343    				djnz setupdec
0012A9 E1                  A  1344    				pop hl
0012AA 3601                A  1345    				ld (hl),1
                           A  1346    	
0012AC 21 45 69 00         A  1347    				ld hl,hex_to_convert
0012B0 0603                A  1348    				ld b,3
0012B2 C5                  A  1349    decconvlp		push bc
0012B3 7E                  A  1350    				ld a,(hl)
0012B4 CD D2 12 00         A  1351    				call decadder
0012B8 CD EB 12 00         A  1352    				call decaddx16
0012BC 7E                  A  1353    				ld a,(hl)
0012BD 0F                  A  1354    				rrca
0012BE 0F                  A  1355    				rrca
0012BF 0F                  A  1356    				rrca
0012C0 0F                  A  1357    				rrca
0012C1 CD D2 12 00         A  1358    				call decadder
0012C5 CD EB 12 00         A  1359    				call decaddx16
0012C9 C1                  A  1360    				pop bc
0012CA 23                  A  1361    				inc hl
0012CB 10 E5               A  1362    				djnz decconvlp
0012CD 21 48 69 00         A  1363    				ld hl,decimal_digits
0012D1 C9                  A  1364    				ret
                           A  1365    
                           A  1366    
                           A  1367    
0012D2 E60F                A  1368    decadder		and 15
0012D4 C8                  A  1369    				ret z
0012D5 47                  A  1370    				ld b,a
0012D6 E5                  A  1371    				push hl
0012D7 C5                  A  1372    daddlp			push bc
0012D8 11 48 69 00         A  1373    				ld de,decimal_digits
0012DC 21 50 69 00         A  1374    				ld hl,decimal_add_digits
0012E0 0608                A  1375    				ld b,8
0012E2 CD 79 12 00         A  1376    				call os_decimal_add
0012E6 C1                  A  1377    				pop bc
0012E7 10 EE               A  1378    				djnz daddlp	
0012E9 E1                  A  1379    				pop hl
0012EA C9                  A  1380    				ret
                           A  1381    			
                           A  1382    				
0012EB E5                  A  1383    decaddx16		push hl
0012EC 0604                A  1384    				ld b,4							0012EE C5                  A  1385    x16loop			push bc
0012EF 11 50 69 00         A  1386    				ld de,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012F3 21 50 69 00         A  1387    				ld hl,decimal_add_digits
0012F7 0608                A  1388    				ld b,8
0012F9 CD 79 12 00         A  1389    				call os_decimal_add
0012FD C1                  A  1390    				pop bc
0012FE 10 EE               A  1391    				djnz x16loop	
001300 E1                  A  1392    				pop hl
001301 C9                  A  1393    				ret
                           A  1394    	
                           A  1395    	
                           A  1396    ;----------------------------------------------
                           A  1397    
001302                     A  1398    os_show_decimal
                           A  1399    
001302 11 65 62 00         A  1400    				ld de,output_line				001306 01090000            A  1401    				ld bc,9
00130A 09                  A  1402    				add hl,bc
00130B 060A                A  1403    				ld b,10
00130D 7E                  A  1404    shdeclp			ld a,(hl)
00130E B7                  A  1405    				or a
00130F 28 04               A  1406    				jr z,dnodigit
001311 C630                A  1407    				add a,030h
001313 12                  A  1408    				ld (de),a
001314 13                  A  1409    				inc de
001315 2B                  A  1410    dnodigit		dec hl
001316 10 F5               A  1411    				djnz shdeclp
001318 AF                  A  1412    				xor a
001319 12                  A  1413    				ld (de),a
00131A CD 62 13 00         A  1414    				call os_print_output_line
00131E C9                  A  1415    				ret
                           A  1416    				
                           A  1417    ;----------------------------------------------
                           A  1418    		
00131F                     A  1419    os_copy_to_output_line
                           A  1420    	
00131F D5                  A  1421    				push de
001320 C5                  A  1422    				push bc
001321 11 65 62 00         A  1423    				ld de,output_line				001325 01510000            A  1424    				ld bc,max_buffer_chars+1		001329 EDA0                A  1425    os_cloll		ldi
00132B 7E                  A  1426    				ld a,(hl)
00132C B7                  A  1427    				or a
00132D 28 04               A  1428    				jr z,os_clold
00132F 78                  A  1429    				ld a,b
001330 B1                  A  1430    				or c
001331 20 F6               A  1431    				jr nz,os_cloll
001333 12                  A  1432    os_clold		ld (de),a
001334 C1                  A  1433    				pop bc
001335 D1                  A  1434    				pop de
001336 C9                  A  1435    				ret
                           A  1436    
                           A  1437    
                           A  1438    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1439    
001337                     A  1440    os_show_hex_address
                           A  1441    
001337 E5                  A  1442    				push hl							001338 21 65 62 00         A  1443    				ld hl,output_line
00133C ED53 07 62 00       A  1444    				ld (hex_address),de
001341 3A 09 62 00         A  1445    				ld a,(hex_address+2)
001345 CD A2 10 00         A  1446    				call hexbyte_to_ascii
001349 18 10               A  1447    				jr shw_nt
                           A  1448    				
                           A  1449    
00134B                     A  1450    os_show_hex_byte
                           A  1451    
00134B E5                  A  1452    				push hl							00134C 21 65 62 00         A  1453    				ld hl,output_line
001350 CD A2 10 00         A  1454    				call hexbyte_to_ascii
001354 18 09               A  1455    				jr shb_nt
                           A  1456    
                           A  1457    
                           A  1458    
001356                     A  1459    os_show_hex_word
                           A  1460    
001356 E5                  A  1461    				push hl							001357 21 65 62 00         A  1462    				ld hl,output_line
00135B CD C7 10 00         A  1463    shw_nt			call hexword_to_ascii
00135F 3600                A  1464    shb_nt			ld (hl),0
001361 E1                  A  1465    				pop hl
                           A  1466    
                           A  1467    	
                           A  1468    
001362                     A  1469    os_print_output_line
                           A  1470    
001362 E5                  A  1471    				push hl
001363 21 65 62 00         A  1472    				ld hl,output_line
001367 CD 57 0F 00         A  1473    cproline		call os_print_string
00136B E1                  A  1474    				pop hl
00136C C9                  A  1475    				ret
                           A  1476    
                           A  1477    
                           A  1478    
00136D                     A  1479    os_print_output_line_skip_zeroes
                           A  1480    
00136D E5                  A  1481    				push hl
00136E 21 65 62 00         A  1482    				ld hl,output_line
001372 CD 7F 10 00         A  1483    				call os_skip_leading_ascii_zero
001376 18 EF               A  1484    				jr cproline
                           A  1485    				
                           A  1486    		
                           A  1487    ;----------------------------------------------
                           A  1488    
001378                     A  1489    os_store_CPU_regs
                           A  1490    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001378 F3                  A  1491    				di								                           A  1492    
001379 33                  A  1493    				inc sp							00137A 33                  A  1494    				inc sp
00137B 33                  A  1495    				inc sp
00137C ED73 83 61 00       A  1496    				ld (store_spl),sp
001381 3B                  A  1497    				dec sp							001382 3B                  A  1498    				dec sp
001383 3B                  A  1499    				dec sp
                           A  1500    				
001384 F5                  A  1501    				push af
001385 32 66 61 00         A  1502    				ld (store_a1),a					001389 08                  A  1503    				ex af,af'
00138A 32 70 61 00         A  1504    				ld (store_a2),a
00138E 08                  A  1505    				ex af,af'
00138F ED43 67 61 00       A  1506    				ld (store_bc1),bc		
001394 ED53 6A 61 00       A  1507    				ld (store_de1),de
001399 22 6D 61 00         A  1508    				ld (store_hl1),hl
00139D D9                  A  1509    				exx
00139E ED43 71 61 00       A  1510    				ld (store_bc2),bc
0013A3 ED53 74 61 00       A  1511    				ld (store_de2),de
0013A8 22 77 61 00         A  1512    				ld (store_hl2),hl
0013AC D9                  A  1513    				exx
0013AD DD22 7A 61 00       A  1514    				ld (store_ix),ix
0013B2 FD22 7D 61 00       A  1515    				ld (store_iy),iy
                           A  1516    				
0013B7 ED6E                A  1517    			    ld a,MB
0013B9 32 88 61 00         A  1518    				ld (store_mbase),a
                           A  1519    								
0013BD C5                  A  1520    				push bc
0013BE 0600                A  1521    				ld b,0
0013C0 20 02               A  1522    				jr nz,zfstzero					0013C2 CBF0                A  1523    				set 6,b
                           A  1524    
0013C4 30 02               A  1525    zfstzero		jr nc,cfstzero					0013C6 CBC0                A  1526    				set 0,b
                           A  1527    
0013C8 F2 CE 13 00         A  1528    cfstzero		jp p,sfstzero					0013CC CBF8                A  1529    				set 7,b
                           A  1530    
0013CE EA D4 13 00         A  1531    sfstzero		jp pe,pfstzero					0013D2 CBD0                A  1532    				set 2,b
                           A  1533    
0013D4 ED57                A  1534    pfstzero		ld a,i			
0013D6 EA DC 13 00         A  1535    				jp pe,ifstzero					0013DA CBE0                A  1536    				set 4,b
                           A  1537    
0013DC 78                  A  1538    ifstzero		ld a,b
0013DD 32 89 61 00         A  1539    				ld (store_f),a
                           A  1540    				
0013E1 3E00                A  1541    				ld a,os_location/65536			0013E3 ED6D                A  1542    				ld MB,a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013E5 40ED73 86 61        A  1543    				ld.sis (store_sps),sp
0013EA 3A 88 61 00         A  1544    				ld a,(store_mbase)				0013EE ED6D                A  1545    				ld MB,a
                           A  1546    				
0013F0 C1                  A  1547    				pop bc
0013F1 F1                  A  1548    				pop af
0013F2 FB                  A  1549    				ei
0013F3 C9                  A  1550    				ret
                           A  1551    
                           A  1552    
                           A  1553    
0013F4                     A  1554    os_dont_store_registers
                           A  1555    
0013F4 AF                  A  1556    				xor a
0013F5 32 8E 61 00         A  1557    				ld (store_registers),a			0013F9 C9                  A  1558    				ret
                           A  1559    	
                           A  1560    	
                           A  1561    ;----------------------------------------------
                           A  1562    
0013FA                     A  1563    os_new_line_cond
                           A  1564    
0013FA CD 54 1A 00         A  1565    				call test_quiet_mode
0013FE C0                  A  1566    				ret nz
                           A  1567    
                           A  1568    	
0013FF                     A  1569    os_new_line
                           A  1570    
0013FF E5                  A  1571    				push hl
001400 21 4D 57 00         A  1572    				ld hl,crlfx2_txt+1
001404 CD 57 0F 00         A  1573    				call os_print_string
001408 E1                  A  1574    				pop hl
001409 C9                  A  1575    				ret
                           A  1576    				
                           A  1577    ;----------------------------------------------
                           A  1578    
00140A                     A  1579    os_set_cursor_position
                           A  1580    				
                           A  1581    												00140A 3A BC 5F 00         A  1582    				ld a,(charmap_rows)				00140E 3D                  A  1583    				dec a							00140F B9                  A  1584    				cp c
001410 38 14               A  1585    				jr c,badpos
001412 79                  A  1586    				ld a,c
001413 32 F5 61 00         A  1587    				ld (cursor_y),a
                           A  1588    				
001417 3A BF 5F 00         A  1589    				ld a,(charmap_columns)
00141B 3D                  A  1590    				dec a
00141C B8                  A  1591    				cp b
00141D 38 07               A  1592    				jr c,badpos
00141F 78                  A  1593    				ld a,b
001420 32 F6 61 00         A  1594    				ld (cursor_x),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001424 AF                  A  1595    				xor a
001425 C9                  A  1596    				ret				
                           A  1597    
001426 3E88                A  1598    badpos			ld a,88h						001428 B7                  A  1599    				or a
001429 C9                  A  1600    				ret
                           A  1601    
                           A  1602    
                           A  1603    					
                           A  1604    	
                           A  1605    	
00142A                     A  1606    os_get_cursor_position
                           A  1607    
00142A ED4B F5 61 00       A  1608    				ld bc,(cursor_pos)				00142F BF                  A  1609    				cp a							001430 C9                  A  1610    				ret
                           A  1611    
                           A  1612    
                           A  1613    ;----------------------------------------------
                           A  1614    
001431                     A  1615    os_show_packed_text_cond
                           A  1616    
001431 CD 54 1A 00         A  1617    				call test_quiet_mode
001435 C0                  A  1618    				ret nz
                           A  1619    
                           A  1620    	
001436                     A  1621    os_show_packed_text
                           A  1622    
                           A  1623    ; Construct sentence from internal dictionary u
                           A  1624    	
001436 C5                  A  1625    				push bc
001437 D5                  A  1626    				push de
001438 DDE5                A  1627    				push ix
00143A DD21 65 62 00       A  1628    				ld ix,output_line
00143F 7E                  A  1629    readpind		ld a,(hl)
001440 B7                  A  1630    				or a
001441 20 10               A  1631    				jr nz,getword					001443 DD2B                A  1632    				dec ix							001445 DD7700              A  1633    				ld (ix),a						                           A  1634    			
001448 E5                  A  1635    				push hl
001449 CD 62 13 00         A  1636    				call os_print_output_line
00144D E1                  A  1637    				pop hl
                           A  1638    			
00144E DDE1                A  1639    				pop ix
001450 D1                  A  1640    				pop de
001451 C1                  A  1641    				pop bc
001452 C9                  A  1642    				ret
                           A  1643    				
001453 11 7C 57 00         A  1644    getword			ld de,dictionary-1
001457 0E00                A  1645    				ld c,0
001459 13                  A  1646    dictloop		inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00145A 1A                  A  1647    				ld a,(de)
00145B B7                  A  1648    				or a							00145C 28 04               A  1649    				jr z,faword
00145E CB7F                A  1650    				bit 7,a							001460 28 F7               A  1651    				jr z,dictloop	
                           A  1652    			
001462 0C                  A  1653    faword			inc c							001463 79                  A  1654    				ld a,c
001464 BE                  A  1655    				cp (hl)
001465 20 F2               A  1656    				jr nz,dictloop
001467 13                  A  1657    copytol			inc de							001468 1A                  A  1658    				ld a,(de)
001469 B7                  A  1659    				or a
00146A 28 0B               A  1660    				jr z,eoword						00146C CB7F                A  1661    				bit 7,a
00146E 20 07               A  1662    				jr nz,eoword
001470 DD7700              A  1663    				ld (ix),a						001473 DD23                A  1664    				inc ix
001475 18 F0               A  1665    				jr copytol
001477 DD360020            A  1666    eoword			ld (ix),32						00147B DD23                A  1667    				inc ix
00147D 23                  A  1668    				inc hl
00147E 18 BF               A  1669    				jr readpind
                           A  1670    
                           A  1671    
                           A  1672    		
                           A  1673    ;--------- Mouse functions --------------------
                           A  1674    
001480                     A  1675    os_set_mouse_window
                           A  1676    
                           A  1677    ; Set: HL/DE = window size mouse pointer is to 
                           A  1678    	
001480 22 3C 63 00         A  1679    				ld (mouse_window_size_x),hl	 
001484 ED53 3F 63 00       A  1680    				ld (mouse_window_size_y),de
001489 21000000            A  1681    				ld hl,0
00148D 22 42 63 00         A  1682    				ld (mouse_abs_x),hl
001491 22 45 63 00         A  1683    				ld (mouse_abs_y),hl
001495 3E01                A  1684    				ld a,1
001497 32 54 63 00         A  1685    				ld (mouse_new_window),a
00149B AF                  A  1686    				xor a
00149C C9                  A  1687    				ret
                           A  1688    				
                           A  1689    			
00149D                     A  1690    os_get_mouse_motion
                           A  1691    			
                           A  1692    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1693    ;          ZF = Not set: Mouse driver not initi
                           A  1694    			
00149D 3A 59 61 00         A  1695    				ld a,(devices_connected)
0014A1 E602                A  1696    				and 2
0014A3 EE02                A  1697    				xor 2
0014A5 C0                  A  1698    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014A6 AF                  A  1699    ms_reread		xor a
0014A7 32 3B 63 00         A  1700    				ld (mouse_updated),a
0014AB 2A 34 63 00         A  1701    				ld hl,(mouse_disp_x)			0014AF ED5B 37 63 00       A  1702    				ld de,(mouse_disp_y)
0014B4 3A 3B 63 00         A  1703    				ld a,(mouse_updated)			0014B8 B7                  A  1704    				or a
0014B9 20 EB               A  1705    				jr nz,ms_reread
0014BB AF                  A  1706    mouse_end		xor a
0014BC 3A 3A 63 00         A  1707    				ld a,(mouse_wheel)
0014C0 47                  A  1708    				ld b,a
0014C1 3A 33 63 00         A  1709    				ld a,(mouse_buttons)
0014C5 C9                  A  1710    				ret
                           A  1711    			
                           A  1712    			
0014C6                     A  1713    os_get_mouse_position
                           A  1714    
                           A  1715    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1716    ;          ZF = Not set: Mouse driver not initi
                           A  1717    				
0014C6 CD 9D 14 00         A  1718    				call os_get_mouse_motion
0014CA C0                  A  1719    				ret nz
0014CB 22 4E 63 00         A  1720    				ld (mouse_disp_x_buffer),hl
0014CF ED53 51 63 00       A  1721    				ld (mouse_disp_y_buffer),de
0014D4 3A 54 63 00         A  1722    				ld a,(mouse_new_window)
0014D8 B7                  A  1723    				or a
0014D9 20 6C               A  1724    				jr nz,ms_nmw
                           A  1725    
0014DB ED5B 48 63 00       A  1726    				ld de,(mouse_disp_x_old)
0014E0 AF                  A  1727    				xor a
0014E1 ED52                A  1728    				sbc hl,de
0014E3 EB                  A  1729    				ex de,hl
0014E4 2A 42 63 00         A  1730    				ld hl,(mouse_abs_x)
0014E8 19                  A  1731    				add hl,de
0014E9 E5                  A  1732    				push hl
0014EA C1                  A  1733    				pop bc
0014EB DD210000 80         A  1734    				ld ix,800000h					0014F0 DD09                A  1735    				add ix,bc
0014F2 30 06               A  1736    				jr nc,ms_x_ok1
0014F4 01000000            A  1737    				ld bc,0
0014F8 18 10               A  1738    				jr ms_x_ok2
0014FA ED5B 3C 63 00       A  1739    ms_x_ok1		ld de,(mouse_window_size_x)
0014FF AF                  A  1740    				xor a
001500 ED52                A  1741    				sbc hl,de
001502 38 06               A  1742    				jr c,ms_x_ok2
001504 ED4B 3C 63 00       A  1743    				ld bc,(mouse_window_size_x)		001509 0B                  A  1744    				dec bc
00150A ED43 42 63 00       A  1745    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1746    					
00150F 2A 51 63 00         A  1747    				ld hl,(mouse_disp_y_buffer)
001513 ED5B 4B 63 00       A  1748    				ld de,(mouse_disp_y_old)
001518 AF                  A  1749    				xor a
001519 ED52                A  1750    				sbc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00151B EB                  A  1751    				ex de,hl
00151C 2A 45 63 00         A  1752    				ld hl,(mouse_abs_y)
001520 19                  A  1753    				add hl,de
001521 E5                  A  1754    				push hl
001522 C1                  A  1755    				pop bc
001523 DD210000 80         A  1756    				ld ix,800000h					001528 DD09                A  1757    				add ix,bc
00152A 30 06               A  1758    				jr nc,ms_y_ok1
00152C 01000000            A  1759    				ld bc,0
001530 18 10               A  1760    				jr ms_y_ok2
001532 ED5B 3F 63 00       A  1761    ms_y_ok1		ld de,(mouse_window_size_y)
001537 AF                  A  1762    				xor a
001538 ED52                A  1763    				sbc hl,de
00153A 38 06               A  1764    				jr c,ms_y_ok2
00153C ED4B 3F 63 00       A  1765    				ld bc,(mouse_window_size_y)		001541 0B                  A  1766    				dec bc
001542 ED43 45 63 00       A  1767    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1768    
                           A  1769    				
001547 2A 4E 63 00         A  1770    ms_nmw			ld hl,(mouse_disp_x_buffer)
00154B 22 48 63 00         A  1771    				ld (mouse_disp_x_old),hl
00154F 2A 51 63 00         A  1772    				ld hl,(mouse_disp_y_buffer)
001553 22 4B 63 00         A  1773    				ld (mouse_disp_y_old),hl
                           A  1774    				
001557 2A 42 63 00         A  1775    				ld hl,(mouse_abs_x)
00155B ED5B 45 63 00       A  1776    				ld de,(mouse_abs_y)
                           A  1777    				
001560 AF                  A  1778    				xor a
001561 32 54 63 00         A  1779    				ld (mouse_new_window),a
001565 C3 BB 14 00         A  1780    				jp mouse_end
                           A  1781    				
                           A  1782    	
                           A  1783    ;==============================================
                           A  1784    ;----- General Subroutines --------------------
                           A  1785    ;==============================================
                           A  1786    
                           A  1787    ; .--------------.
                           A  1788    ; ! CRC Checksum !
                           A  1789    ; '--------------'
                           A  1790    
                           A  1791    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1792    
001569                     A  1793    crc_checksum
                           A  1794    
001569 21FFFF00            A  1795    				ld hl,0ffffh		
00156D 1A                  A  1796    crcloop			ld a,(de)			
00156E AC                  A  1797    				xor h			
00156F 67                  A  1798    				ld h,a			
001570 0608                A  1799    				ld b,8
001572 4029                A  1800    crcbyte			add.sis hl,hl					001574 30 08               A  1801    				jr nc,crcnext
001576 7C                  A  1802    				ld a,h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001577 EE10                A  1803    				xor 10h
001579 67                  A  1804    				ld h,a
00157A 7D                  A  1805    				ld a,l
00157B EE21                A  1806    				xor 21h
00157D 6F                  A  1807    				ld l,a
00157E 10 F2               A  1808    crcnext			djnz crcbyte
001580 13                  A  1809    				inc de
001581 0D                  A  1810    				dec c
001582 20 E9               A  1811    				jr nz,crcloop
001584 C9                  A  1812    				ret
                           A  1813    
                           A  1814    
                           A  1815    ;----------------------------------------------
                           A  1816    
001585                     A  1817    os_get_key_mod_flags
                           A  1818    
001585 3A 29 63 00         A  1819    				ld a,(key_mod_flags)
001589 BF                  A  1820    				cp a							00158A C9                  A  1821    				ret
                           A  1822    
                           A  1823    ;----------------------------------------------
                           A  1824    
00158B                     A  1825    os_get_vmode
                           A  1826    			
00158B 3A BC 5F 00         A  1827    				ld a,(charmap_rows)
00158F 4F                  A  1828    				ld c,a
001590 3A BF 5F 00         A  1829    				ld a,(charmap_columns)
001594 47                  A  1830    				ld b,a
001595 3A 91 5F 00         A  1831    				ld a,(video_mode)
001599 BF                  A  1832    				cp a						; Z
00159A C9                  A  1833    				ret
                           A  1834    
                           A  1835    ;----------------------------------------------
                           A  1836    
00159B 7B                  A  1837    ext_set_vmode	ld a,e
                           A  1838    
00159C FE04                A  1839    os_set_vmode	cp 4
00159E 38 04               A  1840    				jr c,vm_range_ok
0015A0 3E88                A  1841    				ld a,88h					;ou
0015A2 B7                  A  1842    				or a
0015A3 C9                  A  1843    				ret
                           A  1844    				
0015A4 32 91 5F 00         A  1845    vm_range_ok		ld (video_mode),a
0015A8 21030000            A  1846    				ld hl,3
0015AC 67                  A  1847    				ld h,a
0015AD ED6C                A  1848    				mlt hl
0015AF 11 C2 5F 00         A  1849    				ld de,vmode_parameter_list
0015B3 19                  A  1850    				add hl,de
0015B4 7E                  A  1851    				ld a,(hl)
0015B5 23                  A  1852    				inc hl
0015B6 46                  A  1853    				ld b,(hl)
0015B7 23                  A  1854    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015B8 4E                  A  1855    				ld c,(hl)
0015B9 CD 26 3E 00         A  1856    				call set_charmap_parameters
                           A  1857    				
0015BD CD C3 3E 00         A  1858    				call hwsc_clear_screen
                           A  1859    
0015C1 AF                  A  1860    				xor a				
0015C2 C9                  A  1861    				ret
                           A  1862    
                           A  1863    
                           A  1864    ;----------------------------------------------
                           A  1865    
0015C3                     A  1866    os_bchl_memfill
                           A  1867    
                           A  1868    ; fill memory from xHL with A. Count in xBC.
                           A  1869    		
0015C3 77                  A  1870    mf_loop			ld (hl),a
0015C4 EDA1                A  1871    				cpi								0015C6 EA C3 15 00         A  1872    				jp pe,mf_loop
0015CA C9                  A  1873    				ret
                           A  1874    	
                           A  1875    ;----------------------------------------------
                           A  1876    
0015CB 7B                  A  1877    ext_set_pen		ld a,e
                           A  1878    
0015CC 32 92 5F 00         A  1879    os_set_pen		ld (current_pen),a
0015D0 BF                  A  1880    				cp a							0015D1 C9                  A  1881    				ret
                           A  1882    
                           A  1883    ;----------------------------------------------
                           A  1884    	
0015D2 3A 92 5F 00         A  1885    os_get_pen		ld a,(current_pen)
0015D6 BF                  A  1886    				cp a							0015D7 C9                  A  1887    				ret	
                           A  1888    
                           A  1889    ;----------------------------------------------
                           A  1890    
0015D8                     A  1891    ext_background_colours
                           A  1892    				
0015D8 CC EA 15 00         A  1893    				call z,mbase_hl
0015DC C3 B7 3E 00         A  1894    				jp hswc_set_ui_colours
                           A  1895    				
                           A  1896    				
                           A  1897    ;----------------------------------------------
                           A  1898    
0015E0                     A  1899    os_get_xde_msb	
                           A  1900    			
0015E0 ED53 0D 62 00       A  1901    				ld (xrr_temp),de				0015E5 3A 0F 62 00         A  1902    				ld a,(xrr_temp+2)
0015E9 C9                  A  1903    				ret
                           A  1904    
                           A  1905    ;----------------------------------------------
                           A  1906    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015EA F5                  A  1907    mbase_hl		push af
0015EB 22 0D 62 00         A  1908    				ld (xrr_temp),hl				0015EF ED6E                A  1909    				ld a,MB
0015F1 32 0F 62 00         A  1910    				ld (xrr_temp+2),a
0015F5 2A 0D 62 00         A  1911    				ld hl,(xrr_temp)
0015F9 F1                  A  1912    				pop af
0015FA C9                  A  1913    				ret
                           A  1914    				
0015FB F5                  A  1915    mbase_de		push af
0015FC ED53 0D 62 00       A  1916    				ld (xrr_temp),de				001601 ED6E                A  1917    				ld a,MB
001603 32 0F 62 00         A  1918    				ld (xrr_temp+2),a
001607 ED5B 0D 62 00       A  1919    				ld de,(xrr_temp)
00160C F1                  A  1920    				pop af
00160D C9                  A  1921    				ret
                           A  1922    
                           A  1923    
                           A  1924    ;----------------------------------------------
                           A  1925    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1926    ;----------------------------------------------
                           A  1927    
00160E                     A  1928    unpack_rle
                           A  1929    
                           A  1930    ;set xHL = source address of packed file
                           A  1931    ;set xDE = destination address for unpacked dat
                           A  1932    ;set xBC = length of packed file
                           A  1933    
00160E E5                  A  1934    			push hl	
00160F DDE1                A  1935    			pop ix
001611 0B                  A  1936    			dec bc								001612 23                  A  1937    			inc hl
001613 DD7E00              A  1938    unp_gtok	ld a,(ix)							001616 BE                  A  1939    unp_next	cp (hl)								001617 28 07               A  1940    			jr z,unp_brun						001619 EDA0                A  1941    			ldi									00161B EA 16 16 00         A  1942    			jp pe,unp_next						00161F C9                  A  1943    			ret
                           A  1944    	
001620 C5                  A  1945    unp_brun	push bc								001621 23                  A  1946    			inc hl		
001622 7E                  A  1947    			ld a,(hl)							001623 23                  A  1948    			inc hl		
001624 46                  A  1949    			ld b,(hl)							001625 23                  A  1950    			inc hl
                           A  1951    	
001626 12                  A  1952    unp_rllp	ld (de),a							001627 13                  A  1953    			inc de			
001628 10 FC               A  1954    			djnz unp_rllp
                           A  1955    	
00162A C1                  A  1956    			pop bc	
00162B 0B                  A  1957    			dec bc								00162C 0B                  A  1958    			dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00162D 0B                  A  1959    			dec bc
00162E E5                  A  1960    			push hl								00162F 21000000            A  1961    			ld hl,0
001633 B7                  A  1962    			or a
001634 ED4A                A  1963    			adc hl,bc
001636 E1                  A  1964    			pop hl
001637 20 DA               A  1965    			jr nz,unp_gtok
001639 C9                  A  1966    			ret	
                           A  1967    	
                           A  1968    ;----------------------------------------------
                           A  1969    ; Commonly called error messages - gets message
                           A  1970    ;----------------------------------------------
                           A  1971    
                           A  1972    
00163A 3E0D                A  1973    os_no_fn_error		ld a,0dh
00163C B7                  A  1974    					or a
00163D C9                  A  1975    					ret
                           A  1976    			
00163E 3E15                A  1977    os_fn_too_long		ld a,15h
001640 B7                  A  1978    					or a
001641 C9                  A  1979    					ret
                           A  1980    				
001642 3E16                A  1981    os_no_start_addr	ld a,16h
001644 B7                  A  1982    					or a
001645 C9                  A  1983    					ret
                           A  1984    			
001646 3E17                A  1985    os_no_filesize		ld a,17h
001648 B7                  A  1986    					or a
001649 C9                  A  1987    					ret
                           A  1988    			
00164A 3E18                A  1989    os_abort_save		ld a,18h
00164C B7                  A  1990    					or a
00164D C9                  A  1991    					ret
                           A  1992    			
00164E 3E1C                A  1993    os_no_e_addr_error	ld a,1ch
001650 B7                  A  1994    					or a
001651 C9                  A  1995    					ret
                           A  1996    			
001652 3E1D                A  1997    os_no_d_addr_error	ld a,1dh
001654 B7                  A  1998    					or a
001655 C9                  A  1999    					ret
                           A  2000    				
001656 3E1E                A  2001    os_range_error		ld a,1eh
001658 B7                  A  2002    					or a
001659 C9                  A  2003    					ret
                           A  2004    			
00165A 3E1F                A  2005    os_no_args_error	ld a,1fh
00165C B7                  A  2006    					or a
00165D C9                  A  2007    					ret	
                           A  2008    
                           A  2009    ;----------------------------------------------
                           A  2010    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2011    ; Set xHL to address of zero terminated filenam
                           A  2012    ; RETURNS:	C:xDE  = File length
                           A  2013    ;    		HL     = Start cluster of file
                           A  2014    
00165E CC EA 15 00         A  2015    ext_find_file	call z,mbase_hl
                           A  2016    
001662 CD EE 52 00         A  2017    os_find_file	call fs_hl_to_filename
001666 CD 55 4A 00         A  2018    				call fs_open_file_command		00166A 38 01               A  2019    				jr c,os_fferr					00166C C9                  A  2020    				ret								                           A  2021    					
00166D 47                  A  2022    os_fferr		ld b,a							00166E AF                  A  2023    				xor a			
00166F 3C                  A  2024    				inc a							001670 C9                  A  2025    				ret	
                           A  2026    
                           A  2027    ;----------------------------------------------
                           A  2028    
001671                     A  2029    os_set_load_length
                           A  2030    
001671 ED53 73 55 00       A  2031    				ld (fs_file_transfer_length),de
001676 BF                  A  2032    				cp a							001677 C9                  A  2033    				ret
                           A  2034    				
                           A  2035    ;----------------------------------------------
                           A  2036    
001678                     A  2037    ext_set_file_pointer
                           A  2038    
001678 79                  A  2039    				ld a,c
                           A  2040    				
001679                     A  2041    os_set_file_pointer
                           A  2042    
                           A  2043    ; Moves the 'start of file' pointer allowing ra
                           A  2044    ; Note: File pointer is reset by opening a file
                           A  2045    ; by normal read function.
                           A  2046    
001679 ED53 67 55 00       A  2047    				ld (fs_file_pointer),de			00167E 32 6A 55 00         A  2048    				ld (fs_file_pointer+3),a
001682 F5                  A  2049    				push af
001683 AF                  A  2050    				xor a
001684 32 99 55 00         A  2051    				ld (fs_filepointer_valid),a		001688 F1                  A  2052    				pop af
001689 BF                  A  2053    				cp a							00168A C9                  A  2054    				ret
                           A  2055    				
                           A  2056    ;----------------------------------------------
                           A  2057    
                           A  2058    ; set xHL = load address 
                           A  2059    ; (Before calling this routine, call os_find_fi
                           A  2060    
00168B                     A  2061    ext_read_bytes_from_file
                           A  2062    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00168B CC EA 15 00         A  2063    				call z,mbase_hl					                           A  2064    				
00168F                     A  2065    os_read_bytes_from_file
                           A  2066    
00168F 22 7C 55 00         A  2067    				ld (fs_ez80_address),hl			001693 CD A8 4A 00         A  2068    				call fs_read_data_command
001697 38 D4               A  2069    				jr c,os_fferr
001699 C9                  A  2070    				ret
                           A  2071    
                           A  2072    ;----------------------------------------------
                           A  2073    
                           A  2074    ; Before calling, set xHL = address of zero ter
                           A  2075    
00169A CC EA 15 00         A  2076    ext_create_file	call z,mbase_hl
                           A  2077    
00169E CD EE 52 00         A  2078    os_create_file	call fs_hl_to_filename
0016A2 CD 80 4D 00         A  2079    				call fs_create_file_command		0016A6 DA 6D 16 00         A  2080    				jp c,os_fferr					0016AA C9                  A  2081    				ret
                           A  2082    
                           A  2083    ;----------------------------------------------
                           A  2084    
0016AB                     A  2085    ext_write_bytes_to_file
                           A  2086    
0016AB CC EA 15 00         A  2087    				call z,mbase_hl
0016AF CC FB 15 00         A  2088    				call z,mbase_de
                           A  2089    
0016B3                     A  2090    os_write_bytes_to_file
                           A  2091    
                           A  2092    ; Before calling, set..
                           A  2093    
                           A  2094    ; xDE   = address to save data from
                           A  2095    ; xBC   = number of bytes to save
                           A  2096    ; xHL   = address of null-terminated ascii name
                           A  2097    
                           A  2098    ; On return:
                           A  2099    
                           A  2100    ; If zero flag NOT set, there was an error.
                           A  2101    ; If   A = $00, b = hardware error code
                           A  2102    ; Else A = File system error code
                           A  2103    
                           A  2104    ; NOTE:
                           A  2105    ; Will return 'file not found' if the file has 
                           A  2106    				
0016B3 ED43 73 55 00       A  2107    				ld (fs_file_transfer_length),bc
0016B8 ED53 7C 55 00       A  2108    				ld (fs_ez80_address),de	 	
0016BD CD EE 52 00         A  2109    				call fs_hl_to_filename
0016C1 CD B2 4D 00         A  2110    				call fs_write_bytes_to_file_com
0016C5 DA 6D 16 00         A  2111    				jp c,os_fferr
0016C9 C9                  A  2112    				ret
                           A  2113    		
                           A  2114    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2115    ;----------------------------------------------
                           A  2116    	
                           A  2117    
0016CA                     A  2118    os_check_volume_format
                           A  2119    
0016CA CD AC 48 00         A  2120    				call fs_check_disk_format
0016CE DA 6D 16 00         A  2121    os_rffsc		jp c,os_fferr
0016D2 C9                  A  2122    				ret
                           A  2123    
                           A  2124    ;----------------------------------------------
                           A  2125    
                           A  2126    
0016D3 7B                  A  2127    ext_format		ld a,e
0016D4 CC EA 15 00         A  2128    				call z,mbase_hl					                           A  2129    
0016D8 E5                  A  2130    os_format		push hl							0016D9 CD E7 1A 00         A  2131    				call dev_to_driver_lookup
0016DD E1                  A  2132    				pop hl
0016DE 38 04               A  2133    				jr c,sdevok
0016E0 3ED0                A  2134    				ld a,0d0h						0016E2 B7                  A  2135    				or a
0016E3 C9                  A  2136    				ret
                           A  2137    
0016E4 F5                  A  2138    sdevok			push af				
0016E5 11 43 55 00         A  2139    				ld de,fs_sought_filename
0016E9 CD FD 53 00         A  2140    				call fs_clear_filename
0016ED 060B                A  2141    				ld b,11
0016EF CD 45 12 00         A  2142    				call os_copy_ascii_run
0016F3 F1                  A  2143    				pop af
                           A  2144    				
0016F4 21 1B 60 00         A  2145    				ld hl,current_driver
0016F8 46                  A  2146    				ld b,(hl)
0016F9 77                  A  2147    				ld (hl),a
0016FA C5                  A  2148    				push bc
0016FB E5                  A  2149    				push hl
0016FC CD 21 47 00         A  2150    				call fs_format_device_command
001700 E1                  A  2151    				pop hl
001701 C1                  A  2152    				pop bc
001702 70                  A  2153    				ld (hl),b
001703 18 C9               A  2154    				jr os_rffsc
                           A  2155    
                           A  2156    
                           A  2157    ;----------------------------------------------
                           A  2158    
                           A  2159    
001705 CC EA 15 00         A  2160    ext_make_dir	call z,mbase_hl					                           A  2161    
001709 CD EE 52 00         A  2162    os_make_dir		call fs_hl_to_filename
00170D CD F8 4B 00         A  2163    				call fs_make_dir_command
001711 18 BB               A  2164    				jr os_rffsc
                           A  2165    
                           A  2166    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2167    ;----------------------------------------------
                           A  2168    
                           A  2169    
001713 CC EA 15 00         A  2170    ext_change_dir	call z,mbase_hl					                           A  2171    
001717 CD EE 52 00         A  2172    os_change_dir	call fs_hl_to_filename
00171B CD FF 49 00         A  2173    				call fs_change_dir_command
00171F 18 AD               A  2174    				jr os_rffsc
                           A  2175    				
                           A  2176    	
                           A  2177    ;----------------------------------------------
                           A  2178    	
                           A  2179    	
001721 CD 32 4A 00         A  2180    os_parent_dir	call fs_parent_dir_command
001725 18 A7               A  2181    				jr os_rffsc
                           A  2182    				
                           A  2183    
                           A  2184    ;----------------------------------------------
                           A  2185    
                           A  2186    	
001727 CD 26 4A 00         A  2187    os_root_dir		call fs_goto_root_dir_command
00172B 18 A1               A  2188    				jr os_rffsc
                           A  2189    
                           A  2190    
                           A  2191    ;----------------------------------------------
                           A  2192    
                           A  2193    
00172D CC EA 15 00         A  2194    ext_erase_file	call z,mbase_hl					                           A  2195    
001731 CD EE 52 00         A  2196    os_erase_file	call fs_hl_to_filename
001735 CD 49 4F 00         A  2197    				call fs_erase_file_command
001739 18 93               A  2198    				jr os_rffsc
                           A  2199    	
                           A  2200    
                           A  2201    ;----------------------------------------------
                           A  2202    
                           A  2203    
00173B                     A  2204    os_goto_first_dir_entry	
                           A  2205    
00173B CD A4 4F 00         A  2206    				call fs_goto_first_dir_entry
00173F 18 8D               A  2207    				jr os_rffsc
                           A  2208    
                           A  2209    
                           A  2210    ;----------------------------------------------
                           A  2211    
                           A  2212    
001741                     A  2213    os_get_dir_entry		
                           A  2214    
001741 CD BB 4F 00         A  2215    				call fs_get_dir_entry	
001745 18 87               A  2216    				jr os_rffsc
                           A  2217    
                           A  2218    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2219    ;----------------------------------------------
                           A  2220    
                           A  2221    
001747                     A  2222    os_goto_next_dir_entry	
                           A  2223    	
001747 CD 48 50 00         A  2224    				call fs_goto_next_dir_entry	
00174B 18 81               A  2225    				jr os_rffsc
                           A  2226    
                           A  2227    
                           A  2228    ;----------------------------------------------
                           A  2229    
                           A  2230    
00174D                     A  2231    os_get_current_dir_name
                           A  2232    
00174D CD B4 53 00         A  2233    				call fs_get_current_dir_name
001751 C3 CE 16 00         A  2234    				jr os_rffsc
                           A  2235    				
                           A  2236    
                           A  2237    ;----------------------------------------------
                           A  2238    
                           A  2239    
001755 CC EA 15 00         A  2240    ext_rename_file	call z,mbase_hl
001759 CC FB 15 00         A  2241    				call z,mbase_de
                           A  2242    
00175D D5                  A  2243    os_rename_file	push de
00175E CD E8 52 00         A  2244    				call fs_hl_to_alt_filename		001762 E1                  A  2245    				pop hl				
001763 CD EE 52 00         A  2246    				call fs_hl_to_filename	
001767 CD 60 4F 00         A  2247    				call fs_rename_command
00176B C3 CE 16 00         A  2248    				jr os_rffsc
                           A  2249    				
                           A  2250    
                           A  2251    ;----------------------------------------------
                           A  2252    
                           A  2253    
00176F CC EA 15 00         A  2254    ext_delete_dir	call z,mbase_hl					                           A  2255    
001773 CD EE 52 00         A  2256    os_delete_dir	call fs_hl_to_filename
001777 CD D1 4C 00         A  2257    				call fs_delete_dir_command
00177B C3 CE 16 00         A  2258    				jp os_rffsc
                           A  2259    	
                           A  2260    	
                           A  2261    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2262    
                           A  2263    
00177F                     A  2264    ext_read_sector
00177F CD CA 17 00         A  2265    				call ext_sector_access_preamble
001783 C0                  A  2266    				ret nz
001784 32 1B 60 00         A  2267    				ld (current_driver),a
001788 CD 8B 54 00         A  2268    				call fs_read_sector
00178C 20 11               A  2269    				jr nz,sect_done
00178E 38 0F               A  2270    				jr c,sect_done
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001790 21 45 67 00         A  2271    				ld hl,sector_buffer
001794 ED5B 2B 60 00       A  2272    				ld de,(sector_rd_wr_addr)
001799 01000200            A  2273    				ld bc,512
00179D EDB0                A  2274    				ldir			
00179F F5                  A  2275    sect_done		push af
0017A0 3A 4B 61 00         A  2276    				ld a,(sys_driver_backup)		0017A4 32 1B 60 00         A  2277    				ld (current_driver),a
0017A8 F1                  A  2278    				pop af
0017A9 C3 CE 16 00         A  2279    				jp os_rffsc
                           A  2280    				
                           A  2281    
0017AD                     A  2282    ext_write_sector
                           A  2283    			
0017AD CD CA 17 00         A  2284    				call ext_sector_access_preamble
0017B1 C0                  A  2285    				ret nz
0017B2 32 1B 60 00         A  2286    				ld (current_driver),a
0017B6 2A 2B 60 00         A  2287    				ld hl,(sector_rd_wr_addr)
0017BA 11 45 67 00         A  2288    				ld de,sector_buffer
0017BE 01000200            A  2289    				ld bc,512
0017C2 EDB0                A  2290    				ldir			
0017C4 CD B4 54 00         A  2291    				call fs_write_sector
0017C8 18 D5               A  2292    				jr sect_done
                           A  2293    
                           A  2294    
0017CA                     A  2295    ext_sector_access_preamble
                           A  2296    
0017CA CC EA 15 00         A  2297    				call z,mbase_hl
0017CE 22 2B 60 00         A  2298    				ld (sector_rd_wr_addr),hl
                           A  2299    				
0017D2 78                  A  2300    				ld a,b
0017D3 F5                  A  2301    				push af							0017D4 DD21 F1 61 00       A  2302    				ld ix,sector_lba0
0017D9 DD1F00              A  2303    				ld (ix),de						0017DC DD7103              A  2304    				ld (ix+3),c
0017DF CD E7 1A 00         A  2305    				call dev_to_driver_lookup		0017E3 E5                  A  2306    				push hl
0017E4 DDE1                A  2307    				pop ix
0017E6 2A F1 61 00         A  2308    				ld hl,(sector_lba0)				0017EA 3A F4 61 00         A  2309    				ld a,(sector_lba3)				0017EE DD0701              A  2310    				ld bc,(ix+1)					0017F1 B7                  A  2311    				or a							0017F2 ED42                A  2312    				sbc hl,bc
0017F4 DD9E04              A  2313    				sbc a,(ix+4)
0017F7 38 05               A  2314    				jr c,range_ok
0017F9 F1                  A  2315    				pop af
0017FA 3ED5                A  2316    				ld a,0d5h						0017FC B7                  A  2317    				or a							0017FD C9                  A  2318    				ret
                           A  2319    	
0017FE 3A 1B 60 00         A  2320    range_ok		ld a,(current_driver)
001802 32 4B 61 00         A  2321    				ld (sys_driver_backup),a
001806 F1                  A  2322    				pop af							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001807 CD E7 1A 00         A  2323    				call dev_to_driver_lookup
00180B 30 02               A  2324    				jr nc,bad_dev
00180D BF                  A  2325    os_null			cp a							00180E C9                  A  2326    				ret
                           A  2327    					
00180F 3ED0                A  2328    bad_dev			ld a,0d0h						001811 B7                  A  2329    				or a							001812 C9                  A  2330    				ret	
                           A  2331    			
                           A  2332    
                           A  2333    ;----------------------------------------------
                           A  2334    
                           A  2335    
001813                     A  2336    os_get_device_info
                           A  2337    
001813 21 C6 60 00         A  2338    				ld hl,host_device_hardware_info
001817 11 A2 3B 00         A  2339    				ld de,driver_table
00181B 3A 1C 60 00         A  2340    				ld a,(device_count)
00181F 47                  A  2341    				ld b,a
001820 3A 1B 60 00         A  2342    				ld a,(current_driver)
001824 BF                  A  2343    				cp a
001825 C9                  A  2344    				ret
                           A  2345    
                           A  2346    
                           A  2347    
                           A  2348    
001826                     A  2349    os_get_volume_info
                           A  2350    
001826 21 46 60 00         A  2351    				ld hl,volume_mount_list	
00182A 3A 1D 60 00         A  2352    				ld a,(volume_count)
00182E 47                  A  2353    				ld b,a
00182F 3A 1A 60 00         A  2354    				ld a,(current_volume)
001833 C9                  A  2355    				ret
                           A  2356    				
                           A  2357    		
                           A  2358    ;----------------------------------------------
                           A  2359    
                           A  2360    
001834                     A  2361    ext_serial_get_header
                           A  2362    
001834 CC EA 15 00         A  2363    				call z,mbase_hl
001838 7B                  A  2364    				ld a,e
001839 CD B4 44 00         A  2365    				call serial_get_header
00183D DDE5                A  2366    				push ix
00183F D1                  A  2367    				pop de
001840 C9                  A  2368    				ret
                           A  2369    				
                           A  2370    				
001841                     A  2371    ext_serial_receive_file
                           A  2372    				
001841 CC EA 15 00         A  2373    				call z,mbase_hl
001845 CD 4F 45 00         A  2374    				call serial_receive_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001849 C9                  A  2375    				ret
                           A  2376    				
                           A  2377    	
00184A                     A  2378    ext_serial_send_file
                           A  2379    
00184A CC EA 15 00         A  2380    				call z,mbase_hl					00184E CC FB 15 00         A  2381    				call z,mbase_de					001852 D5                  A  2382    				push de	
001853 DDE1                A  2383    				pop ix							001855 C5                  A  2384    				push bc							001856 D1                  A  2385    				pop de							001857 CD 18 46 00         A  2386    				call serial_send_file
00185B C9                  A  2387    				ret
                           A  2388    
                           A  2389    
00185C                     A  2390    ext_serial_tx
00185C 7B                  A  2391    				ld a,e
00185D CD 02 3E 00         A  2392    				call send_serial_byte
001861 AF                  A  2393    				xor a							001862 C9                  A  2394    				ret
                           A  2395    
                           A  2396    
001863                     A  2397    ext_serial_rx
001863 7B                  A  2398    				ld a,e
001864 32 EA 5F 00         A  2399    				ld (serial_timeout),a
001868 CD C7 3D 00         A  2400    				call receive_serial_byte
00186C C9                  A  2401    				ret
                           A  2402    				
                           A  2403    
                           A  2404    ;----------------------------------------------
                           A  2405    
00186D                     A  2406    ext_mount_volumes
                           A  2407    
00186D 7B                  A  2408    				ld a,e
                           A  2409    
00186E                     A  2410    os_mount_volumes
                           A  2411    				
00186E 32 4C 61 00         A  2412    				ld (os_quiet_mode),a			                           A  2413    				
001872 21 D4 56 00         A  2414    				ld hl,storage_txt
001876 CD 52 0F 00         A  2415    				call os_print_string_cond
00187A CD A2 18 00         A  2416    				call mount_go
00187E AF                  A  2417    				xor a
00187F 32 1A 60 00         A  2418    tvloop			ld (current_volume),a
001883 CD FD 1A 00         A  2419    				call os_change_volume			001887 C8                  A  2420    				ret z							001888 3A 1A 60 00         A  2421    				ld a,(current_volume)			00188C 3C                  A  2422    				inc a
00188D FE08                A  2423    				cp max_volumes
00188F 20 EE               A  2424    				jr nz,tvloop
001891 3A 1C 60 00         A  2425    				ld a,(device_count)
001895 B7                  A  2426    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001896 20 08               A  2427    				jr nz,mfsdevs
001898 21 18 5E 00         A  2428    				ld hl,none_found_msg
00189C CD 31 14 00         A  2429    				call os_show_packed_text_cond
0018A0 AF                  A  2430    mfsdevs			xor a
0018A1 C9                  A  2431    				ret
                           A  2432    
                           A  2433    
                           A  2434    
0018A2 21 46 60 00         A  2435    mount_go		ld hl,volume_mount_list			0018A6 01800000            A  2436    				ld bc,max_volumes*16
0018AA AF                  A  2437    clrdl_lp		xor a
0018AB CD C3 15 00         A  2438    				call os_bchl_memfill
                           A  2439    								
0018AF 21 2E 60 00         A  2440    				ld hl,volume_dir_clusters		0018B3 01180000            A  2441    				ld bc,max_volumes*3		
0018B7 AF                  A  2442    				xor a	
0018B8 CD C3 15 00         A  2443    				call os_bchl_memfill	
                           A  2444    			
0018BC 11 C6 60 00         A  2445    				ld de,host_device_hardware_info
0018C0 ED53 46 61 00       A  2446    				ld (dhwn_temp_pointer),de
                           A  2447    				
0018C5 FD21 46 60 00       A  2448    				ld iy,volume_mount_list
0018CA AF                  A  2449    				xor a
0018CB 32 1D 60 00         A  2450    				ld (volume_count),a
0018CF 32 1C 60 00         A  2451    				ld (device_count),a
0018D3 32 1B 60 00         A  2452    mnt_loop		ld (current_driver),a			0018D7 CD 73 1A 00         A  2453    				call locate_driver_base			0018DB 21000000            A  2454    				ld hl,0
0018DF AF                  A  2455    				xor a
0018E0 ED5A                A  2456    				adc hl,de
0018E2 C8                  A  2457    				ret z							0018E3 EB                  A  2458    				ex de,hl						0018E4 FDE5                A  2459    				push iy
0018E6 CD F7 18 00         A  2460    				call find_dev					0018EA FDE1                A  2461    				pop iy							0018EC CC F8 18 00         A  2462    				call z,got_dev		
0018F0 3A 1B 60 00         A  2463    nxt_drv			ld a,(current_driver)			0018F4 3C                  A  2464    				inc a
0018F5 18 DC               A  2465    				jr mnt_loop
                           A  2466    
                           A  2467    				
0018F7 E9                  A  2468    find_dev		jp (hl)
                           A  2469    			
                           A  2470    			
0018F8 E5                  A  2471    got_dev			push hl							0018F9 D5                  A  2472    				push de							0018FA C5                  A  2473    				push bc
0018FB CD FA 13 00         A  2474    				call os_new_line_cond			0018FF 015B0100            A  2475    				ld bc,015bh
001903 CD 84 1A 00         A  2476    				call os_print_multiple_chars_co
001907 3A 1B 60 00         A  2477    				ld a,(current_driver)
00190B CD 73 1A 00         A  2478    				call locate_driver_base
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00190F 210C0000            A  2479    				ld hl,0ch
001913 19                  A  2480    				add hl,de
001914 CD 52 0F 00         A  2481    				call os_print_string_cond		001918 015D0100            A  2482    				ld bc,015dh
00191C CD 84 1A 00         A  2483    				call os_print_multiple_chars_co
001920 C1                  A  2484    				pop bc
001921 D1                  A  2485    				pop de
001922 AF                  A  2486    				xor a
001923 32 4A 61 00         A  2487    				ld (vols_on_device_temp),a
                           A  2488    				
001927 21 1C 60 00         A  2489    				ld hl,device_count
00192B 34                  A  2490    				inc (hl)						00192C 3A 1B 60 00         A  2491    				ld a,(current_driver)
001930 2A 46 61 00         A  2492    				ld hl,(dhwn_temp_pointer)	
001934 77                  A  2493    				ld (hl),a
001935 23                  A  2494    				inc hl
001936 73                  A  2495    				ld (hl),e						001937 FD7304              A  2496    				ld (iy+4),e						00193A 23                  A  2497    				inc hl							00193B 72                  A  2498    				ld (hl),d
00193C FD7205              A  2499    				ld (iy+5),d
00193F 23                  A  2500    				inc hl
001940 71                  A  2501    				ld (hl),c			
001941 FD7106              A  2502    				ld (iy+6),c
001944 23                  A  2503    				inc hl
001945 70                  A  2504    				ld (hl),b						001946 23                  A  2505    				inc hl
001947 D1                  A  2506    				pop de
001948 EB                  A  2507    				ex de,hl
001949 01160000            A  2508    				ld bc,22
00194D EDB0                A  2509    				ldir							00194F AF                  A  2510    				xor a
001950 0605                A  2511    				ld b,5		
001952 12                  A  2512    clrrode			ld (de),a						001953 13                  A  2513    				inc de
001954 10 FC               A  2514    				djnz clrrode
001956 ED53 46 61 00       A  2515    				ld (dhwn_temp_pointer),de		                           A  2516    					
00195B AF                  A  2517    				xor a							00195C FDE5                A  2518    fnxtpart		push iy
00195E CD 4A 48 00         A  2519    				call fs_get_partition_info
001962 FDE1                A  2520    				pop iy
001964 38 31               A  2521    				jr c,nxt_dev					001966 FECE                A  2522    				cp 0ceh							001968 28 2D               A  2523    				jr z,nxt_dev
00196A F5                  A  2524    				push af
00196B FD360001            A  2525    				ld (iy),1						00196F 3A 1B 60 00         A  2526    				ld a,(current_driver)
001973 FD7701              A  2527    				ld (iy+1),a						001976 3A 49 61 00         A  2528    				ld a,(partition_temp)	
00197A FD7707              A  2529    				ld (iy+7),a						00197D F1                  A  2530    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00197E B7                  A  2531    				or a
00197F 28 35               A  2532    				jr z,dev_mbr
001981 AF                  A  2533    				xor a
001982 FD7708              A  2534    				ld (iy+8),a						001985 FD7709              A  2535    				ld (iy+9),a						001988 FD770A              A  2536    				ld (iy+10),a					00198B FD770B              A  2537    				ld (iy+11),a
00198E CD 02 1A 00         A  2538    				call show_vol_info
001992 CD F3 19 00         A  2539    				call test_max_vol
001996 C8                  A  2540    				ret z							                           A  2541    			
001997 3A 4A 61 00         A  2542    nxt_dev			ld a,(vols_on_device_temp)		00199B B7                  A  2543    				or a
00199C C0                  A  2544    				ret nz		
00199D CD 54 1A 00         A  2545    				call test_quiet_mode
0019A1 20 06               A  2546    				jr nz,skp_cu
0019A3 3E0A                A  2547    				ld a,10
0019A5 32 F6 61 00         A  2548    				ld (cursor_x),a
0019A9 21 15 5E 00         A  2549    skp_cu			ld hl,no_vols_msg				0019AD CD 31 14 00         A  2550    				call os_show_packed_text_cond
0019B1 CD FA 13 00         A  2551    				call os_new_line_cond
0019B5 C9                  A  2552    				ret
                           A  2553    				
                           A  2554    			
0019B6 11040000            A  2555    dev_mbr			ld de,4
0019BA 19                  A  2556    				add hl,de
0019BB 7E                  A  2557    				ld a,(hl)						0019BC B7                  A  2558    				or a
0019BD C8                  A  2559    				ret z							0019BE 19                  A  2560    				add hl,de
                           A  2561    				
0019BF FDE5                A  2562    				push iy
0019C1 0604                A  2563    				ld b,4
0019C3 7E                  A  2564    sfmbrlp			ld a,(hl)						0019C4 FD7708              A  2565    				ld (iy+8),a
0019C7 23                  A  2566    				inc hl
0019C8 FD23                A  2567    				inc iy
0019CA 10 F7               A  2568    				djnz sfmbrlp
0019CC FDE1                A  2569    				pop iy
0019CE FDE5                A  2570    				push iy
0019D0 0603                A  2571    				ld b,3	
0019D2 7E                  A  2572    nsivlp			ld a,(hl)
0019D3 FD7704              A  2573    				ld (iy+4),a						0019D6 23                  A  2574    				inc hl
0019D7 FD23                A  2575    				inc iy
0019D9 10 F7               A  2576    				djnz nsivlp
0019DB FDE1                A  2577    				pop iy
                           A  2578    				
0019DD CD 02 1A 00         A  2579    				call show_vol_info
0019E1 CD F3 19 00         A  2580    				call test_max_vol	
0019E5 C8                  A  2581    				ret z							0019E6 3A 49 61 00         A  2582    				ld a,(partition_temp)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019EA 3C                  A  2583    				inc a
0019EB FE04                A  2584    				cp 4							0019ED C2 5C 19 00         A  2585    				jp nz,fnxtpart
0019F1 18 A4               A  2586    				jr nxt_dev
                           A  2587    				
                           A  2588    
0019F3                     A  2589    test_max_vol
                           A  2590    			
0019F3 11100000            A  2591    				ld de,16
0019F7 FD19                A  2592    				add iy,de			
0019F9 21 1D 60 00         A  2593    				ld hl,volume_count
0019FD 34                  A  2594    				inc (hl)
0019FE 7E                  A  2595    				ld a,(hl)
0019FF FE08                A  2596    				cp max_volumes
001A01 C9                  A  2597    				ret
                           A  2598    			
                           A  2599    			
001A02                     A  2600    show_vol_info
                           A  2601    				
001A02 CD 54 1A 00         A  2602    				call test_quiet_mode
001A06 20 06               A  2603    				jr nz,skp_cm2
001A08 3E09                A  2604    				ld a,9			
001A0A 32 F6 61 00         A  2605    				ld (cursor_x),a
001A0E 3A 1D 60 00         A  2606    skp_cm2			ld a,(volume_count)
001A12 F5                  A  2607    				push af
001A13 C630                A  2608    				add a,30h		
001A15 32 22 60 00         A  2609    				ld (vol_txt+4),a	
001A19 21 1E 60 00         A  2610    				ld hl,vol_txt
001A1D CD 52 0F 00         A  2611    				call os_print_string_cond		001A21 21 4A 61 00         A  2612    				ld hl,vols_on_device_temp
001A25 CBC6                A  2613    				set 0,(hl)						                           A  2614    			
001A27 F1                  A  2615    				pop af
001A28 FDE5                A  2616    				push iy
001A2A CD FD 1A 00         A  2617    				call os_change_volume			001A2E 28 0A               A  2618    				jr z,vform_ok					001A30 21 C5 5D 00         A  2619    svi_fe			ld hl,format_err_msg		
001A34 CD 31 14 00         A  2620    svi_pem			call os_show_packed_text_cond	001A38 18 0D               A  2621    				jr skpsvl
                           A  2622    			
001A3A CD 9F 50 00         A  2623    vform_ok		call fs_get_volume_label
001A3E 38 0E               A  2624    				jr c,svi_hwe
001A40 B7                  A  2625    				or a
001A41 20 ED               A  2626    				jr nz,svi_fe
001A43 CD 52 0F 00         A  2627    				call os_print_string_cond		                           A  2628    			
001A47 CD FA 13 00         A  2629    skpsvl			call os_new_line_cond
001A4B FDE1                A  2630    				pop iy
001A4D C9                  A  2631    				ret
                           A  2632    				
001A4E 21 11 5C 00         A  2633    svi_hwe			ld hl,disk_err_msg
001A52 18 E0               A  2634    				jr svi_pem
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2635    			
                           A  2636    			
001A54                     A  2637    test_quiet_mode
                           A  2638    			
001A54 3A 4C 61 00         A  2639    				ld a,(os_quiet_mode)
001A58 B7                  A  2640    				or a
001A59 C9                  A  2641    				ret
                           A  2642    
                           A  2643    ;----------------------------------------------
                           A  2644    
                           A  2645    
001A5A                     A  2646    show_dev_driver_name
                           A  2647    	
                           A  2648    	
001A5A CD 73 1A 00         A  2649    				call locate_driver_base			001A5E EB                  A  2650    				ex de,hl
001A5F 110C0000            A  2651    				ld de,0ch
001A63 19                  A  2652    				add hl,de
001A64 CD 57 0F 00         A  2653    				call os_print_string			001A68 C5                  A  2654    				push bc
001A69 01200100            A  2655    				ld bc,0120h
001A6D CD 89 1A 00         A  2656    				call os_print_multiple_chars	001A71 C1                  A  2657    				pop bc
001A72 C9                  A  2658    				ret
                           A  2659    
                           A  2660    
001A73                     A  2661    locate_driver_base
                           A  2662    
001A73 E5                  A  2663    				push hl							001A74 11030000            A  2664    				ld de,3							001A78 57                  A  2665    				ld d,a
001A79 ED5C                A  2666    				mlt de
001A7B 21 A2 3B 00         A  2667    				ld hl,driver_table
001A7F 19                  A  2668    				add hl,de
001A80 ED17                A  2669    				ld de,(hl)
001A82 E1                  A  2670    				pop hl
001A83 C9                  A  2671    				ret
                           A  2672    				
                           A  2673    		
                           A  2674    ;----------------------------------------------
                           A  2675    
001A84                     A  2676    os_print_multiple_chars_cond
                           A  2677    
001A84 CD 54 1A 00         A  2678    				call test_quiet_mode
001A88 C0                  A  2679    				ret nz
                           A  2680    			
001A89                     A  2681    os_print_multiple_chars
                           A  2682    
                           A  2683    ;c = char
                           A  2684    ;b = count
001A89 C5                  A  2685    				push bc
001A8A E5                  A  2686    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A8B 79                  A  2687    				ld a,c
001A8C 21 4F 57 00         A  2688    				ld hl,rep_char_txt
001A90 77                  A  2689    				ld (hl),a
001A91 E5                  A  2690    pmch_lp			push hl
001A92 CD 57 0F 00         A  2691    				call os_print_string
001A96 E1                  A  2692    				pop hl
001A97 10 F8               A  2693    				djnz pmch_lp
001A99 E1                  A  2694    				pop hl
001A9A C1                  A  2695    				pop bc
001A9B C9                  A  2696    				ret
                           A  2697    
                           A  2698    ;----------------------------------------------
                           A  2699    
                           A  2700    
001A9C 7B                  A  2701    ext_plot_char	ld a,e
001A9D C3 39 3F 00         A  2702    				jp hwsc_plot_char
                           A  2703    				
                           A  2704    
                           A  2705    ;----------------------------------------------
                           A  2706    ; Some file system related routines 
                           A  2707    ;----------------------------------------------
                           A  2708    
                           A  2709    
001AA1                     A  2710    fs_get_dir_cluster
                           A  2711    
                           A  2712    
001AA1 F5                  A  2713    				push af							001AA2 E5                  A  2714    				push hl			
001AA3 CD B9 1A 00         A  2715    				call fs_get_dir_cluster_address
001AA7 ED17                A  2716    				ld de,(hl)
001AA9 E1                  A  2717    dclopdone		pop hl
001AAA F1                  A  2718    				pop af
001AAB BF                  A  2719    				cp a							001AAC C9                  A  2720    				ret
                           A  2721    				
                           A  2722    
                           A  2723    
                           A  2724    
                           A  2725    
001AAD                     A  2726    fs_update_dir_cluster
                           A  2727    
001AAD F5                  A  2728    				push af							001AAE E5                  A  2729    				push hl			
001AAF D5                  A  2730    				push de			
001AB0 CD B9 1A 00         A  2731    				call fs_get_dir_cluster_address
001AB4 D1                  A  2732    				pop de
001AB5 ED1F                A  2733    				ld (hl),de
001AB7 18 F0               A  2734    				jr dclopdone
                           A  2735    			
                           A  2736    
                           A  2737    
                           A  2738    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2739    
001AB9                     A  2740    fs_get_dir_cluster_address
                           A  2741    
001AB9 21 2E 60 00         A  2742    				ld hl,volume_dir_clusters		001ABD 3A 1A 60 00         A  2743    				ld a,(current_volume)	
001AC1 11030000            A  2744    				ld de,3
001AC5 57                  A  2745    				ld d,a
001AC6 ED5C                A  2746    				mlt de
001AC8 19                  A  2747    				add hl,de
001AC9 C9                  A  2748    				ret
                           A  2749    				
                           A  2750    	
                           A  2751    
                           A  2752    	
                           A  2753    	
001ACA                     A  2754    fs_get_total_sectors
                           A  2755    
                           A  2756    
001ACA F5                  A  2757    				push af
001ACB E5                  A  2758    				push hl							001ACC CD DB 1A 00         A  2759    				call fs_calc_volume_offset	
001AD0 21 4A 60 00         A  2760    				ld hl,volume_mount_list+4
001AD4 19                  A  2761    				add hl,de
001AD5 ED17                A  2762    				ld de,(hl)
001AD7 E1                  A  2763    				pop hl
001AD8 F1                  A  2764    				pop af
001AD9 BF                  A  2765    				cp a							001ADA C9                  A  2766    				ret
                           A  2767    
                           A  2768    
                           A  2769    
                           A  2770    
                           A  2771    
001ADB                     A  2772    fs_calc_volume_offset
                           A  2773    
001ADB 3A 1A 60 00         A  2774    				ld a,(current_volume)			001ADF 11100000            A  2775    calc_vol		ld de,16
001AE3 57                  A  2776    				ld d,a
001AE4 ED5C                A  2777    				mlt de
001AE6 C9                  A  2778    				ret
                           A  2779    
                           A  2780    
                           A  2781    
                           A  2782    
                           A  2783    
001AE7                     A  2784    dev_to_driver_lookup
                           A  2785    
001AE7 21 1C 60 00         A  2786    				ld hl,device_count				001AEB BE                  A  2787    				cp (hl)							001AEC D0                  A  2788    				ret nc
001AED 11200000            A  2789    				ld de,32						001AF1 57                  A  2790    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AF2 ED5C                A  2791    				mlt de
001AF4 21 C6 60 00         A  2792    				ld hl,host_device_hardware_info
001AF8 19                  A  2793    				add hl,de
001AF9 7E                  A  2794    				ld a,(hl)
001AFA 37                  A  2795    				scf
001AFB C9                  A  2796    				ret
                           A  2797    				
                           A  2798    
                           A  2799    
001AFC                     A  2800    ext_change_volume
                           A  2801    
001AFC 7B                  A  2802    				ld a,e
                           A  2803    
001AFD                     A  2804    os_change_volume
                           A  2805    
001AFD 47                  A  2806    				ld b,a							001AFE FE08                A  2807    				cp max_volumes		
001B00 30 22               A  2808    				jr nc,fs_ccv2					                           A  2809    			
001B02 3A 1A 60 00         A  2810    				ld a,(current_volume)			001B06 F5                  A  2811    				push af
001B07 78                  A  2812    				ld a,b
001B08 32 1A 60 00         A  2813    				ld (current_volume),a			001B0C CD 28 1B 00         A  2814    				call fs_set_driver_for_volume	                           A  2815    				
001B10 CD AC 48 00         A  2816    				call fs_check_disk_format		001B14 38 05               A  2817    				jr c,fs_cant_chg_vols	
001B16 20 03               A  2818    				jr nz,fs_cant_chg_vols
001B18 F1                  A  2819    				pop af							001B19 AF                  A  2820    				xor a							001B1A C9                  A  2821    				ret
                           A  2822    
                           A  2823    
001B1B                     A  2824    fs_cant_chg_vols
                           A  2825    			
001B1B F1                  A  2826    				pop af
001B1C 32 1A 60 00         A  2827    				ld (current_volume),a			001B20 CD 28 1B 00         A  2828    				call fs_set_driver_for_volume	                           A  2829    				
001B24 3ECF                A  2830    fs_ccv2			ld a,0cfh						001B26 B7                  A  2831    				or a
001B27 C9                  A  2832    				ret
                           A  2833    					
                           A  2834    	
001B28                     A  2835    fs_set_driver_for_volume
                           A  2836    
001B28 CD DB 1A 00         A  2837    				call fs_calc_volume_offset		001B2C 21 47 60 00         A  2838    				ld hl,volume_mount_list+1
001B30 19                  A  2839    				add hl,de
001B31 7E                  A  2840    				ld a,(hl)
001B32 32 1B 60 00         A  2841    				ld (current_driver),a
001B36 C9                  A  2842    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2843    
                           A  2844    
                           A  2845    ;----------------------------------------------
                           A  2846    
001B37                     A  2847    ext_file_sector_list
                           A  2848    
                           A  2849    ;Input HL = cluster, E = sector offset
                           A  2850    
                           A  2851    ;Output HL = new cluster, E = new sector number
                           A  2852    ;       IX = address of LBA0 LSB of sector (int
                           A  2853    
                           A  2854    				
001B37 3A 2C 55 00         A  2855    				ld a,(fs_cluster_size)
001B3B BB                  A  2856    				cp e
001B3C 20 0A               A  2857    				jr nz,fsl_sc
001B3E CD 33 53 00         A  2858    				call get_fat_entry_for_cluster
001B42 DA 6D 16 00         A  2859    				jp c,os_fferr
001B46 1E00                A  2860    				ld e,0
001B48 CD 0A 54 00         A  2861    fsl_sc			call cluster_and_offset_to_lba
001B4C 1C                  A  2862    				inc e
001B4D 01 F1 61 00         A  2863    fsl_done		ld bc,sector_lba0
001B51 BF                  A  2864    				cp a							001B52 C9                  A  2865    				ret
                           A  2866    
                           A  2867    ;----------------------------------------------
                           A  2868    
001B53                     A  2869    os_get_disk_sector_ptr
                           A  2870     
001B53 21 F1 61 00         A  2871    				ld hl,sector_lba0
001B57 11 45 67 00         A  2872    				ld de,sector_buffer
001B5B BF                  A  2873    				cp a
001B5C C9                  A  2874    				ret
                           A  2875    				
                           A  2876    ;----------------------------------------------
                           A  2877    
                           A  2878    
001B5D E5                  A  2879    os_count_chars	push hl							001B5E 01000000            A  2880    				ld bc,0
001B62 7E                  A  2881    cch_lp			ld a,(hl)
001B63 B7                  A  2882    				or a
001B64 28 04               A  2883    				jr z,cch_end
001B66 23                  A  2884    				inc hl
001B67 03                  A  2885    				inc bc
001B68 18 F8               A  2886    				jr cch_lp
001B6A E1                  A  2887    cch_end			pop hl
001B6B C9                  A  2888    				ret
                           A  2889    				
                           A  2890    			
                           A  2891    ;----------------------------------------------
                           A  2892    ; Environment variable code V0.01
                           A  2893    ;----------------------------------------------
                           A  2894    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       00000100            A  2895    envar_buffer_size equ 256
                           A  2896    
                           A  2897    ;----------------------------------------------
                           A  2898    
001B6C                     A  2899    ext_get_envar
001B6C CC EA 15 00         A  2900    				call z,mbase_hl
                           A  2901    
001B70                     A  2902    os_get_envar
                           A  2903    
                           A  2904    ;Set: 		HL = name of required variable
                           A  2905    ;Returns:	ZF Set: DE = address of variable's 
                           A  2906    ;        	ZF Not Set: Couldn't find variable
                           A  2907    				
001B70 DD21 55 63 00       A  2908    				ld ix,envar_list-1
001B75 CD 5D 1B 00         A  2909    env_fname		call os_count_chars				001B79 78                  A  2910    				ld a,b
001B7A B1                  A  2911    				or c
001B7B 28 27               A  2912    				jr z,env_bad
                           A  2913    								
001B7D ED1201              A  2914    env_cname		lea de,ix+1
001B80 1A                  A  2915    				ld a,(de)
001B81 FEFF                A  2916    				cp 0ffh
001B83 28 1F               A  2917    				jr z,env_bad
001B85 C5                  A  2918    				push bc
001B86 41                  A  2919    				ld b,c
001B87 CD 26 12 00         A  2920    				call os_compare_strings
001B8B C1                  A  2921    				pop bc
001B8C 20 06               A  2922    				jr nz,env_nomatch
001B8E 03                  A  2923    				inc bc							001B8F EB                  A  2924    				ex de,hl
001B90 09                  A  2925    				add hl,bc
001B91 EB                  A  2926    				ex de,hl						001B92 AF                  A  2927    				xor a
001B93 C9                  A  2928    				ret			
                           A  2929    				
001B94 DD23                A  2930    env_nomatch		inc ix							001B96 CD 3C 1C 00         A  2931    				call check_envar_bounds
001B9A 20 08               A  2932    				jr nz,env_bad
001B9C DD7E00              A  2933    				ld a,(ix)
001B9F B7                  A  2934    				or a
001BA0 28 DB               A  2935    				jr z,env_cname
001BA2 18 F0               A  2936    				jr env_nomatch
                           A  2937    
001BA4 3E82                A  2938    env_bad			ld a,82h						001BA6 B7                  A  2939    				or a
001BA7 C9                  A  2940    				ret	
                           A  2941    				
                           A  2942    ;----------------------------------------------
                           A  2943    
001BA8                     A  2944    ext_set_envar
                           A  2945    
                           A  2946    ;HL = addr of variable name (zero terminated)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2947    ;DE = addr of data for variable (zero terminate
                           A  2948    
                           A  2949    ;Returns:
                           A  2950    ;ZF = Set: OK
                           A  2951    ;ZF = Not Set: No enough space for new variable
                           A  2952    		
001BA8 CC EA 15 00         A  2953    				call z,mbase_hl
001BAC CC FB 15 00         A  2954    				call z,mbase_de
                           A  2955    
001BB0 7E                  A  2956    os_set_envar	ld a,(hl)						001BB1 B7                  A  2957    				or a
001BB2 28 F0               A  2958    				jr z,env_bad
001BB4 1A                  A  2959    				ld a,(de)
001BB5 B7                  A  2960    				or a
001BB6 28 EC               A  2961    				jr z,env_bad
                           A  2962    
001BB8 E5                  A  2963    				push hl
001BB9 D5                  A  2964    				push de
001BBA CD 06 1C 00         A  2965    				call os_delete_envar			001BBE D1                  A  2966    				pop de
001BBF E1                  A  2967    				pop hl
                           A  2968    				
001BC0 DD2A 60 64 00       A  2969    				ld ix,(envar_top_loc)			001BC5 CD 3C 1C 00         A  2970    env_enlp		call check_envar_bounds
001BC9 20 D9               A  2971    				jr nz,env_bad
001BCB 7E                  A  2972    				ld a,(hl)						001BCC DD7700              A  2973    				ld (ix),a
001BCF B7                  A  2974    				or a
001BD0 28 05               A  2975    				jr z,env_ndone
001BD2 23                  A  2976    				inc hl
001BD3 DD23                A  2977    				inc ix
001BD5 18 EE               A  2978    				jr env_enlp
                           A  2979    				
001BD7 CD 3C 1C 00         A  2980    env_ndone		call check_envar_bounds			001BDB 20 C7               A  2981    				jr nz,env_bad
001BDD DD36003D            A  2982    				ld (ix),'='
001BE1 DD23                A  2983    				inc ix
                           A  2984    
001BE3 CD 3C 1C 00         A  2985    env_evlp		call check_envar_bounds			001BE7 20 BB               A  2986    				jr nz,env_bad
001BE9 1A                  A  2987    				ld a,(de)
001BEA DD7700              A  2988    				ld (ix),a
001BED B7                  A  2989    				or a
001BEE 28 05               A  2990    				jr z,env_vdone
001BF0 13                  A  2991    				inc de
001BF1 DD23                A  2992    				inc ix
001BF3 18 EE               A  2993    				jr env_evlp
                           A  2994    
001BF5 DD23                A  2995    env_vdone		inc ix
001BF7 DD3600FF            A  2996    				ld (ix),0ffh
001BFB DD22 60 64 00       A  2997    				ld (envar_top_loc),ix			001C00 AF                  A  2998    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C01 C9                  A  2999    				ret
                           A  3000    
                           A  3001    	
                           A  3002    ;----------------------------------------------
                           A  3003    
001C02                     A  3004    ext_delete_envar
                           A  3005    
001C02 CC EA 15 00         A  3006    				call z,mbase_hl
                           A  3007    
001C06                     A  3008    os_delete_envar
                           A  3009    
                           A  3010    ;HL = name of required variable (null terminate
                           A  3011    ;ZF = Set: OK
                           A  3012    ;ZF = Not Set: Didnt find named variable
                           A  3013    
                           A  3014    
001C06 CD 70 1B 00         A  3015    				call os_get_envar				001C0A C0                  A  3016    				ret nz
                           A  3017    				
001C0B D5                  A  3018    				push de
001C0C E1                  A  3019    				pop hl
001C0D AF                  A  3020    				xor a
001C0E ED42                A  3021    				sbc hl,bc						                           A  3022    				
001C10 13                  A  3023    env_fnxt		inc de							001C11 D5                  A  3024    				push de
001C12 DDE1                A  3025    				pop ix
001C14 CD 3C 1C 00         A  3026    				call check_envar_bounds
001C18 20 8A               A  3027    				jr nz,env_bad
001C1A 1A                  A  3028    				ld a,(de)
001C1B B7                  A  3029    				or a
001C1C 20 F2               A  3030    				jr nz,env_fnxt
                           A  3031    
001C1E 13                  A  3032    env_gnxt		inc de							001C1F EB                  A  3033    				ex de,hl
001C20 7E                  A  3034    env_collp		ld a,(hl)
001C21 12                  A  3035    				ld (de),a						001C22 FEFF                A  3036    				cp 0ffh
001C24 28 0F               A  3037    				jr z,env_clspd					001C26 E5                  A  3038    				push hl
001C27 DDE1                A  3039    				pop ix
001C29 CD 3C 1C 00         A  3040    				call check_envar_bounds
001C2D C2 A4 1B 00         A  3041    				jr nz,env_bad
001C31 23                  A  3042    				inc hl
001C32 13                  A  3043    				inc de
001C33 18 EB               A  3044    				jr env_collp
                           A  3045    
001C35 ED53 60 64 00       A  3046    env_clspd		ld (envar_top_loc),de			001C3A AF                  A  3047    				xor a
001C3B C9                  A  3048    				ret
                           A  3049    				
                           A  3050    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3051    
001C3C                     A  3052    check_envar_bounds
                           A  3053    
001C3C C5                  A  3054    				push bc
001C3D E5                  A  3055    				push hl
001C3E DDE5                A  3056    				push ix
001C40 E1                  A  3057    				pop hl
001C41 01 57 64 00         A  3058    				ld bc,1+(envar_list+envar_buffe
001C45 AF                  A  3059    				xor a
001C46 ED42                A  3060    				sbc hl,bc
001C48 38 05               A  3061    				jr c,env_bok
001C4A AF                  A  3062    				xor a
001C4B 3C                  A  3063    				inc a
001C4C E1                  A  3064    				pop hl
001C4D C1                  A  3065    				pop bc
001C4E C9                  A  3066    				ret
                           A  3067    
001C4F AF                  A  3068    env_bok			xor a
001C50 E1                  A  3069    				pop hl
001C51 C1                  A  3070    				pop bc
001C52 C9                  A  3071    				ret
                           A  3072    						
                           A  3073    ;----------------------------------------------
                           A  3074    
001C53                     A  3075    os_get_keymap_location
                           A  3076    
001C53 21 66 5E 00         A  3077    				ld hl,unshifted_keymap
001C57 BF                  A  3078    				cp a							001C58 C9                  A  3079    				ret
                           A  3080    
                           A  3081    
                           A  3082    ;----------------------------------------------
                           A  3083    
                           A  3084    
001C59 CC EA 15 00         A  3085    ext_play_audio	call z,mbase_hl
                           A  3086    				
001C5D CD AB 43 00         A  3087    os_play_audio	call hwsc_play_audio
001C61 C9                  A  3088    				ret
                           A  3089    				
                           A  3090    				
                           A  3091    ;==============================================
                           A  3092    ; Internal OS command routines
                           A  3093    ;==============================================
                           A  3094    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C62                     B     5    os_cmd_c
                           B     6    
001C62 CD 98 1C 00         B     7    				call get_start_and_end			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B     8    				
001C66 CD C1 1C 00         B     9    				call hexword_or_bust			001C6A CA 52 16 00         B    10    				jp z,os_no_d_addr_error
001C6E ED53 04 62 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C73 CD 86 1C 00         B    13    				call test_mem_range				001C77 DA 56 16 00         B    14    				jp c,os_range_error				001C7B ED5B 04 62 00       B    15    				ld de,(copy_dest_address)
001C80 EDB0                B    16    				ldir
                           B    17    
001C82 3E20                B    18    copy_done		ld a,020h						001C84 B7                  B    19    				or a
001C85 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C86                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C86 2A 01 62 00         B    33    				ld hl,(cmdop_end_address)	
001C8A ED4B FE 61 00       B    34    				ld bc,(cmdop_start_address)
001C8F C5                  B    35    				push bc
001C90 AF                  B    36    				xor a
001C91 ED42                B    37    				sbc hl,bc
001C93 E5                  B    38    				push hl
001C94 C1                  B    39    				pop bc
001C95 03                  B    40    				inc bc
001C96 E1                  B    41    				pop hl
001C97 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C98                     B    46    get_start_and_end
                           B    47    			
001C98 CD D6 10 00         B    48    				call ascii_to_hexword			001C9C ED53 FE 61 00       B    49    				ld (cmdop_start_address),de
001CA1 23                  B    50    				inc hl
001CA2 28 09               B    51    				jr z,st_addrok
001CA4 E1                  B    52    				pop hl							001CA5 FE82                B    53    				cp 82h							001CA7 28 02               B    54    				jr z,c_badhex
001CA9 3E16                B    55    				ld a,016h						001CAB B7                  B    56    c_badhex		or a
001CAC C9                  B    57    				ret
                           B    58    				
001CAD CD D6 10 00         B    59    st_addrok		call ascii_to_hexword			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001CB1 ED53 01 62 00       B    60    				ld (cmdop_end_address),de
001CB6 23                  B    61    				inc hl
001CB7 B7                  B    62    				or a
001CB8 C8                  B    63    				ret z
001CB9 E1                  B    64    				pop hl							001CBA FE82                B    65    				cp 82h							001CBC 28 ED               B    66    				jr z,c_badhex
001CBE 3E1C                B    67    				ld a,01ch						001CC0 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001CC1                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001CC1 CD D6 10 00         B    79    				call ascii_to_hexword		
001CC5 FE82                B    80    				cp 82h
001CC7 20 03               B    81    				jr nz,hex_good
001CC9 E1                  B    82    				pop hl						; r
001CCA B7                  B    83    				or a	
001CCB C9                  B    84    				ret			 
001CCC FE81                B    85    hex_good		cp 081h						; n
001CCE C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CCF                     B     5    os_cmd_cd	
                           B     6    
001CCF CD CA 16 00         B     7    				call os_check_volume_format	
001CD3 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001CD4 7E                  B    11    				ld a,(hl)						001CD5 B7                  B    12    				or a				
001CD6 CA 7D 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001CDA 7E                  B    16    				ld a,(hl)						001CDB 23                  B    17    				inc hl
001CDC 46                  B    18    				ld b,(hl)
001CDD 2B                  B    19    				dec hl
001CDE FE2E                B    20    				cp '.'			
001CE0 20 08               B    21    				jr nz,cd_nual
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CE2 B8                  B    22    				cp b
001CE3 20 05               B    23    				jr nz,cd_nual
001CE5 CD 21 17 00         B    24    				call os_parent_dir	
001CE9 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CEA FE2F                B    28    cd_nual			cp 02fh			
001CEC 20 05               B    29    				jr nz,cd_nogor					001CEE CD 27 17 00         B    30    				call os_root_dir	
001CF2 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CF3 FE25                B    34    cd_nogor		cp '%'							001CF5 20 1F               B    35    				jr nz,cd_no_assign
001CF7 CD 70 1B 00         B    36    				call os_get_envar
001CFB 28 04               B    37    				jr z,cd_evok
001CFD 3ED1                B    38    				ld a,0d1h						001CFF B7                  B    39    				or a
001D00 C9                  B    40    				ret
001D01 11000000            B    41    cd_evok			ld de,0
001D05 5E                  B    42    				ld e,(hl)
001D06 23                  B    43    				inc hl
001D07 56                  B    44    				ld d,(hl)
001D08 23                  B    45    				inc hl
001D09 7E                  B    46    				ld a,(hl)
001D0A D5                  B    47    				push de
001D0B CD FD 1A 00         B    48    				call os_change_volume
001D0F D1                  B    49    				pop de
001D10 C0                  B    50    				ret nz
001D11 CD AD 1A 00         B    51    				call fs_update_dir_cluster
001D15 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001D16                     B    55    cd_no_assign
                           B    56    			
001D16 3A 1A 60 00         B    57    				ld a,(current_volume)
001D1A 32 48 69 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001D1E E5                  B    60    				push hl
001D1F DDE1                B    61    				pop ix
001D21 DD7E04              B    62    				ld a,(ix+4)
001D24 FE3A                B    63    				cp ':'							001D26 20 25               B    64    				jr nz,cd_nchvol
001D28 11 1F 60 00         B    65    				ld de,vol_txt+1
001D2C 0603                B    66    				ld b,3
001D2E CD 26 12 00         B    67    				call os_compare_strings
001D32 20 19               B    68    				jr nz,cd_nchvol
001D34 11050000            B    69    				ld de,5
001D38 19                  B    70    				add hl,de
001D39 22 B7 62 00         B    71    				ld (os_args_loc),hl				001D3D DD7E03              B    72    				ld a,(ix+3)						001D40 D630                B    73    				sub 030h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D42 CD FD 1A 00         B    74    				call os_change_volume
001D46 C0                  B    75    				ret nz							001D47 CD 27 17 00         B    76    				call os_root_dir				001D4B 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D4D CD A1 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D51 ED53 45 69 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D56 E5                  B    83    cd_mollp		push hl
001D57 CD 17 17 00         B    84    				call os_change_dir				001D5B E1                  B    85    				pop hl
001D5C 20 0A               B    86    				jr nz,cd_dcherr
001D5E 7E                  B    87    cd_mol			ld a,(hl)						001D5F 23                  B    88    				inc hl
001D60 B7                  B    89    				or a
001D61 C8                  B    90    				ret z
001D62 FE2F                B    91    				cp 02fh
001D64 28 F0               B    92    				jr z,cd_mollp
001D66 18 F6               B    93    				jr cd_mol
                           B    94    					
001D68                     B    95    cd_dcherr	
                           B    96    			
001D68 F5                  B    97    				push af							001D69 ED5B 45 69 00       B    98    				ld de,(original_dir_cd_cmd)
001D6E CD AD 1A 00         B    99    				call fs_update_dir_cluster
001D72 3A 48 69 00         B   100    				ld a,(original_vol_cd_cmd)
001D76 CD FD 1A 00         B   101    				call os_change_volume	
001D7A F1                  B   102    				pop af
001D7B B7                  B   103    				or a
001D7C C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D7D                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D7D 0610                B   113    				ld b,max_dirs
001D7F 0E00                B   114    				ld c,0
001D81 C5                  B   115    lp1				push bc
001D82 CD A1 1A 00         B   116    				call fs_get_dir_cluster
001D86 C1                  B   117    				pop bc
001D87 D5                  B   118    				push de
001D88 0C                  B   119    				inc c
001D89 C5                  B   120    				push bc
001D8A CD 21 17 00         B   121    				call os_parent_dir
001D8E C1                  B   122    				pop bc
001D8F 20 02               B   123    				jr nz,shdir_lp
001D91 10 EE               B   124    				djnz lp1
                           B   125    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D93 D1                  B   126    shdir_lp		pop de
001D94 C5                  B   127    				push bc
001D95 CD AD 1A 00         B   128    				call fs_update_dir_cluster
001D99 CD 4D 17 00         B   129    				call os_get_current_dir_name
001D9D CD 57 0F 00         B   130    				call os_print_string
001DA1 21 B3 1D 00         B   131    				ld hl,cd_fwdslash_txt
001DA5 CD 57 0F 00         B   132    				call os_print_string
001DA9 C1                  B   133    				pop bc
001DAA 0D                  B   134    				dec c
001DAB 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001DAD CD FF 13 00         B   137    				call os_new_line	
001DB1 AF                  B   138    				xor a
001DB2 C9                  B   139    				ret
                           B   140    			
001DB3 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006945            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006948            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DB5                     B     5    os_cmd_cls
                           B     6    
001DB5 CD C3 3E 00         B     7    				call hwsc_clear_screen
001DB9 AF                  B     8    				xor a
001DBA C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001DBB                     B     5    os_cmd_colon
                           B     6    	
001DBB CD C1 1C 00         B     7    				call hexword_or_bust			001DBF CA 42 16 00         B     8    				jp z,os_no_start_addr			001DC3 D5                  B     9    				push de
001DC4 DDE1                B    10    				pop ix							                           B    11    			
001DC6 CD C1 1C 00         B    12    wmblp			call hexword_or_bust			001DCA 28 07               B    13    				jr z,os_ccmdn
001DCC DD7300              B    14    				ld (ix),e						001DCF DD23                B    15    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
001DD1 18 F3               B    16    				jr wmblp
                           B    17    
001DD3 AF                  B    18    os_ccmdn		xor a
001DD4 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001DD5 FD21 BC 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DDA FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DDE CD C1 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DE2 28 05               B    10    				jr z,d_no_hex					001DE4 ED53 33 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001DE9 3A BC 5F 00         B    13    d_no_hex		ld a,(charmap_rows)				001DED D602                B    14    				sub a,2
001DEF 47                  B    15    				ld b,a
001DF0 C5                  B    16    dis_loop		push bc
                           B    17    				
001DF1 DD2A 33 29 00       B    18    				ld ix,(dis_addr)				001DF6 CD 9E 23 00         B    19    				call show_ix					001DFA 3E20                B    20    				ld a,' '
001DFC CD 92 23 00         B    21    				call show_ascii_char
                           B    22    
001E00 FD21 BC 23 00       B    23    				ld iy,prefix_bits_loc
001E05 FD360000            B    24    				ld (iy),0						001E09 CD 45 1E 00         B    25    				call dis_instr					001E0D DD23                B    26    				inc ix							                           B    27    				
001E0F 3E1A                B    28    				ld a,26							001E11 32 F6 61 00         B    29    				ld (cursor_pos+1),a				001E15 ED4B 33 29 00       B    30    				ld bc,(dis_addr)
001E1A DD22 33 29 00       B    31    				ld (dis_addr),ix				001E1F DDE5                B    32    				push ix
001E21 E1                  B    33    				pop hl
001E22 AF                  B    34    				xor a
001E23 ED42                B    35    				sbc hl,bc						001E25 7D                  B    36    				ld a,l
001E26 E607                B    37    				and 7
001E28 6F                  B    38    				ld l,a
001E29 0A                  B    39    shexoplp		ld a,(bc)						001E2A CD 81 23 00         B    40    				call show_hex_byte
001E2E 3E20                B    41    				ld a,' '
001E30 CD 92 23 00         B    42    				call show_ascii_char
001E34 03                  B    43    				inc bc
001E35 2D                  B    44    				dec l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E36 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E38 CD FF 13 00         B    47    				call os_new_line
001E3C C1                  B    48    				pop bc
001E3D 10 B1               B    49    				djnz dis_loop
                           B    50    
001E3F CD FF 13 00         B    51    				call os_new_line
001E43 AF                  B    52    				xor a
001E44 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E45 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E48 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E4C 28 04               B    73    			jr z,z80_list					; T
001E4E FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E52                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E52 FE40                B    79    			cp 40h
001E54 20 0A               B    80    			jr nz,not_sis
001E56 FDCB00B6            B    81    			res il_prefix,(iy)
001E5A FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E5E 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E60 FE49                B    85    not_sis		cp 49h
001E62 20 0A               B    86    			jr nz,not_lis
001E64 FDCB00B6            B    87    			res il_prefix,(iy)
001E68 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E6C 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E6E FE52                B    91    not_lis		cp 52h
001E70 20 0A               B    92    			jr nz,not_sil
001E72 FDCB00F6            B    93    			set il_prefix,(iy)
001E76 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E7A 18 0C               B    95    			jr set_adl_pf
                           B    96    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E7C FE5B                B    97    not_sil		cp 5bh
001E7E 20 11               B    98    			jr nz,not_adl_prefix_byte
001E80 FDCB00F6            B    99    			set il_prefix,(iy)
001E84 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E88 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E8C DD23                B   103    			inc ix
001E8E DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E91                     B   108    not_adl_prefix_byte			
                           B   109    			
001E91 FECB                B   110    			cp 0cbh								001E93 20 08               B   111    			jr nz,not_cb
001E95 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E99 DD23                B   113    			inc ix
001E9B 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E9D FEED                B   116    not_cb		cp 0edh
001E9F 20 08               B   117    			jr nz,not_ed
001EA1 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001EA5 DD23                B   119    			inc ix
001EA7 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001EA9 FEDD                B   122    not_ed		cp 0ddh
001EAB 20 18               B   123    			jr nz,not_dd
001EAD CD E0 20 00         B   124    do_dd		call check_nxt_byte_prefix			001EB1 28 92               B   125    			jr z,dis_instr						001EB3 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001EB7 FECB                B   127    xdcb_query	cp 0cbh								001EB9 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001EBB FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001EBF DD23                B   130    			inc ix								001EC1 DD23                B   131    			inc ix								001EC3 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001EC5 FEFD                B   134    not_dd		cp 0fdh
001EC7 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001EC9 CD E0 20 00         B   136    do_fd		call check_nxt_byte_prefix
001ECD CA 45 1E 00         B   137    			jr z,dis_instr	
001ED1 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001ED5 18 E0               B   139    			jr xdcb_query
                           B   140    
001ED7                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001ED7 DD7E00              B   145    			ld a,(ix)	
001EDA E6C0                B   146    			and 11000000b			; seperate 
001EDC 07                  B   147    			rlca
001EDD 07                  B   148    			rlca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EDE FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EE1 DD7E00              B   151    			ld a,(ix)
001EE4 E638                B   152    			and 00111000b
001EE6 CB3F                B   153    			srl a
001EE8 CB3F                B   154    			srl a
001EEA CB3F                B   155    			srl a	
001EEC FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EEF DD7E00              B   158    			ld a,(ix)
001EF2 E607                B   159    			and 00000111b
001EF4 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001EF7 DD7E00              B   162    			ld a,(ix)
001EFA E630                B   163    			and 00110000b
001EFC CB3F                B   164    			srl a
001EFE CB3F                B   165    			srl a
001F00 CB3F                B   166    			srl a
001F02 CB3F                B   167    			srl a
001F04 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F07 DD7E00              B   170    			ld a,(ix)
001F0A E608                B   171    			and 00001000b
001F0C CB3F                B   172    			srl a
001F0E CB3F                B   173    			srl a
001F10 CB3F                B   174    			srl a
001F12 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F15 CD EE 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F19 78                  B   181    index_table	ld a,b							; a
001F1A B7                  B   182    			or a
001F1B 28 07               B   183    			jr z,parse_instr				; m
001F1D CB7E                B   184    d_filp		bit 7,(hl)						; w
001F1F 23                  B   185    			inc hl							; o
001F20 28 FB               B   186    			jr z,d_filp					
001F22 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001F24 FD21 BC 23 00       B   190    parse_instr	ld iy,opcode_vars
001F29 01000000            B   191    			ld bc,0
001F2D 7E                  B   192    			ld a,(hl)						;ge
001F2E FE80                B   193    			cp 80h
001F30 C8                  B   194    			ret z
001F31 E67F                B   195    			and 7fh
                           B   196    			
001F33 FE26                B   197    			cp '&'							;sy
001F35 20 28               B   198    			jr nz,not_adlsym
001F37 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F3B CA C9 20 00         B   200    			jr z,next_opcode_ascii_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F3F 0600                B   201    			ld b,0
001F41 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F45 28 02               B   203    			jr z,naplsb
001F47 CBC0                B   204    			set 0,b
001F49 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F4D 28 02               B   206    			jr z,napmsb
001F4F CBC8                B   207    			set 1,b
001F51 E5                  B   208    napmsb		push hl
001F52 21 1B 29 00         B   209    			ld hl,adl_prefix_list
001F56 CD 19 1F 00         B   210    			call index_table				; r
001F5A E1                  B   211    			pop hl
001F5B C3 C9 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F5F FE5E                B   214    not_adlsym	cp '^'							;sy
001F61 20 0D               B   215    			jr nz,d_not_imm8
001F63 DD23                B   216    			inc ix							;th
001F65 DD7E00              B   217    			ld a,(ix)
001F68 CD 81 23 00         B   218    			call show_hex_byte
001F6C C3 C9 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F70 FE21                B   221    d_not_imm8	cp '!'							;sy
001F72 20 26               B   222    			jr nz,d_not_imm16					001F74 11020000            B   223    			ld de,2
001F78 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F7C 28 08               B   225    			jr z,imm16
001F7E 13                  B   226    			inc de
001F7F DD7E03              B   227    			ld a,(ix+3)
001F82 CD 81 23 00         B   228    			call show_hex_byte
001F86 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F89 CD 81 23 00         B   230    			call show_hex_byte			
001F8D DD7E01              B   231    			ld a,(ix+1)						;th
001F90 CD 81 23 00         B   232    			call show_hex_byte
001F94 DD19                B   233    			add ix,de						;ad
001F96 C3 C9 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F9A FE2F                B   236    d_not_imm16	cp '/'							;sy
001F9C 20 36               B   237    			jr nz,d_not_sb
001F9E FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001FA2 28 05               B   239    			jr z,norm_dbyte
001FA4 DD7EFF              B   240    			ld a,(ix-1)						;if
001FA7 18 05               B   241    			jr xdcb_dbyte
001FA9 DD23                B   242    norm_dbyte	inc ix
001FAB DD7E00              B   243    			ld a,(ix)						;th
001FAE CB7F                B   244    xdcb_dbyte	bit 7,a
001FB0 20 10               B   245    			jr nz,d_sbin					;sh
001FB2 F5                  B   246    			push af
001FB3 3E2B                B   247    			ld a,'+'
001FB5 CD 92 23 00         B   248    			call show_ascii_char
001FB9 F1                  B   249    			pop af
001FBA CD 81 23 00         B   250    			call show_hex_byte
001FBE C3 C9 20 00         B   251    			jp next_opcode_ascii_char
001FC2 F5                  B   252    d_sbin		push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FC3 3E2D                B   253    			ld a,'-'
001FC5 CD 92 23 00         B   254    			call show_ascii_char
001FC9 F1                  B   255    			pop af
001FCA ED44                B   256    			neg
001FCC CD 81 23 00         B   257    			call show_hex_byte
001FD0 C3 C9 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FD4 FE64                B   260    d_not_sb	cp 'd'							;sy
001FD6 20 1E               B   261    			jr nz,d_not_pcdip
001FD8 DD23                B   262    			inc ix
001FDA 01000000            B   263    			ld bc,0
001FDE DD7E00              B   264    			ld a,(ix)
001FE1 CB7F                B   265    			bit 7,a
001FE3 28 01               B   266    			jr z,d_spcd_pos
001FE5 0B                  B   267    			dec bc
001FE6 4F                  B   268    d_spcd_pos	ld c,a
001FE7 03                  B   269    			inc bc
001FE8 DDE5                B   270    			push ix
001FEA DD09                B   271    			add ix,bc
001FEC CD 9E 23 00         B   272    			call show_ix
001FF0 DDE1                B   273    			pop ix
001FF2 C3 C9 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FF6 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FF8 20 16               B   277    			jr nz,d_not_sdig
001FFA 23                  B   278    			inc hl							;th
001FFB 01000000            B   279    			ld bc,0
001FFF 4E                  B   280    			ld c,(hl)
002000 FD21 BC 23 00       B   281    			ld iy,opcode_vars
002005 FD09                B   282    			add iy,bc
002007 FD7E00              B   283    			ld a,(iy)						;a 
00200A C630                B   284    			add a,30h						;co
00200C C3 C5 20 00         B   285    			jp d_output_char
                           B   286    
002010 FE5F                B   287    d_not_sdig	cp '_'
002012 20 12               B   288    			jr nz,d_nhlsubst				; s
002014 E5                  B   289    			push hl
002015 21 F3 28 00         B   290    			ld hl,hl_subs
002019 CD D1 20 00         B   291    hl_subst	call prefix_to_offset
00201D CD 19 1F 00         B   292    			call index_table				; r
002021 E1                  B   293    			pop hl
002022 C3 C9 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002026 FE7C                B   296    d_nhlsubst	cp '|'
002028 20 07               B   297    			jr nz,d_noinvhls
00202A E5                  B   298    			push hl
00202B 21 F9 28 00         B   299    			ld hl,inv_hl_subs
00202F 18 E8               B   300    			jr hl_subst
                           B   301    			
002031 FE68                B   302    d_noinvhls	cp 'h'							;sy
002033 20 07               B   303    			jr nz,d_nhsubst
002035 E5                  B   304    			push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002036 21 FF 28 00         B   305    			ld hl,h_subs
00203A 18 DD               B   306    			jr hl_subst
                           B   307    			
00203C FE6C                B   308    d_nhsubst	cp 'l'							;sy
00203E 20 07               B   309    			jr nz,d_nlsubst
002040 E5                  B   310    			push hl
002041 21 06 29 00         B   311    			ld hl,l_subs
002045 18 D2               B   312    			jr hl_subst
                           B   313    			
002047 FE24                B   314    d_nlsubst	cp '$'
002049 20 07               B   315    			jr nz,d_nihlsubst				; s
00204B E5                  B   316    			push hl
00204C 21 0D 29 00         B   317    			ld hl,ind_hl_subs
002050 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002052                     B   321    d_nihlsubst	
                           B   322    
002052 FE7E                B   323    			cp '~'							; s
002054 20 1F               B   324    			jr nz,ntable_r
002056 11 48 28 00         B   325    			ld de,table_r
00205A 23                  B   326    do_table 	inc hl
00205B 01000000            B   327    			ld bc,0							; t
00205F 4E                  B   328    			ld c,(hl)
002060 FD21 BC 23 00       B   329    			ld iy,opcode_vars
002065 FD09                B   330    			add iy,bc
002067 FD4600              B   331    			ld b,(iy)						;in
00206A E5                  B   332    			push hl
00206B EB                  B   333    			ex de,hl
00206C CD 19 1F 00         B   334    			call index_table				; r
002070 E1                  B   335    			pop hl
002071 C3 C9 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002075 11 53 28 00         B   338    ntable_r	ld de,table_r2					; s
002079 FE3D                B   339    			cp '='
00207B 28 DD               B   340    			jr z,do_table
                           B   341    			
00207D 11 5E 28 00         B   342    			ld de,table_rp					; s
002081 FE40                B   343    			cp '@'
002083 28 D5               B   344    			jr z,do_table 
                           B   345    			
002085 11 65 28 00         B   346    			ld de,table_rp2					; s
002089 FE2A                B   347    			cp '*'
00208B 28 CD               B   348    			jr z,do_table
                           B   349    			
00208D 11 CB 28 00         B   350    			ld de,table_rp3					; s
002091 FE3C                B   351    			cp '<'
002093 28 C5               B   352    			jr z,do_table
                           B   353    			
002095 11 D3 28 00         B   354    			ld de,table_rp4					; s
002099 FE7D                B   355    			cp '}'
00209B 28 BD               B   356    			jr z,do_table
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   357    			
00209D 11 6D 28 00         B   358    			ld de,table_cc					; s
0020A1 FE23                B   359    			cp '#'
0020A3 28 B5               B   360    			jr z,do_table 
                           B   361    			
0020A5 11 79 28 00         B   362    			ld de,table_alu					; s
0020A9 FE3A                B   363    			cp ':'
0020AB 28 AD               B   364    			jr z,do_table 
                           B   365    			
0020AD 11 A5 28 00         B   366    			ld de,table_rot					; s
0020B1 FE25                B   367    			cp '%'
0020B3 28 A5               B   368    			jr z,do_table 
                           B   369    			
0020B5 11 E3 28 00         B   370    			ld de,table_rst					; s
0020B9 FE3B                B   371    			cp ';'
0020BB 28 9D               B   372    			jr z,do_table 
                           B   373    
0020BD 11 DB 28 00         B   374    			ld de,table_rp5					; s
0020C1 FE7B                B   375    			cp '{'
0020C3 28 95               B   376    			jr z,do_table 
                           B   377    
0020C5                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0020C5                     B   382    d_output_char
                           B   383    
0020C5 CD 92 23 00         B   384    			call show_ascii_char
                           B   385    
0020C9                     B   386    next_opcode_ascii_char
                           B   387    
0020C9 CB7E                B   388    			bit 7,(hl)						;if
0020CB C0                  B   389    			ret nz
0020CC 23                  B   390    			inc hl
0020CD C3 24 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0020D1                     B   397    prefix_to_offset
                           B   398    
0020D1 0602                B   399    			ld b,2							;se
0020D3 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020D7 C0                  B   401    			ret nz
0020D8 05                  B   402    			dec b
0020D9 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0020DD C0                  B   404    			ret nz
0020DE 05                  B   405    			dec b
0020DF C9                  B   406    			ret
                           B   407    			
                           B   408    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E0                     B   409    check_nxt_byte_prefix			
                           B   410    
0020E0 DD23                B   411    			inc ix
0020E2 DD7E00              B   412    			ld a,(ix)
0020E5 FEDD                B   413    			cp 0ddh
0020E7 C8                  B   414    			ret z
0020E8 FEED                B   415    			cp 0edh
0020EA C8                  B   416    			ret z
0020EB FEFD                B   417    			cp 0fdh
0020ED C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020EE                     B   428    find_instruction_ascii
                           B   429    
0020EE 0600                B   430    			ld b,0						; defau
                           B   431    
0020F0 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020F4 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020F6 21 22 28 00         B   434    			ld hl,ddcb_fdcb_z6		
0020FA FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020FD FD7E 03             B   436    			ld a,(iy+var_z)
002100 FE06                B   437    			cp 6
002102 C8                  B   438    			ret z
002103 21 EA 27 00         B   439    			ld hl,ddcb_fdcb_zn6					002107 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002108                     B   444    not_ddcb_fdcb_inst
                           B   445    
002108 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
00210C 28 08               B   447    			jr z,not_cb_inst
00210E 21 72 25 00         B   448    			ld hl,cb_group		
002112 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
002115 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002116                     B   454    not_cb_inst
                           B   455    
002116 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
00211A CA 3B 22 00         B   457    			jr z,not_ed_inst
                           B   458    
00211E FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
002121 B7                  B   460    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002122 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
002124 FD7E 03             B   464    			ld a,(iy+var_z)				
002127 B7                  B   465    			or a
002128 20 0D               B   466    			jr nz,notedx0z0
00212A 21 99 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
00212E FD7E 02             B   468    			ld a,(iy+var_y)
002131 FE06                B   469    			cp 6
002133 C0                  B   470    			ret nz
002134 0601                B   471    			ld b,1
002136 C9                  B   472    			ret
                           B   473    
002137 FE01                B   474    notedx0z0	cp 1
002139 20 0D               B   475    			jr nz,notedx0z1
00213B 21 AA 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
00213F FD7E 02             B   477    			ld a,(iy+var_y)
002142 FE06                B   478    			cp 6
002144 C0                  B   479    			ret nz
002145 0601                B   480    			ld b,1
002147 C9                  B   481    			ret
                           B   482    
002148 FE02                B   483    notedx0z1	cp 2
00214A 20 05               B   484    			jr nz,notedx0z2
00214C 21 C0 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
002150 C9                  B   486    			ret
                           B   487    
002151 FE03                B   488    notedx0z2	cp 3
002153 20 05               B   489    			jr nz,notedx0z3
002155 21 CC 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002159 C9                  B   491    			ret
                           B   492    			
00215A FE04                B   493    notedx0z3	cp 4
00215C 20 05               B   494    			jr nz,notedx0z4
00215E 21 D8 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002162 C9                  B   496    			ret
                           B   497    
002163 FE06                B   498    notedx0z4	cp 6
002165 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002167 21 E2 25 00         B   500    			ld hl,ed_x0_z6
00216B C9                  B   501    			ret
                           B   502    
00216C FE07                B   503    notedx0z6	cp 7
00216E C2 45 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002172 21 ED 25 00         B   505    			ld hl,ed_x0_z7
002176 FD46 05             B   506    			ld b,(iy+var_q)
002179 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
00217A FE01                B   511    notedx0		cp 1	
00217C 20 68               B   512    			jr nz,ed_xn1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   513    
00217E FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002181 B7                  B   515    			or a
002182 20 0D               B   516    			jr nz,ed_x1_zn0
002184 21 02 26 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002188 FD7E 02             B   518    			ld a,(iy+var_y)
00218B FE06                B   519    			cp 6
00218D C0                  B   520    			ret nz
00218E 0601                B   521    			ld b,1
002190 C9                  B   522    			ret
                           B   523    			
002191 FE01                B   524    ed_x1_zn0	cp 1
002193 20 0D               B   525    			jr nz,ed_x1_zn1
002195 21 12 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002199 FD7E 02             B   527    			ld a,(iy+var_y)
00219C FE06                B   528    			cp 6
00219E C0                  B   529    			ret nz
00219F 0601                B   530    			ld b,1
0021A1 C9                  B   531    			ret
                           B   532    		
0021A2 FE02                B   533    ed_x1_zn1	cp 2
0021A4 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0021A6 21 27 26 00         B   535    			ld hl,ed_x1_z2	
0021AA FD46 05             B   536    			ld b,(iy+var_q)
0021AD C9                  B   537    			ret
                           B   538    
0021AE FE03                B   539    ed_x1_zn2	cp 3
0021B0 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0021B2 21 3D 26 00         B   541    			ld hl,ed_x1_z3	
0021B6 FD46 05             B   542    			ld b,(iy+var_q)
0021B9 C9                  B   543    			ret
                           B   544    			
0021BA FE04                B   545    ed_x1_zn3	cp 4							;z 
0021BC 20 08               B   546    			jr nz,ed_x1_zn4
0021BE 21 52 26 00         B   547    			ld hl,ed_x1_z4
0021C2 FD46 02             B   548    			ld b,(iy+var_y)
0021C5 C9                  B   549    			ret
                           B   550    			
0021C6 FE05                B   551    ed_x1_zn4	cp 5
0021C8 20 08               B   552    			jr nz,ed_x1_zn5
0021CA 21 8A 26 00         B   553    			ld hl,ed_x1_z5					;z 
0021CE FD46 02             B   554    			ld b,(iy+var_y)
0021D1 C9                  B   555    			ret
                           B   556    			
0021D2 FE06                B   557    ed_x1_zn5	cp 6
0021D4 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021D6 21 B9 26 00         B   559    			ld hl,ed_x1_z6
0021DA FD46 02             B   560    			ld b,(iy+var_y)
0021DD C9                  B   561    			ret
                           B   562    			
0021DE 21 DE 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021E2 FD46 02             B   564    			ld b,(iy+var_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021E5 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021E6 FE02                B   569    ed_xn1		cp 2
0021E8 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021EA FD46 02             B   572    			ld b,(iy+var_y)
0021ED FD7E 03             B   573    			ld a,(iy+var_z)
0021F0 B7                  B   574    			or a
0021F1 20 05               B   575    			jr nz,edx2zn0
0021F3 21 02 27 00         B   576    			ld hl,ed_x2_z0					;x=
0021F7 C9                  B   577    			ret
                           B   578    
0021F8 FE01                B   579    edx2zn0		cp 1
0021FA 20 05               B   580    			jr nz,edx2zn1
0021FC 21 1C 27 00         B   581    			ld hl,ed_x2_z1					;x=
002200 C9                  B   582    			ret
                           B   583    
002201 FE02                B   584    edx2zn1		cp 2
002203 20 05               B   585    			jr nz,edx2zn2
002205 21 36 27 00         B   586    			ld hl,ed_x2_z2					;x=
002209 C9                  B   587    			ret
                           B   588    
00220A FE03                B   589    edx2zn2		cp 3
00220C 20 05               B   590    			jr nz,edx2zn3
00220E 21 66 27 00         B   591    			ld hl,ed_x2_z3					;x=
002212 C9                  B   592    			ret
                           B   593    
002213 21 98 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002217 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002218 FE03                B   599    ed_xn2		cp 3
00221A 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
00221C FD46 02             B   602    			ld b,(iy+var_y)
00221F FD7E 03             B   603    			ld a,(iy+var_z)
002222 FE02                B   604    			cp 2
002224 20 05               B   605    			jr nz,edx3zn2
002226 21 CE 27 00         B   606    			ld hl,ed_x3_z2					;x=
00222A C9                  B   607    			ret
00222B FE03                B   608    edx3zn2		cp 3
00222D 20 05               B   609    			jr nz,edx3zn3
00222F 21 DC 27 00         B   610    			ld hl,ed_x3_z3					;x=
002233 C9                  B   611    			ret
                           B   612    
002234                     B   613    edx3zn3
                           B   614    
002234                     B   615    ed_xn3
                           B   616    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   617    ;----------------------------------------------
                           B   618    
002234                     B   619    invalid_op
002234 21 45 28 00         B   620    			ld hl,bad_opcode				; x
002238 0600                B   621    			ld b,0
00223A C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
00223B FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
00223E B7                  B   629    			or a
00223F C2 D7 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002243 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002246 B7                  B   636    			or a
002247 20 14               B   637    			jr nz,x0_z_not_zero
002249 21 C4 23 00         B   638    			ld hl,x0_z0
00224D FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
002250 47                  B   640    			ld b,a
002251 D604                B   641    			sub 4
002253 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002256 78                  B   643    			ld a,b
002257 FE04                B   644    			cp 4
002259 D8                  B   645    			ret c
00225A 0604                B   646    			ld b,4						;if y >
00225C C9                  B   647    			ret
                           B   648    			
00225D                     B   649    x0_z_not_zero		
                           B   650    			
00225D FE01                B   651    			cp 1
00225F 20 1A               B   652    			jr nz,x0_z_not_one
002261 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002264 FE06                B   654    			cp 6
002266 20 0B               B   655    			jr nz,x0z1yn6
002268 CD 77 23 00         B   656    			call test_ixiy_prefix		;if y=6
00226C 28 05               B   657    			jr z,x0z1yn6				;altern
00226E 21 F7 23 00         B   658    			ld hl,x0_z1_y6
002272 C9                  B   659    			ret
                           B   660    
002273 21 E4 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002277 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
00227A C9                  B   663    			ret 
                           B   664    			
00227B                     B   665    x0_z_not_one
                           B   666    
00227B FE02                B   667    			cp 2
00227D 20 08               B   668    			jr nz,x0_z_not_two
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00227F 21 FF 23 00         B   669    			ld hl,x0_z2
002283 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002286 C9                  B   671    			ret
                           B   672    			
002287                     B   673    x0_z_not_two
                           B   674    
002287 FE03                B   675    			cp 3
002289 20 08               B   676    			jr nz,x0_z_not_three
00228B 21 4B 24 00         B   677    			ld hl,x0_z3
00228F FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002292 C9                  B   679    			ret
                           B   680    			
002293                     B   681    x0_z_not_three
                           B   682    
002293 FE04                B   683    			cp 4
002295 20 05               B   684    			jr nz,x0_z_not_four
002297 21 5B 24 00         B   685    			ld hl,x0_z4					;no ini
00229B C9                  B   686    			ret			
                           B   687    			
00229C                     B   688    x0_z_not_four
                           B   689    
00229C FE05                B   690    			cp 5
00229E 20 05               B   691    			jr nz,x0_z_not_five
0022A0 21 63 24 00         B   692    			ld hl,x0_z5					;no ini
0022A4 C9                  B   693    			ret				
                           B   694    			
0022A5                     B   695    x0_z_not_five
                           B   696    
0022A5 FE06                B   697    			cp 6
0022A7 20 1A               B   698    			jr nz,x0_z_not_six
0022A9 21 6B 24 00         B   699    			ld hl,x0_z6					;normal
0022AD FD7E 02             B   700    			ld a,(iy+var_y)
0022B0 FE07                B   701    			cp 7
0022B2 C0                  B   702    			ret nz
0022B3 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0022B7 20 05               B   704    			jr nz,altx0z6
0022B9 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0022BD C8                  B   706    			ret z	
0022BE 21 74 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0022C2 C9                  B   708    			ret
                           B   709    
                           B   710    
0022C3                     B   711    x0_z_not_six
                           B   712    			
0022C3 21 7C 24 00         B   713    			ld hl,x0_z7					;x=0, z
0022C7 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0022CA CD 77 23 00         B   715    			call test_ixiy_prefix
0022CE C8                  B   716    			ret z
0022CF 21 96 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022D3 FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022D6 C9                  B   719    			ret
                           B   720    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   721    ;----------------------------------------------
                           B   722    
0022D7 FE01                B   723    x_not_zero	cp 1						; is x 
0022D9 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0022DB 21 A8 24 00         B   726    			ld hl,x1_table				; x=1
0022DF CD 77 23 00         B   727    			call test_ixiy_prefix
0022E3 20 11               B   728    			jr nz,pref_x1
0022E5 FD7E 02             B   729    			ld a,(iy+var_y)
0022E8 FE06                B   730    			cp 6
0022EA C0                  B   731    			ret nz
0022EB FD7E 03             B   732    			ld a,(iy+var_z)
0022EE FE06                B   733    			cp 6
0022F0 C0                  B   734    			ret nz
0022F1 21 C6 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022F5 C9                  B   736    			ret
                           B   737    
0022F6 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022F9 FE06                B   739    			cp 6
0022FB 20 05               B   740    			jr nz,x1yn6
0022FD 21 B2 24 00         B   741    			ld hl,x1_y6
002301 C9                  B   742    			ret
                           B   743    			
002302 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
002305 FE06                B   745    			cp 6
002307 C0                  B   746    			ret nz
002308 21 BC 24 00         B   747    			ld hl,x1_z6
00230C C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
00230D FE02                B   752    x_not_one	cp 2						; is x 
00230F 20 05               B   753    			jr nz,x_not_two
002311 21 CA 24 00         B   754    			ld hl,x2_table				; no in
002315 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002316 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002319 B7                  B   760    			or a
00231A 20 05               B   761    			jr nz,x3_z_not_zero
00231C 21 CF 24 00         B   762    			ld hl,x3_z0					; no in
002320 C9                  B   763    			ret
                           B   764    						
002321                     B   765    x3_z_not_zero
                           B   766    
002321 FE01                B   767    			cp 1
002323 20 11               B   768    			jr nz,x3_z_not_one
002325 21 D7 24 00         B   769    			ld hl,x3_z1_q0
002329 FD7E 05             B   770    			ld a,(iy+var_q)
00232C B7                  B   771    			or a
00232D C8                  B   772    			ret z						; no in
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232E 21 DF 24 00         B   773    			ld hl,x3_z1_q1
002332 FD46 04             B   774    			ld b,(iy+var_p)				; index
002335 C9                  B   775    			ret
                           B   776    
002336                     B   777    x3_z_not_one
                           B   778    
002336 FE02                B   779    			cp 2
002338 20 05               B   780    			jr nz,x3_z_not_two
00233A 21 F6 24 00         B   781    			ld hl,x3_z2					;no ini
00233E C9                  B   782    			ret
                           B   783    
00233F                     B   784    x3_z_not_two
                           B   785    
00233F FE03                B   786    			cp 3
002341 20 08               B   787    			jr nz,x3_z_not_three
002343 21 FF 24 00         B   788    			ld hl,x3_z3
002347 FD46 02             B   789    			ld b,(iy+var_y)				;index 
00234A C9                  B   790    			ret
                           B   791    
00234B                     B   792    x3_z_not_three
                           B   793    
00234B FE04                B   794    			cp 4
00234D 20 05               B   795    			jr nz,x3_z_not_four
00234F 21 34 25 00         B   796    			ld hl,x3_z4				;no initial
002353 C9                  B   797    			ret						
                           B   798    
                           B   799    
002354                     B   800    x3_z_not_four
                           B   801    
002354 FE05                B   802    			cp 5
002356 20 11               B   803    			jr nz,x3_z_not_five
002358 21 3F 25 00         B   804    			ld hl,x3_z5_q0
00235C FD7E 05             B   805    			ld a,(iy+var_q)
00235F B7                  B   806    			or a
002360 C8                  B   807    			ret z						;no ind
002361 21 48 25 00         B   808    			ld hl,x3_z5_q1
002365 FD46 04             B   809    			ld b,(iy+var_p)				;else i
002368 C9                  B   810    			ret
                           B   811    
002369                     B   812    x3_z_not_five
                           B   813    
002369 FE06                B   814    			cp 6
00236B 20 05               B   815    			jr nz,x3_z_not_six
00236D 21 66 25 00         B   816    			ld hl,x3_z6					;no ind
002371 C9                  B   817    			ret
                           B   818    
002372                     B   819    x3_z_not_six
                           B   820    
002372 21 6A 25 00         B   821    			ld hl,x3_z7					;x=3, z
002376 C9                  B   822    			ret
                           B   823    
                           B   824    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   825    ;==============================================
                           B   826    
002377                     B   827    test_ixiy_prefix
                           B   828    
002377 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00237B C0                  B   830    			ret nz
00237C FDCB005E            B   831    			bit sub_iy_prefix,(iy)
002380 C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002381                     B   837    show_hex_byte
                           B   838    
002381 E5                  B   839    			push hl
002382 21 2E 29 00         B   840    			ld hl,output_byte_txt
002386 E5                  B   841    			push hl
002387 CD A2 10 00         B   842    			call hexbyte_to_ascii
00238B E1                  B   843    			pop hl
00238C CD 57 0F 00         B   844    			call os_print_string
002390 E1                  B   845    			pop hl
002391 C9                  B   846    			ret
                           B   847    			
                           B   848    
002392                     B   849    show_ascii_char
                           B   850    
002392 E5                  B   851    			push hl
002393 21 31 29 00         B   852    			ld hl,output_char_txt
002397 77                  B   853    			ld (hl),a
002398 CD 57 0F 00         B   854    			call os_print_string
00239C E1                  B   855    			pop hl
00239D C9                  B   856    			ret
                           B   857    		
                           B   858    		
00239E DD22 2B 29 00       B   859    show_ix		ld (d_work_address),ix
0023A3 3A 2D 29 00         B   860    			ld a,(d_work_address+2)
0023A7 CD 81 23 00         B   861    			call show_hex_byte
0023AB 3A 2C 29 00         B   862    			ld a,(d_work_address+1)
0023AF CD 81 23 00         B   863    			call show_hex_byte
0023B3 3A 2B 29 00         B   864    			ld a,(d_work_address)
0023B7 CD 81 23 00         B   865    			call show_hex_byte
0023BB C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0023BC                     B   896    opcode_vars
                           B   897    
0023BC 00                  B   898    prefix_bits_loc	db 0	
0023BD 00                  B   899    var_x_loc		db 0	
0023BE 00                  B   900    var_y_loc		db 0	
0023BF 00                  B   901    var_z_loc		db 0	
0023C0 00                  B   902    var_p_loc		db 0	
0023C1 00                  B   903    var_q_loc		db 0
0023C2 00                  B   904    var_calc_loc	db 0
0023C3 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0023C4 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0023C7 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0023CF A7 
0023D0 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023D7 4A522064 80         B   922    			db 'JR ','d',80h			; y3
0023DC 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023E4 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023EA 2C2180 
0023ED 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0023F5 04 80 
0023F7 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023FF 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002407 2CC1 
002409 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
002411 43A9 
002413 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
00241B 2CC1 
00241D 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
002425 45A9 
002427 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
00242F DF 
002430 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002438 A9 
002439 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002441 C1 
002442 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
00244A A9 
                           B   937    
00244B 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002452 80 
002453 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
00245A 80 
                           B   940    			
00245B 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002462 80 
                           B   942    
002463 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
00246A 80 
                           B   944    			
00246B 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002471 2C5E80 
002474 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00247C 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
002480 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002484 524CC1              B   950    			db 'RL','A'+80h			;y=2
002487 5252C1              B   951    			db 'RR','A'+80h			;y=3
00248A 4441C1              B   952    			db 'DA','A'+80h			;y=4
00248D 4350CC              B   953    			db 'CP','L'+80h			;y=5
002490 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002493 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002496 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
00249C 2C2480 
00249F 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
0024A7 80 
                           B   959    		
                           B   960    
                           B   961    
0024A8 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024AE 2C7E 03 80 
0024B2 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0024B8 2C3D 03 80 
0024BC 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		0024C2 2C7E 03 80 
                           B   965    
0024C6 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
0024CA 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
0024CF 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024D6 80 
                           B   975    
0024D7 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024DE 80 
0024DF 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024E4 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024E7 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024ED 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024F5 80 
                           B   981    
0024F6 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024FC 2C2180 
                           B   983    
0024FF 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
002505 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
00250C 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
002514 C1 
002515 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
00251D 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
002525 2C5F80 
002528 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
002530 44C9                B   990    			db 'D','I'+80h			;y = 6
002532 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
002534 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
00253C 2C2180 
                           B   994    
00253F 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002547 80 
002548 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
002550 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002557 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
00255E 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002566 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
00256A 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002571 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002572 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002578 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
00257F 2C7E 03 80 
002583 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
00258A 2C7E 03 80 
00258E 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002595 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002599 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
00259F 2C285EA9 
0025A3 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0025AA 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0025B2 2C7E 02 80 
0025B6 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0025BE 5FA9 
                           B  1022    
0025C0 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0025C7 2C49582F 80 
0025CC 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025D3 2C49592F 80 
0025D8 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025E0 02 80 
                           B  1026    
0025E2 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025EA 7D 04 80 
                           B  1028    
0025ED 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025F3 2C285FA9 
0025F7 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025FF 3C 04 80 
                           B  1031    
002602 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002607 2C284243 A9 
00260C 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
002612 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
00261A 2C7E 02 80 
00261E 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002626 B0 
                           B  1037    
002627 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		00262F 40 04 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002632 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		00263A 40 04 80 
                           B  1040    
00263D 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002645 40 04 80 
002648 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	00264E 2C2821A9 
                           B  1043    
002652 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002655 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00265B 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002663 49592F80 
002667 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
00266D 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002675 80 
002676 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00267C 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002684 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
00268A 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
002690 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002696 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
00269E 49582F80 
0026A2 BF                  B  1056    				db '?'+80h					;y=
0026A3 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0026AB 80 
0026AC 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0026B3 BF                  B  1059    				db '?'+80h					;y=
0026B4 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0026B9 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0026BD BF                  B  1064    				db '?'+80h					;y=
0026BE 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0026C2 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0026C6 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0026CE 80 
0026CF 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026D6 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026D9 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026DE 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026E4 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026EA 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026F0 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
0026F6 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026F9 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026FC 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026FF 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002702 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002706 4C444926 80         B  1083    				db 'LDI&',80h					00270B 4C444426 80         B  1084    				db 'LDD&',80h					002710 4C444952 2680       B  1085    				db 'LDIR&',80h					002716 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
00271C BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
002720 43504926 80         B  1089    				db 'CPI&',80h					002725 43504426 80         B  1090    				db 'CPD&',80h					00272A 43504952 2680       B  1091    				db 'CPIR&',80h					002730 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002736 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
00273C 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
002742 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002749 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
002750 494E4926 80         B  1098    				db 'INI&',80h		; y4
002755 494E4426 80         B  1099    				db 'IND&',80h		; y5
00275A 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
002760 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002766 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00276C 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002772 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002779 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
002780 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002786 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00278C 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002792 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002798 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
00279E 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
0027A4 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0027AB 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0027B2 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0027B9 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0027C0 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0027C7 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0027CE 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027D5 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0027DC 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027E3 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027EA 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027F0 2C25 02 202480 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027F6 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027FD 2C2480 
002800 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002806 2C524553 26203E 02 
00280E 2C2480 
002811 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002817 2C534554 26203E 02 
00281F 2C2480 
                           B  1137    
002822 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002827 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		00282E 2C2480 
002831 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		002838 2C2480 
00283B 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002842 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002845 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002848 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002850 2480C1 
                           B  1151    
002853 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00285B 2480C1 
                           B  1153    
00285E 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002865 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
00286D 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002875 50C5D0CD 
                           B  1159    	
002879 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002881 44432620 41AC5355 
002889 4226A053 42432041 
002891 26AC 
002893 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
00289B 26A04F52 26A04350 
0028A3 26A0 
                           B  1162    			
0028A5 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0028AD 2680524C 26805252 
0028B5 2680 
0028B7 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0028BF 2680534C 4C268053 
0028C7 524C2680 
                           B  1165    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0028CB 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0028D3 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0028DB 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028E3 30B0                B  1172    table_rst	db '0','0'+80h
0028E5 30B8                B  1173    			db '0','8'+80h
0028E7 31B0                B  1174    			db '1','0'+80h
0028E9 31B8                B  1175    			db '1','8'+80h
0028EB 32B0                B  1176    			db '2','0'+80h
0028ED 32B8                B  1177    			db '2','8'+80h	
0028EF 33B0                B  1178    			db '3','0'+80h
0028F1 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028F3 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028F9 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028FF C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002906 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
00290D 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
002915 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
00291B                     B  1198    adl_prefix_list
                           B  1199    
00291B 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
002923 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
00292B 000000              B  1204    d_work_address	dw24 0
                           B  1205    
00292E 2D2D00              B  1206    output_byte_txt	db "--",0
002931 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
002933 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002936                     B     6    os_cmd_del
                           B     7    	
002936 CD CA 16 00         B     8    				call os_check_volume_format	
00293A C0                  B     9    				ret nz
                           B    10    			
00293B CD 43 29 00         B    11    				call filename_or_bust
                           B    12    				
00293F C3 31 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
002943                     B    18    filename_or_bust
                           B    19    			
002943 7E                  B    20    				ld a,(hl)					;is
002944 B7                  B    21    				or a
002945 C0                  B    22    				ret nz
002946 E1                  B    23    				pop hl						;ot
002947 C3 3A 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
00294B                     B     5    os_cmd_dir
                           B     6    
00294B CD CA 16 00         B     7    				call os_check_volume_format	
00294F C0                  B     8    				ret nz
                           B     9    				
002950 CD 2A 2A 00         B    10    				call div_line
002954 CD B4 53 00         B    11    				call fs_get_current_dir_name	002958 D8                  B    12    				ret c
002959 C0                  B    13    				ret nz
00295A CD 57 0F 00         B    14    				call os_print_string
00295E CD A1 1A 00         B    15    				call fs_get_dir_cluster			002962 7A                  B    16    				ld a,d
002963 B3                  B    17    				or e
002964 20 08               B    18    				jr nz,dcmdnr
002966 CD 9F 50 00         B    19    				call fs_get_volume_label
00296A CD 57 0F 00         B    20    				call os_print_string
00296E CD FF 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002972 CD 2A 2A 00         B    23    nrootdir		call div_line
002976 CD A4 4F 00         B    24    				call fs_goto_first_dir_entry
00297A D8                  B    25    				ret c
00297B 20 6F               B    26    				jr nz,os_dlr
00297D AF                  B    27    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
00297E 32 FA 61 00         B    28    				ld (os_linecount),a
                           B    29    				
002982 CD BB 4F 00         B    30    os_dfllp		call fs_get_dir_entry			002986 D8                  B    31    				ret c
002987 20 63               B    32    				jr nz,os_dlr					002989 C5                  B    33    				push bc
00298A CD 57 0F 00         B    34    				call os_print_string			00298E CD 2A 14 00         B    35    				call os_get_cursor_position		002992 060E                B    36    				ld b,14
002994 CD 0A 14 00         B    37    				call os_set_cursor_position	
002998 C1                  B    38    				pop bc
002999 CB40                B    39    				bit 0,b							00299B 28 06               B    40    				jr z,os_deif		
00299D 21 37 2A 00         B    41    				ld hl,dir_txt					0029A1 18 32               B    42    				jr os_dpl
                           B    43    				
0029A3 21 F2 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			0029A7 CD 57 0F 00         B    45    				call os_print_string
0029AB ED53 45 69 00       B    46    				ld (scratch_pad),de
0029B0 79                  B    47    				ld a,c
0029B1 32 48 69 00         B    48    				ld (scratch_pad+3),a
0029B5 21 65 62 00         B    49    				ld hl,output_line
0029B9 E5                  B    50    				push hl
0029BA ED5B 47 69 00       B    51    				ld de,(scratch_pad+2)
0029BF CD C7 10 00         B    52    				call hexword_to_ascii
0029C3 ED5B 45 69 00       B    53    				ld de,(scratch_pad)
0029C8 CD C7 10 00         B    54    				call hexword_to_ascii
0029CC 3600                B    55    				ld (hl),0
0029CE E1                  B    56    				pop hl
0029CF 0607                B    57    				ld b,7							0029D1 CD 7F 10 00         B    58    				call os_skip_leading_ascii_zero
0029D5 CD 57 0F 00         B    59    os_dpl			call os_print_string
0029D9 CD FF 13 00         B    60    				call os_new_line
                           B    61    				
0029DD CD 48 50 00         B    62    				call fs_goto_next_dir_entry
0029E1 20 09               B    63    				jr nz,os_dlr					0029E3 CD FD 11 00         B    64    				call os_count_lines
0029E7 3E79                B    65    				ld a,'y'
0029E9 B8                  B    66    				cp b
0029EA 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029EC CD 2A 2A 00         B    69    os_dlr			call div_line					0029F0 CD A3 49 00         B    70    				call fs_calc_free_space
0029F4 D8                  B    71    				ret c	
0029F5 CD 03 2A 00         B    72    				call show_hlde_decimal
0029F9 21 3D 2A 00         B    73    				ld hl,kb_spare_txt
0029FD CD 57 0F 00         B    74    				call os_print_string
002A01 AF                  B    75    				xor a
002A02 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A03                     B    80    show_hlde_decimal
                           B    81    
002A03 CD 92 12 00         B    82    				call os_hex_to_decimal			002A07 11070000            B    83    				ld de,7
002A0B 19                  B    84    				add hl,de						002A0C 43                  B    85    				ld b,e
002A0D 11 65 62 00         B    86    				ld de,output_line
002A11 D5                  B    87    				push de
002A12 7E                  B    88    dec2strlp		ld a,(hl)						002A13 B7                  B    89    				or a
002A14 20 03               B    90    				jr nz,foundlnz
002A16 2B                  B    91    				dec hl
002A17 10 F9               B    92    				djnz dec2strlp
002A19 04                  B    93    foundlnz		inc b
002A1A 7E                  B    94    ndecchar		ld a,(hl)						002A1B C630                B    95    				add a,030h
002A1D 12                  B    96    				ld (de),a
002A1E 13                  B    97    				inc de
002A1F 2B                  B    98    				dec hl
002A20 10 F8               B    99    				djnz ndecchar
002A22 AF                  B   100    				xor a
002A23 12                  B   101    				ld (de),a
002A24 E1                  B   102    				pop hl							002A25 CD 57 0F 00         B   103    				call os_print_string
002A29 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
002A2A 0E2D                B   108    div_line		ld c,'-'
002A2C 0613                B   109    				ld b,19
002A2E CD 89 1A 00         B   110    				call os_print_multiple_chars
002A32 CD FF 13 00         B   111    				call os_new_line
002A36 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
002A37 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
002A3D 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
002A45 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A47                     B     5    os_cmd_f			
                           B     6    
002A47 CD 98 1C 00         B     7    				call get_start_and_end			                           B     8    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002A4B CD C1 1C 00         B     9    				call hexword_or_bust			002A4F CA 5A 16 00         B    10    				jp z,os_no_args_error			002A53 7B                  B    11    				ld a,e
002A54 32 11 62 00         B    12    				ld (fillbyte),a
                           B    13    					
002A58 CD 86 1C 00         B    14    				call test_mem_range
002A5C DA 56 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A60 3A 11 62 00         B    17    				ld a,(fillbyte)
002A64 77                  B    18    f_floop			ld (hl),a
002A65 EDA1                B    19    				cpi								002A67 EA 64 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A6B 3E20                B    22    				ld a,020h						002A6D B7                  B    23    				or a
002A6E C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A6F                     B     9    os_cmd_format
                           B    10    
002A6F 7E                  B    11    				ld a,(hl)						002A70 B7                  B    12    				or a
002A71 20 04               B    13    				jr nz,fgotargs					002A73 3E1F                B    14    				ld a,01fh						002A75 B7                  B    15    				or a
002A76 C9                  B    16    				ret
                           B    17    			
002A77 E5                  B    18    fgotargs		push hl
002A78 3E01                B    19    				ld a,1							002A7A CD 6E 18 00         B    20    				call os_mount_volumes			002A7E E1                  B    21    				pop hl
                           B    22    				
002A7F 11 43 55 00         B    23    				ld de,fs_sought_filename
002A83 CD FD 53 00         B    24    				call fs_clear_filename			002A87 E5                  B    25    				push hl							002A88 CD E0 0F 00         B    26    				call os_next_arg
002A8C 20 04               B    27    				jr nz,fgotlab
002A8E 21 BE 2B 00         B    28    				ld hl,default_label
002A92 060B                B    29    fgotlab			ld b,11
002A94 CD 45 12 00         B    30    				call os_copy_ascii_run
002A98 E1                  B    31    				pop hl
                           B    32    				
002A99 3A 1C 60 00         B    33    				ld a,(device_count)				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A9D B7                  B    34    				or a
002A9E 28 25               B    35    				jr z,fno_dev
002AA0 47                  B    36    				ld b,a
002AA1 0E00                B    37    				ld c,0							002AA3 DD21 C6 60 00       B    38    				ld ix,host_device_hardware_info
002AA8 DD7E00              B    39    fdev_lp			ld a,(ix)						002AAB CD 73 1A 00         B    40    				call locate_driver_base			002AAF D5                  B    41    				push de
002AB0 FDE1                B    42    				pop iy
002AB2 ED130C              B    43    				lea de,iy+0ch					002AB5 C5                  B    44    				push bc
002AB6 0607                B    45    				ld b,7
002AB8 CD 26 12 00         B    46    				call os_compare_strings
002ABC C1                  B    47    				pop bc
002ABD 28 0A               B    48    				jr z,format_dev
002ABF ED3220              B    49    				lea ix,ix+20h					002AC2 0C                  B    50    				inc c
002AC3 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002AC5 3ED0                B    53    fno_dev			ld a,0d0h						002AC7 B7                  B    54    				or a
002AC8 C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002AC9 C5                  B    62    format_dev		push bc
002ACA CD FF 13 00         B    63    				call os_new_line
002ACE 21 8F 2B 00         B    64    				ld hl,form_dev_warn1
002AD2 CD 36 14 00         B    65    				call os_show_packed_text
002AD6 C1                  B    66    				pop bc
                           B    67    				
002AD7 79                  B    68    				ld a,c							002AD8 C630                B    69    				add a,030h
002ADA 32 28 60 00         B    70    				ld (dev_txt+3),a
002ADE 21 25 60 00         B    71    				ld hl,dev_txt	
002AE2 CD 57 0F 00         B    72    				call os_print_string			                           B    73    				
002AE6 79                  B    74    				ld a,c
002AE7 CD E7 1A 00         B    75    				call dev_to_driver_lookup		002AEB E5                  B    76    				push hl
002AEC 32 1B 60 00         B    77    				ld (current_driver),a
002AF0 CD 5A 1A 00         B    78    				call show_dev_driver_name		002AF4 DDE1                B    79    				pop ix
002AF6 DD1701              B    80    				ld de,(ix+1)
002AF9 FD21 0D 62 00       B    81    				ld iy,xrr_temp
002AFE FD1F00              B    82    				ld (iy),de						002B01 FDCB023E            B    83    				srl (iy+2)
002B05 FDCB011E            B    84    				rr (iy+1)
002B09 FDCB001E            B    85    				rr (iy+0)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B0D FD1700              B    86    				ld de,(iy)						002B10 CD 03 2A 00         B    87    				call show_hlde_decimal			002B14 21 C9 2B 00         B    88    				ld hl,kb_txt
002B18 CD 57 0F 00         B    89    				call os_print_string
002B1C ED2205              B    90    				lea hl,ix+5		
002B1F CD 57 0F 00         B    91    				call os_print_string			002B23 3E29                B    92    				ld a,')'
002B25 CD 99 0F 00         B    93    				call os_print_char
                           B    94    				
002B29 CD FF 13 00         B    95    				call os_new_line
002B2D CD FF 13 00         B    96    				call os_new_line
002B31 21 96 2B 00         B    97    				ld hl,form_dev_warn2
002B35 CD 86 2B 00         B    98    				call show_packed_text_and_cr
002B39 CD 6E 2B 00         B    99    				call confirm_yes
002B3D 20 27               B   100    				jr nz,ab_form
                           B   101    				
002B3F 21 A0 2B 00         B   102    				ld hl,formatting_txt			002B43 CD 57 0F 00         B   103    				call os_print_string
                           B   104    				
002B47 CD 21 47 00         B   105    				call fs_format_device_command
002B4B 38 0F               B   106    				jr c,form_err
002B4D 20 0D               B   107    				jr nz,form_err
                           B   108    			
002B4F 21 B0 2B 00         B   109    				ld hl,ok_txt					002B53 CD 57 0F 00         B   110    				call os_print_string
                           B   111    				
002B57 CD 63 32 00         B   112    f_end			call os_cmd_remount				002B5B C9                  B   113    				ret
                           B   114    			
002B5C                     B   115    form_err
002B5C 21 B5 2B 00         B   116    				ld hl,ferr_txt
002B60 CD 57 0F 00         B   117    				call os_print_string
002B64 18 F1               B   118    				jr f_end
                           B   119    				
                           B   120    				
                           B   121    ;----------------------------------------------
                           B   122    				
                           B   123    				
002B66 CD FF 13 00         B   124    ab_form			call os_new_line
002B6A 3E24                B   125    				ld a,024h						002B6C B7                  B   126    				or a
002B6D C9                  B   127    				ret
                           B   128    				
002B6E                     B   129    confirm_yes
                           B   130    			
002B6E 21 45 69 00         B   131    				ld hl,scratch_pad
002B72 1E03                B   132    				ld e,3
002B74 E5                  B   133    				push hl
002B75 CD 2B 11 00         B   134    				call os_user_input
002B79 E1                  B   135    				pop hl
002B7A C0                  B   136    				ret nz
002B7B 0603                B   137    				ld b,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B7D 11 DE 5A 00         B   138    				ld de,yes_txt+1
002B81 CD 26 12 00         B   139    				call os_compare_strings
002B85 C9                  B   140    				ret
                           B   141    			
                           B   142    			
002B86                     B   143    show_packed_text_and_cr
                           B   144    			
002B86 CD 36 14 00         B   145    				call os_show_packed_text
002B8A CD FF 13 00         B   146    				call os_new_line
002B8E C9                  B   147    				ret
                           B   148    			
                           B   149    ;----------------------------------------------
                           B   150    
002B8F                     B   151    form_dev_warn1
                           B   152    
002B8F 27283640 979700     B   153    				db 027h,028h,036h,040h,097h,097
                           B   154    
002B96                     B   155    form_dev_warn2
                           B   156    
002B96 52467E98 9EA2A3A5   B   157    				db 052h,046h,07eh,098h,09eh,0a2
002B9E 9700 
                           B   158    
002BA0                     B   159    formatting_txt
                           B   160    
002BA0 0B0B466F 726D6174   B   161    				db 11,11,'Formatting.. ',0
002BA8 74696E67 2E2E2000 
                           B   162    
002BB0 4F4B0B0B 00         B   163    ok_txt			db 'OK',11,11,0
                           B   164    
002BB5 4552524F 52210B0B   B   165    ferr_txt		db 'ERROR!',11,11,0
002BBD 00 
                           B   166    
002BBE                     B   167    default_label	
                           B   168    
002BBE 50524F53 455F4449   B   169    				db 'PROSE_DISK',0
002BC6 534B00 
                           B   170    
002BC9 4B422028 00         B   171    kb_txt			db 'KB (',0
                           B   172    
                           B   173    ;----------------------------------------------
                           B   174    
       00006949            B   175    fs_drive_sel_cache		equ scratch_pad+4		                           B   176    
                           B   177    ;----------------------------------------------
                           B   178    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BCE CD 98 1C 00         B     5    os_cmd_h		call get_start_and_end			002BD2 22 0A 62 00         B     6    				ld (find_hexstringascii),hl		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B     7    
002BD6 CD 86 1C 00         B     8    				call test_mem_range
002BDA DA 56 16 00         B     9    				jp c,os_range_error				                           B    10    			
002BDE AF                  B    11    				xor a
002BDF 32 7B 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BE3 2A 0A 62 00         B    14    				ld hl,(find_hexstringascii)
002BE7 0600                B    15    				ld b,0
002BE9 7E                  B    16    h_lfascii		ld a,(hl)						002BEA B7                  B    17    				or a
002BEB 28 28               B    18    				jr z,h_no_text					002BED FE22                B    19    				cp 022h
002BEF 28 03               B    20    				jr z,h_found_quote
002BF1 23                  B    21    				inc hl
002BF2 18 F5               B    22    				jr h_lfascii
002BF4 23                  B    23    h_found_quote	inc hl
002BF5 22 0A 62 00         B    24    				ld (find_hexstringascii),hl
002BF9 7E                  B    25    h_fasc_len		ld a,(hl)
002BFA B7                  B    26    				or a
002BFB CA 5A 16 00         B    27    				jp z,os_no_args_error			002BFF FE22                B    28    				cp 022h
002C01 28 04               B    29    				jr z,h_startas
002C03 23                  B    30    				inc hl
002C04 04                  B    31    				inc b
002C05 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C07 78                  B    34    h_startas		ld a,b
002C08 B7                  B    35    				or a
002C09 CA 5A 16 00         B    36    				jp z,os_no_args_error			002C0D 3E01                B    37    				ld a,1
002C0F 32 7B 2C 00         B    38    				ld (h_ascii_mode),a
002C13 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C15 2A 0A 62 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C19 0600                B    43    				ld b,0							002C1B CD C1 1C 00         B    44    cntfbyts		call hexword_or_bust			002C1F 28 04               B    45    				jr z,gthexstr
002C21 04                  B    46    				inc b
002C22 23                  B    47    				inc hl
002C23 18 F6               B    48    				jr cntfbyts
002C25 78                  B    49    gthexstr		ld a,b
002C26 B7                  B    50    				or a
002C27 CA 5A 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002C2B                     B    54    h_start_search
                           B    55    	
002C2B DD2A FE 61 00       B    56    				ld ix,(cmdop_start_address)		002C30 DDE5                B    57    fndloop1		push ix
002C32 FDE1                B    58    				pop iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002C34 48                  B    59    				ld c,b							002C35 2A 0A 62 00         B    60    				ld hl,(find_hexstringascii)
002C39 3A 7B 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002C3D B7                  B    62    				or a
002C3E 28 08               B    63    				jr z,h_hex
002C40 FD7E00              B    64    				ld a,(iy)
002C43 BE                  B    65    				cp (hl)
002C44 20 23               B    66    				jr nz,nofmatch
002C46 18 0A               B    67    				jr h_matched
002C48 CD D6 10 00         B    68    h_hex			call ascii_to_hexword			002C4C FD7E00              B    69    				ld a,(iy)
002C4F BB                  B    70    				cp e
002C50 20 17               B    71    				jr nz,nofmatch
002C52 FD23                B    72    h_matched		inc iy
002C54 23                  B    73    				inc hl
002C55 0D                  B    74    				dec c
002C56 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C58 DDE5                B    77    				push ix							002C5A D1                  B    78    				pop de							002C5B DDE5                B    79    				push ix
002C5D C5                  B    80    				push bc
002C5E CD 37 13 00         B    81    				call os_show_hex_address
002C62 CD FF 13 00         B    82    				call os_new_line
002C66 C1                  B    83    				pop bc
002C67 DDE1                B    84    				pop ix
                           B    85    				
002C69 DDE5                B    86    nofmatch		push ix
002C6B DD23                B    87    				inc ix
002C6D D1                  B    88    				pop de
002C6E 2A 01 62 00         B    89    				ld hl,(cmdop_end_address)
002C72 AF                  B    90    				xor a
002C73 ED52                B    91    				sbc hl,de
002C75 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C77 3E20                B    94    				ld a,020h						002C79 B7                  B    95    				or a
002C7A C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C7B 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C7C                     B     5    os_cmd_help		
002C7C AF                  B     6    				xor a
002C7D 32 FA 61 00         B     7    				ld (os_linecount),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
                           B     8    				
002C81 21 1E 5C 00         B     9    				ld hl,packed_help1
002C85 CD 36 14 00         B    10    show_page		call os_show_packed_text
002C89 E5                  B    11    				push hl
002C8A CD FF 13 00         B    12    				call os_new_line
002C8E E1                  B    13    				pop hl
002C8F 23                  B    14    				inc hl						;sk
002C90 7E                  B    15    				ld a,(hl)
002C91 FEFF                B    16    				cp 0ffh						;la
002C93 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C95 CD FD 11 00         B    19    				call os_count_lines
002C99 78                  B    20    				ld a,b
002C9A FE79                B    21    				cp 'y'
002C9C 28 E7               B    22    				jr z,show_page
                           B    23    
002C9E                     B    24    last_help_page
002C9E AF                  B    25    				xor a
002C9F C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002CA0                     B     5    os_cmd_gtr
                           B     6    
002CA0 CD C1 1C 00         B     7    				call hexword_or_bust			002CA4 CA 42 16 00         B     8    				jp z,os_no_start_addr
002CA8 23                  B     9    fndquot1		inc hl
002CA9 7E                  B    10    				ld a,(hl)
002CAA B7                  B    11    				or a
002CAB CA 5A 16 00         B    12    				jp z,os_no_args_error
002CAF FE22                B    13    				cp 022h							002CB1 20 F5               B    14    				jr nz,fndquot1
002CB3 23                  B    15    				inc hl
002CB4 E5                  B    16    				push hl
002CB5 7E                  B    17    fndquot2		ld a,(hl)
002CB6 23                  B    18    				inc hl
002CB7 B7                  B    19    				or a
002CB8 28 15               B    20    				jr z,noquot2
002CBA FE22                B    21    				cp 022h							002CBC 20 F7               B    22    				jr nz,fndquot2
002CBE E1                  B    23    				pop hl
                           B    24    					
002CBF 7E                  B    25    wmbalp			ld a,(hl)						002CC0 FE22                B    26    				cp 022h
002CC2 28 09               B    27    				jr z,os_gtrdn					002CC4 FE7D                B    28    				cp 07dh
002CC6 28 01               B    29    				jr z,skpnasc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002CC8 12                  B    30    				ld (de),a
002CC9 13                  B    31    skpnasc			inc de
002CCA 23                  B    32    				inc hl
002CCB 18 F2               B    33    				jr wmbalp
002CCD AF                  B    34    os_gtrdn		xor a
002CCE C9                  B    35    				ret	
                           B    36    				
002CCF E1                  B    37    noquot2			pop hl							002CD0 3E12                B    38    				ld a,012h
002CD2 B7                  B    39    				or a
002CD3 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002CD4                     B     5    os_cmd_lb
                           B     6    	
002CD4 CD CA 16 00         B     7    				call os_check_volume_format	
002CD8 C0                  B     8    				ret nz
                           B     9    				
002CD9 CD 43 29 00         B    10    				call filename_or_bust			002CDD CD 62 16 00         B    11    				call os_find_file				002CE1 C0                  B    12    				ret nz
002CE2 ED53 48 69 00       B    13    				ld (filesize_cache),de			002CE7 2A 4D 61 00         B    14    				ld hl,(default_load_addr)
002CEB 22 45 69 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CEF 2A B7 62 00         B    17    				ld hl,(os_args_loc)
002CF3 CD E0 0F 00         B    18    				call os_next_arg
                           B    19    
002CF7 CD C1 1C 00         B    20    				call hexword_or_bust			002CFB 28 05               B    21    				jr z,os_lbnao					002CFD ED53 45 69 00       B    22    				ld (data_load_addr),de
                           B    23    
002D02 ED5B 45 69 00       B    24    os_lbnao		ld de,(data_load_addr)			002D07 2A 5A 61 00         B    25    				ld hl,(sysram_os_highest)		002D0B 2B                  B    26    				dec hl
002D0C AF                  B    27    				xor a
002D0D ED52                B    28    				sbc hl,de
002D0F 38 04               B    29    				jr c,os_lbprok
002D11 3E26                B    30    				ld a,026h						002D13 B7                  B    31    				or a
002D14 C9                  B    32    				ret
                           B    33    				
002D15 2A 45 69 00         B    34    os_lbprok		ld hl,(data_load_addr)			002D19 CD 8F 16 00         B    35    				call os_read_bytes_from_file
002D1D C0                  B    36    				ret nz
                           B    37    			
002D1E                     B    38    report_bytes_loaded
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    39    
002D1E 21 F2 56 00         B    40    				ld hl,os_hex_prefix_txt			002D22 CD 57 0F 00         B    41    				call os_print_string			                           B    42    				
002D26 11 4A 69 00         B    43    				ld de,filesize_cache+2			002D2A 21 65 62 00         B    44    				ld hl,output_line
002D2E 0603                B    45    				ld b,3
002D30 CD 94 10 00         B    46    				call n_hexbytes_to_ascii
002D34 3600                B    47    				ld (hl),0	
002D36 0605                B    48    				ld b,5							002D38 CD 6D 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002D3C 21 BC 5D 00         B    51    				ld hl,bytes_loaded_msg			002D40 CD 36 14 00         B    52    				call os_show_packed_text
                           B    53    				
002D44 21 51 57 00         B    54    				ld hl,to_txt					002D48 CD 57 0F 00         B    55    				call os_print_string
                           B    56    
002D4C 21 F2 56 00         B    57    				ld hl,os_hex_prefix_txt			002D50 CD 57 0F 00         B    58    				call os_print_string	
                           B    59    
002D54 ED5B 45 69 00       B    60    				ld de,(data_load_addr)			002D59 CD 37 13 00         B    61    				call os_show_hex_address
                           B    62    
002D5D CD FF 13 00         B    63    				call os_new_line
002D61 AF                  B    64    				xor a
002D62 C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006945            B    69    data_load_addr	equ scratch_pad
       00006948            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D63 CD C1 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D67 28 05               B     8    				jr z,m_no_hex					002D69 ED53 FB 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D6E 0610                B    11    m_no_hex		ld b,16							002D70 C5                  B    12    smbllp			push bc							                           B    13    				
002D71 21 AA 2D 00         B    14    				ld hl,colon_cmd_prefix			002D75 CD 57 0F 00         B    15    				call os_print_string
002D79 ED5B FB 61 00       B    16    				ld de,(mem_mon_addr)
002D7E CD 37 13 00         B    17    				call os_show_hex_address
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
                           B    18    
002D82 21 65 62 00         B    19    				ld hl,output_line
002D86 0610                B    20    				ld b,bytes_per_line				002D88 3620                B    21    mmbllp			ld (hl),' '
002D8A 23                  B    22    				inc hl
002D8B 1A                  B    23    				ld a,(de)	
002D8C CD A2 10 00         B    24    				call hexbyte_to_ascii
002D90 13                  B    25    				inc de
002D91 10 F5               B    26    				djnz mmbllp
                           B    27    
002D93 ED53 FB 61 00       B    28    				ld (mem_mon_addr),de
002D98 360B                B    29    				ld (hl),11
002D9A 23                  B    30    				inc hl
002D9B 3600                B    31    				ld (hl),0
002D9D 21 65 62 00         B    32    				ld hl,output_line
002DA1 CD 57 0F 00         B    33    				call os_print_string
002DA5 C1                  B    34    				pop bc
002DA6 10 C8               B    35    				djnz smbllp
                           B    36    				
002DA8 AF                  B    37    				xor a
002DA9 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DAA 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DAD                     B     5    os_cmd_md
                           B     6    	
002DAD CD CA 16 00         B     7    				call os_check_volume_format	
002DB1 C0                  B     8    				ret nz
                           B     9    			
002DB2 CD 43 29 00         B    10    				call filename_or_bust
                           B    11    				
002DB6 C3 09 17 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002DBA                     B     5    os_cmd_r	
002DBA DD21 66 61 00       B     6    				ld ix,store_a1					002DBF 21 64 2E 00         B     7    				ld hl,register_txt
002DC3 CD 57 0F 00         B     8    rcmdloop2		call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DC7 7E                  B     9    rcmdloop		ld a,(hl)
002DC8 FE01                B    10    				cp 1
002DCA 28 0B               B    11    				jr z,showbyte
002DCC FE02                B    12    				cp 2
002DCE 28 15               B    13    				jr z,showword16
002DD0 FE03                B    14    				cp 3
002DD2 28 2E               B    15    				jr z,showaddr
002DD4 23                  B    16    				inc hl
002DD5 18 F0               B    17    				jr rcmdloop
                           B    18    				
002DD7 DD7E00              B    19    showbyte		ld a,(ix)
002DDA DD23                B    20    				inc ix
002DDC DDE5                B    21    				push ix
002DDE E5                  B    22    				push hl
002DDF CD 4B 13 00         B    23    				call os_show_hex_byte
002DE3 18 2A               B    24    				jr showreg
                           B    25    
002DE5 DD7E01              B    26    showword16		ld a,(ix+1)
002DE8 DDE5                B    27    				push ix
002DEA E5                  B    28    				push hl
002DEB CD 4B 13 00         B    29    				call os_show_hex_byte
002DEF E1                  B    30    				pop hl
002DF0 DDE1                B    31    				pop ix
002DF2 DD7E00              B    32    				ld a,(ix)
002DF5 DD23                B    33    				inc ix
002DF7 DD23                B    34    				inc ix
002DF9 DDE5                B    35    				push ix
002DFB E5                  B    36    				push hl
002DFC CD 4B 13 00         B    37    				call os_show_hex_byte
002E00 18 0D               B    38    				jr showreg
                           B    39    
002E02 DD1700              B    40    showaddr		ld de,(ix)
002E05 ED3203              B    41    				lea ix,ix+3
002E08 DDE5                B    42    				push ix
002E0A E5                  B    43    				push hl
002E0B CD 37 13 00         B    44    				call os_show_hex_address
002E0F E1                  B    45    showreg			pop hl
002E10 DDE1                B    46    				pop ix
002E12 23                  B    47    				inc hl
002E13 7E                  B    48    				ld a,(hl)
002E14 B7                  B    49    				or a
002E15 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E17 CD FF 13 00         B    52    				call os_new_line				002E1B 21 C8 2E 00         B    53    				ld hl,flag_txt
002E1F CD 1F 13 00         B    54    				call os_copy_to_output_line
002E23 21 69 62 00         B    55    				ld hl,output_line+4
002E27 01050000            B    56    				ld bc,5
002E2B 3A 89 61 00         B    57    				ld a,(store_f)
002E2F CB77                B    58    				bit 6,a							002E31 28 02               B    59    				jr z,zfzero
002E33 3631                B    60    				ld (hl),'1'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E35 09                  B    61    zfzero			add hl,bc
002E36 CB47                B    62    				bit 0,a							002E38 28 02               B    63    				jr z,cfzero
002E3A 3631                B    64    				ld (hl),'1'
002E3C 09                  B    65    cfzero			add hl,bc
002E3D CB7F                B    66    				bit 7,a							002E3F 28 02               B    67    				jr z,sfzero
002E41 364D                B    68    				ld (hl),'M'
002E43 09                  B    69    sfzero			add hl,bc
002E44 CB57                B    70    				bit 2,a							002E46 28 02               B    71    				jr z,pfzero
002E48 364F                B    72    				ld (hl),'O'
002E4A 09                  B    73    pfzero			add hl,bc
002E4B 23                  B    74    				inc hl
002E4C CB67                B    75    				bit 4,a							002E4E 28 02               B    76    				jr z,iffzero
002E50 3631                B    77    				ld (hl),'1'
002E52                     B    78    iffzero			
002E52 01060000            B    79    				ld bc,6
002E56 09                  B    80    				add hl,bc
002E57 3A 8A 61 00         B    81    				ld a,(store_adl)
002E5B C630                B    82    				add a,30h
002E5D 77                  B    83    				ld (hl),a
002E5E CD 62 13 00         B    84    				call os_print_output_line
002E62 AF                  B    85    				xor a
002E63 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E64 20413D00 01         B    91    register_txt		db ' A=',0,1
002E69 20204243 3D0003     B    92    					db '  BC=',0,3
002E70 20204445 3D0003     B    93    					db '  DE=',0,3
002E77 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E7E 0B                  B    96    					db 11
                           B    97    
002E7F 27413D00 01         B    98    					db 027h,'A=',0,1
002E84 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E8B 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E92 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E99 0B                  B   103    					db 11
                           B   104    
002E9A 2049583D 0003       B   105    					db ' IX=',0,3
002EA0 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002EA6 0B                  B   108    					db 11
                           B   109    					
002EA7 2050433D 0003       B   110    					db ' PC=',0,3
002EAD 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EB4 20535350 3D0002     B   112    					db ' SSP=',0,2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B   113    					
002EBB 0B                  B   114    					db 11
                           B   115    					
002EBC 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002EC4 010000 
                           B   117    					
002EC7 0B                  B   118    					db 11
                           B   119    
002EC8 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002ED0 3D302053 463D5020 
002ED8 50563D45 20494646 
002EE0 3D302041 444C3D30 
002EE8 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EEB                     B     5    os_cmd_rd
                           B     6    
002EEB CD CA 16 00         B     7    				call os_check_volume_format	
002EEF C0                  B     8    				ret nz
                           B     9    				
002EF0 CD 43 29 00         B    10    				call filename_or_bust
                           B    11    			
002EF4 C3 73 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EF8                     B     5    os_cmd_rn
                           B     6    	
002EF8 CD CA 16 00         B     7    				call os_check_volume_format	
002EFC C0                  B     8    				ret nz
                           B     9    			
002EFD CD 43 29 00         B    10    				call filename_or_bust
002F01 E5                  B    11    				push hl
002F02 D1                  B    12    				pop de
002F03 CD E0 0F 00         B    13    				call os_next_arg
002F07 7E                  B    14    				ld a,(hl)						002F08 B7                  B    15    				or a
002F09 20 04               B    16    				jr nz,rn_grfn
002F0B 3E1F                B    17    				ld a,01fh						002F0D B7                  B    18    				or a
002F0E C9                  B    19    				ret
                           B    20    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
002F0F EB                  B    21    rn_grfn			ex de,hl
002F10 C3 5D 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F14                     B     5    os_cmd_sb
                           B     6    	
002F14 CD CA 16 00         B     7    				call os_check_volume_format		002F18 C0                  B     8    				ret nz
                           B     9    					
002F19 CD 43 29 00         B    10    				call filename_or_bust			002F1D 22 4B 69 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002F21 2A B7 62 00         B    13    				ld hl,(os_args_loc)
002F25 CD E0 0F 00         B    14    				call os_next_arg
002F29 CD C1 1C 00         B    15    				call hexword_or_bust			002F2D CA 42 16 00         B    16    				jp z,os_no_start_addr			002F31 ED53 45 69 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002F36 CD C1 1C 00         B    19    				call hexword_or_bust			002F3A CA 46 16 00         B    20    				jp z,os_no_filesize
002F3E ED53 48 69 00       B    21    				ld (sb_save_length),de
                           B    22    				
002F43 2A 4B 69 00         B    23    				ld hl,(sb_save_name_addr)		002F47 CD 9E 16 00         B    24    				call os_create_file
002F4B 28 18               B    25    				jr z,os_sfapp
002F4D FEC9                B    26    				cp 0c9h							002F4F C0                  B    27    				ret nz			
002F50 21 E5 5B 00         B    28    				ld hl,save_append_msg			002F54 CD 36 14 00         B    29    				call os_show_packed_text
002F58 CD 3E 44 00         B    30    				call os_wait_key_press
002F5C 3E79                B    31    				ld a,'y'
002F5E B8                  B    32    				cp b
002F5F 28 04               B    33    				jr z,os_sfapp
002F61 3E2C                B    34    				ld a,2ch						002F63 B7                  B    35    				or a
002F64 C9                  B    36    				ret
                           B    37    			
002F65 2A 4B 69 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F69 ED5B 45 69 00       B    39    				ld de,(sb_save_addr)			002F6E ED4B 48 69 00       B    40    				ld bc,(sb_save_length)			002F73 CD B3 16 00         B    41    				call os_write_bytes_to_file
002F77 C0                  B    42    				ret nz	
                           B    43    				
002F78 3E20                B    44    				ld a,020h						002F7A B7                  B    45    				or a
002F7B C9                  B    46    				ret
                           B    47    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006945            B    51    sb_save_addr		equ scratch_pad
       00006948            B    52    sb_save_length		equ scratch_pad+3
       0000694B            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006A45            B     6    buffer_addr				 equ os_max_addr		       00006945            B     7    rx_buffer_ptr			 equ scratch_pad
       00006948            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F7C 7E                  B    11    os_cmd_rx		ld a,(hl)						002F7D B7                  B    12    				or a
002F7E CA 3A 16 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F82 3E3E                B    15    				ld a,'>'						002F84 BE                  B    16    				cp (hl)
002F85 C2 48 30 00         B    17    				jp nz,rx_nrs
002F89 23                  B    18    				inc hl
002F8A 3E20                B    19    				ld a,' '
002F8C BE                  B    20    				cp (hl)
002F8D 2B                  B    21    				dec hl
002F8E C2 48 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F92 CD CA 16 00         B    24    				call os_check_volume_format		002F96 C0                  B    25    				ret nz		
                           B    26    				
002F97 112A0000            B    27    				ld de,02ah						002F9B ED53 D7 5F 00       B    28    				ld (serial_filename),de			002FA0 CD 4C 31 00         B    29    				call rx_get_header
002FA4 C0                  B    30    				ret nz
002FA5 CD 11 46 00         B    31    				call s_holdack					                           B    32    				
002FA9 21 EB 5F 00         B    33    				ld hl,serial_fileheader			002FAD CD 9E 16 00         B    34    				call os_create_file
002FB1 C2 27 30 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002FB5 21 05 5C 00         B    37    				ld hl,ser_recsave_msg
002FB9 CD 36 14 00         B    38    				call os_show_packed_text
                           B    39    				
002FBD 2A FB 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002FC1 22 48 69 00         B    41    				ld (serial_file_length_cache),h
002FC5 21 45 6A 00         B    42    				ld hl,buffer_addr
002FC9 22 45 69 00         B    43    				ld (rx_buffer_ptr),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FCD 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002FCF CD F9 45 00         B    46    rx_lnb			call s_goodack
002FD3 CD A3 45 00         B    47    				call s_getblock
002FD7 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002FD9 F5                  B    50    				push af							002FDA CD 0A 46 00         B    51    				call s_badack					002FDE 21 EB 5F 00         B    52    				ld hl,serial_fileheader			002FE2 CD 31 17 00         B    53    				call os_erase_file
002FE6 F1                  B    54    				pop af
002FE7 C9                  B    55    				ret
                           B    56    
002FE8 CD 11 46 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FEC 21 45 67 00         B    59    				ld hl,sector_buffer
002FF0 ED5B 45 69 00       B    60    				ld de,(rx_buffer_ptr)
002FF5 01000100            B    61    				ld bc,256
002FF9 EDB0                B    62    				ldir
002FFB ED53 45 69 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
003000 2A FB 5F 00         B    65    				ld hl,(serial_fileheader+16)
003004 11000100            B    66    				ld de,256
003008 AF                  B    67    				xor a
003009 ED52                B    68    				sbc hl,de
00300B 22 FB 5F 00         B    69    				ld (serial_fileheader+16),hl
00300F 28 1D               B    70    				jr z,rx_lbr
003011 38 1B               B    71    				jr c,rx_lbr
003013 10 BA               B    72    				djnz rx_lnb
                           B    73    
003015 01008000            B    74    				ld bc,buffer_blocks*256
003019 11 45 6A 00         B    75    				ld de,buffer_addr
00301D 21 EB 5F 00         B    76    				ld hl,serial_fileheader
003021 CD B3 16 00         B    77    				call os_write_bytes_to_file
003025 28 96               B    78    				jr z,rx_rnblk
003027 F5                  B    79    rxwtd_fail		push af
003028 CD 0A 46 00         B    80    				call s_badack
00302C F1                  B    81    				pop af
00302D C9                  B    82    				ret
                           B    83    				
00302E CD F9 45 00         B    84    rx_lbr			call s_goodack
003032 ED4B 48 69 00       B    85    				ld bc,(serial_file_length_cache
003037 11 45 6A 00         B    86    				ld de,buffer_addr
00303B 21 EB 5F 00         B    87    				ld hl,serial_fileheader
00303F CD B3 16 00         B    88    				call os_write_bytes_to_file
003043 C0                  B    89    				ret nz	
                           B    90    				
003044 3E20                B    91    rxtd_done		ld a,020h						003046 B7                  B    92    				or a
003047 C9                  B    93    				ret
                           B    94    
                           B    95    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    96    
                           B    97    				
003048 3E21                B    98    rx_nrs			ld a,'!'						00304A BE                  B    99    				cp (hl)							00304B C2 F6 30 00         B   100    				jr nz,notrxe
00304F 23                  B   101    				inc hl
003050 3E20                B   102    				ld a,' '
003052 BE                  B   103    				cp (hl)
003053 2B                  B   104    				dec hl
003054 C2 F6 30 00         B   105    				jr nz,notrxe
003058 112A0000            B   106    				ld de,02ah						00305C ED53 D7 5F 00       B   107    				ld (serial_filename),de			003061 CD 4C 31 00         B   108    				call rx_get_header
003065 C0                  B   109    				ret nz
003066 21 FB 5B 00         B   110    				ld hl,ser_rec2_msg
00306A CD 36 14 00         B   111    				call os_show_packed_text
00306E CD F9 45 00         B   112    				call s_goodack
003072 3E01                B   113    				ld a,1							003074 32 EA 5F 00         B   114    				ld (serial_timeout),a
003078 CD A3 45 00         B   115    				call s_getblock					00307C 28 07               B   116    				jr z,rxe_fblok
00307E F5                  B   117    rxe_badblock	push af							00307F CD 0A 46 00         B   118    				call s_badack					003083 F1                  B   119    				pop af
003084 C9                  B   120    				ret
                           B   121    	
003085 2A 47 67 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003089 1150524F            B   123    				ld de,04f5250h					00308D AF                  B   124    				xor a
00308E 28 04               B   125    				jr z,rxe_ok
003090 3E1A                B   126    				ld a,1ah						003092 B7                  B   127    				or a
003093 C9                  B   128    				ret
003094 2A 4A 67 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003098 22 CE 5F 00         B   130    				ld (serial_ez80_address),hl
00309C 01000100            B   131    				ld bc,256						0030A0 DD21 EB 5F 00       B   132    				ld ix,serial_fileheader
0030A5 AF                  B   133    				xor a
0030A6 DDB612              B   134    				or (ix+18)						0030A9 20 0A               B   135    				jr nz,mtones
0030AB DDB611              B   136    				or a,(ix+17)					0030AE 20 05               B   137    				jr nz,mtones
0030B0 0600                B   138    				ld b,0
0030B2 DD4E10              B   139    				ld c,(ix+16)					0030B5 21 45 67 00         B   140    mtones			ld hl,sector_buffer				0030B9 ED5B CE 5F 00       B   141    				ld de,(serial_ez80_address)		0030BE EDB0                B   142    				ldir
                           B   143    				
0030C0 D5                  B   144    				push de
0030C1 CD F9 45 00         B   145    				call s_goodack		
0030C5 DDE1                B   146    				pop ix							0030C7 2A FB 5F 00         B   147    				ld hl,(serial_fileheader+16)	Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030CB 11000100            B   148    				ld de,256
0030CF AF                  B   149    				xor a
0030D0 ED52                B   150    				sbc hl,de						0030D2 28 18               B   151    				jr z,rxe_done
0030D4 38 16               B   152    				jr c,rxe_done
0030D6 EB                  B   153    				ex de,hl
0030D7 ED53 FB 5F 00       B   154    				ld (serial_fileheader+16),de	0030DC DD2A CE 5F 00       B   155    				ld ix,(serial_ez80_address)
0030E1 01000100            B   156    				ld bc,256
0030E5 DD09                B   157    				add ix,bc
0030E7 CD 61 45 00         B   158    				call s_gbloop					0030EB C0                  B   159    				ret nz
0030EC E1                  B   160    rxe_done		pop hl							0030ED CD B0 3D 00         B   161    				call enable_button_nmi			0030F1 2A CE 5F 00         B   162    				ld hl,(serial_ez80_address)
0030F5 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
0030F6 CD 93 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
0030FA 0610                B   169    				ld b,16							0030FC 11 D7 5F 00         B   170    				ld de,serial_filename
003100 CD 45 12 00         B   171    				call os_copy_ascii_run			003104 79                  B   172    				ld a,c
003105 32 E9 5F 00         B   173    				ld (serial_fn_length),a
003109 CD EC 0F 00         B   174    				call os_scan_for_space
                           B   175    				
00310D CD C1 1C 00         B   176    				call hexword_or_bust			003111 CA 42 16 00         B   177    				jp z,os_no_start_addr			003115 ED53 45 69 00       B   178    				ld (data_load_addr),de			00311A 2A 5A 61 00         B   179    				ld hl,(sysram_os_highest)		00311E 2B                  B   180    				dec hl
00311F AF                  B   181    				xor a
003120 ED52                B   182    				sbc hl,de
003122 38 04               B   183    				jr c,os_prok
003124 3E26                B   184    				ld a,026h						003126 B7                  B   185    				or a
003127 C9                  B   186    				ret
                           B   187    
003128 CD 4C 31 00         B   188    os_prok			call rx_get_header
00312C C0                  B   189    				ret nz
                           B   190    
00312D 21 FB 5B 00         B   191    				ld hl,ser_rec2_msg
003131 CD 36 14 00         B   192    				call os_show_packed_text
                           B   193    	
003135 2A 45 69 00         B   194    				ld hl,(data_load_addr)			003139 CD 4F 45 00         B   195    				call serial_receive_file
00313D C0                  B   196    				ret nz							                           B   197    
00313E ED5B FB 5F 00       B   198    				ld de,(serial_fileheader+16)	003143 ED53 48 69 00       B   199    				ld (filesize_cache),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003148 C3 1E 2D 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
00314C                     B   204    rx_get_header
00314C 21 F7 5B 00         B   205    				ld hl,ser_rec_msg
003150 CD 36 14 00         B   206    				call os_show_packed_text
                           B   207    				
003154 3E00                B   208    				ld a,0
003156 32 0C 60 00         B   209    				ld (anim_wait_count),a			00315A 3A 0C 60 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
00315E 3C                  B   211    				inc a
00315F 47                  B   212    				ld b,a
003160 FE06                B   213    				cp 6
003162 20 07               B   214    				jr nz,notsix
003164 0E20                B   215    				ld c,' '
003166 0605                B   216    				ld b,5
003168 AF                  B   217    				xor a
003169 18 02               B   218    				jr mcharset
00316B 0E2E                B   219    notsix			ld c,'.'
00316D 32 0C 60 00         B   220    mcharset		ld (anim_wait_count),a
003171 CD 89 1A 00         B   221    				call os_print_multiple_chars
003175 CD A0 0F 00         B   222    				call home_cursor
                           B   223    				
003179 21 D7 5F 00         B   224    				ld hl,serial_filename			00317D 3E01                B   225    				ld a,1							00317F CD B4 44 00         B   226    				call serial_get_header
003183 C8                  B   227    				ret z
003184 FE83                B   228    				cp 083h							003186 C0                  B   229    				ret nz
003187 CD 99 44 00         B   230    				call os_get_key_press
00318B FE76                B   231    				cp 076h
00318D 20 CB               B   232    				jr nz,get_hdr_loop
00318F 3E80                B   233    				ld a,080h						003191 B7                  B   234    notsto			or a
003192 C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
003193                     B   240    clear_serial_filename
                           B   241    
003193 E5                  B   242    				push hl							003194 21 D7 5F 00         B   243    				ld hl,serial_filename
003198 01100000            B   244    				ld bc,16
00319C AF                  B   245    				xor a
00319D CD C3 15 00         B   246    				call os_bchl_memfill
0031A1 E1                  B   247    				pop hl
0031A2 C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
0031A3 7E                  B     5    os_cmd_tx		ld a,(hl)						0031A4 B7                  B     6    				or a
0031A5 CA 3A 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0031A9 E5                  B     9    				push hl							0031AA 21 D7 5F 00         B    10    				ld hl,serial_filename
0031AE 01100000            B    11    				ld bc,16
0031B2 AF                  B    12    				xor a
0031B3 CD C3 15 00         B    13    				call os_bchl_memfill
0031B7 E1                  B    14    				pop hl
                           B    15    			
0031B8 0610                B    16    				ld b,16							0031BA 11 D7 5F 00         B    17    				ld de,serial_filename
0031BE CD 45 12 00         B    18    				call os_copy_ascii_run			0031C2 79                  B    19    				ld a,c
0031C3 32 E9 5F 00         B    20    				ld (serial_fn_length),a
0031C7 CD EC 0F 00         B    21    				call os_scan_for_space
                           B    22    							
0031CB CD C1 1C 00         B    23    				call hexword_or_bust			0031CF CA 42 16 00         B    24    				jp z,os_no_start_addr			0031D3 ED53 CE 5F 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
0031D8 CD C1 1C 00         B    27    				call hexword_or_bust			0031DC CA 46 16 00         B    28    				jp z,os_no_filesize
0031E0 ED53 D1 5F 00       B    29    				ld (serial_file_length),de
0031E5 21000000            B    30    				ld hl,0
0031E9 3E07                B    31    				ld a,07h						0031EB B7                  B    32    				or a
0031EC ED5A                B    33    				adc hl,de
0031EE 28 1D               B    34    				jr z,s_error
                           B    35    				
0031F0 21 00 5C 00         B    36    				ld hl,ser_send_msg
0031F4 CD 36 14 00         B    37    				call os_show_packed_text
                           B    38    			
0031F8 ED5B D1 5F 00       B    39    				ld de,(serial_file_length)
0031FD 21 D7 5F 00         B    40    				ld hl,serial_filename			003201 DD2A CE 5F 00       B    41    				ld ix,(serial_ez80_address)
003206 CD 18 46 00         B    42    				call serial_send_file
00320A C0                  B    43    				ret nz			
                           B    44    			
00320B 3E20                B    45    				ld a,020h						00320D B7                  B    46    s_error			or a
00320E C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
00320F CD C1 1C 00         B     5    os_cmd_t		call hexword_or_bust			003213 28 05               B     6    				jr z,t_no_hex					003215 ED53 FB 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
00321A 0610                B     9    t_no_hex		ld b,16
00321C C5                  B    10    smaalp			push bc
                           B    11    				
00321D 21 60 32 00         B    12    				ld hl,gtr_cmd_prefix			003221 CD 57 0F 00         B    13    				call os_print_string
003225 ED5B FB 61 00       B    14    				ld de,(mem_mon_addr)
00322A CD 37 13 00         B    15    				call os_show_hex_address
                           B    16    
00322E 21 65 62 00         B    17    				ld hl,output_line
003232 3620                B    18    				ld (hl),' '
003234 23                  B    19    				inc hl
003235 3622                B    20    				ld (hl),022h
003237 0610                B    21    				ld b,16
003239 23                  B    22    mabllp			inc hl
00323A 1A                  B    23    				ld a,(de)	
00323B FE20                B    24    				cp 020h
00323D 38 04               B    25    				jr c,chchar
00323F FE7F                B    26    				cp 07fh
003241 38 02               B    27    				jr c,nchchar
003243 3E7C                B    28    chchar			ld a,07ch
003245 77                  B    29    nchchar			ld (hl),a
003246 13                  B    30    				inc de
003247 10 F0               B    31    				djnz mabllp
                           B    32    
003249 ED53 FB 61 00       B    33    				ld (mem_mon_addr),de
00324E 23                  B    34    				inc hl
00324F 3622                B    35    				ld (hl),022h
003251 23                  B    36    				inc hl
003252 360B                B    37    				ld (hl),11
003254 23                  B    38    				inc hl
003255 3600                B    39    				ld (hl),0
003257 CD 62 13 00         B    40    				call os_print_output_line
00325B C1                  B    41    				pop bc
00325C 10 BE               B    42    				djnz smaalp
00325E AF                  B    43    				xor a
00325F C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
003260 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mount.asm
                           B     3    ;----------------------------------------------
                           B     4    
003263                     B     5    os_cmd_remount
                           B     6    
003263 3E00                B     7    				ld a,0							003265 CD 6E 18 00         B     8    				call os_mount_volumes
003269 CD FF 13 00         B     9    				call os_new_line
00326D AF                  B    10    				xor a
00326E C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
00326F                     B     5    os_cmd_vers
                           B     6    
00326F 21 F4 56 00         B     7    				ld hl,os_version_txt
003273 CD 57 0F 00         B     8    				call os_print_string
                           B     9    			
003277 CD E8 40 00         B    10    				call hwsc_get_version
00327B D5                  B    11    				push de
00327C EB                  B    12    				ex de,hl
00327D CD 56 13 00         B    13    				call os_show_hex_word
                           B    14    				
003281 21 17 57 00         B    15    				ld hl,fwd_slash_txt
003285 CD 57 0F 00         B    16    				call os_print_string
                           B    17    				
003289 21 02 57 00         B    18    				ld hl,hw_version_txt
00328D CD 57 0F 00         B    19    				call os_print_string
003291 D1                  B    20    				pop de
003292 CD 56 13 00         B    21    				call os_show_hex_word
                           B    22    				
003296 CD FF 13 00         B    23    				call os_new_line
00329A CD FF 13 00         B    24    				call os_new_line	
00329E AF                  B    25    				xor a
00329F C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
0032A0 21 CC 62 00         B    22    os_cmd_exec		ld hl,script_flags				0032A4 CB46                B    23    				bit scr_in_script,(hl)
0032A6 C2 37 34 00         B    24    				jp nz,script_error
0032AA E5                  B    25    				push hl
0032AB CD B3 32 00         B    26    				call do_script
0032AF E1                  B    27    				pop hl
0032B0 CB86                B    28    				res scr_in_script,(hl)
0032B2 C9                  B    29    				ret
                           B    30    				
0032B3 CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
0032B5 2A B7 62 00         B    33    				ld hl,(os_args_loc)				0032B9 11 E4 61 00         B    34    				ld de,script_fn					0032BD 060D                B    35    				ld b,13
0032BF CD 45 12 00         B    36    				call os_copy_ascii_run
0032C3 AF                  B    37    				xor a
0032C4 12                  B    38    				ld (de),a
                           B    39    				
0032C5 CD A1 1A 00         B    40    				call fs_get_dir_cluster			0032C9 ED53 C3 62 00       B    41    				ld (script_dir),de
                           B    42    				
0032CE CD CA 16 00         B    43    				call os_check_volume_format		0032D2 C0                  B    44    				ret nz
                           B    45    				
0032D3 CD 03 34 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
0032D7 3A 29 63 00         B    51    scrp_loop		ld a,(key_mod_flags)			0032DB E602                B    52    				and 2
0032DD 28 12               B    53    				jr z,no_quit_script	
0032DF CD 99 44 00         B    54    				call os_get_key_press
0032E3 FE21                B    55    				cp 021h							0032E5 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
0032E7 21 14 5C 00         B    58    				ld hl,script_aborted_msg
0032EB CD 36 14 00         B    59    				call os_show_packed_text
0032EF AF                  B    60    				xor a							0032F0 C9                  B    61    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    62    					
                           B    63    
0032F1 CD 16 34 00         B    64    no_quit_script	call open_script				0032F5 C0                  B    65    				ret nz
0032F6 CD 41 34 00         B    66    				call read_script				0032FA C0                  B    67    				ret nz
0032FB 21 CC 62 00         B    68    				ld hl,script_flags				0032FF CB5E                B    69    				bit scr_end,(hl)
003301 28 02               B    70    				jr z,scr_to_do
003303 AF                  B    71    scr_done		xor a
003304 C9                  B    72    				ret
                           B    73    				
003305 21 13 62 00         B    74    scr_to_do		ld hl,commandstring				003309 7E                  B    75    				ld a,(hl)
00330A FE5B                B    76    				cp '['
00330C 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
00330E 11 5C 57 00         B    79    				ld de,if_command_txt			003312 0603                B    80    				ld b,3
003314 CD 26 12 00         B    81    				call os_compare_strings
003318 28 18               B    82    				jr z,do_exec_if
                           B    83    				
00331A 11 5F 57 00         B    84    				ld de,end_command_txt			00331E 0604                B    85    				ld b,4
003320 CD 26 12 00         B    86    				call os_compare_strings
003324 28 DD               B    87    				jr z,scr_done
                           B    88    			
003326 CD 7B 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
00332A 21 CC 62 00         B    91    exec_scr_next	ld hl,script_flags
00332E CBCE                B    92    				set scr_find_new_line,(hl)
003330 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
003332 21 15 62 00         B   104    do_exec_if		ld hl,commandstring+2			003336 CD F5 0F 00         B   105    				call os_scan_for_non_space
00333A CA 37 34 00         B   106    				jr z,script_error				00333E 11 CD 62 00         B   107    				ld de,if_name_txt
003342 0610                B   108    				ld b,max_if_chars
003344 CD 45 12 00         B   109    				call os_copy_ascii_run			003348 AF                  B   110    				xor a
003349 12                  B   111    				ld (de),a
                           B   112    				
00334A CD F5 0F 00         B   113    				call os_scan_for_non_space		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00334E CA 37 34 00         B   114    				jr z,script_error
003352 DD21 CC 62 00       B   115    				ld ix,script_flags
003357 DDCB0096            B   116    				res scr_if_condition,(ix)
00335B 7E                  B   117    				ld a,(hl)
00335C FE3D                B   118    				cp '='
00335E 28 04               B   119    				jr z,if_equals
003360 DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
003364 CD EC 0F 00         B   122    if_equals		call os_scan_for_space			003368 CD F5 0F 00         B   123    				call os_scan_for_non_space		00336C CA 37 34 00         B   124    				jr z,script_error
003370 11 DF 62 00         B   125    				ld de,if_value_txt				003374 0610                B   126    				ld b,max_if_chars
003376 CD 45 12 00         B   127    				call os_copy_ascii_run
00337A AF                  B   128    				xor a
00337B 12                  B   129    				ld (de),a
                           B   130    				
00337C CD F5 0F 00         B   131    				call os_scan_for_non_space
003380 CA 37 34 00         B   132    				jr z,script_error
003384 11 F1 62 00         B   133    				ld de,if_label_txt				003388 0610                B   134    				ld b,max_if_chars
00338A CD 45 12 00         B   135    				call os_copy_ascii_run			00338E AF                  B   136    				xor a
00338F 12                  B   137    				ld (de),a						                           B   138    								
003390 21 CD 62 00         B   139    				ld hl,if_name_txt				003394 CD 70 1B 00         B   140    				call os_get_envar				003398 C2 2A 33 00         B   141    				jp nz,exec_scr_next				                           B   142    								
00339C 21 DF 62 00         B   143    				ld hl,if_value_txt
0033A0 DD21 CC 62 00       B   144    				ld ix,script_flags
0033A5 DDCB0056            B   145    				bit scr_if_condition,(ix)
0033A9 20 0A               B   146    				jr nz,if_cond_diff
0033AB CD 26 12 00         B   147    				call os_compare_strings			0033AF C2 2A 33 00         B   148    				jp nz,exec_scr_next				0033B3 18 08               B   149    				jr if_cond_met
0033B5 CD 26 12 00         B   150    if_cond_diff	call os_compare_strings			0033B9 CA 2A 33 00         B   151    				jp z,exec_scr_next				                           B   152    
0033BD CD 03 34 00         B   153    if_cond_met		call new_script					                           B   154    
0033C1 CD 16 34 00         B   155    find_if_label	call open_script				0033C5 C0                  B   156    				ret nz
                           B   157    
0033C6 CD 41 34 00         B   158    				call read_script
0033CA C0                  B   159    				ret nz
0033CB 21 CC 62 00         B   160    				ld hl,script_flags
0033CF CB5E                B   161    				bit scr_end,(hl)
0033D1 C2 03 33 00         B   162    				jp nz,scr_done
                           B   163    				
0033D5 21 13 62 00         B   164    				ld hl,commandstring				0033D9 7E                  B   165    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033DA FE5B                B   166    				cp '['
0033DC 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
0033DE 23                  B   169    if_find_csb		inc hl
0033DF 7E                  B   170    				ld a,(hl)
0033E0 B7                  B   171    				or a
0033E1 28 18               B   172    				jr z,not_a_label				0033E3 FE5D                B   173    				cp ']'							0033E5 20 F7               B   174    				jr nz,if_find_csb
0033E7 3600                B   175    				ld (hl),0						0033E9 21 14 62 00         B   176    				ld hl,commandstring+1
0033ED 11 F1 62 00         B   177    				ld de,if_label_txt				0033F1 0610                B   178    				ld b,max_if_chars
0033F3 CD 26 12 00         B   179    				call os_compare_strings
0033F7 CA 2A 33 00         B   180    				jp z,exec_scr_next				                           B   181    
0033FB 21 CC 62 00         B   182    not_a_label		ld hl,script_flags
0033FF CBCE                B   183    				set scr_find_new_line,(hl)		003401 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
003403 E5                  B   188    new_script		push hl
003404 21000000            B   189    				ld hl,0
003408 22 C6 62 00         B   190    				ld (script_file_offset),hl		00340C 21 CC 62 00         B   191    				ld hl,script_flags
003410 CB8E                B   192    				res scr_find_new_line,(hl)		003412 CB9E                B   193    				res scr_end,(hl)
003414 E1                  B   194    				pop hl
003415 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
003416 CD A1 1A 00         B   199    open_script		call fs_get_dir_cluster			00341A D5                  B   200    				push de
00341B ED5B C3 62 00       B   201    				ld de,(script_dir)				003420 CD AD 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
003424 21 E4 61 00         B   204    				ld hl,script_fn					003428 CD 62 16 00         B   205    				call os_find_file				00342C ED53 C9 62 00       B   206    				ld (script_length),de			003431 D1                  B   207    				pop de
003432 C0                  B   208    				ret nz
003433 79                  B   209    				ld a,c							003434 B7                  B   210    				or a
003435 28 04               B   211    				jr z,scr_flok
                           B   212    				
003437 3E8C                B   213    script_error	ld a,08ch
003439 B7                  B   214    				or a
00343A C9                  B   215    				ret
                           B   216    				
00343B CD AD 1A 00         B   217    scr_flok		call fs_update_dir_cluster		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00343F AF                  B   218    				xor a
003440 C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
003441 21 13 62 00         B   224    read_script		ld hl,commandstring				003445 01500000            B   225    				ld bc,max_buffer_chars			003449 3E20                B   226    				ld a,32
00344B CD C3 15 00         B   227    				call os_bchl_memfill
                           B   228    				
00344F 11500000            B   229    				ld de,max_buffer_chars			003453 CD 71 16 00         B   230    				call os_set_load_length
                           B   231    				
003457 AF                  B   232    				xor a
003458 2A C9 62 00         B   233    				ld hl,(script_length)
00345C ED5B C6 62 00       B   234    				ld de,(script_file_offset)		003461 37                  B   235    				scf
003462 ED52                B   236    				sbc hl,de						003464 30 08               B   237    				jr nc,not_eoscr					003466 21 CC 62 00         B   238    				ld hl,script_flags
00346A CBDE                B   239    				set scr_end,(hl)				00346C AF                  B   240    				xor a
00346D C9                  B   241    				ret
00346E CD 79 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
003472 21 13 62 00         B   244    				ld hl,commandstring				003476 CD 8F 16 00         B   245    				call os_read_bytes_from_file
00347A B7                  B   246    				or a			
00347B 28 03               B   247    				jr z,scr_load_ok
00347D FECC                B   248    				cp 0cch							00347F C0                  B   249    				ret nz							                           B   250    
003480 21 CC 62 00         B   251    scr_load_ok		ld hl,script_flags
003484 CB4E                B   252    				bit scr_find_new_line,(hl)		003486 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003488 21 13 62 00         B   255    				ld hl,commandstring				00348C 0650                B   256    				ld b,max_buffer_chars
00348E 7E                  B   257    scr_fcr			ld a,(hl)
00348F FE20                B   258    				cp 32
003491 38 05               B   259    				jr c,scr_gotclcr
003493 23                  B   260    				inc hl
003494 10 F8               B   261    				djnz scr_fcr
003496 AF                  B   262    				xor a
003497 C9                  B   263    				ret
003498 3620                B   264    scr_gotclcr		ld (hl),32						00349A 23                  B   265    				inc hl
00349B 10 FB               B   266    				djnz scr_gotclcr
00349D AF                  B   267    				xor a
00349E C9                  B   268    				ret
                           B   269    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00349F FD2A C6 62 00       B   270    scr_fnl			ld iy,(script_file_offset)
0034A4 21 13 62 00         B   271    				ld hl,commandstring	
0034A8 7E                  B   272    scr_find_cr		ld a,(hl)						0034A9 B7                  B   273    				or a
0034AA 20 07               B   274    				jr nz,scr_neocl					0034AC FD22 C6 62 00       B   275    scr_eocl		ld (script_file_offset),iy
0034B1 18 8E               B   276    				jr read_script				
0034B3 FE20                B   277    scr_neocl		cp 20h							0034B5 38 05               B   278    				jr c,scr_got_cr
0034B7 23                  B   279    				inc hl
0034B8 FD23                B   280    				inc iy
0034BA 18 EC               B   281    				jr scr_find_cr
                           B   282    				
0034BC 7E                  B   283    scr_got_cr		ld a,(hl)
0034BD B7                  B   284    				or a							0034BE 28 EC               B   285    				jr z,scr_eocl					0034C0 FE20                B   286    				cp 20h
0034C2 30 05               B   287    				jr nc,scr_got_ch				0034C4 23                  B   288    				inc hl
0034C5 FD23                B   289    				inc iy
0034C7 18 F3               B   290    				jr scr_got_cr
                           B   291    
0034C9 FD22 C6 62 00       B   292    scr_got_ch		ld (script_file_offset),iy
0034CE 21 CC 62 00         B   293    				ld hl,script_flags				0034D2 CB8E                B   294    				res scr_find_new_line,(hl)
0034D4 C3 41 34 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0034D8                     B     7    os_cmd_ltn
                           B     8    
0034D8 AF                  B     9    				xor a
0034D9 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034DA                     B     5    os_cmd_pen
                           B     6    	
0034DA 0612                B     7    				ld b,18							0034DC DD21 92 5F 00       B     8    				ld ix,current_pen
                           B     9    				
0034E1 CD C1 1C 00         B    10    chpenlp			call hexword_or_bust			0034E5 28 0D               B    11    				jr z,pendone					0034E7 23                  B    12    				inc hl
0034E8 DD7300              B    13    				ld (ix),e
0034EB DD7201              B    14    				ld (ix+1),d
0034EE DD23                B    15    				inc ix
0034F0 DD23                B    16    				inc ix
0034F2 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034F4 21 96 5F 00         B    19    pendone			ld hl,pen_palette				0034F8 CD B7 3E 00         B    20    				call hswc_set_ui_colours
0034FC AF                  B    21    				xor a
0034FD C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034FE                     B     5    os_cmd_palette
                           B     6    
0034FE 0610                B     7    				ld b,16							003500 DD21 96 5F 00       B     8    				ld ix,pen_palette
                           B     9    				
003505 0E00                B    10    				ld c,0
003507 C5                  B    11    chcollp			push bc
003508 CD C1 1C 00         B    12    				call hexword_or_bust			00350C C1                  B    13    				pop bc
00350D 28 0E               B    14    				jr z,colrdone					00350F 0C                  B    15    				inc c
003510 23                  B    16    				inc hl
003511 DD7300              B    17    				ld (ix),e
003514 DD7201              B    18    				ld (ix+1),d
003517 DD23                B    19    				inc ix
003519 DD23                B    20    				inc ix
00351B 10 EA               B    21    				djnz chcollp
                           B    22    			
00351D 79                  B    23    colrdone		ld a,c
00351E B7                  B    24    				or a
00351F 20 04               B    25    				jr nz,pal_ok
003521 3E81                B    26    				ld a,81h						003523 B7                  B    27    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
003524 C9                  B    28    				ret
003525 21 96 5F 00         B    29    pal_ok			ld hl,pen_palette
003529 CD B7 3E 00         B    30    				call hswc_set_ui_colours	
00352D AF                  B    31    				xor a
00352E C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
00352F                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
00352F CD 26 3C 00         B    15    				call disable_ms_irq
                           B    16    
003533 21 59 61 00         B    17    				ld hl,devices_connected
003537 CB8E                B    18    				res 1,(hl)
                           B    19    		
003539 CD 2D 42 00         B    20    				call init_mouse
00353D C0                  B    21    				ret nz
                           B    22    			
00353E AF                  B    23    				xor a
00353F 32 32 63 00         B    24    				ld (mouse_packet_index),a
003543 32 33 63 00         B    25    				ld (mouse_buttons),a
003547 21000000            B    26    				ld hl,0
00354B 22 34 63 00         B    27    				ld (mouse_disp_x),hl
00354F 22 37 63 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
003553 21800200            B    30    				ld hl,window_width_pixels
003557 11E00100            B    31    				ld de,window_height_pixels
00355B CD 80 14 00         B    32    				call os_set_mouse_window
                           B    33    
00355F CD 20 3C 00         B    34    				call enable_ms_irq
                           B    35    
003563 21 59 61 00         B    36    				ld hl,devices_connected
003567 CBCE                B    37    				set 1,(hl)
003569 AF                  B    38    				xor a
00356A C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
00356B                     B     5    os_cmd_vmode
                           B     6    	
00356B CD C1 1C 00         B     7    				call hexword_or_bust			00356F 20 04               B     8    				jr nz,vm_data					003571 3E81                B     9    				ld a,81h						003573 B7                  B    10    				or a
003574 C9                  B    11    				ret
                           B    12    
003575 7B                  B    13    vm_data			ld a,e
003576 CD 9C 15 00         B    14    				call os_set_vmode
00357A C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00357B                     B     5    os_cmd_font
                           B     6    	
00357B CD CA 16 00         B     7    				call os_check_volume_format	
00357F C0                  B     8    				ret nz
                           B     9    				
003580 CD 43 29 00         B    10    				call filename_or_bust			003584 22 45 69 00         B    11    				ld (scratch_pad),hl
                           B    12    
003588 CD A1 1A 00         B    13    				call fs_get_dir_cluster			00358C ED53 48 69 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
003591 CD 27 17 00         B    16    				call os_root_dir				003595 C0                  B    17    				ret nz
003596 21 04 36 00         B    18    				ld hl,fonts_fn
00359A CD 17 17 00         B    19    				call os_change_dir
00359E 20 1E               B    20    				jr nz,no_font
                           B    21    				
0035A0 2A 45 69 00         B    22    				ld hl,(scratch_pad)
0035A4 CD 62 16 00         B    23    				call os_find_file				0035A8 20 14               B    24    				jr nz,no_font
                           B    25    				
0035AA 11000800            B    26    				ld de,800h
0035AE CD 71 16 00         B    27    				call os_set_load_length			                           B    28    
0035B2 21000080            B    29    				ld hl,vram_a_addr				0035B6 CD 8F 16 00         B    30    				call os_read_bytes_from_file
0035BA CD CA 35 00         B    31    				call convert_font
                           B    32    				
0035BE F5                  B    33    no_font			push af
0035BF ED5B 48 69 00       B    34    				ld de,(scratch_pad+3)			0035C4 CD AD 1A 00         B    35    				call fs_update_dir_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
0035C8 F1                  B    36    				pop af
0035C9 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
0035CA 1EFF                B    42    convert_font	ld e,255						0035CC 01080000            B    43    				ld bc,8
0035D0 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
0035D4 CD DF 35 00         B    45    conv_allch		call char_to_font
0035D8 AF                  B    46    				xor a
0035D9 ED42                B    47    				sbc hl,bc
0035DB 1D                  B    48    				dec e
0035DC 20 F6               B    49    				jr nz,conv_allch
0035DE C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
0035DF E5                  B    57    char_to_font	push hl
0035E0 C5                  B    58    				push bc
0035E1 01400000            B    59    				ld bc,64
0035E5 43                  B    60    				ld b,e
0035E6 ED4C                B    61    				mlt bc
0035E8 DD210000 80         B    62    				ld ix,vram_a_addr
0035ED DD09                B    63    				add ix,bc
0035EF CD F7 35 00         B    64    				call conv_char
0035F3 C1                  B    65    				pop bc
0035F4 E1                  B    66    				pop hl
0035F5 AF                  B    67    				xor a
0035F6 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
0035F7 0608                B    72    conv_char		ld b,8
0035F9 7E                  B    73    bfontlp1		ld a,(hl)
0035FA DD7700              B    74    				ld (ix),a
0035FD 23                  B    75    				inc hl
0035FE ED3208              B    76    				lea ix,ix+8
003601 10 F6               B    77    				djnz bfontlp1
003603 C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
003604 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
00360A 7E                  B     8    os_cmd_set		ld a,(hl)					; i
00360B B7                  B     9    				or a
00360C 28 3B               B    10    				jr z,show_envars
                           B    11    
00360E 11 48 69 00         B    12    				ld de,scratch_pad+3			; p
003612 7E                  B    13    evsalp1			ld a,(hl)
003613 12                  B    14    				ld (de),a
003614 B7                  B    15    				or a
003615 28 2E               B    16    				jr z,set_bad_args
003617 FE3D                B    17    				cp '='
003619 28 04               B    18    				jr z,evsadone1
00361B 23                  B    19    				inc hl
00361C 13                  B    20    				inc de
00361D 18 F3               B    21    				jr evsalp1
00361F AF                  B    22    evsadone1		xor a
003620 12                  B    23    				ld (de),a
003621 13                  B    24    				inc de
003622 23                  B    25    				inc hl
003623 ED53 45 69 00       B    26    				ld (scratch_pad),de
                           B    27    
003628 7E                  B    28    evsalp2			ld a,(hl)
003629 12                  B    29    				ld (de),a
00362A FE20                B    30    				cp ' '
00362C 28 07               B    31    				jr z,evsadone2
00362E B7                  B    32    				or a
00362F 28 14               B    33    				jr z,set_bad_args
003631 23                  B    34    				inc hl
003632 13                  B    35    				inc de
003633 18 F3               B    36    				jr evsalp2
003635 AF                  B    37    evsadone2		xor a
003636 12                  B    38    				ld (de),a
                           B    39    				
003637 21 48 69 00         B    40    				ld hl,scratch_pad+3
00363B ED5B 45 69 00       B    41    				ld de,(scratch_pad)
003640 CD B0 1B 00         B    42    				call os_set_envar
003644 C9                  B    43    				ret
                           B    44    
003645 3E82                B    45    set_bad_args	ld a,82h
003647 B7                  B    46    				or a
003648 C9                  B    47    				ret
                           B    48    				
                           B    49    
003649 21 56 63 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
00364D 7E                  B    52    show_envlp		ld a,(hl)
00364E FEFF                B    53    				cp 0ffh
003650 28 12               B    54    				jr z,set_done
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
003652 E5                  B    55    				push hl
003653 CD 57 0F 00         B    56    				call os_print_string
003657 CD FF 13 00         B    57    				call os_new_line
00365B E1                  B    58    				pop hl
                           B    59    				
00365C 23                  B    60    set_fnl			inc hl
00365D 7E                  B    61    				ld a,(hl)
00365E B7                  B    62    				or a
00365F 20 FB               B    63    				jr nz,set_fnl
003661 23                  B    64    				inc hl
003662 18 E9               B    65    				jr show_envlp
                           B    66    				
003664 AF                  B    67    set_done		xor a
003665 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003666 FD21 BC 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
00366B FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00366F C3 DE 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
003673 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003677 ED53 06 37 00       B     6    				ld (aud_per),de
00367C 3E40                B     7    				ld a,64
00367E 32 08 37 00         B     8    				ld (aud_vol),a
003682 3E11                B     9    				ld a,11h
003684 32 09 37 00         B    10    				ld (aud_chans),a
                           B    11    				
003688 CD C1 1C 00         B    12    				call hexword_or_bust			00368C 20 06               B    13    				jr nz,alocok					00368E CD F8 43 00         B    14    				call hwsc_disable_audio			003692 AF                  B    15    				xor a
003693 C9                  B    16    				ret
003694 ED53 FA 36 00       B    17    alocok			ld (aud_loc),de
003699 ED53 00 37 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
00369E CD C1 1C 00         B    20    				call hexword_or_bust
0036A2 20 04               B    21    				jr nz,gotaudlen
0036A4 3E8D                B    22    missaudpar		ld a,8dh						0036A6 B7                  B    23    				or a
0036A7 C9                  B    24    				ret				
0036A8 ED53 FD 36 00       B    25    gotaudlen		ld (aud_len),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
0036AD ED53 03 37 00       B    26    				ld (aud_len_loop),de
                           B    27    				
0036B2 CD C1 1C 00         B    28    				call hexword_or_bust
0036B6 28 33               B    29    				jr z,play_sound
0036B8 7B                  B    30    				ld a,e
0036B9 32 06 37 00         B    31    				ld (aud_per),a
0036BD 7A                  B    32    				ld a,d
0036BE 32 07 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
0036C2 CD C1 1C 00         B    35    				call hexword_or_bust
0036C6 28 23               B    36    				jr z,play_sound
0036C8 7B                  B    37    				ld a,e
0036C9 32 08 37 00         B    38    				ld (aud_vol),a
                           B    39    				
0036CD CD C1 1C 00         B    40    				call hexword_or_bust
0036D1 28 18               B    41    				jr z,play_sound
0036D3 7B                  B    42    				ld a,e
0036D4 32 09 37 00         B    43    				ld (aud_chans),a
                           B    44    				
0036D8 CD C1 1C 00         B    45    				call hexword_or_bust
0036DC 28 0D               B    46    				jr z,play_sound
0036DE 7B                  B    47    				ld a,e
0036DF B7                  B    48    				or a
0036E0 20 09               B    49    				jr nz,play_sound
0036E2 11010000            B    50    				ld de,1
0036E6 ED53 03 37 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036EB 21 FA 36 00         B    53    play_sound		ld hl,audio_structure
0036EF 3A 09 37 00         B    54    				ld a,(aud_chans)
0036F3 4F                  B    55    				ld c,a
0036F4 CD AB 43 00         B    56    				call hwsc_play_audio
0036F8 AF                  B    57    				xor a
0036F9 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
0036FA                     B    63    audio_structure
                           B    64    
0036FA 000000              B    65    aud_loc			dw24 0			;loc
0036FD 000000              B    66    aud_len			dw24 0			;len
003700 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
003703 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
003706 FFFF                B    70    aud_per			dw 0ffffh		;per
003708 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003709 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3129    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00370A C9                  A  3130    os_cmd_unused	ret		; <- dummy command, sho
                           A  3131    
                           A  3132    ;----------------------------------------------
                           A  3133    
00370B                     A  3134    os_get_mem_high
                           A  3135    
00370B 2A 5A 61 00         A  3136    		ld hl,(sysram_os_highest)
00370F ED5B 5D 61 00       A  3137    		ld de,(vram_a_os_highest)
003714 ED4B 60 61 00       A  3138    		ld bc,(vram_b_os_highest)
003719 AF                  A  3139    		xor a
00371A C9                  A  3140    		ret
                           A  3141    
                           A  3142    ;----------------------------------------------
                           A  3143    
00371B                     A  3144    test_amoeba_vers
                           A  3145    
00371B CD E8 40 00         A  3146    				call hwsc_get_version			00371F 21060100            A  3147    				ld hl,amoeba_version_required-1
003723 AF                  A  3148    				xor a
003724 ED52                A  3149    				sbc hl,de
003726 D8                  A  3150    				ret c
                           A  3151    				
003727 21 78 57 00         A  3152    				ld hl,hw_warn_txt2
00372B 11070100            A  3153    				ld de,amoeba_version_required
00372F CD C7 10 00         A  3154    				call hexword_to_ascii
                           A  3155    				
003733 21004080            A  3156    				ld hl,vram_a_addr+16384			003737 222010FF            A  3157    				ld (bitmap_parameters),hl		00373B 3600                A  3158    				ld (hl),0
00373D E5                  A  3159    				push hl
00373E D1                  A  3160    				pop de
00373F 13                  A  3161    				inc de
003740 01002C01            A  3162    				ld bc,320*240
003744 EDB0                A  3163    				ldir
                           A  3164    					
003746 DD2138D1 80         A  3165    				ld ix,vram_a_addr+16384+(320*11
00374B FD21 63 57 00       A  3166    				ld iy,hw_warn_txt1				003750 FD7E00              A  3167    nextwchar		ld a,(iy)
003753 B7                  A  3168    				or a
003754 28 3B               A  3169    				jr z,wmsg_done
003756 21400000            A  3170    				ld hl,64
00375A 67                  A  3171    				ld h,a
00375B ED6C                A  3172    				mlt hl
00375D 11000080            A  3173    				ld de,vram_a_addr
003761 19                  A  3174    				add hl,de						003762 0E08                A  3175    				ld c,8
003764 7E                  A  3176    wpixlp2			ld a,(hl)
003765 0608                A  3177    				ld b,8
003767 CB17                A  3178    wpixlp1			rl a
003769 30 06               A  3179    				jr nc,nowpix
00376B DD360001            A  3180    				ld (ix),1
00376F 18 04               A  3181    				jr wpixd
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003771 DD360000            A  3182    nowpix			ld (ix),0
003775 DD23                A  3183    wpixd			inc ix
003777 10 EE               A  3184    				djnz wpixlp1
003779 11380100            A  3185    				ld de,320-8
00377D DD19                A  3186    				add ix,de
00377F 11080000            A  3187    				ld de,8
003783 19                  A  3188    				add hl,de
003784 0D                  A  3189    				dec c
003785 20 DD               A  3190    				jr nz,wpixlp2
                           A  3191    				
003787 1108F6FF            A  3192    				ld de,8-(320*8)
00378B DD19                A  3193    				add ix,de
00378D FD23                A  3194    				inc iy
00378F 18 BF               A  3195    				jr nextwchar
                           A  3196    
                           A  3197    
003791 CD 22 42 00         A  3198    wmsg_done		call purge_keyboard
003795 CD B1 3B 00         A  3199    				call set_irq_vectors
003799 CD 09 3C 00         A  3200    				call enable_os_irqs
00379D FB                  A  3201    				ei
                           A  3202    
00379E CD 93 40 00         A  3203    wmsg_loop		call hwsc_wait_vrt			;	                           A  3204    				
0037A2 11CC0C00            A  3205    				ld de,ccch
0037A6 21 F8 61 00         A  3206    				ld hl,cursorflashtimer
0037AA 34                  A  3207    				inc (hl)
0037AB 7E                  A  3208    				ld a,(hl)
0037AC E640                A  3209    				and 64
0037AE 28 04               A  3210    				jr z,got_wcolour
0037B0 11000000            A  3211    				ld de,000h
0037B4 ED530200 FF         A  3212    got_wcolour		ld (hw_palette+2),de
                           A  3213    								
0037B9 CD 99 44 00         A  3214    				call os_get_key_press
0037BD FE76                A  3215    				cp 76h
0037BF 20 DD               A  3216    				jr nz,wmsg_loop
0037C1 C3000000            A  3217    				jp 0
                           A  3218    				
                           A  3219    ;----------------------------------------------
                           A  3220    ; Storage Device Drivers
                           A  3221    ;----------------------------------------------
                           A  3222    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
0037C5 C3 D9 37 00         B    76    sd_card_driver	jp sd_initialize			; $
0037C9 C3 FB 37 00         B    77    				jp sd_read_sector			; $
0037CD C3 01 38 00         B    78    				jp sd_write_sector			; $
0037D1 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
0037D9 CD 07 38 00         B    85    sd_initialize	call sd_init_main
0037DD B7                  B    86    				or a						; i
0037DE 28 05               B    87    				jr z,sd_inok
0037E0 CD 98 3B 00         B    88    				call sd_power_off			; i
0037E4 C9                  B    89    				ret
                           B    90    
0037E5 CD 9D 3B 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
0037E9 CD 69 39 00         B    93    				call sd_read_cid			; a
0037ED 20 06               B    94    				jr nz,sd_done
0037EF E5                  B    95    				push hl						; c
0037F0 CD D2 38 00         B    96    				call sd_read_csd
0037F4 E1                  B    97    				pop hl
                           B    98    
0037F5 CD 80 3B 00         B    99    sd_done			call sd_deselect_card		; R
0037F9 B7                  B   100    				or a						; I
0037FA C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
0037FB CD ED 39 00         B   105    sd_read_sector	call sd_read_sector_main
0037FF 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
003801 CD 13 3A 00         B   110    sd_write_sector	call sd_write_sector_main
003805 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003807 AF                  B   115    sd_init_main	xor a							003808 32 17 3B 00         B   116    				ld (sd_card_info),a			
                           B   117    
00380C CD 98 3B 00         B   118    				call sd_power_off				                           B   119    				
003810 11004000            B   120    				ld de,16384						003814 CD 03 41 00         B   121    				call hwsc_time_delay
                           B   122    							
003818 CD 8C 3B 00         B   123    				call sd_power_on				                           B   124    
00381C 11830000            B   125    				ld de,131						003820 CD 03 41 00         B   126    				call hwsc_time_delay
                           B   127    				
003824 060A                B   128    				ld b,10							003826 CD 9C 3A 00         B   129    sd_ecilp		call sd_send_eight_clocks
00382A 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
00382C 21 EB 3A 00         B   132    				ld hl,CMD0_string				003830 CD B4 3A 00         B   133    				call sd_send_command_string		003834 FE01                B   134    				cp 01h							003836 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003838 3E01                B   137    				ld a,sd_error_spi_mode_failed
00383A C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
00383B 21 F1 3A 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				00383F CD B4 3A 00         B   143    				call sd_send_command_string
003843 FE01                B   144    				cp 01h
003845 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
003847 0604                B   147    				ld b,4
003849 CD DC 3A 00         B   148    				call sd_read_bytes_to_sector_bu
00384D 3E01                B   149    				ld a,1
00384F 23                  B   150    				inc hl
003850 23                  B   151    				inc hl
003851 BE                  B   152    				cp (hl)							003852 28 03               B   153    				jr z,sd_vrok
003854 3E13                B   154    				ld a,sd_error_vrange_bad
003856 C9                  B   155    				ret				
                           B   156    
003857 3EAA                B   157    sd_vrok			ld a,0aah
003859 23                  B   158    				inc hl
00385A BE                  B   159    				cp (hl)
00385B 28 03               B   160    				jr z,sd_check_pattern_ok
00385D 3E14                B   161    				ld a,sd_error_check_pattern_bad
00385F C9                  B   162    				ret
                           B   163    				
003860                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   167    	
003860 01401F00            B   168    				ld bc,8000						                           B   169    
003864 3E77                B   170    sdhc_iwl		ld a,CMD55						003866 CD A3 3A 00         B   171    				call sd_send_command_null_args
                           B   172    				
00386A 21 F7 3A 00         B   173    				ld hl,ACMD41HCS_string			00386E CD B4 3A 00         B   174    				call sd_send_command_string
003872 28 0C               B   175    				jr z,sdhc_init_ok				003874 CB57                B   176    				bit 2,a
003876 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
003878 0B                  B   179    				dec bc
003879 78                  B   180    				ld a,b
00387A B1                  B   181    				or c
00387B 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
00387D 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	00387F C9                  B   185    				ret
                           B   186    				
003880                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
003880 3E7A                B   191    				ld a,CMD58						003882 CD A3 3A 00         B   192    				call sd_send_command_null_args
                           B   193    					
003886 0604                B   194    				ld b,4							003888 CD DC 3A 00         B   195    				call sd_read_bytes_to_sector_bu
00388C 7E                  B   196    				ld a,(hl)
00388D E640                B   197    				and 040h						00388F 0F                  B   198    				rrca
003890 0F                  B   199    				rrca 
003891 F602                B   200    				or 00000010b				
003893 32 17 3B 00         B   201    				ld (sd_card_info),a				003897 AF                  B   202    				xor a							003898 C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
003899 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
00389D 3E77                B   210    sd_iwl			ld a,CMD55						00389F CD A3 3A 00         B   211    				call sd_send_command_null_args
                           B   212    
0038A3 3E69                B   213    				ld a,ACMD41						0038A5 CD A3 3A 00         B   214    				call sd_send_command_null_args
0038A9 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
0038AB CB57                B   217    				bit 2,a				
0038AD 20 10               B   218    				jr nz,sd_mmc_init				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   219    							
0038AF 0B                  B   220    				dec bc
0038B0 78                  B   221    				ld a,b
0038B1 B1                  B   222    				or c
0038B2 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
0038B4 3E11                B   225    				ld a,sd_error_sd_init_failed	0038B6 C9                  B   226    				ret
                           B   227    				
0038B7 3E01                B   228    sd_rdy			ld a,1
0038B9 32 17 3B 00         B   229    				ld (sd_card_info),a				0038BD AF                  B   230    				xor a							0038BE C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
0038BF 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
0038C3 3E41                B   237    sdmmc_iwl		ld a,CMD1
0038C5 CD A3 3A 00         B   238    				call sd_send_command_null_args	0038C9 C8                  B   239    				ret z							                           B   240    				
0038CA 0B                  B   241    sd_mnrdy		dec bc
0038CB 78                  B   242    				ld a,b
0038CC B1                  B   243    				or c
0038CD 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
0038CF 3E10                B   246    				ld a,sd_error_mmc_init_failed	0038D1 C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
0038D2                     B   253    sd_read_csd
                           B   254    				
0038D2 3E49                B   255    				ld a,CMD9						0038D4 CD A3 3A 00         B   256    				call sd_send_command_null_args	0038D8 C2 F9 39 00         B   257    				jp nz,sd_bcr_error				                           B   258    
0038DC CD 87 3A 00         B   259    				call sd_wait_data_token			0038E0 C2 02 3A 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
0038E4 0612                B   262    sd_id_ok		ld b,18							0038E6 CD DC 3A 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
0038EA DD21 45 67 00       B   265    				ld ix,sector_buffer				0038EF DDCB0076            B   266    				bit 6,(ix)
0038F3 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
0038F5 DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						0038F8 DD6608              B   270    				ld h,(ix+8)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038FB 23                  B   271    				inc hl
0038FC 3E0A                B   272    				ld a,10
0038FE 01000000            B   273    				ld bc,0
003902 4029                B   274    sd_csd2lp		add.sis hl,hl
003904 CB11                B   275    				rl c
003906 CB10                B   276    				rl b
003908 3D                  B   277    				dec a
003909 20 F7               B   278    				jr nz,sd_csd2lp
00390B EB                  B   279    				ex de,hl						00390C AF                  B   280    				xor a
00390D C9                  B   281    				ret
                           B   282    				
00390E DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						003911 E603                B   284    				and 00000011b
003913 57                  B   285    				ld d,a
003914 DD5E07              B   286    				ld e,(ix+7)
003917 DD7E08              B   287    				ld a,(ix+8)
00391A E6C0                B   288    				and 11000000b
00391C CB27                B   289    				sla a
00391E CB13                B   290    				rl e
003920 CB12                B   291    				rl d
003922 CB27                B   292    				sla a
003924 CB13                B   293    				rl e
003926 CB12                B   294    				rl d							                           B   295    				
003928 DD7E09              B   296    				ld a,(ix+9)
00392B E603                B   297    				and 00000011b
00392D 47                  B   298    				ld b,a
00392E DD7E0A              B   299    				ld a,(ix+10)
003931 E680                B   300    				and 10000000b
003933 CB27                B   301    				sla a
003935 CB10                B   302    				rl b							                           B   303    				
003937 04                  B   304    				inc b
003938 04                  B   305    				inc b
003939 21000000            B   306    				ld hl,0
00393D CB23                B   307    sd_cmsh			sla e
00393F CB12                B   308    				rl d
003941 CB15                B   309    				rl l
003943 CB14                B   310    				rl h
003945 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
003947 DD7E05              B   313    				ld a,(ix+5)
00394A E60F                B   314    				and 00001111b					00394C 28 17               B   315    				jr z,sd_nbls
00394E 47                  B   316    				ld b,a
00394F CB23                B   317    sd_blsh			sla e
003951 CB12                B   318    				rl d
003953 CB15                B   319    				rl l
003955 CB14                B   320    				rl h
003957 10 F6               B   321    				djnz sd_blsh					                           B   322    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003959 0609                B   323    				ld b,9							00395B CB3C                B   324    sd_cbsec		srl h
00395D CB1D                B   325    				rr l
00395F CB1A                B   326    				rr d
003961 CB1B                B   327    				rr e
003963 10 F6               B   328    				djnz sd_cbsec
                           B   329    
003965 E5                  B   330    sd_nbls			push hl
003966 C1                  B   331    				pop bc							003967 AF                  B   332    				xor a
003968 C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
003969                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
003969 3E4A                B   341    				ld a,CMD10						00396B CD A3 3A 00         B   342    				call sd_send_command_null_args
00396F C2 F9 39 00         B   343    				jp nz,sd_bcr_error				                           B   344    
003973 CD 87 3A 00         B   345    				call sd_wait_data_token			003977 C2 02 3A 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
00397B 0612                B   348    				ld b,18
00397D CD DC 3A 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
003981 21 48 67 00         B   351    				ld hl,sector_buffer+03h			003985 11 65 67 00         B   352    				ld de,sector_buffer+20h
003989 01050000            B   353    				ld bc,5
00398D 3A 17 3B 00         B   354    				ld a,(sd_card_info)
003991 E60F                B   355    				and 0fh
003993 20 01               B   356    				jr nz,sd_cn5
003995 03                  B   357    				inc bc
003996 EDB0                B   358    sd_cn5			ldir
003998 E5                  B   359    				push hl
003999 D5                  B   360    				push de
00399A 21 FD 3A 00         B   361    				ld hl,sd_vnchars
00399E 01140000            B   362    				ld bc,20
0039A2 EDB0                B   363    				ldir
0039A4 D1                  B   364    				pop de
0039A5 E1                  B   365    				pop hl
0039A6 13                  B   366    				inc de
0039A7 13                  B   367    				inc de
0039A8 7E                  B   368    				ld a,(hl)
0039A9 CB3F                B   369    				srl a
0039AB CB3F                B   370    				srl a
0039AD CB3F                B   371    				srl a
0039AF CB3F                B   372    				srl a
0039B1 C630                B   373    				add a,30h						0039B3 12                  B   374    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039B4 13                  B   375    				inc de
0039B5 13                  B   376    				inc de
0039B6 7E                  B   377    				ld a,(hl)
0039B7 E60F                B   378    				and 0fh
0039B9 C630                B   379    				add a,30h
0039BB 12                  B   380    				ld (de),a						0039BC 13                  B   381    				inc de
0039BD 13                  B   382    				inc de
0039BE 13                  B   383    				inc de
0039BF 13                  B   384    				inc de
0039C0 13                  B   385    				inc de
0039C1 23                  B   386    				inc hl
0039C2 0604                B   387    				ld b,4
0039C4 7E                  B   388    sd_snulp		ld a,(hl)						0039C5 CB3F                B   389    				srl a
0039C7 CB3F                B   390    				srl a
0039C9 CB3F                B   391    				srl a
0039CB CB3F                B   392    				srl a
0039CD C630                B   393    				add a,30h
0039CF FE3A                B   394    				cp 3ah
0039D1 38 02               B   395    				jr c,sd_hvl1
0039D3 C607                B   396    				add a,07h
0039D5 12                  B   397    sd_hvl1			ld (de),a
0039D6 13                  B   398    				inc de
0039D7 7E                  B   399    				ld a,(hl)
0039D8 E60F                B   400    				and 0fh
0039DA C630                B   401    				add a,30h
0039DC FE3A                B   402    				cp 3ah
0039DE 38 02               B   403    				jr c,sd_hvl2
0039E0 C607                B   404    				add a,07h
0039E2 12                  B   405    sd_hvl2			ld (de),a
0039E3 13                  B   406    				inc de
0039E4 23                  B   407    				inc hl
0039E5 10 DD               B   408    				djnz sd_snulp
                           B   409    				
0039E7 21 65 67 00         B   410    				ld hl,sector_buffer+20h			0039EB AF                  B   411    				xor a
0039EC C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
0039ED                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
0039ED CD 5E 3A 00         B   422    				call sd_set_sector_addr
                           B   423    
0039F1 3E51                B   424    				ld a,CMD17						0039F3 CD AF 3A 00         B   425    				call sd_send_command_current_ar
0039F7 28 03               B   426    				jr z,sd_rscr_ok					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039F9 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
0039FB C9                  B   428    				ret
                           B   429    
0039FC CD 87 3A 00         B   430    sd_rscr_ok		call sd_wait_data_token			003A00 28 03               B   431    				jr z,sd_dt_ok					003A02 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
003A04 C9                  B   433    				ret
                           B   434    
003A05 21 45 67 00         B   435    sd_dt_ok		ld hl,sector_buffer
003A09 CD 2D 3B 00         B   436    				call sd_read_513_bytes			003A0D CD 25 3B 00         B   437    				call sd_get_byte
                           B   438    				
003A11 AF                  B   439    				xor a							003A12 C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
003A13                     B   446    sd_write_sector_main
                           B   447    	
003A13 CD 5E 3A 00         B   448    				call sd_set_sector_addr
                           B   449    
003A17 3E58                B   450    				ld a,CMD24						003A19 CD AF 3A 00         B   451    				call sd_send_command_current_ar
003A1D 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
003A1F CD 9C 3A 00         B   454    				call sd_send_eight_clocks		                           B   455    
003A23 3EFE                B   456    				ld a,0feh
003A25 CD 18 3B 00         B   457    				call sd_send_byte				                           B   458    
003A29 21 45 67 00         B   459    				ld hl,sector_buffer
003A2D CD 5C 3B 00         B   460    				call sd_write_512_bytes			003A31 CD 9C 3A 00         B   461    				call sd_send_eight_clocks		003A35 CD 9C 3A 00         B   462    				call sd_send_eight_clocks		                           B   463    		
003A39 CD 25 3B 00         B   464    				call sd_get_byte				003A3D E61F                B   465    				and 1fh
003A3F CB3F                B   466    				srl a
003A41 FE02                B   467    				cp 02h
003A43 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
003A45 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
003A47 C9                  B   471    				ret
                           B   472    
003A48 01FFFF00            B   473    sd_wr_ok		ld bc,65535						003A4C CD 25 3B 00         B   474    sd_wcbsy		call sd_get_byte				003A50 FEFF                B   475    				cp 0ffh
003A52 20 02               B   476    				jr nz,sd_busy
003A54 AF                  B   477    				xor a							003A55 C9                  B   478    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   479    				
003A56 0B                  B   480    sd_busy			dec bc
003A57 78                  B   481    				ld a,b
003A58 B1                  B   482    				or c
003A59 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
003A5B                     B   485    sd_card_busy_timeout
                           B   486    
003A5B 3E23                B   487    				ld a,sd_error_write_timeout
003A5D C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
003A5E                     B   492    sd_set_sector_addr
                           B   493    				
003A5E 21 F1 61 00         B   494    				ld hl,sector_lba0
003A62 4E                  B   495    				ld c,(hl)
003A63 23                  B   496    				inc hl
003A64 5E                  B   497    				ld e,(hl)
003A65 23                  B   498    				inc hl
003A66 56                  B   499    				ld d,(hl)
003A67 23                  B   500    				inc hl
003A68 46                  B   501    				ld b,(hl)					; s
                           B   502    
003A69 3A 17 3B 00         B   503    				ld a,(sd_card_info)
003A6D E610                B   504    				and 10h
003A6F 20 0A               B   505    				jr nz,lbatoargs				; i
003A71 69                  B   506    				ld l,c
003A72 63                  B   507    				ld h,e
003A73 7A                  B   508    				ld a,d						; o
003A74 4029                B   509    				add.sis hl,hl
003A76 8F                  B   510    				adc a,a	
003A77 EB                  B   511    				ex de,hl
003A78 47                  B   512    				ld b,a
003A79 0E00                B   513    				ld c,0
003A7B 21 12 3B 00         B   514    lbatoargs		ld hl,cmd_generic_args
003A7F 70                  B   515    				ld (hl),b
003A80 23                  B   516    				inc hl
003A81 72                  B   517    				ld (hl),d
003A82 23                  B   518    				inc hl
003A83 73                  B   519    				ld (hl),e
003A84 23                  B   520    				inc hl
003A85 71                  B   521    				ld (hl),c
003A86 C9                  B   522    				ret
                           B   523    	
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
003A87                     B   527    sd_wait_data_token
                           B   528    
003A87 C5                  B   529    				push bc
003A88 01401F00            B   530    				ld bc,8000				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A8C CD 25 3B 00         B   531    sd_wdt			call sd_get_byte			; r
003A90 FEFE                B   532    				cp 0feh
003A92 28 06               B   533    				jr z,sd_gdt
003A94 0B                  B   534    				dec bc
003A95 78                  B   535    				ld a,b
003A96 B1                  B   536    				or c
003A97 20 F3               B   537    				jr nz,sd_wdt
003A99 0C                  B   538    				inc c						; d
003A9A C1                  B   539    sd_gdt			pop bc
003A9B C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003A9C                     B   544    sd_send_eight_clocks
                           B   545    
003A9C 3EFF                B   546    				ld a,0ffh
003A9E CD 18 3B 00         B   547    				call sd_send_byte
003AA2 C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
003AA3                     B   553    sd_send_command_null_args
                           B   554    
003AA3 21000000            B   555    				ld hl,0
003AA7 22 12 3B 00         B   556    				ld (cmd_generic_args),hl	; c
003AAB 22 13 3B 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
003AAF                     B   561    sd_send_command_current_args
                           B   562    	
003AAF 21 11 3B 00         B   563    				ld hl,cmd_generic
003AB3 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
003AB4                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
003AB4 CD 78 3B 00         B   574    				call sd_select_card				                           B   575    						
003AB8 CD 9C 3A 00         B   576    				call sd_send_eight_clocks		                           B   577    				
003ABC C5                  B   578    				push bc
003ABD 0606                B   579    				ld b,6
003ABF 7E                  B   580    sd_sclp			ld a,(hl)
003AC0 CD 18 3B 00         B   581    				call sd_send_byte				003AC4 23                  B   582    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003AC5 10 F8               B   583    				djnz sd_sclp
003AC7 C1                  B   584    				pop bc
                           B   585    				
003AC8 CD 25 3B 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
003ACC                     B   589    sd_wait_valid_response
                           B   590    				
003ACC C5                  B   591    				push bc
003ACD 0600                B   592    				ld b,0
003ACF CD 25 3B 00         B   593    sd_wncrl		call sd_get_byte				003AD3 CB7F                B   594    				bit 7,a							003AD5 28 02               B   595    				jr z,sd_gcr
003AD7 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
003AD9 B7                  B   598    sd_gcr			or a							003ADA C1                  B   599    				pop bc
003ADB C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
003ADC                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
003ADC 21 45 67 00         B   607    				ld hl,sector_buffer
                           B   608    	
003AE0                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
003AE0 E5                  B   614    				push hl
003AE1 CD 25 3B 00         B   615    sd_rblp			call sd_get_byte
003AE5 77                  B   616    				ld (hl),a
003AE6 23                  B   617    				inc hl
003AE7 10 F8               B   618    				djnz sd_rblp
003AE9 E1                  B   619    				pop hl
003AEA C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
003AEB 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
003AF1 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
003AF7 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
003AFD 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
003B05 3A303030 30303030 
003B0D 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   633    
003B11 00                  B   634    cmd_generic			db 00h
003B12 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
003B16 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
003B17 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
003B18                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003B18 ED3903              C     9    					out0 (port_sdc_data),a
003B1B C5                  C    10    					push bc
003B1C 0E01                C    11    					ld c,port_hw_flags
003B1E ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
003B21 20 FB               C    13    					jr nz,sd_wb_loop			003B23 C1                  C    14    					pop bc
003B24 C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
003B25                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
003B25 CD 9C 3A 00         C    23    					call sd_send_eight_clocks
003B29 ED3803              C    24    					in0 a,(port_sdc_data)
003B2C C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
003B2D                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
003B2D C5                  C    35    					push bc
003B2E D5                  C    36    					push de
003B2F 1EFF                C    37    					ld e,0ffh
003B31 ED1903              C    38    					out0 (port_sdc_data),e		003B34 0E01                C    39    					ld c,port_hw_flags			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003B36 0600                C    40    					ld b,0						                           C    41    
003B38 ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
003B3B 20 FB               C    43    					jr nz,sd_wser_loop1			003B3D DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
003B3F ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		003B42 77                  C    47    					ld (hl),a					003B43 23                  C    48    					inc hl						                           C    49    					
003B44 ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
003B47 20 FB               C    51    					jr nz,sd_wser_loop2			003B49 DB03                C    52    					in a,(port_sdc_data)		                           C    53    												003B4B ED1903              C    54    					out0 (port_sdc_data),e		003B4E 77                  C    55    					ld (hl),a					003B4F 23                  C    56    					inc hl						                           C    57    					
003B50 ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
003B53 20 FB               C    59    					jr nz,sd_wser_loop3			003B55 DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
003B57 10 E6               C    62    					djnz sd_512_loop
003B59 D1                  C    63    					pop de
003B5A C1                  C    64    					pop bc
003B5B C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
003B5C                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
003B5C 0E01                C    74    					ld c,port_hw_flags			003B5E 0600                C    75    					ld b,0						003B60 7E                  C    76    					ld a,(hl)
003B61 ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
003B64 23                  C    78    					inc hl
003B65 7E                  C    79    					ld a,(hl)
003B66 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
003B69 20 FB               C    81    					jr nz,sd_wser_loop4			003B6B ED3903              C    82    					out0 (port_sdc_data),a
003B6E 23                  C    83    					inc hl
003B6F 7E                  C    84    					ld a,(hl)
003B70 ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
003B73 20 FB               C    86    					jr nz,sd_wser_loop5
003B75 10 EA               C    87    					djnz sd_wr512_loop
003B77 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
003B78 F5                  C    95    sd_select_card		push af
003B79 3E02                C    96    					ld a,00h+(1<<sdc_cs)		003B7B ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
003B7E F1                  C    98    					pop af
003B7F C9                  C    99    					ret
                           C   100    
                           C   101    
003B80 F5                  C   102    sd_deselect_card	push af
003B81 3E82                C   103    					ld a,080h+(1<<sdc_cs)		003B83 ED3902              C   104    					out0 (port_sdc_ctrl),a
003B86 CD 9C 3A 00         C   105    					call sd_send_eight_clocks	003B8A F1                  C   106    					pop af
003B8B C9                  C   107    					ret
                           C   108    
                           C   109    
003B8C F5                  C   110    sd_power_on			push af
003B8D 3A040000            C   111    					ld a,(1<<sdc_speed)			003B91 ED3902              C   112    					out0 (port_sdc_ctrl),a		003B94 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
003B96 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
003B98 F5                  C   117    sd_power_off		push af
003B99 3E01                C   118    					ld a,00h+(1<<sdc_power)		003B9B 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
003B9D F5                  C   122    sd_spi_port_fast	push af
003B9E 3E84                C   123    					ld a,80h+(1<<sdc_speed)		003BA0 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3224    	
                           A  3225    ; Additional storage device driver source can b
                           A  3226    ; Also add the driver's PROSE header address la
                           A  3227    
003BA2 C53700              A  3228    driver_table		dw24 sd_card_driver	; Stora
003BA5 000000              A  3229    					dw24 0 				; Stora
003BA8 000000              A  3230    					dw24 0				; Stora
003BAB 000000              A  3231    					dw24 0				; Stora
                           A  3232    					
003BAE 000000              A  3233    					dw24 0				; Essen
                           A  3234    					
                           A  3235    ;----------------------------------------------
                           A  3236    ; IO routines
                           A  3237    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3238    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.06 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003BB1                     B     5    set_irq_vectors
                           B     6    		
003BB1 AF                  B     7    				xor a
003BB2 ED47                B     8    				ld i,a
                           B     9    						
003BB4 DD216F00 00         B    10    				ld ix,06fh						003BB9 0623                B    11    				ld b,35
003BBB DD3600C3            B    12    init_ivect_lp1	ld (ix),0c3h					003BBF ED3204              B    13    				lea ix,ix+4
003BC2 10 F7               B    14    				djnz init_ivect_lp1
                           B    15    				
003BC4 216F0000            B    16    				ld hl,6fh						003BC8 DD210A00 00         B    17    				ld ix,0ah
003BCD 11040000            B    18    				ld de,4
003BD1 060B                B    19    				ld b,11							003BD3 DD7500              B    20    init_ivect_lp2	ld (ix),l
003BD6 DD7401              B    21    				ld (ix+1),h
003BD9 19                  B    22    				add hl,de
003BDA ED3202              B    23    				lea ix,ix+2
003BDD 10 F4               B    24    				djnz init_ivect_lp2
003BDF DD213000 00         B    25    				ld ix,30h						003BE4 0619                B    26    				ld b,25
003BE6 DD7500              B    27    init_ivect_lp3	ld (ix),l
003BE9 DD7401              B    28    				ld (ix+1),h
003BEC 19                  B    29    				add hl,de
003BED ED3202              B    30    				lea ix,ix+2
003BF0 10 F4               B    31    				djnz init_ivect_lp3
                           B    32    				
003BF2 21 32 3C 00         B    33    				ld hl,int_routine				003BF6 229C0000            B    34    				ld (09ch),hl					                           B    35    
003BFA 3EC3                B    36    				ld a,0c3h						003BFC 32660000            B    37    				ld (066h),a
003C00 21 68 3D 00         B    38    				ld hl,nmi_routine				003C04 22670000            B    39    				ld (067h),hl
003C08 C9                  B    40    				ret
                           B    41    
                           B    42    
                           B    43    ;----------------------------------------------
                           B    44    
                           B    45    
003C09 21 59 61 00         B    46    enable_os_irqs	ld hl,devices_connected			003C0D CB46                B    47    				bit 0,(hl)
003C0F C4 1A 3C 00         B    48    				call nz,enable_kb_irq
003C13 CB4E                B    49    				bit 1,(hl)
003C15 C4 20 3C 00         B    50    				call nz,enable_ms_irq
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C19 C9                  B    51    				ret
                           B    52    
                           B    53    
003C1A 3E81                B    54    enable_kb_irq	ld a,10000001b
003C1C ED3905              B    55    				out0 (port_irq_ctrl),a			003C1F C9                  B    56    				ret
                           B    57    
003C20 3E82                B    58    enable_ms_irq	ld a,10000010b
003C22 ED3905              B    59    				out0 (port_irq_ctrl),a			003C25 C9                  B    60    				ret
                           B    61    
003C26 3E02                B    62    disable_ms_irq	ld a,00000010b
003C28 ED3905              B    63    				out0 (port_irq_ctrl),a			003C2B C9                  B    64    				ret
                           B    65    
003C2C 3E3F                B    66    disable_irqs	ld a,00111111b
003C2E ED3905              B    67    				out0 (port_irq_ctrl),a			003C31 C9                  B    68    				ret
                           B    69    			
                           B    70    ;----------------------------------------------
                           B    71    
                           B    72    
003C32                     B    73    int_routine
003C32 F5                  B    74    				push af							003C33 ED3807              B    75    				in0 a,(port_ps2_ctrl)			003C36 CB67                B    76    				bit 4,a
003C38 C4 4A 3C 00         B    77    				call nz,kb_interrupt_handler
003C3C ED3807              B    78    				in0 a,(port_ps2_ctrl)			003C3F CB6F                B    79    				bit 5,a
003C41 C4 EC 3C 00         B    80    				call nz,ms_interrupt_handler
003C45 F1                  B    81    				pop af
                           B    82    
003C46 FB                  B    83    				ei								003C47 5BED4D              B    84    				reti.l							                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    ; Keyboard IRQ routine v0.03
                           B    88    ;----------------------------------------------
                           B    89    
003C4A                     B    90    kb_interrupt_handler
                           B    91    
                           B    92    ;--- irq test ---------------------------------
                           B    93    
                           B    94    ;				push bc
                           B    95    ;				ld a,0ffh
                           B    96    ;				ld (hw_palette),a
                           B    97    ;				ld b,0
                           B    98    ;testlp1		djnz testlp1
                           B    99    ;				ld a,0
                           B   100    ;				ld (hw_palette),a
                           B   101    ;				pop bc
                           B   102    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   103    ;--- end of test ------------------------------
                           B   104    
                           B   105    
003C4A E5                  B   106    				push hl							003C4B C5                  B   107    				push bc
                           B   108    				
003C4C ED3802              B   109    key_loop		in0 a,(port_keyboard_data)		003C4F 47                  B   110    				ld b,a
                           B   111    
003C50 3A 27 63 00         B   112    				ld a,(key_release_mode)
003C54 B7                  B   113    				or a
003C55 28 20               B   114    				jr z,key_pressed
                           B   115    			
003C57 78                  B   116    				ld a,b							003C58 FEE0                B   117    				cp 0e0h							003C5A 28 61               B   118    				jr z,kirq_done	
003C5C FEE1                B   119    				cp 0e1h
003C5E 28 5D               B   120    				jr z,kirq_done	
                           B   121    				
003C60 CD C7 3C 00         B   122    				call qualifiers					003C64 7D                  B   123    				ld a,l
003C65 2F                  B   124    				cpl
003C66 6F                  B   125    				ld l,a
003C67 3A 29 63 00         B   126    				ld a,(key_mod_flags)
003C6B A5                  B   127    				and l							003C6C 32 29 63 00         B   128    				ld (key_mod_flags),a
003C70 AF                  B   129    				xor a
003C71 32 27 63 00         B   130    				ld (key_release_mode),a
003C75 18 46               B   131    				jr kirq_done
                           B   132    	
                           B   133    
003C77 78                  B   134    key_pressed		ld a,b							003C78 FEE0                B   135    				cp 0e0h							003C7A 28 41               B   136    				jr z,kirq_done	
003C7C FEE1                B   137    				cp 0e1h
003C7E 28 3D               B   138    				jr z,kirq_done	
                           B   139    			
003C80 FEF0                B   140    				cp 0f0h							003C82 20 08               B   141    				jr nz,not_krel
003C84 3E01                B   142    				ld a,1							003C86 32 27 63 00         B   143    				ld (key_release_mode),a			003C8A 18 31               B   144    				jr kirq_done
                           B   145    	
                           B   146    	
003C8C CD C7 3C 00         B   147    not_krel		call qualifiers					003C90 3A 29 63 00         B   148    				ld a,(key_mod_flags)			003C94 B5                  B   149    				or l
003C95 32 29 63 00         B   150    				ld (key_mod_flags),a			003C99 68                  B   151    				ld l,b
003C9A 01000000            B   152    				ld bc,0
003C9E 3A 25 63 00         B   153    				ld a,(key_buf_wr_idx)
003CA2 4F                  B   154    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003CA3 7D                  B   155    				ld a,l
003CA4 21 05 63 00         B   156    				ld hl,scancode_buffer
003CA8 09                  B   157    				add hl,bc
003CA9 77                  B   158    				ld (hl),a						003CAA 0E10                B   159    				ld c,16
003CAC 09                  B   160    				add hl,bc
003CAD 3A 29 63 00         B   161    				ld a,(key_mod_flags)			003CB1 77                  B   162    				ld (hl),a	
003CB2 3A 25 63 00         B   163    				ld a,(key_buf_wr_idx)
003CB6 3C                  B   164    				inc a
003CB7 E60F                B   165    				and 15
003CB9 32 25 63 00         B   166    				ld (key_buf_wr_idx),a			                           B   167    				
003CBD ED3807              B   168    kirq_done		in0 a,(port_ps2_ctrl)			003CC0 CB67                B   169    				bit 4,a	
003CC2 20 88               B   170    				jr nz,key_loop
                           B   171    
003CC4 C1                  B   172    				pop bc
003CC5 E1                  B   173    				pop hl
003CC6 C9                  B   174    				ret
                           B   175    
                           B   176    
003CC7 2E40                B   177    qualifiers		ld l,040h		;apps
003CC9 FE2F                B   178    				cp 02fh
003CCB C8                  B   179    				ret z
                           B   180    			
003CCC 2E20                B   181    				ld l,020h		;r gui
003CCE FE27                B   182    				cp 027h
003CD0 C8                  B   183    				ret z
                           B   184    			
003CD1 2E10                B   185    				ld l,010h		;r shift
003CD3 FE59                B   186    				cp 059h
003CD5 C8                  B   187    				ret z
                           B   188    			
003CD6 2E08                B   189    				ld l,08h		; alt
003CD8 FE11                B   190    				cp 011h
003CDA C8                  B   191    				ret z
                           B   192    			
003CDB 2E04                B   193    				ld l,04h		; l gui
003CDD FE1F                B   194    				cp 01fh
                           B   195    			
003CDF 2E02                B   196    				ld l,02h		;l ctrl / r ctr
003CE1 FE14                B   197    				cp 14h
003CE3 C8                  B   198    				ret z
                           B   199    			
003CE4 2E01                B   200    				ld l,01h		;l shift
003CE6 FE12                B   201    				cp 12h
003CE8 C8                  B   202    				ret z
                           B   203    				
003CE9 2E00                B   204    				ld l,0
003CEB C9                  B   205    				ret
                           B   206    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   207    ;----------------------------------------------
                           B   208    ; Mouse IRQ routine v0.03
                           B   209    ;----------------------------------------------
                           B   210    
003CEC                     B   211    ms_interrupt_handler
                           B   212    
                           B   213    ;--- irq test ---------------------------------
                           B   214    
                           B   215    ;				push bc
                           B   216    ;				ld a,0ffh
                           B   217    ;				ld (hw_palette),a
                           B   218    ;				ld b,0
                           B   219    ;testlp1		djnz testlp1
                           B   220    ;				ld a,0
                           B   221    ;				ld (hw_palette),a
                           B   222    ;				pop bc
                           B   223    				
                           B   224    ;--- end of test ------------------------------
                           B   225    
                           B   226    
003CEC C5                  B   227    				push bc							003CED D5                  B   228    				push de							003CEE E5                  B   229    				push hl							                           B   230    							
003CEF 11000000            B   231    ms_loop			ld de,0		
003CF3 3A 32 63 00         B   232    				ld a,(mouse_packet_index)		003CF7 5F                  B   233    				ld e,a
003CF8 21 2E 63 00         B   234    				ld hl,mouse_packet	
003CFC 19                  B   235    				add hl,de
003CFD ED3806              B   236    				in0 a,(port_mouse_data)
003D00 77                  B   237    				ld (hl),a
                           B   238    								
003D01 21 2D 63 00         B   239    				ld hl,mouse_packet_size
003D05 1C                  B   240    				inc e							003D06 7B                  B   241    				ld a,e
003D07 BE                  B   242    				cp (hl)
003D08 20 4F               B   243    				jr nz,msubpkt
                           B   244    
003D0A 3A 2E 63 00         B   245    				ld a,(mouse_packet)				003D0E 4F                  B   246    				ld c,a	
003D0F E607                B   247    				and 0111b
003D11 32 33 63 00         B   248    				ld (mouse_buttons),a
                           B   249    				
003D15 11000000            B   250    				ld de,0							003D19 CB61                B   251    				bit 4,c
003D1B 28 01               B   252    				jr z,mxsignpos
003D1D 1B                  B   253    				dec de
003D1E 3A 2F 63 00         B   254    mxsignpos		ld a,(mouse_packet+1)
003D22 5F                  B   255    				ld e,a
003D23 2A 34 63 00         B   256    				ld hl,(mouse_disp_x)
003D27 19                  B   257    				add hl,de
003D28 22 34 63 00         B   258    				ld (mouse_disp_x),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   259    				
003D2C 11000000            B   260    				ld de,0							003D30 CB69                B   261    				bit 5,c
003D32 28 01               B   262    				jr z,mysignpos
003D34 1B                  B   263    				dec de
003D35 3A 30 63 00         B   264    mysignpos		ld a,(mouse_packet+2)
003D39 5F                  B   265    				ld e,a
003D3A 2A 37 63 00         B   266    				ld hl,(mouse_disp_y)			003D3E AF                  B   267    				xor a							003D3F ED52                B   268    				sbc hl,de
003D41 22 37 63 00         B   269    				ld (mouse_disp_y),hl
                           B   270    				
003D45 21 31 63 00         B   271    				ld hl,mouse_packet+3			003D49 3A 3A 63 00         B   272    				ld a,(mouse_wheel)
003D4D 86                  B   273    				add a,(hl)
003D4E 32 3A 63 00         B   274    				ld (mouse_wheel),a
                           B   275    				
003D52 3E01                B   276    				ld a,1
003D54 32 3B 63 00         B   277    				ld (mouse_updated),a			                           B   278    				
003D58 AF                  B   279    				xor a
003D59 32 32 63 00         B   280    msubpkt			ld (mouse_packet_index),a
                           B   281    				
003D5D ED3807              B   282    				in0 a,(port_ps2_ctrl)			003D60 CB6F                B   283    				bit 5,a
003D62 20 8B               B   284    				jr nz,ms_loop				
                           B   285    				
003D64 E1                  B   286    				pop hl
003D65 D1                  B   287    				pop de
003D66 C1                  B   288    				pop bc
003D67 C9                  B   289    				ret
                           B   290    				
                           B   291    ;----------------------------------------------
                           B   292    ; ez80p NMI code v0.03
                           B   293    ;----------------------------------------------
                           B   294    
003D68 F5                  B   295    nmi_routine		push af							003D69 ED3805              B   296    				in0 a,(port_irq_flags)			003D6C CB77                B   297    				bit 6,a							003D6E 20 09               B   298    				jr nz,freeze
003D70 3E20                B   299    				ld a,00100000b					003D72 ED3909              B   300    				out0 (port_clear_flags),a		003D75 F1                  B   301    				pop af
003D76 5BED45              B   302    				retn.l
                           B   303    				
003D79 F1                  B   304    freeze			pop af
003D7A CD 78 13 00         B   305    				call os_store_CPU_regs
                           B   306    				
003D7E 21000000            B   307    				ld hl,0
003D82 39                  B   308    				add hl,sp
003D83 7E                  B   309    				ld a,(hl)						003D84 E601                B   310    				and 1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003D86 32 8A 61 00         B   311    				ld (store_adl),a
003D8A 20 0A               B   312    				jr nz,adl_freeze
003D8C 23                  B   313    				inc hl
003D8D 5E                  B   314    				ld e,(hl)						003D8E 23                  B   315    				inc hl
003D8F 56                  B   316    				ld d,(hl)
003D90 CD FB 15 00         B   317    				call mbase_de
003D94 18 02               B   318    				jr got_pc
                           B   319    				
003D96 33                  B   320    adl_freeze		inc sp
003D97 D1                  B   321    				pop de							003D98 ED53 80 61 00       B   322    got_pc			ld (store_pc),de				                           B   323    				
003D9D CD BB 3D 00         B   324    				call disable_button_nmi
003DA1 3E40                B   325    				ld a,01000000b
003DA3 ED3909              B   326    				out0 (port_clear_flags),a		003DA6 3E01                B   327    				ld a,1
003DA8 32 57 61 00         B   328    				ld (frozen),a
003DAC C3 56 0A 00         B   329    				jp os_cold_start				                           B   330    
                           B   331    ;----------------------------------------------
                           B   332    
                           B   333    ;nmi_routine
                           B   334    ;
                           B   335    ;				push af							                           B   336    ;				push bc
                           B   337    ;				ld a,0ffh
                           B   338    ;				ld (hw_palette),a
                           B   339    ;				ld b,0
                           B   340    ;nmi_testlp2		djnz nmi_testlp2
                           B   341    ;				ld a,0
                           B   342    ;				ld (hw_palette),a
                           B   343    ;				pop bc
                           B   344    ;				ld a,01100000b
                           B   345    ;				out0 (port_clear_flags)
                           B   346    ;				pop af
                           B   347    ;				retn.l							                           B   348    
                           B   349    
                           B   350    ;----------------------------------------------
                           B   351    
003DB0                     B   352    enable_button_nmi
                           B   353    
003DB0 3E40                B   354    				ld a,01000000b
003DB2 ED3909              B   355    				out0 (port_clear_flags),a		003DB5 3EC0                B   356    				ld a,11000000b					003DB7 ED3905              B   357    				out0 (port_irq_ctrl),a			003DBA C9                  B   358    				ret
                           B   359    
                           B   360    
003DBB                     B   361    disable_button_nmi
                           B   362    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003DBB 3E40                B   363    				ld a,01000000b					003DBD ED3905              B   364    				out0 (port_irq_ctrl),a
003DC0 C9                  B   365    				ret
                           B   366    
                           B   367    
003DC1                     B   368    disable_all_nmis
                           B   369    
003DC1 3E60                B   370    				ld a,01100000b					003DC3 ED3905              B   371    				out0 (port_irq_ctrl),a
003DC6 C9                  B   372    				ret
                           B   373    				
                           B   374    ;----------------------------------------------
                           B   375    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003DC7                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003DC7 C5                  B    10    				push bc
003DC8 3A EA 5F 00         B    11    				ld a,(serial_timeout)
003DCC 47                  B    12    				ld b,a
003DCD 3ECC                B    13    rx_set_timer	ld a,cch
003DCF ED3981              B    14    				out0 (TMR0_RR_L),a				003DD2 3E0C                B    15    				ld a,0ch
003DD4 ED3982              B    16    				out0 (TMR0_RR_H),a				003DD7 3E03                B    17    				ld a,00000011b					003DD9 ED3980              B    18    				out0 (TMR0_CTL),a				003DDC ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003DDF 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003DE1 ED7401              B    22    				tstio 1							003DE4 20 0E               B    23    				jr nz,rx_in_buffer
003DE6 AF                  B    24    				xor a
003DE7 B0                  B    25    				or b
003DE8 28 13               B    26    				jr z,rx_time_out
003DEA 0E80                B    27    				ld c,TMR0_CTL	
003DEC ED7480              B    28    				tstio 128						003DEF 28 EE               B    29    				jr z,rx_byte_lp		
003DF1 05                  B    30    				dec b
003DF2 18 D9               B    31    				jr rx_set_timer
                           B    32    
003DF4 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003DF8 ED78                B    34    				in a,(bc)						003DFA C1                  B    35    				pop bc
003DFB BF                  B    36    				cp a							003DFC C9                  B    37    				ret
                           B    38    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003DFD C1                  B    39    rx_time_out		pop bc
003DFE 3E83                B    40    				ld a,083h						003E00 B7                  B    41    				or a							003E01 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003E02                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003E02 C5                  B    52    				push bc
003E03 0EC5                B    53    				ld c,UART0_LSR					003E05 ED7420              B    54    rs232_swait		tstio 020h						003E08 28 FB               B    55    				jr z,rs232_swait
003E0A 01C00000            B    56    				ld bc,UART0_THR
003E0E ED79                B    57    				out (c),a						003E10 C1                  B    58    				pop bc
003E11 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003E12                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003E12 7A                  B    68    				ld a,d
003E13 CD 02 3E 00         B    69    				call send_serial_byte
003E17 7B                  B    70    				ld a,e
003E18 CD 02 3E 00         B    71    				call send_serial_byte
003E1C C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003E1D                     B    76    hwsc_flush_serial_buffer
                           B    77    
003E1D C5                  B    78    				push bc
003E1E 01C00000            B    79    				ld bc,UART0_RBR
003E22 ED78                B    80    				in a,(bc)						003E24 C1                  B    81    				pop bc
003E25 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003E26                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003E26 E603                B    15    				and 3
003E28 32 BB 5F 00         B    16    				ld (video_doubling),a
003E2C 79                  B    17    				ld a,c
003E2D 32 BC 5F 00         B    18    				ld (charmap_rows),a
003E31 78                  B    19    				ld a,b
003E32 32 BF 5F 00         B    20    				ld (charmap_columns),a
003E36 21000000            B    21    				ld hl,0
003E3A 69                  B    22    				ld l,c
003E3B 60                  B    23    				ld h,b
003E3C ED6C                B    24    				mlt hl
003E3E 29                  B    25    				add hl,hl
003E3F 22 63 61 00         B    26    				ld (charmap_size),hl
003E43 11004080            B    27    				ld de,charmap_addr
003E47 19                  B    28    				add hl,de
003E48 22 5D 61 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
003E4C CD 52 3E 00         B    31    				call os_set_video_hw_regs
003E50 AF                  B    32    				xor a
003E51 C9                  B    33    				ret
                           B    34    				
                           B    35    
003E52                     B    36    os_set_video_hw_regs
                           B    37    
003E52 3A BB 5F 00         B    38    				ld a,(video_doubling)
003E56 CB27                B    39    				sla a
003E58 F618                B    40    				or 00011000b
003E5A 320018FF            B    41    				ld (video_control),a			003E5E AF                  B    42    				xor a
003E5F 320218FF            B    43    				ld (bgnd_palette_select),a
003E63 3E63                B    44    				ld a,99
003E65 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003E69 DD210010 FF         B    47    				ld ix,tilemap_parameters		003E6E 21004080            B    48    				ld hl,charmap_addr
003E72 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003E75 21020000            B    51    				ld hl,2
003E79 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
003E7C 21000008            B    54    				ld hl,80000h
003E80 11000000            B    55    				ld de,0
003E84 3A BF 5F 00         B    56    				ld a,(charmap_columns)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E88 5F                  B    57    				ld e,a
003E89 AF                  B    58    				xor a
003E8A ED52                B    59    				sbc hl,de
003E8C AF                  B    60    				xor a
003E8D ED52                B    61    				sbc hl,de
003E8F DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003E92 21000000            B    64    				ld hl,0
003E96 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003E99 3A BF 5F 00         B    67    				ld a,(charmap_columns)
003E9D 3D                  B    68    				dec a
003E9E DD7710              B    69    				ld (ix+10h),a					                           B    70    				
003EA1 3E00                B    71    				ld a,0
003EA3 DD7711              B    72    				ld (ix+11h),a					003EA6 DD7712              B    73    				ld (ix+12h),a					                           B    74    
003EA9 21 96 5F 00         B    75    				ld hl,pen_palette
003EAD CD B7 3E 00         B    76    				call hswc_set_ui_colours
                           B    77    				
003EB1 CD E2 40 00         B    78    				call hwsc_disable_sprites
                           B    79    				
003EB5 AF                  B    80    				xor a							003EB6 C9                  B    81    				ret
                           B    82    
                           B    83    ;----------------------------------------------
                           B    84    				
003EB7                     B    85    hswc_set_ui_colours
                           B    86    
003EB7 110000FF            B    87    				ld de,hw_palette
003EBB 01200000            B    88    				ld bc,16*2
003EBF EDB0                B    89    				ldir
003EC1 AF                  B    90    				xor a							003EC2 C9                  B    91    				ret
                           B    92    
                           B    93    
                           B    94    ;----------------------------------------------
                           B    95    
003EC3                     B    96    hwsc_clear_screen
                           B    97    
003EC3 21004080            B    98    				ld hl,charmap_addr				003EC7 3620                B    99    				ld (hl),32						003EC9 23                  B   100    				inc hl
003ECA CD E9 3E 00         B   101    				call get_fill_attr
003ECE 77                  B   102    				ld (hl),a
003ECF 23                  B   103    				inc hl
003ED0 EB                  B   104    				ex de,hl
003ED1 21004080            B   105    				ld hl,charmap_addr
003ED5 ED4B 63 61 00       B   106    				ld bc,(charmap_size)
003EDA 0B                  B   107    				dec bc
003EDB 0B                  B   108    				dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003EDC EDB0                B   109    				ldir
                           B   110    				
003EDE 01000000            B   111    				ld bc,0
003EE2 ED43 F5 61 00       B   112    				ld (cursor_y),bc
003EE7 AF                  B   113    				xor a							003EE8 C9                  B   114    				ret
                           B   115    				
                           B   116    				
003EE9 D5                  B   117    get_fill_attr	push de
003EEA 3A 92 5F 00         B   118    				ld a,(current_pen)
003EEE E60F                B   119    				and 0fh
003EF0 5F                  B   120    				ld e,a
003EF1 3A 94 5F 00         B   121    				ld a,(background_colour)
003EF5 0F                  B   122    				rrca
003EF6 0F                  B   123    				rrca
003EF7 0F                  B   124    				rrca
003EF8 0F                  B   125    				rrca
003EF9 E6F0                B   126    				and 0f0h
003EFB B3                  B   127    				or e
003EFC D1                  B   128    				pop de
003EFD C9                  B   129    				ret
                           B   130    				
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003EFE                     B   134    hwsc_scroll_up	
                           B   135    				
003EFE C5                  B   136    				push bc
003EFF D5                  B   137    				push de
003F00 E5                  B   138    				push hl
                           B   139    
003F01 2A 63 61 00         B   140    				ld hl,(charmap_size)
003F05 ED5B BF 5F 00       B   141    				ld de,(charmap_columns)
003F0A AF                  B   142    				xor a
003F0B ED52                B   143    				sbc hl,de
003F0D ED52                B   144    				sbc hl,de						003F0F E5                  B   145    				push hl
003F10 C1                  B   146    				pop bc							003F11 21004080            B   147    				ld hl,charmap_addr
003F15 E5                  B   148    				push hl
003F16 19                  B   149    				add hl,de
003F17 19                  B   150    				add hl,de
003F18 D1                  B   151    				pop de
003F19 EDB0                B   152    				ldir
                           B   153    				
003F1B EB                  B   154    				ex de,hl						003F1C E5                  B   155    				push hl
003F1D 3620                B   156    				ld (hl),32
003F1F 23                  B   157    				inc hl
003F20 CD E9 3E 00         B   158    				call get_fill_attr
003F24 77                  B   159    				ld (hl),a
003F25 2A BF 5F 00         B   160    				ld hl,(charmap_columns)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F29 2B                  B   161    				dec hl
003F2A 29                  B   162    				add hl,hl
003F2B E5                  B   163    				push hl
003F2C C1                  B   164    				pop bc
003F2D E1                  B   165    				pop hl
003F2E E5                  B   166    				push hl
003F2F D1                  B   167    				pop de
003F30 13                  B   168    				inc de
003F31 13                  B   169    				inc de
003F32 EDB0                B   170    				ldir
                           B   171    				
003F34 E1                  B   172    				pop hl
003F35 D1                  B   173    				pop de
003F36 C1                  B   174    				pop bc
003F37 AF                  B   175    				xor a							003F38 C9                  B   176    				ret
                           B   177    
                           B   178    
                           B   179    ;----------------------------------------------
                           B   180    
003F39                     B   181    hwsc_plot_char
                           B   182    
                           B   183    ; Set:
                           B   184    ; ----
                           B   185    ; A = ascii char
                           B   186    ; B = x character coordinate 
                           B   187    ; C = y character coordinate
                           B   188    
003F39 E5                  B   189    				push hl							003F3A D5                  B   190    				push de
003F3B F5                  B   191    				push af
                           B   192    
003F3C 3A BC 5F 00         B   193    				ld a,(charmap_rows)				003F40 3D                  B   194    				dec a
003F41 B9                  B   195    				cp c							003F42 38 08               B   196    				jr c,win_err
003F44 3A BF 5F 00         B   197    				ld a,(charmap_columns)
003F48 3D                  B   198    				dec a
003F49 B8                  B   199    				cp b
003F4A 30 07               B   200    				jr nc,win_ok
003F4C F1                  B   201    win_err			pop af
003F4D D1                  B   202    				pop de
003F4E E1                  B   203    				pop hl
003F4F 3E88                B   204    				ld a,88h						003F51 B7                  B   205    				or a
003F52 C9                  B   206    				ret
                           B   207    				
003F53 2A BF 5F 00         B   208    win_ok			ld hl,(charmap_columns)			003F57 61                  B   209    				ld h,c
003F58 ED6C                B   210    				mlt hl
003F5A 11000000            B   211    				ld de,0
003F5E 58                  B   212    				ld e,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F5F 19                  B   213    				add hl,de
003F60 29                  B   214    				add hl,hl
003F61 11004080            B   215    				ld de,charmap_addr
003F65 19                  B   216    				add hl,de
003F66 F1                  B   217    				pop af
003F67 77                  B   218    				ld (hl),a
003F68 23                  B   219    				inc hl
003F69 3A 92 5F 00         B   220    				ld a,(current_pen)
003F6D 77                  B   221    				ld (hl),a
003F6E D1                  B   222    				pop de
003F6F E1                  B   223    				pop hl
003F70 AF                  B   224    				xor a
003F71 C9                  B   225    				ret
                           B   226    				
                           B   227    				
                           B   228    ;----------------------------------------------
                           B   229    
003F72                     B   230    hwsc_remove_cursor
                           B   231    
003F72 3A B8 5F 00         B   232    				ld a,(cursor_present)			003F76 B7                  B   233    				or a
003F77 C8                  B   234    				ret z
003F78 ED4B F5 61 00       B   235    				ld bc,(cursor_y)
003F7D CD E0 3F 00         B   236    				call hwsc_get_charmap_addr_xy
003F81 3A B7 5F 00         B   237    				ld a,(char_under_cursor)
003F85 77                  B   238    				ld (hl),a
003F86 AF                  B   239    				xor a
003F87 32 B8 5F 00         B   240    				ld (cursor_present),a
003F8B C9                  B   241    				ret
                           B   242    
                           B   243    
003F8C                     B   244    hwsc_draw_cursor
                           B   245    								
003F8C 3A B8 5F 00         B   246    				ld a,(cursor_present)			003F90 B7                  B   247    				or a
003F91 C0                  B   248    				ret nz
003F92 3C                  B   249    				inc a
003F93 32 B8 5F 00         B   250    				ld (cursor_present),a
                           B   251    				
003F97 ED4B F5 61 00       B   252    				ld bc,(cursor_y)
003F9C CD E0 3F 00         B   253    				call hwsc_get_charmap_addr_xy
003FA0 7E                  B   254    				ld a,(hl)						003FA1 32 B7 5F 00         B   255    				ld (char_under_cursor),a		003FA5 36FF                B   256    				ld (hl),ffh						                           B   257    				
003FA7 11400000            B   258    				ld de,64						003FAB 57                  B   259    				ld d,a
003FAC ED5C                B   260    				mlt de
003FAE FD210000 80         B   261    				ld iy,vram_a_addr				003FB3 FD19                B   262    				add iy,de						                           B   263    				
003FB5 21400000            B   264    				ld hl,64
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FB9 3A BA 5F 00         B   265    				ld a,(cursor_image_char)
003FBD 67                  B   266    				ld h,a
003FBE ED6C                B   267    				mlt hl
003FC0 11000080            B   268    				ld de,vram_a_addr
003FC4 19                  B   269    				add hl,de
                           B   270    				
003FC5 DD21C03F 80         B   271    				ld ix,vram_a_addr+03fc0h
003FCA 11080000            B   272    				ld de,8
003FCE 0608                B   273    				ld b,8
003FD0 FD7E00              B   274    cur_loop		ld a,(iy)						003FD3 AE                  B   275    				xor (hl)						003FD4 DD7700              B   276    				ld (ix),a						003FD7 FD19                B   277    				add iy,de
003FD9 DD19                B   278    				add ix,de
003FDB 19                  B   279    				add hl,de
003FDC 10 F2               B   280    				djnz cur_loop
                           B   281    				
003FDE AF                  B   282    				xor a
003FDF C9                  B   283    				ret
                           B   284    				
                           B   285    
                           B   286    ;----------------------------------------------
                           B   287    
003FE0                     B   288    hwsc_get_charmap_addr_xy
                           B   289    
                           B   290    ; returns address of charmap in xHL for charact
                           B   291    ; and attrmap in xDE
                           B   292    				
003FE0 2A BF 5F 00         B   293    				ld hl,(charmap_columns)			003FE4 61                  B   294    				ld h,c
003FE5 ED6C                B   295    				mlt hl
003FE7 11000000            B   296    				ld de,0
003FEB 58                  B   297    				ld e,b
003FEC 19                  B   298    				add hl,de
003FED 29                  B   299    				add hl,hl
003FEE 11004080            B   300    				ld de,charmap_addr
003FF2 19                  B   301    				add hl,de
003FF3 E5                  B   302    				push hl
003FF4 D1                  B   303    				pop de
003FF5 13                  B   304    				inc de
003FF6 AF                  B   305    				xor a
003FF7 C9                  B   306    				ret
                           B   307    								
                           B   308    ;----------------------------------------------
                           B   309    
003FF8                     B   310    hwsc_chars_left
                           B   311    
                           B   312    ; moves characters (in character map) on the cu
                           B   313    
003FF8 E5                  B   314    				push hl
003FF9 D5                  B   315    				push de
003FFA C5                  B   316    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   317    				
003FFB 2A BF 5F 00         B   318    				ld hl,(charmap_columns)
003FFF 3A F5 61 00         B   319    				ld a,(cursor_y)
004003 67                  B   320    				ld h,a
004004 ED6C                B   321    				mlt hl
004006 11000000            B   322    				ld de,0
00400A 58                  B   323    				ld e,b
00400B 19                  B   324    				add hl,de
00400C 29                  B   325    				add hl,hl
00400D 11004080            B   326    				ld de,charmap_addr
004011 19                  B   327    				add hl,de
                           B   328    				
004012 3A BF 5F 00         B   329    				ld a,(charmap_columns)
004016 90                  B   330    				sub b
004017 CB27                B   331    				sla a
004019 01000000            B   332    				ld bc,0
00401D 4F                  B   333    				ld c,a
00401E E5                  B   334    				push hl
00401F D1                  B   335    				pop de
004020 1B                  B   336    				dec de
004021 1B                  B   337    				dec de
004022 EDB0                B   338    				ldir
                           B   339    				
004024 3E20                B   340    				ld a,32						;pu
004026 12                  B   341    				ld (de),a
004027 13                  B   342    				inc de
004028 CD E9 3E 00         B   343    				call get_fill_attr
00402C 12                  B   344    				ld (de),a
                           B   345    				
00402D C1                  B   346    				pop bc
00402E D1                  B   347    				pop de
00402F E1                  B   348    				pop hl
004030 C9                  B   349    				ret
                           B   350    
                           B   351    
                           B   352    ;----------------------------------------------
                           B   353    
                           B   354    
004031                     B   355    hwsc_chars_right
                           B   356    
                           B   357    ; moves characters on current line right from c
                           B   358    
004031 C5                  B   359    				push bc
004032 D5                  B   360    				push de
004033 E5                  B   361    				push hl
                           B   362    	
004034 21 F6 61 00         B   363    				ld hl,cursor_x				
004038 3A BF 5F 00         B   364    				ld a,(charmap_columns)
00403C 3D                  B   365    				dec a
00403D BE                  B   366    				cp (hl)			
00403E 28 30               B   367    				jr z,chright_end
004040 46                  B   368    				ld b,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   369    				
004041 2A BF 5F 00         B   370    				ld hl,(charmap_columns)
004045 3A F5 61 00         B   371    				ld a,(cursor_y)
004049 3C                  B   372    				inc a							00404A 67                  B   373    				ld h,a
00404B ED6C                B   374    				mlt hl
00404D 29                  B   375    				add hl,hl
00404E 11004080            B   376    				ld de,charmap_addr
004052 19                  B   377    				add hl,de					
004053 2B                  B   378    				dec hl							004054 E5                  B   379    				push hl
004055 D1                  B   380    				pop de							004056 2B                  B   381    				dec hl
004057 2B                  B   382    				dec hl							004058 3A BF 5F 00         B   383    				ld a,(charmap_columns)
00405C 90                  B   384    				sub b
00405D 3D                  B   385    				dec a
00405E CB27                B   386    				sla a
004060 01000000            B   387    				ld bc,0
004064 4F                  B   388    				ld c,a							004065 EDB8                B   389    				lddr
004067 23                  B   390    				inc hl							004068 3620                B   391    				ld (hl),32
00406A 23                  B   392    				inc hl
00406B CD E9 3E 00         B   393    				call get_fill_attr
00406F 77                  B   394    				ld (hl),a
                           B   395    							
004070 E1                  B   396    chright_end		pop hl	
004071 D1                  B   397    				pop de
004072 C1                  B   398    				pop bc
004073 C9                  B   399    				ret
                           B   400    
                           B   401    ;----------------------------------------------
                           B   402    
                           B   403    
004074                     B   404    hwsc_charline_to_command_string	
                           B   405    				
                           B   406    				
004074 2A BF 5F 00         B   407    				ld hl,(charmap_columns)			004078 3A F5 61 00         B   408    				ld a,(cursor_y)
00407C 67                  B   409    				ld h,a
00407D ED6C                B   410    				mlt hl
00407F 29                  B   411    				add hl,hl
004080 11004080            B   412    				ld de,charmap_addr
004084 19                  B   413    				add hl,de
004085 11 13 62 00         B   414    				ld de,commandstring
004089 0650                B   415    				ld b,max_buffer_chars			00408B 7E                  B   416    copy_to_cmdline	ld a,(hl)
00408C 12                  B   417    				ld (de),a
00408D 13                  B   418    				inc de
00408E 23                  B   419    				inc hl
00408F 23                  B   420    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004090 10 F9               B   421    				djnz copy_to_cmdline
004092 C9                  B   422    				ret
                           B   423    
                           B   424    ;----------------------------------------------
                           B   425    
                           B   426    
004093 C5                  B   427    hwsc_wait_vrt	push bc
                           B   428    
004094 0E01                B   429    				ld c,1
004096 ED0909              B   430    				out0 (port_clear_flags),c
                           B   431    
004099 0E01                B   432    				ld c,port_hw_flags
00409B ED7420              B   433    ewaitvrtlp1		tstio 1<<vrt
00409E 28 FB               B   434    				jr z,ewaitvrtlp1
                           B   435    				
0040A0 C1                  B   436    				pop bc
0040A1 BF                  B   437    				cp a							0040A2 C9                  B   438    				ret
                           B   439    
                           B   440    
                           B   441    ;----------------------------------------------
                           B   442    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
0040A3                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0040A3 3E48                B     9    					ld a,01001000b				0040A5 ED39AA              B    10    					out0 (CS0_CTL),a
0040A8 3E00                B    11    					ld a,000h					0040AA ED39A8              B    12    					out0 (CS0_LBR),a
0040AD 3EFF                B    13    					ld a,0ffh	
0040AF ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
0040B2 3E58                B    16    					ld a,01011000b
0040B4 ED39AD              B    17    					out0 (CS1_CTL),a			0040B7 3E00                B    18    					ld a,0
0040B9 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
0040BC 3EFF                B    23    					ld a,0ffh
0040BE ED399F              B    24    					out0 (PC_DDR),a				0040C1 AF                  B    25    					xor a
0040C2 ED39A0              B    26    					out0 (PC_ALT1),a
0040C5 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
0040C8 3EFF                B    29    					ld a,0ffh					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040CA ED39A3              B    30    					out0 (PD_DDR),a				0040CD AF                  B    31    					xor a	
0040CE ED39A4              B    32    					out0 (PD_ALT1),a			0040D1 3E0F                B    33    					ld a,00fh				
0040D3 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0040D6 ED3892              B    38    					in0 a,(TMR_ISS)
0040D9 E6FC                B    39    					and 11111100b
0040DB F601                B    40    					or  00000001b
0040DD ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
0040E0 AF                  B    43    					xor a
0040E1 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
0040E2                     B    49    hwsc_disable_sprites
                           B    50    
0040E2 AF                  B    51    					xor a
0040E3 320118FF            B    52    					ld (sprite_control),a		0040E7 C9                  B    53    					ret
                           B    54    					
                           B    55    ;----------------------------------------------
                           B    56    
                           B    57    
0040E8 11000000            B    58    hwsc_get_version	ld de,0
0040EC 0610                B    59    					ld b,16
0040EE 78                  B    60    gethwvlp			ld a,b
0040EF 3D                  B    61    					dec a
0040F0 ED3908              B    62    					out0 (port_selector),a		0040F3 DB01                B    63    					in a,(port_hw_flags)		0040F5 CB27                B    64    					sla a
0040F7 CB13                B    65    					rl e
0040F9 CB12                B    66    					rl d
0040FB 10 F1               B    67    					djnz gethwvlp				                           B    68    									
0040FD 21370000            B    69    					ld hl,prose_version
004101 BF                  B    70    					cp a						004102 C9                  B    71    					ret
                           B    72    
                           B    73    
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    ; Timer related 
                           B    77    ;----------------------------------------------
                           B    78    
004103                     B    79    hwsc_time_delay
                           B    80    
                           B    81    ; set DE to 32768Hz ticks to wait
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    82    
004103 CD 0F 41 00         B    83    					call hwsc_set_timeout
004107 CD 20 41 00         B    84    twaitlp				call hwsc_test_timeout
00410B 28 FA               B    85    					jr z,twaitlp
00410D AF                  B    86    					xor a						00410E C9                  B    87    					ret			
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    
                           B    91    ; Set DE to 32768 Hz ticks to allow before time
                           B    92    
00410F 7B                  B    93    hwsc_set_timeout	ld a,e						004110 ED3981              B    94    					out0 (TMR0_RR_L),a			004113 7A                  B    95    					ld a,d
004114 ED3982              B    96    					out0 (TMR0_RR_H),a			004117 3E03                B    97    					ld a,00000011b				004119 ED3980              B    98    					out0 (TMR0_CTL),a			00411C ED3880              B    99    					in0 a,(TMR0_CTL)			00411F C9                  B   100    					ret
                           B   101    			
004120 ED3880              B   102    hwsc_test_timeout	in0 a,(TMR0_CTL)			004123 CB7F                B   103    					bit 7,a
004125 C9                  B   104    					ret
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
004126                     B   108    hwsc_read_rtc
004126 D5                  B   109    					push de
004127 C5                  B   110    					push bc
004128 0EE0                B   111    hwsc_rtc_rlp		ld c,RTC_SEC
00412A 0608                B   112    					ld b,8
00412C 21 50 61 00         B   113    					ld hl,time_data
004130 ED92                B   114    					inimr						004132 0EE0                B   115    					ld c,RTC_SEC
004134 0600                B   116    					ld b,0
004136 1E08                B   117    					ld e,8
004138 21 50 61 00         B   118    					ld hl,time_data
00413C ED78                B   119    timevloop			in a,(bc)					00413E BE                  B   120    					cp (hl)						00413F 20 E7               B   121    					jr nz,hwsc_rtc_rlp			004141 23                  B   122    					inc hl
004142 0C                  B   123    					inc c
004143 1D                  B   124    					dec e
004144 20 F6               B   125    					jr nz,timevloop
004146 21 50 61 00         B   126    					ld hl,time_data
00414A C1                  B   127    					pop bc
00414B D1                  B   128    					pop de
00414C BF                  B   129    					cp a						00414D C9                  B   130    					ret
                           B   131    
                           B   132    
00414E                     B   133    hwsc_write_rtc	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   134    
                           B   135    ; set HL to location of BCD data for RTC: sec/m
                           B   136    
00414E E5                  B   137    					push hl
00414F C5                  B   138    					push bc
004150 3E21                B   139    					ld a,00100001b				004152 ED39ED              B   140    					out0 (RTC_CTRL),a
004155 0EE0                B   141    					ld c,RTC_SEC
004157 0608                B   142    					ld b,8
004159 ED93                B   143    					otimr
00415B 3E20                B   144    					ld a,00100000b				00415D ED39ED              B   145    					out0 (RTC_CTRL),a
004160 C1                  B   146    					pop bc
004161 E1                  B   147    					pop hl
004162 BF                  B   148    					cp a						004163 C9                  B   149    					ret	
                           B   150    
                           B   151    
                           B   152    ;----------------------------------------------
                           B   153    ; INIT KEYBOARD ROUTINE 
                           B   154    ;----------------------------------------------
                           B   155    
                           B   156    ; ZF set and A = 0 if all OK, else error code i
                           B   157    
004164                     B   158    init_keyboard
                           B   159    
004164 11004000            B   160    			ld de,16384							004168 CD 03 41 00         B   161    			call hwsc_time_delay
00416C F3                  B   162    			di
00416D CD 22 42 00         B   163    			call purge_keyboard
004171 CD 7B 41 00         B   164    			call rs_keyboard
004175 FB                  B   165    			ei
004176 D0                  B   166    			ret nc
004177 3E8B                B   167    			ld a,08bh							004179 B7                  B   168    			or a
00417A C9                  B   169    			ret
                           B   170    			
                           B   171    			
00417B                     B   172    rs_keyboard
                           B   173    
00417B 3EFF                B   174    			ld a,0ffh
00417D CD 9A 41 00         B   175    			call write_to_keyboard
004181 30 04               B   176    			jr nc,kb_connected
004183 3E8A                B   177    			ld a,08ah							004185 B7                  B   178    			or a
004186 C9                  B   179    			ret
                           B   180    
004187                     B   181    kb_connected
                           B   182    			
004187 0605                B   183    			ld b,5
004189 C5                  B   184    kb_initlp	push bc
00418A CD 06 42 00         B   185    			call wait_kb_byte					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00418E C1                  B   186    			pop bc
00418F D8                  B   187    			ret c
004190 FEAA                B   188    			cp 0aah
004192 28 04               B   189    			jr z,kb_postok
004194 10 F3               B   190    			djnz kb_initlp						004196 37                  B   191    			scf									004197 C9                  B   192    			ret
                           B   193    			
                           B   194    			
004198 AF                  B   195    kb_postok	xor a
004199 C9                  B   196    			ret
                           B   197    	
                           B   198    	
                           B   199    ;----------------------------------------------
                           B   200    				
00419A                     B   201    write_to_keyboard
                           B   202    
                           B   203    ; Put byte to send to keyboard in A
                           B   204    
00419A 4F                  B   205    			ld c,a								00419B 3E01                B   206    			ld a,01b							00419D ED3907              B   207    			out0 (port_ps2_ctrl),a
                           B   208    
0041A0 110A0000            B   209    			ld de,10
0041A4 CD 03 41 00         B   210    			call hwsc_time_delay				                           B   211    
0041A8 3E03                B   212    			ld a,11b
0041AA ED3907              B   213    			out0 (port_ps2_ctrl),a				                           B   214    			
0041AD 3E02                B   215    			ld a,10b
0041AF ED3907              B   216    			out0 (port_ps2_ctrl),a				                           B   217    			
0041B2 CD 82 43 00         B   218    			call wait_kb_clk_high
                           B   219    			
0041B6 1601                B   220    			ld d,1								0041B8 0608                B   221    			ld b,8								0041BA CD 55 43 00         B   222    kdoloop		call wait_kb_clk_low	
0041BE D8                  B   223    			ret c
0041BF AF                  B   224    			xor a
0041C0 CBCF                B   225    			set 1,a
0041C2 CB41                B   226    			bit 0,c
0041C4 28 03               B   227    			jr z,kdbzero
0041C6 CB8F                B   228    			res 1,a
0041C8 14                  B   229    			inc d
0041C9 ED3907              B   230    kdbzero		out0 (port_ps2_ctrl),a				0041CC CD 82 43 00         B   231    			call wait_kb_clk_high
0041D0 D8                  B   232    			ret c
0041D1 CB19                B   233    			rr c
0041D3 10 E5               B   234    			djnz kdoloop
                           B   235    
0041D5 CD 55 43 00         B   236    			call wait_kb_clk_low
0041D9 D8                  B   237    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041DA AF                  B   238    			xor a
0041DB CB42                B   239    			bit 0,d
0041DD 20 02               B   240    			jr nz,kparone
0041DF CBCF                B   241    			set 1,a
0041E1 ED3907              B   242    kparone		out0 (port_ps2_ctrl),a				0041E4 CD 82 43 00         B   243    			call wait_kb_clk_high
0041E8 D8                  B   244    			ret c
                           B   245    			
0041E9 CD 55 43 00         B   246    			call wait_kb_clk_low
0041ED D8                  B   247    			ret c
0041EE AF                  B   248    			xor a
0041EF ED3907              B   249    			out0 (port_ps2_ctrl),a				                           B   250    
0041F2 CD 51 43 00         B   251    			call wait_kb_data_low				0041F6 D8                  B   252    			ret c
0041F7 CD 55 43 00         B   253    			call wait_kb_clk_low				0041FB D8                  B   254    			ret c
                           B   255    				
0041FC CD 7E 43 00         B   256    			call wait_kb_data_high				004200 D8                  B   257    			ret c
004201 CD 82 43 00         B   258    			call wait_kb_clk_high				004205 C9                  B   259    			ret 
                           B   260    
                           B   261    
                           B   262    ;----------------------------------------------
                           B   263    
                           B   264    
004206                     B   265    wait_kb_byte
                           B   266    
004206 11008000            B   267    			ld de,8000h
00420A CD 0F 41 00         B   268    			call hwsc_set_timeout				                           B   269    
00420E ED3807              B   270    wait_kloop	in0 a,(port_ps2_ctrl)
004211 CB67                B   271    			bit 4,a
004213 20 08               B   272    			jr nz,rec_kbyte
                           B   273    			
004215 CD 20 41 00         B   274    			call hwsc_test_timeout
004219 28 F3               B   275    			jr z,wait_kloop
00421B 37                  B   276    			scf									00421C C9                  B   277    			ret
                           B   278    			
00421D ED3802              B   279    rec_kbyte	in0 a,(port_keyboard_data)			004220 B7                  B   280    			or a
004221 C9                  B   281    			ret
                           B   282    
                           B   283    
                           B   284    ;----------------------------------------------
                           B   285    
004222                     B   286    purge_keyboard
                           B   287    			
004222 ED3807              B   288    			in0 a,(port_ps2_ctrl)
004225 CB67                B   289    			bit 4,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004227 C8                  B   290    			ret z
004228 ED3802              B   291    			in0 a,(port_keyboard_data)			00422B 18 F5               B   292    			jr purge_keyboard
                           B   293    
                           B   294    
                           B   295    
                           B   296    ;----------------------------------------------
                           B   297    ; INIT MOUSE ROUTINE 
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    ; ZF set and A = 0 if all OK, else error code i
                           B   301    
00422D                     B   302    init_mouse		
00422D F3                  B   303    			di
00422E CD 46 43 00         B   304    			call purge_mouse
004232 CD 3C 42 00         B   305    			call rs_mouse
004236 FB                  B   306    			ei
004237 D0                  B   307    			ret nc
004238 3E8B                B   308    			ld a,08bh							00423A B7                  B   309    			or a
00423B C9                  B   310    			ret
                           B   311    
                           B   312    
00423C                     B   313    rs_mouse
00423C 3EFF                B   314    			ld a,0ffh							00423E CD BE 42 00         B   315    			call write_to_mouse		
004242 30 04               B   316    			jr nc,mouse_connected
004244 3E8A                B   317    			ld a,08ah							004246 B7                  B   318    			or a
004247 C9                  B   319    			ret
                           B   320    
                           B   321    
004248                     B   322    mouse_connected
                           B   323    
004248 0605                B   324    			ld b,5
00424A C5                  B   325    ms_initlp	push bc
00424B CD 2A 43 00         B   326    			call wait_mouse_byte				00424F C1                  B   327    			pop bc
004250 D8                  B   328    			ret c
004251 FEAA                B   329    			cp 0aah
004253 28 04               B   330    			jr z,ms_postok
004255 10 F3               B   331    			djnz ms_initlp
004257 18 43               B   332    			jr bad_mouse
                           B   333    			
004259 CD 2A 43 00         B   334    ms_postok	call wait_mouse_byte				00425D D8                  B   335    			ret c
00425E B7                  B   336    			or a
00425F 20 3B               B   337    			jr nz,bad_mouse						                           B   338    			
004261 3E03                B   339    			ld a,3
004263 32 2D 63 00         B   340    			ld (mouse_packet_size),a
                           B   341    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004267 21 0D 60 00         B   342    			ld hl,intellimouse_seq
00426B 0606                B   343    			ld b,6
00426D CD A0 42 00         B   344    			call mouse_sequence
004271 D8                  B   345    			ret c
                           B   346    			
004272 3EF2                B   347    			ld a,0f2h
004274 CD AF 42 00         B   348    			call write_mouse_wait_ack			004278 D8                  B   349    			ret c
004279 CD 2A 43 00         B   350    			call wait_mouse_byte				00427D D8                  B   351    			ret c
00427E 32 2C 63 00         B   352    			ld (mouse_id),a
004282 B7                  B   353    			or a								004283 28 0A               B   354    			jr z,standard_mouse
004285 FE03                B   355    			cp 3
004287 20 13               B   356    			jr nz,bad_mouse						004289 3E04                B   357    			ld a,4
00428B 32 2D 63 00         B   358    			ld (mouse_packet_size),a
                           B   359    
00428F                     B   360    standard_mouse
                           B   361    		
00428F 21 13 60 00         B   362    			ld hl,mouse_settings_seq
004293 0606                B   363    			ld b,6
004295 CD A0 42 00         B   364    			call mouse_sequence
004299 D8                  B   365    			ret c
00429A AF                  B   366    			xor a								00429B C9                  B   367    			ret
                           B   368    
                           B   369    
00429C 3E89                B   370    bad_mouse	ld a,089h							00429E B7                  B   371    			or a
00429F C9                  B   372    			ret
                           B   373    
                           B   374    
0042A0                     B   375    mouse_sequence
                           B   376    
0042A0 7E                  B   377    mseqlp		ld a,(hl)
0042A1 E5                  B   378    			push hl
0042A2 C5                  B   379    			push bc
0042A3 CD AF 42 00         B   380    			call write_mouse_wait_ack
0042A7 C1                  B   381    			pop bc
0042A8 E1                  B   382    			pop hl
0042A9 D8                  B   383    			ret c
0042AA 23                  B   384    			inc hl
0042AB 10 F3               B   385    			djnz mseqlp
0042AD AF                  B   386    			xor a
0042AE C9                  B   387    			ret
                           B   388    
                           B   389    
0042AF                     B   390    write_mouse_wait_ack
                           B   391    			
0042AF CD BE 42 00         B   392    			call write_to_mouse
0042B3 D8                  B   393    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042B4 CD 2A 43 00         B   394    			call wait_mouse_byte				0042B8 D8                  B   395    			ret c
0042B9 FEFA                B   396    			cp 0fah								0042BB C8                  B   397    			ret z
0042BC 37                  B   398    			scf
0042BD C9                  B   399    			ret
                           B   400    			
                           B   401    ;----------------------------------------------
                           B   402    				
0042BE                     B   403    write_to_mouse
                           B   404    
                           B   405    ; Put byte to send to mouse in A
                           B   406    
0042BE 4F                  B   407    			ld c,a								0042BF 3E04                B   408    			ld a,0100b							0042C1 ED3907              B   409    			out0 (port_ps2_ctrl),a
                           B   410    
0042C4 110A0000            B   411    			ld de,10
0042C8 CD 03 41 00         B   412    			call hwsc_time_delay				                           B   413    
0042CC 3E0C                B   414    			ld a,1100b
0042CE ED3907              B   415    			out0 (port_ps2_ctrl),a				                           B   416    			
0042D1 3E08                B   417    			ld a,1000b
0042D3 ED3907              B   418    			out0 (port_ps2_ctrl),a				                           B   419    			
0042D6 CD 8A 43 00         B   420    			call wait_mouse_clk_high
                           B   421    			
0042DA 1601                B   422    			ld d,1								0042DC 0608                B   423    			ld b,8								0042DE CD 5D 43 00         B   424    mdoloop		call wait_mouse_clk_low	
0042E2 D8                  B   425    			ret c
0042E3 AF                  B   426    			xor a
0042E4 CBDF                B   427    			set 3,a
0042E6 CB41                B   428    			bit 0,c
0042E8 28 03               B   429    			jr z,mdbzero
0042EA CB9F                B   430    			res 3,a
0042EC 14                  B   431    			inc d
0042ED ED3907              B   432    mdbzero		out0 (port_ps2_ctrl),a				0042F0 CD 8A 43 00         B   433    			call wait_mouse_clk_high
0042F4 D8                  B   434    			ret c
0042F5 CB19                B   435    			rr c
0042F7 10 E5               B   436    			djnz mdoloop
                           B   437    
0042F9 CD 5D 43 00         B   438    			call wait_mouse_clk_low
0042FD D8                  B   439    			ret c
0042FE AF                  B   440    			xor a
0042FF CB42                B   441    			bit 0,d
004301 20 02               B   442    			jr nz,parone
004303 CBDF                B   443    			set 3,a
004305 ED3907              B   444    parone		out0 (port_ps2_ctrl),a				004308 CD 8A 43 00         B   445    			call wait_mouse_clk_high
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00430C D8                  B   446    			ret c
                           B   447    			
00430D CD 5D 43 00         B   448    			call wait_mouse_clk_low
004311 D8                  B   449    			ret c
004312 AF                  B   450    			xor a
004313 ED3907              B   451    			out0 (port_ps2_ctrl),a				                           B   452    
004316 CD 59 43 00         B   453    			call wait_mouse_data_low			00431A D8                  B   454    			ret c
00431B CD 5D 43 00         B   455    			call wait_mouse_clk_low				00431F D8                  B   456    			ret c
                           B   457    				
004320 CD 86 43 00         B   458    			call wait_mouse_data_high			004324 D8                  B   459    			ret c
004325 CD 8A 43 00         B   460    			call wait_mouse_clk_high			004329 C9                  B   461    			ret 
                           B   462    
                           B   463    ;----------------------------------------------
                           B   464    
                           B   465    
00432A                     B   466    wait_mouse_byte
                           B   467    
00432A 11008000            B   468    			ld de,8000h
00432E CD 0F 41 00         B   469    			call hwsc_set_timeout				                           B   470    
004332 ED3807              B   471    wait_mloop	in0 a,(port_ps2_ctrl)
004335 CB6F                B   472    			bit 5,a
004337 20 08               B   473    			jr nz,rec_mbyte
                           B   474    			
004339 CD 20 41 00         B   475    			call hwsc_test_timeout
00433D 28 F3               B   476    			jr z,wait_mloop
00433F 37                  B   477    			scf									004340 C9                  B   478    			ret
                           B   479    			
004341 ED3806              B   480    rec_mbyte	in0 a,(port_mouse_data)				004344 B7                  B   481    			or a
004345 C9                  B   482    			ret
                           B   483    
                           B   484    ;----------------------------------------------
                           B   485    
004346                     B   486    purge_mouse
                           B   487    			
004346 ED3807              B   488    			in0 a,(port_ps2_ctrl)
004349 CB6F                B   489    			bit 5,a
00434B C8                  B   490    			ret z
00434C ED3806              B   491    			in0 a,(port_mouse_data)			; r
00434F 18 F5               B   492    			jr purge_mouse
                           B   493    
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    
                           B   497    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004351                     B   498    wait_kb_data_low
                           B   499    
004351 3E02                B   500    			ld a,2
004353 18 0A               B   501    			jr test_lo_ps2
                           B   502    			
004355                     B   503    wait_kb_clk_low
                           B   504    
004355 3E01                B   505    			ld a,1
004357 18 06               B   506    			jr test_lo_ps2			
                           B   507    
004359                     B   508    wait_mouse_data_low
                           B   509    
004359 3E08                B   510    			ld a,8
00435B 18 02               B   511    			jr test_lo_ps2
                           B   512    
00435D                     B   513    wait_mouse_clk_low
                           B   514    
00435D 3E04                B   515    			ld a,4
                           B   516    
00435F C5                  B   517    test_lo_ps2	push bc
004360 D5                  B   518    			push de
004361 4F                  B   519    			ld c,a
004362 11004000            B   520    			ld de,04000h					; a
004366 CD 0F 41 00         B   521    			call hwsc_set_timeout
                           B   522    
00436A CD 20 41 00         B   523    nkb_lw		call hwsc_test_timeout			; t
00436E 28 04               B   524    			jr z,nkb_lnto
004370 D1                  B   525    			pop de
004371 C1                  B   526    			pop bc
004372 37                  B   527    			scf								; c
004373 C9                  B   528    			ret
004374 ED3807              B   529    nkb_lnto	in0 a,(port_ps2_ctrl)
004377 A1                  B   530    			and c
004378 20 F0               B   531    			jr nz,nkb_lw
                           B   532    					
00437A D1                  B   533    			pop de
00437B C1                  B   534    			pop bc
00437C AF                  B   535    			xor a
00437D C9                  B   536    			ret					
                           B   537    
                           B   538    
                           B   539    
                           B   540    
00437E                     B   541    wait_kb_data_high
                           B   542    
00437E 3E02                B   543    			ld a,2
004380 18 0A               B   544    			jr test_hi_ps2
                           B   545    			
004382                     B   546    wait_kb_clk_high
                           B   547    
004382 3E01                B   548    			ld a,1
004384 18 06               B   549    			jr test_hi_ps2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   550    
                           B   551    
004386                     B   552    wait_mouse_data_high
                           B   553    			
004386 3E08                B   554    			ld a,8
004388 18 02               B   555    			jr test_hi_ps2
                           B   556    			 
00438A                     B   557    wait_mouse_clk_high
                           B   558    
00438A 3E04                B   559    			ld a,4
                           B   560    
00438C C5                  B   561    test_hi_ps2	push bc
00438D D5                  B   562    			push de
00438E 4F                  B   563    			ld c,a
00438F 11004000            B   564    			ld de,04000h					; a
004393 CD 0F 41 00         B   565    			call hwsc_set_timeout
                           B   566    
004397 CD 20 41 00         B   567    nkb_hw		call hwsc_test_timeout			; t
00439B 28 04               B   568    			jr z,nkb_hnto
00439D D1                  B   569    			pop de
00439E C1                  B   570    			pop bc
00439F 37                  B   571    			scf								; c
0043A0 C9                  B   572    			ret
0043A1 ED3807              B   573    nkb_hnto	in0 a,(port_ps2_ctrl)
0043A4 A1                  B   574    			and c
0043A5 28 F0               B   575    			jr z,nkb_hw
                           B   576    					
0043A7 D1                  B   577    			pop de
0043A8 C1                  B   578    			pop bc
0043A9 AF                  B   579    			xor a							; c
0043AA C9                  B   580    			ret
                           B   581    
                           B   582    
                           B   583    ;==============================================
                           B   584    
0043AB                     B   585    hwsc_play_audio
                           B   586    
                           B   587    ; set HL register to location of an audio data 
                           B   588    
                           B   589    ; 0 - start 
                           B   590    ; 3 - length
                           B   591    ; 6 - loop start
                           B   592    ; 9 - loop length
                           B   593    ; c - frequency constant
                           B   594    ; e - volume
                           B   595    
                           B   596    ; set C register to set channels wave is to pla
                           B   597    
0043AB E5                  B   598    				push hl
0043AC FDE1                B   599    				pop iy
0043AE DD210014 FF         B   600    				ld ix,hw_audio_registers
0043B3 CD E8 43 00         B   601    				call audio_reg_wait				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   602    				
0043B7 0608                B   603    				ld b,8
0043B9 CB39                B   604    audchanloop		srl c
0043BB 30 24               B   605    				jr nc,not_this_chan
                           B   606    				
0043BD FD1700              B   607    				ld de,(iy)
0043C0 DD1F00              B   608    				ld (ix),de						                           B   609    
0043C3 FD1703              B   610    				ld de,(iy+3)
0043C6 DD1F04              B   611    				ld (ix+04h),de					                           B   612    				
0043C9 FD170C              B   613    				ld de,(iy+0ch)
0043CC DD1F08              B   614    				ld (ix+08h),de					                           B   615    				
0043CF FD5E0E              B   616    				ld e,(iy+0eh)
0043D2 DD1F0C              B   617    				ld (ix+0ch),de					                           B   618    				
0043D5 FD1706              B   619    				ld de,(iy+6)
0043D8 DD1F10              B   620    				ld (ix+10h),de					                           B   621    				
0043DB FD1709              B   622    				ld de,(iy+9)
0043DE DD1F14              B   623    				ld (ix+14h),de					                           B   624    
0043E1                     B   625    not_this_chan	
0043E1 ED3220              B   626    				lea ix,ix+20h			
0043E4 10 D3               B   627    				djnz audchanloop
0043E6 AF                  B   628    				xor a
0043E7 C9                  B   629    				ret
                           B   630    
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
0043E8                     B   634    audio_reg_wait	
                           B   635    
0043E8 3E01                B   636    				ld a,1
0043EA 320314FF            B   637    				ld (hw_audio_registers+3),a		                           B   638    				
0043EE ED3801              B   639    wait_audreg		in0 a,(port_hw_flags)			0043F1 E640                B   640    				and 040h
0043F3 28 F9               B   641    				jr z,wait_audreg				0043F5 AF                  B   642    				xor a
0043F6 C9                  B   643    				ret
0043F7 C9                  B   644    				ret
                           B   645    
                           B   646    
                           B   647    ;----------------------------------------------
                           B   648    				
                           B   649    				
0043F8                     B   650    hwsc_disable_audio
                           B   651    
0043F8 AF                  B   652    				xor a
0043F9 320314FF            B   653    				ld (hw_audio_registers+3),a		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   654    				
0043FD DD210014 FF         B   655    				ld ix,hw_audio_registers		004402 0608                B   656    				ld b,8
004404 11000000            B   657    				ld de,0
004408 DD1F0C              B   658    disaud_lp		ld (ix+0ch),de
00440B ED3220              B   659    				lea ix,ix+020h
00440E 10 F8               B   660    				djnz disaud_lp
004410 C9                  B   661    				ret
                           B   662    				
                           B   663    ;----------------------------------------------
                           B   664    
004411                     B   665    hwsc_get_joysticks
                           B   666    
004411 ED389E              B   667    				in0 a,(PC_DR)				
004414 2F                  B   668    				cpl
004415 47                  B   669    				ld b,a
004416 E60F                B   670    				and 0fh
004418 5F                  B   671    				ld e,a
004419 78                  B   672    				ld a,b
00441A 0F                  B   673    				rrca
00441B 0F                  B   674    				rrca
00441C 0F                  B   675    				rrca
00441D 0F                  B   676    				rrca
00441E E60F                B   677    				and 0fh
004420 57                  B   678    				ld d,a
                           B   679    				
004421 ED38A2              B   680    				in0 a,(PD_DR)	
004424 CB67                B   681    				bit 4,a						; f
004426 20 02               B   682    				jr nz,noj1b1
004428 CBEA                B   683    				set 5,d
                           B   684    
00442A CB6F                B   685    noj1b1			bit 5,a						; f
00442C 20 02               B   686    				jr nz,noj1b0
00442E CBE2                B   687    				set 4,d
                           B   688    				
004430 CB77                B   689    noj1b0			bit 6,a						; f
004432 20 02               B   690    				jr nz,noj0b1
004434 CBEB                B   691    				set 5,e
                           B   692    
004436 CB7F                B   693    noj0b1			bit 7,a						; f
004438 20 02               B   694    				jr nz,noj0b0
00443A CBE3                B   695    				set 4,e
                           B   696    
00443C AF                  B   697    noj0b0			xor a
00443D C9                  B   698    				ret
                           B   699    				
                           B   700    				
                           B   701    ;----------------------------------------------
                           B   702    			
                           B   703    				
                           B   704    				
                           A  3243    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
00443E                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
00443E D5                  B    13    				push de
00443F 51                  B    14    				ld d,c
004440 E5                  B    15    				push hl
                           B    16    				
004441 CD AB 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004445 BE                  B    18    				cp (hl)							004446 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004448 01000000            B    21    new_key			ld bc,0							00444C 4F                  B    22    				ld c,a
00444D 21 05 63 00         B    23    				ld hl,scancode_buffer	
004451 09                  B    24    				add hl,bc
004452 7E                  B    25    				ld a,(hl)						                           B    26    
004453 0E10                B    27    				ld c,16
004455 09                  B    28    				add hl,bc						004456 4F                  B    29    				ld c,a							004457 7E                  B    30    				ld a,(hl)						                           B    31    
004458 1E00                B    32    				ld e,0							00445A 21 66 5E 00         B    33    				ld hl,unshifted_keymap			                           B    34    
00445E CB4F                B    35    				bit 1,a
004460 28 04               B    36    				jr z,not_ctrl					004462 1E60                B    37    				ld e,96							004464 18 16               B    38    				jr got_keymap					                           B    39    							
004466 CB47                B    40    not_ctrl		bit 0,a
004468 20 04               B    41    				jr nz,shifted
00446A CB67                B    42    				bit 4,a
00446C 28 06               B    43    				jr z,not_shifted
00446E 21 C8 5E 00         B    44    shifted			ld hl,shifted_keymap			004472 18 08               B    45    				jr got_keymap
                           B    46    				
004474 CB5F                B    47    not_shifted		bit 3,a
004476 28 04               B    48    				jr z,got_keymap	
004478 21 2A 5F 00         B    49    				ld hl,alted_keymap				                           B    50    
00447C 79                  B    51    got_keymap		ld a,c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
00447D FE62                B    52    				cp 062h
00447F 30 07               B    53    				jr nc,gotkdone
004481 09                  B    54    				add hl,bc						004482 7E                  B    55    				ld a,(hl)						004483 93                  B    56    				sub a,e							004484 30 01               B    57    				jr nc,subkey_ok	
004486 AF                  B    58    				xor a							004487 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004488 3A 26 63 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			00448C 3C                  B    62    				inc a							00448D E60F                B    63    				and 15
00448F 32 26 63 00         B    64    				ld (key_buf_rd_idx),a			004493 79                  B    65    				ld a,c							004494 E1                  B    66    				pop hl
004495 4A                  B    67    				ld c,d
004496 D1                  B    68    				pop de
004497 BF                  B    69    				cp a							004498 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004499                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
004499 D5                  B    82    				push de
00449A 51                  B    83    				ld d,c
00449B E5                  B    84    				push hl
00449C CD AB 44 00         B    85    				call get_kb_buffer_indexes		0044A0 BE                  B    86    				cp (hl)							0044A1 20 A5               B    87    				jr nz,new_key					0044A3 3E81                B    88    				ld a,81h			
0044A5 47                  B    89    				ld b,a
0044A6 B7                  B    90    				or a
0044A7 E1                  B    91    				pop hl
0044A8 4A                  B    92    				ld c,d
0044A9 D1                  B    93    				pop de
0044AA C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
0044AB                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
0044AB 21 25 63 00         B   101    				ld hl,key_buf_wr_idx			0044AF 3A 26 63 00         B   102    				ld a,(key_buf_rd_idx)			0044B3 C9                  B   103    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
0044B4                     B    21    serial_get_header
                           B    22    
0044B4 32 EA 5F 00         B    23    				ld (serial_timeout),a			0044B8 22 D4 5F 00         B    24    				ld (serial_fn_addr),hl
0044BC CD 1D 3E 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
0044C0 CD A3 45 00         B    27    				call s_getblock					0044C4 28 0C               B    28    				jr z,s_gbfhok					0044C6 F5                  B    29    				push af							0044C7 3A 0B 60 00         B    30    				ld a,(serial_transfer_started)
0044CB B7                  B    31    				or a							0044CC C4 0A 46 00         B    32    				call nz,s_badack				0044D0 F1                  B    33    				pop af
0044D1 C9                  B    34    				ret
                           B    35    	
0044D2 21 FF 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			0044D6 11 59 67 00         B    37    				ld de,sector_buffer+20			0044DA 060C                B    38    				ld b,12
0044DC CD 26 12 00         B    39    				call os_compare_strings
0044E0 20 0F               B    40    				jr nz,s_nfhdr
0044E2 06E0                B    41    				ld b,256-32						0044E4 21 65 67 00         B    42    				ld hl,sector_buffer+32
0044E8 7E                  B    43    s_chdr			ld a,(hl)
0044E9 23                  B    44    				inc hl
0044EA B7                  B    45    				or a
0044EB 20 04               B    46    				jr nz,s_nfhdr
0044ED 10 F9               B    47    				djnz s_chdr
0044EF 18 08               B    48    				jr s_fhcsok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    49    				
0044F1 CD 0A 46 00         B    50    s_nfhdr			call s_badack					0044F5 3E85                B    51    				ld a,085h						0044F7 B7                  B    52    				or a
0044F8 C9                  B    53    				ret
                           B    54    		
0044F9 21 55 67 00         B    55    s_fhcsok		ld hl,sector_buffer+16			0044FD 11 FB 5F 00         B    56    				ld de,serial_fileheader+16
004501 01040000            B    57    				ld bc,4
004505 EDB0                B    58    				ldir
                           B    59    				
004507 21 45 67 00         B    60    				ld hl,sector_buffer
00450B 11 EB 5F 00         B    61    				ld de,serial_fileheader			00450F 0610                B    62    				ld b,16							004511 7E                  B    63    s_tuclp			ld a,(hl)						004512 B7                  B    64    				or a
004513 28 0B               B    65    				jr z,s_ffhswz	
004515 CD 60 12 00         B    66    				call os_uppercasify
004519 12                  B    67    				ld (de),a
00451A 23                  B    68    				inc hl
00451B 13                  B    69    				inc de
00451C 10 F3               B    70    				djnz s_tuclp
00451E 18 04               B    71    				jr s_tucdone
004520 12                  B    72    s_ffhswz		ld (de),a
004521 13                  B    73    				inc de
004522 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004524 2A D4 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004528 7E                  B    77    				ld a,(hl)
004529 FE2A                B    78    				cp '*'
00452B 28 14               B    79    				jr z,s_rffns					00452D 11 EB 5F 00         B    80    				ld de,serial_fileheader
004531 0610                B    81    				ld b,16
004533 CD 26 12 00         B    82    				call os_compare_strings
004537 28 08               B    83    				jr z,s_rffns
004539 CD 0A 46 00         B    84    s_rfnbad		call s_badack
00453D 3E87                B    85    				ld a,087h						00453F B7                  B    86    				or a
004540 C9                  B    87    				ret
                           B    88    				
004541 DD21 EB 5F 00       B    89    s_rffns			ld ix,serial_fileheader			004546 AF                  B    90    				xor a
004547 C9                  B    91    				ret
                           B    92    
004548 F5                  B    93    s_fail			push af				
004549 CD 0A 46 00         B    94    				call s_badack		 
00454D F1                  B    95    				pop af
00454E C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
00454F                     B   114    serial_receive_file
                           B   115    
00454F 3E0A                B   116    				ld a,10							004551 32 EA 5F 00         B   117    				ld (serial_timeout),a
004555 E5                  B   118    				push hl
004556 CD F9 45 00         B   119    				call s_goodack					00455A DDE1                B   120    				pop ix							00455C ED5B FB 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004561 CD A3 45 00         B   123    s_gbloop		call s_getblock
004565 20 E1               B   124    				jr nz,s_fail
004567 0E00                B   125    				ld c,0							004569 FD21 45 67 00       B   126    				ld iy,sector_buffer
00456E FD7E00              B   127    s_rfloop		ld a,(iy)
004571 DD7700              B   128    				ld (ix),a						004574 1B                  B   129    				dec de							004575 21000000            B   130    				ld hl,0
004579 AF                  B   131    				xor a
00457A ED5A                B   132    				adc hl,de						00457C 28 1A               B   133    				jr z,s_rfabr					00457E C5                  B   134    				push bc
00457F 01010000            B   135    				ld bc,1
004583 DD09                B   136    				add ix,bc						004585 C1                  B   137    				pop bc
004586 30 05               B   138    				jr nc,s_nbt
004588 3E84                B   139    				ld a,84h						00458A B7                  B   140    				or a
00458B 18 BB               B   141    				jr s_fail
00458D FD23                B   142    s_nbt			inc iy
00458F 0D                  B   143    				dec c
004590 20 DC               B   144    				jr nz,s_rfloop
004592 CD F9 45 00         B   145    				call s_goodack					004596 18 C9               B   146    				jr s_gbloop
                           B   147    			
004598 CD F9 45 00         B   148    s_rfabr			call s_goodack					00459C DD21 EB 5F 00       B   149    				ld ix,serial_fileheader			0045A1 AF                  B   150    				xor a							0045A2 C9                  B   151    				ret
                           B   152    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   153    ;----------------------------------------------
                           B   154    
0045A3                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
0045A3 AF                  B   159    				xor a
0045A4 32 0B 60 00         B   160    				ld (serial_transfer_started),a	0045A8 E5                  B   161    				push hl							0045A9 D5                  B   162    				push de
0045AA C5                  B   163    				push bc
0045AB 21 45 67 00         B   164    				ld hl,sector_buffer				0045AF 0600                B   165    				ld b,0
0045B1 D9                  B   166    				exx
0045B2 21FFFF00            B   167    				ld hl,0ffffh					0045B6 D9                  B   168    				exx
0045B7 CD C7 3D 00         B   169    s_lgb			call receive_serial_byte
0045BB 20 38               B   170    				jr nz,s_gberr					0045BD F5                  B   171    				push af
0045BE 3E01                B   172    				ld a,1
0045C0 32 0B 60 00         B   173    				ld (serial_transfer_started),a
0045C4 F1                  B   174    				pop af
0045C5 77                  B   175    				ld (hl),a
0045C6 D9                  B   176    				exx
0045C7 AC                  B   177    				xor h							0045C8 67                  B   178    				ld h,a			
0045C9 0608                B   179    				ld b,8
0045CB 4029                B   180    rxcrcbyte		add.sis hl,hl					0045CD 30 08               B   181    				jr nc,rxcrcnext
0045CF 7C                  B   182    				ld a,h
0045D0 EE10                B   183    				xor 10h
0045D2 67                  B   184    				ld h,a
0045D3 7D                  B   185    				ld a,l
0045D4 EE21                B   186    				xor 21h
0045D6 6F                  B   187    				ld l,a
0045D7 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0045D9 D9                  B   189    				exx
0045DA 23                  B   190    				inc hl
0045DB 10 DA               B   191    				djnz s_lgb
0045DD D9                  B   192    				exx								                           B   193    			
0045DE CD C7 3D 00         B   194    				call receive_serial_byte		0045E2 20 11               B   195    				jr nz,s_gberr
0045E4 4F                  B   196    				ld c,a
0045E5 CD C7 3D 00         B   197    				call receive_serial_byte
0045E9 20 0A               B   198    				jr nz,s_gberr		
0045EB 47                  B   199    				ld b,a
                           B   200    				
0045EC AF                  B   201    				xor a							0045ED 52ED42              B   202    				sbc.s hl,bc						0045F0 28 03               B   203    				jr z,s_gberr
                           B   204    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045F2 3E86                B   205    				ld a,86h						0045F4 B7                  B   206    				or a							0045F5 C1                  B   207    s_gberr			pop bc
0045F6 D1                  B   208    				pop de
0045F7 E1                  B   209    				pop hl
0045F8 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0045F9 C5                  B   214    s_goodack		push bc
0045FA 014F4B00            B   215    				ld bc,04b4fh					0045FE 79                  B   216    ackbytes		ld a,c
0045FF CD 02 3E 00         B   217    				call send_serial_byte
004603 78                  B   218    				ld a,b
004604 CD 02 3E 00         B   219    				call send_serial_byte
004608 C1                  B   220    				pop bc
004609 C9                  B   221    				ret
                           B   222    
00460A C5                  B   223    s_badack		push bc
00460B 01585800            B   224    				ld bc,05858h					00460F 18 ED               B   225    				jr ackbytes
                           B   226    
004611 C5                  B   227    s_holdack		push bc
004612 01575700            B   228    				ld bc,05757h					004616 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004618                     B   249    serial_send_file
                           B   250    			
004618 3E01                B   251    				ld a,1							00461A 32 EA 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
00461E DD22 CE 5F 00       B   254    				ld (serial_ez80_address),ix
004623 ED53 FB 5F 00       B   255    				ld (serial_fileheader+10h),de	004628 E5                  B   256    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004629 21000000            B   257    				ld hl,0
00462D AF                  B   258    				xor a
00462E ED5A                B   259    				adc hl,de
004630 20 05               B   260    				jr nz,s_flok
004632 E1                  B   261    				pop hl
004633 3E81                B   262    				ld a,081h						004635 B7                  B   263    				or a							004636 C9                  B   264    				ret
                           B   265    			
004637 21 EB 5F 00         B   266    s_flok			ld hl,serial_fileheader			00463B 01100000            B   267    				ld bc,16
00463F AF                  B   268    				xor a
004640 CD C3 15 00         B   269    				call os_bchl_memfill
004644 E1                  B   270    				pop hl							004645 11 EB 5F 00         B   271    				ld de,serial_fileheader
004649 0610                B   272    				ld b,16
00464B CD 45 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
00464F 21 FF 5F 00         B   275    				ld hl,serial_header_id			004653 11 FF 5F 00         B   276    				ld de,serial_fileheader+014h
004657 010C0000            B   277    				ld bc,12		
00465B EDB0                B   278    				ldir
                           B   279    			
00465D DD21 EB 5F 00       B   280    				ld ix,serial_fileheader			004662 11200000            B   281    				ld de,32
004666 CD 9C 46 00         B   282    				call s_makeblock			
00466A C0                  B   283    				ret nz
00466B CD D4 46 00         B   284    				call s_sendblock
00466F C0                  B   285    				ret nz
004670 CD 01 47 00         B   286    				call s_waitack					004674 C0                  B   287    				ret nz							                           B   288    				
004675 DD2A CE 5F 00       B   289    				ld ix,(serial_ez80_address)
00467A ED5B FB 5F 00       B   290    				ld de,(serial_fileheader+16)	00467F CD 9C 46 00         B   291    s_sbloop		call s_makeblock				004683 38 16               B   292    				jr c,s_rerr
004685 CD D4 46 00         B   293    				call s_sendblock				004689 38 10               B   294    				jr c,s_rerr	
00468B CD 01 47 00         B   295    				call s_waitack					00468F 38 0A               B   296    				jr c,s_rerr
004691 21000000            B   297    				ld hl,0
004695 AF                  B   298    				xor a
004696 ED5A                B   299    				adc hl,de
004698 20 E5               B   300    				jr nz,s_sbloop					00469A AF                  B   301    				xor a							00469B C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
00469C                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
00469C 21 45 67 00         B   312    				ld hl,sector_buffer				0046A0 01000100            B   313    				ld bc,256						0046A4 AF                  B   314    				xor a							0046A5 CD C3 15 00         B   315    				call os_bchl_memfill			                           B   316    				
0046A9 0600                B   317    				ld b,0							0046AB FD21 45 67 00       B   318    				ld iy,sector_buffer	
0046B0 DD7E00              B   319    s_sloop			ld a,(ix)
0046B3 FD7700              B   320    				ld (iy),a
0046B6 1B                  B   321    				dec de							0046B7 21000000            B   322    				ld hl,0
0046BB AF                  B   323    				xor a
0046BC ED5A                B   324    				adc hl,de
0046BE 28 12               B   325    				jr z,s_mbend	
0046C0 FD23                B   326    				inc iy							0046C2 C5                  B   327    				push bc
0046C3 01010000            B   328    				ld bc,1
0046C7 DD09                B   329    				add ix,bc						0046C9 C1                  B   330    				pop bc							0046CA 20 04               B   331    				jr nz,s_sbok
0046CC 3E84                B   332    				ld a,84h						0046CE B7                  B   333    				or a
0046CF C9                  B   334    				ret
0046D0 10 DE               B   335    s_sbok			djnz s_sloop
0046D2 AF                  B   336    s_mbend			xor a
0046D3 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0046D4                     B   341    s_sendblock
                           B   342    
0046D4 E5                  B   343    				push hl
0046D5 D5                  B   344    				push de							0046D6 C5                  B   345    				push bc				
0046D7 21 45 67 00         B   346    				ld hl,sector_buffer			
0046DB 1E00                B   347    				ld e,0
0046DD 7E                  B   348    s_sblklp		ld a,(hl)
0046DE CD 02 3E 00         B   349    				call send_serial_byte
0046E2 23                  B   350    				inc hl
0046E3 1D                  B   351    				dec e
0046E4 20 F7               B   352    				jr nz,s_sblklp
0046E6 11 45 67 00         B   353    				ld de,sector_buffer
0046EA 01000000            B   354    				ld bc,0
0046EE CD 69 15 00         B   355    				call crc_checksum
0046F2 7D                  B   356    				ld a,l
0046F3 CD 02 3E 00         B   357    				call send_serial_byte
0046F7 7C                  B   358    				ld a,h
0046F8 CD 02 3E 00         B   359    				call send_serial_byte
0046FC AF                  B   360    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046FD C1                  B   361    s_popall		pop bc
0046FE D1                  B   362    				pop de
0046FF E1                  B   363    				pop hl
004700 C9                  B   364    				ret
                           B   365    	
                           B   366    
004701                     B   367    s_waitack
004701 E5                  B   368    				push hl
004702 D5                  B   369    				push de
004703 C5                  B   370    				push bc
004704 CD C7 3D 00         B   371    				call receive_serial_byte		004708 20 F3               B   372    				jr nz,s_popall
00470A 47                  B   373    				ld b,a
00470B CD C7 3D 00         B   374    				call receive_serial_byte
00470F 20 EC               B   375    				jr nz,s_popall
004711 4F                  B   376    				ld c,a
004712 264F                B   377    				ld h,'O'
004714 2E4B                B   378    				ld l,'K'
004716 AF                  B   379    				xor a
004717 52ED42              B   380    				sbc.s hl,bc						00471A 28 E1               B   381    				jr z,s_popall					                           B   382    			
00471C 3E85                B   383    				ld a,085h						00471E B7                  B   384    				or a
00471F 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v08.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.08 - Speeded up reading of files (pre-calc 
                           B     8    ;        All routines return with ZF not set if
                           B     9    ;
                           B    10    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    11    ; 0.06 - Fixed "fs_get_volume_label"
                           B    12    ; 0.05 - Fixed format command
                           B    13    ; 0.04 - File system error codes are now in the
                           B    14    ; 0.03 - ADL mode
                           B    15    ; 0.02 - removed references to banks, added 24 
                           B    16    ; 0.01 - first version based on FLOS routines v
                           B    17    ;
                           B    18    ; Known limitations:
                           B    19    ; ------------------
                           B    20    ; If a disk full error is returned during a fil
                           B    21    ; Allows a file to be created in root even if t
                           B    22    ;        
                           B    23    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B    24    ;
                           B    25    ; All routines return carry clear / zero flag s
                           B    26    ;
                           B    27    ; If carry set there was a driver error, A = Er
                           B    28    ; Check for "carry set" first!
                           B    29    ; If carry clear, check zero flag. If not set: 
                           B    30    ;
                           B    31    ;					$c1  - Disk full
                           B    32    ;					$c2  - file not found
                           B    33    ;             	    $c3  - (root) dir table is 
                           B    34    ;					$c4  - directory requested 
                           B    35    ;             	    $c5  - cant delete dir, it 
                           B    36    ;					$c6  - not a file
                           B    37    ;					$c7  - file length is zero
                           B    38    ;              	    $c8  - out of memory
                           B    39    ;					$c9  - filename already exi
                           B    40    ;					$ca  - already at root dire
                           B    41    ;                  	$cb  - directory not found
                           B    42    ;					$cc  - requested bytes beyo
                           B    43    ;					$cd  - invalid filename
                           B    44    ;					$ce  - unknown/incorrect di
                           B    45    ;					$cf  - invalid volume
                           B    46    ;                 	$d0  - device not present	                           B    47    ;					$d1  - directory not found	                           B    48    ;                 	$d2  - end of directory lis
                           B    49    ;                 	$d3  - device does not use 
                           B    50    ;                  	$d4  - cant find volume lab
                           B    51    ;                   $d5  - sector out of range
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    ; Main routines called by external programs
                           B    55    ;----------------------------------------------
                           B    56    
004721                     B    57    fs_format_device_command
                           B    58    
                           B    59    ; Creates a single partition (truncated to 2GB)
                           B    60    
                           B    61    
004721 3A 1C 60 00         B    62    				ld a,(device_count)				004725 47                  B    63    				ld b,a							004726 DD21 C6 60 00       B    64    				ld ix,host_device_hardware_info
00472B 3A 1B 60 00         B    65    fdevinfo		ld a,(current_driver)
00472F DDBE00              B    66    				cp (ix)
004732 28 09               B    67    				jr z,got_dev_info
004734 ED3220              B    68    				lea ix,ix+32
004737 10 F2               B    69    				djnz fdevinfo
004739 3ED0                B    70    				ld a,0d0h						00473B B7                  B    71    				or a
00473C C9                  B    72    				ret	
                           B    73    	
00473D CD 11 52 00         B    74    got_dev_info	call fs_clear_sector_buffer		004741 11000000            B    75    				ld de,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004745 CD 35 48 00         B    76    form_ws			call set_lba_and_write_sector
004749 D8                  B    77    				ret c
00474A 13                  B    78    				inc de
00474B 7A                  B    79    				ld a,d
00474C FE03                B    80    				cp 3
00474E 20 F5               B    81    				jr nz,form_ws
                           B    82    	
004750 21 ED 54 00         B    83    				ld hl,bootsector_stub			004754 11 45 67 00         B    84    				ld de,sector_buffer				004758 013F0000            B    85    				ld bc,03fh
00475C EDB0                B    86    				ldir
                           B    87    	
00475E DD7E04              B    88    				ld a,(ix+4)						004761 B7                  B    89    				or a
004762 20 0C               B    90    				jr nz,above_2gb
004764 2100003F            B    91    				ld hl,3f0000h					004768 DD1701              B    92    				ld de,(ix+1)					00476B AF                  B    93    				xor a			
00476C ED52                B    94    				sbc hl,de						00476E 30 08               B    95    				jr nc,lessthan2gb				004770 3E40                B    96    above_2gb		ld a,40h						004772 1100003F            B    97    				ld de,3f0000h					004776 18 11               B    98    				jr spcvalok
                           B    99    
004778 DD4E03              B   100    lessthan2gb		ld c,(ix+3)						00477B 0C                  B   101    				inc c							00477C 3E01                B   102    spc_loop		ld a,1							00477E B9                  B   103    spc_comp		cp c							00477F 28 08               B   104    				jr z,spcvalok
004781 07                  B   105    				rlca
004782 FE80                B   106    				cp 080h							004784 20 F8               B   107    				jr nz,spc_comp
004786 0C                  B   108    				inc c			
004787 18 F3               B   109    				jr spc_loop						                           B   110    							
004789 DD21 45 67 00       B   111    spcvalok		ld ix,sector_buffer
00478E DD770D              B   112    				ld (ix+0dh),a					                           B   113    				
004791 CD E0 15 00         B   114    				call os_get_xde_msb				004795 4F                  B   115    				ld c,a							004796 B7                  B   116    				or a							004797 20 08               B   117    				jr nz,ts_dword					004799 DD7313              B   118    				ld (ix+13h),e					00479C DD7214              B   119    				ld (ix+14h),d
00479F 18 07               B   120    				jr ts_done
0047A1 DD1F20              B   121    ts_dword		ld (ix+20h),de					0047A4 DD362300            B   122    				ld (ix+23h),0
                           B   123    
0047A8 EB                  B   124    ts_done			ex de,hl						0047A9 11000000            B   125    				ld de,0						
0047AD DD560D              B   126    				ld d,(ix+0dh)					0047B0 01000000            B   127    				ld bc,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0047B4 AF                  B   128    div_tscls		xor a							0047B5 ED52                B   129    				sbc hl,de
0047B7 28 05               B   130    				jr z,gotfats
0047B9 38 03               B   131    				jr c,gotfats	
0047BB 03                  B   132    				inc bc
0047BC 18 F6               B   133    				jr div_tscls
0047BE 03                  B   134    gotfats			inc bc
0047BF DD7116              B   135    				ld (ix+16h),c					0047C2 DD7017              B   136    				ld (ix+17h),b
0047C5 ED43 3D 55 00       B   137    				ld (fs_sectors_per_fat),bc
                           B   138    				
0047CA 010055AA            B   139    				ld bc,0aa5500h
0047CE ED43 42 69 00       B   140    				ld (sector_buffer+1fdh),bc		0047D3 11000000            B   141    				ld de,0
0047D7 CD 35 48 00         B   142    				call set_lba_and_write_sector	0047DB D8                  B   143    				ret c
                           B   144    				
0047DC 21000000            B   145    				ld hl,0
0047E0 DD6E0E              B   146    				ld l,(ix+0eh)					0047E3 DD660F              B   147    				ld h,(ix+0fh)
0047E6 19                  B   148    				add hl,de
0047E7 EB                  B   149    				ex de,hl						                           B   150    				
0047E8 CD 11 52 00         B   151    				call fs_clear_sector_buffer		0047EC DD3600FF            B   152    				ld (ix+0),0ffh
0047F0 DD3601F8            B   153    				ld (ix+1),0f8h
0047F4 DD3602FF            B   154    				ld (ix+2),0ffh
0047F8 DD3603FF            B   155    				ld (ix+3),0ffh
0047FC CD 35 48 00         B   156    				call set_lba_and_write_sector	004800 D8                  B   157    				ret c
                           B   158    
004801 2A 3D 55 00         B   159    				ld hl,(fs_sectors_per_fat)	
004805 19                  B   160    				add hl,de
004806 EB                  B   161    				ex de,hl
004807 CD 35 48 00         B   162    				call set_lba_and_write_sector 	00480B D8                  B   163    				ret c	
                           B   164    				
00480C D5                  B   165    				push de							00480D CD 11 52 00         B   166    				call fs_clear_sector_buffer
004811 21 43 55 00         B   167    				ld hl,fs_sought_filename
004815 11 45 67 00         B   168    				ld de,sector_buffer
004819 010B0000            B   169    				ld bc,11
00481D EDB0                B   170    				ldir							00481F D1                  B   171    				pop de							004820 DD360B08            B   172    				ld (ix+0bh),8					004824 DD361821            B   173    				ld (ix+018h),021h				004828 2A 3D 55 00         B   174    				ld hl,(fs_sectors_per_fat)		00482C 19                  B   175    				add hl,de
00482D EB                  B   176    				ex de,hl
00482E CD 35 48 00         B   177    				call set_lba_and_write_sector	004832 D8                  B   178    				ret c	
                           B   179    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004833 AF                  B   180    				xor a							004834 C9                  B   181    				ret
                           B   182    	
                           B   183    
                           B   184    
004835                     B   185    set_lba_and_write_sector
                           B   186    
004835 DDE5                B   187    				push ix
004837 DD21 F1 61 00       B   188    				ld ix,sector_lba0				00483C DD1F00              B   189    				ld (ix),de						00483F DD360300            B   190    				ld (ix+3),0
004843 DDE1                B   191    				pop ix
004845 CD B4 54 00         B   192    				call fs_write_sector
004849 C9                  B   193    				ret
                           B   194    				
                           B   195    				
                           B   196    ;----------------------------------------------
                           B   197    
00484A                     B   198    fs_get_partition_info
                           B   199    
                           B   200    ; Set A to partition: $00 to $03
                           B   201    ; On return: If A = $00, xHL = Address of reque
                           B   202    ;            If A = $25, A partition table is n
                           B   203    ;            If A = $13, Disk format is bad 
                           B   204    ;            If carry flag set, there was a har
                           B   205    
                           B   206    
00484A 32 49 61 00         B   207    				ld (partition_temp),a
                           B   208    				
00484E 21000000            B   209    				ld hl,0							004852 22 F1 61 00         B   210    				ld (sector_lba0),hl
004856 7D                  B   211    				ld a,l
004857 32 F4 61 00         B   212    				ld (sector_lba3),a
00485B CD 8B 54 00         B   213    				call fs_read_sector
00485F D8                  B   214    				ret c
                           B   215    			
004860 CD 9B 48 00         B   216    				call fs_check_fat_sig			004864 20 42               B   217    				jr nz,formbad
                           B   218    			
004866 CD 8C 48 00         B   219    				call check_fat16_id				00486A 28 1C               B   220    				jr z,at_pbs						                           B   221    				
00486C 3A 07 69 00         B   222    				ld a,(sector_buffer+01c2h)		004870 E604                B   223    				and 4							004872 28 34               B   224    				jr z,formbad	
004874 11000000            B   225    				ld de,0
004878 3A 49 61 00         B   226    				ld a,(partition_temp)
00487C 5F                  B   227    				ld e,a
00487D 1610                B   228    				ld d,16
00487F ED5C                B   229    				mlt de
004881 21 03 69 00         B   230    				ld hl,sector_buffer+01beh
004885 19                  B   231    				add hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004886 AF                  B   232    				xor a
004887 C9                  B   233    				ret
                           B   234    					
004888 3ED3                B   235    at_pbs			ld a,0d3h						00488A B7                  B   236    				or a
00488B C9                  B   237    				ret
                           B   238    
                           B   239    
                           B   240    
00488C                     B   241    check_fat16_id
                           B   242    		
00488C 21 7B 67 00         B   243    				ld hl,sector_buffer+036h		004890 11 1B 5A 00         B   244    				ld de,fat16_txt			
004894 0605                B   245    				ld b,5
004896 CD 26 12 00         B   246    				call os_compare_strings
00489A C9                  B   247    				ret
                           B   248    				
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    
00489B                     B   252    fs_check_fat_sig
                           B   253    
00489B 2A 43 69 00         B   254    				ld hl,(sector_buffer+01feh)		00489F 1155AA00            B   255    				ld de,0aa55h
0048A3 AF                  B   256    				xor a
0048A4 52ED52              B   257    				sbc.s hl,de						0048A7 C9                  B   258    				ret
                           B   259    			
                           B   260    			
                           B   261    			
0048A8 3ECE                B   262    formbad			ld a,0ceh						0048AA B7                  B   263    				or a
0048AB C9                  B   264    				ret
                           B   265    
                           B   266    ;----------------------------------------------
                           B   267    
                           B   268    
0048AC                     B   269    fs_check_disk_format
                           B   270    
                           B   271    ; ensures disk is FAT16, sets up constants..
                           B   272    	
0048AC C5                  B   273    				push bc
0048AD D5                  B   274    				push de
0048AE E5                  B   275    				push hl
0048AF CD B7 48 00         B   276    				call go_checkf
0048B3 E1                  B   277    				pop hl
0048B4 D1                  B   278    				pop de
0048B5 C1                  B   279    				pop bc
0048B6 C9                  B   280    				ret
                           B   281    				
0048B7 CD 7E 49 00         B   282    go_checkf		call fs_read_partition_bootsect
0048BB D8                  B   283    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0048BC B7                  B   284    				or a
0048BD C0                  B   285    				ret nz
                           B   286    				
0048BE CD 9B 48 00         B   287    				call fs_check_fat_sig			0048C2 20 E4               B   288    				jr nz,formbad		
                           B   289    			
0048C4 CD 8C 48 00         B   290    				call check_fat16_id				0048C8 20 DE               B   291    				jr nz,formbad
                           B   292    			
0048CA DD21 45 67 00       B   293    				ld ix,sector_buffer
0048CF DD270B              B   294    				ld hl,(ix+0bh)					0048D2 11000200            B   295    				ld de,512						0048D6 AF                  B   296    				xor a
0048D7 52ED52              B   297    				sbc.s hl,de						0048DA 20 CC               B   298    				jr nz,formbad
                           B   299    			
0048DC DD7E0D              B   300    				ld a,(ix+0dh)					0048DF 32 2C 55 00         B   301    				ld (fs_cluster_size),a
0048E3 CB27                B   302    				sla a
0048E5 32 2E 55 00         B   303    				ld (fs_bytes_per_cluster+1),a
                           B   304    							
0048E9 21000000            B   305    				ld hl,0
0048ED DD6E0E              B   306    				ld l,(ix+0eh)					0048F0 DD660F              B   307    				ld h,(ix+0fh)
0048F3 22 30 55 00         B   308    				ld (fs_fat1_position),hl		0048F7 11000000            B   309    				ld de,0
0048FB DD5E16              B   310    				ld e,(ix+16h)					0048FE DD5617              B   311    				ld d,(ix+17h)
004901 ED53 3D 55 00       B   312    				ld (fs_sectors_per_fat),de
004906 19                  B   313    				add hl,de
004907 22 33 55 00         B   314    				ld (fs_fat2_position),hl		00490B 19                  B   315    				add hl,de
00490C 22 36 55 00         B   316    				ld (fs_root_dir_position),hl 	004910 EB                  B   317    				ex de,hl
004911 DD6E11              B   318    				ld l,(ix+11h)					004914 DD6612              B   319    				ld h,(ix+12h)					004917 7C                  B   320    				ld a,h
004918 B5                  B   321    				or l
004919 28 8D               B   322    				jr z,formbad					00491B 29                  B   323    				add hl,hl						00491C 29                  B   324    				add hl,hl						00491D 29                  B   325    				add hl,hl
00491E 29                  B   326    				add hl,hl
00491F EB                  B   327    				ex de,hl
004920 7A                  B   328    				ld a,d
004921 32 3C 55 00         B   329    				ld (fs_root_dir_sectors),a		004925 01000000            B   330    				ld bc,0
004929 4A                  B   331    				ld c,d
00492A 09                  B   332    				add hl,bc				
00492B 22 39 55 00         B   333    				ld (fs_data_area),hl			                           B   334    												00492F 21000000            B   335    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004933 01000000            B   336    				ld bc,0
004937 DD4E22              B   337    				ld c,(ix+022h)					00493A DD4623              B   338    				ld b,(ix+023h)
00493D DD6E13              B   339    				ld l,(ix+013h)					004940 DD6614              B   340    				ld h,(ix+014h)
004943 7C                  B   341    				ld a,h							004944 B5                  B   342    				or l
004945 20 06               B   343    				jr nz,got_tsfbs
004947 DD6E20              B   344    				ld l,(ix+020h)					00494A DD6621              B   345    				ld h,(ix+021h)
00494D ED5B 39 55 00       B   346    got_tsfbs 		ld de,(fs_data_area)
004952 AF                  B   347    				xor a							004953 52ED52              B   348    				sbc.s hl,de						004956 30 02               B   349    				jr nc,nomxcb
004958 520B                B   350    				dec.s bc
00495A 3A 2C 55 00         B   351    nomxcb			ld a,(fs_cluster_size)
00495E CB3F                B   352    fmaxcl			srl a
004960 28 08               B   353    				jr z,got_cmaxc					004962 CB39                B   354    				srl c				
004964 CB1C                B   355    				rr h
004966 CB1D                B   356    				rr l
004968 18 F4               B   357    				jr fmaxcl
00496A E5                  B   358    got_cmaxc		push hl							00496B 11F0FF00            B   359    				ld de,0fff0h
00496F AF                  B   360    				xor a
004970 52ED52              B   361    				sbc.s hl,de						004973 38 02               B   362    				jr c,cmaxok
004975 E1                  B   363    				pop hl
004976 D5                  B   364    				push de
004977 E1                  B   365    cmaxok			pop hl
004978 22 40 55 00         B   366    				ld (fs_max_data_clusters),hl
00497C AF                  B   367    				xor a
00497D C9                  B   368    				ret				
                           B   369    
                           B   370    ;----------------------------------------------
                           B   371    
00497E                     B   372    fs_read_partition_bootsector
                           B   373    
00497E CD DB 1A 00         B   374    				call fs_calc_volume_offset		004982 21 46 60 00         B   375    				ld hl,volume_mount_list
004986 19                  B   376    				add hl,de
004987 7E                  B   377    				ld a,(hl)
004988 B7                  B   378    				or a							004989 20 04               B   379    				jr nz,fs_volpre
00498B 3ECF                B   380    				ld a,0cfh						00498D B7                  B   381    				or a
00498E C9                  B   382    				ret
                           B   383    			
00498F 11080000            B   384    fs_volpre		ld de,8							004993 19                  B   385    				add hl,de
004994 11 F1 61 00         B   386    				ld de,sector_lba0
004998 01040000            B   387    				ld bc,4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00499C EDB0                B   388    				ldir
00499E CD 8B 54 00         B   389    				call fs_read_sector
0049A2 C9                  B   390    				ret	
                           B   391    
                           B   392    ;----------------------------------------------
                           B   393    
0049A3                     B   394    fs_calc_free_space
                           B   395    
                           B   396    ;returns free space in KB in HL:DE
                           B   397    
0049A3 ED5B 40 55 00       B   398    				ld de,(fs_max_data_clusters)
0049A8 13                  B   399    				inc de
0049A9 13                  B   400    				inc de							0049AA D5                  B   401    				push de
0049AB DDE1                B   402    				pop ix
                           B   403    			
0049AD AF                  B   404    				xor a
0049AE 32 85 55 00         B   405    cfs_lp2			ld (fs_working_sector),a
0049B2 2A 30 55 00         B   406    				ld hl,(fs_fat1_position)
0049B6 CD 61 54 00         B   407    				call set_abs_lba_and_read_secto
0049BA D8                  B   408    				ret c
                           B   409    				
0049BB 21 45 67 00         B   410    				ld hl,sector_buffer
0049BF 0600                B   411    				ld b,0
0049C1 AF                  B   412    cfs_lp1			xor a
0049C2 B6                  B   413    				or a,(hl)						0049C3 23                  B   414    				inc hl							0049C4 20 03               B   415    				jr nz,cfs_ciu					0049C6 B6                  B   416    				or a,(hl)
0049C7 28 02               B   417    				jr z,cfs_ddcc
0049C9 DD2B                B   418    cfs_ciu			dec ix							0049CB 23                  B   419    cfs_ddcc		inc hl
0049CC 1B                  B   420    				dec de
0049CD 7A                  B   421    				ld a,d
0049CE B3                  B   422    				or e
0049CF 28 09               B   423    				jr z,cfs_ok						0049D1 10 EE               B   424    				djnz cfs_lp1
0049D3 3A 85 55 00         B   425    				ld a,(fs_working_sector)
0049D7 3C                  B   426    				inc a
0049D8 18 D4               B   427    				jr cfs_lp2
                           B   428    				
0049DA 3A 2C 55 00         B   429    cfs_ok			ld a,(fs_cluster_size)			0049DE CB3F                B   430    cltoslp			srl a
0049E0 28 04               B   431    				jr z,powdone
0049E2 DD29                B   432    				add ix,ix
0049E4 18 F8               B   433    				jr cltoslp	
0049E6 FD21 0D 62 00       B   434    powdone			ld iy,xrr_temp
0049EB FD3E00              B   435    				ld (iy),ix						0049EE FDCB023E            B   436    				srl (iy+2)
0049F2 FDCB011E            B   437    				rr (iy+1)
0049F6 FDCB001E            B   438    				rr (iy+0)						0049FA FD1700              B   439    				ld de,(iy)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0049FD AF                  B   440    				xor a
0049FE C9                  B   441    				ret
                           B   442    
                           B   443    ;----------------------------------------------
                           B   444    
0049FF                     B   445    fs_change_dir_command
                           B   446    
                           B   447    ; INPUT: HL = directory name ascii (zero/space 
                           B   448    			
                           B   449    			
0049FF CD 23 52 00         B   450    				call fs_find_filename			004A03 D8                  B   451    				ret c							004A04 FEC2                B   452    				cp 0c2h							004A06 20 04               B   453    				jr nz,founddir
004A08 3ED1                B   454    				ld a,0d1h						004A0A B7                  B   455    				or a
004A0B C9                  B   456    				ret
                           B   457    
004A0C DDCB0B66            B   458    founddir		bit 4,(ix+0bh)
004A10 20 04               B   459    				jr nz,fs_isadir
004A12 3EC4                B   460    				ld a,0c4h
004A14 B7                  B   461    				or a
004A15 C9                  B   462    				ret
                           B   463    				
004A16 11000000            B   464    fs_isadir		ld de,0
004A1A DD5E1A              B   465    				ld e,(ix+01ah)
004A1D DD561B              B   466    				ld d,(ix+01bh)					004A20 CD AD 1A 00         B   467    				call fs_update_dir_cluster
004A24 AF                  B   468    				xor a
004A25 C9                  B   469    				ret
                           B   470    
                           B   471    
                           B   472    ;----------------------------------------------
                           B   473    	
                           B   474    	
004A26                     B   475    fs_goto_root_dir_command
                           B   476    
004A26 D5                  B   477    				push de
004A27 11000000            B   478    				ld de,0
004A2B CD AD 1A 00         B   479    				call fs_update_dir_cluster
004A2F D1                  B   480    				pop de
004A30 AF                  B   481    				xor a
004A31 C9                  B   482    				ret
                           B   483    
                           B   484    ;----------------------------------------------
                           B   485    	
                           B   486    	
004A32                     B   487    fs_parent_dir_command
                           B   488    
004A32 CD A1 1A 00         B   489    				call fs_get_dir_cluster
004A36 7A                  B   490    				ld a,d
004A37 B3                  B   491    				or e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004A38 20 03               B   492    				jr nz,pdnaroot
004A3A 3ECA                B   493    				ld a,0cah						004A3C C9                  B   494    				ret
004A3D 212E2E20            B   495    pdnaroot		ld hl,0202e2eh					004A41 22 43 55 00         B   496    				ld (fs_sought_filename),hl		004A45 21 46 55 00         B   497    				ld hl,fs_sought_filename+3		004A49 3E20                B   498    				ld a,32
004A4B 01080000            B   499    				ld bc,8
004A4F CD C3 15 00         B   500    				call os_bchl_memfill
004A53 18 AA               B   501    				jr fs_change_dir_command
                           B   502    				
                           B   503    		
                           B   504    ;----------------------------------------------
                           B   505    		
004A55                     B   506    fs_open_file_command
                           B   507    
                           B   508    ; INPUT: xHL = directory name ascii (zero/space
                           B   509    ; OUTPUT: C:xDE  = File length
                           B   510    ;            HL  = Start cluster of file
                           B   511    ;            Internal vars (file pointer reset 
                           B   512    
                           B   513    			
004A55 CD 23 52 00         B   514    				call fs_find_filename			004A59 D8                  B   515    				ret c							004A5A C0                  B   516    				ret nz							                           B   517    								
004A5B 3EC6                B   518    				ld a,0c6h						004A5D DDCB0B66            B   519    				bit 4,(ix+0bh)
004A61 C0                  B   520    				ret nz
                           B   521    
004A62 AF                  B   522    				xor a
004A63 32 99 55 00         B   523    				ld (fs_filepointer_valid),a		004A67 21000000            B   524    				ld hl,0
004A6B 22 67 55 00         B   525    				ld (fs_file_pointer),hl			004A6F 32 6A 55 00         B   526    				ld (fs_file_pointer+3),a		004A73 22 A5 55 00         B   527    				ld (fs_sector_last_read_lba0),h
004A77 32 A8 55 00         B   528    				ld (fs_sector_last_read_lba0+3)
                           B   529    
004A7B DD171C              B   530    				ld de,(ix+01ch)
004A7E D5                  B   531    				push de
004A7F E1                  B   532    				pop hl
004A80 DD4E1F              B   533    				ld c,(ix+01fh)					004A83 ED53 6B 55 00       B   534    				ld (fs_file_length),de			004A88 79                  B   535    				ld a,c
004A89 32 6E 55 00         B   536    				ld (fs_file_length+3),a			004A8D B7                  B   537    				or a							004A8E 28 04               B   538    				jr z,fs_dflsm					004A90 21FFFFFF            B   539    				ld hl,0ffffffh
004A94 22 73 55 00         B   540    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   541    				
004A98 21000000            B   542    				ld hl,0
004A9C DD6E1A              B   543    				ld l,(ix+01ah)		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004A9F DD661B              B   544    				ld h,(ix+01bh)
004AA2 22 76 55 00         B   545    				ld (fs_file_start_cluster),hl	                           B   546    				
004AA6 AF                  B   547    				xor a
004AA7 C9                  B   548    				ret
                           B   549    
                           B   550    
                           B   551    ;----------------------------------------------
                           B   552    
004AA8                     B   553    fs_read_data_command		
                           B   554    
                           B   555    ;*******************************************
                           B   556    ;*** 'fs_open_file' must be called first ***
                           B   557    ;*******************************************
                           B   558    		
004AA8 CD E7 4B 00         B   559    fs_load			call fs_test_transfer_length	004AAC 20 04               B   560    				jr nz,fs_btrok
                           B   561    
004AAE 3EC7                B   562    fs_fliz			ld a,0c7h						004AB0 B7                  B   563    				or a
004AB1 C9                  B   564    				ret
                           B   565    			 
004AB2 2A 7C 55 00         B   566    fs_btrok		ld hl,(fs_ez80_address)			004AB6 22 7F 55 00         B   567    				ld (fs_ez80_working_address),hl
                           B   568    			
004ABA 2A 67 55 00         B   569    				ld hl,(fs_file_pointer)			004ABE 3A 6A 55 00         B   570    				ld a,(fs_file_pointer+3)		004AC2 11010000            B   571    				ld de,1							004AC6 19                  B   572    				add hl,de
004AC7 CE00                B   573    				adc a,0
004AC9 4F                  B   574    				ld c,a
004ACA EB                  B   575    				ex de,hl						004ACB 2A 6B 55 00         B   576    				ld hl,(fs_file_length)			004ACF 3A 6E 55 00         B   577    				ld a,(fs_file_length+3)			004AD3 B7                  B   578    				or a							004AD4 ED52                B   579    				sbc hl,de						004AD6 99                  B   580    				sbc a,c
004AD7 DA 38 4B 00         B   581    				jp c,fs_rd_eof
                           B   582    					
004ADB 3A 99 55 00         B   583    fs_fpok			ld a,(fs_filepointer_valid)		004ADF B7                  B   584    				or a							004AE0 20 46               B   585    				jr nz,fs_get_sector_if_necessar
                           B   586    			
004AE2 3E01                B   587    seek_strt		ld a,1
004AE4 32 99 55 00         B   588    				ld (fs_filepointer_valid),a
004AE8 2A 76 55 00         B   589    				ld hl,(fs_file_start_cluster)	004AEC 22 79 55 00         B   590    				ld (fs_file_working_cluster),hl
                           B   591    			
004AF0 3A 6A 55 00         B   592    				ld a,(fs_file_pointer+3)		004AF4 2A 67 55 00         B   593    				ld hl,(fs_file_pointer)			004AF8 ED4B 2D 55 00       B   594    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004AFD AF                  B   595    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004AFE ED42                B   596    				sbc hl,bc						004B00 DE00                B   597    				sbc a,0
004B02 38 14               B   598    				jr c,fs_fpgbo
004B04 E5                  B   599    				push hl				
004B05 2A 79 55 00         B   600    				ld hl,(fs_file_working_cluster)
004B09 CD 33 53 00         B   601    				call get_fat_entry_for_cluster
004B0D 30 02               B   602    				jr nc,fs_ghok					004B0F E1                  B   603    				pop hl
004B10 C9                  B   604    				ret
004B11 22 79 55 00         B   605    fs_ghok			ld (fs_file_working_cluster),hl
004B15 E1                  B   606    				pop hl
004B16 18 E0               B   607    				jr fs_fpblp
                           B   608    			
004B18 09                  B   609    fs_fpgbo		add hl,bc						004B19 7C                  B   610    				ld a,h
004B1A CB3F                B   611    				srl a							004B1C 32 9A 55 00         B   612    				ld (fs_sector_pos_cnt),a
004B20 7C                  B   613    				ld a,h
004B21 E601                B   614    				and 01h
004B23 67                  B   615    				ld h,a
004B24 22 82 55 00         B   616    				ld (fs_in_sector_offset),hl		                           B   617    
                           B   618    				
                           B   619    
004B28                     B   620    fs_get_sector_if_necessary
                           B   621    				
004B28 CD E7 4B 00         B   622    				call fs_test_transfer_length	004B2C 28 64               B   623    				jr z,fs_read_done	
                           B   624    				
004B2E 2A 79 55 00         B   625    				ld hl,(fs_file_working_cluster)
004B32 CD DC 50 00         B   626    				call fs_compare_hl_fff8			004B36 38 04               B   627    				jr c,fs_rd_noteof		
004B38 3ECC                B   628    fs_rd_eof		ld a,0cch						004B3A B7                  B   629    				or a
004B3B C9                  B   630    				ret
                           B   631    				
004B3C 2A 79 55 00         B   632    fs_rd_noteof	ld hl,(fs_file_working_cluster)
004B40 3A 9A 55 00         B   633    				ld a,(fs_sector_pos_cnt)		004B44 CD 0A 54 00         B   634    				call cluster_and_offset_to_lba
004B48 CD D0 54 00         B   635    				call fs_is_same_sector_in_buffe
004B4C 28 05               B   636    				jr z,fs_same_sector
004B4E CD 8B 54 00         B   637    				call fs_read_sector				004B52 D8                  B   638    				ret c							                           B   639    			
004B53 21000200            B   640    fs_same_sector	ld hl,512
004B57 ED5B 82 55 00       B   641    				ld de,(fs_in_sector_offset)
004B5C AF                  B   642    				xor a
004B5D ED52                B   643    				sbc hl,de						004B5F E5                  B   644    				push hl
004B60 C1                  B   645    				pop bc							                           B   646    				
004B61 ED5B 73 55 00       B   647    				ld de,(fs_file_transfer_length)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004B66 AF                  B   648    				xor a
004B67 ED52                B   649    				sbc hl,de
004B69 38 02               B   650    				jr c,fs_got_bc					004B6B D5                  B   651    				push de							004B6C C1                  B   652    				pop bc
                           B   653    
004B6D 21 45 67 00         B   654    fs_got_bc		ld hl,sector_buffer
004B71 ED5B 82 55 00       B   655    				ld de,(fs_in_sector_offset)		004B76 19                  B   656    				add hl,de
004B77 ED5B 7F 55 00       B   657    				ld de,(fs_ez80_working_address)
004B7C C5                  B   658    				push bc
004B7D EDB0                B   659    				ldir							004B7F ED53 7F 55 00       B   660    				ld (fs_ez80_working_address),de
004B84 C1                  B   661    				pop bc
004B85 CD BB 4B 00         B   662    				call fs_adjust_fp_tl_so
004B89 2A 82 55 00         B   663    				ld hl,(fs_in_sector_offset)
004B8D 7C                  B   664    				ld a,h
004B8E FE02                B   665    				cp 02h							004B90 28 02               B   666    				jr z,fs_new_sec
004B92 AF                  B   667    fs_read_done	xor a
004B93 C9                  B   668    				ret
                           B   669    
004B94 21000000            B   670    fs_new_sec		ld hl,0
004B98 22 82 55 00         B   671    				ld (fs_in_sector_offset),hl		004B9C 21 9A 55 00         B   672    				ld hl,fs_sector_pos_cnt			004BA0 34                  B   673    				inc (hl)
004BA1 3A 2C 55 00         B   674    				ld a,(fs_cluster_size)
004BA5 BE                  B   675    				cp (hl)
004BA6 20 80               B   676    				jr nz,fs_get_sector_if_necessar
                           B   677    				
004BA8 3600                B   678    				ld (hl),0						004BAA 2A 79 55 00         B   679    				ld hl,(fs_file_working_cluster)
004BAE CD 33 53 00         B   680    				call get_fat_entry_for_cluster	004BB2 D8                  B   681    				ret c							004BB3 22 79 55 00         B   682    				ld (fs_file_working_cluster),hl
004BB7 C3 28 4B 00         B   683    				jr fs_get_sector_if_necessary
                           B   684    
                           B   685    ;----------------------------------------------
                           B   686    
004BBB                     B   687    fs_adjust_fp_tl_so
                           B   688    
                           B   689    ; advance / reduce by BC
                           B   690    
004BBB C5                  B   691    				push bc
004BBC E5                  B   692    				push hl
004BBD 2A 67 55 00         B   693    				ld hl,(fs_file_pointer)			004BC1 09                  B   694    				add hl,bc
004BC2 22 67 55 00         B   695    				ld (fs_file_pointer),hl			004BC6 3A 6A 55 00         B   696    				ld a,(fs_file_pointer+3)		004BCA CE00                B   697    				adc a,0
004BCC 32 67 55 00         B   698    				ld (fs_file_pointer),a		
                           B   699    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004BD0 2A 73 55 00         B   700    				ld hl,(fs_file_transfer_length)
004BD4 AF                  B   701    				xor a
004BD5 ED42                B   702    				sbc hl,bc
004BD7 22 73 55 00         B   703    				ld (fs_file_transfer_length),hl
                           B   704    				
004BDB 2A 82 55 00         B   705    				ld hl,(fs_in_sector_offset)
004BDF 09                  B   706    				add hl,bc
004BE0 22 82 55 00         B   707    				ld (fs_in_sector_offset),hl
                           B   708    				
004BE4 E1                  B   709    				pop hl
004BE5 C1                  B   710    				pop bc
004BE6 C9                  B   711    				ret
                           B   712    				
                           B   713    				
004BE7                     B   714    fs_test_transfer_length
                           B   715    				
004BE7 C5                  B   716    				push bc
004BE8 E5                  B   717    				push hl
004BE9 21000000            B   718    				ld hl,0
004BED ED4B 73 55 00       B   719    				ld bc,(fs_file_transfer_length)
004BF2 AF                  B   720    				xor a
004BF3 ED4A                B   721    				adc hl,bc
004BF5 E1                  B   722    				pop hl
004BF6 C1                  B   723    				pop bc
004BF7 C9                  B   724    				ret
                           B   725    				
                           B   726    ;----------------------------------------------
                           B   727    
004BF8                     B   728    fs_make_dir_command		
                           B   729    				
004BF8 CD 23 52 00         B   730    				call fs_find_filename			004BFC D8                  B   731    				ret c
004BFD FEC2                B   732    				cp 0c2h							004BFF 28 04               B   733    				jr z,mdirfnde
004C01 3EC9                B   734    				ld a,0c9h						004C03 B7                  B   735    				or a
004C04 C9                  B   736    				ret
                           B   737    			
004C05 CD E9 50 00         B   738    mdirfnde		call fs_find_free_cluster		004C09 D8                  B   739    				ret c							004C0A C0                  B   740    				ret nz							                           B   741    							
004C0B 2A 89 55 00         B   742    				ld hl,(fs_free_cluster)
004C0F 22 8C 55 00         B   743    				ld (fs_new_file_cluster),hl
                           B   744    			
004C13 CD 3A 51 00         B   745    				call fs_find_free_dir_entry		004C17 D8                  B   746    				ret c							004C18 C0                  B   747    				ret nz							                           B   748    			
004C19 DDE5                B   749    				push ix							004C1B D1                  B   750    				pop de
004C1C 21 43 55 00         B   751    				ld hl,fs_sought_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004C20 010B0000            B   752    				ld bc,11
004C24 EDB0                B   753    				ldir
004C26 AF                  B   754    				xor a							004C27 0615                B   755    				ld b,21
004C29 12                  B   756    clrdiren		ld (de),a
004C2A 13                  B   757    				inc de
004C2B 10 FC               B   758    				djnz clrdiren
004C2D DD360B10            B   759    				ld (ix+0bh),010h				004C31 DD361821            B   760    				ld (ix+018h),021h				004C35 ED5B 8C 55 00       B   761    				ld de,(fs_new_file_cluster)
004C3A DD731A              B   762    				ld (ix+01ah),e					004C3D DD721B              B   763    				ld (ix+01bh),d
004C40 CD B4 54 00         B   764    				call fs_write_sector			004C44 D8                  B   765    				ret c							                           B   766    				
004C45 CD 11 52 00         B   767    				call fs_clear_sector_buffer
004C49 DD21 45 67 00       B   768    				ld ix,sector_buffer				004C4E DD36002E            B   769    				ld (ix+00h),02eh				004C52 DD360120            B   770    				ld (ix+01h),020h
004C56 DD36202E            B   771    				ld (ix+020h),02eh
004C5A DD36212E            B   772    				ld (ix+021h),02eh
004C5E DD360B10            B   773    				ld (ix+0bh),010h
004C62 DD362B10            B   774    				ld (ix+02bh),010h
004C66 ED5B 8C 55 00       B   775    				ld de,(fs_new_file_cluster)		004C6B DD731A              B   776    				ld (ix+01ah),e
004C6E DD721B              B   777    				ld (ix+01bh),d
004C71 CD A1 1A 00         B   778    				call fs_get_dir_cluster			004C75 DD733A              B   779    				ld (ix+03ah),e
004C78 DD723B              B   780    				ld (ix+03bh),d
004C7B DD361821            B   781    				ld (ix+018h),021h				004C7F DD363821            B   782    				ld (ix+038h),021h				004C83 0609                B   783    				ld b,9
004C85 DD360220            B   784    mndelp			ld (ix+002h),32
004C89 DD362220            B   785    				ld (ix+022h),32
004C8D DD23                B   786    				inc ix
004C8F 10 F4               B   787    				djnz mndelp
004C91 2A 8C 55 00         B   788    				ld hl,(fs_new_file_cluster)		004C95 AF                  B   789    				xor a
004C96 CD 0A 54 00         B   790    				call cluster_and_offset_to_lba
004C9A CD B4 54 00         B   791    				call fs_write_sector
004C9E D8                  B   792    				ret c							                           B   793    			
004C9F CD 11 52 00         B   794    				call fs_clear_sector_buffer		004CA3 AF                  B   795    				xor a
004CA4 3C                  B   796    wroslp			inc a
004CA5 32 85 55 00         B   797    				ld (fs_working_sector),a
004CA9 21 2C 55 00         B   798    				ld hl,fs_cluster_size
004CAD BE                  B   799    				cp (hl)
004CAE 28 13               B   800    				jr z,allsclr
004CB0 2A 8C 55 00         B   801    				ld hl,(fs_new_file_cluster)
004CB4 CD 0A 54 00         B   802    				call cluster_and_offset_to_lba
004CB8 CD B4 54 00         B   803    				call fs_write_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004CBC D8                  B   804    				ret c
004CBD 3A 85 55 00         B   805    				ld a,(fs_working_sector)
004CC1 18 E1               B   806    				jr wroslp
                           B   807    			
004CC3 2A 8C 55 00         B   808    allsclr			ld hl,(fs_new_file_cluster)		004CC7 11FFFF00            B   809    				ld de,0ffffh
004CCB CD 5F 53 00         B   810    				call update_fat_entry_for_clust
004CCF AF                  B   811    				xor a
004CD0 C9                  B   812    				ret
                           B   813    
                           B   814    
                           B   815    
                           B   816    ;----------------------------------------------
                           B   817    
004CD1                     B   818    fs_delete_dir_command
                           B   819    
004CD1 CD 23 52 00         B   820    				call fs_find_filename			004CD5 D8                  B   821    				ret c
004CD6 28 04               B   822    				jr z,ddc_gotd
004CD8 3ED1                B   823    				ld a,0d1h						004CDA B7                  B   824    				or a
004CDB C9                  B   825    				ret
                           B   826    				
004CDC DDCB0B66            B   827    ddc_gotd		bit 4,(ix+0bh)					004CE0 20 04               B   828    				jr nz,okdeldir
004CE2 3EC4                B   829    				ld a,0c4h						004CE4 B7                  B   830    				or a
004CE5 C9                  B   831    				ret
                           B   832    				
004CE6 DD22 8F 55 00       B   833    okdeldir		ld (fs_fname_in_sector_addr),ix
004CEB CD 69 54 00         B   834    				call backup_sector_lba
004CEF DD6E1A              B   835    				ld l,(ix+01ah)					004CF2 DD661B              B   836    				ld h,(ix+01bh)
                           B   837    				
004CF5 3A 2C 55 00         B   838    fs_ddecl		ld a,(fs_cluster_size)
004CF9 47                  B   839    				ld b,a							004CFA 0E00                B   840    				ld c,0			
004CFC 79                  B   841    fs_cne2 		ld a,c
004CFD CD 0A 54 00         B   842    				call cluster_and_offset_to_lba
004D01 CD 8B 54 00         B   843    				call fs_read_sector
004D05 D8                  B   844    				ret c							                           B   845    				
004D06 C5                  B   846    				push bc
004D07 0610                B   847    				ld b,16							004D09 DD21 45 67 00       B   848    				ld ix,sector_buffer
004D0E 11200000            B   849    				ld de,020h
004D12 DD7E00              B   850    fs_cne1			ld a,(ix)
004D15 B7                  B   851    				or a
004D16 28 0D               B   852    				jr z,fs_chnde
004D18 FEE5                B   853    				cp 0e5h
004D1A 28 09               B   854    				jr z,fs_chnde
004D1C FE2E                B   855    				cp '.'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004D1E 28 05               B   856    				jr z,fs_chnde
004D20 C1                  B   857    				pop bc
004D21 3EC5                B   858    				ld a,0c5h						004D23 B7                  B   859    				or a
004D24 C9                  B   860    				ret
                           B   861    			
004D25 DD19                B   862    fs_chnde		add ix,de
004D27 10 E9               B   863    				djnz fs_cne1
004D29 C1                  B   864    				pop bc
004D2A 0C                  B   865    				inc c
004D2B 10 CF               B   866    				djnz fs_cne2
                           B   867    			
004D2D CD 33 53 00         B   868    				call get_fat_entry_for_cluster	004D31 D8                  B   869    				ret c
004D32 CD DC 50 00         B   870    				call fs_compare_hl_fff8
004D36 38 BD               B   871    				jr c,fs_ddecl
                           B   872    			
004D38 CD 7E 54 00         B   873    dir_empty		call restore_sector_lba			004D3C CD 8B 54 00         B   874    				call fs_read_sector
004D40 D8                  B   875    				ret c							004D41 2A 8F 55 00         B   876    				ld hl,(fs_fname_in_sector_addr)
004D45 36E5                B   877    fs_delco		ld (hl),0e5h					004D47 CD B4 54 00         B   878    				call fs_write_sector
004D4B D8                  B   879    				ret c
                           B   880    			
004D4C E5                  B   881    				push hl
004D4D DDE1                B   882    				pop ix
004D4F DD6E1A              B   883    				ld l,(ix+01ah)
004D52 DD661B              B   884    				ld h,(ix+01bh)
004D55 22 86 55 00         B   885    				ld (fs_working_cluster),hl
004D59 7C                  B   886    				ld a,h							004D5A B5                  B   887    				or l							004D5B C8                  B   888    				ret z							                           B   889    				
004D5C 2A 86 55 00         B   890    clrfatlp		ld hl,(fs_working_cluster)
004D60 CD 33 53 00         B   891    				call get_fat_entry_for_cluster
004D64 D8                  B   892    				ret c
004D65 EB                  B   893    				ex de,hl
                           B   894    				
004D66 2A 86 55 00         B   895    				ld hl,(fs_working_cluster)
004D6A ED53 86 55 00       B   896    				ld (fs_working_cluster),de
004D6F 11000000            B   897    				ld de,0
004D73 CD 5F 53 00         B   898    				call update_fat_entry_for_clust
004D77 D8                  B   899    				ret c
                           B   900    				
004D78 CD DC 50 00         B   901    				call fs_compare_hl_fff8			004D7C 38 DE               B   902    				jr c,clrfatlp
004D7E AF                  B   903    				xor a
004D7F C9                  B   904    				ret
                           B   905    
                           B   906    
                           B   907    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   908    
004D80                     B   909    fs_create_file_command
                           B   910    
                           B   911    ; Note: As per FAT standard, creating a file (0
                           B   912    ; only a directory entry (FAT is only updated w
                           B   913    
004D80 CD 23 52 00         B   914    				call fs_find_filename			004D84 D8                  B   915    				ret c
004D85 FEC2                B   916    				cp 0c2h							004D87 28 04               B   917    				jr z,mfilefnde
                           B   918    				
004D89 3EC9                B   919    				ld a,0c9h						004D8B B7                  B   920    				or a
004D8C C9                  B   921    				ret
                           B   922    			
004D8D CD 3A 51 00         B   923    mfilefnde		call fs_find_free_dir_entry		004D91 D8                  B   924    				ret c							004D92 C0                  B   925    				ret nz							                           B   926    			
004D93 DDE5                B   927    				push ix							004D95 D1                  B   928    				pop de
004D96 21 43 55 00         B   929    				ld hl,fs_sought_filename
004D9A 010B0000            B   930    				ld bc,11
004D9E EDB0                B   931    				ldir
004DA0 AF                  B   932    				xor a							004DA1 0615                B   933    				ld b,21
004DA3 12                  B   934    clrfnen			ld (de),a
004DA4 13                  B   935    				inc de
004DA5 10 FC               B   936    				djnz clrfnen
004DA7 DD361821            B   937    				ld (ix+018h),021h				004DAB CD B4 54 00         B   938    				call fs_write_sector			004DAF D8                  B   939    				ret c							004DB0 AF                  B   940    				xor a
004DB1 C9                  B   941    				ret								                           B   942    
                           B   943    
                           B   944    ;----------------------------------------------
                           B   945    
004DB2                     B   946    fs_write_bytes_to_file_command
                           B   947    	
                           B   948    ; *********************************************
                           B   949    ; * set up: fs_file_transfer_length (new data),
                           B   950    ; * before calling                             
                           B   951    ; *********************************************
                           B   952    
                           B   953    				
004DB2 ED5B 73 55 00       B   954    				ld de,(fs_file_transfer_length)
004DB7 21000000            B   955    				ld hl,0
004DBB AF                  B   956    				xor a
004DBC ED5A                B   957    				adc hl,de
004DBE CA AE 4A 00         B   958    				jp z,fs_fliz					                           B   959    				 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004DC2 CD 23 52 00         B   960    				call fs_find_filename			004DC6 D8                  B   961    				ret c							004DC7 FEC2                B   962    				cp 0c2h				
004DC9 20 02               B   963    				jr nz,fs_fetwt					004DCB B7                  B   964    				or a
004DCC C9                  B   965    				ret
004DCD DDCB0B66            B   966    fs_fetwt		bit 4,(ix+0bh)					004DD1 28 04               B   967    				jr z,fs_oknad					004DD3 3EC6                B   968    				ld a,0c6h						004DD5 B7                  B   969    				or a
004DD6 C9                  B   970    				ret
                           B   971    
004DD7 CD 69 54 00         B   972    fs_oknad		call backup_sector_lba
004DDB DD22 8F 55 00       B   973    				ld (fs_fname_in_sector_addr),ix
                           B   974    
004DE0 DD311C              B   975    				ld iy,(ix+01ch)					004DE3 DD7E1F              B   976    				ld a,(ix+01fh)
004DE6 FD22 6F 55 00       B   977    				ld (fs_existing_file_length),iy
004DEB 32 6F 55 00         B   978    				ld (fs_existing_file_length),a
004DEF ED5B 73 55 00       B   979    				ld de,(fs_file_transfer_length)
004DF4 FD19                B   980    				add iy,de						004DF6 CE00                B   981    				adc a,0
004DF8 DD3E1C              B   982    				ld (ix+01ch),iy					004DFB DD771F              B   983    				ld (ix+01fh),a					004DFE 30 04               B   984    				jr nc,nfsizeok
004E00 3EC7                B   985    				ld a,0c7h						004E02 B7                  B   986    				or a
004E03 C9                  B   987    				ret
                           B   988    
004E04 11000000            B   989    nfsizeok		ld de,0
004E08 DD5E1A              B   990    				ld e,(ix+01ah)					004E0B DD561B              B   991    				ld d,(ix+01bh)					004E0E ED53 79 55 00       B   992    				ld (fs_file_working_cluster),de
004E13 CD B4 54 00         B   993    				call fs_write_sector			004E17 D8                  B   994    				ret c
004E18 7A                  B   995    				ld a,d
004E19 B3                  B   996    				or e
004E1A 20 35               B   997    				jr nz,apenclch	
                           B   998    				
004E1C CD E9 50 00         B   999    				call fs_find_free_cluster		004E20 D8                  B  1000    				ret c
004E21 C0                  B  1001    				ret nz
004E22 2A 89 55 00         B  1002    				ld hl,(fs_free_cluster)
004E26 22 79 55 00         B  1003    				ld (fs_file_working_cluster),hl
004E2A 11FFFF00            B  1004    				ld de,0ffffh
004E2E CD 5F 53 00         B  1005    				call update_fat_entry_for_clust
004E32 D8                  B  1006    				ret c
                           B  1007    			
004E33 CD 7E 54 00         B  1008    				call restore_sector_lba			004E37 CD 8B 54 00         B  1009    				call fs_read_sector
004E3B D8                  B  1010    				ret c
004E3C DD2A 8F 55 00       B  1011    				ld ix,(fs_fname_in_sector_addr)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004E41 ED5B 79 55 00       B  1012    				ld de,(fs_file_working_cluster)
004E46 DD731A              B  1013    				ld (ix+01ah),e
004E49 DD721B              B  1014    				ld (ix+01bh),d
004E4C CD B4 54 00         B  1015    				call fs_write_sector			004E50 D8                  B  1016    				ret c
                           B  1017    				
                           B  1018    					
004E51 2A 79 55 00         B  1019    apenclch		ld hl,(fs_file_working_cluster)
004E55 CD 33 53 00         B  1020    				call get_fat_entry_for_cluster
004E59 D8                  B  1021    				ret c
004E5A CD DC 50 00         B  1022    				call fs_compare_hl_fff8
004E5E 30 1C               B  1023    				jr nc,atlclif
004E60 22 79 55 00         B  1024    				ld (fs_file_working_cluster),hl
004E64 01000000            B  1025    				ld bc,0
004E68 3A 2C 55 00         B  1026    				ld a,(fs_cluster_size)
004E6C CB27                B  1027    				sla a
004E6E 47                  B  1028    				ld b,a
004E6F 2A 6F 55 00         B  1029    				ld hl,(fs_existing_file_length)
004E73 AF                  B  1030    				xor a							004E74 ED42                B  1031    				sbc hl,bc						004E76 22 6F 55 00         B  1032    				ld (fs_existing_file_length),hl
004E7A 18 D5               B  1033    				jr apenclch
                           B  1034    				
004E7C ED4B 6F 55 00       B  1035    atlclif			ld bc,(fs_existing_file_length)
004E81 CB38                B  1036    				srl b				
004E83 48                  B  1037    				ld c,b							004E84 3A 2C 55 00         B  1038    				ld a,(fs_cluster_size)
004E88 91                  B  1039    				sub c
004E89 47                  B  1040    				ld b,a							004E8A 28 79               B  1041    				jr z,fs_sfncl					                           B  1042    				
004E8C 2A 79 55 00         B  1043    				ld hl,(fs_file_working_cluster)
004E90 79                  B  1044    				ld a,c
004E91 CD 0A 54 00         B  1045    				call cluster_and_offset_to_lba
004E95 CD 8B 54 00         B  1046    				call fs_read_sector
004E99 D8                  B  1047    				ret c
004E9A C5                  B  1048    				push bc							                           B  1049    				
004E9B 11000000            B  1050    				ld de,0
004E9F 3A 6F 55 00         B  1051    				ld a,(fs_existing_file_length)
004EA3 5F                  B  1052    				ld e,a
004EA4 3A 70 55 00         B  1053    				ld a,(fs_existing_file_length+1
004EA8 E601                B  1054    				and 1
004EAA 57                  B  1055    				ld d,a							004EAB 21000200            B  1056    				ld hl,512	
004EAF AF                  B  1057    				xor a
004EB0 ED52                B  1058    				sbc hl,de						004EB2 E5                  B  1059    				push hl
004EB3 C1                  B  1060    				pop bc							004EB4 21 45 67 00         B  1061    				ld hl,sector_buffer
004EB8 19                  B  1062    				add hl,de
004EB9 EB                  B  1063    				ex de,hl						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004EBA 7C                  B  1064    				ld a,h			
004EBB B5                  B  1065    				or l
004EBC 20 04               B  1066    				jr nz,fs_dcsb					004EBE CD 11 52 00         B  1067    fs_dbfil		call fs_clear_sector_buffer
004EC2 2A 7C 55 00         B  1068    fs_dcsb			ld hl,(fs_ez80_address)			004EC6 EDA0                B  1069    fs_cbsb			ldi								004EC8 7C                  B  1070    				ld a,h							004EC9 B5                  B  1071    				or l
004ECA 20 0D               B  1072    				jr nz,fs_srcadok
004ECC 22 7C 55 00         B  1073    				ld (fs_ez80_address),hl
004ED0 3A 7E 55 00         B  1074    				ld a,(fs_ez80_address+2)
004ED4 B7                  B  1075    				or a
004ED5 CA 44 4F 00         B  1076    				jp z,fs_mem_error
004ED9 CD 93 53 00         B  1077    fs_srcadok		call transfer_length_countdown
004EDD 28 54               B  1078    				jr z,fs_lbof					004EDF 78                  B  1079    fs_sadok		ld a,b							004EE0 B1                  B  1080    				or c
004EE1 20 E3               B  1081    				jr nz,fs_cbsb					                           B  1082    
004EE3 22 7C 55 00         B  1083    				ld (fs_ez80_address),hl			004EE7 C1                  B  1084    				pop bc							004EE8 79                  B  1085    				ld a,c
004EE9 2A 79 55 00         B  1086    				ld hl,(fs_file_working_cluster)
004EED CD 0A 54 00         B  1087    				call cluster_and_offset_to_lba
004EF1 CD B4 54 00         B  1088    				call fs_write_sector			004EF5 D8                  B  1089    				ret c							004EF6 0C                  B  1090    				inc c							004EF7 05                  B  1091    				dec b
004EF8 28 0B               B  1092    				jr z,fs_sfncl					004EFA C5                  B  1093    fs_sfns			push bc				
004EFB 01000200            B  1094    				ld bc,512						004EFF 11 45 67 00         B  1095    				ld de,sector_buffer				004F03 18 B9               B  1096    				jr fs_dbfil						                           B  1097    				
004F05 CD E9 50 00         B  1098    fs_sfncl		call fs_find_free_cluster		004F09 D8                  B  1099    				ret c							004F0A C0                  B  1100    				ret nz							004F0B 2A 79 55 00         B  1101    				ld hl,(fs_file_working_cluster)
004F0F ED5B 89 55 00       B  1102    				ld de,(fs_free_cluster)
004F14 CD 5F 53 00         B  1103    				call update_fat_entry_for_clust
004F18 D8                  B  1104    				ret c
004F19 2A 89 55 00         B  1105    				ld hl,(fs_free_cluster)
004F1D 22 79 55 00         B  1106    				ld (fs_file_working_cluster),hl
004F21 11FFFF00            B  1107    				ld de,0ffffh
004F25 CD 5F 53 00         B  1108    				call update_fat_entry_for_clust
004F29 D8                  B  1109    				ret c
004F2A 3A 2C 55 00         B  1110    				ld a,(fs_cluster_size)
004F2E 47                  B  1111    				ld b,a							004F2F 0E00                B  1112    				ld c,0							004F31 18 C7               B  1113    				jr fs_sfns						                           B  1114    				
004F33 C1                  B  1115    fs_lbof			pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F34 79                  B  1116    				ld a,c							004F35 2A 79 55 00         B  1117    				ld hl,(fs_file_working_cluster)
004F39 CD 0A 54 00         B  1118    				call cluster_and_offset_to_lba
004F3D CD B4 54 00         B  1119    				call fs_write_sector	
004F41 D8                  B  1120    				ret c
004F42 AF                  B  1121    				xor a							004F43 C9                  B  1122    				ret
                           B  1123    
                           B  1124    
004F44 3EC8                B  1125    fs_mem_error	ld a,0c8h						004F46 C1                  B  1126    fs_flerr		pop bc
004F47 B7                  B  1127    				or a							004F48 C9                  B  1128    				ret			
                           B  1129    
                           B  1130    ;----------------------------------------------
                           B  1131    
004F49                     B  1132    fs_erase_file_command
                           B  1133    
                           B  1134    
004F49 CD 23 52 00         B  1135    				call fs_find_filename			004F4D D8                  B  1136    				ret c
004F4E C0                  B  1137    				ret nz
                           B  1138    				
004F4F DDCB0B66            B  1139    				bit 4,(ix+0bh)					004F53 28 04               B  1140    				jr z,okdelf
004F55 3EC6                B  1141    				ld a,0c6h						004F57 B7                  B  1142    				or a
004F58 C9                  B  1143    				ret
                           B  1144    				
004F59 DDE5                B  1145    okdelf			push ix
004F5B E1                  B  1146    				pop hl
004F5C C3 45 4D 00         B  1147    				jp fs_delco						                           B  1148    					
                           B  1149    
                           B  1150    ;----------------------------------------------
                           B  1151    
                           B  1152    
004F60                     B  1153    fs_rename_command
                           B  1154    
004F60 CD 23 52 00         B  1155    				call fs_find_filename			004F64 D8                  B  1156    				ret c							004F65 FEC2                B  1157    				cp 0c2h							004F67 28 04               B  1158    				jr z,fs_nfnok					004F69 3EC9                B  1159    				ld a,0c9h						004F6B B7                  B  1160    				or a
004F6C C9                  B  1161    				ret
                           B  1162    			
004F6D 21 43 55 00         B  1163    fs_nfnok		ld hl,fs_sought_filename		004F71 11 5B 55 00         B  1164    				ld de,fs_filename_buffer
004F75 010B0000            B  1165    				ld bc,11
004F79 EDB0                B  1166    				ldir
004F7B 21 4F 55 00         B  1167    				ld hl,fs_alt_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F7F 11 43 55 00         B  1168    				ld de,fs_sought_filename
004F83 010B0000            B  1169    				ld bc,11
004F87 EDB0                B  1170    				ldir
004F89 CD 23 52 00         B  1171    				call fs_find_filename			004F8D D8                  B  1172    				ret c
004F8E FEC2                B  1173    				cp 0c2h
004F90 C8                  B  1174    				ret z							                           B  1175    				
004F91 DDE5                B  1176    				push ix
004F93 D1                  B  1177    				pop de
004F94 21 5B 55 00         B  1178    				ld hl,fs_filename_buffer	 	004F98 010B0000            B  1179    				ld bc,11
004F9C EDB0                B  1180    				ldir							004F9E CD B4 54 00         B  1181    				call fs_write_sector			                           B  1182    				
004FA2 AF                  B  1183    fs_rndone		xor a
004FA3 C9                  B  1184    				ret
                           B  1185    				
                           B  1186    
                           B  1187    ;----------------------------------------------
                           B  1188    
                           B  1189    
004FA4                     B  1190    fs_goto_first_dir_entry
                           B  1191    
004FA4 CD A1 1A 00         B  1192    				call fs_get_dir_cluster
004FA8 ED53 92 55 00       B  1193    				ld (fs_dir_entry_cluster),de
004FAD AF                  B  1194    				xor a
004FAE 32 98 55 00         B  1195    				ld (fs_dir_entry_sector),a		004FB2 11000000            B  1196    				ld de,0
004FB6 ED53 95 55 00       B  1197    				ld (fs_dir_entry_line_offset),d
                           B  1198    				
                           B  1199    
                           B  1200    
004FBB                     B  1201    fs_get_dir_entry
                           B  1202    
                           B  1203    ; No input parameters.
                           B  1204    ;
                           B  1205    ; Returns HL    = Location of null terminated f
                           B  1206    ;         IX:IY = Length of file (if applicable
                           B  1207    ;         B     = File flag (1 = directory, 0 =
                           B  1208    ;         A     = Error code
                           B  1209    ;         Carry = Set if hardware error encount
                           B  1210    
                           B  1211    
004FBB 3A 98 55 00         B  1212    				ld a,(fs_dir_entry_sector)		004FBF 4F                  B  1213    				ld c,a
004FC0 2A 92 55 00         B  1214    				ld hl,(fs_dir_entry_cluster)	004FC4 CD 0A 54 00         B  1215    				call cluster_and_offset_to_lba
                           B  1216    			
004FC8 7C                  B  1217    				ld a,h							004FC9 B5                  B  1218    				or l							004FCA 20 09               B  1219    				jr nz,nr_read					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004FCC 2A 36 55 00         B  1220    				ld hl,(fs_root_dir_position)	004FD0 79                  B  1221    				ld a,c
004FD1 CD 50 54 00         B  1222    				call set_absolute_lba
                           B  1223    				
004FD5 CD 8B 54 00         B  1224    nr_read			call fs_read_sector				004FD9 D8                  B  1225    				ret c							                           B  1226    				
004FDA ED5B 95 55 00       B  1227    				ld de,(fs_dir_entry_line_offset
004FDF DD21 45 67 00       B  1228    dscan_int_loop	ld ix,sector_buffer
004FE4 DD19                B  1229    				add ix,de
004FE6 DD7E00              B  1230    ds_int_loop		ld a,(ix)
004FE9 B7                  B  1231    				or a							004FEA 28 0E               B  1232    				jr z,fs_dir_entry_free		
004FEC FEE5                B  1233    				cp 0e5h							004FEE 28 0A               B  1234    				jr z,fs_dir_entry_free	
004FF0 FE05                B  1235    				cp 05h							004FF2 28 06               B  1236    				jr z,fs_dir_entry_free	
004FF4 DDCB0B5E            B  1237    				bit 3,(ix+0bh)					004FF8 28 0D               B  1238    				jr z,fs_dir_entry_in_use		                           B  1239    
004FFA                     B  1240    fs_dir_entry_free
                           B  1241    
004FFA EB                  B  1242    				ex de,hl
004FFB 11200000            B  1243    				ld de,32
004FFF 19                  B  1244    				add hl,de
005000 EB                  B  1245    				ex de,hl
005001 CB4A                B  1246    				bit 1,d
005003 28 DA               B  1247    				jr z,dscan_int_loop
005005 18 54               B  1248    				jr dscan_new_sect
                           B  1249    
005007                     B  1250    fs_dir_entry_in_use
                           B  1251    				
005007 ED53 95 55 00       B  1252    				ld (fs_dir_entry_line_offset),d
00500C DDE5                B  1253    				push ix
00500E E1                  B  1254    				pop hl
00500F CD 6C 10 00         B  1255    				call os_clear_output_line
005013 0608                B  1256    				ld b,8							005015 11 65 62 00         B  1257    				ld de,output_line
005019 7E                  B  1258    dcopyn			ld a,(hl)
00501A FE20                B  1259    				cp ' '							00501C 28 02               B  1260    				jr z,digchar
00501E 12                  B  1261    				ld (de),a
00501F 13                  B  1262    				inc de
005020 23                  B  1263    digchar			inc hl
005021 10 F6               B  1264    				djnz dcopyn
005023 7E                  B  1265    				ld a,(hl)						005024 FE20                B  1266    				cp ' '							005026 28 0A               B  1267    				jr z,dirnoex
005028 3E2E                B  1268    				ld a,'.'						00502A 12                  B  1269    				ld (de),a
00502B 13                  B  1270    				inc de	
00502C 01030000            B  1271    				ld bc,3							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005030 EDB0                B  1272    				ldir
005032 AF                  B  1273    dirnoex			xor a 
005033 12                  B  1274    				ld (de),a						                           B  1275    				
005034 47                  B  1276    				ld b,a
005035 DDCB0B66            B  1277    				bit 4,(ix+0bh)					005039 28 01               B  1278    				jr z,fs_fniaf		
00503B 04                  B  1279    				inc b							00503C DD171C              B  1280    fs_fniaf		ld de,(ix+01ch)					00503F DD4E1F              B  1281    				ld c,(ix+01fh)
005042 21 65 62 00         B  1282    				ld hl,output_line				005046 AF                  B  1283    				xor a
005047 C9                  B  1284    				ret
                           B  1285    
                           B  1286    
                           B  1287    
                           B  1288    
005048                     B  1289    fs_goto_next_dir_entry
                           B  1290    
005048 11200000            B  1291    				ld de,32
00504C 2A 95 55 00         B  1292    				ld hl,(fs_dir_entry_line_offset
005050 19                  B  1293    				add hl,de
005051 22 95 55 00         B  1294    				ld (fs_dir_entry_line_offset),h
005055 CB4C                B  1295    				bit 1,h
005057 CA BB 4F 00         B  1296    				jp z,fs_get_dir_entry
                           B  1297    
00505B 21000000            B  1298    dscan_new_sect	ld hl,0				
00505F 22 95 55 00         B  1299    				ld (fs_dir_entry_line_offset),h
                           B  1300    			
005063 21 98 55 00         B  1301    				ld hl,fs_dir_entry_sector
005067 34                  B  1302    				inc (hl)						                           B  1303    			
005068 ED5B 92 55 00       B  1304    				ld de,(fs_dir_entry_cluster)
00506D 7A                  B  1305    				ld a,d
00506E B3                  B  1306    				or e							00506F 20 0B               B  1307    				jr nz,nonroot2
005071 3A 3C 55 00         B  1308    				ld a,(fs_root_dir_sectors)
005075 BE                  B  1309    				cp (hl)
005076 28 23               B  1310    				jr z,endofdir			
005078 C3 BB 4F 00         B  1311    				jp fs_get_dir_entry
                           B  1312    												00507C 3A 2C 55 00         B  1313    nonroot2		ld a,(fs_cluster_size)		
005080 BE                  B  1314    				cp (hl)							005081 C2 BB 4F 00         B  1315    				jp nz,fs_get_dir_entry
005085 3600                B  1316    				ld (hl),0						005087 2A 92 55 00         B  1317    				ld hl,(fs_dir_entry_cluster)
00508B CD 33 53 00         B  1318    				call get_fat_entry_for_cluster
00508F 22 92 55 00         B  1319    				ld (fs_dir_entry_cluster),hl
005093 CD DC 50 00         B  1320    				call fs_compare_hl_fff8			005097 DA BB 4F 00         B  1321    				jp c,fs_get_dir_entry
                           B  1322    	
00509B 3ED2                B  1323    endofdir		ld a,0d2h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00509D B7                  B  1324    				or a							00509E C9                  B  1325    				ret	
                           B  1326    				
                           B  1327    ;----------------------------------------------
                           B  1328    
00509F                     B  1329    fs_get_volume_label
                           B  1330    
                           B  1331    
                           B  1332    ; On return HL = volume label
                           B  1333    
                           B  1334    
00509F 2A 36 55 00         B  1335    				ld hl,(fs_root_dir_position)
0050A3 0E00                B  1336    				ld c,0
0050A5 AF                  B  1337    gvl_nrsec		xor a
0050A6 CD 61 54 00         B  1338    				call set_abs_lba_and_read_secto
0050AA D8                  B  1339    				ret c
0050AB 0610                B  1340    				ld b,16							0050AD DD21 45 67 00       B  1341    				ld ix,sector_buffer
0050B2 DD7E0B              B  1342    find_vl			ld a,(ix+0bh)
0050B5 FE08                B  1343    				cp 08h
0050B7 28 1A               B  1344    				jr z,got_label
0050B9 ED3220              B  1345    				lea ix,ix+32					0050BC 10 F4               B  1346    				djnz find_vl					0050BE 23                  B  1347    				inc hl
0050BF 0C                  B  1348    				inc c
0050C0 3A 3C 55 00         B  1349    				ld a,(fs_root_dir_sectors)		0050C4 B9                  B  1350    				cp c							0050C5 20 DE               B  1351    				jr nz,gvl_nrsec
                           B  1352    			
0050C7 CD 7E 49 00         B  1353    				call fs_read_partition_bootsect
0050CB D8                  B  1354    				ret c
0050CC B7                  B  1355    				or a
0050CD C0                  B  1356    				ret nz
0050CE DD21 70 67 00       B  1357    				ld ix,sector_buffer+02bh
                           B  1358    				
0050D3 DD360B00            B  1359    got_label		ld (ix+0bh),0					0050D7 DDE5                B  1360    				push ix
0050D9 E1                  B  1361    				pop hl
0050DA AF                  B  1362    				xor a
0050DB C9                  B  1363    				ret
                           B  1364    				
                           B  1365    				
                           B  1366    ;----------------------------------------------
                           B  1367    ; Internal subroutines
                           B  1368    ;----------------------------------------------
                           B  1369    
0050DC                     B  1370    fs_compare_hl_fff8
                           B  1371    
                           B  1372    ;INPUT HL = value to compare with fff8
                           B  1373    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1374    	
                           B  1375    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0050DC E5                  B  1376    				push hl
0050DD D5                  B  1377    				push de
0050DE 11F8FF00            B  1378    				ld de,0fff8h			
0050E2 B7                  B  1379    				or a							0050E3 52ED52              B  1380    				sbc.s hl,de						0050E6 D1                  B  1381    				pop de
0050E7 E1                  B  1382    				pop hl
0050E8 C9                  B  1383    				ret
                           B  1384    
                           B  1385    ;----------------------------------------------
                           B  1386    
                           B  1387    
0050E9                     B  1388    fs_find_free_cluster
                           B  1389    	
0050E9 DD210000 00         B  1390    				ld ix,0							0050EE ED5B 30 55 00       B  1391    				ld de,(fs_fat1_position)		0050F3 AF                  B  1392    				xor a				
0050F4 32 85 55 00         B  1393    fs_ffcl2		ld (fs_working_sector),a	
0050F8 D5                  B  1394    				push de
0050F9 E1                  B  1395    				pop hl
0050FA 3A 85 55 00         B  1396    				ld a,(fs_working_sector)
0050FE CD 61 54 00         B  1397    				call set_abs_lba_and_read_secto
005102 D8                  B  1398    				ret c
005103 21 45 67 00         B  1399    				ld hl,sector_buffer
005107 0600                B  1400    				ld b,0
005109 7E                  B  1401    fs_ffcl1		ld a,(hl)						00510A 23                  B  1402    				inc hl
00510B B6                  B  1403    				or (hl)
00510C 23                  B  1404    				inc hl
00510D 28 14               B  1405    				jr z,fs_gotfc
00510F DD23                B  1406    				inc ix
005111 10 F6               B  1407    				djnz fs_ffcl1
                           B  1408    				
005113 2A 3D 55 00         B  1409    				ld hl,(fs_sectors_per_fat)
005117 3A 85 55 00         B  1410    				ld a,(fs_working_sector)		00511B 3C                  B  1411    				inc a				
00511C BD                  B  1412    				cp l		
00511D 20 D5               B  1413    				jr nz,fs_ffcl2					00511F 3EC1                B  1414    fs_dfull		ld a,c1h						005121 B7                  B  1415    				or a							005122 C9                  B  1416    				ret
                           B  1417    			
005123 DDE5                B  1418    fs_gotfc		push ix							005125 E1                  B  1419    				pop hl							005126 2B                  B  1420    				dec hl							005127 2B                  B  1421    				dec hl							005128 ED5B 40 55 00       B  1422    				ld de,(fs_max_data_clusters)
00512D AF                  B  1423    				xor a
00512E 52ED52              B  1424    				sbc.s hl,de						005131 30 EC               B  1425    				jr nc,fs_dfull
                           B  1426    			
005133 DD22 89 55 00       B  1427    				ld (fs_free_cluster),ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005138 AF                  B  1428    				xor a
005139 C9                  B  1429    				ret
                           B  1430    	
                           B  1431    	
                           B  1432    ;----------------------------------------------
                           B  1433    	
                           B  1434    	
00513A                     B  1435    fs_find_free_dir_entry
                           B  1436    
                           B  1437    
                           B  1438    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1439    
                           B  1440    			
00513A CD A1 1A 00         B  1441    				call fs_get_dir_cluster			00513E EB                  B  1442    				ex de,hl
00513F 22 79 55 00         B  1443    ffenxtclu		ld (fs_file_working_cluster),hl
005143 AF                  B  1444    				xor a
005144 32 85 55 00         B  1445    				ld (fs_working_sector),a
                           B  1446    			
005148 2A 36 55 00         B  1447    ffenxtsec		ld hl,(fs_root_dir_position)	00514C 3A 85 55 00         B  1448    				ld a,(fs_working_sector)
005150 CD 50 54 00         B  1449    				call set_absolute_lba
                           B  1450    				
005154 CD A1 1A 00         B  1451    				call fs_get_dir_cluster			005158 7A                  B  1452    				ld a,d
005159 B3                  B  1453    				or e
00515A 28 0C               B  1454    				jr z,at_rootd
00515C 2A 79 55 00         B  1455    				ld hl,(fs_file_working_cluster)
005160 3A 85 55 00         B  1456    				ld a,(fs_working_sector)
005164 CD 0A 54 00         B  1457    				call cluster_and_offset_to_lba
                           B  1458    				
005168 CD 8B 54 00         B  1459    at_rootd		call fs_read_sector
00516C D8                  B  1460    				ret c
00516D 0610                B  1461    				ld b,16							00516F 11200000            B  1462    				ld de,32
005173 DD21 45 67 00       B  1463    				ld ix,sector_buffer
005178 DD7E00              B  1464    scdirfe			ld a,(ix)						00517B B7                  B  1465    				or a
00517C 28 65               B  1466    				jr z,got_fde
00517E FEE5                B  1467    				cp 0e5h
005180 28 61               B  1468    				jr z,got_fde
005182 DD19                B  1469    				add ix,de						005184 10 F2               B  1470    				djnz scdirfe					                           B  1471    				
005186 21 85 55 00         B  1472    				ld hl,fs_working_sector			00518A 34                  B  1473    				inc (hl)
                           B  1474    				
00518B CD A1 1A 00         B  1475    				call fs_get_dir_cluster			00518F 7A                  B  1476    				ld a,d
005190 B3                  B  1477    				or e
005191 20 0B               B  1478    				jr nz,ffenotroo
005193 3A 3C 55 00         B  1479    				ld a,(fs_root_dir_sectors)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005197 BE                  B  1480    				cp (hl)							005198 20 AE               B  1481    				jr nz,ffenxtsec
00519A 3EC3                B  1482    fenotfnd		ld a,0c3h						00519C B7                  B  1483    				or a
00519D C9                  B  1484    				ret
                           B  1485    			
00519E 3A 2C 55 00         B  1486    ffenotroo		ld a,(fs_cluster_size)			0051A2 BE                  B  1487    				cp (hl)
0051A3 20 A3               B  1488    				jr nz,ffenxtsec
0051A5 2A 79 55 00         B  1489    				ld hl,(fs_file_working_cluster)
0051A9 CD 33 53 00         B  1490    				call get_fat_entry_for_cluster	0051AD D8                  B  1491    				ret c
0051AE CD DC 50 00         B  1492    				call fs_compare_hl_fff8			0051B2 38 8B               B  1493    				jr c,ffenxtclu
                           B  1494    			
0051B4 CD E9 50 00         B  1495    				call fs_find_free_cluster		0051B8 D8                  B  1496    				ret c							0051B9 C0                  B  1497    				ret nz							0051BA ED5B 89 55 00       B  1498    				ld de,(fs_free_cluster)
0051BF 2A 79 55 00         B  1499    				ld hl,(fs_file_working_cluster)
0051C3 CD 5F 53 00         B  1500    				call update_fat_entry_for_clust
0051C7 D8                  B  1501    				ret c
0051C8 EB                  B  1502    				ex de,hl						0051C9 11FFFF00            B  1503    				ld de,0ffffh
0051CD CD 5F 53 00         B  1504    				call update_fat_entry_for_clust
0051D1 D8                  B  1505    				ret c
                           B  1506    			
0051D2 2A 89 55 00         B  1507    				ld hl,(fs_free_cluster)			0051D6 CD E5 51 00         B  1508    				call fs_clear_cluster			0051DA D8                  B  1509    				ret c
0051DB 2A 89 55 00         B  1510    				ld hl,(fs_free_cluster)			0051DF C3 3F 51 00         B  1511    				jp ffenxtclu					                           B  1512    			
0051E3 AF                  B  1513    got_fde			xor a
0051E4 C9                  B  1514    				ret
                           B  1515    					
                           B  1516    
                           B  1517    ;----------------------------------------------
                           B  1518    
0051E5                     B  1519    fs_clear_cluster
                           B  1520    
                           B  1521    ;INPUT HL = cluster to clear
                           B  1522    
0051E5 22 86 55 00         B  1523    				ld (fs_working_cluster),hl
                           B  1524    			
0051E9 CD 11 52 00         B  1525    				call fs_clear_sector_buffer
                           B  1526    					
0051ED AF                  B  1527    				xor a				
0051EE 32 85 55 00         B  1528    				ld (fs_working_sector),a		0051F2 3A 85 55 00         B  1529    wipeclulp		ld a,(fs_working_sector)		0051F6 2A 86 55 00         B  1530    				ld hl,(fs_working_cluster)		0051FA CD 0A 54 00         B  1531    				call cluster_and_offset_to_lba	Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0051FE CD B4 54 00         B  1532    				call fs_write_sector
005202 D8                  B  1533    				ret c
005203 21 85 55 00         B  1534    				ld hl,fs_working_sector
005207 34                  B  1535    				inc (hl)
005208 3A 2C 55 00         B  1536    				ld a,(fs_cluster_size)
00520C BE                  B  1537    				cp (hl)
00520D 20 E3               B  1538    				jr nz,wipeclulp
00520F AF                  B  1539    				xor a
005210 C9                  B  1540    				ret
                           B  1541    			
                           B  1542    			
005211                     B  1543    fs_clear_sector_buffer
                           B  1544    			
005211 E5                  B  1545    				push hl
005212 C5                  B  1546    				push bc
005213 21 45 67 00         B  1547    				ld hl,sector_buffer			
005217 01000200            B  1548    				ld bc,512				
00521B AF                  B  1549    				xor a				
00521C CD C3 15 00         B  1550    				call os_bchl_memfill	
005220 C1                  B  1551    				pop bc
005221 E1                  B  1552    				pop hl
005222 C9                  B  1553    				ret
                           B  1554    				
                           B  1555    
                           B  1556    	
                           B  1557    ;----------------------------------------------
                           B  1558    	
005223                     B  1559    fs_find_filename
                           B  1560    
005223 AF                  B  1561    				xor a
                           B  1562    
005224                     B  1563    fs_search	
                           B  1564    				
005224 32 A0 55 00         B  1565    				ld (fs_search_type),a
                           B  1566    			
                           B  1567    ; OUTPUT IX start of 32 byte dir entry
                           B  1568    			
005228 CD A1 1A 00         B  1569    				call fs_get_dir_cluster
00522C ED53 79 55 00       B  1570    ffnnxtclu		ld (fs_file_working_cluster),de
005231 AF                  B  1571    				xor a
005232 32 85 55 00         B  1572    				ld (fs_working_sector),a
                           B  1573    			
005236 2A 36 55 00         B  1574    ffnnxtsec		ld hl,(fs_root_dir_position)	00523A 3A 85 55 00         B  1575    				ld a,(fs_working_sector)
00523E CD 50 54 00         B  1576    				call set_absolute_lba
                           B  1577    				
005242 CD A1 1A 00         B  1578    				call fs_get_dir_cluster			005246 7A                  B  1579    				ld a,d
005247 B3                  B  1580    				or e
005248 28 0C               B  1581    				jr z,at_rootd2
00524A 2A 79 55 00         B  1582    				ld hl,(fs_file_working_cluster)
00524E 3A 85 55 00         B  1583    				ld a,(fs_working_sector)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005252 CD 0A 54 00         B  1584    				call cluster_and_offset_to_lba	                           B  1585    				
005256 CD 8B 54 00         B  1586    at_rootd2		call fs_read_sector
00525A D8                  B  1587    				ret c
00525B 0E10                B  1588    				ld c,16							00525D DD21 45 67 00       B  1589    				ld ix,sector_buffer
005262 DDE5                B  1590    ndirentr		push ix
005264 D1                  B  1591    				pop de
005265 3A A0 55 00         B  1592    				ld a,(fs_search_type)
005269 B7                  B  1593    				or a
00526A 28 1E               B  1594    				jr z,fs_ststr
                           B  1595    			
00526C DD7E00              B  1596    				ld a,(ix)						00526F FE80                B  1597    				cp 080h							005271 30 35               B  1598    				jr nc,fnnotsame
005273 FE20                B  1599    				cp 020h
005275 38 31               B  1600    				jr c,fnnotsame
005277 ED5B 9D 55 00       B  1601    				ld de,(fs_stash_dir_block)		00527C DD7E1A              B  1602    				ld a,(ix+01ah)
00527F BB                  B  1603    				cp e
005280 20 26               B  1604    				jr nz,fnnotsame
005282 DD7E1B              B  1605    				ld a,(ix+01bh)
005285 BA                  B  1606    				cp d
005286 28 1E               B  1607    				jr z,fs_found
005288 18 1E               B  1608    				jr fnnotsame
                           B  1609    				
00528A FD21 43 55 00       B  1610    fs_ststr		ld iy,fs_sought_filename		00528F 060B                B  1611    				ld b,11							005291 1A                  B  1612    cmpfnlp			ld a,(de)						005292 CD 60 12 00         B  1613    				call os_uppercasify				005296 6F                  B  1614    				ld l,a
005297 FD7E00              B  1615    				ld a,(iy)
00529A CD 60 12 00         B  1616    				call os_uppercasify
00529E BD                  B  1617    				cp l				
00529F 20 07               B  1618    				jr nz,fnnotsame
0052A1 FD23                B  1619    				inc iy
0052A3 13                  B  1620    				inc de
0052A4 10 EB               B  1621    				djnz cmpfnlp
0052A6 AF                  B  1622    fs_found		xor a							0052A7 C9                  B  1623    				ret
                           B  1624    			
0052A8 11200000            B  1625    fnnotsame		ld de,32						0052AC DD19                B  1626    				add ix,de
0052AE 0D                  B  1627    				dec c
0052AF 20 B1               B  1628    				jr nz,ndirentr					                           B  1629    				
0052B1 21 85 55 00         B  1630    				ld hl,fs_working_sector			0052B5 34                  B  1631    				inc (hl)
                           B  1632    				
0052B6 CD A1 1A 00         B  1633    				call fs_get_dir_cluster			0052BA 7A                  B  1634    				ld a,d
0052BB B3                  B  1635    				or e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0052BC 20 0D               B  1636    				jr nz,notrootdir
0052BE 3A 3C 55 00         B  1637    				ld a,(fs_root_dir_sectors)		0052C2 BE                  B  1638    				cp (hl)							0052C3 C2 36 52 00         B  1639    				jp nz,ffnnxtsec
0052C7 3EC2                B  1640    fnnotfnd		ld a,0c2h						0052C9 B7                  B  1641    				or a
0052CA C9                  B  1642    				ret
                           B  1643    			
0052CB                     B  1644    notrootdir
                           B  1645    				
0052CB 3A 2C 55 00         B  1646    				ld a,(fs_cluster_size)			0052CF BE                  B  1647    				cp (hl)
0052D0 C2 36 52 00         B  1648    				jp nz,ffnnxtsec
                           B  1649    				
0052D4 2A 79 55 00         B  1650    				ld hl,(fs_file_working_cluster)
0052D8 CD 33 53 00         B  1651    				call get_fat_entry_for_cluster
0052DC D8                  B  1652    				ret c
0052DD CD DC 50 00         B  1653    				call fs_compare_hl_fff8			0052E1 30 E4               B  1654    				jr nc,fnnotfnd					0052E3 EB                  B  1655    				ex de,hl						0052E4 C3 2C 52 00         B  1656    				jp ffnnxtclu					                           B  1657    				
                           B  1658    
                           B  1659    ;----------------------------------------------
                           B  1660    
0052E8                     B  1661    fs_hl_to_alt_filename
                           B  1662    
0052E8 11 4F 55 00         B  1663    				ld de,fs_alt_filename
0052EC 18 04               B  1664    				jr hltofngo
                           B  1665    
                           B  1666    
0052EE                     B  1667    fs_hl_to_filename
                           B  1668    
                           B  1669    ;INPUT: HL = address of filename (null / space 
                           B  1670    ;OUTPUT HL = address of first character after f
                           B  1671    ;        C = number of characters in filename
                           B  1672    
0052EE 11 43 55 00         B  1673    				ld de,fs_sought_filename
0052F2 CD FD 53 00         B  1674    hltofngo		call fs_clear_filename			0052F6 D5                  B  1675    				push de			
0052F7 DDE1                B  1676    				pop ix							                           B  1677    				
0052F9 0E00                B  1678    				ld c,0
0052FB 0608                B  1679    				ld b,8
0052FD 7E                  B  1680    csfnlp2			ld a,(hl)						0052FE B7                  B  1681    				or a
0052FF C8                  B  1682    				ret z							005300 FE20                B  1683    				cp 32
005302 C8                  B  1684    				ret z							005303 FE2F                B  1685    				cp 02fh
005305 C8                  B  1686    				ret z							005306 FE2E                B  1687    				cp '.'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005308 28 16               B  1688    				jr z,dofn_ext					00530A 12                  B  1689    				ld (de),a
00530B 13                  B  1690    				inc de
00530C 23                  B  1691    				inc hl
00530D 0C                  B  1692    				inc c							00530E 10 ED               B  1693    				djnz csfnlp2					005310 7E                  B  1694    find_ext		ld a,(hl)
005311 FE2E                B  1695    				cp '.'							005313 28 0B               B  1696    				jr z,dofn_ext	
005315 FE20                B  1697    				cp ' '							005317 C8                  B  1698    				ret z
005318 FE2F                B  1699    				cp 02fh
00531A C8                  B  1700    				ret z
00531B B7                  B  1701    				or a
00531C C8                  B  1702    				ret z
00531D 23                  B  1703    				inc hl
00531E 18 F0               B  1704    				jr find_ext
                           B  1705    				
005320 23                  B  1706    dofn_ext		inc hl							005321 0603                B  1707    				ld b,3				
005323 7E                  B  1708    fnextlp			ld a,(hl)						005324 B7                  B  1709    				or a
005325 C8                  B  1710    				ret z							005326 FE20                B  1711    				cp 32
005328 C8                  B  1712    				ret z
005329 DD7708              B  1713    				ld (ix+8),a
00532C DD23                B  1714    				inc ix
00532E 23                  B  1715    				inc hl
00532F 0C                  B  1716    				inc c
005330 10 F1               B  1717    				djnz fnextlp
005332 C9                  B  1718    				ret
                           B  1719    				
                           B  1720    ;----------------------------------------------
                           B  1721    
                           B  1722    
005333                     B  1723    get_fat_entry_for_cluster
                           B  1724    
                           B  1725    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1726    
005333 C5                  B  1727    				push bc
005334 D5                  B  1728    				push de
005335 01000000            B  1729    				ld bc,0
005339 4D                  B  1730    				ld c,l
00533A 7C                  B  1731    				ld a,h
00533B 2A 30 55 00         B  1732    				ld hl,(fs_fat1_position)
00533F CD 61 54 00         B  1733    				call set_abs_lba_and_read_secto
005343 38 17               B  1734    				jr c,hwerr
005345 DDE5                B  1735    				push ix
005347 DD21 45 67 00       B  1736    				ld ix,sector_buffer
00534C DD09                B  1737    				add ix,bc
00534E DD09                B  1738    				add ix,bc
005350 21000000            B  1739    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005354 DD6E00              B  1740    				ld l,(ix)
005357 DD6601              B  1741    				ld h,(ix+1)
00535A DDE1                B  1742    				pop ix
00535C D1                  B  1743    hwerr			pop de
00535D C1                  B  1744    				pop bc
00535E C9                  B  1745    				ret
                           B  1746    
                           B  1747    
                           B  1748    ;----------------------------------------------
                           B  1749    
                           B  1750    
00535F                     B  1751    update_fat_entry_for_cluster
                           B  1752    
                           B  1753    ; INPUT: HL = cluster in question
                           B  1754    ;        DE = new value to put in FAT tables
                           B  1755    			
00535F C5                  B  1756    				push bc
005360 E5                  B  1757    				push hl
005361 01000000            B  1758    				ld bc,0
005365 4D                  B  1759    				ld c,l
005366 7C                  B  1760    				ld a,h
005367 2A 30 55 00         B  1761    				ld hl,(fs_fat1_position)		00536B CD 7F 53 00         B  1762    				call fat_upd
00536F 38 0B               B  1763    				jr c,fup_end
                           B  1764    			
005371 E1                  B  1765    				pop hl
005372 E5                  B  1766    				push hl
005373 7C                  B  1767    				ld a,h
005374 2A 33 55 00         B  1768    				ld hl,(fs_fat2_position)		005378 CD 7F 53 00         B  1769    				call fat_upd
00537C E1                  B  1770    fup_end			pop hl
00537D C1                  B  1771    				pop bc
00537E C9                  B  1772    				ret
                           B  1773    			
                           B  1774    			
00537F CD 61 54 00         B  1775    fat_upd			call set_abs_lba_and_read_secto
005383 38 0D               B  1776    				jr c,ufehwerr
005385 21 45 67 00         B  1777    				ld hl,sector_buffer
005389 09                  B  1778    				add hl,bc
00538A 09                  B  1779    				add hl,bc
00538B 73                  B  1780    				ld (hl),e
00538C 23                  B  1781    				inc hl
00538D 72                  B  1782    				ld (hl),d
00538E CD B4 54 00         B  1783    				call fs_write_sector
005392 C9                  B  1784    ufehwerr		ret
                           B  1785    				
                           B  1786    	
                           B  1787    ;----------------------------------------------
                           B  1788    
005393                     B  1789    transfer_length_countdown
                           B  1790    
005393 E5                  B  1791    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005394 C5                  B  1792    				push bc
                           B  1793    			
005395 0604                B  1794    				ld b,4
005397 21 67 55 00         B  1795    				ld hl,fs_file_pointer			00539B 34                  B  1796    fpinclp			inc (hl)
00539C 20 03               B  1797    				jr nz,fs_fpino
00539E 23                  B  1798    				inc hl
00539F 10 FA               B  1799    				djnz fpinclp
                           B  1800    				
0053A1 2A 73 55 00         B  1801    fs_fpino		ld hl,(fs_file_transfer_length)
0053A5 2B                  B  1802    				dec hl
0053A6 22 73 55 00         B  1803    				ld (fs_file_transfer_length),hl
0053AA 01000000            B  1804    				ld bc,0
0053AE B7                  B  1805    				or a
0053AF ED4A                B  1806    				adc hl,bc						                           B  1807    				
0053B1 C1                  B  1808    				pop bc
0053B2 E1                  B  1809    				pop hl
0053B3 C9                  B  1810    				ret
                           B  1811    
                           B  1812    ;----------------------------------------------
                           B  1813    
0053B4                     B  1814    fs_get_current_dir_name
                           B  1815    
                           B  1816    ;returns current dir name - location at HL
                           B  1817    
0053B4 CD A1 1A 00         B  1818    				call fs_get_dir_cluster			0053B8 7A                  B  1819    				ld a,d
0053B9 B3                  B  1820    				or e
0053BA 20 10               B  1821    				jr nz,fs_dnnr
0053BC 21 1F 60 00         B  1822    				ld hl,vol_txt+1					0053C0 3A 1A 60 00         B  1823    				ld a,(current_volume)
0053C4 C630                B  1824    				add a,030h
0053C6 32 22 60 00         B  1825    				ld (vol_txt+4),a
0053CA AF                  B  1826    				xor a
0053CB C9                  B  1827    				ret
                           B  1828    					
0053CC ED53 9D 55 00       B  1829    fs_dnnr			ld (fs_stash_dir_block),de
0053D1 CD 32 4A 00         B  1830    				call fs_parent_dir_command		0053D5 D8                  B  1831    				ret c
0053D6 B7                  B  1832    				or a
0053D7 C0                  B  1833    				ret nz
0053D8 3E01                B  1834    				ld a,1
0053DA CD 24 52 00         B  1835    				call fs_search					0053DE D8                  B  1836    				ret c
0053DF C0                  B  1837    				ret nz
                           B  1838    					
0053E0 DDE5                B  1839    fs_gdbn			push ix
0053E2 E1                  B  1840    				pop hl
0053E3 060B                B  1841    				ld b,11							0053E5 7E                  B  1842    ntdirn			ld a,(hl)
0053E6 FE20                B  1843    				cp ' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0053E8 28 03               B  1844    				jr z,rdirfsp
0053EA 23                  B  1845    				inc hl
0053EB 10 F8               B  1846    rdirnsp			djnz ntdirn
                           B  1847    				
0053ED 3600                B  1848    rdirfsp			ld (hl),0
0053EF DDE5                B  1849    				push ix
0053F1 ED5B 9D 55 00       B  1850    				ld de,(fs_stash_dir_block)
0053F6 CD AD 1A 00         B  1851    				call fs_update_dir_cluster		0053FA E1                  B  1852    				pop hl	
0053FB AF                  B  1853    				xor a							0053FC C9                  B  1854    				ret
                           B  1855    
                           B  1856    			
                           B  1857    ;----------------------------------------------
                           B  1858    
0053FD                     B  1859    fs_clear_filename
                           B  1860    
0053FD D5                  B  1861    				push de							0053FE C5                  B  1862    				push bc
0053FF 060C                B  1863    				ld b,12
005401 3E20                B  1864    				ld a,' '
005403 12                  B  1865    clrfnlp			ld (de),a
005404 13                  B  1866    				inc de
005405 10 FC               B  1867    				djnz clrfnlp
005407 C1                  B  1868    				pop bc
005408 D1                  B  1869    				pop de
005409 C9                  B  1870    				ret
                           B  1871    				
                           B  1872    ;----------------------------------------------
                           B  1873    
                           B  1874    
00540A                     B  1875    cluster_and_offset_to_lba
                           B  1876    
                           B  1877    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1878    
00540A C5                  B  1879    				push bc
00540B D5                  B  1880    				push de
00540C E5                  B  1881    				push hl
00540D DDE5                B  1882    				push ix
                           B  1883    
00540F 2B                  B  1884    				dec hl							005410 2B                  B  1885    				dec hl							005411 11000000            B  1886    				ld de,0							005415 01000000            B  1887    				ld bc,0
005419 5F                  B  1888    				ld e,a
00541A 3A 2C 55 00         B  1889    				ld a,(fs_cluster_size)			00541E CB3F                B  1890    caotllp			srl a
005420 28 03               B  1891    				jr z,clusdone
005422 29                  B  1892    				add hl,hl						005423 18 F9               B  1893    				jr caotllp
                           B  1894    			
005425 ED4B 39 55 00       B  1895    clusdone		ld bc,(fs_data_area)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00542A 09                  B  1896    				add hl,bc						00542B 19                  B  1897    				add hl,de						                           B  1898    				
00542C E5                  B  1899    add_ptn_offset	push hl							00542D CD DB 1A 00         B  1900    				call fs_calc_volume_offset
005431 DD21 46 60 00       B  1901    				ld ix,volume_mount_list
005436 DD19                B  1902    				add ix,de
005438 E1                  B  1903    				pop hl
005439 DD0708              B  1904    				ld bc,(ix+08h)					00543C DD7E0B              B  1905    				ld a,(ix+0bh)
00543F 09                  B  1906    				add hl,bc
005440 CE00                B  1907    				adc a,0
005442 22 F1 61 00         B  1908    				ld (sector_lba0),hl				005446 32 F4 61 00         B  1909    				ld (sector_lba3),a				                           B  1910    				
00544A DDE1                B  1911    				pop ix
00544C E1                  B  1912    				pop hl
00544D D1                  B  1913    				pop de
00544E C1                  B  1914    				pop bc
00544F C9                  B  1915    				ret
                           B  1916    				
                           B  1917    
                           B  1918    ;----------------------------------------------
                           B  1919    
005450                     B  1920    set_absolute_lba
                           B  1921    
                           B  1922    ; set A to sector offset, HL to sectors from st
                           B  1923    
005450 C5                  B  1924    				push bc							005451 D5                  B  1925    				push de							005452 E5                  B  1926    				push hl							005453 DDE5                B  1927    				push ix							005455 01000000            B  1928    				ld bc,0
005459 11000000            B  1929    				ld de,0
00545D 5F                  B  1930    				ld e,a
00545E 19                  B  1931    				add hl,de
00545F 18 CB               B  1932    				jr add_ptn_offset		
                           B  1933    				
                           B  1934    
005461                     B  1935    set_abs_lba_and_read_sector
                           B  1936    
005461 CD 50 54 00         B  1937    				call set_absolute_lba
005465 C3 8B 54 00         B  1938    				jp fs_read_sector
                           B  1939    				
                           B  1940    ;----------------------------------------------
                           B  1941    
                           B  1942    
005469                     B  1943    backup_sector_lba
                           B  1944    
005469 C5                  B  1945    				push bc
00546A D5                  B  1946    				push de
00546B E5                  B  1947    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00546C 21 F1 61 00         B  1948    				ld hl,sector_lba0
005470 11 A1 55 00         B  1949    				ld de,fs_backed_up_sector_lba0
005474 01040000            B  1950    lbabur			ld bc,4
005478 EDB0                B  1951    				ldir
00547A E1                  B  1952    				pop hl
00547B D1                  B  1953    				pop de
00547C C1                  B  1954    				pop bc
00547D C9                  B  1955    				ret
                           B  1956    
                           B  1957    
00547E                     B  1958    restore_sector_lba
                           B  1959    
00547E C5                  B  1960    				push bc
00547F D5                  B  1961    				push de
005480 E5                  B  1962    				push hl
005481 21 A1 55 00         B  1963    				ld hl,fs_backed_up_sector_lba0
005485 11 F1 61 00         B  1964    				ld de,sector_lba0
005489 18 E9               B  1965    				jr lbabur	
                           B  1966    					
                           B  1967    ;----------------------------------------------
                           B  1968    
00548B                     B  1969    fs_read_sector
                           B  1970    			
00548B C5                  B  1971    				push bc
00548C D5                  B  1972    				push de
00548D E5                  B  1973    				push hl
00548E DDE5                B  1974    				push ix
005490 FDE5                B  1975    				push iy
005492 01040000            B  1976    				ld bc,04h						005496 CD C5 54 00         B  1977    				call sector_access_redirect
00549A 2A F1 61 00         B  1978    secaccend		ld hl,(sector_lba0)
00549E 22 A5 55 00         B  1979    				ld (fs_sector_last_read_lba0),h
0054A2 3A F4 61 00         B  1980    				ld a,(sector_lba0+3)
0054A6 32 A8 55 00         B  1981    				ld (fs_sector_last_read_lba0+3)
0054AA FDE1                B  1982    				pop iy
0054AC DDE1                B  1983    				pop ix
0054AE E1                  B  1984    				pop hl
0054AF D1                  B  1985    				pop de
0054B0 C1                  B  1986    				pop bc
0054B1 C8                  B  1987    				ret z							0054B2 37                  B  1988    				scf								0054B3 C9                  B  1989    				ret								                           B  1990    
                           B  1991    
0054B4                     B  1992    fs_write_sector	
                           B  1993    				
0054B4 C5                  B  1994    				push bc
0054B5 D5                  B  1995    				push de
0054B6 E5                  B  1996    				push hl
0054B7 DDE5                B  1997    				push ix
0054B9 FDE5                B  1998    				push iy
0054BB 01080000            B  1999    				ld bc,08h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0054BF CD C5 54 00         B  2000    				call sector_access_redirect
0054C3 18 D5               B  2001    				jr secaccend
                           B  2002    
                           B  2003    
                           B  2004    
0054C5                     B  2005    sector_access_redirect
                           B  2006    
                           B  2007    	
0054C5 3A 1B 60 00         B  2008    				ld a,(current_driver)			0054C9 CD 73 1A 00         B  2009    				call locate_driver_base			0054CD EB                  B  2010    				ex de,hl
0054CE 09                  B  2011    				add hl,bc						0054CF E9                  B  2012    				jp (hl)
                           B  2013    
                           B  2014    ;----------------------------------------------
                           B  2015    
0054D0                     B  2016    fs_is_same_sector_in_buffer
                           B  2017    				
0054D0 E5                  B  2018    				push hl
0054D1 D5                  B  2019    				push de
0054D2 2A F1 61 00         B  2020    				ld hl,(sector_lba0)
0054D6 ED5B A5 55 00       B  2021    				ld de,(fs_sector_last_read_lba0
0054DB AF                  B  2022    				xor a
0054DC ED52                B  2023    				sbc hl,de
0054DE 20 0A               B  2024    				jr nz,fs_notsamsec
0054E0 3A F4 61 00         B  2025    				ld a,(sector_lba0+3)
0054E4 6F                  B  2026    				ld l,a
0054E5 3A A8 55 00         B  2027    				ld a,(fs_sector_last_read_lba0+
0054E9 BD                  B  2028    				cp l
0054EA D1                  B  2029    fs_notsamsec	pop de
0054EB E1                  B  2030    				pop hl
0054EC C9                  B  2031    				ret
                           B  2032    
                           B  2033    ;----------------------------------------------
                           B  2034    	
0054ED                     B  2035    bootsector_stub
                           B  2036    
0054ED EB3C904D 53444F53   B  2037    				db  0EBh,03Ch,090h,04Dh,053h,04
0054F5 352E3000 02004000 
0054FD 02000200 00F8F200   B  2038    				db  002h,000h,002h,000h,000h,0F
005505 3F00FF00 00000000 
00550D 00000000 000029C4   B  2039    				db  000h,000h,000h,000h,000h,00
005515 E636984E 4F204E41 
00551D 4D452020 20204641   B  2040    				db  04Dh,045h,020h,020h,020h,02
005525 54313620 2020C3 
                           B  2041    
                           B  2042    ;----------------------------------------------
                           B  2043    
00552C 00                  B  2044    fs_cluster_size				db 0
00552D 000000              B  2045    fs_bytes_per_cluster		dw24 0
005530 000000              B  2046    fs_fat1_position			dw24 0		; offse
005533 000000              B  2047    fs_fat2_position			dw24 0		; offse
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005536 000000              B  2048    fs_root_dir_position		dw24 0		; offse
005539 000000              B  2049    fs_data_area				dw24 0		; offse
00553C 00                  B  2050    fs_root_dir_sectors			db 0
                           B  2051    
00553D 000000              B  2052    fs_sectors_per_fat			dw24 0
005540 000000              B  2053    fs_max_data_clusters		dw24 0
                           B  2054    
005543 00 00 00 00 00 00   B  2055    fs_sought_filename			blkb 12,0
005549 00 00 00 00 00 00 
00554F 00 00 00 00 00 00   B  2056    fs_alt_filename				blkb 12,0
005555 00 00 00 00 00 00 
00555B 00 00 00 00 00 00   B  2057    fs_filename_buffer			blkb 12,0
005561 00 00 00 00 00 00 
                           B  2058    
005567 00000000            B  2059    fs_file_pointer				dw 0,0		; 32 bi
00556B 00000000            B  2060    fs_file_length				dw 0,0		; 32 bi
00556F 00000000            B  2061    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  2062    
005573 000000              B  2063    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2064    
005576 000000              B  2065    fs_file_start_cluster		dw24 0
005579 000000              B  2066    fs_file_working_cluster		dw24 0
                           B  2067    
00557C 000000              B  2068    fs_ez80_address				dw24 0
00557F 000000              B  2069    fs_ez80_working_address		dw24 0
                           B  2070    
005582 000000              B  2071    fs_in_sector_offset			dw24 0
005585 00                  B  2072    fs_working_sector			db 0
                           B  2073    
005586 000000              B  2074    fs_working_cluster			dw24 0
005589 000000              B  2075    fs_free_cluster				dw24 0
00558C 000000              B  2076    fs_new_file_cluster			dw24 0
                           B  2077    
00558F 000000              B  2078    fs_fname_in_sector_addr		dw24 0
                           B  2079    
005592 000000              B  2080    fs_dir_entry_cluster		dw24 0
005595 000000              B  2081    fs_dir_entry_line_offset	dw24 0
005598 00                  B  2082    fs_dir_entry_sector			db 0
                           B  2083    
005599 00                  B  2084    fs_filepointer_valid		db 0
00559A 000000              B  2085    fs_sector_pos_cnt			dw24 0
                           B  2086    
00559D 000000              B  2087    fs_stash_dir_block	 		dw24 0
                           B  2088    
0055A0 00                  B  2089    fs_search_type				db 0
                           B  2090    
0055A1 00000000            B  2091    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2092    
0055A5 00000000            B  2093    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2094    
                           B  2095    ;----------------------------------------------
                           B  2096    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3247    
                           A  3248    ;----------------------------------------------
                           A  3249    ; OS Data 
                           A  3250    ;----------------------------------------------
                           A  3251    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
0055A9                     B     9    kernal_table
                           B    10    
0055A9 6D1800              B    11    	dw24 ext_mount_volumes			;00		
0055AC 131800              B    12    	dw24 os_get_device_info			;01		
0055AF CA1600              B    13    	dw24 os_check_volume_format		;02		
0055B2 FC1A00              B    14    	dw24 ext_change_volume			;03		
0055B5 261800              B    15    	dw24 os_get_volume_info			;04		
0055B8 D31600              B    16    	dw24 ext_format					;05		
0055BB 051700              B    17    	dw24 ext_make_dir				;06		
0055BE 131700              B    18    	dw24 ext_change_dir				;07		
0055C1 211700              B    19    	dw24 os_parent_dir				;08		
0055C4 271700              B    20    	dw24 os_root_dir				;09		
0055C7 6F1700              B    21    	dw24 ext_delete_dir				;0a		
0055CA 5E1600              B    22    	dw24 ext_find_file				;0b		
0055CD 781600              B    23    	dw24 ext_set_file_pointer		;0c		
0055D0 711600              B    24    	dw24 os_set_load_length			;0d		
0055D3 8B1600              B    25    	dw24 ext_read_bytes_from_file	;0e		
0055D6 2D1700              B    26    	dw24 ext_erase_file				;0f		
0055D9 551700              B    27    	dw24 ext_rename_file			;10		
0055DC 9A1600              B    28    	dw24 ext_create_file			;11		
0055DF AB1600              B    29    	dw24 ext_write_bytes_to_file	;12		
0055E2 CA1A00              B    30    	dw24 fs_get_total_sectors		;13		
0055E5 3B1700              B    31    	dw24 os_goto_first_dir_entry	;14		 
0055E8 411700              B    32    	dw24 os_get_dir_entry			;15		
0055EB 471700              B    33    	dw24 os_goto_next_dir_entry		;16		
0055EE 7F1700              B    34    	dw24 ext_read_sector			;17		
0055F1 AD1700              B    35    	dw24 ext_write_sector			;18		
0055F4 371B00              B    36    	dw24 ext_file_sector_list		;19		
0055F7 A11A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0055FA AD1A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0055FD 4D1700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005600 3E4400              B    41    	dw24 os_wait_key_press			;1d		
005603 994400              B    42    	dw24 os_get_key_press			;1e		
005606 851500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005609 341800              B    45    	dw24 ext_serial_get_header		;20		
00560C 411800              B    46    	dw24 ext_serial_receive_file	;21		 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00560F 4A1800              B    47    	dw24 ext_serial_send_file		;22		 
005612 5C1800              B    48    	dw24 ext_serial_tx				;23		
005615 631800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005618 4C0F00              B    51    	dw24 ext_print_string			;25		
00561B C33E00              B    52    	dw24 hwsc_clear_screen			;26		
00561E 934000              B    53    	dw24 hwsc_wait_vrt				;27		
005621 0A1400              B    54    	dw24 os_set_cursor_position		;28		
005624 9C1A00              B    55    	dw24 ext_plot_char				;29		
005627 CB1500              B    56    	dw24 ext_set_pen				;2a		
00562A D81500              B    57    	dw24 ext_background_colours		;2b		
00562D 8C3F00              B    58    	dw24 hwsc_draw_cursor			;2c		
005630 D21500              B    59    	dw24 os_get_pen					;2d		
005633 FE3E00              B    60    	dw24 hwsc_scroll_up				;2e		
005636 523E00              B    61    	dw24 os_set_video_hw_regs		;2f		
005639 8B1500              B    62    	dw24 os_get_vmode				;30			00563C E03F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
00563F 2A1400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005642 A81B00              B    66    	dw24 ext_set_envar				;33		
005645 6C1B00              B    67    	dw24 ext_get_envar				;34		
005648 021C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
00564B 801400              B    70    	dw24 os_set_mouse_window		;36		
00564E C61400              B    71    	dw24 os_get_mouse_position		;37		
005651 9D1400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005654 034100              B    74    	dw24 hwsc_time_delay			;39		
005657 1E1200              B    75    	dw24 ext_compare_strings		;3a		
00565A 9D1000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
00565D D21000              B    77    	dw24 ext_ascii_to_hexword		;3c		
005660 271100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005663 E84000              B    80    	dw24 hwsc_get_version			;3e		
005666 F41300              B    81    	dw24 os_dont_store_registers	;3f		
005669 0A3700              B    82    	dw24 os_cmd_unused				;40 		00566C 264100              B    83    	dw24 hwsc_read_rtc				;41     
00566F 4E4100              B    84    	dw24 hwsc_write_rtc				;42		 
005672 531C00              B    85    	dw24 os_get_keymap_location		;43		 
005675 0B3700              B    86    	dw24 os_get_mem_high			;44
005678 591C00              B    87    	dw24 ext_play_audio				;45
00567B F84300              B    88    	dw24 hwsc_disable_audio			;46
00567E 114400              B    89    	dw24 hwsc_get_joysticks			;47
005681 9B1500              B    90    	dw24 ext_set_vmode				;48
005684 D90F00              B    91    	dw24 ext_set_cursor_image		;49
005687 723F00              B    92    	dw24 hwsc_remove_cursor			;4a
00568A DF3500              B    93    	dw24 char_to_font				;4b
00568D 531B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
005690 0F4100              B    95    	dw24 hwsc_set_timeout			;4d
005693 204100              B    96    	dw24 hwsc_test_timeout			;4e
                           B    97    	
                           B    98    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B    99    ; Non-packed Text Strings
                           B   100    ;----------------------------------------------
                           B   101    
005696 50524F53 4520666F   B   102    welcome_message			db "PROSE for EZ80P by 
00569E 7220455A 38305020 
0056A6 62792050 68696C20 
0056AE 52757374 6F6E2032 
0056B6 3031310B 0B 
0056BB 53595354 454D2052   B   103    						db "SYSTEM RAM free abo
0056C3 414D2066 72656520 
0056CB 61626F76 653A2024 
0056D3 00 
0056D4 44726976 65733A0B   B   104    storage_txt				db "Drives:",11,0
0056DC 00 
0056DD 434F4D4D 414E4453   B   105    os_dos_cmds_txt			db "COMMANDS",0
0056E5 00 
0056E6 53544152 5455502E   B   106    startup_script_fn		db "STARTUP.SCR",0
0056EE 53435200 
0056F2 2400                B   107    os_hex_prefix_txt		db "$",0
0056F4 4F532056 65727369   B   108    os_version_txt			db "OS Version: $",0	0056FC 6F6E3A20 2400 
005702 414D4F45 42412048   B   109    hw_version_txt			db "AMOEBA HW Version: 
00570A 57205665 7273696F 
005712 6E3A2024 00 
005717 202F2000            B   110    fwd_slash_txt			db " / ",0
00571B 4C6F6164 696E672E   B   111    loading_txt				db "Loading..",11,0
005723 2E0B00 
005726 53617669 6E672E2E   B   112    saving_txt				db "Saving..",11,0
00572E 0B00 
005730 2E657A70 20         B   113    ezp_extension_txt		db ".ezp",32
005735 0B4D6F72 653F0B0B   B   114    os_more_txt				db 11,"More?",11,11,0
00573D 00 
00573E 52656769 73746572   B   115    nmi_freeze_txt			db "Register Dump:"
005746 2044756D 703A 
00574C 0B0B00              B   116    crlfx2_txt				db 11,11,0
00574F 7800                B   117    rep_char_txt			db "x",0
005751 20746F20 00         B   118    to_txt					db " to ",0
005756 4552524F 5200       B   119    error_txt				db "ERROR",0
00575C 494620              B   120    if_command_txt			db "IF "
00575F 454E4420            B   121    end_command_txt			db "END "
005763 4F532052 45515549   B   122    hw_warn_txt1			db "OS REQUIRES AMOEBA 
00576B 52455320 414D4F45 
005773 42412056 3A 
005778 2D2D2D2D 00         B   123    hw_warn_txt2			db "----",0
                           B   124    
                           B   125    ;----------------------------------------------
                           B   126    ; Packed text section
                           B   127    ;----------------------------------------------
                           B   128    
00577D 00444542 5547       B   129    dictionary				db 0,"DEBUG"			005783 002D2D2D 2D2D       B   130    						db 0,"-----"			005789 00494F              B   131    						db 0,"IO"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00578C 002D2D              B   132    						db 0,"--"				00578F 004D4953 43         B   133    						db 0,"MISC"				005794 002D2D2D 2D         B   134    						db 0,"----"				005799 00616464 72         B   135    						db 0,"addr"				00579E 0050524F 5345       B   136    						db 0,"PROSE"			0057A4 00612062 2063       B   137    						db 0,"a b c"			0057AA 00416464 72657373   B   138    						db 0,"Address"			0057B2 00427974 6573       B   139    						db 0,"Bytes"			0057B8 00457865 63757461   B   140    						db 0,"Executable"		0057C0 626C65 
0057C3 0048756E 74         B   141    						db 0,"Hunt"				0057C8 0046696C 6C         B   142    						db 0,"Fill"				0057CD 00476F74 6F         B   143    						db 0,"Goto"				                           B   144    						
0057D2 0053686F 77         B   145    						db 0,"Show"				0057D7 00435055            B   146    						db 0,"CPU"				0057DB 00526567 69737465   B   147    						db 0,"Registers"		0057E3 7273 
0057E5 004173              B   148    						db 0,"As"				0057E8 00415343 4949       B   149    						db 0,"ASCII"			0057EE 00436C65 6172       B   150    						db 0,"Clear"			0057F4 00536372 65656E     B   151    						db 0,"Screen"			0057FB 00446973 61737365   B   152    						db 0,"Disassemble"		005803 6D626C65 
005807 00537769 746368     B   153    						db 0,"Switch"			00580E 00436F70 79         B   154    						db 0,"Copy"				005813 00446576 696365     B   155    						db 0,"Device"			00581A 00436861 6E6765     B   156    						db 0,"Change"			005821 00447269 7665       B   157    						db 0,"Drive"			005827 00446972            B   158    						db 0,"Dir"				00582B 002F                B   159    						db 0,"/"				00582D 00666E              B   160    						db 0,"fn"				                           B   161    						
005830 0044656C 657465     B   162    						db 0,"Delete"			005837 0046696C 65         B   163    						db 0,"File"				00583C 00496E66 6F         B   164    						db 0,"Info"				005841 00564F4C 783A       B   165    						db 0,"VOLx:"			005847 004D616B 65         B   166    						db 0,"Make"				00584C 0052656D 6F756E74   B   167    						db 0,"Remount"			005854 00537461 7274       B   168    						db 0,"Start"			00585A 00576172 6E696E67   B   169    						db 0,"Warning!"			005862 21 
005863 00416C6C            B   170    						db 0,"All"				005867 0052656D 6F7665     B   171    						db 0,"Remove"			00586E 0052656E 616D65     B   172    						db 0,"Rename"			005875 004F72              B   173    						db 0,"Or"				005878 00526563 65697665   B   174    						db 0,"Receive"			005880 00536176 65         B   175    						db 0,"Save"				005885 00547261 6E736D69   B   176    						db 0,"Transmit"			00588D 74 
00588E 004C6F61 64         B   177    						db 0,"Load"				                           B   178    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005893 004F532F 4857       B   179    						db 0,"OS/HW"			005899 00566572 73696F6E   B   180    						db 0,"Version"			0058A1 005B7065 6E207061   B   181    						db 0,"[pen paper]"		0058A9 7065725D 
0058AD 803A                B   182    						db 80h,":"				0058AF 813E                B   183    						db 81h,">"				0058B1 82534F55 4E44       B   184    						db 82h,"SOUND"			0058B7 00566F6C 756D6573   B   185    						db 0,"Volumes"			0058BF 8343                B   186    						db 83h,"C"				0058C1 844344              B   187    						db 84h,"CD"				0058C4 85434C53            B   188    						db 85h,"CLS"			0058C8 8650454E            B   189    						db 86h,"PEN"			0058CC 8744                B   190    						db 87h,"D"				0058CE 8844454C            B   191    						db 88h,"DEL"			0058D2 89444952            B   192    						db 89h,"DIR"			0058D6 8A48                B   193    						db 8ah,"H"				0058D8 8B46                B   194    						db 8bh,"F"				                           B   195    						
0058DA 004F6E              B   196    						db 0,"On"				0058DD 8C464F52 4D4154     B   197    						db 8ch,"FORMAT"			0058E4 0047                B   198    						db 0,"G"				0058E6 8D4C42              B   199    						db 8dh,"LB"				0058E9 8E4D                B   200    						db 8eh,"M"				0058EB 8F4D4F55 4E54       B   201    						db 8fh,"MOUNT"			0058F1 004265              B   202    						db 0,"Be"				0058F4 9052                B   203    						db 90h,"R"				0058F6 915244              B   204    						db 91h,"RD"				0058F9 92524E              B   205    						db 92h,"RN"				0058FC 935258              B   206    						db 93h,"RX"				0058FF 945342              B   207    						db 94h,"SB"				005902 9554                B   208    						db 95h,"T"				005904 965458              B   209    						db 96h,"TX"				005907 97564552 53         B   210    						db 97h,"VERS"			00590C 00577269 7465       B   211    						db 0,"Write"			                           B   212    						
005912 004D656D            B   213    						db 0,"Mem"				005916 00227478 7422       B   214    						db 0,22h,"txt",22h		00591C 0057696C 6C         B   215    						db 0,"Will"				005921 00526174 65         B   216    						db 0,"Rate"				005926 0061                B   217    						db 0,"a"				005928 00507265 70         B   218    						db 0,"Prep"				00592D 984D44              B   219    						db 98h,"MD"				005930 00447269 766573     B   220    						db 0,"Drives"			005937 006F6C64 666E       B   221    						db 0,"oldfn"			00593D 006E6577 666E       B   222    						db 0,"newfn"			005943 006C656E            B   223    						db 0,"len"				005947 00436F6C 6F757273   B   224    						db 0,"Colours"			00594F 993F                B   225    						db 99h,"?"				005951 00436F6D 6D616E64   B   226    						db 0,"Commands"			005959 73 
00595A 0020                B   227    						db 0," "				00595C 002D                B   228    						db 0,"-"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   229    						
00595E 00566F6C 756D65     B   230    						db 0,"Volume"			005965 0046756C 6C         B   231    						db 0,"Full"				00596A 004E6F74            B   232    						db 0,"Not"				00596E 00466F75 6E64       B   233    						db 0,"Found"			005974 004C656E 677468     B   234    						db 0,"Length"			00597B 005A6572 6F         B   235    						db 0,"Zero"				005980 004F7574            B   236    						db 0,"Out"				005984 004F66              B   237    						db 0,"Of"				005987 0052616E 6765       B   238    						db 0,"Range"			00598D 00416C72 65616479   B   239    						db 0,"Already"			005995 00457869 737473     B   240    						db 0,"Exists"			00599C 004174              B   241    						db 0,"At"				00599F 00526F6F 74         B   242    						db 0,"Root"				0059A4 004D6973 6D617463   B   243    						db 0,"Mismatch"			0059AC 68 
0059AD 00526571 75657374   B   244    						db 0,"Request"			0059B5 00446174 61         B   245    						db 0,"Data"				                           B   246    				
0059BA 00454F46            B   247    						db 0,"EOF"				0059BE 00416674 6572       B   248    						db 0,"After"			0059C4 00556E6B 6E6F776E   B   249    						db 0,"Unknown"			0059CC 00436F6D 6D616E64   B   250    						db 0,"Command"			0059D4 00426164            B   251    						db 0,"Bad"				0059D8 00486578            B   252    						db 0,"Hex"				0059DC 004E6F              B   253    						db 0,"No"				0059DF 0041626F 72746564   B   254    						db 0,"Aborted"			0059E7 00507265 73656E74   B   255    						db 0,"Present"			0059EF 00436865 636B7375   B   256    						db 0,"Checksum"			0059F7 6D 
0059F8 004C6F61 646564     B   257    						db 0,"Loaded"			0059FF 00436F6D 6D73       B   258    						db 0,"Comms"			005A05 00457272 6F72       B   259    						db 0,"Error"			005A0B 00417267 756D656E   B   260    						db 0,"Arguments"		005A13 7473 
005A15 004C6F73 74         B   261    						db 0,"Lost"				                           B   262    						
005A1A 00                  B   263    						db 0
005A1B 46415431 36         B   264    fat16_txt				db "FAT16"				                           B   265    
005A20 00536572 69616C     B   266    						db 0,"Serial"			005A27 0054696D 65         B   267    						db 0,"Time"				005A2C 00466F6E 74         B   268    						db 0,"Font"				005A31 00546F6F            B   269    						db 0,"Too"				005A35 004C6F6E 67         B   270    						db 0,"Long"				005A3A 00446573 74696E61   B   271    						db 0,"Destination"		005A42 74696F6E 
005A46 0053656C 65637465   B   272    						db 0,"Selected"			005A4E 64 
005A4F 00496E76 616C6964   B   273    						db 0,"Invalid"			005A57 004D6973 73696E67   B   274    						db 0,"Missing"			005A5F 004F4B              B   275    						db 0,"OK"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005A62 004F53              B   276    						db 0,"OS"				005A65 0050726F 74656374   B   277    						db 0,"Protected"		005A6D 6564 
005A6F 0041                B   278    						db 0,"A"				005A71 004973              B   279    						db 0,"Is"				005A74 00456D70 7479       B   280    						db 0,"Empty"			005A7A 00456E64            B   281    						db 0,"End"				                           B   282    						
005A7E 0024                B   283    						db 0,"$"
005A80 7878                B   284    hex_byte_txt			db "xx"					                           B   285    						
005A82 00417070 656E64     B   286    						db 0,"Append"			005A89 003F                B   287    						db 0,"?"				005A8B 0024                B   288    						db 0,"$"				005A8D 00417761 6974696E   B   289    						db 0,"Awaiting"			005A95 67 
005A96 00526563 65697669   B   290    						db 0,"Receiving"		005A9E 6E67 
005AA0 0053656E 64696E67   B   291    						db 0,"Sending"			005AA8 000B                B   292    						db 0,11					005AAA 002E2E              B   293    						db 0,".."				005AAD 004E616D 65         B   294    						db 0,"Name"				005AB2 00204279 746573     B   295    						db 0," Bytes"			005AB9 00507265 7373       B   296    						db 0,"Press"			005ABF 00416E79            B   297    						db 0,"Any"				005AC3 004B6579            B   298    						db 0,"Key"				005AC7 00456E74 6572       B   299    						db 0,"Enter"			005ACD 9A455845 43         B   300    						db 9ah,"EXEC"			                           B   301    				
005AD2 0052756E            B   302    						db 0,"Run"				005AD6 00536372 697074     B   303    						db 0,"Script"			005ADD 00594553            B   304    yes_txt					db 0,"YES" 				005AE1 00546F              B   305    						db 0,"To"				005AE4 00536574            B   306    						db 0,"Set"				005AE8 00436F6E 74696E75   B   307    						db 0,"Continue"			005AF0 65 
005AF1 004E6F6E 65         B   308    						db 0,"None"				005AF6 00447269 766572     B   309    						db 0,"Driver"			005AFD 9B3C                B   310    						db 9bh,"<"				005AFF 004E6577 6572       B   311    						db 0,"Newer"			005B05 00526571 75697265   B   312    						db 0,"Required"			005B0D 64 
005B0E 00465047 4120636F   B   313    						db 0,"FPGA config"		005B16 6E666967 
005B1A 00556E63 68616E67   B   314    						db 0,"Unchanged"		005B22 6564 
005B24 006C6F63 206C656E   B   315    						db 0,"loc len [per vol 
005B2C 205B7065 7220766F 
005B34 6C206368 616E7320 
005B3C 6C6F6F70 3F5D20 
005B43 9C50414C 45545445   B   316    						db 9ch,"PALETTE"		005B4B 0070616C 65747465   B   317    						db 0,"palette"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   318    						
005B53 9D4D4F55 5345       B   319    						db 9dh,"MOUSE"			005B59 00456E61 626C65     B   320    						db 0,"Enable"			005B60 004B6579 626F6172   B   321    						db 0,"Keyboard"			005B68 64 
005B69 00446574 65637465   B   322    						db 0,"Detected"			005B71 64 
005B72 004D6F75 7365       B   323    						db 0,"Mouse"			005B78 00536563 746F72     B   324    						db 0,"Sector"			005B7F 00496E63 6F727265   B   325    						db 0,"Incorrect"		005B87 6374 
005B89 9E564D4F 4445       B   326    						db 9eh,"VMODE"			005B8F 00566964 656F       B   327    						db 0,"Video"			005B95 004D6F64 65         B   328    						db 0,"Mode"				005B9A 9F464F4E 54         B   329    						db 9fh,"FONT"			005B9F 00416E64            B   330    						db 0,"And"				005BA3 00536176 696E67     B   331    						db 0,"Saving"			005BAA 00556E73 7570706F   B   332    						db 0,"Unsupported"		005BB2 72746564 
005BB6 A0534554            B   333    						db 0a0h,"SET"			005BBA 005B7661 723D7374   B   334    						db 0,"[var=string]"		005BC2 72696E67 5D 
                           B   335    
005BC7 00456E76 6172       B   336    						db 0,"Envar"			005BCD A1445A              B   337    						db 0a1h,"DZ"			005BD0 0041444C            B   338    						db 0,"ADL"				005BD4 005A3830            B   339    						db 0,"Z80"				005BD8 00506C61 79         B   340    						db 0,"Play"				005BDD 00417564 696F       B   341    						db 0,"Audio"			                           B   342    						
005BE3 0001                B   343    						db 0,1					                           B   344    
                           B   345    
                           B   346    
                           B   347    
                           B   348    
005BE5 2199696A 5F916F92   B   349    save_append_msg			db 021h,099h,069h,06ah,
005BED 9700 
005BEF 2F0A9300            B   350    os_loadaddress_msg 		db 02fh,00ah,093h,0		005BF3 21649300            B   351    os_filesize_msg			db 021h,064h,093h,0		005BF7 94219700            B   352    ser_rec_msg				db 094h,021h,097h,0		005BFB 956F9897 00         B   353    ser_rec2_msg			db 095h,06fh,098h,097h,
005C00 966F9897 00         B   354    ser_send_msg			db 096h,06fh,098h,097h,
005C05 9521BBBC 989700     B   355    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005C0C A77C9097 00         B   356    hw_err_msg				db 0a7h,07ch,090h,097h,
005C11 607C00              B   357    disk_err_msg			db 060h,07ch,0			005C14 A1779797 00         B   358    script_aborted_msg		db 0a1h,077h,097h,097h,
005C19 76B2B397 00         B   359    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   360    
005C1E 9700                B   361    packed_help1				db 097h,0
005C20 0100                B   362    							db 001h,0			005C22 0200                B   363    							db 002h,0			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C24 3307095F 4F500B00   B   364    							db 033h,007h,009h,0
005C2C 3407515F 4F1400     B   365    							db 034h,007h,051h,0
005C33 37070707 5F195000   B   366    							db 037h,007h,007h,0
005C3B 3B075FC2 1700       B   367    							db 03bh,007h,05fh,0
005C41 C1075FC3 1700       B   368    							db 0c1h,007h,05fh,0
005C47 3F070754 5F0E5000   B   369    							db 03fh,007h,007h,0
005C4F 42075F0F 0A00       B   370    							db 042h,007h,05fh,0
005C55 3E070709 5F0D5000   B   371    							db 03eh,007h,007h,0
005C5D 44075F10 500B00     B   372    							db 044h,007h,05fh,0
005C64 475F1011 1200       B   373    							db 047h,05fh,010h,0
005C6A 4C075F10 50131400   B   374    							db 04ch,007h,05fh,0
                           B   375    	
005C72 9700                B   376    							db 097h,0
005C74 0300                B   377    							db 003h,0			005C76 0400                B   378    							db 004h,0			005C78 38231E1D 5F1B601E   B   379    							db 038h,023h,01eh,0
005C80 1D00 
005C82 3C1F5F20 2100       B   380    							db 03ch,01fh,05fh,0
005C88 3D5F101D 00         B   381    							db 03dh,05fh,010h,0
005C8D 411A995F 551C00     B   382    							db 041h,01ah,099h,0
005C94 431F075F 2F2100     B   383    							db 043h,01fh,007h,0
005C9B 561D5F24 1D00       B   384    							db 056h,01dh,05fh,0
005CA1 455F2557 00         B   385    							db 045h,05fh,025h,0
005CA6 481D5F29 1D00       B   386    							db 048h,01dh,05fh,0
005CAC 4958595F 2A2100     B   387    							db 049h,058h,059h,0
005CB3 4A1F075F 2C2100     B   388    							db 04ah,01fh,007h,0
005CBA 4B1F075A 5F2D2100   B   389    							db 04bh,01fh,007h,0
005CC2 4D1F075A 5F2E2100   B   390    							db 04dh,01fh,007h,0
005CCA 235F1860 00         B   391    							db 023h,05fh,018h,0
                           B   392    
005CCF 9700                B   393    							db 097h,0
005CD1 0500                B   394    							db 005h,0			005CD3 0600                B   395    							db 006h,0			005CD5 395F1516 00         B   396    							db 039h,05fh,015h,0
005CDA 9F1F5FA0 A100       B   397    							db 09fh,01fh,05fh,0
005CE0 BA1F5F1B 8200       B   398    							db 0bah,01fh,05fh,0
005CE6 B05FB1B0 A700       B   399    							db 0b0h,05fh,0b1h,0
005CEC AE095F1B AF00       B   400    							db 0aeh,09h,05fh,01
005CF2 3A325F1B 5B00       B   401    							db 03ah,032h,05fh,0
005CF8 BEBF5FA4 C000       B   402    							db 0beh,0bfh,05fh,0
005CFE 35AD5FC4 5013C500   B   403    							db 035h,0adh,05fh,0
005D06 4E5F1030 3100       B   404    							db 04eh,05fh,010h,0
005D0C B7095F1B B8B900     B   405    							db 0b7h,09h,5fh,01b
005D13 5C5F105D 00         B   406    							db 05ch,05fh,010h,0
005D18 9700                B   407    							db 097h,0
005D1A FF                  B   408    							db 0ffh
                           B   409    
                           B   410    
                           B   411    
                           B   412    
005D1B BB1D00              B   413    os_cmd_locs					dw24 os_cmd_colon	005D1E A02C00              B   414    							dw24 os_cmd_gtr		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D21 733600              B   415    							dw24 os_cmd_sound	005D24 621C00              B   416    							dw24 os_cmd_c		005D27 CF1C00              B   417    							dw24 os_cmd_cd		005D2A B51D00              B   418    							dw24 os_cmd_cls		005D2D DA3400              B   419    							dw24 os_cmd_pen		005D30 D51D00              B   420    							dw24 os_cmd_d		                           B   421    					
005D33 362900              B   422    							dw24 os_cmd_del		005D36 4B2900              B   423    							dw24 os_cmd_dir		005D39 CE2B00              B   424    							dw24 os_cmd_h		005D3C 472A00              B   425    							dw24 os_cmd_f		005D3F 6F2A00              B   426    							dw24 os_cmd_format	005D42 D42C00              B   427    							dw24 os_cmd_lb		005D45 632D00              B   428    							dw24 os_cmd_m		005D48 633200              B   429    							dw24 os_cmd_remount
                           B   430    
005D4B BA2D00              B   431    							dw24 os_cmd_r		005D4E EB2E00              B   432    							dw24 os_cmd_rd		005D51 F82E00              B   433    							dw24 os_cmd_rn		005D54 7C2F00              B   434    							dw24 os_cmd_rx		005D57 142F00              B   435    							dw24 os_cmd_sb		005D5A 0F3200              B   436    							dw24 os_cmd_t		005D5D A33100              B   437    							dw24 os_cmd_tx		005D60 6F3200              B   438    							dw24 os_cmd_vers	                           B   439    							
005D63 AD2D00              B   440    							dw24 os_cmd_md		005D66 7C2C00              B   441    							dw24 os_cmd_help	005D69 A03200              B   442    							dw24 os_cmd_exec	005D6C D83400              B   443    							dw24 os_cmd_ltn		005D6F FE3400              B   444    							dw24 os_cmd_palette
005D72 2F3500              B   445    							dw24 os_cmd_mouse	005D75 6B3500              B   446    							dw24 os_cmd_vmode	005D78 7B3500              B   447    							dw24 os_cmd_font	                           B   448    							
005D7B 0A3600              B   449    							dw24 os_cmd_set		005D7E 663600              B   450    							dw24 os_cmd_dz		                           B   451    							
                           B   452    								
005D81 00                  B   453    packed_msg_list				db 0				                           B   454    		
005D82 606100              B   455    							db 060h,061h,0		005D85 21626300            B   456    							db 021h,062h,063h,0
005D89 1D6100              B   457    							db 01dh,061h,0		005D8C 628C1D00            B   458    							db 062h,08ch,01dh,0
005D90 1D8D628E 00         B   459    							db 01dh,08dh,062h,0
005D95 628C2100            B   460    							db 062h,08ch,021h,0
005D99 21648D65 00         B   461    							db 021h,064h,08dh,0
005D9E 0A666768 00         B   462    							db 00ah,066h,067h,0
005DA3 2199696A 00         B   463    							db 021h,099h,069h,0
005DA8 696B6C00            B   464    							db 069h,06bh,06ch,0
                           B   465    					
005DAC 727300              B   466    							db 072h,073h,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005DAF 877500              B   467    							db 087h,075h,0		005DB2 76219900            B   468    							db 076h,021h,099h,0
                           B   469    					
005DB6 87B500              B   470    							db 087h,0b5h,0		005DB9 797400              B   471    							db 079h,074h,0		005DBC 9A7A00              B   472    bytes_loaded_msg			db 09ah,07ah,0		005DBF 7B7C00              B   473    							db 07bh,07ch,0		005DC2 747D00              B   474    							db 074h,07dh,0		                           B   475    
005DC5 627F00              B   476    format_err_msg				db 062h,07fh,0		                           B   477    
005DC8 816600              B   478    							db 081h,066h,0		005DCB 21998384 00         B   479    							db 021h,099h,083h,0
005DD0 76260A00            B   480    							db 076h,026h,00ah,0
005DD4 76216400            B   481    							db 076h,021h,064h,0
005DD8 2D7700              B   482    							db 02dh,077h,0		005DDB 2D7C6B85 00         B   483    							db 02dh,07ch,06bh,0
005DE0 628C080C 00         B   484    							db 062h,08ch,08h,0c
005DE5 A9316708 AA00       B   485    							db 0a9h,031h,067h,0
005DEB 768F0A00            B   486    							db 076h,08fh,00ah,0
005DEF 76850A00            B   487    							db 076h,085h,00ah,0
                           B   488    					
005DF3 746800              B   489    							db 074h,068h,0		005DF6 887D00              B   490    							db 088h,07dh,0		005DF9 8900                B   491    ok_msg						db 089h,0			                           B   492    					
005DFB 876000              B   493    							db 087h,060h,0		005DFE 1A627800            B   494    							db 01ah,062h,078h,0
                           B   495    					
005E02 1D626300            B   496    							db 01dh,062h,063h,0
005E06 7700                B   497    							db 077h,0			                           B   498    					
005E08 21996D00            B   499    							db 021h,099h,06dh,0
005E0C 8A508B00            B   500    							db 08ah,050h,08bh,0
005E10 6F71706E 00         B   501    							db 06fh,071h,070h,0
005E15 763600              B   502    no_vols_msg					db 076h,036h,0		005E18 97A66300            B   503    none_found_msg				db 097h,0a6h,063h,0
                           B   504    							
005E1C B62100              B   505    							db 0b6h,021h,0		005E1F A9316708 AA00       B   506    							db 0a9h,031h,067h,0
005E25 21AC00              B   507    							db 021h,0ach,0		                           B   508    							
005E28 766F00              B   509    							db 076h,06fh,0		005E2B 746F00              B   510    							db 074h,06fh,0		005E2E 66676800            B   511    							db 066h,067h,068h,0
005E32 BD1A00              B   512    							db 0bdh,01ah,0		005E35 1A62B300            B   513    							db 01ah,062h,0b3h,0
005E39 1A7C00              B   514    							db 01ah,07ch,0		005E3C A17C00              B   515    							db 0a1h,07ch,0		                           B   516    							
005E3F FF                  B   517    							db 0ffh				                           B   518    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   519    ;----------------------------------------------
                           B   520    
005E40                     B   521    kernal_error_code_translation
                           B   522    
005E40 242D2E14 08110F2A   B   523    					db 24h,2dh,2eh,14h, 08h,11h
005E48 2F303132 331F 
                           B   524    					
005E4E                     B   525    fs_error_code_translation
                           B   526    
005E4E 00010203 04050607   B   527    					db 00h,01h,02h,03h,04h,05h,
005E56 08090A0B 0C0D1321 
005E5E 22232425 260E0000   B   528    					db 22h,23h,24h,25h,26h,0eh,
                           B   529    
                           B   530    
                           B   531    ;----------------------------------------------
                           B   532    ; Scancode to ASCII keymaps
                           B   533    ;----------------------------------------------
                           B   534    
                           C     0    include	'UK_keymap.asm'
005E66                     C     1    keymap:
005E66 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005E6E 00000000 00006000 
005E76 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005E7E 00007A73 61773200 
005E86 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005E8E 00207666 74723500 
005E96 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005E9E 00006D6A 75373800 
005EA6 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005EAE 002E2F6C 3B702D00 
005EB6 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005EBE 0000005D 00230000 
005EC6 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005ECE 00000000 00000000 
005ED6 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005EDE 21000000 5A534157 
005EE6 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005EEE A3000020 56465452 
005EF6 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005EFE 5E000000 4D4A5526 
005F06 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005F0E 2800003E 3F4C3A50 
005F16 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005F1E 00000000 007D007E 
005F26 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005F2E 00000000 00000000 
005F36 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005F3E 00000000 00000000 
005F46 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005F4E 00000000 00000000 
005F56 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005F5E 00000000 00000000 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005F66 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005F6E 00000000 00000000 
005F76 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005F7E 00000000 00000000 
005F86 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   536    
       00005E66            B   537    unshifted_keymap equ keymap+00h
       00005EC8            B   538    shifted_keymap   equ keymap+62h
       00005F2A            B   539    alted_keymap	 equ keymap+c4h
                           B   540    	
                           B   541    ;----------------------------------------------
                           B   542    
005F8C 00                  B   543    ui_index				db 0				; u
005F8D 00                  B   544    ui_maxchars				db 0				; "
005F8E 000000              B   545    ui_string_addr			dw24 0				; "
                           B   546    
                           B   547    ;----------------------------------------------
                           B   548    ; OS Display parameters
                           B   549    ;----------------------------------------------
                           B   550    
005F91 00                  B   551    video_mode				db 0
005F92 0700                B   552    current_pen				dw 07h				; C
005F94 0000                B   553    background_colour		dw 00h				; F
                           B   554    
005F96 00000F00 000F0F0F   B   555    pen_palette				dw 0000h,000fh,0f00h,0f
005F9E F000FF00 F00FFF0F 
005FA6 55059909 CC0C710F   B   556    						dw 0555h,0999h,0ccch,0f
005FAE 7F00F80D 40088C03 
                           B   557    
005FB6 00                  B   558    plotchar_colour			db 0				; c
                           B   559    
005FB7 00                  B   560    char_under_cursor		db 0			
005FB8 00                  B   561    cursor_present			db 0				; 1
005FB9 00                  B   562    overwrite_mode			db 0
005FBA 00                  B   563    cursor_image_char		db 0
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
005FBB                     B   567    display_parameters
                           B   568    
005FBB 00                  B   569    video_doubling			db 0
005FBC 000000              B   570    charmap_rows			dw24 0					005FBF 000000              B   571    charmap_columns			dw24 0				
                           B   572    
                           B   573    ;----------------------------------------------
                           B   574    
005FC2                     B   575    vmode_parameter_list
                           B   576    
005FC2 00503C              B   577    				db 00b, 80,60	; vmode 0 (vide
005FC5 01501E              B   578    				db 01b, 80,30	; vmode 1
005FC8 02283C              B   579    				db 10b, 40,60	; vmode 2	
005FCB 03281E              B   580    				db 11b, 40,30	; vmode 3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   581    				
                           B   582    ;==============================================
                           B   583    ;  Serial Routine Data
                           B   584    ;==============================================
                           B   585    
005FCE 000000              B   586    serial_ez80_address		dw24 0
005FD1 000000              B   587    serial_file_length		dw24 0
005FD4 000000              B   588    serial_fn_addr			dw24 0
005FD7 00 00 00 00 00 00   B   589    serial_filename			blkb 18,0		
005FDD 00 00 00 00 00 00 
005FE3 00 00 00 00 00 00 
005FE9 00                  B   590    serial_fn_length		db 0
005FEA 00                  B   591    serial_timeout			db 0
                           B   592    
005FEB 00 00 00 00 00 00   B   593    serial_fileheader		blkb 20,0
005FF1 00 00 00 00 00 00 
005FF7 00 00 00 00 00 00 
005FFD 00 00 
005FFF 5A383050 2E464845   B   594    serial_header_id		db "Z80P.FHEADER"		006007 41444552 
00600B 00                  B   595    serial_transfer_started	db 0
                           B   596    
00600C 00                  B   597    anim_wait_count			db 0
                           B   598    
                           B   599    ;==============================================
                           B   600    
00600D F3C8                B   601    intellimouse_seq	db 0f3h,200
00600F F364                B   602    					db 0f3h,100
006011 F350                B   603    					db 0f3h,80
                           B   604    
006013 E803                B   605    mouse_settings_seq	db 0e8h,default_resolution
006015 E6                  B   606    					db default_scaling
006016 F364                B   607    					db 0f3h,default_sample_rate
006018 F4                  B   608    					db 0f4h
                           B   609    					
                           B   610    ;----------------------------------------------
                           B   611    ; FILE SYSTEM RELATED VARIABLES
                           B   612    ;----------------------------------------------
                           B   613    
006019 00                  B   614    boot_drive			db 0
                           B   615    
00601A 00                  B   616    current_volume		db 0
                           B   617    	
00601B 00                  B   618    current_driver		db 0			;normally u
                           B   619    
00601C 00                  B   620    device_count		db 0			;IE: the nu
                           B   621    
00601D 00                  B   622    volume_count		db 0
                           B   623    				
00601E 20564F4C 303A00     B   624    vol_txt				db " VOL0:",0	;space pref
006025 44455630 3A00       B   625    dev_txt				db "DEV0:",0
                           B   626    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00602B 000000              B   627    sector_rd_wr_addr	dw24 0
                           B   628    
                           B   629    
                           B   630    ;==============================================
                           B   631    
00602E                     B   632    volume_dir_clusters
                           B   633    
00602E 00 00 00 00 00 00   B   634    					blkb max_volumes*3,0
006034 00 00 00 00 00 00 
00603A 00 00 00 00 00 00 
006040 00 00 00 00 00 00 
                           B   635    	
006046                     B   636    volume_mount_list
                           B   637    
006046 00 00 00 00 00 00   B   638    					blkb max_volumes*16,0
00604C 00 00 00 00 00 00 
006052 00 00 00 00 00 00 
006058 00 00 00 00 00 00 
00605E 00 00 00 00 00 00 
006064 00 00 00 00 00 00 
00606A 00 00 00 00 00 00 
006070 00 00 00 00 00 00 
006076 00 00 00 00 00 00 
00607C 00 00 00 00 00 00 
006082 00 00 00 00 00 00 
006088 00 00 00 00 00 00 
00608E 00 00 00 00 00 00 
006094 00 00 00 00 00 00 
00609A 00 00 00 00 00 00 
0060A0 00 00 00 00 00 00 
0060A6 00 00 00 00 00 00 
0060AC 00 00 00 00 00 00 
0060B2 00 00 00 00 00 00 
0060B8 00 00 00 00 00 00 
0060BE 00 00 00 00 00 00 
0060C4 00 00 
                           B   639    
                           B   640    ; Each entry is 16 bytes in the form:
                           B   641    
                           B   642    ; OFFSETS
                           B   643    ; -------
                           B   644    ; $00 - Volume is present (0/1)
                           B   645    ; $01 - Volume's host driver number (1 byte)	                           B   646    ; $02 - [reserved]
                           B   647    ; $03 - [reserved]
                           B   648    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   649    ; $07 - Partition number on host drive (0/1/2/3
                           B   650    ; $08 - Offset in sectors from MBR to partition
                           B   651    ; $0c - [reserved]
                           B   652    ; $0d - [reserved]	
                           B   653    ; $0e - [reserved]
                           B   654    ; $0f - [reserved]
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   655    
                           B   656    ;==============================================
                           B   657    
0060C6                     B   658    host_device_hardware_info
                           B   659    
0060C6 00 00 00 00 00 00   B   660    					blkb 32*4,0
0060CC 00 00 00 00 00 00 
0060D2 00 00 00 00 00 00 
0060D8 00 00 00 00 00 00 
0060DE 00 00 00 00 00 00 
0060E4 00 00 00 00 00 00 
0060EA 00 00 00 00 00 00 
0060F0 00 00 00 00 00 00 
0060F6 00 00 00 00 00 00 
0060FC 00 00 00 00 00 00 
006102 00 00 00 00 00 00 
006108 00 00 00 00 00 00 
00610E 00 00 00 00 00 00 
006114 00 00 00 00 00 00 
00611A 00 00 00 00 00 00 
006120 00 00 00 00 00 00 
006126 00 00 00 00 00 00 
00612C 00 00 00 00 00 00 
006132 00 00 00 00 00 00 
006138 00 00 00 00 00 00 
00613E 00 00 00 00 00 00 
006144 00 00 
                           B   661    
                           B   662    ; Each entry is 32 bytes..
                           B   663    ;
                           B   664    ; OFFSETS
                           B   665    ; -------
                           B   666    ; $00 - Device driver number
                           B   667    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   668    ; $05 - Zero terminated hardware name (22 ASCII
                           B   669    ; (remaining bytes to $1F currently unused)
                           B   670    
                           B   671    ;----------------------------------------------
                           B   672    
006146 000000              B   673    dhwn_temp_pointer		dw24 0
                           B   674    
006149 00                  B   675    partition_temp			db 0
00614A 00                  B   676    vols_on_device_temp		db 0
00614B 00                  B   677    sys_driver_backup		db 0
00614C 00                  B   678    os_quiet_mode			db 0
                           B   679    
00614D 456A00              B   680    default_load_addr		dw24 os_max_addr
                           B   681    
                           B   682    ;----------------------------------------------
                           B   683    
006150 00 00 00 00 00 00   B   684    time_data				blkb	7,0
006156 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   685    
006157 00                  B   686    frozen					db 0
006158 01                  B   687    first_run				db 1
006159 01                  B   688    devices_connected		db 1					                           B   689    
                           B   690    ;----------------------------------------------
                           B   691    
00615A 456A00              B   692    sysram_os_highest		dw24 os_max_addr
00615D 000080              B   693    vram_a_os_highest		dw24 vram_a_addr
006160 0000C0              B   694    vram_b_os_highest		dw24 vram_b_addr
                           B   695    
006163 000000              B   696    charmap_size			dw24 0
                           B   697    
                           B   698    ;----------------------------------------------
                           B   699    
006166 00                  B   700    store_a1				db 0		
006167 000000              B   701    store_bc1				dw24 0
00616A 000000              B   702    store_de1				dw24 0
00616D 000000              B   703    store_hl1				dw24 0
006170 00                  B   704    store_a2				db 0
006171 000000              B   705    store_bc2				dw24 0
006174 000000              B   706    store_de2				dw24 0
006177 000000              B   707    store_hl2				dw24 0
00617A 000000              B   708    store_ix				dw24 0
00617D 000000              B   709    store_iy				dw24 0
006180 000000              B   710    store_pc				dw24 0		;only relev
006183 000000              B   711    store_spl				dw24 0
006186 0000                B   712    store_sps				dw 0
006188 00                  B   713    store_mbase				db 0
006189 00                  B   714    store_f	 				db 0
00618A 00                  B   715    store_adl				db 0
                           B   716    
                           B   717    ;----------------------------------------------
00618B                     B   718    os_variables
                           B   719    ;----------------------------------------------
                           B   720    
00618B 000000              B   721    kernal_ix_cache			dw24 0
                           B   722    
00618E 00                  B   723    store_registers			db 0
00618F 000000              B   724    com_start_addr			dw24 0
                           B   725    
006192 00 00 00 00 00 00   B   726    temp_string				blkb max_buffer_chars+2
006198 00 00 00 00 00 00 
00619E 00 00 00 00 00 00 
0061A4 00 00 00 00 00 00 
0061AA 00 00 00 00 00 00 
0061B0 00 00 00 00 00 00 
0061B6 00 00 00 00 00 00 
0061BC 00 00 00 00 00 00 
0061C2 00 00 00 00 00 00 
0061C8 00 00 00 00 00 00 
0061CE 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0061D4 00 00 00 00 00 00 
0061DA 00 00 00 00 00 00 
0061E0 00 00 00 00 
0061E4 00 00 00 00 00 00   B   727    script_fn				blkb 13,0
0061EA 00 00 00 00 00 00 
0061F0 00 
                           B   728    
0061F1 00                  B   729    sector_lba0				db 0			; keep 
0061F2 00                  B   730    sector_lba1				db 0
0061F3 00                  B   731    sector_lba2				db 0
0061F4 00                  B   732    sector_lba3				db 0
                           B   733    
                           B   734    ;----------------------------------------------
                           B   735    
0061F5 000000              B   736    cursor_pos				dw24 0			; 3rd b
                           B   737    
       000061F5            B   738    cursor_y 				equ cursor_pos
       000061F6            B   739    cursor_x 				equ cursor_pos+1
                           B   740    						
0061F8 00                  B   741    cursorflashtimer		db 0
0061F9 00                  B   742    cursor_status			db 0
0061FA 00                  B   743    os_linecount			db 0
                           B   744    		
0061FB 000000              B   745    mem_mon_addr			dw24 0
0061FE 000000              B   746    cmdop_start_address		dw24 0
006201 000000              B   747    cmdop_end_address		dw24 0
006204 000000              B   748    copy_dest_address		dw24 0
006207 000000              B   749    hex_address				dw24 0
                           B   750    
00620A 000000              B   751    find_hexstringascii 	dw24 0
00620D 000000              B   752    xrr_temp				dw24 0
006210 00                  B   753    temphex					db 0
006211 00                  B   754    fillbyte				db 0 
006212 00                  B   755    ui_im_cache				db 0
                           B   756    
006213 00 00 00 00 00 00   B   757    commandstring			blkb max_buffer_chars+2
006219 00 00 00 00 00 00 
00621F 00 00 00 00 00 00 
006225 00 00 00 00 00 00 
00622B 00 00 00 00 00 00 
006231 00 00 00 00 00 00 
006237 00 00 00 00 00 00 
00623D 00 00 00 00 00 00 
006243 00 00 00 00 00 00 
006249 00 00 00 00 00 00 
00624F 00 00 00 00 00 00 
006255 00 00 00 00 00 00 
00625B 00 00 00 00 00 00 
006261 00 00 00 00 
006265 00 00 00 00 00 00   B   758    output_line				blkb max_buffer_chars+2
00626B 00 00 00 00 00 00 
006271 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006277 00 00 00 00 00 00 
00627D 00 00 00 00 00 00 
006283 00 00 00 00 00 00 
006289 00 00 00 00 00 00 
00628F 00 00 00 00 00 00 
006295 00 00 00 00 00 00 
00629B 00 00 00 00 00 00 
0062A1 00 00 00 00 00 00 
0062A7 00 00 00 00 00 00 
0062AD 00 00 00 00 00 00 
0062B3 00 00 00 00 
                           B   759    				
0062B7 000000              B   760    os_args_loc				dw24 0
0062BA 000000              B   761    os_args_pos_cache		dw24 0
                           B   762    
0062BD 000000              B   763    os_dir_block_cache  	dw24 0
0062C0 000000              B   764    os_extcmd_jmp_addr		dw24 0
                           B   765    
                           B   766    
0062C3 000000              B   767    script_dir				dw24 0
0062C6 000000              B   768    script_file_offset		dw24 0
0062C9 000000              B   769    script_length			dw24 0
                           B   770    
0062CC 00                  B   771    script_flags			db 0
                           B   772    
0062CD 00 00 00 00 00 00   B   773    if_name_txt				blkb max_if_chars+2,0
0062D3 00 00 00 00 00 00 
0062D9 00 00 00 00 00 00 
0062DF 00 00 00 00 00 00   B   774    if_value_txt			blkb max_if_chars+2,0
0062E5 00 00 00 00 00 00 
0062EB 00 00 00 00 00 00 
0062F1 00 00 00 00 00 00   B   775    if_label_txt			blkb max_if_chars+2,0
0062F7 00 00 00 00 00 00 
0062FD 00 00 00 00 00 00 
                           B   776    
                           B   777    
006303 0000                B   778    char_to_print			db 0,0	; zero terminat
                           B   779    
                           B   780    ;----------------------------------------------
                           B   781    ; Keyboard buffer and registers
                           B   782    ;----------------------------------------------
                           B   783    
006305 00 00 00 00 00 00   B   784    scancode_buffer			blkb 32,0
00630B 00 00 00 00 00 00 
006311 00 00 00 00 00 00 
006317 00 00 00 00 00 00 
00631D 00 00 00 00 00 00 
006323 00 00 
                           B   785    
006325 00                  B   786    key_buf_wr_idx			db 0
006326 00                  B   787    key_buf_rd_idx			db 0
006327 00                  B   788    key_release_mode		db 0		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006328 00                  B   789    not_currently_used		db 0
006329 00                  B   790    key_mod_flags			db 0
00632A 00                  B   791    current_scancode		db 0
00632B 00                  B   792    current_asciicode		db 0
                           B   793    
                           B   794    ;----------------------------------------------
                           B   795    ; Mouse related registers
                           B   796    ;----------------------------------------------
                           B   797    
00632C 00                  B   798    mouse_id				db 0
00632D 00                  B   799    mouse_packet_size		db 0
                           B   800    
00632E 00 00 00 00         B   801    mouse_packet			blkb 4,0			; t
006332 00                  B   802    mouse_packet_index		db 0				;
006333 00                  B   803    mouse_buttons			db 0				;
006334 000000              B   804    mouse_disp_x			dw24 0				; c
006337 000000              B   805    mouse_disp_y			dw24 0				; c
00633A 00                  B   806    mouse_wheel				db 0				; m
00633B 00                  B   807    mouse_updated			db 0
                           B   808    
00633C 000000              B   809    mouse_window_size_x		dw24 0				; t
00633F 000000              B   810    mouse_window_size_y		dw24 0
006342 000000              B   811    mouse_abs_x				dw24 0
006345 000000              B   812    mouse_abs_y				dw24 0
006348 000000              B   813    mouse_disp_x_old		dw24 0
00634B 000000              B   814    mouse_disp_y_old		dw24 0
00634E 000000              B   815    mouse_disp_x_buffer		dw24 0
006351 000000              B   816    mouse_disp_y_buffer		dw24 0
006354 00                  B   817    mouse_new_window		db 0
                           B   818    
                           B   819    ;----------------------------------------------
       000061F5            B   820    first_os_var			equ cursor_y
006355 00                  B   821    last_os_var				db 0
                           B   822    ;----------------------------------------------
                           B   823    
                           B   824    ;==============================================
                           B   825    ; Environment variables
                           B   826    ;==============================================
                           B   827    
006356 4552524F 523D3030   B   828    envar_list				db "ERROR=00",0
00635E 00 
00635F FF                  B   829    first_ext_ev_entry		db 0ffh
006360 00 00 00 00 00 00   B   830    						blkb envar_buffer_size,
006366 00 00 00 00 00 00 
00636C 00 00 00 00 00 00 
006372 00 00 00 00 00 00 
006378 00 00 00 00 00 00 
00637E 00 00 00 00 00 00 
006384 00 00 00 00 00 00 
00638A 00 00 00 00 00 00 
006390 00 00 00 00 00 00 
006396 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00639C 00 00 00 00 00 00 
0063A2 00 00 00 00 00 00 
0063A8 00 00 00 00 00 00 
0063AE 00 00 00 00 00 00 
0063B4 00 00 00 00 00 00 
0063BA 00 00 00 00 00 00 
0063C0 00 00 00 00 00 00 
0063C6 00 00 00 00 00 00 
0063CC 00 00 00 00 00 00 
0063D2 00 00 00 00 00 00 
0063D8 00 00 00 00 00 00 
0063DE 00 00 00 00 00 00 
0063E4 00 00 00 00 00 00 
0063EA 00 00 00 00 00 00 
0063F0 00 00 00 00 00 00 
0063F6 00 00 00 00 00 00 
0063FC 00 00 00 00 00 00 
006402 00 00 00 00 00 00 
006408 00 00 00 00 00 00 
00640E 00 00 00 00 00 00 
006414 00 00 00 00 00 00 
00641A 00 00 00 00 00 00 
006420 00 00 00 00 00 00 
006426 00 00 00 00 00 00 
00642C 00 00 00 00 00 00 
006432 00 00 00 00 00 00 
006438 00 00 00 00 00 00 
00643E 00 00 00 00 00 00 
006444 00 00 00 00 00 00 
00644A 00 00 00 00 00 00 
006450 00 00 00 00 00 00 
006456 00 00 00 00 00 00 
00645C 00 00 00 00 
                           B   831    
006460 5F6300              B   832    envar_top_loc			dw24 first_ext_ev_entry
                           B   833    
                           B   834    ;==============================================
                           B   835    
                           B     0    	include		'phil_font_packed.asm'			006463                     B     1    packed_font_start
006463 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
00646B 3C3C1800 181800EE 
006473 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
00647B 6CFE6C6C 00187EE0 
006483 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
00648B 3870E6C6 0078ECEC 
006493 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
00649B 01000518 30016003 
0064A3 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
0064AB 18300010 5438FE38 
0064B3 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
0064BB 18010007 38387001 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
0064C3 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
0064CB 0000060E 1C3870E0 
0064D3 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
0064DB 00387801 38047C00 
0064E3 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
0064EB FE0C180C 0ECE7C00 
0064F3 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
0064FB FEE0FC01 0E03FC00 
006503 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
00650B FE060C18 01380300 
006513 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
00651B 7C01CE03 7E0E7C01 
006523 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
00652B 00033030 00303060 
006533 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
00653B 00037E00 7E010003 
006543 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
00654B 7CEE0E3C 38003800 
006553 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
00655B 7CE6E6FE 01E60300 
006563 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
00656B 7CE601E0 03E67C00 
006573 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
00657B E0F8E0E0 FE00FEE0 
006583 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
00658B E0EEE6E6 7C0001E6 
006593 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
00659B 38057C00 7E011C04 
0065A3 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
0065AB E6030001 E006FE00 
0065B3 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
0065BB E6F6FEFE EEE6E600 
0065C3 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
0065CB E603FCE0 E0007C01 
0065D3 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
0065DB E603FCE6 E6007CEE 
0065E3 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
0065EB 38060001 E6067C00 
0065F3 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
0065FB 04D6FE6C 00E6E66C 
006603 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
00660B 7E06FC00 FE0E1C38 
006613 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
00661B 3C00C0E0 70381C0E 
006623 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
00662B 10386CC6 01000BFE 
006633 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
00663B E67E0000 E0E0FCE6 
006643 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
00664B 037C0000 06067EE6 
006653 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
00665B E07C0000 3E70FC01 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006663 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
00666B 7E067C00 E0E0FC01 
006673 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
00667B 387C0000 1C00011C 
006683 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
00668B EE000078 0138047C 
006693 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
00669B 010003FC 01E60401 
0066A3 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
0066AB 0003FCE6 E6FCE0E0 
0066B3 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
0066BB 0000DCE6 01E00301 
0066C3 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
0066CB 00387E01 38031E01 
0066D3 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
0066DB 0301E603 6C380100 
0066E3 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
0066EB 03E67C38 7CE60100 
0066F3 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
0066FB 00FE1C38 70FE003C 
006703 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
00670B 18070078 18180C18 
006713 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
00671B 0501FE07 0100FF01 
006723 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
00672B BC010029 7CC6BAA2 
006733 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
00673B 060100FF 0100FF01 
006743 009C                B    48                    db 000h,09Ch
006745                     B    49    packed_font_end
                           A  3254    
006745 00 00 00 00 00 00   A  3255    sector_buffer	blkb 512,0
00674B 00 00 00 00 00 00 
006751 00 00 00 00 00 00 
006757 00 00 00 00 00 00 
00675D 00 00 00 00 00 00 
006763 00 00 00 00 00 00 
006769 00 00 00 00 00 00 
00676F 00 00 00 00 00 00 
006775 00 00 00 00 00 00 
00677B 00 00 00 00 00 00 
006781 00 00 00 00 00 00 
006787 00 00 00 00 00 00 
00678D 00 00 00 00 00 00 
006793 00 00 00 00 00 00 
006799 00 00 00 00 00 00 
00679F 00 00 00 00 00 00 
0067A5 00 00 00 00 00 00 
0067AB 00 00 00 00 00 00 
0067B1 00 00 00 00 00 00 
0067B7 00 00 00 00 00 00 
0067BD 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0067C3 00 00 00 00 00 00 
0067C9 00 00 00 00 00 00 
0067CF 00 00 00 00 00 00 
0067D5 00 00 00 00 00 00 
0067DB 00 00 00 00 00 00 
0067E1 00 00 00 00 00 00 
0067E7 00 00 00 00 00 00 
0067ED 00 00 00 00 00 00 
0067F3 00 00 00 00 00 00 
0067F9 00 00 00 00 00 00 
0067FF 00 00 00 00 00 00 
006805 00 00 00 00 00 00 
00680B 00 00 00 00 00 00 
006811 00 00 00 00 00 00 
006817 00 00 00 00 00 00 
00681D 00 00 00 00 00 00 
006823 00 00 00 00 00 00 
006829 00 00 00 00 00 00 
00682F 00 00 00 00 00 00 
006835 00 00 00 00 00 00 
00683B 00 00 00 00 00 00 
006841 00 00 00 00 00 00 
006847 00 00 00 00 00 00 
00684D 00 00 00 00 00 00 
006853 00 00 00 00 00 00 
006859 00 00 00 00 00 00 
00685F 00 00 00 00 00 00 
006865 00 00 00 00 00 00 
00686B 00 00 00 00 00 00 
006871 00 00 00 00 00 00 
006877 00 00 00 00 00 00 
00687D 00 00 00 00 00 00 
006883 00 00 00 00 00 00 
006889 00 00 00 00 00 00 
00688F 00 00 00 00 00 00 
006895 00 00 00 00 00 00 
00689B 00 00 00 00 00 00 
0068A1 00 00 00 00 00 00 
0068A7 00 00 00 00 00 00 
0068AD 00 00 00 00 00 00 
0068B3 00 00 00 00 00 00 
0068B9 00 00 00 00 00 00 
0068BF 00 00 00 00 00 00 
0068C5 00 00 00 00 00 00 
0068CB 00 00 00 00 00 00 
0068D1 00 00 00 00 00 00 
0068D7 00 00 00 00 00 00 
0068DD 00 00 00 00 00 00 
0068E3 00 00 00 00 00 00 
0068E9 00 00 00 00 00 00 
0068EF 00 00 00 00 00 00 
0068F5 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0068FB 00 00 00 00 00 00 
006901 00 00 00 00 00 00 
006907 00 00 00 00 00 00 
00690D 00 00 00 00 00 00 
006913 00 00 00 00 00 00 
006919 00 00 00 00 00 00 
00691F 00 00 00 00 00 00 
006925 00 00 00 00 00 00 
00692B 00 00 00 00 00 00 
006931 00 00 00 00 00 00 
006937 00 00 00 00 00 00 
00693D 00 00 00 00 00 00 
006943 00 00 
                           A  3256    
006945 00 00 00 00 00 00   A  3257    scratch_pad		blkb 256,0
00694B 00 00 00 00 00 00 
006951 00 00 00 00 00 00 
006957 00 00 00 00 00 00 
00695D 00 00 00 00 00 00 
006963 00 00 00 00 00 00 
006969 00 00 00 00 00 00 
00696F 00 00 00 00 00 00 
006975 00 00 00 00 00 00 
00697B 00 00 00 00 00 00 
006981 00 00 00 00 00 00 
006987 00 00 00 00 00 00 
00698D 00 00 00 00 00 00 
006993 00 00 00 00 00 00 
006999 00 00 00 00 00 00 
00699F 00 00 00 00 00 00 
0069A5 00 00 00 00 00 00 
0069AB 00 00 00 00 00 00 
0069B1 00 00 00 00 00 00 
0069B7 00 00 00 00 00 00 
0069BD 00 00 00 00 00 00 
0069C3 00 00 00 00 00 00 
0069C9 00 00 00 00 00 00 
0069CF 00 00 00 00 00 00 
0069D5 00 00 00 00 00 00 
0069DB 00 00 00 00 00 00 
0069E1 00 00 00 00 00 00 
0069E7 00 00 00 00 00 00 
0069ED 00 00 00 00 00 00 
0069F3 00 00 00 00 00 00 
0069F9 00 00 00 00 00 00 
0069FF 00 00 00 00 00 00 
006A05 00 00 00 00 00 00 
006A0B 00 00 00 00 00 00 
006A11 00 00 00 00 00 00 
006A17 00 00 00 00 00 00 
006A1D 00 00 00 00 00 00 
006A23 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     22:46:07     page: 254


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006A29 00 00 00 00 00 00 
006A2F 00 00 00 00 00 00 
006A35 00 00 00 00 00 00 
006A3B 00 00 00 00 00 00 
006A41 00 00 00 00 
                           A  3258    
                           A  3259    ;==============================================
                           A  3260    	
006A45 00                  A  3261    os_max_addr		db 0							                           A  3262    	
                           A  3263    
                           A  3264    ;==============================================
                           A  3265    
                           A  3266    				end	
                           A  3267    				
                           A  3268    ;==============================================
                           A  3269    	


Errors: 0
Warnings: 0
Lines Assembled: 12683
