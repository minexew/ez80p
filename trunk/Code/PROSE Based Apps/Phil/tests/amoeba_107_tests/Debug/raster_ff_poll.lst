Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     14:25:01     page:   1


PC     Object              I  Line    Source 
                           A     1    ;raster test - simple polling of flip/flop
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    
       00000109            A     5    amoeba_version_req	equ	109h			; 0 = d
       00000031            A     6    prose_version_req	equ 31h				; 0 = d
       00000001            A     7    ADL_mode			equ 1				; 0 if 
       00010000            A     8    load_location		equ 10000h			; anywh
                           A     9    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     14:25:01     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       00000081            B    43    TMR0_DR_L		equ 081h
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;-- EZ80P Hardware equates --------------------
                           B    61    
       00000000            B    62    port_pic_data  			equ 000h
       00000001            B    63    port_pic_ctrl			equ 001h
       00000001            B    64    port_hw_flags			equ 001h
       00000002            B    65    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    66    port_keyboard_data		equ 002h
       00000003            B    67    port_sdc_data		 	equ 003h	
       00000004            B    68    port_memory_paging		equ 004h
       00000005            B    69    port_irq_ctrl			equ 005h
       00000006            B    70    port_nmi_ack			equ 006h
       00000007            B    71    port_ps2_ctrl			equ 007h
       00000008            B    72    port_selector			equ 008h
       00000006            B    73    port_mouse_data			equ 006h
       00000009            B    74    port_clear_flags		equ 009h
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00000000            B    86    sysram_addr				equ 0000000h
       00800000            B    87    vram_a_addr				equ 0800000h
       00C00000            B    88    vram_b_addr				equ 0c00000h
                           B    89    
                           B    90    ;-- Hardware registers ------------------------
                           B    91    
       00FF0000            B    92    hw_palette				equ 0ff0000h
       00FF0800            B    93    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    94    hw_video_parameters		equ 0ff1000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     14:25:01     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       00FF1400            B    95    hw_audio_registers		equ 0ff1400h
       00FF1800            B    96    hw_video_settings		equ 0ff1800h
                           B    97    
       00FF1000            B    98    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    99    bitmap_parameters		equ hw_video_parameters
                           B   100    
       00FF1800            B   101    video_control			equ hw_video_settings+0
       00FF1801            B   102    sprite_control			equ hw_video_settings+0
       00FF1802            B   103    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   104    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   105    right_border_position	equ hw_video_settings+0
                           B   106    
                           B   107    ;----------------------------------------------
                           B   108    
       00000A00            B   109    os_start 	equ 0a00h
                           B   110    
       00000A14            B   111    prose_return equ os_start+14h
       00000A20            B   112    prose_kernal equ os_start+20h
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    ; Kernal Jump Table values for mode PROSE
                           B   116    ;----------------------------------------------
                           B   117    		
       00000000            B   118    kr_mount_volumes				equ 00h	
       00000001            B   119    kr_get_device_info				equ 01h	
       00000002            B   120    kr_check_volume_format			equ 02h	
       00000003            B   121    kr_change_volume				equ 03h	
       00000004            B   122    kr_get_volume_info				equ 04h	
       00000005            B   123    kr_format_device				equ 05h	
       00000006            B   124    kr_make_dir						equ 06h
                           B   125    
       00000007            B   126    kr_change_dir					equ 07h	
       00000008            B   127    kr_parent_dir					equ 08h	
       00000009            B   128    kr_root_dir						equ 09h
       0000000A            B   129    kr_delete_dir					equ 0ah
       0000000B            B   130    kr_find_file					equ 0bh
       0000000C            B   131    kr_set_file_pointer				equ 0ch
       0000000D            B   132    kr_set_load_length				equ 0dh
       0000000E            B   133    kr_read_file					equ 0eh
                           B   134    
       0000000F            B   135    kr_erase_file					equ 0fh
       00000010            B   136    kr_rename_file					equ 10h
       00000011            B   137    kr_create_file					equ 11h
       00000012            B   138    kr_write_file					equ 12h
       00000013            B   139    kr_get_total_sectors			equ 13h
       00000014            B   140    kr_dir_list_first_entry			equ 14h
       00000015            B   141    kr_dir_list_get_entry			equ 15h
       00000016            B   142    kr_dir_list_next_entry			equ 16h
                           B   143    
       00000017            B   144    kr_read_sector					equ 17h
       00000018            B   145    kr_write_sector					equ 18h
       00000019            B   146    kr_file_sector_list				equ 19h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     14:25:01     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       0000001A            B   147    kr_get_dir_cluster				equ 1ah
       0000001B            B   148    kr_set_dir_cluster				equ 1bh
       0000001C            B   149    kr_get_dir_name					equ 1ch
       0000001D            B   150    kr_wait_key						equ 1dh
       0000001E            B   151    kr_get_key						equ 1eh
                           B   152    
       0000001F            B   153    kr_get_key_mod_flags			equ 1fh
       00000020            B   154    kr_serial_receive_header		equ 20h
       00000021            B   155    kr_serial_receive_file			equ 21h
       00000022            B   156    kr_serial_send_file				equ 22h
       00000023            B   157    kr_serial_tx_byte				equ 23h
       00000024            B   158    kr_serial_rx_byte				equ 24h
                           B   159    
       00000025            B   160    kr_print_string					equ 25h
       00000026            B   161    kr_clear_screen					equ 26h
       00000027            B   162    kr_wait_vrt						equ 27h
       00000028            B   163    kr_set_cursor_position			equ 28h
       00000029            B   164    kr_plot_char					equ 29h
       0000002A            B   165    kr_set_pen						equ 2ah
       0000002B            B   166    kr_background_colours			equ 2bh
       0000002C            B   167    kr_draw_cursor					equ 2ch
       0000002D            B   168    kr_get_pen						equ 2dh
       0000002E            B   169    kr_scroll_up					equ 2eh
       0000002F            B   170    kr_os_display					equ 2fh
                           B   171    
       00000030            B   172    kr_get_display_size				equ 30h	
       00000030            B   173    kr_get_video_mode				equ 30h	;prefer
                           B   174    
       00000031            B   175    kr_get_charmap_addr_xy			equ 31h
       00000032            B   176    kr_get_cursor_position			equ 32h
                           B   177    
       00000033            B   178    kr_set_envar					equ 33h
       00000034            B   179    kr_get_envar					equ 34h
       00000035            B   180    kr_delete_envar					equ 35h
                           B   181    
       00000036            B   182    kr_set_mouse_window				equ 36h
       00000037            B   183    kr_get_mouse_position			equ 37h
       00000038            B   184    kr_get_mouse_motion				equ 38h
                           B   185    
       00000039            B   186    kr_time_delay					equ 39h
       0000003A            B   187    kr_compare_strings				equ 3ah
       0000003B            B   188    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   189    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   190    kr_get_string					equ 3dh
                           B   191    
       0000003E            B   192    kr_get_version					equ 3eh
       0000003F            B   193    kr_dont_store_registers			equ 3fh
       00000040            B   194    kr_get_font_info				equ 40h
       00000041            B   195    kr_read_rtc						equ 41h
       00000042            B   196    kr_write_rtc					equ 42h
                           B   197    
       00000043            B   198    kr_get_keymap_location			equ 43h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     14:25:01     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       00000044            B   199    kr_get_os_high_mem				equ 44h
                           B   200    
       00000045            B   201    kr_play_audio					equ 45h
       00000046            B   202    kr_disable_audio				equ 46h
       00000047            B   203    kr_get_joysticks				equ 47h
       00000048            B   204    kr_set_video_mode				equ 48h
       00000049            B   205    kr_set_cursor_image				equ 49h
       0000004A            B   206    kr_remove_cursor				equ 4ah
       0000004B            B   207    kr_char_to_font				equ 4bh
                           B   208    
                           B   209    ;----------------------------------------------
                           B   210    ; Standard PROSE executable header
                           B   211    ;----------------------------------------------
                           B   212    
                           B   213    
                           B   214    	IF ADL_mode = 0
                           B   215    		org load_location&0ffffh	; if Z80 mo
                           B   216    	ELSE
010000                     B   217    		org load_location			; otherwise
                           B   218    	ENDIF
                           B   219    	
                           B   220    		.assume ADL = 1				; All PROSE
                           B   221    
010000 18 0E               B   222    		jr skip_header				; $0 - Jump
010002 50524F              B   223    		db 'PRO'					; $2 - ASCI
010005 000001              B   224    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   225    		dw24 0						; $8 - If >
01000B 3100                B   226    		dw prose_version_req		; $B - If >
01000D 0901                B   227    		dw amoeba_version_req		; $D - If >
01000F 01                  B   228    		db ADL_mode					; $F - Z80 
                           B   229    
010010                     B   230    skip_header
                           B   231    	
                           B   232    	IF ADL_mode = 0 
                           B   233    		
                           B   234    mbase_offset equ load_location & 0ff0000h
                           B   235    
                           B   236    		ld a,load_location/65536	; Additiona
                           B   237    		ld MB,a						; Set MBASE
                           B   238    		jp.sis go_z80_mode			; switches 
                           B   239    
                           B   240    go_z80_mode
                           B   241    
                           B   242    		.assume ADL = 0
                           B   243    
                           B   244    	ENDIF
                           B   245    	
                           B   246    ;----------------------------------------------
                           B   247    	
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)08-Aug-11     14:25:01     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\AMOEBA~1\src\raster_ff_poll.asm
010010 3E90                A    14    			ld a,90h
010012 320518FF            A    15    			ld (0ff1805h),a
010016 3E00                A    16    			ld a,0
010018 320618FF            A    17    			ld (0ff1806h),a
                           A    18    			
01001C 3E60                A    19    			ld a,01100000b
01001E ED3909              A    20    			out0 (9),a					;clear 
010021 ED3905              A    21    			out0 (5),a					;ensure
                           A    22    			
010024 ED3805              A    23    wait_rast	in0 a,(5)					;raster
010027 CB6F                A    24    			bit 5,a
010029 28 19               A    25    			jr z,test_key
01002B 217F0700            A    26    			ld hl,77fh
01002F 220000FF            A    27    			ld (hw_palette),hl			;change
010033 3E20                A    28    			ld a,00100000b
010035 ED3909              A    29    			out0 (9),a					;clear 
010038 0664                A    30    			ld b,100
01003A 10 FE               A    31    lp1			djnz lp1			
01003C 21000000            A    32    			ld hl,0	
010040 220000FF            A    33    			ld (hw_palette),hl			;set ba
                           A    34    			
                           A    35    			
010044 3E1E                A    36    test_key	ld a,kr_get_key
010046 5BCD200A 00         A    37    			call.lil prose_kernal
01004B FE76                A    38    			cp 76h
01004D 20 D5               A    39    			jr nz,wait_rast
                           A    40    			
01004F AF                  A    41    			xor a
010050 5BC3140A 00         A    42    			jp.lil prose_return
                           A    43    			
                           A    44    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 292
