Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ;----------------------------------------------
                           A     3    
       00000000            A     4    amoeba_version_req	equ	0				; 0 = d
       00000021            A     5    prose_version_req	equ 21h				; 0 = d
       00000001            A     6    ADL_mode			equ 1				; 0 if 
       00010000            A     7    load_location		equ 10000h			; anywh
                           A     8    
                           B     0    			include	'PROSE_header.asm'
                           B     1    
                           B     2    ;----------------------------------------------
                           B     3    
                           C     0    include "ez80_cpu_equates.asm"
                           C     1    ;--- EZ80 Internal Ports ----------------------
                           C     2    
       0000009A            C     3    PB_DR			equ 09ah
       0000009B            C     4    PB_DDR			equ 09bh
       0000009C            C     5    PB_ALT1			equ 09ch
       0000009D            C     6    PB_ALT2			equ 09dh
                           C     7    
       0000009E            C     8    PC_DR			equ 09eh
       0000009F            C     9    PC_DDR			equ 09fh
       000000A0            C    10    PC_ALT1			equ 0a0h
       000000A1            C    11    PC_ALT2			equ 0a1h
                           C    12    
       000000A2            C    13    PD_DR			equ 0a2h
       000000A3            C    14    PD_DDR			equ 0a3h
       000000A4            C    15    PD_ALT1			equ 0a4h
       000000A5            C    16    PD_ALT2			equ 0a5h
                           C    17    
       000000C0            C    18    UART0_RBR		equ 0c0h
       000000C0            C    19    UART0_THR		equ 0c0h
       000000C0            C    20    UART0_BRG_L		equ 0c0h
       000000C1            C    21    UART0_BRG_H		equ 0c1h
       000000C1            C    22    UART0_IER		equ 0c1h
       000000C2            C    23    UART0_FCTL		equ 0c2h
       000000C3            C    24    UART0_LCTL		equ 0c3h
       000000C4            C    25    UART0_MCTL		equ 0c4h
       000000C5            C    26    UART0_LSR		equ 0c5h
       000000C6            C    27    UART0_MSR		equ 0c6h
                           C    28    
       000000A8            C    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            C    30    CS0_UBR			equ 0a9h
       000000AA            C    31    CS0_CTL			equ 0aah			
       000000AB            C    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            C    33    CS1_UBR			equ 0ach
       000000AD            C    34    CS1_CTL			equ 0adh
       000000AE            C    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            C    36    CS2_UBR			equ 0afh
       000000B0            C    37    CS2_CTL			equ 0b0h
       000000B1            C    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            C    39    CS3_UBR			equ 0b2h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       000000B3            C    40    CS3_CTL			equ 0b3h
                           C    41    
       00000080            C    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            C    43    TMR0_DR_L		equ 081h
       00000081            C    44    TMR0_RR_L		equ 081h
       00000082            C    45    TMR0_DR_H		equ 082h
       00000082            C    46    TMR0_RR_H		equ 082h
       00000092            C    47    TMR_ISS			equ 092h
                           C    48    
       00000083            C    49    TMR1_CTL		equ 083h 
       00000084            C    50    TMR1_RR_L		equ 084h
       00000085            C    51    TMR1_RR_H		equ 085h
                           C    52    
       000000ED            C    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            C    54    RTC_ACTRL		equ 0ech
       000000E0            C    55    RTC_SEC			equ 0e0h
       000000E1            C    56    RTC_MIN			equ 0e1h
       000000E2            C    57    RTC_HRS			equ 0e2h
       000000E3            C    58    RTC_DOW			equ 0e3h
       000000E4            C    59    RTC_DOM			equ 0e4h
       000000E5            C    60    RTC_MON			equ 0e5h
       000000E6            C    61    RTC_YR			equ 0e6h
       000000E7            C    62    RTC_CEN			equ 0e7h
                           C    63    
                           C    64    ;----------------------------------------------
                           B     5    
                           C     0    include "amoeba_hardware_equates.asm"
                           C     1    ;-- AMOEBA Hardware equates -------------------
                           C     2    
       00000000            C     3    port_pic_data  			equ 000h
       00000001            C     4    port_pic_ctrl			equ 001h
       00000001            C     5    port_hw_flags			equ 001h
       00000002            C     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            C     7    port_keyboard_data		equ 002h
       00000003            C     8    port_sdc_data		 	equ 003h	
       00000004            C     9    port_memory_paging		equ 004h
       00000005            C    10    port_irq_ctrl			equ 005h
       00000005            C    11    port_irq_flags			equ 005h
       00000006            C    12    port_nmi_ack			equ 006h
       00000007            C    13    port_ps2_ctrl			equ 007h
       00000008            C    14    port_selector			equ 008h
       00000006            C    15    port_mouse_data			equ 006h
       00000009            C    16    port_clear_flags		equ 009h
                           C    17    
       00000000            C    18    sdc_power				equ 0		;(port_sd_c
       00000001            C    19    sdc_cs					equ 1		;(port_sd_c
       00000002            C    20    sdc_speed				equ 2 		;(port_sd_c
                           C    21    
       00000004            C    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            C    23    vrt						equ 5		;(port_hw_f
                           C    24    
                           C    25    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
                           C    26    ;-- Memory locations --------------------------
                           C    27    
       00000000            C    28    sysram_addr				equ 0000000h
       00800000            C    29    vram_a_addr				equ 0800000h
       00C00000            C    30    vram_b_addr				equ 0c00000h
                           C    31    
                           C    32    ;-- Hardware registers ------------------------
                           C    33    
       00FF0000            C    34    hw_palette				equ 0ff0000h
       00FF0800            C    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            C    36    hw_video_parameters		equ 0ff1000h
       00FF1400            C    37    hw_audio_registers		equ 0ff1400h
       00FF1800            C    38    hw_video_settings		equ 0ff1800h
                           C    39    
       00FF1000            C    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            C    41    bitmap_parameters		equ hw_video_parameters
                           C    42    
       00FF1800            C    43    video_control			equ hw_video_settings+0
       00FF1801            C    44    sprite_control			equ hw_video_settings+0
       00FF1802            C    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            C    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            C    47    right_border_position	equ hw_video_settings+0
       00FF1805            C    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            C    49    irq_line_hi				equ hw_video_settings+0
                           C    50    
                           C    51    ;----------------------------------------------
                           B     7    
                           C     0    include "prose_kernal_labels.asm"
                           C     1    ;--------- PROSE Kernal Routine labels --------
                           C     2    		
       00000000            C     3    kr_mount_volumes				equ 00h	
       00000001            C     4    kr_get_device_info				equ 01h	
       00000002            C     5    kr_check_volume_format			equ 02h	
       00000003            C     6    kr_change_volume				equ 03h	
       00000004            C     7    kr_get_volume_info				equ 04h	
       00000005            C     8    kr_format_device				equ 05h	
       00000006            C     9    kr_make_dir						equ 06h
                           C    10    
       00000007            C    11    kr_change_dir					equ 07h	
       00000008            C    12    kr_parent_dir					equ 08h	
       00000009            C    13    kr_root_dir						equ 09h
       0000000A            C    14    kr_delete_dir					equ 0ah
                           C    15    
       0000000B            C    16    kr_find_file					equ 0bh
       0000000B            C    17    kr_open_file					equ 0bh		; p
                           C    18    
       0000000C            C    19    kr_set_file_pointer				equ 0ch
       0000000D            C    20    kr_set_load_length				equ 0dh
       0000000E            C    21    kr_read_file					equ 0eh
                           C    22    
       0000000F            C    23    kr_erase_file					equ 0fh
       00000010            C    24    kr_rename_file					equ 10h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       00000011            C    25    kr_create_file					equ 11h
       00000012            C    26    kr_write_file					equ 12h
       00000013            C    27    kr_get_total_sectors			equ 13h
       00000014            C    28    kr_dir_list_first_entry			equ 14h
       00000015            C    29    kr_dir_list_get_entry			equ 15h
       00000016            C    30    kr_dir_list_next_entry			equ 16h
                           C    31    
       00000017            C    32    kr_read_sector					equ 17h
       00000018            C    33    kr_write_sector					equ 18h
       00000019            C    34    kr_file_sector_list				equ 19h
       0000001A            C    35    kr_get_dir_cluster				equ 1ah
       0000001B            C    36    kr_set_dir_cluster				equ 1bh
       0000001C            C    37    kr_get_dir_name					equ 1ch
       0000001D            C    38    kr_wait_key						equ 1dh
       0000001E            C    39    kr_get_key						equ 1eh
                           C    40    
       0000001F            C    41    kr_get_key_mod_flags			equ 1fh
       00000020            C    42    kr_serial_receive_header		equ 20h
       00000021            C    43    kr_serial_receive_file			equ 21h
       00000022            C    44    kr_serial_send_file				equ 22h
       00000023            C    45    kr_serial_tx_byte				equ 23h
       00000024            C    46    kr_serial_rx_byte				equ 24h
                           C    47    
       00000025            C    48    kr_print_string					equ 25h
       00000026            C    49    kr_clear_screen					equ 26h
       00000027            C    50    kr_wait_vrt						equ 27h
       00000028            C    51    kr_set_cursor_position			equ 28h
       00000029            C    52    kr_plot_char					equ 29h
       0000002A            C    53    kr_set_pen						equ 2ah
       0000002B            C    54    kr_background_colours			equ 2bh
       0000002C            C    55    kr_draw_cursor					equ 2ch
       0000002D            C    56    kr_get_pen						equ 2dh
       0000002E            C    57    kr_scroll_up					equ 2eh
       0000002F            C    58    kr_os_display					equ 2fh
                           C    59    
       00000030            C    60    kr_get_display_size				equ 30h	
       00000030            C    61    kr_get_video_mode				equ 30h		;pr
                           C    62    
       00000031            C    63    kr_get_charmap_addr_xy			equ 31h
       00000032            C    64    kr_get_cursor_position			equ 32h
                           C    65    
       00000033            C    66    kr_set_envar					equ 33h
       00000034            C    67    kr_get_envar					equ 34h
       00000035            C    68    kr_delete_envar					equ 35h
                           C    69    
       00000036            C    70    kr_init_mouse					equ 36h 	; n
                           C    71    
       00000037            C    72    kr_get_mouse_position			equ 37h
                           C    73    
       00000038            C    74    kr_get_mouse_motion				equ 38h
       00000038            C    75    kr_get_mouse_counters			equ 38h		;pr
                           C    76    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       00000039            C    77    kr_time_delay					equ 39h
       0000003A            C    78    kr_compare_strings				equ 3ah
       0000003B            C    79    kr_hex_byte_to_ascii			equ 3bh
       0000003C            C    80    kr_ascii_to_hex_word			equ 3ch
       0000003D            C    81    kr_get_string					equ 3dh
                           C    82    
       0000003E            C    83    kr_get_version					equ 3eh
       0000003F            C    84    kr_dont_store_registers			equ 3fh
       00000040            C    85    kr_get_font_info				equ 40h
       00000041            C    86    kr_read_rtc						equ 41h
       00000042            C    87    kr_write_rtc					equ 42h
                           C    88    
       00000043            C    89    kr_get_keymap_location			equ 43h
                           C    90    
       00000044            C    91    kr_get_os_high_mem				equ 44h
       00000044            C    92    kr_get_mem_base					equ 44h		
       00000044            C    93    kr_get_ram_base					equ 44h		;pr
                           C    94    
       00000045            C    95    kr_play_audio					equ 45h
       00000046            C    96    kr_disable_audio				equ 46h
       00000047            C    97    kr_get_joysticks				equ 47h
       00000048            C    98    kr_set_video_mode				equ 48h
       00000049            C    99    kr_set_cursor_image				equ 49h
       0000004A            C   100    kr_remove_cursor				equ 4ah
       0000004B            C   101    kr_char_to_font					equ 4bh
                           C   102    
       0000004C            C   103    kr_get_disk_sector_ptr			equ 4ch
       0000004D            C   104    kr_set_timeout					equ 4dh
       0000004E            C   105    kr_test_timeout					equ 4eh
       0000004F            C   106    kr_set_pointer					equ 4fh
       00000050            C   107    kr_allocate_ram					equ 50h
       00000051            C   108    kr_deallocate_ram				equ 51h
                           C   109    
       00000052            C   110    kr_get_mem_top					equ 52h
       00000052            C   111    kr_get_ram_top					equ 52h		;pr
                           C   112    
       00000053            C   113    kr_init_msec_counter			equ 53h
       00000054            C   114    kr_read_msec_counter			equ 54h
       00000055            C   115    kr_parse_path					equ 55h
                           C   116    
                           C   117    ;----------------------------------------------
                           B     9    
                           C     0    include "misc_system_equates.asm"
                           C     1    
                           C     2    ;-- System Equates ----------------------------
                           C     3    
       00000A00            C     4    os_location			equ 0a00h
                           C     5    
       00000A14            C     6    prose_return 		equ os_location + 14h
       00000A18            C     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            C     8    prose_relative_call	equ os_location + 1ch
                           C     9    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   6


PC     Object              I  Line    Source ..\..\..\..\..\Includes\misc_system_equates.asm
       00000A20            C    10    prose_kernal 		equ os_location + 20h
                           C    11    
                           C    12    ;----------------------------------------------
                           C    13    
                           C    14    ; Add to sprite locations to position a 0,0 spr
                           C    15    
       0000009A            C    16    x_display_offset	equ 09ah
       00000025            C    17    y_display_offset	equ 025h
                           C    18    
                           C    19    ;----------------------------------------------
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    prose_call : MACRO kernal_routine_required
                           B    15    	
                           B    16    	ld a,kernal_routine_required
                           B    17    	call.lil prose_kernal
                           B    18    
                           B    19    ENDMACRO prose_call
                           B    20    	
                           B    21    ;----------------------------------------------
                           B    22    ; Standard PROSE executable header
                           B    23    ;----------------------------------------------
                           B    24    
                           B    25    
                           B    26    	IF ADL_mode = 0
                           B    27    		org load_location&0ffffh	; if Z80 mo
                           B    28    	ELSE
010000                     B    29    		org load_location			; otherwise
                           B    30    	ENDIF
                           B    31    	
                           B    32    		.assume ADL = 1				; All PROSE
                           B    33    
010000 18 0E               B    34    		jr skip_header				; $0 - Jump
010002 50524F              B    35    		db 'PRO'					; $2 - ASCI
010005 000001              B    36    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B    37    		dw24 0						; $8 - If >
01000B 2100                B    38    		dw prose_version_req		; $B - If >
01000D 0000                B    39    		dw amoeba_version_req		; $D - If >
01000F 01                  B    40    		db ADL_mode					; $F - Z80 
                           B    41    
010010                     B    42    skip_header
                           B    43    	
                           B    44    	IF ADL_mode = 0 
                           B    45    		
                           B    46    mbase_offset equ load_location & 0ff0000h
                           B    47    
                           B    48    		ld a,load_location/65536	; Additiona
                           B    49    		ld MB,a						; Set MBASE
                           B    50    		jp.sis go_z80_mode			; switches 
                           B    51    
                           B    52    go_z80_mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   7


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
                           B    53    
                           B    54    		.assume ADL = 0
                           B    55    
                           B    56    	ENDIF
                           B    57    	
                           B    58    ;----------------------------------------------
                           B    59    	
                           A    10    
                           A    11    ;----------------------------------------------
                           A    12    
010010 21 9A 01 01         A    13    			ld hl,app_msg
010014 3E25                A    14    			ld a,kr_print_string
010016 5BCD200A 00         A    15    			call.lil prose_kernal
                           A    16    
                           A    17    
01001B 21 FB 01 01         A    18    mt_loop		ld hl,sysram_txt
01001F 3E25                A    19    			ld a,kr_print_string
010021 5BCD200A 00         A    20    			call.lil prose_kernal			
010026 21 5F 02 01         A    21    			ld hl,free_mem
01002A 01 A1 FC 06         A    22    			ld bc,7ff00h-free_mem			;do
01002E CD D8 00 01         A    23    			call test_mem
010032 C2 A1 00 01         A    24    			jp nz,fail
                           A    25    			
010036 CD B0 00 01         A    26    			call save_font
01003A 21 18 02 01         A    27    			ld hl,vrama_txt
01003E 3E25                A    28    			ld a,kr_print_string
010040 5BCD200A 00         A    29    			call.lil prose_kernal	
010045 21000080            A    30    			ld hl,vram_a_addr
010049 01000008            A    31    			ld bc,80000h
01004D CD D8 00 01         A    32    			call test_mem
010051 F5                  A    33    			push af
010052 CD C4 00 01         A    34    			call restore_font
010056 3E26                A    35    			ld a,kr_clear_screen
010058 5BCD200A 00         A    36    			call.lil prose_kernal
01005D F1                  A    37    			pop af
01005E C2 A1 00 01         A    38    			jp nz,fail
                           A    39    			
010062 21 2A 02 01         A    40    			ld hl,vramb_txt
010066 3E25                A    41    			ld a,kr_print_string
010068 5BCD200A 00         A    42    			call.lil prose_kernal	
01006D 210000C0            A    43    			ld hl,vram_b_addr
010071 01000008            A    44    			ld bc,80000h
010075 CD D8 00 01         A    45    			call test_mem
010079 C2 A1 00 01         A    46    			jp nz,fail
                           A    47    			
01007D 3A 5E 02 01         A    48    			ld a,(passes)
010081 3C                  A    49    			inc a
010082 32 5E 02 01         A    50    			ld (passes),a
010086 21 4A 02 01         A    51    			ld hl,pass_count_txt
01008A 5F                  A    52    			ld e,a
01008B 3E3B                A    53    			ld a,kr_hex_byte_to_ascii
01008D 5BCD200A 00         A    54    			call.lil prose_kernal
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\memory\src\memtest.asm
010092 21 3C 02 01         A    55    			ld hl,passes_txt
010096 3E25                A    56    			ld a,kr_print_string
010098 5BCD200A 00         A    57    			call.lil prose_kernal
                           A    58    
01009D C3 1B 00 01         A    59    			jp mt_loop
                           A    60    
                           A    61    ;----------------------------------------------
                           A    62    
0100A1 21 4F 02 01         A    63    fail		ld hl,fail_txt
0100A5 3E25                A    64    			ld a,kr_print_string
0100A7 5BCD200A 00         A    65    			call.lil prose_kernal
0100AC C3 AC 00 01         A    66    stop_here	jp stop_here
                           A    67    			
                           A    68    ;----------------------------------------------
                           A    69    
0100B0 3E40                A    70    save_font	ld a,kr_get_font_info
0100B2 5BCD200A 00         A    71    			call.lil prose_kernal
0100B7 DD2706              A    72    			ld hl,(ix+6)
0100BA DD0709              A    73    			ld bc,(ix+9)
0100BD 11 5F 02 01         A    74    			ld de,free_mem
0100C1 EDB0                A    75    			ldir
0100C3 C9                  A    76    			ret
                           A    77    			
0100C4                     A    78    restore_font
                           A    79    	
0100C4 3E40                A    80    			ld a,kr_get_font_info
0100C6 5BCD200A 00         A    81    			call.lil prose_kernal
0100CB 21 5F 02 01         A    82    			ld hl,free_mem
0100CF DD0709              A    83    			ld bc,(ix+9)
0100D2 DD1706              A    84    			ld de,(ix+6)
0100D5 EDB0                A    85    			ldir
0100D7 C9                  A    86    			ret
                           A    87    
                           A    88    ;----------------------------------------------
                           A    89    
0100D8                     A    90    test_mem
0100D8 1E00                A    91    			ld e,0								0100DA CD 60 01 01         A    92    			call fill_test
0100DE C0                  A    93    			ret nz
0100DF 1EFF                A    94    			ld e,255
0100E1 CD 60 01 01         A    95    			call fill_test
0100E5 C0                  A    96    			ret nz
0100E6 1E01                A    97    			ld e,1h
0100E8 CD 60 01 01         A    98    			call fill_test
0100EC C0                  A    99    			ret nz
0100ED 1E02                A   100    			ld e,2h
0100EF CD 60 01 01         A   101    			call fill_test
0100F3 C0                  A   102    			ret nz
0100F4 1E04                A   103    			ld e,4h
0100F6 CD 60 01 01         A   104    			call fill_test
0100FA C0                  A   105    			ret nz
0100FB 1E08                A   106    			ld e,8h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\memory\src\memtest.asm
0100FD CD 60 01 01         A   107    			call fill_test
010101 C0                  A   108    			ret nz
010102 1E10                A   109    			ld e,10h
010104 CD 60 01 01         A   110    			call fill_test
010108 C0                  A   111    			ret nz
010109 1E20                A   112    			ld e,20h
01010B CD 60 01 01         A   113    			call fill_test
01010F C0                  A   114    			ret nz
010110 1E40                A   115    			ld e,40h
010112 CD 60 01 01         A   116    			call fill_test
010116 C0                  A   117    			ret nz
010117 1E80                A   118    			ld e,80h
010119 CD 60 01 01         A   119    			call fill_test
01011D C0                  A   120    			ret nz
                           A   121    			
                           A   122    
01011E ED5B 58 02 01       A   123    			ld de,(my_seed)
010123 ED53 5B 02 01       A   124    			ld (seed),de
010128 E5                  A   125    			push hl
010129 C5                  A   126    			push bc
01012A CD 7A 01 01         A   127    rt1			call rand16							01012E 3A 5C 02 01         A   128    			ld a,(seed+1)
010132 77                  A   129    			ld (hl),a
010133 EDA1                A   130    			cpi
010135 EA 2A 01 01         A   131    			jp pe,rt1
010139 C1                  A   132    			pop bc
01013A E1                  A   133    			pop hl
                           A   134    
01013B ED5B 58 02 01       A   135    			ld de,(my_seed)
010140 ED53 5B 02 01       A   136    			ld (seed),de
010145 CD 7A 01 01         A   137    rt2			call rand16
010149 3A 5C 02 01         A   138    			ld a,(seed+1)
01014D EDA1                A   139    			cpi
01014F C0                  A   140    			ret nz
010150 EA 45 01 01         A   141    			jp pe,rt2
                           A   142    			
010154 ED5B 5B 02 01       A   143    			ld de,(seed)
010159 ED53 58 02 01       A   144    			ld (my_seed),de
01015E AF                  A   145    			xor a
01015F C9                  A   146    			ret
                           A   147    			
                           A   148    ;----------------------------------------------
                           A   149    			
                           A   150    			
010160 E5                  A   151    fill_test	push hl
010161 C5                  A   152    			push bc
010162 73                  A   153    mt1			ld (hl),e
010163 EDA1                A   154    			cpi								;us
010165 EA 62 01 01         A   155    			jp pe,mt1
010169 C1                  A   156    			pop bc
01016A E1                  A   157    			pop hl
                           A   158    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\memory\src\memtest.asm
01016B E5                  A   159    			push hl
01016C C5                  A   160    			push bc
01016D 7B                  A   161    			ld a,e
01016E EDA1                A   162    mt2			cpi
010170 20 05               A   163    			jr nz,bad
010172 EA 6E 01 01         A   164    			jp pe,mt2
010176 AF                  A   165    			xor a
010177 C1                  A   166    bad			pop bc
010178 E1                  A   167    			pop hl
010179 C9                  A   168    			ret
                           A   169    			
                           A   170    
                           A   171    ;----------------------------------------------
                           A   172    
                           A   173    
01017A E5                  A   174    rand16		push hl
01017B ED5B 5B 02 01       A   175    			ld	de,(seed)		
010180 7A                  A   176    			ld	a,d
010181 63                  A   177    			ld	h,e
010182 2EFD                A   178    			ld	l,253
010184 B7                  A   179    			or	a
010185 ED52                A   180    			sbc	hl,de
010187 DE00                A   181    			sbc	a,0
010189 ED52                A   182    			sbc	hl,de
01018B 1600                A   183    			ld	d,0
01018D 9A                  A   184    			sbc	a,d
01018E 5F                  A   185    			ld	e,a
01018F ED52                A   186    			sbc	hl,de
010191 30 01               A   187    			jr	nc,rand
010193 23                  A   188    			inc	hl
010194 22 5B 02 01         A   189    rand		ld	(seed),hl		
010198 E1                  A   190    			pop hl
010199 C9                  A   191    			ret
                           A   192    	
                           A   193    ;----------------------------------------------
                           A   194    
01019A 0B4D656D 6F727920   A   195    app_msg			db 11,"Memory test v0.01",11
0101A2 74657374 2076302E 
0101AA 30310B 
0101AD 2D2D2D2D 2D2D2D2D   A   196    				db "-----------------",11,11
0101B5 2D2D2D2D 2D2D2D2D 
0101BD 2D0B0B 
0101C0 28476172 62616765   A   197    				db "(Garbage will appear on scr
0101C8 2077696C 6C206170 
0101D0 70656172 206F6E20 
0101D8 73637265 656E2077 
0101E0 68696C73 74205652 
0101E8 414D2041 20697320 
0101F0 74657374 65642E29 
0101F8 0B0B00 
                           A   198    
0101FB 54657374 696E6720   A   199    sysram_txt		db "Testing (free) System RAM..
Zilog eZ80 Macro Assembler Version 4.1 (10060805)10-Sep-11     13:16:45     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\memory\src\memtest.asm
010203 28667265 65292053 
01020B 79737465 6D205241 
010213 4D2E2E0B 00 
010218 54657374 696E6720   A   200    vrama_txt		db "Testing VRAM A..",11,0
010220 5652414D 20412E2E 
010228 0B00 
01022A 54657374 696E6720   A   201    vramb_txt		db "Testing VRAM B..",11,0
010232 5652414D 20422E2E 
01023A 0B00 
                           A   202    
01023C 0B506173 7320636F   A   203    passes_txt		db 11,"Pass count: $"
010244 756E743A 2024 
01024A 78780B0B 00         A   204    pass_count_txt	db "xx",11,11,0
                           A   205    
01024F 4661696C 6564210B   A   206    fail_txt		db "Failed!",11,0
010257 00 
                           A   207    
010258 563412              A   208    my_seed			dw24 123456h
01025B 000000              A   209    seed			dw24 0
                           A   210    
01025E 00                  A   211    passes			db 0
                           A   212    
01025F 00                  A   213    free_mem		db 0		; dont put anything
                           A   214    
                           A   215    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 526
