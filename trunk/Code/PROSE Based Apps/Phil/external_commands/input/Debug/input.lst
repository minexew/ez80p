Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; Command: Input "string" envar - prompts for a
                           A     3    ; and sets an environment variable with the dat
                           A     4    ; scripts mainly) - V1.02 Phil 2011
                           A     5    
                           A     6    ;----------------------------------------------
                           A     7    
       00000000            A     8    amoeba_version_req	equ	0				; 0 = d
       00000000            A     9    prose_version_req	equ 0				; 0 = d
       00000001            A    10    ADL_mode			equ 1				; 0 if 
       00010000            A    11    load_location		equ 10000h			; anywh
                           A    12    
                           B     0    			include	'PROSE_header.asm'
                           B     1    
                           B     2    ;----------------------------------------------
                           B     3    
                           C     0    include "ez80_cpu_equates.asm"
                           C     1    ;--- EZ80 Internal Ports ----------------------
                           C     2    
       0000009A            C     3    PB_DR			equ 09ah
       0000009B            C     4    PB_DDR			equ 09bh
       0000009C            C     5    PB_ALT1			equ 09ch
       0000009D            C     6    PB_ALT2			equ 09dh
                           C     7    
       0000009E            C     8    PC_DR			equ 09eh
       0000009F            C     9    PC_DDR			equ 09fh
       000000A0            C    10    PC_ALT1			equ 0a0h
       000000A1            C    11    PC_ALT2			equ 0a1h
                           C    12    
       000000A2            C    13    PD_DR			equ 0a2h
       000000A3            C    14    PD_DDR			equ 0a3h
       000000A4            C    15    PD_ALT1			equ 0a4h
       000000A5            C    16    PD_ALT2			equ 0a5h
                           C    17    
       000000C0            C    18    UART0_RBR		equ 0c0h
       000000C0            C    19    UART0_THR		equ 0c0h
       000000C0            C    20    UART0_BRG_L		equ 0c0h
       000000C1            C    21    UART0_BRG_H		equ 0c1h
       000000C1            C    22    UART0_IER		equ 0c1h
       000000C2            C    23    UART0_FCTL		equ 0c2h
       000000C3            C    24    UART0_LCTL		equ 0c3h
       000000C4            C    25    UART0_MCTL		equ 0c4h
       000000C5            C    26    UART0_LSR		equ 0c5h
       000000C6            C    27    UART0_MSR		equ 0c6h
                           C    28    
       000000A8            C    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            C    30    CS0_UBR			equ 0a9h
       000000AA            C    31    CS0_CTL			equ 0aah			
       000000AB            C    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            C    33    CS1_UBR			equ 0ach
       000000AD            C    34    CS1_CTL			equ 0adh
       000000AE            C    35    CS2_LBR			equ 0aeh			;eZ80 wait 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       000000AF            C    36    CS2_UBR			equ 0afh
       000000B0            C    37    CS2_CTL			equ 0b0h
       000000B1            C    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            C    39    CS3_UBR			equ 0b2h
       000000B3            C    40    CS3_CTL			equ 0b3h
                           C    41    
       00000080            C    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            C    43    TMR0_DR_L		equ 081h
       00000081            C    44    TMR0_RR_L		equ 081h
       00000082            C    45    TMR0_DR_H		equ 082h
       00000082            C    46    TMR0_RR_H		equ 082h
       00000092            C    47    TMR_ISS			equ 092h
                           C    48    
       00000083            C    49    TMR1_CTL		equ 083h 
       00000084            C    50    TMR1_RR_L		equ 084h
       00000085            C    51    TMR1_RR_H		equ 085h
                           C    52    
       000000ED            C    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            C    54    RTC_ACTRL		equ 0ech
       000000E0            C    55    RTC_SEC			equ 0e0h
       000000E1            C    56    RTC_MIN			equ 0e1h
       000000E2            C    57    RTC_HRS			equ 0e2h
       000000E3            C    58    RTC_DOW			equ 0e3h
       000000E4            C    59    RTC_DOM			equ 0e4h
       000000E5            C    60    RTC_MON			equ 0e5h
       000000E6            C    61    RTC_YR			equ 0e6h
       000000E7            C    62    RTC_CEN			equ 0e7h
                           C    63    
                           C    64    ;----------------------------------------------
                           B     5    
                           B     6    
                           C     0    include "amoeba_hardware_equates.asm"
                           C     1    ;-- AMOEBA Hardware equates -------------------
                           C     2    
       00000000            C     3    port_pic_data  			equ 000h
       00000001            C     4    port_pic_ctrl			equ 001h
       00000001            C     5    port_hw_flags			equ 001h
       00000002            C     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            C     7    port_keyboard_data		equ 002h
       00000003            C     8    port_sdc_data		 	equ 003h	
       00000004            C     9    port_memory_paging		equ 004h
       00000005            C    10    port_irq_ctrl			equ 005h
       00000005            C    11    port_irq_flags			equ 005h
       00000006            C    12    port_nmi_ack			equ 006h
       00000007            C    13    port_ps2_ctrl			equ 007h
       00000008            C    14    port_selector			equ 008h
       00000006            C    15    port_mouse_data			equ 006h
       00000009            C    16    port_clear_flags		equ 009h
                           C    17    
       00000000            C    18    sdc_power				equ 0		;(port_sd_c
       00000001            C    19    sdc_cs					equ 1		;(port_sd_c
       00000002            C    20    sdc_speed				equ 2 		;(port_sd_c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
                           C    21    
       00000004            C    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            C    23    vrt						equ 5		;(port_hw_f
                           C    24    
                           C    25    
                           C    26    ;-- Memory locations --------------------------
                           C    27    
       00000000            C    28    sysram_addr				equ 0000000h
       00800000            C    29    vram_a_addr				equ 0800000h
       00C00000            C    30    vram_b_addr				equ 0c00000h
                           C    31    
                           C    32    ;-- Hardware registers ------------------------
                           C    33    
       00FF0000            C    34    hw_palette				equ 0ff0000h
       00FF0800            C    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            C    36    hw_video_parameters		equ 0ff1000h
       00FF1400            C    37    hw_audio_registers		equ 0ff1400h
       00FF1800            C    38    hw_video_settings		equ 0ff1800h
                           C    39    
       00FF1000            C    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            C    41    bitmap_parameters		equ hw_video_parameters
                           C    42    
       00FF1800            C    43    video_control			equ hw_video_settings+0
       00FF1801            C    44    sprite_control			equ hw_video_settings+0
       00FF1802            C    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            C    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            C    47    right_border_position	equ hw_video_settings+0
       00FF1805            C    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            C    49    irq_line_hi				equ hw_video_settings+0
                           C    50    
                           C    51    ;----------------------------------------------
                           B     8    
                           B     9    
                           C     0    include "prose_kernal_labels.asm"
                           C     1    ;--------- PROSE Kernal Routine labels --------
                           C     2    		
       00000000            C     3    kr_mount_volumes				equ 00h	
       00000001            C     4    kr_get_device_info				equ 01h	
       00000002            C     5    kr_check_volume_format			equ 02h	
       00000003            C     6    kr_change_volume				equ 03h	
       00000004            C     7    kr_get_volume_info				equ 04h	
       00000005            C     8    kr_format_device				equ 05h	
       00000006            C     9    kr_make_dir						equ 06h
                           C    10    
       00000007            C    11    kr_change_dir					equ 07h	
       00000008            C    12    kr_parent_dir					equ 08h	
       00000009            C    13    kr_root_dir						equ 09h
       0000000A            C    14    kr_delete_dir					equ 0ah
                           C    15    
       0000000B            C    16    kr_find_file					equ 0bh
       0000000B            C    17    kr_open_file					equ 0bh		; p
                           C    18    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       0000000C            C    19    kr_set_file_pointer				equ 0ch
       0000000D            C    20    kr_set_load_length				equ 0dh
       0000000E            C    21    kr_read_file					equ 0eh
                           C    22    
       0000000F            C    23    kr_erase_file					equ 0fh
       00000010            C    24    kr_rename_file					equ 10h
       00000011            C    25    kr_create_file					equ 11h
       00000012            C    26    kr_write_file					equ 12h
       00000013            C    27    kr_get_total_sectors			equ 13h
       00000014            C    28    kr_dir_list_first_entry			equ 14h
       00000015            C    29    kr_dir_list_get_entry			equ 15h
       00000016            C    30    kr_dir_list_next_entry			equ 16h
                           C    31    
       00000017            C    32    kr_read_sector					equ 17h
       00000018            C    33    kr_write_sector					equ 18h
       00000019            C    34    kr_file_sector_list				equ 19h
       0000001A            C    35    kr_get_dir_cluster				equ 1ah
       0000001B            C    36    kr_set_dir_cluster				equ 1bh
       0000001C            C    37    kr_get_dir_name					equ 1ch
       0000001D            C    38    kr_wait_key						equ 1dh
       0000001E            C    39    kr_get_key						equ 1eh
                           C    40    
       0000001F            C    41    kr_get_key_mod_flags			equ 1fh
       00000020            C    42    kr_serial_receive_header		equ 20h
       00000021            C    43    kr_serial_receive_file			equ 21h
       00000022            C    44    kr_serial_send_file				equ 22h
       00000023            C    45    kr_serial_tx_byte				equ 23h
       00000024            C    46    kr_serial_rx_byte				equ 24h
                           C    47    
       00000025            C    48    kr_print_string					equ 25h
       00000026            C    49    kr_clear_screen					equ 26h
       00000027            C    50    kr_wait_vrt						equ 27h
       00000028            C    51    kr_set_cursor_position			equ 28h
       00000029            C    52    kr_plot_char					equ 29h
       0000002A            C    53    kr_set_pen						equ 2ah
       0000002B            C    54    kr_background_colours			equ 2bh
       0000002C            C    55    kr_draw_cursor					equ 2ch
       0000002D            C    56    kr_get_pen						equ 2dh
       0000002E            C    57    kr_scroll_up					equ 2eh
       0000002F            C    58    kr_os_display					equ 2fh
                           C    59    
       00000030            C    60    kr_get_display_size				equ 30h	
       00000030            C    61    kr_get_video_mode				equ 30h		;pr
                           C    62    
       00000031            C    63    kr_get_charmap_addr_xy			equ 31h
       00000032            C    64    kr_get_cursor_position			equ 32h
                           C    65    
       00000033            C    66    kr_set_envar					equ 33h
       00000034            C    67    kr_get_envar					equ 34h
       00000035            C    68    kr_delete_envar					equ 35h
                           C    69    
       00000036            C    70    kr_init_mouse					equ 36h 	; n
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
                           C    71    
       00000037            C    72    kr_get_mouse_position			equ 37h
                           C    73    
       00000038            C    74    kr_get_mouse_motion				equ 38h
       00000038            C    75    kr_get_mouse_counters			equ 38h		;pr
                           C    76    
       00000039            C    77    kr_time_delay					equ 39h
       0000003A            C    78    kr_compare_strings				equ 3ah
       0000003B            C    79    kr_hex_byte_to_ascii			equ 3bh
       0000003C            C    80    kr_ascii_to_hex_word			equ 3ch
       0000003D            C    81    kr_get_string					equ 3dh
                           C    82    
       0000003E            C    83    kr_get_version					equ 3eh
       0000003F            C    84    kr_dont_store_registers			equ 3fh
       00000040            C    85    kr_get_font_info				equ 40h
       00000041            C    86    kr_read_rtc						equ 41h
       00000042            C    87    kr_write_rtc					equ 42h
                           C    88    
       00000043            C    89    kr_get_keymap_location			equ 43h
                           C    90    
       00000044            C    91    kr_get_os_high_mem				equ 44h
       00000044            C    92    kr_get_mem_base					equ 44h		
       00000044            C    93    kr_get_ram_base					equ 44h		;pr
                           C    94    
       00000045            C    95    kr_play_audio					equ 45h
       00000046            C    96    kr_disable_audio				equ 46h
       00000047            C    97    kr_get_joysticks				equ 47h
       00000048            C    98    kr_set_video_mode				equ 48h
       00000049            C    99    kr_set_cursor_image				equ 49h
       0000004A            C   100    kr_remove_cursor				equ 4ah
       0000004B            C   101    kr_char_to_font					equ 4bh
                           C   102    
       0000004C            C   103    kr_get_disk_sector_ptr			equ 4ch
       0000004D            C   104    kr_set_timeout					equ 4dh
       0000004E            C   105    kr_test_timeout					equ 4eh
       0000004F            C   106    kr_set_pointer					equ 4fh
       00000050            C   107    kr_allocate_ram					equ 50h
       00000051            C   108    kr_deallocate_ram				equ 51h
                           C   109    
       00000052            C   110    kr_get_mem_top					equ 52h
       00000052            C   111    kr_get_ram_top					equ 52h		;pr
                           C   112    
       00000053            C   113    kr_init_msec_counter			equ 53h
       00000054            C   114    kr_read_msec_counter			equ 54h
       00000055            C   115    kr_parse_path					equ 55h
                           C   116    
                           C   117    ;----------------------------------------------
                           B    11    
                           B    12    
                           C     0    include "misc_system_equates.asm"
                           C     1    
                           C     2    ;-- System Equates ----------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   6


PC     Object              I  Line    Source ..\..\..\..\..\Includes\misc_system_equates.asm
                           C     3    
       00000A00            C     4    os_location			equ 0a00h
                           C     5    
       00000A14            C     6    prose_return 		equ os_location + 14h
       00000A18            C     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            C     8    prose_relative_call	equ os_location + 1ch
                           C     9    
       00000A20            C    10    prose_kernal 		equ os_location + 20h
                           C    11    
                           C    12    ;----------------------------------------------
                           C    13    
                           C    14    ; Add to sprite locations to position a 0,0 spr
                           C    15    
       0000009A            C    16    x_display_offset	equ 09ah
       00000025            C    17    y_display_offset	equ 025h
                           C    18    
                           C    19    ;----------------------------------------------
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ; Standard PROSE executable header
                           B    18    ;----------------------------------------------
                           B    19    
                           B    20    
                           B    21    	IF ADL_mode = 0
                           B    22    		org load_location&0ffffh	; if Z80 mo
                           B    23    	ELSE
010000                     B    24    		org load_location			; otherwise
                           B    25    	ENDIF
                           B    26    	
                           B    27    		.assume ADL = 1				; All PROSE
                           B    28    
010000 18 0E               B    29    		jr skip_header				; $0 - Jump
010002 50524F              B    30    		db 'PRO'					; $2 - ASCI
010005 000001              B    31    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B    32    		dw24 0						; $8 - If >
01000B 0000                B    33    		dw prose_version_req		; $B - If >
01000D 0000                B    34    		dw amoeba_version_req		; $D - If >
01000F 01                  B    35    		db ADL_mode					; $F - Z80 
                           B    36    
010010                     B    37    skip_header
                           B    38    	
                           B    39    	IF ADL_mode = 0 
                           B    40    		
                           B    41    mbase_offset equ load_location & 0ff0000h
                           B    42    
                           B    43    		ld a,load_location/65536	; Additiona
                           B    44    		ld MB,a						; Set MBASE
                           B    45    		jp.sis go_z80_mode			; switches 
                           B    46    
                           B    47    go_z80_mode
                           B    48    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   7


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
                           B    49    		.assume ADL = 0
                           B    50    
                           B    51    	ENDIF
                           B    52    	
                           B    53    ;----------------------------------------------
                           B    54    	
                           A    14    
                           A    15    ;----------------------------------------------
                           A    16    
010010 CD 19 00 01         A    17    			call my_prog
                           A    18    			
010014 5BC3140A 00         A    19    			jp.lil prose_return
                           A    20    			
                           A    21    ;----------------------------------------------
                           A    22    ; App starts here..
                           A    23    ;----------------------------------------------
                           A    24    
010019 7E                  A    25    my_prog		ld a,(hl)					;if no 
01001A B7                  A    26    			or a
01001B 20 0D               A    27    			jr nz,got_args
                           A    28    			
01001D 3E25                A    29    			ld a,kr_print_string
01001F 21 5F 01 01         A    30    			ld hl,usage_txt
010023 5BCD200A 00         A    31    			call.lil prose_kernal
010028 AF                  A    32    			xor a
010029 C9                  A    33    			ret
                           A    34    			
01002A 7E                  A    35    got_args	ld a,(hl)					;is cha
01002B FE22                A    36    			cp 22h
01002D 20 49               A    37    			jr nz,bad_line
                           A    38    
01002F 23                  A    39    			inc hl
                           A    40    			
010030 11 C6 01 01         A    41    			ld de,prompt_string			;if so 
010034 0650                A    42    			ld b,80
010036 7E                  A    43    lp1			ld a,(hl)
010037 FE20                A    44    			cp 20h
010039 38 3D               A    45    			jr c,bad_line
01003B FE22                A    46    			cp 22h
01003D 28 07               A    47    			jr z,got_string
01003F 12                  A    48    			ld (de),a
010040 13                  A    49    			inc de
010041 23                  A    50    			inc hl
010042 10 F2               A    51    			djnz lp1
010044 18 32               A    52    			jr bad_line
                           A    53    			
010046 3E3A                A    54    got_string	ld a,':'					;add a 
010048 12                  A    55    			ld (de),a
010049 E5                  A    56    			push hl
01004A 3E25                A    57    			ld a,kr_print_string		;show p
01004C 21 C6 01 01         A    58    			ld hl,prompt_string
010050 5BCD200A 00         A    59    			call.lil prose_kernal
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\input\src\input.asm
010055 E1                  A    60    			pop hl
                           A    61    			
010056 23                  A    62    no_string	inc hl						;skip 2
010057 7E                  A    63    			ld a,(hl)
010058 B7                  A    64    			or a
010059 28 1D               A    65    			jr z,bad_line
01005B FE20                A    66    			cp ' '						;find a
01005D 20 F7               A    67    			jr nz,no_string
                           A    68    			
01005F 23                  A    69    fnspc		inc hl						;skip t
010060 7E                  A    70    			ld a,(hl)
010061 B7                  A    71    			or a
010062 28 14               A    72    			jr z,bad_line				;find n
010064 FE20                A    73    			cp ' '				
010066 28 F7               A    74    			jr z,fnspc
                           A    75    			
010068 0650                A    76    copy_envn	ld b,80
01006A 11 BB 00 01         A    77    			ld de,envar_name
01006E 7E                  A    78    fevn		ld a,(hl)
01006F FE21                A    79    			cp 21h
010071 38 09               A    80    			jr c,gotevn
010073 12                  A    81    			ld (de),a
010074 13                  A    82    			inc de
010075 23                  A    83    			inc hl
010076 10 F6               A    84    			djnz fevn
                           A    85    
010078 3E82                A    86    bad_line	ld a,82h					;bad da
01007A B7                  A    87    			or a
01007B C9                  A    88    			ret
                           A    89    
01007C 3E30                A    90    gotevn		ld a,kr_get_display_size
01007E 5BCD200A 00         A    91    			call.lil prose_kernal
010083 C5                  A    92    			push bc
010084 3E32                A    93    			ld a,kr_get_cursor_position
010086 5BCD200A 00         A    94    			call.lil prose_kernal
01008B D1                  A    95    			pop de
01008C 7A                  A    96    			ld a,d
01008D 90                  A    97    			sub b
01008E 5F                  A    98    			ld e,a						;max ch
01008F 1D                  A    99    			dec e
010090 21 0D 01 01         A   100    			ld hl,envar_value					010094 3E3D                A   101    			ld a,kr_get_string
010096 5BCD200A 00         A   102    			call.lil prose_kernal
01009B F5                  A   103    			push af
01009C 21 B9 00 01         A   104    			ld hl,new_line
0100A0 3E25                A   105    			ld a,kr_print_string
0100A2 5BCD200A 00         A   106    			call.lil prose_kernal
0100A7 F1                  A   107    			pop af
0100A8 C0                  A   108    			ret nz
                           A   109    			
0100A9 21 BB 00 01         A   110    			ld hl,envar_name
0100AD 11 0D 01 01         A   111    			ld de,envar_value
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\input\src\input.asm
0100B1 3E33                A   112    			ld a,kr_set_envar
0100B3 5BCD200A 00         A   113    			call.lil prose_kernal
0100B8 C9                  A   114    			ret
                           A   115    				
                           A   116    ;----------------------------------------------
                           A   117    
0100B9 0B00                A   118    new_line		db 11,0
                           A   119    
0100BB 00 00 00 00 00 00   A   120    envar_name		blkb 82,0
0100C1 00 00 00 00 00 00 
0100C7 00 00 00 00 00 00 
0100CD 00 00 00 00 00 00 
0100D3 00 00 00 00 00 00 
0100D9 00 00 00 00 00 00 
0100DF 00 00 00 00 00 00 
0100E5 00 00 00 00 00 00 
0100EB 00 00 00 00 00 00 
0100F1 00 00 00 00 00 00 
0100F7 00 00 00 00 00 00 
0100FD 00 00 00 00 00 00 
010103 00 00 00 00 00 00 
010109 00 00 00 00 
                           A   121    
01010D 00 00 00 00 00 00   A   122    envar_value		blkb 82,0
010113 00 00 00 00 00 00 
010119 00 00 00 00 00 00 
01011F 00 00 00 00 00 00 
010125 00 00 00 00 00 00 
01012B 00 00 00 00 00 00 
010131 00 00 00 00 00 00 
010137 00 00 00 00 00 00 
01013D 00 00 00 00 00 00 
010143 00 00 00 00 00 00 
010149 00 00 00 00 00 00 
01014F 00 00 00 00 00 00 
010155 00 00 00 00 00 00 
01015B 00 00 00 00 
                           A   123    
01015F 436F6D6D 616E643A   A   124    usage_txt		db 'Command: INPUT.EZP (v1.02) 
010167 20494E50 55542E45 
01016F 5A502028 76312E30 
010177 32292052 65717565 
01017F 73747320 64617461 
010187 20666F72 20656E76 
01018F 69726F6E 6D656E74 
010197 20766172 6961626C 
01019F 652E0B 
0101A2 55736167 6520203A   A   125    				db 'Usage  : INPUT ', 22h, 'str
0101AA 20494E50 55542022 
0101B2 73747269 6E672220 
0101BA 656E7661 725F6E61 
0101C2 6D650B00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:41:56     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\input\src\input.asm
                           A   126    
0101C6 00 00 00 00 00 00   A   127    prompt_string	blkb 82,0
0101CC 00 00 00 00 00 00 
0101D2 00 00 00 00 00 00 
0101D8 00 00 00 00 00 00 
0101DE 00 00 00 00 00 00 
0101E4 00 00 00 00 00 00 
0101EA 00 00 00 00 00 00 
0101F0 00 00 00 00 00 00 
0101F6 00 00 00 00 00 00 
0101FC 00 00 00 00 00 00 
010202 00 00 00 00 00 00 
010208 00 00 00 00 00 00 
01020E 00 00 00 00 00 00 
010214 00 00 00 00 
                           A   128    
                           A   129    ;----------------------------------------------
                           A   130    


Errors: 0
Warnings: 0
Lines Assembled: 436
