Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.3
                           A     2    ; -nomodsect -optspeed -noreduceopt -peephole -
                           A     3    ; -localcse -const=ROM 
                           A     4    	FILE	"..\MAIN.C"
                           A     5    	.assume ADL=1
                           A     6    	SEGMENT BSS
010AAE                     A     7    _GenericPnt2:
010AAE                     A     8    	DS	3
010AB1                     A     9    _TxtPnt:
010AB1                     A    10    	DS	3
010AB4                     A    11    _GenericPnt:
010AB4                     A    12    	DS	3
010AB7                     A    13    _K_A:
010AB7                     A    14    	DS	1
010AB8                     A    15    _K_B:
010AB8                     A    16    	DS	1
010AB9                     A    17    _K_C:
010AB9                     A    18    	DS	1
010ABA                     A    19    _K_E:
010ABA                     A    20    	DS	1
010ABB                     A    21    _K_HL:
010ABB                     A    22    	DS	2*1
010ABD                     A    23    _K_DE:
010ABD                     A    24    	DS	2*1
010ABF                     A    25    _K_xHL:
010ABF                     A    26    	DS	3
010AC2                     A    27    _K_xDE:
010AC2                     A    28    	DS	3
                           A    29    	SEGMENT STRSECT
0109AD                     A    30    L__0:
0109AD 5553453A 20504358   A    31    	DB	"USE: PCXVIEW [filename]"
0109B5 56494557 205B6669 
0109BD 6C656E61 6D655D 
0109C4 0A0D00              A    32    	DB	10,13,0
                           A    33    	SEGMENT DATA
011601                     A    34    _UseTxt:
011601 AD0901              A    35    	DW24	L__0
                           A    36    	SEGMENT STRSECT
0109C7                     A    37    L__1:
0109C7 46696C65 206E6F74   A    38    	DB	"File not found!"
0109CF 20666F75 6E6421 
0109D6 0A0D00              A    39    	DB	10,13,0
                           A    40    	SEGMENT DATA
011604                     A    41    _FileOpenError:
011604 C70901              A    42    	DW24	L__1
                           A    43    	SEGMENT STRSECT
0109D9                     A    44    L__2:
0109D9 496E7661 6C696420   A    45    	DB	"Invalid PCX file!"
0109E1 50435820 66696C65 
0109E9 21 
0109EA 0A0D00              A    46    	DB	10,13,0
                           A    47    	SEGMENT DATA
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   2


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
011607                     A    48    _NonPcxFile:
011607 D90901              A    49    	DW24	L__2
                           A    50    	SEGMENT STRSECT
0109ED                     A    51    L__3:
0109ED 47726170 68696373   A    52    	DB	"Graphics Resolution: "
0109F5 20526573 6F6C7574 
0109FD 696F6E3A 20 
010A02 00                  A    53    	DB	0
                           A    54    	SEGMENT DATA
01160A                     A    55    _PcxSize:
01160A ED0901              A    56    	DW24	L__3
                           A    57    	SEGMENT BSS
010AC5                     A    58    _Header:
010AC5                     A    59    	DS	128
                           A    60    	SEGMENT DATA
01160D                     A    61    _PntHeader:
01160D C50A01              A    62    	DW24	_Header
011610                     A    63    _VideoMem:
011610 000080              A    64    	DW24	8388608
011613                     A    65    _VideoMemTmp:
011613 0000C0              A    66    	DW24	12582912
                           A    67    	SEGMENT BSS
010B45                     A    68    _convBuf:
010B45                     A    69    	DS	4
010B49                     A    70    _MinX:
010B49                     A    71    	DS	2*1
010B4B                     A    72    _MinY:
010B4B                     A    73    	DS	2*1
010B4D                     A    74    _MaxX:
010B4D                     A    75    	DS	2*1
010B4F                     A    76    _MaxY:
010B4F                     A    77    	DS	2*1
010B51                     A    78    _XSize:
010B51                     A    79    	DS	2*1
010B53                     A    80    _YSize:
010B53                     A    81    	DS	2*1
010B55                     A    82    _StartX:
010B55                     A    83    	DS	2*1
010B57                     A    84    _StartY:
010B57                     A    85    	DS	2*1
010B59                     A    86    _VideoX:
010B59                     A    87    	DS	2*1
010B5B                     A    88    _VideoY:
010B5B                     A    89    	DS	2*1
010B5D                     A    90    _PosX:
010B5D                     A    91    	DS	2*1
010B5F                     A    92    _PosY:
010B5F                     A    93    	DS	2*1
010B61                     A    94    _PcxPalette:
010B61                     A    95    	DS	512
010D61                     A    96    _TmpPal:
010D61                     A    97    	DS	768
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   3


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A    98    	SEGMENT DATA
011616                     A    99    _PntPal:
011616 610D01              A   100    	DW24	_TmpPal
                           A   101    	SEGMENT BSS
011061                     A   102    _YOffset:
011061                     A   103    	DS	1440
                           A   104    ;    1	/*
                           A   105    ;    2		PCXVIEW: simple pcx viewer for PROS
                           A   106    ;    3		
                           A   107    ;    4		coded by Calogiuri Enzo Antonio for
                           A   108    ;    5	*/
                           A   109    ;    6	
                           A   110    ;    7	#include <String.h>
                           A   111    ;    8	
                           A   112    ;    9	#include "PROSE_Header.h"
                           A   113    ;   10	
                           A   114    ;   11	#define RGB2WORD(r,g,b)         ((unsig
                           A   115    ;   12	
                           A   116    ;   13	static char *UseTxt = "USE: PCXVIEW [fi
                           A   117    ;   14	static char *FileOpenError = "File not 
                           A   118    ;   15	static char *NonPcxFile = "Invalid PCX 
                           A   119    ;   16	static char *PcxSize = "Graphics Resolu
                           A   120    ;   17	
                           A   121    ;   18	static char *TxtPnt;
                           A   122    ;   19	static char Header[128];
                           A   123    ;   20	char *PntHeader = Header;
                           A   124    ;   21	char *VideoMem = (char *)0x0800000;
                           A   125    ;   22	char *VideoMemTmp = (char *)0x0C00000;
                           A   126    ;   23	char convBuf[4];
                           A   127    ;   24	short MinX, MinY, MaxX, MaxY;
                           A   128    ;   25	short XSize, YSize, StartX, StartY;
                           A   129    ;   26	short VideoX, VideoY, PosX, PosY;
                           A   130    ;   27	unsigned short PcxPalette[256];
                           A   131    ;   28	unsigned char TmpPal[256*3];
                           A   132    ;   29	unsigned char *PntPal = TmpPal;
                           A   133    ;   30	unsigned int YOffset[480];
                           A   134    	SEGMENT CODE
                           A   135    ;   31	
                           A   136    ;   32	void ShowMsg(const char *Txt);
                           A   137    ;   33	void Make_Short(unsigned char a, unsign
                           A   138    ;   34	void uitoa(unsigned int val, char *stri
                           A   139    ;   35	
                           A   140    ;   36	void BuildOffset(void);
                           A   141    ;   37	
                           A   142    ;   38	void LoadPcxPalette(void);
                           A   143    ;   39	void LoadPcxFile(void);
                           A   144    ;   40	void DecodePcxFile(void);
                           A   145    ;   41	
                           A   146    ;   42	void PutPcxPixel(unsigned char Px);
                           A   147    ;   43	
                           A   148    ;   44	void Set_320_240_Mode(void);
                           A   149    ;   45	void Set_640_480_Mode(void);
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   4


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A   150    ;   46	
                           A   151    ;   47	void main(void)
                           A   152    ;   48	{
010000                     A   153    _main:
                           A   154    ;   49		INIT_HARDWARE;
       0000009A            A   155    PB_DR		equ 09Ah
       0000009B            A   156    PB_DDR		equ 09Bh
       0000009C            A   157    PB_ALT1		equ 09Ch
       0000009D            A   158    PB_ALT2		equ 09Dh
       0000009E            A   159    PC_DR		equ 09Eh
       0000009F            A   160    PC_DDR		equ 09Fh
       000000A0            A   161    PC_ALT1		equ 0A0h
       000000A1            A   162    PC_ALT2		equ 0A1h
       000000A2            A   163    PD_DR		equ 0A2h
       000000A3            A   164    PD_DDR		equ 0A3h
       000000A4            A   165    PD_ALT1		equ 0A4h
       000000A5            A   166    PD_ALT2		equ 0A5h
       000000C0            A   167    UART0_RBR	equ 0C0h
       000000C0            A   168    UART0_THR	equ 0C0h
       000000C0            A   169    UART0_BRG_L	equ 0C0h
       000000C1            A   170    UART0_BRG_H	equ 0C1h
       000000C1            A   171    UART0_IER	equ 0C1h
       000000C2            A   172    UART0_FCTL	equ 0C2h
       000000C3            A   173    UART0_LCTL	equ 0C3h
       000000C4            A   174    UART0_MCTL	equ 0C4h
       000000C5            A   175    UART0_LSR	equ 0C5h
       000000C6            A   176    UART0_MSR	equ 0C6h
       000000A8            A   177    CS0_LBR		equ 0A8h
       000000A9            A   178    CS0_UBR		equ 0A9h
       000000AA            A   179    CS0_CTL		equ 0AAh
       000000AB            A   180    CS1_LBR		equ 0ABh
       000000AC            A   181    CS1_UBR		equ 0ACh
       000000AD            A   182    CS1_CTL		equ 0ADh
       000000AE            A   183    CS2_LBR		equ 0AEh
       000000AF            A   184    CS2_UBR		equ 0AFh
       000000B0            A   185    CS2_CTL		equ 0B0h
       000000B1            A   186    CS3_LBR		equ 0B1h
       000000B2            A   187    CS3_UBR		equ 0B2h
       000000B3            A   188    CS3_CTL		equ 0B3h
       00000080            A   189    TMR0_CTL		equ 080h
       00000081            A   190    TMR0_DR_L	equ 081h
       00000081            A   191    TMR0_RR_L	equ 081h
       00000082            A   192    TMR0_DR_H	equ 082h
       00000082            A   193    TMR0_RR_H	equ 082h
       00000092            A   194    TMR_ISS		equ 092h
       000000ED            A   195    RTC_CTRL		equ 0EDh
       000000EC            A   196    RTC_ACTRL	equ 0ECh
       000000E0            A   197    RTC_SEC		equ 0E0h
       000000E1            A   198    RTC_MIN		equ 0E1h
       000000E2            A   199    RTC_HRS		equ 0E2h
       000000E3            A   200    RTC_DOW		equ 0E3h
       000000E4            A   201    RTC_DOM		equ 0E4h
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   5


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
       000000E5            A   202    RTC_MON		equ 0E5h
       000000E6            A   203    RTC_YR		equ 0E6h
       000000E7            A   204    RTC_CEN		equ 0E7h
       00000000            A   205    port_pic_data		equ 000h
       00000001            A   206    port_pic_ctrl		equ 001h
       00000001            A   207    port_hw_flags		equ 001h
       00000002            A   208    port_sdc_ctrl		equ 002h
       00000002            A   209    port_keyboard_data	equ 002h
       00000003            A   210    port_sdc_data		equ 003h
       00000004            A   211    port_memory_paging	equ 004h
       00000005            A   212    port_irq_ctrl		equ 005h
       00000006            A   213    port_nmi_ack			equ 006h
       00000007            A   214    port_ps2_ctrl		equ 007h
       00000008            A   215    port_selector		equ 008h
       00000006            A   216    port_mouse_data		equ 006h
       00000009            A   217    port_clear_flags		equ 009h
       00000000            A   218    sdc_power			equ 0h
       00000001            A   219    sdc_cs				equ 1h
       00000002            A   220    sdc_speed			equ 2h
       00000004            A   221    sdc_serializer_busy	equ 4h
       00000005            A   222    vrt					equ 5h
       00000000            A   223    sysram_addr			equ 0000000h
       00800000            A   224    vram_a_addr			equ 0800000h
       00C00000            A   225    vram_b_addr			equ 0C00000h
       00FF0000            A   226    hw_palette			equ 0ff0000h
       00FF0800            A   227    hw_sprite_registers	equ 0ff0800h
       00FF1000            A   228    hw_video_parameters	equ 0ff1000h
       00FF1400            A   229    hw_audio_registers	equ 0ff1400h
       00FF1800            A   230    hw_video_settings	equ 0ff1800h
       00FF1000            A   231    tilemap_parameters	equ hw_video_parameters + 0
       00FF1020            A   232    bitmap_parameters	equ hw_video_parameters + 2
       00FF1800            A   233    video_control		equ hw_video_settings + 00h
       00FF1801            A   234    sprite_control		equ hw_video_settings + 01h
       00FF1802            A   235    bgnd_palette_select	equ hw_video_settings + 02h
       00FF1803            A   236    sprite_palette_select	equ hw_video_settings +
       00FF1804            A   237    right_border_position	equ hw_video_settings +
       00000A00            A   238    os_start			equ 0A00h
       00000A14            A   239    prose_return		equ os_start + 14h
       00000A20            A   240    prose_kernal		equ os_start + 20h
                           A   241    ;   50		INIT_KJT;
       00000000            A   242    kr_mount_volumes			equ 00h
       00000001            A   243    kr_get_device_info		equ 01h
       00000002            A   244    kr_check_volume_format	equ 02h
       00000003            A   245    kr_change_volume			equ 03h
       00000004            A   246    kr_get_volume_info		equ 04h
       00000005            A   247    kr_format_device			equ 05h
       00000006            A   248    kr_make_dir				equ 06h
       00000007            A   249    kr_change_dir			equ 07h
       00000008            A   250    kr_parent_dir			equ 08h
       00000009            A   251    kr_root_dir				equ 09h
       0000000A            A   252    kr_delete_dir			equ 0Ah
       0000000B            A   253    kr_find_file				equ 0Bh
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   6


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
       0000000C            A   254    kr_set_file_pointer		equ 0Ch
       0000000D            A   255    kr_set_load_length		equ 0Dh
       0000000E            A   256    kr_read_file				equ 0Eh
       0000000F            A   257    kr_erase_file			equ 0Fh
       00000010            A   258    kr_rename_file			equ 10h
       00000011            A   259    kr_create_file			equ 11h
       00000012            A   260    kr_write_file			equ 12h
       00000013            A   261    kr_get_total_sectors		equ 13h
       00000014            A   262    kr_dir_list_first_entry	equ 14h
       00000015            A   263    kr_dir_list_get_entry	equ 15h
       00000016            A   264    kr_dir_list_next_entry	equ 16h
       00000017            A   265    kr_read_sector			equ 17h
       00000018            A   266    kr_write_sector			equ 18h
       00000019            A   267    kr_file_sector_list		equ 19h
       0000001A            A   268    kr_get_dir_cluster		equ 1Ah
       0000001B            A   269    kr_set_dir_cluster		equ 1Bh
       0000001C            A   270    kr_get_dir_name			equ 1Ch
       0000001D            A   271    kr_wait_key				equ 1Dh
       0000001E            A   272    kr_get_key				equ 1Eh
       0000001F            A   273    kr_get_key_mod_flags		equ 1Fh
       00000020            A   274    kr_serial_receive_header	equ 20h
       00000021            A   275    kr_serial_receive_file	equ 21h
       00000022            A   276    kr_serial_send_file		equ 22h
       00000023            A   277    kr_serial_tx_byte		equ 23h
       00000024            A   278    kr_serial_rx_byte		equ 24h
       00000025            A   279    kr_print_string			equ 25h
       00000026            A   280    kr_clear_screen			equ 26h
       00000027            A   281    kr_wait_vrt				equ 27h
       00000028            A   282    kr_set_cursor_position	equ 28h
       00000029            A   283    kr_plot_char				equ 29h
       0000002A            A   284    kr_set_pen				equ 2Ah
       0000002B            A   285    kr_background_colours	equ 2Bh
       0000002C            A   286    kr_draw_cursor			equ 2Ch
       0000002D            A   287    kr_get_pen				equ 2Dh
       0000002E            A   288    kr_scroll_up				equ 2Eh
       0000002F            A   289    kr_os_display			equ 2Fh
       00000030            A   290    kr_get_display_size		equ 30h
       00000031            A   291    kr_get_charmap_addr_xy	equ 31h
       00000032            A   292    kr_get_cursor_position	equ 32h
       00000033            A   293    kr_set_envar				equ 33h
       00000034            A   294    kr_get_envar				equ 34h
       00000035            A   295    kr_delete_envar			equ 35h
       00000036            A   296    kr_set_mouse_window		equ 36h
       00000037            A   297    kr_get_mouse_position	equ 37h
       00000038            A   298    kr_get_mouse_motion		equ 38h
       00000039            A   299    kr_time_delay			equ 39h
       0000003A            A   300    kr_compare_strings		equ 3Ah
       0000003B            A   301    kr_hex_byte_to_ascii		equ 3Bh
       0000003C            A   302    kr_ascii_to_hex_word		equ 3Ch
       0000003D            A   303    kr_get_string			equ 3Dh
       0000003E            A   304    kr_get_version			equ 3Eh
       0000003F            A   305    kr_dont_store_registers	equ 3Fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   7


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
       00000040            A   306    kr_get_font_info			equ 40h
       00000041            A   307    kr_read_rtc				equ 41h
       00000042            A   308    kr_write_rtc				equ 42h
       00000043            A   309    kr_get_keymap_location	equ 43h
                           A   310    ;   51		
                           A   311    ;   52		CREATE_HEADER;
010000 18 0E               A   312    jr skip_header
010002 50524F              A   313    db 'PRO'
010005 000001              A   314    mb_loc dw24 10000h
010008 000000              A   315    dw24 0
01000B 0000                A   316    dw 0
01000D 0000                A   317    dw 0
01000F 01                  A   318    db 1
010010                     A   319    skip_header
                           A   320    ;   53		
                           A   321    ;   54		asm ("ld a, (hl)");				//T
010010 7E                  A   322    ld a, (hl)
                           A   323    ;   55		asm ("or a");
010011 B7                  A   324    or a
                           A   325    ;   56		asm ("jr z, no_param");
010012 CA 52 03 01         A   326    jr z, no_param
                           A   327    ;   57		
                           A   328    ;   58		asm ("ld (_K_xHL), hl");		//S
010016 22 BF 0A 01         A   329    ld (_K_xHL), hl
                           A   330    ;   59		asm ("ld a, kr_find_file");
01001A 3E0B                A   331    ld a, kr_find_file
                           A   332    ;   60		asm ("call.lil prose_kernal");
01001C 5BCD200A 00         A   333    call.lil prose_kernal
                           A   334    ;   61		asm ("jr nz, FileError");
010021 C2 62 03 01         A   335    jr nz, FileError
                           A   336    ;   62		
                           A   337    ;   63		asm ("ld de, 128");				//I
010025 11800000            A   338    ld de, 128
                           A   339    ;   64		asm ("ld a, kr_set_load_length");
010029 3E0D                A   340    ld a, kr_set_load_length
                           A   341    ;   65		asm ("call.lil prose_kernal");
01002B 5BCD200A 00         A   342    call.lil prose_kernal
                           A   343    ;   66		
                           A   344    ;   67		asm ("ld hl, (_PntHeader)");
010030 2A 0D 16 01         A   345    ld hl, (_PntHeader)
                           A   346    ;   68		asm ("ld a, kr_read_file");
010034 3E0E                A   347    ld a, kr_read_file
                           A   348    ;   69		asm ("call.lil prose_kernal");
010036 5BCD200A 00         A   349    call.lil prose_kernal
                           A   350    ;   70		
                           A   351    ;   71		if (Header[0] != 10)		//If th
01003B 3A C5 0A 01         A   352    	LD	A,(_Header)
01003F 47                  A   353    	LD	B,A
010040 17ED62              A   354    	SEXT	HL
010043 68                  A   355    	LD	L,B
010044 B7                  A   356    	OR	A,A
010045 010A0000            A   357    	LD	BC,10
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   8


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010049 ED42                A   358    	SBC	HL,BC
01004B 28 10               A   359    	JR	Z,L_1
                           A   360    ;   72		{
                           A   361    ;   73			ShowMsg(NonPcxFile);
01004D ED4B 07 16 01       A   362    	LD	BC,(_NonPcxFile)
010052 C5                  A   363    	PUSH	BC
010053 CD B6 04 01         A   364    	CALL	_ShowMsg
010057 C1                  A   365    	POP	BC
                           A   366    ;   74			
                           A   367    ;   75			asm ("xor a");
010058 AF                  A   368    xor a
                           A   369    ;   76			asm ("jp quitnow");
010059 C3 A1 03 01         A   370    jp quitnow
                           A   371    ;   77		}
01005D                     A   372    L_1:
                           A   373    ;   78		
                           A   374    ;   79		Make_Short(Header[4], Header[5], &M
01005D FD21 C5 0A 01       A   375    	LD	IY,_Header
010062 ED2305              A   376    	LEA	HL,IY+5
010065 4E                  A   377    	LD	C,(HL)
010066 11 49 0B 01         A   378    	LD	DE,_MinX
01006A D5                  A   379    	PUSH	DE
01006B 0600                A   380    	LD	B,0
01006D C5                  A   381    	PUSH	BC
01006E FD4E04              A   382    	LD	C,(IY+4)
010071 C5                  A   383    	PUSH	BC
010072 CD A7 03 01         A   384    	CALL	_Make_Short
010076 C1                  A   385    	POP	BC
010077 C1                  A   386    	POP	BC
010078 C1                  A   387    	POP	BC
                           A   388    ;   80		Make_Short(Header[6], Header[7], &M
010079 FD21 C5 0A 01       A   389    	LD	IY,_Header
01007E ED2307              A   390    	LEA	HL,IY+7
010081 4E                  A   391    	LD	C,(HL)
010082 11 4B 0B 01         A   392    	LD	DE,_MinY
010086 D5                  A   393    	PUSH	DE
010087 0600                A   394    	LD	B,0
010089 C5                  A   395    	PUSH	BC
01008A FD4E06              A   396    	LD	C,(IY+6)
01008D C5                  A   397    	PUSH	BC
01008E CD A7 03 01         A   398    	CALL	_Make_Short
010092 C1                  A   399    	POP	BC
010093 C1                  A   400    	POP	BC
010094 C1                  A   401    	POP	BC
                           A   402    ;   81		Make_Short(Header[8], Header[9], &M
010095 FD21 C5 0A 01       A   403    	LD	IY,_Header
01009A ED2309              A   404    	LEA	HL,IY+9
01009D 4E                  A   405    	LD	C,(HL)
01009E 11 4D 0B 01         A   406    	LD	DE,_MaxX
0100A2 D5                  A   407    	PUSH	DE
0100A3 0600                A   408    	LD	B,0
0100A5 C5                  A   409    	PUSH	BC
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:   9


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0100A6 FD4E08              A   410    	LD	C,(IY+8)
0100A9 C5                  A   411    	PUSH	BC
0100AA CD A7 03 01         A   412    	CALL	_Make_Short
0100AE C1                  A   413    	POP	BC
0100AF C1                  A   414    	POP	BC
0100B0 C1                  A   415    	POP	BC
                           A   416    ;   82		Make_Short(Header[10], Header[11], 
0100B1 FD21 C5 0A 01       A   417    	LD	IY,_Header
0100B6 ED230B              A   418    	LEA	HL,IY+11
0100B9 4E                  A   419    	LD	C,(HL)
0100BA 11 4F 0B 01         A   420    	LD	DE,_MaxY
0100BE D5                  A   421    	PUSH	DE
0100BF 0600                A   422    	LD	B,0
0100C1 C5                  A   423    	PUSH	BC
0100C2 FD4E0A              A   424    	LD	C,(IY+10)
0100C5 C5                  A   425    	PUSH	BC
0100C6 CD A7 03 01         A   426    	CALL	_Make_Short
0100CA C1                  A   427    	POP	BC
0100CB C1                  A   428    	POP	BC
0100CC C1                  A   429    	POP	BC
                           A   430    ;   83		
                           A   431    ;   84		XSize = MaxX - MinX + 1;			0100CD ED4B 49 0B 01       A   432    	LD	BC,(_MinX)
0100D2 2A 4D 0B 01         A   433    	LD	HL,(_MaxX)
0100D6 B7                  A   434    	OR	A,A
0100D7 40ED42              A   435    	SBC.SIS	HL,BC
0100DA 23                  A   436    	INC	HL
0100DB E5C1                A   437    	LD	BC,HL
0100DD 21 51 0B 01         A   438    	LD	HL,_XSize
0100E1 71                  A   439    	LD	(HL),C
0100E2 23                  A   440    	INC	HL
0100E3 70                  A   441    	LD	(HL),B
                           A   442    ;   85		YSize = MaxY - MinY + 1;
0100E4 ED4B 4B 0B 01       A   443    	LD	BC,(_MinY)
0100E9 2A 4F 0B 01         A   444    	LD	HL,(_MaxY)
0100ED B7                  A   445    	OR	A,A
0100EE 40ED42              A   446    	SBC.SIS	HL,BC
0100F1 23                  A   447    	INC	HL
0100F2 E5C1                A   448    	LD	BC,HL
0100F4 21 53 0B 01         A   449    	LD	HL,_YSize
0100F8 71                  A   450    	LD	(HL),C
0100F9 23                  A   451    	INC	HL
0100FA 70                  A   452    	LD	(HL),B
                           A   453    ;   86		
                           A   454    ;   87		if (XSize > 1)						0100FB ED4B 51 0B 01       A   455    	LD	BC,(_XSize)
010100 49210100            A   456    	LD.LIS	HL,1
010104 B7                  A   457    	OR	A,A
010105 40ED42              A   458    	SBC.SIS	HL,BC
010108 F2 12 01 01         A   459    	JP	P,L__22
01010C EA 3F 03 01         A   460    	JP	PE,L_21
010110 18 04               A   461    	JR	L__23
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  10


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010112                     A   462    L__22:
010112 E2 3F 03 01         A   463    	JP	PO,L_21
010116                     A   464    L__23:
                           A   465    ;   88		{
                           A   466    ;   89			uitoa(XSize, convBuf);
010116 01 45 0B 01         A   467    	LD	BC,_convBuf
01011A C5                  A   468    	PUSH	BC
01011B ED4B 51 0B 01       A   469    	LD	BC,(_XSize)
010120 CD A5 09 01         A   470    	CALL	__stoi
010124 E5                  A   471    	PUSH	HL
010125 CD C7 03 01         A   472    	CALL	_uitoa
010129 C1                  A   473    	POP	BC
01012A C1                  A   474    	POP	BC
                           A   475    ;   90			
                           A   476    ;   91			ShowMsg(PcxSize);
01012B ED4B 0A 16 01       A   477    	LD	BC,(_PcxSize)
010130 C5                  A   478    	PUSH	BC
010131 CD B6 04 01         A   479    	CALL	_ShowMsg
010135 C1                  A   480    	POP	BC
                           A   481    ;   92			ShowMsg(convBuf);
010136 01 45 0B 01         A   482    	LD	BC,_convBuf
01013A C5                  A   483    	PUSH	BC
01013B CD B6 04 01         A   484    	CALL	_ShowMsg
01013F C1                  A   485    	POP	BC
                           A   486    ;   93			ShowMsg("x");
010140 01 03 0A 01         A   487    	LD	BC,L__6
010144 C5                  A   488    	PUSH	BC
010145 CD B6 04 01         A   489    	CALL	_ShowMsg
010149 C1                  A   490    	POP	BC
                           A   491    ;   94			
                           A   492    ;   95			uitoa(YSize, convBuf);
01014A 01 45 0B 01         A   493    	LD	BC,_convBuf
01014E C5                  A   494    	PUSH	BC
01014F ED4B 53 0B 01       A   495    	LD	BC,(_YSize)
010154 CD A5 09 01         A   496    	CALL	__stoi
010158 E5                  A   497    	PUSH	HL
010159 CD C7 03 01         A   498    	CALL	_uitoa
01015D C1                  A   499    	POP	BC
01015E C1                  A   500    	POP	BC
                           A   501    ;   96			ShowMsg(convBuf);
01015F 01 45 0B 01         A   502    	LD	BC,_convBuf
010163 C5                  A   503    	PUSH	BC
010164 CD B6 04 01         A   504    	CALL	_ShowMsg
010168 C1                  A   505    	POP	BC
                           A   506    ;   97			ShowMsg("\n\r");				010169 01 05 0A 01         A   507    	LD	BC,L__7
01016D C5                  A   508    	PUSH	BC
01016E CD B6 04 01         A   509    	CALL	_ShowMsg
010172 C1                  A   510    	POP	BC
                           A   511    ;   98			
                           A   512    ;   99			if (XSize > 640)
010173 ED4B 51 0B 01       A   513    	LD	BC,(_XSize)
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  11


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010178 49218002            A   514    	LD.LIS	HL,640
01017C B7                  A   515    	OR	A,A
01017D 40ED42              A   516    	SBC.SIS	HL,BC
010180 F2 8A 01 01         A   517    	JP	P,L__24
010184 EA 9D 01 01         A   518    	JP	PE,L_4
010188 18 04               A   519    	JR	L__25
01018A                     A   520    L__24:
01018A E2 9D 01 01         A   521    	JP	PO,L_4
01018E                     A   522    L__25:
                           A   523    ;  100			{
                           A   524    ;  101				ShowMsg("Image too big!\n\r
01018E 01 08 0A 01         A   525    	LD	BC,L__9
010192 C5                  A   526    	PUSH	BC
010193 CD B6 04 01         A   527    	CALL	_ShowMsg
010197 C1                  A   528    	POP	BC
                           A   529    ;  102				asm ("xor a");
010198 AF                  A   530    xor a
                           A   531    ;  103				asm ("jp quitnow");
010199 C3 A1 03 01         A   532    jp quitnow
                           A   533    ;  104			}
01019D                     A   534    L_4:
                           A   535    ;  105			
                           A   536    ;  106			if (YSize > 480)
01019D ED4B 53 0B 01       A   537    	LD	BC,(_YSize)
0101A2 4921E001            A   538    	LD.LIS	HL,480
0101A6 B7                  A   539    	OR	A,A
0101A7 40ED42              A   540    	SBC.SIS	HL,BC
0101AA F2 B4 01 01         A   541    	JP	P,L__26
0101AE EA C7 01 01         A   542    	JP	PE,L_8
0101B2 18 04               A   543    	JR	L__27
0101B4                     A   544    L__26:
0101B4 E2 C7 01 01         A   545    	JP	PO,L_8
0101B8                     A   546    L__27:
                           A   547    ;  107			{
                           A   548    ;  108				ShowMsg("Image too big!\n\r
0101B8 01 19 0A 01         A   549    	LD	BC,L__11
0101BC C5                  A   550    	PUSH	BC
0101BD CD B6 04 01         A   551    	CALL	_ShowMsg
0101C1 C1                  A   552    	POP	BC
                           A   553    ;  109				asm ("xor a");
0101C2 AF                  A   554    xor a
                           A   555    ;  110				asm ("jp quitnow");
0101C3 C3 A1 03 01         A   556    jp quitnow
                           A   557    ;  111			}		
0101C7                     A   558    L_8:
                           A   559    ;  112				
                           A   560    ;  113			if ((XSize <= 320) && (YSize <=
0101C7 ED4B 51 0B 01       A   561    	LD	BC,(_XSize)
0101CC 49214001            A   562    	LD.LIS	HL,320
0101D0 B7                  A   563    	OR	A,A
0101D1 40ED42              A   564    	SBC.SIS	HL,BC
0101D4 FA DE 01 01         A   565    	JP	M,L__28
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  12


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0101D8 EA 11 02 01         A   566    	JP	PE,L_7
0101DC 18 04               A   567    	JR	L__29
0101DE                     A   568    L__28:
0101DE E2 11 02 01         A   569    	JP	PO,L_7
0101E2                     A   570    L__29:
0101E2 ED4B 53 0B 01       A   571    	LD	BC,(_YSize)
0101E7 4921F000            A   572    	LD.LIS	HL,240
0101EB B7                  A   573    	OR	A,A
0101EC 40ED42              A   574    	SBC.SIS	HL,BC
0101EF FA F9 01 01         A   575    	JP	M,L__30
0101F3 EA 11 02 01         A   576    	JP	PE,L_7
0101F7 18 04               A   577    	JR	L__31
0101F9                     A   578    L__30:
0101F9 E2 11 02 01         A   579    	JP	PO,L_7
0101FD                     A   580    L__31:
                           A   581    ;  114			{
                           A   582    ;  115				VideoX = 320;
0101FD 21 59 0B 01         A   583    	LD	HL,_VideoX
010201 3640                A   584    	LD	(HL),64
010203 23                  A   585    	INC	HL
010204 3601                A   586    	LD	(HL),1
                           A   587    ;  116				VideoY = 240;
010206 21 5B 0B 01         A   588    	LD	HL,_VideoY
01020A 36F0                A   589    	LD	(HL),240
01020C 23                  A   590    	INC	HL
01020D 3600                A   591    	LD	(HL),0
                           A   592    ;  117			}
                           A   593    ;  118			else
01020F 18 12               A   594    	JR	L_9
010211                     A   595    L_7:
                           A   596    ;  119			{
                           A   597    ;  120				VideoX = 640;
010211 21 59 0B 01         A   598    	LD	HL,_VideoX
010215 3680                A   599    	LD	(HL),128
010217 23                  A   600    	INC	HL
010218 3602                A   601    	LD	(HL),2
                           A   602    ;  121				VideoY = 480;
01021A 21 5B 0B 01         A   603    	LD	HL,_VideoY
01021E 36E0                A   604    	LD	(HL),224
010220 23                  A   605    	INC	HL
010221 3601                A   606    	LD	(HL),1
                           A   607    ;  122			}
010223                     A   608    L_9:
                           A   609    ;  123			
                           A   610    ;  124			BuildOffset();					010223 CD 40 08 01         A   611    	CALL	_BuildOffset
                           A   612    ;  125			
                           A   613    ;  126			if (XSize < VideoX)				010227 ED4B 59 0B 01       A   614    	LD	BC,(_VideoX)
01022C 2A 51 0B 01         A   615    	LD	HL,(_XSize)
010230 B7                  A   616    	OR	A,A
010231 40ED42              A   617    	SBC.SIS	HL,BC
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  13


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010234 F2 3E 02 01         A   618    	JP	P,L__32
010238 EA 70 02 01         A   619    	JP	PE,L_11
01023C 18 04               A   620    	JR	L__33
01023E                     A   621    L__32:
01023E E2 70 02 01         A   622    	JP	PO,L_11
010242                     A   623    L__33:
                           A   624    ;  127				StartX = (VideoX - XSize) /
010242 ED4B 59 0B 01       A   625    	LD	BC,(_VideoX)
010247 CD A5 09 01         A   626    	CALL	__stoi
01024B E5D1                A   627    	LD	DE,HL
01024D ED4B 51 0B 01       A   628    	LD	BC,(_XSize)
010252 CD A5 09 01         A   629    	CALL	__stoi
010256 E5C1                A   630    	LD	BC,HL
010258 D5E1                A   631    	LD	HL,DE
01025A B7                  A   632    	OR	A,A
01025B ED42                A   633    	SBC	HL,BC
01025D 01020000            A   634    	LD	BC,2
010261 CD 12 09 01         A   635    	CALL	__idivs
010265 E5C1                A   636    	LD	BC,HL
010267 21 55 0B 01         A   637    	LD	HL,_StartX
01026B 71                  A   638    	LD	(HL),C
01026C 23                  A   639    	INC	HL
01026D 70                  A   640    	LD	(HL),B
                           A   641    ;  128			else
01026E 18 09               A   642    	JR	L_14
010270                     A   643    L_11:
                           A   644    ;  129				StartX = 0;
010270 21 55 0B 01         A   645    	LD	HL,_StartX
010274 3600                A   646    	LD	(HL),0
010276 23                  A   647    	INC	HL
010277 3600                A   648    	LD	(HL),0
010279                     A   649    L_14:
                           A   650    ;  130			
                           A   651    ;  131			if (YSize < VideoY)
010279 ED4B 5B 0B 01       A   652    	LD	BC,(_VideoY)
01027E 2A 53 0B 01         A   653    	LD	HL,(_YSize)
010282 B7                  A   654    	OR	A,A
010283 40ED42              A   655    	SBC.SIS	HL,BC
010286 F2 90 02 01         A   656    	JP	P,L__34
01028A EA C2 02 01         A   657    	JP	PE,L_13
01028E 18 04               A   658    	JR	L__35
010290                     A   659    L__34:
010290 E2 C2 02 01         A   660    	JP	PO,L_13
010294                     A   661    L__35:
                           A   662    ;  132				StartY = (VideoY - YSize) /
010294 ED4B 5B 0B 01       A   663    	LD	BC,(_VideoY)
010299 CD A5 09 01         A   664    	CALL	__stoi
01029D E5D1                A   665    	LD	DE,HL
01029F ED4B 53 0B 01       A   666    	LD	BC,(_YSize)
0102A4 CD A5 09 01         A   667    	CALL	__stoi
0102A8 E5C1                A   668    	LD	BC,HL
0102AA D5E1                A   669    	LD	HL,DE
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  14


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0102AC B7                  A   670    	OR	A,A
0102AD ED42                A   671    	SBC	HL,BC
0102AF 01020000            A   672    	LD	BC,2
0102B3 CD 12 09 01         A   673    	CALL	__idivs
0102B7 E5C1                A   674    	LD	BC,HL
0102B9 21 57 0B 01         A   675    	LD	HL,_StartY
0102BD 71                  A   676    	LD	(HL),C
0102BE 23                  A   677    	INC	HL
0102BF 70                  A   678    	LD	(HL),B
                           A   679    ;  133			else
0102C0 18 09               A   680    	JR	L_15
0102C2                     A   681    L_13:
                           A   682    ;  134				StartY = 0;		
0102C2 21 57 0B 01         A   683    	LD	HL,_StartY
0102C6 3600                A   684    	LD	(HL),0
0102C8 23                  A   685    	INC	HL
0102C9 3600                A   686    	LD	(HL),0
0102CB                     A   687    L_15:
                           A   688    ;  135			
                           A   689    ;  136			PosX = 0;
0102CB 21 5D 0B 01         A   690    	LD	HL,_PosX
0102CF 3600                A   691    	LD	(HL),0
0102D1 23                  A   692    	INC	HL
0102D2 3600                A   693    	LD	(HL),0
                           A   694    ;  137			PosY = 0;
0102D4 21 5F 0B 01         A   695    	LD	HL,_PosY
                           A   696    ;  138			
                           A   697    ;  139			ShowMsg("Press a key...\n\r");
0102D8 01 2A 0A 01         A   698    	LD	BC,L__16
0102DC C5                  A   699    	PUSH	BC
0102DD 3600                A   700    	LD	(HL),0
0102DF 23                  A   701    	INC	HL
0102E0 3600                A   702    	LD	(HL),0
0102E2 CD B6 04 01         A   703    	CALL	_ShowMsg
0102E6 C1                  A   704    	POP	BC
                           A   705    ;  140			asm ("ld a, kr_wait_key");
0102E7 3E1D                A   706    ld a, kr_wait_key
                           A   707    ;  141			asm ("call.lil prose_kernal");
0102E9 5BCD200A 00         A   708    call.lil prose_kernal
                           A   709    ;  142			
                           A   710    ;  143			LoadPcxPalette();
0102EE CD D6 04 01         A   711    	CALL	_LoadPcxPalette
                           A   712    ;  144			LoadPcxFile();
0102F2 CD 07 06 01         A   713    	CALL	_LoadPcxFile
                           A   714    ;  145			
                           A   715    ;  146			if ((VideoX == 320) && (VideoY 
0102F6 49014001            A   716    	LD.LIS	BC,320
0102FA 2A 59 0B 01         A   717    	LD	HL,(_VideoX)
0102FE B7                  A   718    	OR	A,A
0102FF 40ED42              A   719    	SBC.SIS	HL,BC
010302 20 14               A   720    	JR	NZ,L_18
010304 4901F000            A   721    	LD.LIS	BC,240
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  15


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010308 2A 5B 0B 01         A   722    	LD	HL,(_VideoY)
01030C B7                  A   723    	OR	A,A
01030D 40ED42              A   724    	SBC.SIS	HL,BC
010310 20 06               A   725    	JR	NZ,L_18
                           A   726    ;  147				Set_320_240_Mode();
010312 CD 73 06 01         A   727    	CALL	_Set_320_240_Mode
                           A   728    ;  148			else
010316 18 04               A   729    	JR	L_19
010318                     A   730    L_18:
                           A   731    ;  149				Set_640_480_Mode();		
010318 CD B3 06 01         A   732    	CALL	_Set_640_480_Mode
01031C                     A   733    L_19:
                           A   734    ;  150			
                           A   735    ;  151			memcpy((void *)0x0ff0000, PcxPa
01031C 01000200            A   736    	LD	BC,512
010320 C5                  A   737    	PUSH	BC
010321 01 61 0B 01         A   738    	LD	BC,_PcxPalette
010325 C5                  A   739    	PUSH	BC
010326 010000FF            A   740    	LD	BC,16711680
01032A C5                  A   741    	PUSH	BC
01032B CD E6 08 01         A   742    	CALL	_memcpy
01032F C1                  A   743    	POP	BC
010330 C1                  A   744    	POP	BC
010331 C1                  A   745    	POP	BC
                           A   746    ;  152			
                           A   747    ;  153			DecodePcxFile();
010332 CD F3 06 01         A   748    	CALL	_DecodePcxFile
                           A   749    ;  154			
                           A   750    ;  155			asm ("ld a, kr_wait_key");
010336 3E1D                A   751    ld a, kr_wait_key
                           A   752    ;  156			asm ("call.lil prose_kernal");
010338 5BCD200A 00         A   753    call.lil prose_kernal
                           A   754    ;  157		}
                           A   755    ;  158		else
01033D 18 0F               A   756    	JR	L_22
01033F                     A   757    L_21:
                           A   758    ;  159		{
                           A   759    ;  160			ShowMsg("Invalid image dimensio
01033F 01 3B 0A 01         A   760    	LD	BC,L__19
010343 C5                  A   761    	PUSH	BC
010344 CD B6 04 01         A   762    	CALL	_ShowMsg
010348 C1                  A   763    	POP	BC
                           A   764    ;  161			
                           A   765    ;  162			asm ("xor a");
010349 AF                  A   766    xor a
                           A   767    ;  163			asm ("jp quitnow");
01034A C3 A1 03 01         A   768    jp quitnow
                           A   769    ;  164		}
01034E                     A   770    L_22:
                           A   771    ;  165		
                           A   772    ;  166		asm ("jp endprogram");
01034E C3 72 03 01         A   773    jp endprogram
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  16


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A   774    ;  167		
                           A   775    ;  168		asm ("no_param:");
010352                     A   776    no_param:
                           A   777    ;  169		ShowMsg(UseTxt);
010352 ED4B 01 16 01       A   778    	LD	BC,(_UseTxt)
010357 C5                  A   779    	PUSH	BC
010358 CD B6 04 01         A   780    	CALL	_ShowMsg
01035C C1                  A   781    	POP	BC
                           A   782    ;  170		asm ("xor a");
01035D AF                  A   783    xor a
                           A   784    ;  171		asm ("jp quitnow");
01035E C3 A1 03 01         A   785    jp quitnow
                           A   786    ;  172		
                           A   787    ;  173		asm ("FileError:");
010362                     A   788    FileError:
                           A   789    ;  174		ShowMsg(FileOpenError);
010362 ED4B 04 16 01       A   790    	LD	BC,(_FileOpenError)
010367 C5                  A   791    	PUSH	BC
010368 CD B6 04 01         A   792    	CALL	_ShowMsg
01036C C1                  A   793    	POP	BC
                           A   794    ;  175		asm ("xor a");
01036D AF                  A   795    xor a
                           A   796    ;  176		asm ("jp quitnow");
01036E C3 A1 03 01         A   797    jp quitnow
                           A   798    ;  177		
                           A   799    ;  178		asm ("endprogram:");	
010372                     A   800    endprogram:
                           A   801    ;  179		asm ("ld a, kr_os_display");
010372 3E2F                A   802    ld a, kr_os_display
                           A   803    ;  180		asm ("call.lil prose_kernal");
010374 5BCD200A 00         A   804    call.lil prose_kernal
                           A   805    ;  181		asm ("ld a, kr_clear_screen");
010379 3E26                A   806    ld a, kr_clear_screen
                           A   807    ;  182		asm ("call.lil prose_kernal");	
01037B 5BCD200A 00         A   808    call.lil prose_kernal
                           A   809    ;  183		
                           A   810    ;  184		if ((VideoX == 320) && (VideoY == 2
010380 49014001            A   811    	LD.LIS	BC,320
010384 2A 59 0B 01         A   812    	LD	HL,(_VideoX)
010388 B7                  A   813    	OR	A,A
010389 40ED42              A   814    	SBC.SIS	HL,BC
01038C 20 11               A   815    	JR	NZ,L_25
01038E 4901F000            A   816    	LD.LIS	BC,240
010392 2A 5B 0B 01         A   817    	LD	HL,(_VideoY)
010396 B7                  A   818    	OR	A,A
010397 40ED42              A   819    	SBC.SIS	HL,BC
01039A 20 03               A   820    	JR	NZ,L_25
                           A   821    ;  185			asm ("xor a");
01039C AF                  A   822    xor a
                           A   823    ;  186		else
01039D 18 02               A   824    	JR	L_26
01039F                     A   825    L_25:
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  17


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A   826    ;  187			asm ("ld a, 0ffh");
01039F 3EFF                A   827    ld a, 0ffh
0103A1                     A   828    L_26:
                           A   829    ;  188		
                           A   830    ;  189		asm ("quitnow:");	
0103A1                     A   831    quitnow:
                           A   832    ;  190		asm ("jp.lil prose_return");
0103A1 5BC3140A 00         A   833    jp.lil prose_return
                           A   834    ;  191	}
0103A6 C9                  A   835    	RET	
                           A   836    
                           A   837    
                           A   838    ;**************************** _main ***********
                           A   839    ;Name                         Addr/Register   S
                           A   840    ;_FileOpenError                      STATIC    
                           A   841    ;_UseTxt                             STATIC    
                           A   842    ;_DecodePcxFile                      IMPORT  --
                           A   843    ;_PcxPalette                         STATIC    
                           A   844    ;_memcpy                             IMPORT  --
                           A   845    ;_Set_640_480_Mode                   IMPORT  --
                           A   846    ;_Set_320_240_Mode                   IMPORT  --
                           A   847    ;_LoadPcxFile                        IMPORT  --
                           A   848    ;_LoadPcxPalette                     IMPORT  --
                           A   849    ;_PosY                               STATIC    
                           A   850    ;_PosX                               STATIC    
                           A   851    ;_StartY                             STATIC    
                           A   852    ;_StartX                             STATIC    
                           A   853    ;_BuildOffset                        IMPORT  --
                           A   854    ;_VideoY                             STATIC    
                           A   855    ;_VideoX                             STATIC    
                           A   856    ;_PcxSize                            STATIC    
                           A   857    ;_convBuf                            STATIC    
                           A   858    ;_uitoa                              IMPORT  --
                           A   859    ;_YSize                              STATIC    
                           A   860    ;_XSize                              STATIC    
                           A   861    ;_MaxY                               STATIC    
                           A   862    ;_MaxX                               STATIC    
                           A   863    ;_MinY                               STATIC    
                           A   864    ;_MinX                               STATIC    
                           A   865    ;_Make_Short                         IMPORT  --
                           A   866    ;_NonPcxFile                         STATIC    
                           A   867    ;_ShowMsg                            IMPORT  --
                           A   868    ;_Header                             STATIC    
                           A   869    
                           A   870    
                           A   871    ; Stack Frame Size: 6 (bytes)
                           A   872    ;       Spill Code: 0 (instruction)
                           A   873    
                           A   874    
                           A   875    	SEGMENT STRSECT
010A03                     A   876    L__6:
010A03 78                  A   877    	DB	"x"
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  18


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010A04 00                  A   878    	DB	0
010A05                     A   879    L__7:
010A05 0A0D00              A   880    	DB	10,13,0
010A08                     A   881    L__9:
010A08 496D6167 6520746F   A   882    	DB	"Image too big!"
010A10 6F206269 6721 
010A16 0A0D00              A   883    	DB	10,13,0
010A19                     A   884    L__11:
010A19 496D6167 6520746F   A   885    	DB	"Image too big!"
010A21 6F206269 6721 
010A27 0A0D00              A   886    	DB	10,13,0
010A2A                     A   887    L__16:
010A2A 50726573 73206120   A   888    	DB	"Press a key..."
010A32 6B65792E 2E2E 
010A38 0A0D00              A   889    	DB	10,13,0
010A3B                     A   890    L__19:
010A3B 496E7661 6C696420   A   891    	DB	"Invalid image dimensions!"
010A43 696D6167 65206469 
010A4B 6D656E73 696F6E73 
010A53 21 
010A54 0A0D00              A   892    	DB	10,13,0
                           A   893    	SEGMENT CODE
                           A   894    ;  192	
                           A   895    ;  193	//Join to bytes and make a 16 bit value
                           A   896    ;  194	void Make_Short(unsigned char a, unsign
                           A   897    ;  195	{
0103A7                     A   898    _Make_Short:
0103A7 CD D9 08 01         A   899    	CALL	__frameset0
                           A   900    ;  196		*Val = (a + (b << 8));
0103AB DD4E09              A   901    	LD	C,(IX+9)
0103AE 0600                A   902    	LD	B,0
0103B0 C5E1                A   903    	LD	HL,BC
0103B2 65                  A   904    	LD	H,L
0103B3 DD4E06              A   905    	LD	C,(IX+6)
0103B6 2E00                A   906    	LD	L,0
0103B8 4009                A   907    	ADD.SIS	HL,BC
0103BA E5C1                A   908    	LD	BC,HL
0103BC DD270C              A   909    	LD	HL,(IX+12)
0103BF 71                  A   910    	LD	(HL),C
0103C0 23                  A   911    	INC	HL
0103C1 70                  A   912    	LD	(HL),B
                           A   913    ;  197	}
0103C2 DDF9                A   914    	LD	SP,IX
0103C4 DDE1                A   915    	POP	IX
0103C6 C9                  A   916    	RET	
                           A   917    
                           A   918    
                           A   919    ;**************************** _Make_Short *****
                           A   920    ;Name                         Addr/Register   S
                           A   921    ;Val                                  IX+12    
                           A   922    ;b                                     IX+9    
                           A   923    ;a                                     IX+6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  19


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A   924    
                           A   925    
                           A   926    ; Stack Frame Size: 15 (bytes)
                           A   927    ;       Spill Code: 0 (instruction)
                           A   928    
                           A   929    
                           A   930    ;  198	
                           A   931    ;  199	//convert an integer in ascii string
                           A   932    ;  200	void uitoa(unsigned int val, char *stri
                           A   933    ;  201	{
0103C7                     A   934    _uitoa:
0103C7 21FAFFFF            A   935    	LD	HL,-6
0103CB CD 02 09 01         A   936    	CALL	__frameset
                           A   937    ;  202		char index = 0, i = 0;
0103CF DD36FF00            A   938    	LD	(IX+-1),0
0103D3 DD36FE00            A   939    	LD	(IX+-2),0
                           A   940    ;  203		
                           A   941    ;  204		do {
0103D7                     A   942    L_31:
                           A   943    ;  205			string[index] = '0' + (val % 10
0103D7 DD7EFF              A   944    	LD	A,(IX+-1)
0103DA 17ED62              A   945    	SEXT	HL
0103DD DD6EFF              A   946    	LD	L,(IX+-1)
0103E0 DD0709              A   947    	LD	BC,(IX+9)
0103E3 09                  A   948    	ADD	HL,BC
0103E4 DD2FFB              A   949    	LD	(IX+-5),HL
0103E7 DD2706              A   950    	LD	HL,(IX+6)
0103EA 010A0000            A   951    	LD	BC,10
0103EE CD AF 08 01         A   952    	CALL	__iremu
0103F2 7D                  A   953    	LD	A,L
0103F3 C630                A   954    	ADD	A,48
0103F5 DD27FB              A   955    	LD	HL,(IX+-5)
0103F8 77                  A   956    	LD	(HL),A
                           A   957    ;  206			
                           A   958    ;  207			if (string[index] > '9')
0103F9 DD27FB              A   959    	LD	HL,(IX+-5)
0103FC 7E                  A   960    	LD	A,(HL)
0103FD 47                  A   961    	LD	B,A
0103FE 17ED62              A   962    	SEXT	HL
010401 68                  A   963    	LD	L,B
010402 E5C1                A   964    	LD	BC,HL
010404 21390000            A   965    	LD	HL,57
010408 B7                  A   966    	OR	A,A
010409 ED42                A   967    	SBC	HL,BC
01040B F2 15 04 01         A   968    	JP	P,L__41
01040F EA 23 04 01         A   969    	JP	PE,L_30
010413 18 04               A   970    	JR	L__42
010415                     A   971    L__41:
010415 E2 23 04 01         A   972    	JP	PO,L_30
010419                     A   973    L__42:
                           A   974    ;  208				string[index] += 'A' - '9' 
010419 DD27FB              A   975    	LD	HL,(IX+-5)
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  20


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
01041C 7E                  A   976    	LD	A,(HL)
01041D C607                A   977    	ADD	A,7
01041F DD27FB              A   978    	LD	HL,(IX+-5)
010422 77                  A   979    	LD	(HL),A
010423                     A   980    L_30:
                           A   981    ;  209			
                           A   982    ;  210			val /= 10;
010423 010A0000            A   983    	LD	BC,10
010427 DD2706              A   984    	LD	HL,(IX+6)
01042A CD B8 08 01         A   985    	CALL	__idivu
01042E DD2F06              A   986    	LD	(IX+6),HL
                           A   987    ;  211			++index;
010431 DD34FF              A   988    	INC	(IX+-1)
                           A   989    ;  212	  } while (val != 0);
010434 DD2706              A   990    	LD	HL,(IX+6)
010437 B7                  A   991    	OR	A,A
010438 01000000            A   992    	LD	BC,0
01043C ED42                A   993    	SBC	HL,BC
01043E 20 97               A   994    	JR	NZ,L_31
                           A   995    ;  213	  
                           A   996    ;  214	  string[index--] = '\0'; 
010440 DD7EFF              A   997    	LD	A,(IX+-1)
010443 17ED62              A   998    	SEXT	HL
010446 DD6EFF              A   999    	LD	L,(IX+-1)
010449 DD0709              A  1000    	LD	BC,(IX+9)
01044C 09                  A  1001    	ADD	HL,BC
01044D 3600                A  1002    	LD	(HL),0
01044F DD35FF              A  1003    	DEC	(IX+-1)
                           A  1004    ;  215	  
                           A  1005    ;  216	  while (index > i)
010452 18 49               A  1006    	JR	L_35
010454                     A  1007    L_36:
                           A  1008    ;  217	  {
                           A  1009    ;  218	    char tmp = string[i];
010454 DD7EFE              A  1010    	LD	A,(IX+-2)
010457 17ED62              A  1011    	SEXT	HL
01045A DD6EFE              A  1012    	LD	L,(IX+-2)
01045D DD0709              A  1013    	LD	BC,(IX+9)
010460 09                  A  1014    	ADD	HL,BC
010461 7E                  A  1015    	LD	A,(HL)
010462 DD77FA              A  1016    	LD	(IX+-6),A
                           A  1017    ;  219		  
                           A  1018    ;  220	    string[i] = string[index];
010465 DD7EFF              A  1019    	LD	A,(IX+-1)
010468 17ED62              A  1020    	SEXT	HL
01046B DD6EFF              A  1021    	LD	L,(IX+-1)
01046E DD7EFE              A  1022    	LD	A,(IX+-2)
010471 DD0709              A  1023    	LD	BC,(IX+9)
010474 09                  A  1024    	ADD	HL,BC
010475 E5FDE1              A  1025    	LD	IY,HL
010478 17ED62              A  1026    	SEXT	HL
01047B DD6EFE              A  1027    	LD	L,(IX+-2)
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  21


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
01047E FD7E00              A  1028    	LD	A,(IY)
010481 DD0709              A  1029    	LD	BC,(IX+9)
010484 09                  A  1030    	ADD	HL,BC
010485 77                  A  1031    	LD	(HL),A
                           A  1032    ;  221	    string[index] = tmp;
010486 DD7EFF              A  1033    	LD	A,(IX+-1)
010489 17ED62              A  1034    	SEXT	HL
01048C DD6EFF              A  1035    	LD	L,(IX+-1)
01048F DD7EFA              A  1036    	LD	A,(IX+-6)
010492 DD0709              A  1037    	LD	BC,(IX+9)
010495 09                  A  1038    	ADD	HL,BC
010496 77                  A  1039    	LD	(HL),A
                           A  1040    ;  222	    ++i;
010497 DD34FE              A  1041    	INC	(IX+-2)
                           A  1042    ;  223	    --index;
01049A DD35FF              A  1043    	DEC	(IX+-1)
                           A  1044    ;  224	  }
01049D                     A  1045    L_35:
01049D DD7EFE              A  1046    	LD	A,(IX+-2)
0104A0 DDBEFF              A  1047    	CP	A,(IX+-1)
0104A3 FA AD 04 01         A  1048    	JP	M,L__43
0104A7 EA 54 04 01         A  1049    	JP	PE,L_36
0104AB 18 04               A  1050    	JR	L__44
0104AD                     A  1051    L__43:
0104AD E2 54 04 01         A  1052    	JP	PO,L_36
0104B1                     A  1053    L__44:
                           A  1054    ;  225	}
0104B1 DDF9                A  1055    	LD	SP,IX
0104B3 DDE1                A  1056    	POP	IX
0104B5 C9                  A  1057    	RET	
                           A  1058    
                           A  1059    
                           A  1060    ;**************************** _uitoa **********
                           A  1061    ;Name                         Addr/Register   S
                           A  1062    ;tmp                                   IX-6    
                           A  1063    ;G_0                                   IX-5    
                           A  1064    ;i                                     IX-2    
                           A  1065    ;index                                 IX-1    
                           A  1066    ;string                                IX+9    
                           A  1067    ;val                                   IX+6    
                           A  1068    
                           A  1069    
                           A  1070    ; Stack Frame Size: 18 (bytes)
                           A  1071    ;       Spill Code: 0 (instruction)
                           A  1072    
                           A  1073    
                           A  1074    ;  226	
                           A  1075    ;  227	//Show a text :-)
                           A  1076    ;  228	void ShowMsg(const char *Txt)
                           A  1077    ;  229	{
0104B6                     A  1078    _ShowMsg:
0104B6 CD D9 08 01         A  1079    	CALL	__frameset0
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  22


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1080    ;  230		TxtPnt = Txt;
0104BA DD0706              A  1081    	LD	BC,(IX+6)
0104BD ED43 B1 0A 01       A  1082    	LD	(_TxtPnt),BC
                           A  1083    ;  231		
                           A  1084    ;  232		asm ("push ix");
0104C2 DDE5                A  1085    push ix
                           A  1086    ;  233		asm ("ld hl, (_TxtPnt)");
0104C4 2A B1 0A 01         A  1087    ld hl, (_TxtPnt)
                           A  1088    ;  234		asm ("ld a, kr_print_string");
0104C8 3E25                A  1089    ld a, kr_print_string
                           A  1090    ;  235		asm ("call.lil prose_kernal");
0104CA 5BCD200A 00         A  1091    call.lil prose_kernal
                           A  1092    ;  236		asm ("pop ix");	
0104CF DDE1                A  1093    pop ix
                           A  1094    ;  237	}
0104D1 DDF9                A  1095    	LD	SP,IX
0104D3 DDE1                A  1096    	POP	IX
0104D5 C9                  A  1097    	RET	
                           A  1098    
                           A  1099    
                           A  1100    ;**************************** _ShowMsg ********
                           A  1101    ;Name                         Addr/Register   S
                           A  1102    ;_TxtPnt                             STATIC    
                           A  1103    ;Txt                                   IX+6    
                           A  1104    
                           A  1105    
                           A  1106    ; Stack Frame Size: 9 (bytes)
                           A  1107    ;       Spill Code: 0 (instruction)
                           A  1108    
                           A  1109    
                           A  1110    ;  238	
                           A  1111    ;  239	//Load a 768 bytes palette, then conver
                           A  1112    ;  240	void LoadPcxPalette(void)
                           A  1113    ;  241	{
0104D6                     A  1114    _LoadPcxPalette:
0104D6 21FCFFFF            A  1115    	LD	HL,-4
0104DA CD 02 09 01         A  1116    	CALL	__frameset
                           A  1117    ;  242		short i, a;
                           A  1118    ;  243		
                           A  1119    ;  244		ShowMsg("Loading Palette...\n\r");
0104DE 01 57 0A 01         A  1120    	LD	BC,L__47
0104E2 C5                  A  1121    	PUSH	BC
0104E3 CD B6 04 01         A  1122    	CALL	_ShowMsg
0104E7 C1                  A  1123    	POP	BC
                           A  1124    ;  245		
                           A  1125    ;  246		asm ("push ix");
0104E8 DDE5                A  1126    push ix
                           A  1127    ;  247		asm ("ld hl, (_K_xHL)");
0104EA 2A BF 0A 01         A  1128    ld hl, (_K_xHL)
                           A  1129    ;  248		asm ("ld a, kr_find_file");
0104EE 3E0B                A  1130    ld a, kr_find_file
                           A  1131    ;  249		asm ("call.lil prose_kernal");
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  23


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0104F0 5BCD200A 00         A  1132    call.lil prose_kernal
                           A  1133    ;  250		asm ("pop ix");	
0104F5 DDE1                A  1134    pop ix
                           A  1135    ;  251		asm ("jr nz, PaletteError");
0104F7 C2 F8 05 01         A  1136    jr nz, PaletteError
                           A  1137    ;  252		asm ("ld (_K_xDE), de");
0104FB ED53 C2 0A 01       A  1138    ld (_K_xDE), de
                           A  1139    ;  253		
                           A  1140    ;  254		K_xDE -= 768;
010500 2A C2 0A 01         A  1141    	LD	HL,(_K_xDE)
010504 0100FDFF            A  1142    	LD	BC,-768
010508 09                  A  1143    	ADD	HL,BC
010509 22 C2 0A 01         A  1144    	LD	(_K_xDE),HL
                           A  1145    ;  255		
                           A  1146    ;  256		asm ("push ix");
01050D DDE5                A  1147    push ix
                           A  1148    ;  257		asm ("ld de, (_K_xDE)");	
01050F ED5B C2 0A 01       A  1149    ld de, (_K_xDE)
                           A  1150    ;  258		asm ("ld a, kr_set_file_pointer");
010514 3E0C                A  1151    ld a, kr_set_file_pointer
                           A  1152    ;  259		asm ("call.lil prose_kernal");
010516 5BCD200A 00         A  1153    call.lil prose_kernal
                           A  1154    ;  260		asm ("pop ix");
01051B DDE1                A  1155    pop ix
                           A  1156    ;  261		
                           A  1157    ;  262		asm ("push ix");
01051D DDE5                A  1158    push ix
                           A  1159    ;  263		asm ("ld de, 768");
01051F 11000300            A  1160    ld de, 768
                           A  1161    ;  264		asm ("ld a, kr_set_load_length");
010523 3E0D                A  1162    ld a, kr_set_load_length
                           A  1163    ;  265		asm ("call.lil prose_kernal");
010525 5BCD200A 00         A  1164    call.lil prose_kernal
                           A  1165    ;  266		asm ("pop ix");
01052A DDE1                A  1166    pop ix
                           A  1167    ;  267		
                           A  1168    ;  268		asm ("push ix");
01052C DDE5                A  1169    push ix
                           A  1170    ;  269		asm ("ld hl, (_PntPal)");
01052E 2A 16 16 01         A  1171    ld hl, (_PntPal)
                           A  1172    ;  270		asm ("ld a, kr_read_file");
010532 3E0E                A  1173    ld a, kr_read_file
                           A  1174    ;  271		asm ("call.lil prose_kernal");
010534 5BCD200A 00         A  1175    call.lil prose_kernal
                           A  1176    ;  272		asm ("jr nz, PaletteError");
010539 C2 F8 05 01         A  1177    jr nz, PaletteError
                           A  1178    ;  273		asm ("pop ix");
01053D DDE1                A  1179    pop ix
                           A  1180    ;  274		
                           A  1181    ;  275		a = 0;
01053F DD36FC00            A  1182    	LD	(IX+-4),0
010543 DD36FD00            A  1183    	LD	(IX+-3),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  24


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010547 DD36FE00            A  1184    	LD	(IX+-2),0
01054B DD36FF00            A  1185    	LD	(IX+-1),0
                           A  1186    ;  276		for (i = 0; i < 256; i++)
01054F C3 DB 05 01         A  1187    	JR	L_42
010553                     A  1188    L_40:
                           A  1189    ;  277		{
                           A  1190    ;  278			PcxPalette[i] = RGB2WORD(TmpPal
010553 DD07FC              A  1191    	LD	BC,(IX+-4)
010556 CD A5 09 01         A  1192    	CALL	__stoi
01055A 01 61 0D 01         A  1193    	LD	BC,_TmpPal
01055E 09                  A  1194    	ADD	HL,BC
01055F 7E                  A  1195    	LD	A,(HL)
010560 B7ED62              A  1196    	UEXT	HL
010563 6F                  A  1197    	LD	L,A
010564 01100000            A  1198    	LD	BC,16
010568 CD 12 09 01         A  1199    	CALL	__idivs
01056C 3E08                A  1200    	LD	A,8
01056E CD 93 09 01         A  1201    	CALL	__ishl_b
010572 E5D1                A  1202    	LD	DE,HL
010574 DD07FC              A  1203    	LD	BC,(IX+-4)
010577 CD A5 09 01         A  1204    	CALL	__stoi
01057B 23                  A  1205    	INC	HL
01057C 01 61 0D 01         A  1206    	LD	BC,_TmpPal
010580 09                  A  1207    	ADD	HL,BC
010581 7E                  A  1208    	LD	A,(HL)
010582 B7ED62              A  1209    	UEXT	HL
010585 6F                  A  1210    	LD	L,A
010586 01100000            A  1211    	LD	BC,16
01058A CD 12 09 01         A  1212    	CALL	__idivs
01058E 29                  A  1213    	ADD	HL,HL
01058F 29                  A  1214    	ADD	HL,HL
010590 29                  A  1215    	ADD	HL,HL
010591 29                  A  1216    	ADD	HL,HL
010592 19                  A  1217    	ADD	HL,DE
010593 E5D1                A  1218    	LD	DE,HL
010595 DD07FC              A  1219    	LD	BC,(IX+-4)
010598 CD A5 09 01         A  1220    	CALL	__stoi
01059C 23                  A  1221    	INC	HL
01059D 23                  A  1222    	INC	HL
01059E 01 61 0D 01         A  1223    	LD	BC,_TmpPal
0105A2 09                  A  1224    	ADD	HL,BC
0105A3 7E                  A  1225    	LD	A,(HL)
0105A4 B7ED62              A  1226    	UEXT	HL
0105A7 6F                  A  1227    	LD	L,A
0105A8 01100000            A  1228    	LD	BC,16
0105AC CD 12 09 01         A  1229    	CALL	__idivs
0105B0 19                  A  1230    	ADD	HL,DE
0105B1 E5D1                A  1231    	LD	DE,HL
0105B3 DD07FE              A  1232    	LD	BC,(IX+-2)
0105B6 CD A5 09 01         A  1233    	CALL	__stoi
0105BA 29                  A  1234    	ADD	HL,HL
0105BB 01 61 0B 01         A  1235    	LD	BC,_PcxPalette
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  25


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0105BF 09                  A  1236    	ADD	HL,BC
0105C0 D5C1                A  1237    	LD	BC,DE
0105C2 71                  A  1238    	LD	(HL),C
0105C3 23                  A  1239    	INC	HL
0105C4 70                  A  1240    	LD	(HL),B
                           A  1241    ;  279			
                           A  1242    ;  280			a+=3;
0105C5 DD31FC              A  1243    	LD	IY,(IX+-4)
0105C8 ED2303              A  1244    	LEA	HL,IY+3
0105CB DD75FC              A  1245    	LD	(IX+-4),L
0105CE DD74FD              A  1246    	LD	(IX+-3),H
0105D1 DD27FE              A  1247    	LD	HL,(IX+-2)
0105D4 23                  A  1248    	INC	HL
0105D5 DD75FE              A  1249    	LD	(IX+-2),L
0105D8 DD74FF              A  1250    	LD	(IX+-1),H
                           A  1251    ;  281		}
0105DB                     A  1252    L_42:
0105DB 49010001            A  1253    	LD.LIS	BC,256
0105DF DD27FE              A  1254    	LD	HL,(IX+-2)
0105E2 B7                  A  1255    	OR	A,A
0105E3 40ED42              A  1256    	SBC.SIS	HL,BC
0105E6 FA F0 05 01         A  1257    	JP	M,L__50
0105EA EA 53 05 01         A  1258    	JP	PE,L_40
0105EE 18 04               A  1259    	JR	L__51
0105F0                     A  1260    L__50:
0105F0 E2 53 05 01         A  1261    	JP	PO,L_40
0105F4                     A  1262    L__51:
                           A  1263    ;  282		
                           A  1264    ;  283		asm ("jp EndPalette");
0105F4 C3 02 06 01         A  1265    jp EndPalette
                           A  1266    ;  284		
                           A  1267    ;  285		asm("PaletteError:");
0105F8                     A  1268    PaletteError:
                           A  1269    ;  286		ShowMsg("Palette Reading error\n\r"
0105F8 01 6C 0A 01         A  1270    	LD	BC,L__49
0105FC C5                  A  1271    	PUSH	BC
0105FD CD B6 04 01         A  1272    	CALL	_ShowMsg
010601 C1                  A  1273    	POP	BC
                           A  1274    ;  287		
                           A  1275    ;  288		asm ("EndPalette:");
010602                     A  1276    EndPalette:
                           A  1277    ;  289	}
010602 DDF9                A  1278    	LD	SP,IX
010604 DDE1                A  1279    	POP	IX
010606 C9                  A  1280    	RET	
                           A  1281    
                           A  1282    
                           A  1283    ;**************************** _LoadPcxPalette *
                           A  1284    ;Name                         Addr/Register   S
                           A  1285    ;_PcxPalette                         STATIC    
                           A  1286    ;_TmpPal                             STATIC    
                           A  1287    ;_K_xDE                              STATIC    
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  26


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1288    ;_ShowMsg                            IMPORT  --
                           A  1289    ;a                                     IX-4    
                           A  1290    ;i                                     IX-2    
                           A  1291    
                           A  1292    
                           A  1293    ; Stack Frame Size: 10 (bytes)
                           A  1294    ;       Spill Code: 0 (instruction)
                           A  1295    
                           A  1296    
                           A  1297    	SEGMENT STRSECT
010A57                     A  1298    L__47:
010A57 4C6F6164 696E6720   A  1299    	DB	"Loading Palette..."
010A5F 50616C65 7474652E 
010A67 2E2E 
010A69 0A0D00              A  1300    	DB	10,13,0
010A6C                     A  1301    L__49:
010A6C 50616C65 74746520   A  1302    	DB	"Palette Reading error"
010A74 52656164 696E6720 
010A7C 6572726F 72 
010A81 0A0D00              A  1303    	DB	10,13,0
                           A  1304    	SEGMENT CODE
                           A  1305    ;  290	
                           A  1306    ;  291	//Load the Pcx compress data in second 
                           A  1307    ;  292	void LoadPcxFile(void)
                           A  1308    ;  293	{
010607                     A  1309    _LoadPcxFile:
                           A  1310    ;  294		ShowMsg("Loading Pcx Data...\n\r");
010607 01 84 0A 01         A  1311    	LD	BC,L__53
01060B C5                  A  1312    	PUSH	BC
01060C CD B6 04 01         A  1313    	CALL	_ShowMsg
010610 C1                  A  1314    	POP	BC
                           A  1315    ;  295		
                           A  1316    ;  296		asm ("push ix");
010611 DDE5                A  1317    push ix
                           A  1318    ;  297		asm ("ld hl, (_K_xHL)");
010613 2A BF 0A 01         A  1319    ld hl, (_K_xHL)
                           A  1320    ;  298		asm ("ld a, kr_find_file");
010617 3E0B                A  1321    ld a, kr_find_file
                           A  1322    ;  299		asm ("call.lil prose_kernal");
010619 5BCD200A 00         A  1323    call.lil prose_kernal
                           A  1324    ;  300		asm ("pop ix");	
01061E DDE1                A  1325    pop ix
                           A  1326    ;  301		asm ("jr nz, LoadPcxError");
010620 20 46               A  1327    jr nz, LoadPcxError
                           A  1328    ;  302		asm ("ld (_K_xDE), de");
010622 ED53 C2 0A 01       A  1329    ld (_K_xDE), de
                           A  1330    ;  303		
                           A  1331    ;  304		asm ("push ix");
010627 DDE5                A  1332    push ix
                           A  1333    ;  305		asm ("ld de, 128");
010629 11800000            A  1334    ld de, 128
                           A  1335    ;  306		asm ("ld a, kr_set_file_pointer");
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  27


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
01062D 3E0C                A  1336    ld a, kr_set_file_pointer
                           A  1337    ;  307		asm ("call.lil prose_kernal");
01062F 5BCD200A 00         A  1338    call.lil prose_kernal
                           A  1339    ;  308		asm ("pop ix");
010634 DDE1                A  1340    pop ix
                           A  1341    ;  309		
                           A  1342    ;  310		K_xDE = K_xDE - (128 + 768);
010636 2A C2 0A 01         A  1343    	LD	HL,(_K_xDE)
01063A 0180FCFF            A  1344    	LD	BC,-896
01063E 09                  A  1345    	ADD	HL,BC
01063F 22 C2 0A 01         A  1346    	LD	(_K_xDE),HL
                           A  1347    ;  311		
                           A  1348    ;  312		asm ("push ix");
010643 DDE5                A  1349    push ix
                           A  1350    ;  313		asm ("ld de, (_K_xDE)");
010645 ED5B C2 0A 01       A  1351    ld de, (_K_xDE)
                           A  1352    ;  314		asm ("ld a, kr_set_load_length");
01064A 3E0D                A  1353    ld a, kr_set_load_length
                           A  1354    ;  315		asm ("call.lil prose_kernal");
01064C 5BCD200A 00         A  1355    call.lil prose_kernal
                           A  1356    ;  316		asm ("pop ix");
010651 DDE1                A  1357    pop ix
                           A  1358    ;  317		
                           A  1359    ;  318		asm ("push ix");
010653 DDE5                A  1360    push ix
                           A  1361    ;  319		asm ("ld hl, (_VideoMemTmp)");
010655 2A 13 16 01         A  1362    ld hl, (_VideoMemTmp)
                           A  1363    ;  320		asm ("ld a, kr_read_file");
010659 3E0E                A  1364    ld a, kr_read_file
                           A  1365    ;  321		asm ("call.lil prose_kernal");
01065B 5BCD200A 00         A  1366    call.lil prose_kernal
                           A  1367    ;  322		asm ("jr nz, LoadPcxError");
010660 20 06               A  1368    jr nz, LoadPcxError
                           A  1369    ;  323		asm ("pop ix");
010662 DDE1                A  1370    pop ix
                           A  1371    ;  324		
                           A  1372    ;  325		asm ("jp EndLoadPcx");
010664 C3 72 06 01         A  1373    jp EndLoadPcx
                           A  1374    ;  326		
                           A  1375    ;  327		asm("LoadPcxError:");
010668                     A  1376    LoadPcxError:
                           A  1377    ;  328		ShowMsg("PCX Reading error\n\r");
010668 01 9A 0A 01         A  1378    	LD	BC,L__54
01066C C5                  A  1379    	PUSH	BC
01066D CD B6 04 01         A  1380    	CALL	_ShowMsg
010671 C1                  A  1381    	POP	BC
                           A  1382    ;  329		
                           A  1383    ;  330		asm ("EndLoadPcx:");
010672                     A  1384    EndLoadPcx:
                           A  1385    ;  331	}
010672 C9                  A  1386    	RET	
                           A  1387    
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  28


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1388    
                           A  1389    ;**************************** _LoadPcxFile ****
                           A  1390    ;Name                         Addr/Register   S
                           A  1391    ;_K_xDE                              STATIC    
                           A  1392    ;_ShowMsg                            IMPORT  --
                           A  1393    
                           A  1394    
                           A  1395    ; Stack Frame Size: 6 (bytes)
                           A  1396    ;       Spill Code: 0 (instruction)
                           A  1397    
                           A  1398    
                           A  1399    	SEGMENT STRSECT
010A84                     A  1400    L__53:
010A84 4C6F6164 696E6720   A  1401    	DB	"Loading Pcx Data..."
010A8C 50637820 44617461 
010A94 2E2E2E 
010A97 0A0D00              A  1402    	DB	10,13,0
010A9A                     A  1403    L__54:
010A9A 50435820 52656164   A  1404    	DB	"PCX Reading error"
010AA2 696E6720 6572726F 
010AAA 72 
010AAB 0A0D00              A  1405    	DB	10,13,0
                           A  1406    	SEGMENT CODE
                           A  1407    ;  332	
                           A  1408    ;  333	//Enable 320x240x256 colors
                           A  1409    ;  334	void Set_320_240_Mode(void)
                           A  1410    ;  335	{
010673                     A  1411    _Set_320_240_Mode:
                           A  1412    ;  336		asm ("push ix");
010673 DDE5                A  1413    push ix
                           A  1414    ;  337		
                           A  1415    ;  338		asm ("ld a, 0110b");
010675 3E06                A  1416    ld a, 0110b
                           A  1417    ;  339		asm ("ld (video_control), a");
010677 320018FF            A  1418    ld (video_control), a
                           A  1419    ;  340		asm ("ld a, 0");
01067B 3E00                A  1420    ld a, 0
                           A  1421    ;  341		asm ("ld (bgnd_palette_select), a")
01067D 320218FF            A  1422    ld (bgnd_palette_select), a
                           A  1423    ;  342		asm ("ld a, 99");
010681 3E63                A  1424    ld a, 99
                           A  1425    ;  343		asm ("ld (right_border_position), a
010683 320418FF            A  1426    ld (right_border_position), a
                           A  1427    ;  344		asm ("ld ix, bitmap_parameters");
010687 DD212010 FF         A  1428    ld ix, bitmap_parameters
                           A  1429    ;  345		asm ("ld (ix), 0");
01068C DD360000            A  1430    ld (ix), 0
                           A  1431    ;  346		asm ("ld (ix+04h), 1");
010690 DD360401            A  1432    ld (ix+04h), 1
                           A  1433    ;  347		asm ("ld (ix+08h), 0");
010694 DD360800            A  1434    ld (ix+08h), 0
                           A  1435    ;  348		asm ("ld (ix+0ch), 0");
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  29


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
010698 DD360C00            A  1436    ld (ix+0ch), 0
                           A  1437    ;  349		asm ("ld (ix+10h), 0 + (320 / 8) - 
01069C DD361027            A  1438    ld (ix+10h), 0 + (320 / 8) - 1
                           A  1439    ;  350		
                           A  1440    ;  351		asm ("ld hl, vram_a_addr");
0106A0 21000080            A  1441    ld hl, vram_a_addr
                           A  1442    ;  352		asm ("ld (hl), 0");
0106A4 3600                A  1443    ld (hl), 0
                           A  1444    ;  353		asm ("push hl");
0106A6 E5                  A  1445    push hl
                           A  1446    ;  354		asm ("pop de");
0106A7 D1                  A  1447    pop de
                           A  1448    ;  355		asm ("inc de");
0106A8 13                  A  1449    inc de
                           A  1450    ;  356		asm ("ld bc, 320*240");
0106A9 01002C01            A  1451    ld bc, 320*240
                           A  1452    ;  357		asm ("dec bc");
0106AD 0B                  A  1453    dec bc
                           A  1454    ;  358		asm ("ldir");
0106AE EDB0                A  1455    ldir
                           A  1456    ;  359		
                           A  1457    ;  360		asm ("pop ix");
0106B0 DDE1                A  1458    pop ix
                           A  1459    ;  361	}
0106B2 C9                  A  1460    	RET	
                           A  1461    
                           A  1462    
                           A  1463    ;**************************** _Set_320_240_Mode
                           A  1464    ;Name                         Addr/Register   S
                           A  1465    
                           A  1466    
                           A  1467    ; Stack Frame Size: 6 (bytes)
                           A  1468    ;       Spill Code: 0 (instruction)
                           A  1469    
                           A  1470    
                           A  1471    ;  362	
                           A  1472    ;  363	//Enable 640x480x256 colors
                           A  1473    ;  364	void Set_640_480_Mode(void)
                           A  1474    ;  365	{
0106B3                     A  1475    _Set_640_480_Mode:
                           A  1476    ;  366		asm ("push ix");
0106B3 DDE5                A  1477    push ix
                           A  1478    ;  367		
                           A  1479    ;  368		asm ("ld a, 0000b");
0106B5 3E00                A  1480    ld a, 0000b
                           A  1481    ;  369		asm ("ld (video_control), a");
0106B7 320018FF            A  1482    ld (video_control), a
                           A  1483    ;  370		asm ("ld a, 0");
0106BB 3E00                A  1484    ld a, 0
                           A  1485    ;  371		asm ("ld (bgnd_palette_select), a")
0106BD 320218FF            A  1486    ld (bgnd_palette_select), a
                           A  1487    ;  372		asm ("ld a, 99");
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  30


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0106C1 3E63                A  1488    ld a, 99
                           A  1489    ;  373		asm ("ld (right_border_position), a
0106C3 320418FF            A  1490    ld (right_border_position), a
                           A  1491    ;  374		asm ("ld ix, bitmap_parameters");	0106C7 DD212010 FF         A  1492    ld ix, bitmap_parameters
                           A  1493    ;  375		asm ("ld (ix), 0");
0106CC DD360000            A  1494    ld (ix), 0
                           A  1495    ;  376		asm ("ld (ix+04h), 1");
0106D0 DD360401            A  1496    ld (ix+04h), 1
                           A  1497    ;  377		asm ("ld (ix+08h), 0");
0106D4 DD360800            A  1498    ld (ix+08h), 0
                           A  1499    ;  378		asm ("ld (ix+0ch), 0");
0106D8 DD360C00            A  1500    ld (ix+0ch), 0
                           A  1501    ;  379		asm ("ld (ix+10h), 0 + (640 / 8) - 
0106DC DD36104F            A  1502    ld (ix+10h), 0 + (640 / 8) - 1
                           A  1503    ;  380		
                           A  1504    ;  381		asm ("ld hl, vram_a_addr");
0106E0 21000080            A  1505    ld hl, vram_a_addr
                           A  1506    ;  382		asm ("ld (hl), 0");
0106E4 3600                A  1507    ld (hl), 0
                           A  1508    ;  383		asm ("push hl");
0106E6 E5                  A  1509    push hl
                           A  1510    ;  384		asm ("pop de");
0106E7 D1                  A  1511    pop de
                           A  1512    ;  385		asm ("inc de");
0106E8 13                  A  1513    inc de
                           A  1514    ;  386		asm ("ld bc, 640*480");
0106E9 0100B004            A  1515    ld bc, 640*480
                           A  1516    ;  387		asm ("dec bc");
0106ED 0B                  A  1517    dec bc
                           A  1518    ;  388		asm ("ldir");
0106EE EDB0                A  1519    ldir
                           A  1520    ;  389		
                           A  1521    ;  390		asm ("pop ix");
0106F0 DDE1                A  1522    pop ix
                           A  1523    ;  391	}
0106F2 C9                  A  1524    	RET	
                           A  1525    
                           A  1526    
                           A  1527    ;**************************** _Set_640_480_Mode
                           A  1528    ;Name                         Addr/Register   S
                           A  1529    
                           A  1530    
                           A  1531    ; Stack Frame Size: 6 (bytes)
                           A  1532    ;       Spill Code: 0 (instruction)
                           A  1533    
                           A  1534    
                           A  1535    ;  392	
                           A  1536    ;  393	//Expand compress Pcx data into raw ima
                           A  1537    ;  394	void DecodePcxFile(void)
                           A  1538    ;  395	{
0106F3                     A  1539    _DecodePcxFile:
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  31


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0106F3 21F3FFFF            A  1540    	LD	HL,-13
0106F7 CD 02 09 01         A  1541    	CALL	__frameset
                           A  1542    ;  396		unsigned int NumData, fsize, tmp;
                           A  1543    ;  397		register unsigned char Data;
                           A  1544    ;  398		
                           A  1545    ;  399		fsize = 0;
0106FB 01000000            A  1546    	LD	BC,0
0106FF DD0FFC              A  1547    	LD	(IX+-4),BC
                           A  1548    ;  400		tmp = (unsigned int)XSize * (unsign
010702 ED4B 51 0B 01       A  1549    	LD	BC,(_XSize)
010707 CD A5 09 01         A  1550    	CALL	__stoi
01070B E5D1                A  1551    	LD	DE,HL
01070D ED4B 53 0B 01       A  1552    	LD	BC,(_YSize)
010712 CD A5 09 01         A  1553    	CALL	__stoi
010716 E5C1                A  1554    	LD	BC,HL
010718 D5E1                A  1555    	LD	HL,DE
01071A CD 57 09 01         A  1556    	CALL	__imulu
01071E DD2FF6              A  1557    	LD	(IX+-10),HL
                           A  1558    ;  401		
                           A  1559    ;  402		while (fsize <= tmp)
010721 18 7B               A  1560    	JR	L_56
010723                     A  1561    L_57:
                           A  1562    ;  403		{
                           A  1563    ;  404			Data = *VideoMemTmp++;
010723 ED4B 13 16 01       A  1564    	LD	BC,(_VideoMemTmp)
010728 DD0FF3              A  1565    	LD	(IX+-13),BC
01072B C5E1                A  1566    	LD	HL,BC
01072D 7E                  A  1567    	LD	A,(HL)
01072E DD77FF              A  1568    	LD	(IX+-1),A
010731 ED4B 13 16 01       A  1569    	LD	BC,(_VideoMemTmp)
010736 03                  A  1570    	INC	BC
010737 ED43 13 16 01       A  1571    	LD	(_VideoMemTmp),BC
                           A  1572    ;  405			
                           A  1573    ;  406			if (Data < 192)
01073C DD7EFF              A  1574    	LD	A,(IX+-1)
01073F FEC0                A  1575    	CP	A,192
010741 30 14               A  1576    	JR	NC,L_51
                           A  1577    ;  407			{
                           A  1578    ;  408				PutPcxPixel(Data);
010743 DD4EFF              A  1579    	LD	C,(IX+-1)
010746 0600                A  1580    	LD	B,0
010748 C5                  A  1581    	PUSH	BC
010749 CD B0 07 01         A  1582    	CALL	_PutPcxPixel
01074D C1                  A  1583    	POP	BC
                           A  1584    ;  409				
                           A  1585    ;  410				fsize++;
01074E DD07FC              A  1586    	LD	BC,(IX+-4)
010751 03                  A  1587    	INC	BC
010752 DD0FFC              A  1588    	LD	(IX+-4),BC
                           A  1589    ;  411				
                           A  1590    ;  412				continue;
010755 18 47               A  1591    	JR	L_56
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  32


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1592    ;  413			}
010757                     A  1593    L_51:
                           A  1594    ;  414			
                           A  1595    ;  415			NumData = Data & 0x3F;
010757 DD7EFF              A  1596    	LD	A,(IX+-1)
01075A E63F                A  1597    	AND	A,63
01075C B7ED62              A  1598    	UEXT	HL
01075F 6F                  A  1599    	LD	L,A
010760 DD2FF9              A  1600    	LD	(IX+-7),HL
                           A  1601    ;  416			fsize += NumData;
010763 DD07FC              A  1602    	LD	BC,(IX+-4)
010766 09                  A  1603    	ADD	HL,BC
010767 DD2FFC              A  1604    	LD	(IX+-4),HL
                           A  1605    ;  417			Data = *VideoMemTmp++;
01076A 2A 13 16 01         A  1606    	LD	HL,(_VideoMemTmp)
01076E 7E                  A  1607    	LD	A,(HL)
01076F DD77FF              A  1608    	LD	(IX+-1),A
010772 ED4B 13 16 01       A  1609    	LD	BC,(_VideoMemTmp)
010777 03                  A  1610    	INC	BC
010778 ED43 13 16 01       A  1611    	LD	(_VideoMemTmp),BC
                           A  1612    ;  418			
                           A  1613    ;  419			while(NumData-- > 0)
01077D 18 0B               A  1614    	JR	L_54
01077F                     A  1615    L_55:
                           A  1616    ;  420				PutPcxPixel(Data);
01077F DD4EFF              A  1617    	LD	C,(IX+-1)
010782 0600                A  1618    	LD	B,0
010784 C5                  A  1619    	PUSH	BC
010785 CD B0 07 01         A  1620    	CALL	_PutPcxPixel
010789 C1                  A  1621    	POP	BC
01078A                     A  1622    L_54:
01078A DD07F9              A  1623    	LD	BC,(IX+-7)
01078D B7                  A  1624    	OR	A,A
01078E ED62                A  1625    	SBC	HL,HL
010790 B7                  A  1626    	OR	A,A
010791 ED42                A  1627    	SBC	HL,BC
010793 DD31F9              A  1628    	LD	IY,(IX+-7)
010796 ED33FF              A  1629    	LEA	IY,IY+-1
010799 DD3EF9              A  1630    	LD	(IX+-7),IY
01079C 38 E1               A  1631    	JR	C,L_55
                           A  1632    ;  421		}
01079E                     A  1633    L_56:
01079E DD07FC              A  1634    	LD	BC,(IX+-4)
0107A1 DD27F6              A  1635    	LD	HL,(IX+-10)
0107A4 B7                  A  1636    	OR	A,A
0107A5 ED42                A  1637    	SBC	HL,BC
0107A7 D2 23 07 01         A  1638    	JR	NC,L_57
                           A  1639    ;  422	}
0107AB DDF9                A  1640    	LD	SP,IX
0107AD DDE1                A  1641    	POP	IX
0107AF C9                  A  1642    	RET	
                           A  1643    
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  33


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1644    
                           A  1645    ;**************************** _DecodePcxFile **
                           A  1646    ;Name                         Addr/Register   S
                           A  1647    ;_PutPcxPixel                        IMPORT  --
                           A  1648    ;_VideoMemTmp                        STATIC    
                           A  1649    ;_YSize                              STATIC    
                           A  1650    ;_XSize                              STATIC    
                           A  1651    ;tmp                                  IX-10    
                           A  1652    ;NumData                               IX-7    
                           A  1653    ;fsize                                 IX-4    
                           A  1654    ;Data                                  IX-1    
                           A  1655    
                           A  1656    
                           A  1657    ; Stack Frame Size: 19 (bytes)
                           A  1658    ;       Spill Code: 0 (instruction)
                           A  1659    
                           A  1660    
                           A  1661    ;  423	
                           A  1662    ;  424	//Put image pixel on screen
                           A  1663    ;  425	void PutPcxPixel(unsigned char Px)
                           A  1664    ;  426	{
0107B0                     A  1665    _PutPcxPixel:
0107B0 CD D9 08 01         A  1666    	CALL	__frameset0
                           A  1667    ;  427		VideoMem[YOffset[PosY + StartY] + (
0107B4 ED4B 5F 0B 01       A  1668    	LD	BC,(_PosY)
0107B9 CD A5 09 01         A  1669    	CALL	__stoi
0107BD E5D1                A  1670    	LD	DE,HL
0107BF ED4B 57 0B 01       A  1671    	LD	BC,(_StartY)
0107C4 CD A5 09 01         A  1672    	CALL	__stoi
0107C8 19                  A  1673    	ADD	HL,DE
0107C9 E5C1                A  1674    	LD	BC,HL
0107CB C5E1                A  1675    	LD	HL,BC
0107CD 29                  A  1676    	ADD	HL,HL
0107CE 29                  A  1677    	ADD	HL,HL
0107CF B7                  A  1678    	OR	A,A
0107D0 ED42                A  1679    	SBC	HL,BC
0107D2 01 61 10 01         A  1680    	LD	BC,_YOffset
0107D6 09                  A  1681    	ADD	HL,BC
0107D7 E5FDE1              A  1682    	LD	IY,HL
0107DA ED4B 5D 0B 01       A  1683    	LD	BC,(_PosX)
0107DF CD A5 09 01         A  1684    	CALL	__stoi
0107E3 E5D1                A  1685    	LD	DE,HL
0107E5 ED4B 55 0B 01       A  1686    	LD	BC,(_StartX)
0107EA CD A5 09 01         A  1687    	CALL	__stoi
0107EE 19                  A  1688    	ADD	HL,DE
0107EF FD0700              A  1689    	LD	BC,(IY)
0107F2 09                  A  1690    	ADD	HL,BC
0107F3 ED4B 10 16 01       A  1691    	LD	BC,(_VideoMem)
0107F8 09                  A  1692    	ADD	HL,BC
0107F9 DD7E06              A  1693    	LD	A,(IX+6)
0107FC 77                  A  1694    	LD	(HL),A
                           A  1695    ;  428		
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  34


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1696    ;  429		PosX++;
0107FD ED4B 5D 0B 01       A  1697    	LD	BC,(_PosX)
010802 03                  A  1698    	INC	BC
010803 21 5D 0B 01         A  1699    	LD	HL,_PosX
010807 71                  A  1700    	LD	(HL),C
010808 23                  A  1701    	INC	HL
010809 70                  A  1702    	LD	(HL),B
                           A  1703    ;  430		
                           A  1704    ;  431		if (PosX >= XSize)
01080A ED4B 51 0B 01       A  1705    	LD	BC,(_XSize)
01080F 2A 5D 0B 01         A  1706    	LD	HL,(_PosX)
010813 B7                  A  1707    	OR	A,A
010814 40ED42              A  1708    	SBC.SIS	HL,BC
010817 FA 21 08 01         A  1709    	JP	M,L__63
01081B EA 3B 08 01         A  1710    	JP	PE,L_62
01081F 18 04               A  1711    	JR	L__64
010821                     A  1712    L__63:
010821 E2 3B 08 01         A  1713    	JP	PO,L_62
010825                     A  1714    L__64:
                           A  1715    ;  432		{
                           A  1716    ;  433			PosX = 0;
010825 21 5D 0B 01         A  1717    	LD	HL,_PosX
010829 3600                A  1718    	LD	(HL),0
01082B 23                  A  1719    	INC	HL
01082C 3600                A  1720    	LD	(HL),0
                           A  1721    ;  434			PosY++;
01082E ED4B 5F 0B 01       A  1722    	LD	BC,(_PosY)
010833 03                  A  1723    	INC	BC
010834 21 5F 0B 01         A  1724    	LD	HL,_PosY
010838 71                  A  1725    	LD	(HL),C
010839 23                  A  1726    	INC	HL
01083A 70                  A  1727    	LD	(HL),B
                           A  1728    ;  435		}
                           A  1729    ;  436	}
01083B                     A  1730    L_62:
01083B DDF9                A  1731    	LD	SP,IX
01083D DDE1                A  1732    	POP	IX
01083F C9                  A  1733    	RET	
                           A  1734    
                           A  1735    
                           A  1736    ;**************************** _PutPcxPixel ****
                           A  1737    ;Name                         Addr/Register   S
                           A  1738    ;_XSize                              STATIC    
                           A  1739    ;_StartX                             STATIC    
                           A  1740    ;_PosX                               STATIC    
                           A  1741    ;_StartY                             STATIC    
                           A  1742    ;_PosY                               STATIC    
                           A  1743    ;_YOffset                            STATIC   1
                           A  1744    ;_VideoMem                           STATIC    
                           A  1745    ;Px                                    IX+6    
                           A  1746    
                           A  1747    
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  35


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1748    ; Stack Frame Size: 9 (bytes)
                           A  1749    ;       Spill Code: 0 (instruction)
                           A  1750    
                           A  1751    
                           A  1752    ;  437	
                           A  1753    ;  438	void BuildOffset(void)
                           A  1754    ;  439	{
010840                     A  1755    _BuildOffset:
010840 21FEFFFF            A  1756    	LD	HL,-2
010844 CD 02 09 01         A  1757    	CALL	__frameset
010848 DD36FE00            A  1758    	LD	(IX+-2),0
01084C DD36FF00            A  1759    	LD	(IX+-1),0
                           A  1760    ;  440		short i;
                           A  1761    ;  441		
                           A  1762    ;  442		for (i = 0; i < VideoY; i++)
010850 18 3D               A  1763    	JR	L_66
010852                     A  1764    L_64:
                           A  1765    ;  443			YOffset[i] = (unsigned int)i * 
010852 ED4B 59 0B 01       A  1766    	LD	BC,(_VideoX)
010857 CD A5 09 01         A  1767    	CALL	__stoi
01085B E5D1                A  1768    	LD	DE,HL
01085D DD07FE              A  1769    	LD	BC,(IX+-2)
010860 CD A5 09 01         A  1770    	CALL	__stoi
010864 E5C1                A  1771    	LD	BC,HL
010866 D5E1                A  1772    	LD	HL,DE
010868 CD 57 09 01         A  1773    	CALL	__imulu
01086C E5D1                A  1774    	LD	DE,HL
01086E DD07FE              A  1775    	LD	BC,(IX+-2)
010871 CD A5 09 01         A  1776    	CALL	__stoi
010875 E5C1                A  1777    	LD	BC,HL
010877 C5E1                A  1778    	LD	HL,BC
010879 29                  A  1779    	ADD	HL,HL
01087A 29                  A  1780    	ADD	HL,HL
01087B B7                  A  1781    	OR	A,A
01087C ED42                A  1782    	SBC	HL,BC
01087E 01 61 10 01         A  1783    	LD	BC,_YOffset
010882 09                  A  1784    	ADD	HL,BC
010883 ED1F                A  1785    	LD	(HL),DE
010885 DD27FE              A  1786    	LD	HL,(IX+-2)
010888 23                  A  1787    	INC	HL
010889 DD75FE              A  1788    	LD	(IX+-2),L
01088C DD74FF              A  1789    	LD	(IX+-1),H
01088F                     A  1790    L_66:
01088F ED4B 5B 0B 01       A  1791    	LD	BC,(_VideoY)
010894 DD27FE              A  1792    	LD	HL,(IX+-2)
010897 B7                  A  1793    	OR	A,A
010898 40ED42              A  1794    	SBC.SIS	HL,BC
01089B FA A5 08 01         A  1795    	JP	M,L__67
01089F EA 52 08 01         A  1796    	JP	PE,L_64
0108A3 18 04               A  1797    	JR	L__68
0108A5                     A  1798    L__67:
0108A5 E2 52 08 01         A  1799    	JP	PO,L_64
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  36


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
0108A9                     A  1800    L__68:
0108A9 DDF9                A  1801    	LD	SP,IX
0108AB DDE1                A  1802    	POP	IX
0108AD C9                  A  1803    	RET	
                           A  1804    
                           A  1805    
                           A  1806    ;**************************** _BuildOffset ****
                           A  1807    ;Name                         Addr/Register   S
                           A  1808    ;_VideoY                             STATIC    
                           A  1809    ;_YOffset                            STATIC   1
                           A  1810    ;_VideoX                             STATIC    
                           A  1811    ;i                                     IX-2    
                           A  1812    
                           A  1813    
                           A  1814    ; Stack Frame Size: 8 (bytes)
                           A  1815    ;       Spill Code: 0 (instruction)
                           A  1816    
                           A  1817    
                           A  1818    	XREF _memcpy:ROM
                           A  1819    	XREF __idivs:ROM
                           A  1820    	XREF __idivu:ROM
                           A  1821    	XREF __imulu:ROM
                           A  1822    	XREF __iremu:ROM
                           A  1823    	XREF __stoi:ROM
                           A  1824    	XREF __frameset0:ROM
                           A  1825    	XREF __frameset:ROM
                           A  1826    	XREF __ishl_b:ROM
                           A  1827    	XDEF _BuildOffset
                           A  1828    	XDEF _PutPcxPixel
                           A  1829    	XDEF _DecodePcxFile
                           A  1830    	XDEF _Set_640_480_Mode
                           A  1831    	XDEF _Set_320_240_Mode
                           A  1832    	XDEF _LoadPcxFile
                           A  1833    	XDEF _LoadPcxPalette
                           A  1834    	XDEF _ShowMsg
                           A  1835    	XDEF _uitoa
                           A  1836    	XDEF _Make_Short
                           A  1837    	XDEF _main
                           A  1838    	XDEF _YOffset
                           A  1839    	XDEF _PntPal
                           A  1840    	XDEF _TmpPal
                           A  1841    	XDEF _PcxPalette
                           A  1842    	XDEF _PosY
                           A  1843    	XDEF _PosX
                           A  1844    	XDEF _VideoY
                           A  1845    	XDEF _VideoX
                           A  1846    	XDEF _StartY
                           A  1847    	XDEF _StartX
                           A  1848    	XDEF _YSize
                           A  1849    	XDEF _XSize
                           A  1850    	XDEF _MaxY
                           A  1851    	XDEF _MaxX
Zilog eZ80 Macro Assembler Version 4.1 (10060805) RELISTED01-Jul-11     10:54:49     page:  37


PC     Object              I  Line    Source C:\DOCUME~1\_Enzo_\Desktop\pcxview\Debug\main.src
                           A  1852    	XDEF _MinY
                           A  1853    	XDEF _MinX
                           A  1854    	XDEF _convBuf
                           A  1855    	XDEF _VideoMemTmp
                           A  1856    	XDEF _VideoMem
                           A  1857    	XDEF _PntHeader
                           A  1858    	END


Errors: 0
Warnings: 0
Lines Assembled: 1859
