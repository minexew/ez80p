Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       00000083            B    49    TMR1_CTL		equ 083h 
       00000084            B    50    TMR1_RR_L		equ 084h
       00000085            B    51    TMR1_RR_H		equ 085h
                           B    52    
       000000ED            B    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    54    RTC_ACTRL		equ 0ech
       000000E0            B    55    RTC_SEC			equ 0e0h
       000000E1            B    56    RTC_MIN			equ 0e1h
       000000E2            B    57    RTC_HRS			equ 0e2h
       000000E3            B    58    RTC_DOW			equ 0e3h
       000000E4            B    59    RTC_DOM			equ 0e4h
       000000E5            B    60    RTC_MON			equ 0e5h
       000000E6            B    61    RTC_YR			equ 0e6h
       000000E7            B    62    RTC_CEN			equ 0e7h
                           B    63    
                           B    64    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    49    irq_line_hi				equ hw_video_settings+0
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location			equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 		equ os_location + 14h
       00000A18            B     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            B     8    prose_relative_call	equ os_location + 1ch
                           B     9    
       00000A20            B    10    prose_kernal 		equ os_location + 20h
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    ; Add to sprite locations to position a 0,0 spr
                           B    15    
       0000009A            B    16    x_display_offset	equ 09ah
       00000025            B    17    y_display_offset	equ 025h
                           B    18    
                           B    19    ;----------------------------------------------
                           A    12    	
       00000800            A    13    	sector_buffer		equ 800h
       00000700            A    14    	serial_buffer		equ 700h
                           A    15    	
       00000100            A    16    	scratch_pad			equ 100h
                           A    17    
       00000200            A    18    	envar_list			equ 200h
       00000200            A    19    	envar_buffer_size	equ 200h
                           A    20    	
                           A    21    ;----------------------------------------------
                           A    22    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       0000003A            A    23    prose_version			equ 3ah
       00000107            A    24    amoeba_version_required	equ 107h
                           A    25    
       00080000            A    26    sysram_size				equ 080000h			;as
       00000200            A    27    stack_size				equ 512
                           A    28    
       00080000            A    29    vram_a_size				equ 080000h
       00080000            A    30    vram_b_size				equ 080000h
                           A    31    
                           A    32    ;----------------------------------------------
                           A    33    ; Assembly options
                           A    34    ;----------------------------------------------
                           A    35    
       00000008            A    36    max_volumes				equ 8
                           A    37    
       00000050            A    38    max_buffer_chars		equ 80		; applies t
                           A    39    
                           A    40    ;----------------------------------------------
                           A    41    			
000A00                     A    42    			org os_location
                           A    43    			
000A00 00 00 00 00 00 00   A    44    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    45    			
                           A    46    ;----------------------------------------------
                           A    47    			
000A10 C3 4E 0A 00         A    48    				jp os_first_run					000A14 C3 6A 0F 00         A    49    				jp extcmd_return				000A18 C3 5C 3A 00         A    50    				jp relativize_hl				000A1C C3 6F 3A 00         A    51    				jp relative_call				                           A    52    				
                           A    53    ;----------------------------------------------
                           A    54    
                           A    55    ; External apps can call kernal routines by doi
                           A    56    ; Set A to kernal routine number required (see 
                           A    57    ; (this routine is always located at os_locatio
                           A    58    
000A20 D9                  A    59    				exx
000A21 DD22 F7 69 00       A    60    				ld (kernal_ix_cache),ix
000A26 DD21 84 5D 00       A    61    				ld ix,kernal_table				000A2B 11030000            A    62    				ld de,3
000A2F 57                  A    63    				ld d,a
000A30 ED5C                A    64    				mlt de
000A32 DD19                A    65    				add ix,de						000A34 DD3700              A    66    				ld ix,(ix)						                           A    67    				
000A37 E3                  A    68    				ex (sp),hl
000A38 7D                  A    69    				ld a,l							000A39 E601                A    70    				and 1							000A3B E3                  A    71    				ex (sp),hl
000A3C D9                  A    72    				exx
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A3D FDE5                A    73    				push iy
000A3F CD 4C 0A 00         A    74    				call kr_jump					000A43 FDE1                A    75    				pop iy							000A45 DD2A F7 69 00       A    76    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    77    				ret.l							                           A    78    				
000A4C DDE9                A    79    kr_jump			jp (ix)							                           A    80    						
                           A    81    ;----------------------------------------------
                           A    82    
                           A    83    ; *******************
                           A    84    ; *   START UP OS   *
                           A    85    ; *******************
                           A    86    
000A4E                     A    87    os_first_run
                           A    88    	
000A4E B7                  A    89    				or a							000A4F 20 05               A    90    				jr nz,os_cold_start		
000A51 78                  A    91    				ld a,b
000A52 32 79 68 00         A    92    				ld (boot_drive),a				                           A    93    
000A56                     A    94    os_cold_start
000A56 ED7D                A    95    				stmix							000A58 F3                  A    96    				di								000A59 ED5E                A    97    				im 2							000A5B AF                  A    98    				xor a
000A5C ED6D                A    99    				ld MB,a							000A5E 4031FFFF            A   100    				ld.sis sp,0ffffh				000A62 31FFFF07            A   101    				ld sp,sysram_addr+sysram_size-1
000A66 21FFFF07            A   102    				ld hl,sysram_addr+sysram_size-1
000A6A 11000200            A   103    				ld de,stack_size
000A6E AF                  A   104    				xor a
000A6F ED52                A   105    				sbc hl,de
000A71 22 BA 69 00         A   106    				ld (free_sysram_top),hl			000A75 21 83 6F 00         A   107    				ld hl,os_max_addr
000A79 22 B7 69 00         A   108    				ld (free_sysram_base),hl
                           A   109    				
000A7D 21000080            A   110    				ld hl,vram_a_addr
000A81 22 BD 69 00         A   111    				ld (free_vram_a_base),hl
000A85 01FFFF07            A   112    				ld bc,vram_a_size-1
000A89 09                  A   113    				add hl,bc
000A8A 22 C0 69 00         A   114    				ld (free_vram_a_top),hl
                           A   115    				
000A8E 210000C0            A   116    				ld hl,vram_b_addr
000A92 22 C3 69 00         A   117    				ld (free_vram_b_base),hl
000A96 01FFFD07            A   118    				ld bc,vram_b_size-1-512			000A9A 09                  A   119    				add hl,bc
000A9B 22 C6 69 00         A   120    				ld (free_vram_b_top),hl
                           A   121    								
000A9F CD E1 42 00         A   122    				call disable_irqs
000AA3 CD 00 45 00         A   123    				call disable_all_nmis
                           A   124    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000AA7 3A B5 69 00         A   125    				ld a,(first_run)				000AAB B7                  A   126    				or a
000AAC 28 11               A   127    				jr z,dont_resetkb
000AAE CD 3E 49 00         A   128    				call init_keyboard
000AB2 28 06               A   129    				jr z,kb_ok
000AB4 21 B6 69 00         A   130    				ld hl,devices_connected
000AB8 CB86                A   131    				res 0,(hl)
000ABA AF                  A   132    kb_ok			xor a
000ABB 32 B5 69 00         A   133    				ld (first_run),a
000ABF                     A   134    dont_resetkb
                           A   135    				
000ABF 21 EF 6B 00         A   136    				ld hl,packed_font_start
000AC3 11000080            A   137    				ld de,vram_a_addr
000AC7 01 E2 02 00         A   138    				ld bc,packed_font_end-packed_fo
000ACB CD 92 16 00         A   139    				call unpack_rle
000ACF CD 09 35 00         A   140    				call convert_font
                           A   141    
000AD3 CD B2 39 00         A   142    				call test_amoeba_vers
                           A   143    				
000AD7 21 F7 69 00         A   144    				ld hl,os_variables				000ADB 01 DC 01 00         A   145    				ld bc,last_os_var-os_variables
000ADF AF                  A   146    				xor a
000AE0 CD 47 16 00         A   147    				call os_bchl_memfill
                           A   148    				
000AE4 21000200            A   149    				ld hl,envar_list				000AE8 01000200            A   150    				ld bc,envar_buffer_size
000AEC AF                  A   151    				xor a
000AED CD 47 16 00         A   152    				call os_bchl_memfill
000AF1 21 D4 6B 00         A   153    				ld hl,default_envars
000AF5 11000200            A   154    				ld de,envar_list
000AF9 01 18 00 00         A   155    				ld bc,envar_top_loc-default_env
000AFD EDB0                A   156    				ldir
000AFF 1B                  A   157    				dec de
000B00 ED53 EC 6B 00       A   158    				ld (envar_top_loc),de			                           A   159    	
000B05 CD E7 47 00         A   160    				call hwsc_default_hw_settings
000B09 CD D2 4B 00         A   161    				call hwsc_disable_audio
                           A   162    				
000B0D 3A F1 67 00         A   163    				ld a,(video_mode)
000B11 CD 20 16 00         A   164    				call os_set_vmode				                           A   165    				
000B15 21 86 5E 00         A   166    				ld hl,welcome_message			000B19 CD 60 10 00         A   167    				call os_print_string
                           A   168    				
000B1D CD E8 33 00         A   169    				call os_cmd_vers				                           A   170    				
000B21 CD DC 33 00         A   171    				call os_cmd_remount				                           A   172    
000B25 CD 06 15 00         A   173    				call os_new_line				                           A   174    
000B29 CD FC 49 00         A   175    				call purge_keyboard
                           A   176    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B2D CD 66 42 00         A   177    				call set_irq_vectors
000B31 CD BE 42 00         A   178    				call enable_os_irqs
000B35 FB                  A   179    				ei
                           A   180    				
000B36 21 B6 69 00         A   181    				ld hl,devices_connected			000B3A CB46                A   182    				bit 0,(hl)
000B3C 20 08               A   183    				jr nz,kb_present
000B3E 21 5F 64 00         A   184    				ld hl,no_keyboard_msg
000B42 CD 3D 15 00         A   185    				call os_show_packed_text
000B46                     A   186    kb_present				
                           A   187    
000B46 21 B5 5E 00         A   188    				ld hl,startup_script_fn
000B4A CD 48 10 00         A   189    				call set_script_fn
000B4E 22 23 6B 00         A   190    				ld (os_args_loc),hl
000B52 CD 2D 3C 00         A   191    				call os_do_script				                           A   192    									
000B56 3A B4 69 00         A   193    				ld a,(frozen)					000B5A B7                  A   194    				or a
000B5B 28 11               A   195    				jr z,os_main_loop
000B5D AF                  A   196    				xor a
000B5E 32 B4 69 00         A   197    				ld (frozen),a
000B62 21 0C 5F 00         A   198    				ld hl,nmi_freeze_txt
000B66 CD 60 10 00         A   199    				call os_print_string
000B6A CD 80 2E 00         A   200    				call os_cmd_r
                           A   201    				
                           A   202    
                           A   203    ;==============================================
                           A   204    
000B6E CD D7 47 00         A   205    os_main_loop	call hwsc_wait_vrt				                           A   206    
000B72 CD B1 10 00         A   207    				call os_cursor_flash
                           A   208    
000B76 CD 73 4C 00         A   209    				call os_get_key_press
000B7A 20 F2               A   210    				jr nz,os_main_loop
                           A   211    	
000B7C 32 A0 6B 00         A   212    				ld (current_scancode),a
000B80 78                  A   213    				ld a,b
000B81 32 A1 6B 00         A   214    				ld (current_asciicode),a		                           A   215    	
000B85 CD B6 46 00         A   216    				call hwsc_remove_cursor
000B89 3E18                A   217    				ld a,24							000B8B 32 64 6A 00         A   218    				ld (cursorflashtimer),a			000B8F AF                  A   219    				xor a
000B90 32 65 6A 00         A   220    				ld (cursor_status),a
                           A   221    				
000B94 3A A0 6B 00         A   222    				ld a,(current_scancode)			000B98 FE70                A   223    				cp 70h
000B9A 20 0C               A   224    				jr nz,os_notins
000B9C 3A 19 68 00         A   225     				ld a,(overwrite_mode)
000BA0 EE01                A   226    				xor 1
000BA2 32 19 68 00         A   227    				ld (overwrite_mode),a
000BA6 18 C6               A   228    				jr os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   229    
000BA8 FE6C                A   230    os_notins		cp 6ch
000BAA 20 07               A   231    				jr nz,not_homekey
000BAC AF                  A   232    				xor a
000BAD 32 62 6A 00         A   233    				ld (cursor_x),a
000BB1 18 BB               A   234    				jr os_main_loop
                           A   235    								
000BB3 FE69                A   236    not_homekey		cp 69h
000BB5 20 24               A   237    				jr nz,not_endkey
000BB7 3A 61 6A 00         A   238    				ld a,(cursor_y)					000BBB 4F                  A   239    				ld c,a
000BBC 3A 1F 68 00         A   240    				ld a,(charmap_columns)
000BC0 47                  A   241    				ld b,a
000BC1 05                  A   242    fendloop		dec b
000BC2 CD 24 47 00         A   243    				call hwsc_get_charmap_addr_xy
000BC6 7E                  A   244    				ld a,(hl)
000BC7 FE20                A   245    				cp 20h
000BC9 28 F6               A   246    				jr z,fendloop
000BCB 04                  A   247    				inc b
000BCC 3A 1F 68 00         A   248    				ld a,(charmap_columns)
000BD0 B8                  A   249    				cp b
000BD1 20 01               A   250    				jr nz,endxposok
000BD3 05                  A   251    				dec b
000BD4 78                  A   252    endxposok		ld a,b
000BD5 32 62 6A 00         A   253    				ld (cursor_x),a
000BD9 18 93               A   254    				jr os_main_loop
                           A   255    
000BDB 21 62 6A 00         A   256    not_endkey		ld hl,cursor_x					000BDF FE6B                A   257    				cp 06bh			
000BE1 20 10               A   258    				jr nz,os_ntlft
000BE3 35                  A   259    				dec (hl)
000BE4 7E                  A   260    				ld a,(hl)
000BE5 FEFF                A   261    				cp 0ffh	
000BE7 20 85               A   262    				jr nz,os_main_loop
000BE9 3A 1F 68 00         A   263    				ld a,(charmap_columns)
000BED 3D                  A   264    				dec a
000BEE 77                  A   265    				ld (hl),a						000BEF C3 6E 0B 00         A   266    				jr os_main_loop
                           A   267    
000BF3 FE74                A   268    os_ntlft		cp 074h							000BF5 20 10               A   269    				jr nz,os_ntrig
000BF7 34                  A   270    				inc (hl)
000BF8 3A 1F 68 00         A   271    				ld a,(charmap_columns)
000BFC BE                  A   272    				cp (hl)
000BFD C2 6E 0B 00         A   273    				jr nz,os_main_loop
000C01 3600                A   274    				ld (hl),0						000C03 C3 6E 0B 00         A   275    				jr os_main_loop
                           A   276    
000C07 21 61 6A 00         A   277    os_ntrig		ld hl,cursor_y
000C0B FE75                A   278    				cp 075h							000C0D 20 0D               A   279    				jr nz,os_ntup
000C0F 35                  A   280    				dec (hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C10 CB7E                A   281    				bit 7,(hl)
000C12 CA 6E 0B 00         A   282    				jr z,os_main_loop
000C16 3600                A   283    				ld (hl),0						000C18 C3 6E 0B 00         A   284    				jr os_main_loop
                           A   285    
000C1C FE72                A   286    os_ntup			cp 072h
000C1E 20 14               A   287    				jr nz,os_ntdwn					000C20 34                  A   288    				inc (hl)
000C21 3A 1C 68 00         A   289    				ld a,(charmap_rows)
000C25 BE                  A   290    				cp (hl)
000C26 C2 6E 0B 00         A   291    				jr nz,os_main_loop
000C2A 3D                  A   292    				dec a
000C2B 77                  A   293    				ld (hl),a						000C2C CD 42 46 00         A   294    				call hwsc_scroll_up
000C30 C3 6E 0B 00         A   295    				jr os_main_loop
                           A   296    
000C34 FE71                A   297    os_ntdwn		cp 071h							000C36 20 08               A   298    				jr nz,os_nodel		
000C38 3A 62 6A 00         A   299    				ld a,(cursor_x)					000C3C 47                  A   300    				ld b,a
000C3D 04                  A   301    				inc b
000C3E 18 13               A   302    				jr os_chrbk
                           A   303    
000C40 FE66                A   304    os_nodel		cp 066h							000C42 20 17               A   305    				jr nz,os_nbksp
000C44 3A 62 6A 00         A   306    				ld a,(cursor_x)					000C48 B7                  A   307    				or a							000C49 CA 6E 0B 00         A   308    				jp z,os_main_loop
000C4D 47                  A   309    				ld b,a
000C4E 3D                  A   310    				dec a
000C4F 32 62 6A 00         A   311    				ld (cursor_x),a					000C53 CD 3C 47 00         A   312    os_chrbk		call hwsc_chars_left			000C57 C3 6E 0B 00         A   313    				jp os_main_loop
                           A   314    
000C5B FE5A                A   315    os_nbksp		cp 05ah							000C5D CA A5 0C 00         A   316    				jp z,os_enter_pressed
                           A   317    	
000C61 3A A1 6B 00         A   318    				ld a,(current_asciicode)		000C65 FE20                A   319    				cp 32							000C67 38 38               A   320    				jr c,os_nvdun					                           A   321    
000C69 FE7B                A   322    				cp 07bh							000C6B 30 12               A   323    				jr nc,os_gtcha					000C6D FE61                A   324    				cp 061h
000C6F 38 04               A   325    				jr c,os_ntupc
000C71 D620                A   326    				sub 020h
000C73 18 0A               A   327    				jr os_gtcha
000C75 FE5B                A   328    os_ntupc		cp 05bh
000C77 30 06               A   329    				jr nc,os_gtcha
000C79 FE41                A   330    				cp 041h
000C7B 38 02               A   331    				jr c,os_gtcha
000C7D C620                A   332    				add a,020h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C7F 57                  A   333    os_gtcha		ld d,a							000C80 3A 19 68 00         A   334    				ld a,(overwrite_mode)			000C84 B7                  A   335    				or a
000C85 CC 75 47 00         A   336    				call z,hwsc_chars_right
                           A   337    				
000C89 ED4B 61 6A 00       A   338    os_schi			ld bc,(cursor_pos)				000C8E 7A                  A   339    				ld a,d							000C8F CD 7D 46 00         A   340    				call hwsc_plot_char		
000C93 21 62 6A 00         A   341    				ld hl,cursor_x					000C97 34                  A   342    				inc (hl)
000C98 3A 1F 68 00         A   343    				ld a,(charmap_columns)
000C9C BE                  A   344    				cp (hl)							000C9D 20 02               A   345    				jr nz,os_nvdun
000C9F 3600                A   346    				ld (hl),0
                           A   347    
000CA1 C3 6E 0B 00         A   348    os_nvdun		jp os_main_loop
                           A   349    	
                           A   350    
                           A   351    ;----------------------------------------------
                           A   352    
000CA5                     A   353    os_enter_pressed
                           A   354    	
000CA5 CD B8 47 00         A   355    				call hwsc_charline_to_command_s
                           A   356    
000CA9 AF                  A   357    				xor a
000CAA 32 62 6A 00         A   358    				ld (cursor_x),a					000CAE 21 61 6A 00         A   359    				ld hl,cursor_y					000CB2 34                  A   360    				inc (hl)
000CB3 3A 1C 68 00         A   361    				ld a,(charmap_rows)
000CB7 BE                  A   362    				cp (hl)
000CB8 20 06               A   363    				jr nz,os_esdok
000CBA 3D                  A   364    				dec a
000CBB 77                  A   365    				ld (hl),a
000CBC CD 42 46 00         A   366    				call hwsc_scroll_up
                           A   367    
000CC0 CD C8 0C 00         A   368    os_esdok		call os_parse_cmd_chk_ps		                           A   369    
000CC4 C3 6E 0B 00         A   370    post_csb		jp os_main_loop
                           A   371    
                           A   372    	
                           A   373    ;----------------------------------------------
                           A   374    
                           A   375    
000CC8                     A   376    os_parse_cmd_chk_ps
                           A   377    
000CC8 CD DB 0C 00         A   378    				call os_parse_command_line
000CCC FEFE                A   379    				cp 0feh							000CCE C0                  A   380    				ret nz
000CCF 01500000            A   381    				ld bc,max_buffer_chars			000CD3 11 7F 6A 00         A   382    				ld de,commandstring				000CD7 EDB0                A   383    				ldir
000CD9 18 ED               A   384    				jr os_parse_cmd_chk_ps
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   385    
                           A   386    	
                           A   387    ;----------------------------------------------
                           A   388    	
000CDB                     A   389    os_parse_command_line
                           A   390    
000CDB 3E01                A   391    				ld a,1
000CDD 32 FA 69 00         A   392    				ld (store_registers),a			                           A   393    
000CE1 21 7F 6A 00         A   394    				ld hl,commandstring				000CE5 0650                A   395    				ld b,max_buffer_chars			000CE7 CD FE 10 00         A   396    				call os_scan_for_non_space		000CEB B7                  A   397    				or a							000CEC C8                  A   398    				ret z
000CED 11 91 5F 00         A   399    				ld de,dictionary-1				000CF1 D5                  A   400    				push de
000CF2 D1                  A   401    compcstr		pop de
000CF3 E5                  A   402    				push hl
000CF4 FDE1                A   403    				pop iy
000CF6 13                  A   404    notacmd			inc de
000CF7 1A                  A   405    				ld a,(de)
000CF8 FE01                A   406    				cp 1							000CFA CA A2 0D 00         A   407    				jp z,os_no_kernal_command_found
000CFE CB7F                A   408    				bit 7,a
000D00 28 F4               A   409    				jr z,notacmd					000D02 E67F                A   410    				and 07fh
000D04 4F                  A   411    				ld c,a							000D05 D5                  A   412    				push de
000D06 13                  A   413    cmdnscan		inc de
000D07 FD7E00              A   414    				ld a,(iy)						000D0A CD 67 13 00         A   415    				call os_uppercasify
000D0E 47                  A   416    				ld b,a
000D0F 1A                  A   417    				ld a,(de)						000D10 B8                  A   418    				cp b
000D11 FD23                A   419    				inc iy
000D13 28 F1               A   420    				jr z,cmdnscan					000D15 1A                  A   421    nomatch			ld a,(de)						000D16 B7                  A   422    				or a
000D17 28 04               A   423    				jr z,posmatch					000D19 CB7F                A   424    				bit 7,a			
000D1B 28 D5               A   425    				jr z,compcstr					000D1D FD7EFF              A   426    posmatch		ld a,(iy-1)						000D20 FE20                A   427    				cp 32
000D22 20 CE               A   428    				jr nz,compcstr					                           A   429    	
000D24 D1                  A   430    				pop de				
000D25 FDE5                A   431    				push iy							000D27 E1                  A   432    				pop hl
000D28 CD FE 10 00         A   433    				call os_scan_for_non_space
000D2C 22 23 6B 00         A   434    				ld (os_args_loc),hl				                           A   435    	
000D30 21 68 65 00         A   436    				ld hl,os_cmd_locs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D34 11030000            A   437    				ld de,3
000D38 51                  A   438    				ld d,c
000D39 ED5C                A   439    				mlt de							000D3B 19                  A   440    				add hl,de
000D3C ED37                A   441    				ld ix,(hl)						                           A   442    
000D3E 2A 23 6B 00         A   443    				ld hl,(os_args_loc)				000D42 CD 96 0F 00         A   444    go_int_cmd		call os_run_command				                           A   445    
000D46 CD B8 0F 00         A   446    				call error_to_envar
000D4A B7                  A   447    				or a
000D4B C8                  A   448    				ret z							000D4C FE01                A   449    				cp 1
000D4E 20 17               A   450    				jr nz,show_erm
000D50 78                  A   451    os_hwe1			ld a,b							000D51 21 96 62 00         A   452    os_hwerr		ld hl,hex_byte_txt		
000D55 CD A9 11 00         A   453    				call hexbyte_to_ascii	
000D59 CD 06 15 00         A   454    				call os_new_line
000D5D 21 52 64 00         A   455    				ld hl,hw_err_msg
000D61 CD 3D 15 00         A   456    				call os_show_packed_text
000D65 AF                  A   457    				xor a
000D66 C9                  A   458    				ret
                           A   459    
000D67 01000000            A   460    show_erm		ld bc,0							000D6B 4F                  A   461    				ld c,a
000D6C D680                A   462    				sub 080h						000D6E 38 11               A   463    				jr c,no_trans					000D70 21 9F 66 00         A   464    				ld hl,kernal_error_code_transla
000D74 CB77                A   465    				bit 6,a							000D76 28 06               A   466    				jr z,not_fs_err					000D78 21 AE 66 00         A   467    				ld hl,fs_error_code_translation
000D7C D640                A   468    				sub 040h
000D7E 4F                  A   469    not_fs_err		ld c,a
000D7F 09                  A   470    				add hl,bc
000D80 4E                  A   471    				ld c,(hl)
000D81 0600                A   472    no_trans		ld b,0
000D83 21 D4 65 00         A   473    				ld hl,packed_msg_list
000D87 7E                  A   474    findmsg			ld a,(hl)
000D88 FEFF                A   475    				cp 0ffh
000D8A C8                  A   476    				ret z							000D8B 23                  A   477    				inc hl
000D8C B7                  A   478    				or a
000D8D 20 F8               A   479    				jr nz,findmsg					000D8F 04                  A   480    				inc b
000D90 79                  A   481    				ld a,c							000D91 B8                  A   482    				cp b
000D92 20 F3               A   483    				jr nz,findmsg
000D94 CD 06 15 00         A   484    				call os_new_line
000D98 CD 3D 15 00         A   485    				call os_show_packed_text
000D9C CD 06 15 00         A   486    				call os_new_line
000DA0 AF                  A   487    				xor a
000DA1 C9                  A   488    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   489    	
                           A   490    
000DA2                     A   491    os_no_kernal_command_found
                           A   492    
000DA2 3E30                A   493    				ld a,030h						000DA4 32 8E 5F 00         A   494    fvolcmd			ld (chvol_txt+3),a				000DA8 F5                  A   495    				push af			
000DA9 11 8B 5F 00         A   496    				ld de,chvol_txt		
000DAD 0606                A   497    				ld b,6
000DAF CD 2D 13 00         A   498    				call os_compare_strings	
000DB3 28 08               A   499    				jr z,gotvolcmd		
000DB5 F1                  A   500    				pop af				
000DB6 3C                  A   501    				inc a			
000DB7 FE38                A   502    				cp 030h+max_volumes		
000DB9 20 E9               A   503    				jr nz,fvolcmd		
000DBB 18 0B               A   504    				jr novolcmd		
000DBD F1                  A   505    gotvolcmd		pop af
000DBE D630                A   506    				sub 030h
000DC0 CD 83 1B 00         A   507    				call os_change_volume
000DC4 C3 81 0F 00         A   508    				jp extcmderf					                           A   509    		
                           A   510    
                           A   511    
000DC8 7E                  A   512    novolcmd		ld a,(hl)						000DC9 FE47                A   513    				cp 'G'							000DCB 20 3C               A   514    				jr nz,not_g_cmd					000DCD 23                  A   515    				inc hl
000DCE 7E                  A   516    				ld a,(hl)
000DCF 2B                  A   517    				dec hl
000DD0 FE20                A   518    				cp ' '
000DD2 20 35               A   519    				jr nz,not_g_cmd
000DD4 23                  A   520    				inc hl
000DD5 CD FE 10 00         A   521    				call os_scan_for_non_space
000DD9 22 23 6B 00         A   522    				ld (os_args_loc),hl				000DDD B7                  A   523    				or a
000DDE 20 04               A   524    				jr nz,gotgargs
000DE0 3E1F                A   525    				ld a,01fh						000DE2 18 83               A   526    				jr show_erm
000DE4 CD E8 11 00         A   527    gotgargs		call ascii_to_hex_no_scan		000DE8 B7                  A   528    				or a
000DE9 C2 67 0D 00         A   529    				jr nz,show_erm
000DED CD EF 44 00         A   530    				call enable_button_nmi			000DF1 CD E8 1C 00         A   531    				call test_de
000DF5 20 03               A   532    				jr nz,not_reset
000DF7 AF                  A   533    				xor a
000DF8 D304                A   534    				out (port_memory_paging),a		000DFA D5                  A   535    not_reset		push de
000DFB 2A 23 6B 00         A   536    				ld hl,(os_args_loc)
000DFF CD E9 10 00         A   537    				call os_next_arg				000E03 DDE1                A   538    				pop ix			
000E05 C3 96 0F 00         A   539    				jp os_run_command				                           A   540    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   541    				
                           A   542    
                           A   543    
000E09 22 23 6B 00         A   544    not_g_cmd		ld (os_args_loc),hl				000E0D 22 26 6B 00         A   545    				ld (os_args_pos_cache),hl
                           A   546    
000E11 CD 86 50 00         A   547    				call fs_check_disk_format		000E15 38 2A               A   548    				jr c,os_noextcmd				000E17 20 28               A   549    				jr nz,os_noextcmd
                           A   550    	
000E19 CD A0 0F 00         A   551    				call cache_dir_block			                           A   552    
000E1D 01 F7 5E 00         A   553    				ld bc,ezp_txt					000E21 CD D9 0F 00         A   554    				call scan_current_and_path_dirs
000E25 DA 51 0D 00         A   555    				jp c,os_hwerr	
000E29 28 4C               A   556    				jr z,os_got_extcmd
                           A   557    				
000E2B CD AC 0F 00         A   558    				call restore_dir_block
                           A   559    				
000E2F 01 FD 5E 00         A   560    				ld bc,pbf_txt					000E33 CD D9 0F 00         A   561    				call scan_current_and_path_dirs
000E37 DA 51 0D 00         A   562    				jp c,os_hwerr	
000E3B 28 0A               A   563    				jr z,os_got_script
                           A   564    				
000E3D CD AC 0F 00         A   565    				call restore_dir_block			000E41 3E0B                A   566    os_noextcmd		ld a,0bh						000E43 C3 67 0D 00         A   567    				jp show_erm
                           A   568    
                           A   569    				
000E47 21 3B 6B 00         A   570    os_got_script	ld hl,script_flags				000E4B CB46                A   571    				bit scr_in_script,(hl)
000E4D C2 DF 3D 00         A   572    				jp nz,script_error
000E51 21 FE 69 00         A   573    				ld hl,temp_string				000E55 CD 48 10 00         A   574    				call set_script_fn
000E59 CD 27 1B 00         A   575    				call fs_get_dir_cluster			000E5D ED53 32 6B 00       A   576    				ld (script_dir),de
000E62 CD AC 0F 00         A   577    				call restore_dir_block			000E66 2A 23 6B 00         A   578    				ld hl,(os_args_loc)		
000E6A CD FE 10 00         A   579    				call os_scan_for_non_space
000E6E DD21 2D 3C 00       A   580    				ld ix,os_do_script				000E73 C3 42 0D 00         A   581    				jp go_int_cmd
                           A   582    				
                           A   583    
                           A   584    
                           A   585    
                           A   586    
000E77 2A 23 6B 00         A   587    os_got_extcmd	ld hl,(os_args_loc)				000E7B CD FE 10 00         A   588    				call os_scan_for_non_space		000E7F 22 23 6B 00         A   589    				ld (os_args_loc),hl
                           A   590    
000E83 11100000            A   591    				ld de,16
000E87 CD F5 16 00         A   592    				call os_set_load_length			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E8B 21000100            A   593    				ld hl,scratch_pad
000E8F 22 57 5D 00         A   594    				ld (fs_ez80_address),hl
000E93 CD 83 52 00         A   595    				call fs_read_data_command
000E97 DA 51 0D 00         A   596    				jp c,os_hwerr					000E9B C2 67 0D 00         A   597    				jp nz,show_erm					000E9F 2A020100            A   598    				ld hl,(scratch_pad+2)
000EA3 1150524F            A   599    				ld de,04f5250h					000EA7 AF                  A   600    				xor a	
000EA8 ED52                A   601    				sbc hl,de
000EAA 28 0A               A   602    				jr z,loc_header
000EAC CD AC 0F 00         A   603    				call restore_dir_block			000EB0 3E1A                A   604    				ld a,01ah						000EB2 C3 67 0D 00         A   605    				jp show_erm						                           A   606    				
000EB6 3A0F0100            A   607    loc_header		ld a,(scratch_pad+15)			000EBA 32 F6 69 00         A   608    				ld (store_adl),a			
000EBE CD 30 52 00         A   609    				call fs_open_file_command		000EC2 DA 51 0D 00         A   610    				jp c,os_hwerr
000EC6 C2 41 0E 00         A   611    				jr nz,os_noextcmd
000ECA 2A050100            A   612    				ld hl,(scratch_pad+5)			000ECE 22 57 5D 00         A   613    				ld (fs_ez80_address),hl
                           A   614    				
000ED2 ED5B0B01 00         A   615    				ld de,(scratch_pad+11)			000ED7 7B                  A   616    				ld a,e
000ED8 B2                  A   617    				or d
000ED9 28 14               A   618    				jr z,noprov_spec				000EDB 213A0000            A   619    				ld hl,prose_version
000EDF AF                  A   620    				xor a
000EE0 40ED52              A   621    				sbc.sis hl,de					000EE3 30 0A               A   622    				jr nc,noprov_spec
000EE5 CD AC 0F 00         A   623    				call restore_dir_block
000EE9 3E1B                A   624    				ld a,01bh						000EEB C3 67 0D 00         A   625    				jp show_erm
                           A   626    				
000EEF CD 7E 48 00         A   627    noprov_spec		call hwsc_get_version			000EF3 2A0D0100            A   628    				ld hl,(scratch_pad+13)			000EF7 EB                  A   629    				ex de,hl						000EF8 7B                  A   630    				ld a,e
000EF9 B2                  A   631    				or d
000EFA 28 10               A   632    				jr z,nohwv_spec					000EFC AF                  A   633    				xor a
000EFD 40ED52              A   634    				sbc.sis hl,de					000F00 30 0A               A   635    				jr nc,nohwv_spec
000F02 CD AC 0F 00         A   636    				call restore_dir_block
000F06 3E2B                A   637    				ld a,02bh						000F08 C3 67 0D 00         A   638    				jp show_erm
                           A   639    
000F0C ED5B0801 00         A   640    nohwv_spec		ld de,(scratch_pad+8)			000F11 3A0A0100            A   641    				ld a,(scratch_pad+10)			000F15 B2                  A   642    				or d
000F16 B3                  A   643    				or e
000F17 28 04               A   644    				jr z,readcode					Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F19 CD F5 16 00         A   645    				call os_set_load_length			                           A   646    		
000F1D ED4B 57 5D 00       A   647    readcode		ld bc,(fs_ez80_address)			000F22 C5                  A   648    				push bc
000F23 E1                  A   649    				pop hl
000F24 ED5B 4E 5D 00       A   650    				ld de,(fs_file_transfer_length)
000F29 19                  A   651    				add hl,de
000F2A EB                  A   652    				ex de,hl
000F2B CD D8 3A 00         A   653    				call os_protected_ram_test
000F2F C4 2A 3B 00         A   654    				call nz,os_protected_ram_query
000F33 28 0A               A   655    				jr z,ezp_loadpm_ok
000F35 F5                  A   656    				push af
000F36 CD AC 0F 00         A   657    				call restore_dir_block
000F3A F1                  A   658    				pop af
000F3B C3 67 0D 00         A   659    				jp show_erm
                           A   660    
000F3F 2A050100            A   661    ezp_loadpm_ok	ld hl,(scratch_pad+5)
000F43 22 2C 6B 00         A   662    				ld (os_extcmd_jmp_addr),hl		000F47 CD 83 52 00         A   663    				call fs_read_data_command
000F4B F5                  A   664    				push af
000F4C CD AC 0F 00         A   665    				call restore_dir_block			000F50 F1                  A   666    				pop af
000F51 DA 51 0D 00         A   667    				jp c,os_hwerr					000F55 C2 67 0D 00         A   668    				jp nz,show_erm					                           A   669    	
000F59 CD EF 44 00         A   670    				call enable_button_nmi			000F5D DD2A 2C 6B 00       A   671    				ld ix,(os_extcmd_jmp_addr)		000F62 2A 23 6B 00         A   672    				ld hl,(os_args_loc)				000F66 C3 96 0F 00         A   673    				jp os_run_command				                           A   674    
000F6A F5                  A   675    extcmd_return	push af							000F6B CD E7 47 00         A   676    				call hwsc_default_hw_settings	000F6F 3A FA 69 00         A   677    				ld a,(store_registers)
000F73 B7                  A   678    				or a
000F74 28 06               A   679    				jr z,skp_strg
000F76 F1                  A   680    				pop af
000F77 CD 7F 14 00         A   681    				call os_store_CPU_regs			000F7B F5                  A   682    				push af
000F7C F1                  A   683    skp_strg		pop af
                           A   684    
000F7D CD B8 0F 00         A   685    				call error_to_envar
000F81 B7                  A   686    extcmderf		or a							000F82 C8                  A   687    				ret z	
000F83 FE01                A   688    				cp 1							000F85 CA 50 0D 00         A   689    				jp z,os_hwe1					000F89 FEFF                A   690    				cp 0ffh							000F8B CA 56 0A 00         A   691    				jp z,os_cold_start
000F8F FEFE                A   692    				cp 0feh							000F91 C8                  A   693    				ret z
000F92 C3 67 0D 00         A   694    				jp show_erm						                           A   695    				
                           A   696    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   697    
000F96                     A   698    os_run_command									000F96 ED3906              A   699    				out0 (port_nmi_ack),a			000F99 DD22 FB 69 00       A   700    				ld (com_start_addr),ix			000F9E DDE9                A   701    				jp (ix)							                           A   702    
                           A   703    ;----------------------------------------------
                           A   704    
000FA0                     A   705    cache_dir_block
                           A   706    
                           A   707    	
000FA0 D5                  A   708    				push de
000FA1 CD 27 1B 00         A   709    				call fs_get_dir_cluster	
000FA5 ED53 29 6B 00       A   710    				ld (os_dir_block_cache),de
000FAA D1                  A   711    				pop de	
000FAB C9                  A   712    				ret
                           A   713    		
                           A   714    
000FAC                     A   715    restore_dir_block
                           A   716    
000FAC D5                  A   717    				push de
000FAD ED5B 29 6B 00       A   718    				ld de,(os_dir_block_cache)
000FB2 CD 33 1B 00         A   719    				call fs_update_dir_cluster
000FB6 D1                  A   720    				pop de
000FB7 C9                  A   721    				ret
                           A   722    
                           A   723    ;----------------------------------------------
                           A   724    
000FB8                     A   725    error_to_envar
                           A   726    
000FB8 F5                  A   727    				push af							000FB9 C5                  A   728    				push bc							000FBA E5                  A   729    				push hl							000FBB 21000100            A   730    				ld hl,scratch_pad				000FBF CD A9 11 00         A   731    				call hexbyte_to_ascii
000FC3 3600                A   732    				ld (hl),0
000FC5 11000100            A   733    				ld de,scratch_pad
000FC9 21 24 5F 00         A   734    				ld hl,error_txt
000FCD CD 36 1C 00         A   735    				call os_set_envar
000FD1 CD FA 44 00         A   736    				call disable_button_nmi			000FD5 E1                  A   737    				pop hl
000FD6 C1                  A   738    				pop bc
000FD7 F1                  A   739    				pop af
000FD8 C9                  A   740    				ret
                           A   741    
                           A   742    ;----------------------------------------------
                           A   743    
000FD9                     A   744    scan_current_and_path_dirs
                           A   745    
000FD9 ED430001 00         A   746    				ld (scratch_pad),bc				000FDE 2A 26 6B 00         A   747    				ld hl,(os_args_pos_cache)		000FE2 22 23 6B 00         A   748    				ld (os_args_loc),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   749    				
000FE6 AF                  A   750    				xor a							000FE7 CD 94 3B 00         A   751    				call os_parse_path_string		000FEB 20 13               A   752    				jr nz,no_ecmd_here
                           A   753    				
000FED 22 23 6B 00         A   754    				ld (os_args_loc),hl				                           A   755    
000FF1 ED4B0001 00         A   756    				ld bc,(scratch_pad)				000FF6 CD 32 11 00         A   757    				call os_args_to_fn_append_extn	000FFA CD 30 52 00         A   758    				call fs_open_file_command		000FFE D8                  A   759    				ret c					 		000FFF C8                  A   760    				ret z							                           A   761    
001000 21 86 5F 00         A   762    no_ecmd_here	ld hl,path_txt					001004 CD F6 1B 00         A   763    				call os_get_envar
001008 ED53 3C 6B 00       A   764    				ld (path_parse_loc),de
                           A   765    
00100D CD 00 52 00         A   766    path_loop		call fs_goto_root_dir_command	001011 2A 3C 6B 00         A   767    				ld hl,(path_parse_loc)			001015 CD C9 5A 00         A   768    				call fs_hl_to_filename			001019 CD D9 51 00         A   769    				call fs_change_dir_command		00101D D8                  A   770    				ret c
00101E 20 17               A   771    				jr nz,next_dir_in_path			                           A   772    	
001020 2A 26 6B 00         A   773    				ld hl,(os_args_pos_cache)		001024 22 23 6B 00         A   774    				ld (os_args_loc),hl
001028 ED4B0001 00         A   775    				ld bc,(scratch_pad)				00102D CD 32 11 00         A   776    				call os_args_to_fn_append_extn	                           A   777    				
001031 CD 30 52 00         A   778    				call fs_open_file_command		001035 D8                  A   779    				ret c
001036 C8                  A   780    				ret z							                           A   781    				
001037                     A   782    next_dir_in_path
                           A   783    				
001037 2A 3C 6B 00         A   784    				ld hl,(path_parse_loc)			00103B CD E9 10 00         A   785    				call os_next_arg
00103F 22 3C 6B 00         A   786    				ld (path_parse_loc),hl
001043 20 C8               A   787    				jr nz,path_loop					001045 AF                  A   788    				xor a
001046 3C                  A   789    				inc a
001047 C9                  A   790    				ret								                           A   791    				
                           A   792    ;----------------------------------------------
                           A   793    				
001048 11 50 6A 00         A   794    set_script_fn	ld de,script_fn
00104C 060D                A   795    				ld b,13
00104E CD 4C 13 00         A   796    				call os_copy_ascii_run
001052 AF                  A   797    				xor a
001053 12                  A   798    				ld (de),a
001054 C9                  A   799    				ret
                           A   800    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   801    ;==============================================
                           A   802    ; Routines called by command line
                           A   803    ;==============================================
                           A   804    
                           A   805    ; Set:-
                           A   806    ; HL to address of string
                           A   807    ; c = y
                           A   808    ; b = x
                           A   809    
001055                     A   810    ext_print_string
                           A   811    
001055 CC 6E 16 00         A   812    				call z,mbase_hl
001059 18 05               A   813    				jr os_print_string
                           A   814    
00105B                     A   815    os_print_string_cond
                           A   816    
00105B CD DA 1A 00         A   817    				call test_quiet_mode
00105F C0                  A   818    				ret nz
                           A   819    
001060                     A   820    os_print_string
                           A   821    
001060 D5                  A   822    				push de
001061 C5                  A   823    				push bc
001062 ED4B 61 6A 00       A   824    				ld bc,(cursor_pos)				001067 7E                  A   825    prstr_lp		ld a,(hl)
001068 23                  A   826    				inc hl
001069 B7                  A   827    				or a
00106A 20 09               A   828    				jr nz,prstr_ne
00106C ED43 61 6A 00       A   829    				ld (cursor_pos),bc
001071 C1                  A   830    				pop bc
001072 D1                  A   831    				pop de
001073 AF                  A   832    				xor a							001074 C9                  A   833    				ret
                           A   834    
001075 FE0D                A   835    prstr_ne		cp 13
001077 20 04               A   836    				jr nz,not_cr
001079 0600                A   837    				ld b,0
00107B 18 EA               A   838    				jr prstr_lp
00107D FE0A                A   839    not_cr			cp 10
00107F 28 12               A   840    				jr z,line_feed				
001081 FE0B                A   841    				cp 11
001083 28 0C               A   842    				jr z,next_line
001085 CD 7D 46 00         A   843    				call hwsc_plot_char
001089 04                  A   844    				inc b
00108A 3A 1F 68 00         A   845    				ld a,(charmap_columns)
00108E B8                  A   846    				cp b
00108F 20 D6               A   847    				jr nz,prstr_lp
001091 0600                A   848    next_line		ld b,0
001093 0C                  A   849    line_feed		inc c
001094 3A 1C 68 00         A   850    				ld a,(charmap_rows)
001098 B9                  A   851    				cp c
001099 20 CC               A   852    				jr nz,prstr_lp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00109B 0D                  A   853    				dec c
00109C CD 42 46 00         A   854    				call hwsc_scroll_up
0010A0 18 C5               A   855    				jr prstr_lp
                           A   856    
                           A   857    ;----------------------------------------------
                           A   858    
0010A2 21 79 6B 00         A   859    os_print_char	ld hl,char_to_print
0010A6 77                  A   860    				ld (hl),a
0010A7 18 B7               A   861    				jr os_print_string
                           A   862    
                           A   863    ;----------------------------------------------
                           A   864    
0010A9 F5                  A   865    home_cursor		push af
0010AA AF                  A   866    				xor a
0010AB 32 62 6A 00         A   867    				ld (cursor_x),a
0010AF F1                  A   868    				pop af
0010B0 C9                  A   869    				ret
                           A   870    				
                           A   871    ;----------------------------------------------
                           A   872    
0010B1                     A   873    os_cursor_flash
                           A   874    
0010B1 21 64 6A 00         A   875    				ld hl,cursorflashtimer
0010B5 34                  A   876    				inc (hl)
0010B6 7E                  A   877    				ld a,(hl)
0010B7 FE19                A   878    				cp 25
0010B9 C0                  A   879    				ret nz
0010BA 3600                A   880    				ld (hl),0
0010BC 3A 65 6A 00         A   881    				ld a,(cursor_status)
0010C0 EE01                A   882    				xor 1
0010C2 32 65 6A 00         A   883    				ld (cursor_status),a
0010C6 28 15               A   884    				jr z,no_cursor
0010C8 3E5F                A   885    				ld a,05fh
0010CA 21 19 68 00         A   886    				ld hl,overwrite_mode
0010CE CB46                A   887    				bit 0,(hl)
0010D0 28 02               A   888    				jr z,cursor_selected
0010D2 3E7F                A   889    				ld a,07fh
                           A   890    				
0010D4 CD E3 10 00         A   891    cursor_selected	call os_set_cursor_image
0010D8 CD D0 46 00         A   892    				call hwsc_draw_cursor			0010DC C9                  A   893    				ret
                           A   894    
0010DD CD B6 46 00         A   895    no_cursor		call hwsc_remove_cursor
0010E1 C9                  A   896    				ret
                           A   897    
                           A   898    
                           A   899    ;----------------------------------------------
                           A   900    
0010E2                     A   901    ext_set_cursor_image
                           A   902    
0010E2 7B                  A   903    				ld a,e
                           A   904    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010E3                     A   905    os_set_cursor_image
                           A   906    			
0010E3 32 1A 68 00         A   907    				ld (cursor_image_char),a
0010E7 BF                  A   908    				cp a
0010E8 C9                  A   909    				ret
                           A   910    
                           A   911    ;----------------------------------------------
                           A   912    
0010E9                     A   913    os_next_arg
                           A   914    
0010E9 CD F5 10 00         A   915    				call os_scan_for_space
0010ED B7                  A   916    				or a
0010EE C8                  A   917    				ret z
0010EF CD FE 10 00         A   918    				call os_scan_for_non_space
0010F3 B7                  A   919    				or a
0010F4 C9                  A   920    				ret
                           A   921    
                           A   922    
                           A   923    ;----------------------------------------------
                           A   924    	
                           A   925    
0010F5                     A   926    os_scan_for_space
                           A   927    
0010F5 7E                  A   928    os_sfspl 		ld a,(hl)						0010F6 B7                  A   929    				or a							0010F7 C8                  A   930    				ret z
0010F8 FE20                A   931    				cp ' '
0010FA C8                  A   932    				ret z
0010FB 23                  A   933    				inc hl
0010FC 18 F7               A   934    				jr os_sfspl
                           A   935    	
                           A   936    
                           A   937    ;----------------------------------------------
                           A   938    	
                           A   939    
0010FE                     A   940    os_scan_for_non_space
                           A   941    
0010FE 2B                  A   942    				dec hl							0010FF 23                  A   943    os_nsplp		inc hl			
001100 7E                  A   944    				ld a,(hl)			
001101 B7                  A   945    				or a			
001102 C8                  A   946    				ret z							001103 FE20                A   947    				cp ' '
001105 28 F8               A   948    				jr z,os_nsplp
001107 C9                  A   949    				ret
                           A   950    	
                           A   951    	
                           A   952    ;----------------------------------------------
                           A   953    
001108                     A   954    os_args_to_alt_filename
                           A   955    
001108 CD 60 11 00         A   956    				call os_atfn_pre				Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00110C C8                  A   957    				ret z
00110D CD C3 5A 00         A   958    				call fs_hl_to_alt_filename
001111 18 09               A   959    				jr os_atfrl
                           A   960    	
                           A   961    	
                           A   962    	
                           A   963    		
001113                     A   964    os_args_to_filename
                           A   965    
001113 CD 60 11 00         A   966    				call os_atfn_pre				001117 C8                  A   967    				ret z
001118 CD C9 5A 00         A   968    				call fs_hl_to_filename	
                           A   969    
00111C 7E                  A   970    os_atfrl		ld a,(hl)						00111D B7                  A   971    				or a							00111E 28 0B               A   972    				jr z,os_cfne
001120 FE20                A   973    				cp 32
001122 28 07               A   974    				jr z,os_cfne
001124 FE2F                A   975    				cp 02fh
001126 28 03               A   976    				jr z,os_cfne
001128 23                  A   977    				inc hl
001129 18 F1               A   978    				jr os_atfrl	
00112B 22 23 6B 00         A   979    os_cfne			ld (os_args_loc),hl				00112F 79                  A   980    				ld a,c			
001130 B7                  A   981    				or a							001131 C9                  A   982    				ret
                           A   983    
                           A   984    
                           A   985    
001132                     A   986    os_args_to_fn_append_extn
                           A   987    
                           A   988    ; Set BC to location of extension text
                           A   989    
001132 CD 60 11 00         A   990    				call os_atfn_pre				001136 C8                  A   991    				ret z
001137 11 FE 69 00         A   992    				ld de,temp_string
00113B 7E                  A   993    ccmdtlp			ld a,(hl)						00113C B7                  A   994    				or a
00113D 28 0D               A   995    				jr z,goteocmd
00113F FE20                A   996    				cp ' '
001141 28 09               A   997    				jr z,goteocmd
001143 FE2E                A   998    				cp '.'
001145 28 05               A   999    				jr z,goteocmd
001147 12                  A  1000    				ld (de),a
001148 13                  A  1001    				inc de
001149 23                  A  1002    				inc hl
00114A 18 EF               A  1003    				jr ccmdtlp
                           A  1004    	
00114C E5                  A  1005    goteocmd		push hl
00114D C5                  A  1006    				push bc
00114E E1                  A  1007    				pop hl
00114F 01060000            A  1008    				ld bc,6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001153 EDB0                A  1009    				ldir 
001155 21 FE 69 00         A  1010    				ld hl,temp_string
001159 CD C9 5A 00         A  1011    				call fs_hl_to_filename
00115D E1                  A  1012    				pop hl
00115E 18 BC               A  1013    				jr os_atfrl
                           A  1014    	
                           A  1015    
                           A  1016    
                           A  1017    
001160                     A  1018    os_atfn_pre
                           A  1019    
001160 2A 23 6B 00         A  1020    				ld hl,(os_args_loc)				001164 CD FE 10 00         A  1021    				call os_scan_for_non_space
001168 B7                  A  1022    				or a
001169 C8                  A  1023    				ret z
00116A 7E                  A  1024    				ld a,(hl)
00116B FE2F                A  1025    				cp 02fh							00116D 20 01               A  1026    				jr nz,notfsl1
00116F 23                  A  1027    				inc hl
001170 AF                  A  1028    notfsl1			xor a
001171 3C                  A  1029    				inc a
001172 C9                  A  1030    				ret
                           A  1031    
                           A  1032    
                           A  1033    ;--------- Number <-> String functions --------
                           A  1034    
                           A  1035    
001173                     A  1036    os_clear_output_line
                           A  1037    
001173 C5                  A  1038    				push bc
001174 E5                  A  1039    				push hl			
001175 21 D1 6A 00         A  1040    				ld hl,output_line
001179 01500000            A  1041    				ld bc,max_buffer_chars
00117D 3E20                A  1042    				ld a,32
00117F CD 47 16 00         A  1043    				call os_bchl_memfill
001183 E1                  A  1044    				pop hl
001184 C1                  A  1045    				pop bc
001185 C9                  A  1046    				ret
                           A  1047    	
                           A  1048    	
                           A  1049    	
001186                     A  1050    os_skip_leading_ascii_zeros
                           A  1051    
001186 7E                  A  1052    slazlp			ld a,(hl)						001187 FE30                A  1053    				cp '0'							001189 C0                  A  1054    				ret nz
00118A 23                  A  1055    				inc hl
00118B 10 F9               A  1056    				djnz slazlp
00118D C9                  A  1057    				ret
                           A  1058    	
                           A  1059    
                           A  1060    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00118E                     A  1061    os_leading_ascii_zeros_to_spaces
                           A  1062    
00118E E5                  A  1063    				push hl
00118F 7E                  A  1064    clazlp			ld a,(hl)						001190 FE30                A  1065    				cp '0'							001192 20 05               A  1066    				jr nz,claze	
001194 3620                A  1067    				ld (hl),' '
001196 23                  A  1068    				inc hl
001197 10 F6               A  1069    				djnz clazlp
001199 E1                  A  1070    claze			pop hl
00119A C9                  A  1071    				ret
                           A  1072    	
                           A  1073    
                           A  1074    
                           A  1075    		
00119B                     A  1076    n_hexbytes_to_ascii
                           A  1077    
00119B 1A                  A  1078    				ld a,(de)						00119C CD A9 11 00         A  1079    				call hexbyte_to_ascii			0011A0 1B                  A  1080    				dec de
0011A1 10 F8               A  1081    				djnz n_hexbytes_to_ascii
0011A3 C9                  A  1082    				ret
                           A  1083    			
                           A  1084    			
                           A  1085    
0011A4                     A  1086    ext_hexbyte_to_ascii
                           A  1087    
0011A4 CC 6E 16 00         A  1088    				call z,mbase_hl
0011A8 7B                  A  1089    				ld a,e
                           A  1090    
0011A9                     A  1091    hexbyte_to_ascii
                           A  1092    
0011A9 C5                  A  1093    				push bc
0011AA 47                  A  1094    				ld b,a							0011AB CB3F                A  1095    				srl a							0011AD CB3F                A  1096    				srl a
0011AF CB3F                A  1097    				srl a
0011B1 CB3F                A  1098    				srl a
0011B3 CD C5 11 00         A  1099    				call hxdigconv
0011B7 77                  A  1100    				ld (hl),a
0011B8 23                  A  1101    				inc hl
0011B9 78                  A  1102    				ld a,b
0011BA E60F                A  1103    				and 0fh
0011BC CD C5 11 00         A  1104    				call hxdigconv
0011C0 77                  A  1105    				ld (hl),a
0011C1 23                  A  1106    				inc hl
0011C2 C1                  A  1107    				pop bc
0011C3 AF                  A  1108    				xor a							0011C4 C9                  A  1109    				ret
                           A  1110    				
0011C5 C630                A  1111    hxdigconv		add a,030h
0011C7 FE3A                A  1112    				cp 03ah
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011C9 38 02               A  1113    				jr c,hxdone
0011CB C607                A  1114    				add a,7
0011CD C9                  A  1115    hxdone			ret
                           A  1116    
                           A  1117    
                           A  1118    
                           A  1119    
0011CE                     A  1120    hexword_to_ascii	
                           A  1121    
0011CE 7A                  A  1122    				ld a,d							0011CF CD A9 11 00         A  1123    				call hexbyte_to_ascii
0011D3 7B                  A  1124    				ld a,e
0011D4 CD A9 11 00         A  1125    				call hexbyte_to_ascii
0011D8 C9                  A  1126    				ret
                           A  1127    	
                           A  1128    
                           A  1129    
                           A  1130    
0011D9                     A  1131    ext_ascii_to_hexword
                           A  1132    		
0011D9 CC 6E 16 00         A  1133    				call z,mbase_hl
                           A  1134    
0011DD                     A  1135    ascii_to_hexword
                           A  1136    	
0011DD CD FE 10 00         A  1137    				call os_scan_for_non_space		0011E1 B7                  A  1138    				or a
0011E2 20 04               A  1139    				jr nz,ascii_to_hex_no_scan
0011E4 3E81                A  1140    				ld a,081h						0011E6 B7                  A  1141    				or a
0011E7 C9                  A  1142    				ret	
                           A  1143    
                           A  1144    	
0011E8                     A  1145    ascii_to_hex_no_scan
                           A  1146    
0011E8 DDE5                A  1147    				push ix
0011EA C5                  A  1148    				push bc
0011EB DD210000 00         A  1149    				ld ix,0
0011F0 0606                A  1150    				ld b,6							0011F2 CD 1E 12 00         A  1151    athlp			call ascii_to_hex_digit
0011F6 FEF0                A  1152    				cp 0f0h							0011F8 28 17               A  1153    				jr z,athend
0011FA FED0                A  1154    				cp 0d0h
0011FC 28 13               A  1155    				jr z,athend						0011FE FE10                A  1156    				cp 16
001200 30 17               A  1157    				jr nc,badhex					001202 DD29                A  1158    				add ix,ix						001204 DD29                A  1159    				add ix,ix
001206 DD29                A  1160    				add ix,ix
001208 DD29                A  1161    				add ix,ix
00120A DDB5                A  1162    				or a,ixl
00120C DD6F                A  1163    				ld ixl,a
00120E 23                  A  1164    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00120F 10 E1               A  1165    				djnz athlp
001211 DDE5                A  1166    athend			push ix
001213 D1                  A  1167    				pop de
001214 AF                  A  1168    				xor a
001215 C1                  A  1169    ath_quit		pop bc
001216 DDE1                A  1170    				pop ix							001218 C9                  A  1171    				ret
                           A  1172    		
001219 3E82                A  1173    badhex			ld a,82h						00121B B7                  A  1174    				or a
00121C 18 F7               A  1175    				jr ath_quit
                           A  1176    				
                           A  1177    	
                           A  1178    		
00121E                     A  1179    ascii_to_hex_digit
                           A  1180    
00121E 7E                  A  1181    				ld a,(hl)						00121F FE61                A  1182    				cp 061h
001221 38 02               A  1183    				jr c,hc_uppercase
001223 D620                A  1184    				sub 020h						001225 D63A                A  1185    hc_uppercase	sub 03ah						001227 38 02               A  1186    				jr c,zeronine
001229 C6F9                A  1187    				add a,0f9h
00122B C60A                A  1188    zeronine		add a,0ah
00122D C9                  A  1189    				ret
                           A  1190    
                           A  1191    
                           A  1192    ;--------- Text Input / Non-numeric string func
                           A  1193    
                           A  1194    ; Waits for user to enter a string of character
                           A  1195    ; Before calling, set:  HL = destination of str
                           A  1196    ;                        E = max number of char
                           A  1197    ; Returns:   A  = number of characters in enter
                           A  1198    
                           A  1199    
00122E                     A  1200    ext_user_input
00122E CC 6E 16 00         A  1201    				call z,mbase_hl
                           A  1202    				
001232                     A  1203    os_user_input
001232 AF                  A  1204    				xor a
001233 32 EC 67 00         A  1205    				ld (ui_index),a
001237 22 EE 67 00         A  1206    				ld (ui_string_addr),hl
00123B 7B                  A  1207    				ld a,e
00123C 32 ED 67 00         A  1208    				ld (ui_maxchars),a
                           A  1209    				
001240 3A 19 68 00         A  1210    				ld a,(overwrite_mode)
001244 32 7E 6A 00         A  1211    				ld (ui_im_cache),a
001248 AF                  A  1212    				xor a
001249 32 19 68 00         A  1213    				ld (overwrite_mode),a			                           A  1214    				
00124D CD D0 46 00         A  1215    ui_loop			call hwsc_draw_cursor			001251 CD 18 4C 00         A  1216    				call os_wait_key_press			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001255 32 A0 6B 00         A  1217    				ld (current_scancode),a
001259 78                  A  1218    				ld a,b
00125A 32 A1 6B 00         A  1219    				ld (current_asciicode),a		00125E CD B6 46 00         A  1220    				call hwsc_remove_cursor
                           A  1221    	
001262 3A A0 6B 00         A  1222    				ld a,(current_scancode)
001266 FE66                A  1223    				cp 066h							001268 20 1F               A  1224    				jr nz,os_nuibs
00126A 3A EC 67 00         A  1225    				ld a,(ui_index)
00126E B7                  A  1226    				or a
00126F 28 DC               A  1227    				jr z,ui_loop					001271 21 62 6A 00         A  1228    				ld hl,cursor_x					001275 35                  A  1229    				dec (hl)						001276 46                  A  1230    os_uixok		ld b,(hl)		
001277 3A 61 6A 00         A  1231    				ld a,(cursor_y)
00127B 4F                  A  1232    				ld c,a
00127C 3E20                A  1233    				ld a,32
00127E CD 7D 46 00         A  1234    				call hwsc_plot_char
001282 21 EC 67 00         A  1235    				ld hl,ui_index
001286 35                  A  1236    				dec (hl)						001287 18 C4               A  1237    				jr ui_loop
                           A  1238    
001289 FE76                A  1239    os_nuibs		cp 076h							00128B 28 6B               A  1240    				jr z,ui_aborted
00128D FE5A                A  1241    				cp 05ah							00128F 28 46               A  1242    				jr z,ui_enter_pressed
                           A  1243    	
001291 3A EC 67 00         A  1244    				ld a,(ui_index)					001295 21 ED 67 00         A  1245    				ld hl,ui_maxchars
001299 BE                  A  1246    				cp (hl)
00129A 28 B1               A  1247    				jr z,ui_loop	
                           A  1248    
00129C 3A A1 6B 00         A  1249    				ld a,(current_asciicode)		0012A0 FE20                A  1250    				cp 32							0012A2 38 A9               A  1251    				jr c,ui_loop					                           A  1252    
0012A4 57                  A  1253    ui_gtcha		ld d,a
0012A5 2A EE 67 00         A  1254    				ld hl,(ui_string_addr)
0012A9 3A EC 67 00         A  1255    				ld a,(ui_index)
0012AD 01000000            A  1256    				ld bc,0
0012B1 4F                  A  1257    				ld c,a
0012B2 09                  A  1258    				add hl,bc
0012B3 72                  A  1259    				ld (hl),d						0012B4 3C                  A  1260    				inc a
0012B5 32 EC 67 00         A  1261    				ld (ui_index),a					                           A  1262    				
0012B9 ED4B 61 6A 00       A  1263    				ld bc,(cursor_y)				0012BE 7A                  A  1264    				ld a,d
0012BF CD 7D 46 00         A  1265    				call hwsc_plot_char		
0012C3 21 62 6A 00         A  1266    				ld hl,cursor_x					0012C7 34                  A  1267    				inc (hl)
0012C8 3A 1F 68 00         A  1268    				ld a,(charmap_columns)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012CC BE                  A  1269    				cp (hl)
0012CD C2 4D 12 00         A  1270    				jp nz,ui_loop
0012D1 3600                A  1271    				ld (hl),0
0012D3 C3 4D 12 00         A  1272    				jp ui_loop
                           A  1273    
0012D7                     A  1274    ui_enter_pressed
                           A  1275    				
0012D7 3A 7E 6A 00         A  1276    				ld a,(ui_im_cache)				0012DB 32 19 68 00         A  1277    				ld (overwrite_mode),a
0012DF 3A EC 67 00         A  1278    				ld a,(ui_index)					0012E3 B7                  A  1279    				or a
0012E4 20 04               A  1280    				jr nz,ui_data
0012E6 3E81                A  1281    				ld a,081h						0012E8 B7                  A  1282    				or a
0012E9 C9                  A  1283    				ret
0012EA 2A EE 67 00         A  1284    ui_data			ld hl,(ui_string_addr)
0012EE 11000000            A  1285    				ld de,0
0012F2 5F                  A  1286    				ld e,a
0012F3 19                  A  1287    				add hl,de
0012F4 3600                A  1288    				ld (hl),0						0012F6 BF                  A  1289    				cp a							0012F7 C9                  A  1290    				ret
                           A  1291    
0012F8 3A 7E 6A 00         A  1292    ui_aborted		ld a,(ui_im_cache)				0012FC 32 19 68 00         A  1293    				ld (overwrite_mode),a
001300 3E80                A  1294    				ld a,080h						001302 B7                  A  1295    				or a							001303 C9                  A  1296    				ret
                           A  1297    		
                           A  1298    ;----------------------------------------------
                           A  1299    	
001304                     A  1300    os_count_lines
                           A  1301    
001304 E5                  A  1302    				push hl							001305 0679                A  1303    				ld b,'y'						001307 21 66 6A 00         A  1304    				ld hl,os_linecount			
00130B 34                  A  1305    				inc (hl)						00130C 3A 1C 68 00         A  1306    				ld a,(charmap_rows)
001310 D604                A  1307    				sub 4
001312 BE                  A  1308    				cp (hl)
001313 20 0E               A  1309    				jr nz,os_nntpo
001315 3600                A  1310    				ld (hl),0
001317 21 03 5F 00         A  1311    				ld hl,os_more_txt
00131B CD 60 10 00         A  1312    				call os_print_string
00131F CD 18 4C 00         A  1313    				call os_wait_key_press	
001323 E1                  A  1314    os_nntpo		pop hl
001324 C9                  A  1315    				ret
                           A  1316    
                           A  1317    ;----------------------------------------------
                           A  1318    
001325                     A  1319    ext_compare_strings
                           A  1320    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001325 CC 6E 16 00         A  1321    				call z,mbase_hl
001329 CC 7F 16 00         A  1322    				call z,mbase_de
                           A  1323    				
00132D                     A  1324    os_compare_strings
                           A  1325    
                           A  1326    ; both strings at HL/DE should be zero terminat
                           A  1327    ; compare will fail if string lengths are diffe
                           A  1328    ; unless count (B) is reached first
                           A  1329    ; Case is ignored
                           A  1330    ; Zero flag set on return if same
                           A  1331    
00132D E5                  A  1332    				push hl							00132E D5                  A  1333    				push de							00132F 1A                  A  1334    ocslp			ld a,(de)						001330 B7                  A  1335    				or a
001331 28 0C               A  1336    				jr z,ocsbt
001333 CD 70 13 00         A  1337    				call case_insensitive_compare	001337 20 0E               A  1338    				jr nz,ocs_diff
001339 13                  A  1339    				inc de
00133A 23                  A  1340    				inc hl
00133B 10 F2               A  1341    				djnz ocslp
00133D 18 04               A  1342    				jr ocs_same
00133F 1A                  A  1343    ocsbt			ld a,(de)						001340 B6                  A  1344    				or (hl)
001341 20 04               A  1345    				jr nz,ocs_diff
001343 D1                  A  1346    ocs_same		pop de
001344 E1                  A  1347    				pop hl
001345 AF                  A  1348    				xor a							001346 C9                  A  1349    				ret
001347 D1                  A  1350    ocs_diff		pop de
001348 E1                  A  1351    				pop hl
001349 AF                  A  1352    				xor a							00134A 3C                  A  1353    				inc a
00134B C9                  A  1354    				ret
                           A  1355    
                           A  1356    
                           A  1357    ;----------------------------------------------
                           A  1358    
00134C                     A  1359    os_copy_ascii_run
                           A  1360    
                           A  1361    ;INPUT HL = source ($00 or $20 terminates)
                           A  1362    ;      DE = dest
                           A  1363    ;       b = max chars
                           A  1364    
                           A  1365    ;OUTPUT HL/DE = end of runs
                           A  1366    ;           c = char count
                           A  1367    	
00134C 0E00                A  1368    				ld c,0
00134E 7E                  A  1369    cpyar_lp		ld a,(hl)
00134F B7                  A  1370    				or a
001350 C8                  A  1371    				ret z
001351 FE20                A  1372    				cp 32
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001353 C8                  A  1373    				ret z
001354 12                  A  1374    				ld (de),a
001355 23                  A  1375    				inc hl
001356 13                  A  1376    				inc de
001357 0C                  A  1377    				inc c
001358 10 F4               A  1378    				djnz cpyar_lp
00135A C9                  A  1379    				ret
                           A  1380    
                           A  1381    ;----------------------------------------------
                           A  1382    
00135B                     A  1383    uppercasify_string
                           A  1384    
                           A  1385    ; Set HL to string location ($00 quits)
                           A  1386    ; Set B to max number of chars
                           A  1387    
00135B 7E                  A  1388    				ld a,(hl)
00135C B7                  A  1389    				or a
00135D C8                  A  1390    				ret z
00135E CD 67 13 00         A  1391    				call os_uppercasify
001362 77                  A  1392    				ld (hl),a
001363 23                  A  1393    				inc hl
001364 10 F5               A  1394    				djnz uppercasify_string	
001366 C9                  A  1395    				ret
                           A  1396    	
                           A  1397    
001367                     A  1398    os_uppercasify
                           A  1399    
                           A  1400    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1401    
001367 FE61                A  1402    				cp 061h			
001369 D8                  A  1403    				ret c
00136A FE7B                A  1404    				cp 07bh
00136C D0                  A  1405    				ret nc
00136D D620                A  1406    				sub 020h				
00136F C9                  A  1407    				ret
                           A  1408    
                           A  1409    ;----------------------------------------------
                           A  1410    
001370                     A  1411    case_insensitive_compare
                           A  1412    
                           A  1413    ; compares A with (HL) disregarding the case of
                           A  1414    ; Zero flag set if the characters are the same
                           A  1415    ; all registers are preserved.
                           A  1416    
001370 C5                  A  1417    				push bc					
001371 4F                  A  1418    				ld c,a
                           A  1419    
001372 CD 67 13 00         A  1420    				call os_uppercasify				001376 47                  A  1421    				ld b,a
001377 7E                  A  1422    				ld a,(hl)
001378 CD 67 13 00         A  1423    				call os_uppercasify
00137C B8                  A  1424    				cp b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1425    
00137D 79                  A  1426    				ld a,c
00137E C1                  A  1427    				pop bc
00137F C9                  A  1428    				ret
                           A  1429    
                           A  1430    ;----------------------------------------------
                           A  1431    
001380                     A  1432    os_decimal_add
                           A  1433    
                           A  1434    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1435    
001380 C5                  A  1436    				push bc
001381 0E00                A  1437    				ld c,0
001383 1A                  A  1438    decdlp			ld a,(de)
001384 86                  A  1439    				add a,(hl)
001385 81                  A  1440    				add a,c
001386 FE0A                A  1441    				cp 10
001388 38 0B               A  1442    				jr c,daddnc
00138A D60A                A  1443    				sub 10
00138C 0E01                A  1444    				ld c,1
00138E 12                  A  1445    decnclp			ld (de),a
00138F 23                  A  1446    				inc hl
001390 13                  A  1447    				inc de
001391 10 F0               A  1448    				djnz decdlp
001393 C1                  A  1449    				pop bc
001394 C9                  A  1450    				ret
001395 0E00                A  1451    daddnc			ld c,0
001397 18 F5               A  1452    				jr decnclp
                           A  1453    	
                           A  1454    ;----------------------------------------------
                           A  1455    
001399                     A  1456    os_hex_to_decimal
                           A  1457    
                           A  1458    ; INPUT xDE hex longword
                           A  1459    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1460    
       00000100            A  1461    hex_to_convert		equ scratch_pad
       00000103            A  1462    decimal_digits		equ scratch_pad+3
       0000010B            A  1463    decimal_add_digits	equ scratch_pad+3+8
                           A  1464    
001399 ED530001 00         A  1465    				ld (hex_to_convert),de
                           A  1466    		
00139E 210B0100            A  1467    				ld hl,decimal_add_digits
0013A2 E5                  A  1468    				push hl
0013A3 11030100            A  1469    				ld de,decimal_digits
0013A7 AF                  A  1470    				xor a
0013A8 0608                A  1471    				ld b,8
0013AA 12                  A  1472    setupdec		ld (de),a
0013AB 77                  A  1473    				ld (hl),a
0013AC 23                  A  1474    				inc hl
0013AD 13                  A  1475    				inc de
0013AE 10 FA               A  1476    				djnz setupdec
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013B0 E1                  A  1477    				pop hl
0013B1 3601                A  1478    				ld (hl),1
                           A  1479    	
0013B3 21000100            A  1480    				ld hl,hex_to_convert
0013B7 0603                A  1481    				ld b,3
0013B9 C5                  A  1482    decconvlp		push bc
0013BA 7E                  A  1483    				ld a,(hl)
0013BB CD D9 13 00         A  1484    				call decadder
0013BF CD F2 13 00         A  1485    				call decaddx16
0013C3 7E                  A  1486    				ld a,(hl)
0013C4 0F                  A  1487    				rrca
0013C5 0F                  A  1488    				rrca
0013C6 0F                  A  1489    				rrca
0013C7 0F                  A  1490    				rrca
0013C8 CD D9 13 00         A  1491    				call decadder
0013CC CD F2 13 00         A  1492    				call decaddx16
0013D0 C1                  A  1493    				pop bc
0013D1 23                  A  1494    				inc hl
0013D2 10 E5               A  1495    				djnz decconvlp
0013D4 21030100            A  1496    				ld hl,decimal_digits
0013D8 C9                  A  1497    				ret
                           A  1498    
                           A  1499    
                           A  1500    
0013D9 E60F                A  1501    decadder		and 15
0013DB C8                  A  1502    				ret z
0013DC 47                  A  1503    				ld b,a
0013DD E5                  A  1504    				push hl
0013DE C5                  A  1505    daddlp			push bc
0013DF 11030100            A  1506    				ld de,decimal_digits
0013E3 210B0100            A  1507    				ld hl,decimal_add_digits
0013E7 0608                A  1508    				ld b,8
0013E9 CD 80 13 00         A  1509    				call os_decimal_add
0013ED C1                  A  1510    				pop bc
0013EE 10 EE               A  1511    				djnz daddlp	
0013F0 E1                  A  1512    				pop hl
0013F1 C9                  A  1513    				ret
                           A  1514    			
                           A  1515    				
0013F2 E5                  A  1516    decaddx16		push hl
0013F3 0604                A  1517    				ld b,4							0013F5 C5                  A  1518    x16loop			push bc
0013F6 110B0100            A  1519    				ld de,decimal_add_digits
0013FA 210B0100            A  1520    				ld hl,decimal_add_digits
0013FE 0608                A  1521    				ld b,8
001400 CD 80 13 00         A  1522    				call os_decimal_add
001404 C1                  A  1523    				pop bc
001405 10 EE               A  1524    				djnz x16loop	
001407 E1                  A  1525    				pop hl
001408 C9                  A  1526    				ret
                           A  1527    	
                           A  1528    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1529    ;----------------------------------------------
                           A  1530    
001409                     A  1531    os_show_decimal
                           A  1532    
001409 11 D1 6A 00         A  1533    				ld de,output_line				00140D 01090000            A  1534    				ld bc,9
001411 09                  A  1535    				add hl,bc
001412 060A                A  1536    				ld b,10
001414 7E                  A  1537    shdeclp			ld a,(hl)
001415 B7                  A  1538    				or a
001416 28 04               A  1539    				jr z,dnodigit
001418 C630                A  1540    				add a,030h
00141A 12                  A  1541    				ld (de),a
00141B 13                  A  1542    				inc de
00141C 2B                  A  1543    dnodigit		dec hl
00141D 10 F5               A  1544    				djnz shdeclp
00141F AF                  A  1545    				xor a
001420 12                  A  1546    				ld (de),a
001421 CD 69 14 00         A  1547    				call os_print_output_line
001425 C9                  A  1548    				ret
                           A  1549    				
                           A  1550    ;----------------------------------------------
                           A  1551    		
001426                     A  1552    os_copy_to_output_line
                           A  1553    	
001426 D5                  A  1554    				push de
001427 C5                  A  1555    				push bc
001428 11 D1 6A 00         A  1556    				ld de,output_line				00142C 01510000            A  1557    				ld bc,max_buffer_chars+1		001430 EDA0                A  1558    os_cloll		ldi
001432 7E                  A  1559    				ld a,(hl)
001433 B7                  A  1560    				or a
001434 28 04               A  1561    				jr z,os_clold
001436 78                  A  1562    				ld a,b
001437 B1                  A  1563    				or c
001438 20 F6               A  1564    				jr nz,os_cloll
00143A 12                  A  1565    os_clold		ld (de),a
00143B C1                  A  1566    				pop bc
00143C D1                  A  1567    				pop de
00143D C9                  A  1568    				ret
                           A  1569    
                           A  1570    
                           A  1571    ;----------------------------------------------
                           A  1572    
00143E                     A  1573    os_show_hex_address
                           A  1574    
00143E E5                  A  1575    				push hl							00143F 21 D1 6A 00         A  1576    				ld hl,output_line
001443 ED53 73 6A 00       A  1577    				ld (hex_address),de
001448 3A 75 6A 00         A  1578    				ld a,(hex_address+2)
00144C CD A9 11 00         A  1579    				call hexbyte_to_ascii
001450 18 10               A  1580    				jr shw_nt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1581    				
                           A  1582    
001452                     A  1583    os_show_hex_byte
                           A  1584    
001452 E5                  A  1585    				push hl							001453 21 D1 6A 00         A  1586    				ld hl,output_line
001457 CD A9 11 00         A  1587    				call hexbyte_to_ascii
00145B 18 09               A  1588    				jr shb_nt
                           A  1589    
                           A  1590    
                           A  1591    
00145D                     A  1592    os_show_hex_word
                           A  1593    
00145D E5                  A  1594    				push hl							00145E 21 D1 6A 00         A  1595    				ld hl,output_line
001462 CD CE 11 00         A  1596    shw_nt			call hexword_to_ascii
001466 3600                A  1597    shb_nt			ld (hl),0
001468 E1                  A  1598    				pop hl
                           A  1599    
                           A  1600    	
                           A  1601    
001469                     A  1602    os_print_output_line
                           A  1603    
001469 E5                  A  1604    				push hl
00146A 21 D1 6A 00         A  1605    				ld hl,output_line
00146E CD 60 10 00         A  1606    cproline		call os_print_string
001472 E1                  A  1607    				pop hl
001473 C9                  A  1608    				ret
                           A  1609    
                           A  1610    
                           A  1611    
001474                     A  1612    os_print_output_line_skip_zeroes
                           A  1613    
001474 E5                  A  1614    				push hl
001475 21 D1 6A 00         A  1615    				ld hl,output_line
001479 CD 86 11 00         A  1616    				call os_skip_leading_ascii_zero
00147D 18 EF               A  1617    				jr cproline
                           A  1618    				
                           A  1619    		
                           A  1620    ;----------------------------------------------
                           A  1621    
00147F                     A  1622    os_store_CPU_regs
                           A  1623    
00147F F3                  A  1624    				di								                           A  1625    
001480 33                  A  1626    				inc sp							001481 33                  A  1627    				inc sp
001482 33                  A  1628    				inc sp
001483 ED73 EF 69 00       A  1629    				ld (store_spl),sp
001488 3B                  A  1630    				dec sp							001489 3B                  A  1631    				dec sp
00148A 3B                  A  1632    				dec sp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1633    				
00148B F5                  A  1634    				push af
00148C 32 D2 69 00         A  1635    				ld (store_a1),a					001490 08                  A  1636    				ex af,af'
001491 32 DC 69 00         A  1637    				ld (store_a2),a
001495 08                  A  1638    				ex af,af'
001496 ED43 D3 69 00       A  1639    				ld (store_bc1),bc		
00149B ED53 D6 69 00       A  1640    				ld (store_de1),de
0014A0 22 D9 69 00         A  1641    				ld (store_hl1),hl
0014A4 D9                  A  1642    				exx
0014A5 ED43 DD 69 00       A  1643    				ld (store_bc2),bc
0014AA ED53 E0 69 00       A  1644    				ld (store_de2),de
0014AF 22 E3 69 00         A  1645    				ld (store_hl2),hl
0014B3 D9                  A  1646    				exx
0014B4 DD22 E6 69 00       A  1647    				ld (store_ix),ix
0014B9 FD22 E9 69 00       A  1648    				ld (store_iy),iy
                           A  1649    				
0014BE ED6E                A  1650    			    ld a,MB
0014C0 32 F4 69 00         A  1651    				ld (store_mbase),a
                           A  1652    								
0014C4 C5                  A  1653    				push bc
0014C5 0600                A  1654    				ld b,0
0014C7 20 02               A  1655    				jr nz,zfstzero					0014C9 CBF0                A  1656    				set 6,b
                           A  1657    
0014CB 30 02               A  1658    zfstzero		jr nc,cfstzero					0014CD CBC0                A  1659    				set 0,b
                           A  1660    
0014CF F2 D5 14 00         A  1661    cfstzero		jp p,sfstzero					0014D3 CBF8                A  1662    				set 7,b
                           A  1663    
0014D5 EA DB 14 00         A  1664    sfstzero		jp pe,pfstzero					0014D9 CBD0                A  1665    				set 2,b
                           A  1666    
0014DB ED57                A  1667    pfstzero		ld a,i			
0014DD EA E3 14 00         A  1668    				jp pe,ifstzero					0014E1 CBE0                A  1669    				set 4,b
                           A  1670    
0014E3 78                  A  1671    ifstzero		ld a,b
0014E4 32 F5 69 00         A  1672    				ld (store_f),a
                           A  1673    				
0014E8 3E00                A  1674    				ld a,os_location/65536			0014EA ED6D                A  1675    				ld MB,a							0014EC 40ED73 F2 69        A  1676    				ld.sis (store_sps),sp
0014F1 3A F4 69 00         A  1677    				ld a,(store_mbase)				0014F5 ED6D                A  1678    				ld MB,a
                           A  1679    				
0014F7 C1                  A  1680    				pop bc
0014F8 F1                  A  1681    				pop af
0014F9 FB                  A  1682    				ei
0014FA C9                  A  1683    				ret
                           A  1684    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1685    
                           A  1686    
0014FB                     A  1687    os_dont_store_registers
                           A  1688    
0014FB AF                  A  1689    				xor a
0014FC 32 FA 69 00         A  1690    				ld (store_registers),a			001500 C9                  A  1691    				ret
                           A  1692    	
                           A  1693    	
                           A  1694    ;----------------------------------------------
                           A  1695    
001501                     A  1696    os_new_line_cond
                           A  1697    
001501 CD DA 1A 00         A  1698    				call test_quiet_mode
001505 C0                  A  1699    				ret nz
                           A  1700    
                           A  1701    	
001506                     A  1702    os_new_line
                           A  1703    
001506 E5                  A  1704    				push hl
001507 21 1B 5F 00         A  1705    				ld hl,crlfx2_txt+1
00150B CD 60 10 00         A  1706    				call os_print_string
00150F E1                  A  1707    				pop hl
001510 C9                  A  1708    				ret
                           A  1709    				
                           A  1710    ;----------------------------------------------
                           A  1711    
001511                     A  1712    os_set_cursor_position
                           A  1713    				
                           A  1714    												001511 3A 1C 68 00         A  1715    				ld a,(charmap_rows)				001515 3D                  A  1716    				dec a							001516 B9                  A  1717    				cp c
001517 38 14               A  1718    				jr c,badpos
001519 79                  A  1719    				ld a,c
00151A 32 61 6A 00         A  1720    				ld (cursor_y),a
                           A  1721    				
00151E 3A 1F 68 00         A  1722    				ld a,(charmap_columns)
001522 3D                  A  1723    				dec a
001523 B8                  A  1724    				cp b
001524 38 07               A  1725    				jr c,badpos
001526 78                  A  1726    				ld a,b
001527 32 62 6A 00         A  1727    				ld (cursor_x),a
00152B AF                  A  1728    				xor a
00152C C9                  A  1729    				ret				
                           A  1730    
00152D 3E88                A  1731    badpos			ld a,88h						00152F B7                  A  1732    				or a
001530 C9                  A  1733    				ret
                           A  1734    
                           A  1735    
                           A  1736    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1737    	
                           A  1738    	
001531                     A  1739    os_get_cursor_position
                           A  1740    
001531 ED4B 61 6A 00       A  1741    				ld bc,(cursor_pos)				001536 BF                  A  1742    				cp a							001537 C9                  A  1743    				ret
                           A  1744    
                           A  1745    
                           A  1746    ;----------------------------------------------
                           A  1747    
001538                     A  1748    os_show_packed_text_cond
                           A  1749    
001538 CD DA 1A 00         A  1750    				call test_quiet_mode
00153C C0                  A  1751    				ret nz
                           A  1752    
                           A  1753    	
00153D                     A  1754    os_show_packed_text
                           A  1755    
                           A  1756    ; Construct sentence from internal dictionary u
                           A  1757    	
00153D C5                  A  1758    				push bc
00153E D5                  A  1759    				push de
00153F DDE5                A  1760    				push ix
001541 DD21 D1 6A 00       A  1761    				ld ix,output_line
001546 7E                  A  1762    readpind		ld a,(hl)
001547 B7                  A  1763    				or a
001548 20 10               A  1764    				jr nz,getword					00154A DD2B                A  1765    				dec ix							00154C DD7700              A  1766    				ld (ix),a						                           A  1767    			
00154F E5                  A  1768    				push hl
001550 CD 69 14 00         A  1769    				call os_print_output_line
001554 E1                  A  1770    				pop hl
                           A  1771    			
001555 DDE1                A  1772    				pop ix
001557 D1                  A  1773    				pop de
001558 C1                  A  1774    				pop bc
001559 C9                  A  1775    				ret
                           A  1776    				
00155A 11 91 5F 00         A  1777    getword			ld de,dictionary-1
00155E 0E00                A  1778    				ld c,0
001560 13                  A  1779    dictloop		inc de
001561 1A                  A  1780    				ld a,(de)
001562 B7                  A  1781    				or a							001563 28 04               A  1782    				jr z,faword
001565 CB7F                A  1783    				bit 7,a							001567 28 F7               A  1784    				jr z,dictloop	
                           A  1785    			
001569 0C                  A  1786    faword			inc c							00156A 79                  A  1787    				ld a,c
00156B BE                  A  1788    				cp (hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00156C 20 F2               A  1789    				jr nz,dictloop
00156E 13                  A  1790    copytol			inc de							00156F 1A                  A  1791    				ld a,(de)
001570 B7                  A  1792    				or a
001571 28 0B               A  1793    				jr z,eoword						001573 CB7F                A  1794    				bit 7,a
001575 20 07               A  1795    				jr nz,eoword
001577 DD7700              A  1796    				ld (ix),a						00157A DD23                A  1797    				inc ix
00157C 18 F0               A  1798    				jr copytol
00157E DD360020            A  1799    eoword			ld (ix),32						001582 DD23                A  1800    				inc ix
001584 23                  A  1801    				inc hl
001585 18 BF               A  1802    				jr readpind
                           A  1803    
                           A  1804    
                           A  1805    		
                           A  1806    ;--------- Mouse functions --------------------
                           A  1807    
001587                     A  1808    os_set_mouse_window
                           A  1809    
                           A  1810    ; Set: HL/DE = window size mouse pointer is to 
                           A  1811    	
001587 22 B2 6B 00         A  1812    				ld (mouse_window_size_x),hl	 
00158B ED53 B5 6B 00       A  1813    				ld (mouse_window_size_y),de
001590 21000000            A  1814    				ld hl,0
001594 22 B8 6B 00         A  1815    				ld (mouse_abs_x),hl
001598 22 BB 6B 00         A  1816    				ld (mouse_abs_y),hl
00159C 3E01                A  1817    				ld a,1
00159E 32 CA 6B 00         A  1818    				ld (mouse_new_window),a
0015A2 AF                  A  1819    				xor a
0015A3 C9                  A  1820    				ret
                           A  1821    				
                           A  1822    			
0015A4                     A  1823    os_get_mouse_motion
                           A  1824    			
                           A  1825    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1826    ;          ZF = Not set: Mouse driver not initi
                           A  1827    			
0015A4 3A B6 69 00         A  1828    				ld a,(devices_connected)
0015A8 E602                A  1829    				and 2
0015AA EE02                A  1830    				xor 2
0015AC C0                  A  1831    				ret nz
                           A  1832    				
0015AD AF                  A  1833    ms_reread		xor a
0015AE 32 B1 6B 00         A  1834    				ld (mouse_updated),a
0015B2 2A AA 6B 00         A  1835    				ld hl,(mouse_disp_x)			0015B6 ED5B AD 6B 00       A  1836    				ld de,(mouse_disp_y)
0015BB 3A B1 6B 00         A  1837    				ld a,(mouse_updated)			0015BF B7                  A  1838    				or a
0015C0 20 EB               A  1839    				jr nz,ms_reread
0015C2 AF                  A  1840    mouse_end		xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015C3 3A B0 6B 00         A  1841    				ld a,(mouse_wheel)
0015C7 47                  A  1842    				ld b,a
0015C8 3A A9 6B 00         A  1843    				ld a,(mouse_buttons)
0015CC C9                  A  1844    				ret
                           A  1845    			
                           A  1846    			
0015CD                     A  1847    os_get_mouse_position
                           A  1848    
                           A  1849    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1850    ;          ZF = Not set: Mouse driver not initi
                           A  1851    
0015CD 3A B6 69 00         A  1852    				ld a,(devices_connected)
0015D1 E602                A  1853    				and 2
0015D3 EE02                A  1854    				xor 2
0015D5 C0                  A  1855    				ret nz
                           A  1856    				
0015D6 AF                  A  1857    ms_reread_abs	xor a
0015D7 32 B1 6B 00         A  1858    				ld (mouse_updated),a
                           A  1859    
0015DB 2A B8 6B 00         A  1860    				ld hl,(mouse_abs_x)
0015DF ED5B BB 6B 00       A  1861    				ld de,(mouse_abs_y)
0015E4 3A B1 6B 00         A  1862    				ld a,(mouse_updated)			0015E8 B7                  A  1863    				or a
0015E9 20 EB               A  1864    				jr nz,ms_reread_abs
                           A  1865    				
0015EB 18 D5               A  1866    				jr mouse_end
                           A  1867    				
                           A  1868    	
                           A  1869    ;==============================================
                           A  1870    ;----- General Subroutines --------------------
                           A  1871    ;==============================================
                           A  1872    
                           A  1873    ; .--------------.
                           A  1874    ; ! CRC Checksum !
                           A  1875    ; '--------------'
                           A  1876    
                           A  1877    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1878    
0015ED                     A  1879    crc_checksum
                           A  1880    
0015ED 21FFFF00            A  1881    				ld hl,0ffffh		
0015F1 1A                  A  1882    crcloop			ld a,(de)			
0015F2 AC                  A  1883    				xor h			
0015F3 67                  A  1884    				ld h,a			
0015F4 0608                A  1885    				ld b,8
0015F6 4029                A  1886    crcbyte			add.sis hl,hl					0015F8 30 08               A  1887    				jr nc,crcnext
0015FA 7C                  A  1888    				ld a,h
0015FB EE10                A  1889    				xor 10h
0015FD 67                  A  1890    				ld h,a
0015FE 7D                  A  1891    				ld a,l
0015FF EE21                A  1892    				xor 21h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001601 6F                  A  1893    				ld l,a
001602 10 F2               A  1894    crcnext			djnz crcbyte
001604 13                  A  1895    				inc de
001605 0D                  A  1896    				dec c
001606 20 E9               A  1897    				jr nz,crcloop
001608 C9                  A  1898    				ret
                           A  1899    
                           A  1900    
                           A  1901    ;----------------------------------------------
                           A  1902    
001609                     A  1903    os_get_key_mod_flags
                           A  1904    
001609 3A 9F 6B 00         A  1905    				ld a,(key_mod_flags)
00160D BF                  A  1906    				cp a							00160E C9                  A  1907    				ret
                           A  1908    
                           A  1909    ;----------------------------------------------
                           A  1910    
00160F                     A  1911    os_get_vmode
                           A  1912    			
00160F 3A 1C 68 00         A  1913    				ld a,(charmap_rows)
001613 4F                  A  1914    				ld c,a
001614 3A 1F 68 00         A  1915    				ld a,(charmap_columns)
001618 47                  A  1916    				ld b,a
001619 3A F1 67 00         A  1917    				ld a,(video_mode)
00161D BF                  A  1918    				cp a						; Z
00161E C9                  A  1919    				ret
                           A  1920    
                           A  1921    ;----------------------------------------------
                           A  1922    
00161F 7B                  A  1923    ext_set_vmode	ld a,e
                           A  1924    
001620 FE04                A  1925    os_set_vmode	cp 4
001622 38 04               A  1926    				jr c,vm_range_ok
001624 3E88                A  1927    				ld a,88h					;ou
001626 B7                  A  1928    				or a
001627 C9                  A  1929    				ret
                           A  1930    				
001628 32 F1 67 00         A  1931    vm_range_ok		ld (video_mode),a
00162C 21030000            A  1932    				ld hl,3
001630 67                  A  1933    				ld h,a
001631 ED6C                A  1934    				mlt hl
001633 11 22 68 00         A  1935    				ld de,vmode_parameter_list
001637 19                  A  1936    				add hl,de
001638 7E                  A  1937    				ld a,(hl)
001639 23                  A  1938    				inc hl
00163A 46                  A  1939    				ld b,(hl)
00163B 23                  A  1940    				inc hl
00163C 4E                  A  1941    				ld c,(hl)
00163D CD 65 45 00         A  1942    				call set_charmap_parameters
                           A  1943    				
001641 CD 07 46 00         A  1944    				call hwsc_clear_screen
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1945    
001645 AF                  A  1946    				xor a				
001646 C9                  A  1947    				ret
                           A  1948    
                           A  1949    
                           A  1950    ;----------------------------------------------
                           A  1951    
001647                     A  1952    os_bchl_memfill
                           A  1953    
                           A  1954    ; fill memory from xHL with A. Count in xBC.
                           A  1955    		
001647 77                  A  1956    mf_loop			ld (hl),a
001648 EDA1                A  1957    				cpi								00164A EA 47 16 00         A  1958    				jp pe,mf_loop
00164E C9                  A  1959    				ret
                           A  1960    	
                           A  1961    ;----------------------------------------------
                           A  1962    
00164F 7B                  A  1963    ext_set_pen		ld a,e
                           A  1964    
001650 32 F2 67 00         A  1965    os_set_pen		ld (current_pen),a
001654 BF                  A  1966    				cp a							001655 C9                  A  1967    				ret
                           A  1968    
                           A  1969    ;----------------------------------------------
                           A  1970    	
001656 3A F2 67 00         A  1971    os_get_pen		ld a,(current_pen)
00165A BF                  A  1972    				cp a							00165B C9                  A  1973    				ret	
                           A  1974    
                           A  1975    ;----------------------------------------------
                           A  1976    
00165C                     A  1977    ext_background_colours
                           A  1978    				
00165C CC 6E 16 00         A  1979    				call z,mbase_hl
001660 C3 FB 45 00         A  1980    				jp hswc_set_ui_colours
                           A  1981    				
                           A  1982    				
                           A  1983    ;----------------------------------------------
                           A  1984    
001664                     A  1985    os_get_xde_msb	
                           A  1986    			
001664 ED53 79 6A 00       A  1987    				ld (xrr_temp),de				001669 3A 7B 6A 00         A  1988    				ld a,(xrr_temp+2)
00166D C9                  A  1989    				ret
                           A  1990    
                           A  1991    ;----------------------------------------------
                           A  1992    
00166E F5                  A  1993    mbase_hl		push af
00166F 22 79 6A 00         A  1994    				ld (xrr_temp),hl				001673 ED6E                A  1995    				ld a,MB
001675 32 7B 6A 00         A  1996    				ld (xrr_temp+2),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001679 2A 79 6A 00         A  1997    				ld hl,(xrr_temp)
00167D F1                  A  1998    				pop af
00167E C9                  A  1999    				ret
                           A  2000    				
00167F F5                  A  2001    mbase_de		push af
001680 ED53 79 6A 00       A  2002    				ld (xrr_temp),de				001685 ED6E                A  2003    				ld a,MB
001687 32 7B 6A 00         A  2004    				ld (xrr_temp+2),a
00168B ED5B 79 6A 00       A  2005    				ld de,(xrr_temp)
001690 F1                  A  2006    				pop af
001691 C9                  A  2007    				ret
                           A  2008    
                           A  2009    
                           A  2010    ;----------------------------------------------
                           A  2011    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  2012    ;----------------------------------------------
                           A  2013    
001692                     A  2014    unpack_rle
                           A  2015    
                           A  2016    ;set xHL = source address of packed file
                           A  2017    ;set xDE = destination address for unpacked dat
                           A  2018    ;set xBC = length of packed file
                           A  2019    
001692 E5                  A  2020    			push hl	
001693 DDE1                A  2021    			pop ix
001695 0B                  A  2022    			dec bc								001696 23                  A  2023    			inc hl
001697 DD7E00              A  2024    unp_gtok	ld a,(ix)							00169A BE                  A  2025    unp_next	cp (hl)								00169B 28 07               A  2026    			jr z,unp_brun						00169D EDA0                A  2027    			ldi									00169F EA 9A 16 00         A  2028    			jp pe,unp_next						0016A3 C9                  A  2029    			ret
                           A  2030    	
0016A4 C5                  A  2031    unp_brun	push bc								0016A5 23                  A  2032    			inc hl		
0016A6 7E                  A  2033    			ld a,(hl)							0016A7 23                  A  2034    			inc hl		
0016A8 46                  A  2035    			ld b,(hl)							0016A9 23                  A  2036    			inc hl
                           A  2037    	
0016AA 12                  A  2038    unp_rllp	ld (de),a							0016AB 13                  A  2039    			inc de			
0016AC 10 FC               A  2040    			djnz unp_rllp
                           A  2041    	
0016AE C1                  A  2042    			pop bc	
0016AF 0B                  A  2043    			dec bc								0016B0 0B                  A  2044    			dec bc
0016B1 0B                  A  2045    			dec bc
0016B2 E5                  A  2046    			push hl								0016B3 21000000            A  2047    			ld hl,0
0016B7 B7                  A  2048    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016B8 ED4A                A  2049    			adc hl,bc
0016BA E1                  A  2050    			pop hl
0016BB 20 DA               A  2051    			jr nz,unp_gtok
0016BD C9                  A  2052    			ret	
                           A  2053    	
                           A  2054    ;----------------------------------------------
                           A  2055    ; Commonly called error messages - gets message
                           A  2056    ;----------------------------------------------
                           A  2057    
                           A  2058    
0016BE 3E0D                A  2059    os_no_fn_error		ld a,0dh
0016C0 B7                  A  2060    					or a
0016C1 C9                  A  2061    					ret
                           A  2062    			
0016C2 3E15                A  2063    os_fn_too_long		ld a,15h
0016C4 B7                  A  2064    					or a
0016C5 C9                  A  2065    					ret
                           A  2066    				
0016C6 3E16                A  2067    os_no_start_addr	ld a,16h
0016C8 B7                  A  2068    					or a
0016C9 C9                  A  2069    					ret
                           A  2070    			
0016CA 3E17                A  2071    os_no_filesize		ld a,17h
0016CC B7                  A  2072    					or a
0016CD C9                  A  2073    					ret
                           A  2074    			
0016CE 3E18                A  2075    os_abort_save		ld a,18h
0016D0 B7                  A  2076    					or a
0016D1 C9                  A  2077    					ret
                           A  2078    			
0016D2 3E1C                A  2079    os_no_e_addr_error	ld a,1ch
0016D4 B7                  A  2080    					or a
0016D5 C9                  A  2081    					ret
                           A  2082    			
0016D6 3E1D                A  2083    os_no_d_addr_error	ld a,1dh
0016D8 B7                  A  2084    					or a
0016D9 C9                  A  2085    					ret
                           A  2086    				
0016DA 3E1E                A  2087    os_range_error		ld a,1eh
0016DC B7                  A  2088    					or a
0016DD C9                  A  2089    					ret
                           A  2090    			
0016DE 3E1F                A  2091    os_no_args_error	ld a,1fh
0016E0 B7                  A  2092    					or a
0016E1 C9                  A  2093    					ret	
                           A  2094    
                           A  2095    ;----------------------------------------------
                           A  2096    
                           A  2097    ; Set xHL to address of zero terminated filenam
                           A  2098    ; RETURNS:	C:xDE  = File length
                           A  2099    ;    		HL     = Start cluster of file
                           A  2100    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016E2 CC 6E 16 00         A  2101    ext_find_file	call z,mbase_hl
                           A  2102    
0016E6 CD C9 5A 00         A  2103    os_find_file	call fs_hl_to_filename
0016EA CD 30 52 00         A  2104    				call fs_open_file_command		0016EE 38 01               A  2105    				jr c,os_fferr					0016F0 C9                  A  2106    				ret								                           A  2107    					
0016F1 47                  A  2108    os_fferr		ld b,a							0016F2 AF                  A  2109    				xor a			
0016F3 3C                  A  2110    				inc a							0016F4 C9                  A  2111    				ret	
                           A  2112    
                           A  2113    ;----------------------------------------------
                           A  2114    
0016F5                     A  2115    os_set_load_length
                           A  2116    
0016F5 ED53 4E 5D 00       A  2117    				ld (fs_file_transfer_length),de
0016FA BF                  A  2118    				cp a							0016FB C9                  A  2119    				ret
                           A  2120    				
                           A  2121    ;----------------------------------------------
                           A  2122    
0016FC                     A  2123    ext_set_file_pointer
                           A  2124    
0016FC 79                  A  2125    				ld a,c
                           A  2126    				
0016FD                     A  2127    os_set_file_pointer
                           A  2128    
                           A  2129    ; Moves the 'start of file' pointer allowing ra
                           A  2130    ; Note: File pointer is reset by opening a file
                           A  2131    ; by normal read function.
                           A  2132    
0016FD ED53 42 5D 00       A  2133    				ld (fs_file_pointer),de			001702 32 45 5D 00         A  2134    				ld (fs_file_pointer+3),a
001706 F5                  A  2135    				push af
001707 AF                  A  2136    				xor a
001708 32 74 5D 00         A  2137    				ld (fs_filepointer_valid),a		00170C F1                  A  2138    				pop af
00170D BF                  A  2139    				cp a							00170E C9                  A  2140    				ret
                           A  2141    				
                           A  2142    ;----------------------------------------------
                           A  2143    
                           A  2144    ; set xHL = load address 
                           A  2145    ; (Before calling this routine, call os_find_fi
                           A  2146    
00170F                     A  2147    ext_read_bytes_from_file
                           A  2148    
00170F CC 6E 16 00         A  2149    				call z,mbase_hl					                           A  2150    				
001713                     A  2151    os_read_bytes_from_file
                           A  2152    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001713 22 57 5D 00         A  2153    				ld (fs_ez80_address),hl			001717 CD 83 52 00         A  2154    				call fs_read_data_command
00171B 38 D4               A  2155    				jr c,os_fferr
00171D C9                  A  2156    				ret
                           A  2157    
                           A  2158    ;----------------------------------------------
                           A  2159    
                           A  2160    ; Before calling, set xHL = address of zero ter
                           A  2161    
00171E CC 6E 16 00         A  2162    ext_create_file	call z,mbase_hl
                           A  2163    
001722 CD C9 5A 00         A  2164    os_create_file	call fs_hl_to_filename
001726 CD 5B 55 00         A  2165    				call fs_create_file_command		00172A DA F1 16 00         A  2166    				jp c,os_fferr					00172E C9                  A  2167    				ret
                           A  2168    
                           A  2169    ;----------------------------------------------
                           A  2170    
00172F                     A  2171    ext_write_bytes_to_file
                           A  2172    
00172F CC 6E 16 00         A  2173    				call z,mbase_hl
001733 CC 7F 16 00         A  2174    				call z,mbase_de
                           A  2175    
001737                     A  2176    os_write_bytes_to_file
                           A  2177    
                           A  2178    ; Before calling, set..
                           A  2179    
                           A  2180    ; xDE   = address to save data from
                           A  2181    ; xBC   = number of bytes to save
                           A  2182    ; xHL   = address of null-terminated ascii name
                           A  2183    
                           A  2184    ; On return:
                           A  2185    
                           A  2186    ; If zero flag NOT set, there was an error.
                           A  2187    ; If   A = $00, b = hardware error code
                           A  2188    ; Else A = File system error code
                           A  2189    
                           A  2190    ; NOTE:
                           A  2191    ; Will return 'file not found' if the file has 
                           A  2192    				
001737 ED43 4E 5D 00       A  2193    				ld (fs_file_transfer_length),bc
00173C ED53 57 5D 00       A  2194    				ld (fs_ez80_address),de	 	
001741 CD C9 5A 00         A  2195    				call fs_hl_to_filename
001745 CD 8D 55 00         A  2196    				call fs_write_bytes_to_file_com
001749 DA F1 16 00         A  2197    				jp c,os_fferr
00174D C9                  A  2198    				ret
                           A  2199    		
                           A  2200    		
                           A  2201    ;----------------------------------------------
                           A  2202    	
                           A  2203    
00174E                     A  2204    os_check_volume_format
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2205    
00174E E5                  A  2206    				push hl
00174F CD 86 50 00         A  2207    				call fs_check_disk_format
001753 E1                  A  2208    				pop hl
001754 DA F1 16 00         A  2209    os_rffsc		jp c,os_fferr
001758 C9                  A  2210    				ret
                           A  2211    
                           A  2212    ;----------------------------------------------
                           A  2213    
                           A  2214    
001759 7B                  A  2215    ext_format		ld a,e
00175A CC 6E 16 00         A  2216    				call z,mbase_hl					                           A  2217    
00175E E5                  A  2218    os_format		push hl							00175F CD 6D 1B 00         A  2219    				call dev_to_driver_lookup
001763 E1                  A  2220    				pop hl
001764 38 04               A  2221    				jr c,sdevok
001766 3ED0                A  2222    				ld a,0d0h						001768 B7                  A  2223    				or a
001769 C9                  A  2224    				ret
                           A  2225    
00176A F5                  A  2226    sdevok			push af				
00176B 11 1E 5D 00         A  2227    				ld de,fs_sought_filename
00176F CD D8 5B 00         A  2228    				call fs_clear_filename
001773 060B                A  2229    				ld b,11
001775 CD 4C 13 00         A  2230    				call os_copy_ascii_run
001779 F1                  A  2231    				pop af
                           A  2232    				
00177A 21 7B 68 00         A  2233    				ld hl,current_driver
00177E 46                  A  2234    				ld b,(hl)
00177F 77                  A  2235    				ld (hl),a
001780 C5                  A  2236    				push bc
001781 E5                  A  2237    				push hl
001782 CD FB 4E 00         A  2238    				call fs_format_device_command
001786 E1                  A  2239    				pop hl
001787 C1                  A  2240    				pop bc
001788 70                  A  2241    				ld (hl),b
001789 18 C9               A  2242    				jr os_rffsc
                           A  2243    
                           A  2244    
                           A  2245    ;----------------------------------------------
                           A  2246    
                           A  2247    
00178B CC 6E 16 00         A  2248    ext_make_dir	call z,mbase_hl					                           A  2249    
00178F CD C9 5A 00         A  2250    os_make_dir		call fs_hl_to_filename
001793 CD D3 53 00         A  2251    				call fs_make_dir_command
001797 18 BB               A  2252    				jr os_rffsc
                           A  2253    
                           A  2254    
                           A  2255    ;----------------------------------------------
                           A  2256    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2257    
001799 CC 6E 16 00         A  2258    ext_change_dir	call z,mbase_hl					                           A  2259    
00179D CD C9 5A 00         A  2260    os_change_dir	call fs_hl_to_filename
0017A1 CD D9 51 00         A  2261    				call fs_change_dir_command
0017A5 18 AD               A  2262    				jr os_rffsc
                           A  2263    				
                           A  2264    	
                           A  2265    ;----------------------------------------------
                           A  2266    	
                           A  2267    	
0017A7 CD 0C 52 00         A  2268    os_parent_dir	call fs_parent_dir_command
0017AB 18 A7               A  2269    				jr os_rffsc
                           A  2270    				
                           A  2271    
                           A  2272    ;----------------------------------------------
                           A  2273    
                           A  2274    	
0017AD CD 00 52 00         A  2275    os_root_dir		call fs_goto_root_dir_command
0017B1 18 A1               A  2276    				jr os_rffsc
                           A  2277    
                           A  2278    
                           A  2279    ;----------------------------------------------
                           A  2280    
                           A  2281    
0017B3 CC 6E 16 00         A  2282    ext_erase_file	call z,mbase_hl					                           A  2283    
0017B7 CD C9 5A 00         A  2284    os_erase_file	call fs_hl_to_filename
0017BB CD 24 57 00         A  2285    				call fs_erase_file_command
0017BF 18 93               A  2286    				jr os_rffsc
                           A  2287    	
                           A  2288    
                           A  2289    ;----------------------------------------------
                           A  2290    
                           A  2291    
0017C1                     A  2292    os_goto_first_dir_entry	
                           A  2293    
0017C1 CD 7F 57 00         A  2294    				call fs_goto_first_dir_entry
0017C5 18 8D               A  2295    				jr os_rffsc
                           A  2296    
                           A  2297    
                           A  2298    ;----------------------------------------------
                           A  2299    
                           A  2300    
0017C7                     A  2301    os_get_dir_entry		
                           A  2302    
0017C7 CD 96 57 00         A  2303    				call fs_get_dir_entry	
0017CB 18 87               A  2304    				jr os_rffsc
                           A  2305    
                           A  2306    
                           A  2307    ;----------------------------------------------
                           A  2308    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2309    
0017CD                     A  2310    os_goto_next_dir_entry	
                           A  2311    	
0017CD CD 23 58 00         A  2312    				call fs_goto_next_dir_entry	
0017D1 18 81               A  2313    				jr os_rffsc
                           A  2314    
                           A  2315    
                           A  2316    ;----------------------------------------------
                           A  2317    
                           A  2318    
0017D3                     A  2319    os_get_current_dir_name
                           A  2320    
0017D3 CD 8F 5B 00         A  2321    				call fs_get_current_dir_name
0017D7 C3 54 17 00         A  2322    				jr os_rffsc
                           A  2323    				
                           A  2324    
                           A  2325    ;----------------------------------------------
                           A  2326    
                           A  2327    
0017DB CC 6E 16 00         A  2328    ext_rename_file	call z,mbase_hl
0017DF CC 7F 16 00         A  2329    				call z,mbase_de
                           A  2330    
0017E3 D5                  A  2331    os_rename_file	push de
0017E4 CD C3 5A 00         A  2332    				call fs_hl_to_alt_filename		0017E8 E1                  A  2333    				pop hl				
0017E9 CD C9 5A 00         A  2334    				call fs_hl_to_filename	
0017ED CD 3B 57 00         A  2335    				call fs_rename_command
0017F1 C3 54 17 00         A  2336    				jr os_rffsc
                           A  2337    				
                           A  2338    
                           A  2339    ;----------------------------------------------
                           A  2340    
                           A  2341    
0017F5 CC 6E 16 00         A  2342    ext_delete_dir	call z,mbase_hl					                           A  2343    
0017F9 CD C9 5A 00         A  2344    os_delete_dir	call fs_hl_to_filename
0017FD CD AC 54 00         A  2345    				call fs_delete_dir_command
001801 C3 54 17 00         A  2346    				jp os_rffsc
                           A  2347    	
                           A  2348    	
                           A  2349    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2350    
                           A  2351    
001805                     A  2352    ext_read_sector
001805 CD 50 18 00         A  2353    				call ext_sector_access_preamble
001809 C0                  A  2354    				ret nz
00180A 32 7B 68 00         A  2355    				ld (current_driver),a
00180E CD 66 5C 00         A  2356    				call fs_read_sector
001812 20 11               A  2357    				jr nz,sect_done
001814 38 0F               A  2358    				jr c,sect_done
001816 21000800            A  2359    				ld hl,sector_buffer
00181A ED5B 8B 68 00       A  2360    				ld de,(sector_rd_wr_addr)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00181F 01000200            A  2361    				ld bc,512
001823 EDB0                A  2362    				ldir			
001825 F5                  A  2363    sect_done		push af
001826 3A AB 69 00         A  2364    				ld a,(sys_driver_backup)		00182A 32 7B 68 00         A  2365    				ld (current_driver),a
00182E F1                  A  2366    				pop af
00182F C3 54 17 00         A  2367    				jp os_rffsc
                           A  2368    				
                           A  2369    
001833                     A  2370    ext_write_sector
                           A  2371    			
001833 CD 50 18 00         A  2372    				call ext_sector_access_preamble
001837 C0                  A  2373    				ret nz
001838 32 7B 68 00         A  2374    				ld (current_driver),a
00183C 2A 8B 68 00         A  2375    				ld hl,(sector_rd_wr_addr)
001840 11000800            A  2376    				ld de,sector_buffer
001844 01000200            A  2377    				ld bc,512
001848 EDB0                A  2378    				ldir			
00184A CD 8F 5C 00         A  2379    				call fs_write_sector
00184E 18 D5               A  2380    				jr sect_done
                           A  2381    
                           A  2382    
001850                     A  2383    ext_sector_access_preamble
                           A  2384    
001850 CC 6E 16 00         A  2385    				call z,mbase_hl
001854 22 8B 68 00         A  2386    				ld (sector_rd_wr_addr),hl
                           A  2387    				
001858 78                  A  2388    				ld a,b
001859 F5                  A  2389    				push af							00185A DD21 5D 6A 00       A  2390    				ld ix,sector_lba0
00185F DD1F00              A  2391    				ld (ix),de						001862 DD7103              A  2392    				ld (ix+3),c
001865 CD 6D 1B 00         A  2393    				call dev_to_driver_lookup		001869 E5                  A  2394    				push hl
00186A DDE1                A  2395    				pop ix
00186C 2A 5D 6A 00         A  2396    				ld hl,(sector_lba0)				001870 3A 60 6A 00         A  2397    				ld a,(sector_lba3)				001874 DD0701              A  2398    				ld bc,(ix+1)					001877 B7                  A  2399    				or a							001878 ED42                A  2400    				sbc hl,bc
00187A DD9E04              A  2401    				sbc a,(ix+4)
00187D 38 05               A  2402    				jr c,range_ok
00187F F1                  A  2403    				pop af
001880 3ED5                A  2404    				ld a,0d5h						001882 B7                  A  2405    				or a							001883 C9                  A  2406    				ret
                           A  2407    	
001884 3A 7B 68 00         A  2408    range_ok		ld a,(current_driver)
001888 32 AB 69 00         A  2409    				ld (sys_driver_backup),a
00188C F1                  A  2410    				pop af							00188D CD 6D 1B 00         A  2411    				call dev_to_driver_lookup
001891 30 02               A  2412    				jr nc,bad_dev
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001893 BF                  A  2413    os_null			cp a							001894 C9                  A  2414    				ret
                           A  2415    					
001895 3ED0                A  2416    bad_dev			ld a,0d0h						001897 B7                  A  2417    				or a							001898 C9                  A  2418    				ret	
                           A  2419    			
                           A  2420    
                           A  2421    ;----------------------------------------------
                           A  2422    
                           A  2423    
001899                     A  2424    os_get_device_info
                           A  2425    
001899 21 26 69 00         A  2426    				ld hl,host_device_hardware_info
00189D 11 57 42 00         A  2427    				ld de,driver_table
0018A1 3A 7C 68 00         A  2428    				ld a,(device_count)
0018A5 47                  A  2429    				ld b,a
0018A6 3A 7B 68 00         A  2430    				ld a,(current_driver)
0018AA BF                  A  2431    				cp a
0018AB C9                  A  2432    				ret
                           A  2433    
                           A  2434    
                           A  2435    
                           A  2436    
0018AC                     A  2437    os_get_volume_info
                           A  2438    
0018AC 21 A6 68 00         A  2439    				ld hl,volume_mount_list	
0018B0 3A 7D 68 00         A  2440    				ld a,(volume_count)
0018B4 47                  A  2441    				ld b,a
0018B5 3A 7A 68 00         A  2442    				ld a,(current_volume)
0018B9 C9                  A  2443    				ret
                           A  2444    				
                           A  2445    		
                           A  2446    ;----------------------------------------------
                           A  2447    
                           A  2448    
0018BA                     A  2449    ext_serial_get_header
                           A  2450    
0018BA CC 6E 16 00         A  2451    				call z,mbase_hl
0018BE 7B                  A  2452    				ld a,e
0018BF CD 8E 4C 00         A  2453    				call serial_get_header
0018C3 DDE5                A  2454    				push ix
0018C5 D1                  A  2455    				pop de
0018C6 C9                  A  2456    				ret
                           A  2457    				
                           A  2458    				
0018C7                     A  2459    ext_serial_receive_file
                           A  2460    				
0018C7 CC 6E 16 00         A  2461    				call z,mbase_hl
0018CB CD 29 4D 00         A  2462    				call serial_receive_file
0018CF C9                  A  2463    				ret
                           A  2464    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2465    	
0018D0                     A  2466    ext_serial_send_file
                           A  2467    
0018D0 CC 6E 16 00         A  2468    				call z,mbase_hl					0018D4 CC 7F 16 00         A  2469    				call z,mbase_de					0018D8 D5                  A  2470    				push de	
0018D9 DDE1                A  2471    				pop ix							0018DB C5                  A  2472    				push bc							0018DC D1                  A  2473    				pop de							0018DD CD F2 4D 00         A  2474    				call serial_send_file
0018E1 C9                  A  2475    				ret
                           A  2476    
                           A  2477    
0018E2                     A  2478    ext_serial_tx
0018E2 7B                  A  2479    				ld a,e
0018E3 CD 41 45 00         A  2480    				call send_serial_byte
0018E7 AF                  A  2481    				xor a							0018E8 C9                  A  2482    				ret
                           A  2483    
                           A  2484    
0018E9                     A  2485    ext_serial_rx
0018E9 7B                  A  2486    				ld a,e
0018EA 32 4A 68 00         A  2487    				ld (serial_timeout),a
0018EE CD 06 45 00         A  2488    				call receive_serial_byte
0018F2 C9                  A  2489    				ret
                           A  2490    				
                           A  2491    
                           A  2492    ;----------------------------------------------
                           A  2493    
0018F3                     A  2494    ext_mount_volumes
                           A  2495    
0018F3 7B                  A  2496    				ld a,e
                           A  2497    
0018F4                     A  2498    os_mount_volumes
                           A  2499    				
0018F4 32 AC 69 00         A  2500    				ld (os_quiet_mode),a			                           A  2501    				
0018F8 21 AC 5E 00         A  2502    				ld hl,storage_txt
0018FC CD 5B 10 00         A  2503    				call os_print_string_cond
001900 CD 28 19 00         A  2504    				call mount_go
001904 AF                  A  2505    				xor a
001905 32 7A 68 00         A  2506    tvloop			ld (current_volume),a
001909 CD 83 1B 00         A  2507    				call os_change_volume			00190D C8                  A  2508    				ret z							00190E 3A 7A 68 00         A  2509    				ld a,(current_volume)			001912 3C                  A  2510    				inc a
001913 FE08                A  2511    				cp max_volumes
001915 20 EE               A  2512    				jr nz,tvloop
001917 3A 7C 68 00         A  2513    				ld a,(device_count)
00191B B7                  A  2514    				or a
00191C 20 08               A  2515    				jr nz,mfsdevs
00191E 21 6B 66 00         A  2516    				ld hl,none_found_msg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001922 CD 38 15 00         A  2517    				call os_show_packed_text_cond
001926 AF                  A  2518    mfsdevs			xor a
001927 C9                  A  2519    				ret
                           A  2520    
                           A  2521    
                           A  2522    
001928 21 A6 68 00         A  2523    mount_go		ld hl,volume_mount_list			00192C 01800000            A  2524    				ld bc,max_volumes*16
001930 AF                  A  2525    clrdl_lp		xor a
001931 CD 47 16 00         A  2526    				call os_bchl_memfill
                           A  2527    								
001935 21 8E 68 00         A  2528    				ld hl,volume_dir_clusters		001939 01180000            A  2529    				ld bc,max_volumes*3		
00193D AF                  A  2530    				xor a	
00193E CD 47 16 00         A  2531    				call os_bchl_memfill	
                           A  2532    			
001942 11 26 69 00         A  2533    				ld de,host_device_hardware_info
001946 ED53 A6 69 00       A  2534    				ld (dhwn_temp_pointer),de
                           A  2535    				
00194B FD21 A6 68 00       A  2536    				ld iy,volume_mount_list
001950 AF                  A  2537    				xor a
001951 32 7D 68 00         A  2538    				ld (volume_count),a
001955 32 7C 68 00         A  2539    				ld (device_count),a
001959 32 7B 68 00         A  2540    mnt_loop		ld (current_driver),a			00195D CD F9 1A 00         A  2541    				call locate_driver_base			001961 21000000            A  2542    				ld hl,0
001965 AF                  A  2543    				xor a
001966 ED5A                A  2544    				adc hl,de
001968 C8                  A  2545    				ret z							001969 EB                  A  2546    				ex de,hl						00196A FDE5                A  2547    				push iy
00196C CD 7D 19 00         A  2548    				call find_dev					001970 FDE1                A  2549    				pop iy							001972 CC 7E 19 00         A  2550    				call z,got_dev		
001976 3A 7B 68 00         A  2551    nxt_drv			ld a,(current_driver)			00197A 3C                  A  2552    				inc a
00197B 18 DC               A  2553    				jr mnt_loop
                           A  2554    
                           A  2555    				
00197D E9                  A  2556    find_dev		jp (hl)
                           A  2557    			
                           A  2558    			
00197E E5                  A  2559    got_dev			push hl							00197F D5                  A  2560    				push de							001980 C5                  A  2561    				push bc
001981 CD 01 15 00         A  2562    				call os_new_line_cond			001985 015B0100            A  2563    				ld bc,015bh
001989 CD 0A 1B 00         A  2564    				call os_print_multiple_chars_co
00198D 3A 7B 68 00         A  2565    				ld a,(current_driver)
001991 CD F9 1A 00         A  2566    				call locate_driver_base
001995 210C0000            A  2567    				ld hl,0ch
001999 19                  A  2568    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00199A CD 5B 10 00         A  2569    				call os_print_string_cond		00199E 015D0100            A  2570    				ld bc,015dh
0019A2 CD 0A 1B 00         A  2571    				call os_print_multiple_chars_co
0019A6 C1                  A  2572    				pop bc
0019A7 D1                  A  2573    				pop de
0019A8 AF                  A  2574    				xor a
0019A9 32 AA 69 00         A  2575    				ld (vols_on_device_temp),a
                           A  2576    				
0019AD 21 7C 68 00         A  2577    				ld hl,device_count
0019B1 34                  A  2578    				inc (hl)						0019B2 3A 7B 68 00         A  2579    				ld a,(current_driver)
0019B6 2A A6 69 00         A  2580    				ld hl,(dhwn_temp_pointer)	
0019BA 77                  A  2581    				ld (hl),a
0019BB 23                  A  2582    				inc hl
0019BC 73                  A  2583    				ld (hl),e						0019BD FD7304              A  2584    				ld (iy+4),e						0019C0 23                  A  2585    				inc hl							0019C1 72                  A  2586    				ld (hl),d
0019C2 FD7205              A  2587    				ld (iy+5),d
0019C5 23                  A  2588    				inc hl
0019C6 71                  A  2589    				ld (hl),c			
0019C7 FD7106              A  2590    				ld (iy+6),c
0019CA 23                  A  2591    				inc hl
0019CB 70                  A  2592    				ld (hl),b						0019CC 23                  A  2593    				inc hl
0019CD D1                  A  2594    				pop de
0019CE EB                  A  2595    				ex de,hl
0019CF 01160000            A  2596    				ld bc,22
0019D3 EDB0                A  2597    				ldir							0019D5 AF                  A  2598    				xor a
0019D6 0605                A  2599    				ld b,5		
0019D8 12                  A  2600    clrrode			ld (de),a						0019D9 13                  A  2601    				inc de
0019DA 10 FC               A  2602    				djnz clrrode
0019DC ED53 A6 69 00       A  2603    				ld (dhwn_temp_pointer),de		                           A  2604    					
0019E1 AF                  A  2605    				xor a							0019E2 FDE5                A  2606    fnxtpart		push iy
0019E4 CD 24 50 00         A  2607    				call fs_get_partition_info
0019E8 FDE1                A  2608    				pop iy
0019EA 38 31               A  2609    				jr c,nxt_dev					0019EC FECE                A  2610    				cp 0ceh							0019EE 28 2D               A  2611    				jr z,nxt_dev
0019F0 F5                  A  2612    				push af
0019F1 FD360001            A  2613    				ld (iy),1						0019F5 3A 7B 68 00         A  2614    				ld a,(current_driver)
0019F9 FD7701              A  2615    				ld (iy+1),a						0019FC 3A A9 69 00         A  2616    				ld a,(partition_temp)	
001A00 FD7707              A  2617    				ld (iy+7),a						001A03 F1                  A  2618    				pop af
001A04 B7                  A  2619    				or a
001A05 28 35               A  2620    				jr z,dev_mbr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A07 AF                  A  2621    				xor a
001A08 FD7708              A  2622    				ld (iy+8),a						001A0B FD7709              A  2623    				ld (iy+9),a						001A0E FD770A              A  2624    				ld (iy+10),a					001A11 FD770B              A  2625    				ld (iy+11),a
001A14 CD 88 1A 00         A  2626    				call show_vol_info
001A18 CD 79 1A 00         A  2627    				call test_max_vol
001A1C C8                  A  2628    				ret z							                           A  2629    			
001A1D 3A AA 69 00         A  2630    nxt_dev			ld a,(vols_on_device_temp)		001A21 B7                  A  2631    				or a
001A22 C0                  A  2632    				ret nz		
001A23 CD DA 1A 00         A  2633    				call test_quiet_mode
001A27 20 06               A  2634    				jr nz,skp_cu
001A29 3E0A                A  2635    				ld a,10
001A2B 32 62 6A 00         A  2636    				ld (cursor_x),a
001A2F 21 68 66 00         A  2637    skp_cu			ld hl,no_vols_msg				001A33 CD 38 15 00         A  2638    				call os_show_packed_text_cond
001A37 CD 01 15 00         A  2639    				call os_new_line_cond
001A3B C9                  A  2640    				ret
                           A  2641    				
                           A  2642    			
001A3C 11040000            A  2643    dev_mbr			ld de,4
001A40 19                  A  2644    				add hl,de
001A41 7E                  A  2645    				ld a,(hl)						001A42 B7                  A  2646    				or a
001A43 C8                  A  2647    				ret z							001A44 19                  A  2648    				add hl,de
                           A  2649    				
001A45 FDE5                A  2650    				push iy
001A47 0604                A  2651    				ld b,4
001A49 7E                  A  2652    sfmbrlp			ld a,(hl)						001A4A FD7708              A  2653    				ld (iy+8),a
001A4D 23                  A  2654    				inc hl
001A4E FD23                A  2655    				inc iy
001A50 10 F7               A  2656    				djnz sfmbrlp
001A52 FDE1                A  2657    				pop iy
001A54 FDE5                A  2658    				push iy
001A56 0603                A  2659    				ld b,3	
001A58 7E                  A  2660    nsivlp			ld a,(hl)
001A59 FD7704              A  2661    				ld (iy+4),a						001A5C 23                  A  2662    				inc hl
001A5D FD23                A  2663    				inc iy
001A5F 10 F7               A  2664    				djnz nsivlp
001A61 FDE1                A  2665    				pop iy
                           A  2666    				
001A63 CD 88 1A 00         A  2667    				call show_vol_info
001A67 CD 79 1A 00         A  2668    				call test_max_vol	
001A6B C8                  A  2669    				ret z							001A6C 3A A9 69 00         A  2670    				ld a,(partition_temp)
001A70 3C                  A  2671    				inc a
001A71 FE04                A  2672    				cp 4							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A73 C2 E2 19 00         A  2673    				jp nz,fnxtpart
001A77 18 A4               A  2674    				jr nxt_dev
                           A  2675    				
                           A  2676    
001A79                     A  2677    test_max_vol
                           A  2678    			
001A79 11100000            A  2679    				ld de,16
001A7D FD19                A  2680    				add iy,de			
001A7F 21 7D 68 00         A  2681    				ld hl,volume_count
001A83 34                  A  2682    				inc (hl)
001A84 7E                  A  2683    				ld a,(hl)
001A85 FE08                A  2684    				cp max_volumes
001A87 C9                  A  2685    				ret
                           A  2686    			
                           A  2687    			
001A88                     A  2688    show_vol_info
                           A  2689    				
001A88 CD DA 1A 00         A  2690    				call test_quiet_mode
001A8C 20 06               A  2691    				jr nz,skp_cm2
001A8E 3E09                A  2692    				ld a,9			
001A90 32 62 6A 00         A  2693    				ld (cursor_x),a
001A94 3A 7D 68 00         A  2694    skp_cm2			ld a,(volume_count)
001A98 F5                  A  2695    				push af
001A99 C630                A  2696    				add a,30h		
001A9B 32 82 68 00         A  2697    				ld (vol_txt+4),a	
001A9F 21 7E 68 00         A  2698    				ld hl,vol_txt
001AA3 CD 5B 10 00         A  2699    				call os_print_string_cond		001AA7 21 AA 69 00         A  2700    				ld hl,vols_on_device_temp
001AAB CBC6                A  2701    				set 0,(hl)						                           A  2702    			
001AAD F1                  A  2703    				pop af
001AAE FDE5                A  2704    				push iy
001AB0 CD 83 1B 00         A  2705    				call os_change_volume			001AB4 28 0A               A  2706    				jr z,vform_ok					001AB6 21 18 66 00         A  2707    svi_fe			ld hl,format_err_msg		
001ABA CD 38 15 00         A  2708    svi_pem			call os_show_packed_text_cond	001ABE 18 0D               A  2709    				jr skpsvl
                           A  2710    			
001AC0 CD 7A 58 00         A  2711    vform_ok		call fs_get_volume_label
001AC4 38 0E               A  2712    				jr c,svi_hwe
001AC6 B7                  A  2713    				or a
001AC7 20 ED               A  2714    				jr nz,svi_fe
001AC9 CD 5B 10 00         A  2715    				call os_print_string_cond		                           A  2716    			
001ACD CD 01 15 00         A  2717    skpsvl			call os_new_line_cond
001AD1 FDE1                A  2718    				pop iy
001AD3 C9                  A  2719    				ret
                           A  2720    				
001AD4 21 57 64 00         A  2721    svi_hwe			ld hl,disk_err_msg
001AD8 18 E0               A  2722    				jr svi_pem
                           A  2723    			
                           A  2724    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001ADA                     A  2725    test_quiet_mode
                           A  2726    			
001ADA 3A AC 69 00         A  2727    				ld a,(os_quiet_mode)
001ADE B7                  A  2728    				or a
001ADF C9                  A  2729    				ret
                           A  2730    
                           A  2731    ;----------------------------------------------
                           A  2732    
                           A  2733    
001AE0                     A  2734    show_dev_driver_name
                           A  2735    	
                           A  2736    	
001AE0 CD F9 1A 00         A  2737    				call locate_driver_base			001AE4 EB                  A  2738    				ex de,hl
001AE5 110C0000            A  2739    				ld de,0ch
001AE9 19                  A  2740    				add hl,de
001AEA CD 60 10 00         A  2741    				call os_print_string			001AEE C5                  A  2742    				push bc
001AEF 01200100            A  2743    				ld bc,0120h
001AF3 CD 0F 1B 00         A  2744    				call os_print_multiple_chars	001AF7 C1                  A  2745    				pop bc
001AF8 C9                  A  2746    				ret
                           A  2747    
                           A  2748    
001AF9                     A  2749    locate_driver_base
                           A  2750    
001AF9 E5                  A  2751    				push hl							001AFA 11030000            A  2752    				ld de,3							001AFE 57                  A  2753    				ld d,a
001AFF ED5C                A  2754    				mlt de
001B01 21 57 42 00         A  2755    				ld hl,driver_table
001B05 19                  A  2756    				add hl,de
001B06 ED17                A  2757    				ld de,(hl)
001B08 E1                  A  2758    				pop hl
001B09 C9                  A  2759    				ret
                           A  2760    				
                           A  2761    		
                           A  2762    ;----------------------------------------------
                           A  2763    
001B0A                     A  2764    os_print_multiple_chars_cond
                           A  2765    
001B0A CD DA 1A 00         A  2766    				call test_quiet_mode
001B0E C0                  A  2767    				ret nz
                           A  2768    			
001B0F                     A  2769    os_print_multiple_chars
                           A  2770    
                           A  2771    ;c = char
                           A  2772    ;b = count
001B0F C5                  A  2773    				push bc
001B10 E5                  A  2774    				push hl
001B11 79                  A  2775    				ld a,c
001B12 21 1D 5F 00         A  2776    				ld hl,rep_char_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B16 77                  A  2777    				ld (hl),a
001B17 E5                  A  2778    pmch_lp			push hl
001B18 CD 60 10 00         A  2779    				call os_print_string
001B1C E1                  A  2780    				pop hl
001B1D 10 F8               A  2781    				djnz pmch_lp
001B1F E1                  A  2782    				pop hl
001B20 C1                  A  2783    				pop bc
001B21 C9                  A  2784    				ret
                           A  2785    
                           A  2786    ;----------------------------------------------
                           A  2787    
                           A  2788    
001B22 7B                  A  2789    ext_plot_char	ld a,e
001B23 C3 7D 46 00         A  2790    				jp hwsc_plot_char
                           A  2791    				
                           A  2792    
                           A  2793    ;----------------------------------------------
                           A  2794    ; Some file system related routines 
                           A  2795    ;----------------------------------------------
                           A  2796    
                           A  2797    
001B27                     A  2798    fs_get_dir_cluster
                           A  2799    
                           A  2800    
001B27 F5                  A  2801    				push af							001B28 E5                  A  2802    				push hl			
001B29 CD 3F 1B 00         A  2803    				call fs_get_dir_cluster_address
001B2D ED17                A  2804    				ld de,(hl)
001B2F E1                  A  2805    dclopdone		pop hl
001B30 F1                  A  2806    				pop af
001B31 BF                  A  2807    				cp a							001B32 C9                  A  2808    				ret
                           A  2809    				
                           A  2810    
                           A  2811    
                           A  2812    
                           A  2813    
001B33                     A  2814    fs_update_dir_cluster
                           A  2815    
001B33 F5                  A  2816    				push af							001B34 E5                  A  2817    				push hl			
001B35 D5                  A  2818    				push de			
001B36 CD 3F 1B 00         A  2819    				call fs_get_dir_cluster_address
001B3A D1                  A  2820    				pop de
001B3B ED1F                A  2821    				ld (hl),de
001B3D 18 F0               A  2822    				jr dclopdone
                           A  2823    			
                           A  2824    
                           A  2825    
                           A  2826    
                           A  2827    
001B3F                     A  2828    fs_get_dir_cluster_address
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2829    
001B3F 21 8E 68 00         A  2830    				ld hl,volume_dir_clusters		001B43 3A 7A 68 00         A  2831    				ld a,(current_volume)	
001B47 11030000            A  2832    				ld de,3
001B4B 57                  A  2833    				ld d,a
001B4C ED5C                A  2834    				mlt de
001B4E 19                  A  2835    				add hl,de
001B4F C9                  A  2836    				ret
                           A  2837    				
                           A  2838    	
                           A  2839    
                           A  2840    	
                           A  2841    	
001B50                     A  2842    fs_get_total_sectors
                           A  2843    
                           A  2844    
001B50 F5                  A  2845    				push af
001B51 E5                  A  2846    				push hl							001B52 CD 61 1B 00         A  2847    				call fs_calc_volume_offset	
001B56 21 AA 68 00         A  2848    				ld hl,volume_mount_list+4
001B5A 19                  A  2849    				add hl,de
001B5B ED17                A  2850    				ld de,(hl)
001B5D E1                  A  2851    				pop hl
001B5E F1                  A  2852    				pop af
001B5F BF                  A  2853    				cp a							001B60 C9                  A  2854    				ret
                           A  2855    
                           A  2856    
                           A  2857    
                           A  2858    
                           A  2859    
001B61                     A  2860    fs_calc_volume_offset
                           A  2861    
001B61 3A 7A 68 00         A  2862    				ld a,(current_volume)			001B65 11100000            A  2863    calc_vol		ld de,16
001B69 57                  A  2864    				ld d,a
001B6A ED5C                A  2865    				mlt de
001B6C C9                  A  2866    				ret
                           A  2867    
                           A  2868    
                           A  2869    
                           A  2870    
                           A  2871    
001B6D                     A  2872    dev_to_driver_lookup
                           A  2873    
001B6D 21 7C 68 00         A  2874    				ld hl,device_count				001B71 BE                  A  2875    				cp (hl)							001B72 D0                  A  2876    				ret nc
001B73 11200000            A  2877    				ld de,32						001B77 57                  A  2878    				ld d,a
001B78 ED5C                A  2879    				mlt de
001B7A 21 26 69 00         A  2880    				ld hl,host_device_hardware_info
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B7E 19                  A  2881    				add hl,de
001B7F 7E                  A  2882    				ld a,(hl)
001B80 37                  A  2883    				scf
001B81 C9                  A  2884    				ret
                           A  2885    				
                           A  2886    
                           A  2887    
001B82                     A  2888    ext_change_volume
                           A  2889    
001B82 7B                  A  2890    				ld a,e
                           A  2891    
001B83                     A  2892    os_change_volume
                           A  2893    
001B83 47                  A  2894    				ld b,a							001B84 FE08                A  2895    				cp max_volumes		
001B86 30 22               A  2896    				jr nc,fs_ccv2					                           A  2897    			
001B88 3A 7A 68 00         A  2898    				ld a,(current_volume)			001B8C F5                  A  2899    				push af
001B8D 78                  A  2900    				ld a,b
001B8E 32 7A 68 00         A  2901    				ld (current_volume),a			001B92 CD AE 1B 00         A  2902    				call fs_set_driver_for_volume	                           A  2903    				
001B96 CD 86 50 00         A  2904    				call fs_check_disk_format		001B9A 38 05               A  2905    				jr c,fs_cant_chg_vols	
001B9C 20 03               A  2906    				jr nz,fs_cant_chg_vols
001B9E F1                  A  2907    				pop af							001B9F AF                  A  2908    				xor a							001BA0 C9                  A  2909    				ret
                           A  2910    
                           A  2911    
001BA1                     A  2912    fs_cant_chg_vols
                           A  2913    			
001BA1 F1                  A  2914    				pop af
001BA2 32 7A 68 00         A  2915    				ld (current_volume),a			001BA6 CD AE 1B 00         A  2916    				call fs_set_driver_for_volume	                           A  2917    				
001BAA 3ECF                A  2918    fs_ccv2			ld a,0cfh						001BAC B7                  A  2919    				or a
001BAD C9                  A  2920    				ret
                           A  2921    					
                           A  2922    	
001BAE                     A  2923    fs_set_driver_for_volume
                           A  2924    
001BAE CD 61 1B 00         A  2925    				call fs_calc_volume_offset		001BB2 21 A7 68 00         A  2926    				ld hl,volume_mount_list+1
001BB6 19                  A  2927    				add hl,de
001BB7 7E                  A  2928    				ld a,(hl)
001BB8 32 7B 68 00         A  2929    				ld (current_driver),a
001BBC C9                  A  2930    				ret
                           A  2931    
                           A  2932    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2933    ;----------------------------------------------
                           A  2934    
001BBD                     A  2935    ext_file_sector_list
                           A  2936    
                           A  2937    ;Input HL = cluster, E = sector offset
                           A  2938    
                           A  2939    ;Output HL = new cluster, E = new sector number
                           A  2940    ;       IX = address of LBA0 LSB of sector (int
                           A  2941    
                           A  2942    				
001BBD 3A 07 5D 00         A  2943    				ld a,(fs_cluster_size)
001BC1 BB                  A  2944    				cp e
001BC2 20 0A               A  2945    				jr nz,fsl_sc
001BC4 CD 0E 5B 00         A  2946    				call get_fat_entry_for_cluster
001BC8 DA F1 16 00         A  2947    				jp c,os_fferr
001BCC 1E00                A  2948    				ld e,0
001BCE CD E5 5B 00         A  2949    fsl_sc			call cluster_and_offset_to_lba
001BD2 1C                  A  2950    				inc e
001BD3 01 5D 6A 00         A  2951    fsl_done		ld bc,sector_lba0
001BD7 BF                  A  2952    				cp a							001BD8 C9                  A  2953    				ret
                           A  2954    
                           A  2955    ;----------------------------------------------
                           A  2956    
001BD9                     A  2957    os_get_disk_sector_ptr
                           A  2958     
001BD9 21 5D 6A 00         A  2959    				ld hl,sector_lba0
001BDD 11000800            A  2960    				ld de,sector_buffer
001BE1 BF                  A  2961    				cp a
001BE2 C9                  A  2962    				ret
                           A  2963    				
                           A  2964    ;----------------------------------------------
                           A  2965    
                           A  2966    
001BE3 E5                  A  2967    os_count_chars	push hl							001BE4 01000000            A  2968    				ld bc,0
001BE8 7E                  A  2969    cch_lp			ld a,(hl)
001BE9 B7                  A  2970    				or a
001BEA 28 04               A  2971    				jr z,cch_end
001BEC 23                  A  2972    				inc hl
001BED 03                  A  2973    				inc bc
001BEE 18 F8               A  2974    				jr cch_lp
001BF0 E1                  A  2975    cch_end			pop hl
001BF1 C9                  A  2976    				ret
                           A  2977    				
                           A  2978    			
                           A  2979    ;----------------------------------------------
                           A  2980    ; Environment variable code V0.01
                           A  2981    ;----------------------------------------------
                           A  2982    
001BF2                     A  2983    ext_get_envar
001BF2 CC 6E 16 00         A  2984    				call z,mbase_hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2985    
001BF6                     A  2986    os_get_envar
                           A  2987    
                           A  2988    ;Set: 		HL = name of required variable
                           A  2989    ;Returns:	ZF Set: DE = address of variable's 
                           A  2990    ;        	ZF Not Set: Couldn't find variable
                           A  2991    				
001BF6 DD21FF01 00         A  2992    				ld ix,envar_list-1
001BFB CD E3 1B 00         A  2993    env_fname		call os_count_chars				001BFF 78                  A  2994    				ld a,b
001C00 B1                  A  2995    				or c
001C01 28 27               A  2996    				jr z,env_bad
                           A  2997    								
001C03 ED1201              A  2998    env_cname		lea de,ix+1
001C06 1A                  A  2999    				ld a,(de)
001C07 FEFF                A  3000    				cp 0ffh
001C09 28 1F               A  3001    				jr z,env_bad
001C0B C5                  A  3002    				push bc
001C0C 41                  A  3003    				ld b,c
001C0D CD 2D 13 00         A  3004    				call os_compare_strings
001C11 C1                  A  3005    				pop bc
001C12 20 06               A  3006    				jr nz,env_nomatch
001C14 03                  A  3007    				inc bc							001C15 EB                  A  3008    				ex de,hl
001C16 09                  A  3009    				add hl,bc
001C17 EB                  A  3010    				ex de,hl						001C18 AF                  A  3011    				xor a
001C19 C9                  A  3012    				ret			
                           A  3013    				
001C1A DD23                A  3014    env_nomatch		inc ix							001C1C CD C2 1C 00         A  3015    				call check_envar_bounds
001C20 20 08               A  3016    				jr nz,env_bad
001C22 DD7E00              A  3017    				ld a,(ix)
001C25 B7                  A  3018    				or a
001C26 28 DB               A  3019    				jr z,env_cname
001C28 18 F0               A  3020    				jr env_nomatch
                           A  3021    
001C2A 3E82                A  3022    env_bad			ld a,82h						001C2C B7                  A  3023    				or a
001C2D C9                  A  3024    				ret	
                           A  3025    				
                           A  3026    ;----------------------------------------------
                           A  3027    
001C2E                     A  3028    ext_set_envar
                           A  3029    
                           A  3030    ;HL = addr of variable name (zero terminated)
                           A  3031    ;DE = addr of data for variable (zero terminate
                           A  3032    
                           A  3033    ;Returns:
                           A  3034    ;ZF = Set: OK
                           A  3035    ;ZF = Not Set: No enough space for new variable
                           A  3036    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C2E CC 6E 16 00         A  3037    				call z,mbase_hl
001C32 CC 7F 16 00         A  3038    				call z,mbase_de
                           A  3039    
001C36 7E                  A  3040    os_set_envar	ld a,(hl)						001C37 B7                  A  3041    				or a
001C38 28 F0               A  3042    				jr z,env_bad
001C3A 1A                  A  3043    				ld a,(de)
001C3B B7                  A  3044    				or a
001C3C 28 EC               A  3045    				jr z,env_bad
                           A  3046    
001C3E E5                  A  3047    				push hl
001C3F D5                  A  3048    				push de
001C40 CD 8C 1C 00         A  3049    				call os_delete_envar			001C44 D1                  A  3050    				pop de
001C45 E1                  A  3051    				pop hl
                           A  3052    				
001C46 DD2A EC 6B 00       A  3053    				ld ix,(envar_top_loc)			001C4B CD C2 1C 00         A  3054    env_enlp		call check_envar_bounds
001C4F 20 D9               A  3055    				jr nz,env_bad
001C51 7E                  A  3056    				ld a,(hl)						001C52 DD7700              A  3057    				ld (ix),a
001C55 B7                  A  3058    				or a
001C56 28 05               A  3059    				jr z,env_ndone
001C58 23                  A  3060    				inc hl
001C59 DD23                A  3061    				inc ix
001C5B 18 EE               A  3062    				jr env_enlp
                           A  3063    				
001C5D CD C2 1C 00         A  3064    env_ndone		call check_envar_bounds			001C61 20 C7               A  3065    				jr nz,env_bad
001C63 DD36003D            A  3066    				ld (ix),'='
001C67 DD23                A  3067    				inc ix
                           A  3068    
001C69 CD C2 1C 00         A  3069    env_evlp		call check_envar_bounds			001C6D 20 BB               A  3070    				jr nz,env_bad
001C6F 1A                  A  3071    				ld a,(de)
001C70 DD7700              A  3072    				ld (ix),a
001C73 B7                  A  3073    				or a
001C74 28 05               A  3074    				jr z,env_vdone
001C76 13                  A  3075    				inc de
001C77 DD23                A  3076    				inc ix
001C79 18 EE               A  3077    				jr env_evlp
                           A  3078    
001C7B DD23                A  3079    env_vdone		inc ix
001C7D DD3600FF            A  3080    				ld (ix),0ffh
001C81 DD22 EC 6B 00       A  3081    				ld (envar_top_loc),ix			001C86 AF                  A  3082    				xor a
001C87 C9                  A  3083    				ret
                           A  3084    
                           A  3085    	
                           A  3086    ;----------------------------------------------
                           A  3087    
001C88                     A  3088    ext_delete_envar
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3089    
001C88 CC 6E 16 00         A  3090    				call z,mbase_hl
                           A  3091    
001C8C                     A  3092    os_delete_envar
                           A  3093    
                           A  3094    ;HL = name of required variable (null terminate
                           A  3095    ;ZF = Set: OK
                           A  3096    ;ZF = Not Set: Didnt find named variable
                           A  3097    
                           A  3098    
001C8C CD F6 1B 00         A  3099    				call os_get_envar				001C90 C0                  A  3100    				ret nz
                           A  3101    				
001C91 D5                  A  3102    				push de
001C92 E1                  A  3103    				pop hl
001C93 AF                  A  3104    				xor a
001C94 ED42                A  3105    				sbc hl,bc						                           A  3106    				
001C96 13                  A  3107    env_fnxt		inc de							001C97 D5                  A  3108    				push de
001C98 DDE1                A  3109    				pop ix
001C9A CD C2 1C 00         A  3110    				call check_envar_bounds
001C9E 20 8A               A  3111    				jr nz,env_bad
001CA0 1A                  A  3112    				ld a,(de)
001CA1 B7                  A  3113    				or a
001CA2 20 F2               A  3114    				jr nz,env_fnxt
                           A  3115    
001CA4 13                  A  3116    env_gnxt		inc de							001CA5 EB                  A  3117    				ex de,hl
001CA6 7E                  A  3118    env_collp		ld a,(hl)
001CA7 12                  A  3119    				ld (de),a						001CA8 FEFF                A  3120    				cp 0ffh
001CAA 28 0F               A  3121    				jr z,env_clspd					001CAC E5                  A  3122    				push hl
001CAD DDE1                A  3123    				pop ix
001CAF CD C2 1C 00         A  3124    				call check_envar_bounds
001CB3 C2 2A 1C 00         A  3125    				jr nz,env_bad
001CB7 23                  A  3126    				inc hl
001CB8 13                  A  3127    				inc de
001CB9 18 EB               A  3128    				jr env_collp
                           A  3129    
001CBB ED53 EC 6B 00       A  3130    env_clspd		ld (envar_top_loc),de			001CC0 AF                  A  3131    				xor a
001CC1 C9                  A  3132    				ret
                           A  3133    				
                           A  3134    ;----------------------------------------------
                           A  3135    
001CC2                     A  3136    check_envar_bounds
                           A  3137    
001CC2 C5                  A  3138    				push bc
001CC3 E5                  A  3139    				push hl
001CC4 DDE5                A  3140    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001CC6 E1                  A  3141    				pop hl
001CC7 01010400            A  3142    				ld bc,1+(envar_list+envar_buffe
001CCB AF                  A  3143    				xor a
001CCC ED42                A  3144    				sbc hl,bc
001CCE 38 05               A  3145    				jr c,env_bok
001CD0 AF                  A  3146    				xor a
001CD1 3C                  A  3147    				inc a
001CD2 E1                  A  3148    				pop hl
001CD3 C1                  A  3149    				pop bc
001CD4 C9                  A  3150    				ret
                           A  3151    
001CD5 AF                  A  3152    env_bok			xor a
001CD6 E1                  A  3153    				pop hl
001CD7 C1                  A  3154    				pop bc
001CD8 C9                  A  3155    				ret
                           A  3156    						
                           A  3157    ;----------------------------------------------
                           A  3158    
001CD9                     A  3159    os_get_keymap_location
                           A  3160    
001CD9 21 C6 66 00         A  3161    				ld hl,unshifted_keymap
001CDD BF                  A  3162    				cp a							001CDE C9                  A  3163    				ret
                           A  3164    
                           A  3165    
                           A  3166    ;----------------------------------------------
                           A  3167    
                           A  3168    
001CDF CC 6E 16 00         A  3169    ext_play_audio	call z,mbase_hl
                           A  3170    				
001CE3 CD 85 4B 00         A  3171    os_play_audio	call hwsc_play_audio
001CE7 C9                  A  3172    				ret
                           A  3173    				
                           A  3174    ;----------------------------------------------
                           A  3175    
001CE8 E5                  A  3176    test_de			push hl
001CE9 21000000            A  3177    				ld hl,0
001CED ED5A                A  3178    				adc hl,de
001CEF E1                  A  3179    				pop hl
001CF0 C9                  A  3180    				ret
                           A  3181    
                           A  3182    ;==============================================
                           A  3183    ; Internal OS command routines
                           A  3184    ;==============================================
                           A  3185    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CF1                     B     5    os_cmd_c
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001CF1 CD 27 1D 00         B     7    				call get_start_and_end			                           B     8    				
001CF5 CD 50 1D 00         B     9    				call hexword_or_bust			001CF9 CA D6 16 00         B    10    				jp z,os_no_d_addr_error
001CFD ED53 70 6A 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001D02 CD 15 1D 00         B    13    				call test_mem_range				001D06 DA DA 16 00         B    14    				jp c,os_range_error				001D0A ED5B 70 6A 00       B    15    				ld de,(copy_dest_address)
001D0F EDB0                B    16    				ldir
                           B    17    
001D11 3E20                B    18    copy_done		ld a,020h						001D13 B7                  B    19    				or a
001D14 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001D15                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001D15 2A 6D 6A 00         B    33    				ld hl,(cmdop_end_address)	
001D19 ED4B 6A 6A 00       B    34    				ld bc,(cmdop_start_address)
001D1E C5                  B    35    				push bc
001D1F AF                  B    36    				xor a
001D20 ED42                B    37    				sbc hl,bc
001D22 E5                  B    38    				push hl
001D23 C1                  B    39    				pop bc
001D24 03                  B    40    				inc bc
001D25 E1                  B    41    				pop hl
001D26 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001D27                     B    46    get_start_and_end
                           B    47    			
001D27 CD DD 11 00         B    48    				call ascii_to_hexword			001D2B ED53 6A 6A 00       B    49    				ld (cmdop_start_address),de
001D30 23                  B    50    				inc hl
001D31 28 09               B    51    				jr z,st_addrok
001D33 E1                  B    52    				pop hl							001D34 FE82                B    53    				cp 82h							001D36 28 02               B    54    				jr z,c_badhex
001D38 3E16                B    55    				ld a,016h						001D3A B7                  B    56    c_badhex		or a
001D3B C9                  B    57    				ret
                           B    58    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001D3C CD DD 11 00         B    59    st_addrok		call ascii_to_hexword			001D40 ED53 6D 6A 00       B    60    				ld (cmdop_end_address),de
001D45 23                  B    61    				inc hl
001D46 B7                  B    62    				or a
001D47 C8                  B    63    				ret z
001D48 E1                  B    64    				pop hl							001D49 FE82                B    65    				cp 82h							001D4B 28 ED               B    66    				jr z,c_badhex
001D4D 3E1C                B    67    				ld a,01ch						001D4F C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001D50                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001D50 CD DD 11 00         B    79    				call ascii_to_hexword		
001D54 FE82                B    80    				cp 82h
001D56 20 03               B    81    				jr nz,hex_good
001D58 E1                  B    82    				pop hl						; r
001D59 B7                  B    83    				or a	
001D5A C9                  B    84    				ret			 
001D5B FE81                B    85    hex_good		cp 081h						; n
001D5D C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D5E                     B     5    os_cmd_cd	
                           B     6    
001D5E CD 4E 17 00         B     7    				call os_check_volume_format	
001D62 C0                  B     8    				ret nz
                           B     9    				
001D63 7E                  B    10    				ld a,(hl)						001D64 B7                  B    11    				or a				
001D65 CA 98 1D 00         B    12    				jp z,cd_show_path		
                           B    13    					
001D69 7E                  B    14    				ld a,(hl)						001D6A 23                  B    15    				inc hl
001D6B 46                  B    16    				ld b,(hl)
001D6C 2B                  B    17    				dec hl
001D6D FE2E                B    18    				cp '.'			
001D6F 20 08               B    19    				jr nz,cd_nual
001D71 B8                  B    20    				cp b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D72 20 05               B    21    				jr nz,cd_nual
001D74 CD A7 17 00         B    22    				call os_parent_dir	
001D78 C9                  B    23    				ret
                           B    24    			
                           B    25    			
001D79 FE2F                B    26    cd_nual			cp 02fh			
001D7B 20 05               B    27    				jr nz,cd_nogor					001D7D CD AD 17 00         B    28    				call os_root_dir	
001D81 C9                  B    29    				ret
                           B    30    				
                           B    31    				
001D82 FE25                B    32    cd_nogor		cp '%'							001D84 20 02               B    33    				jr nz,cd_no_assign
001D86 AF                  B    34    				xor a
001D87 C9                  B    35    				ret
                           B    36    				
001D88 CD 13 3C 00         B    37    cd_no_assign	call os_cache_original_vol_dir
001D8C 3E01                B    38    				ld a,1
001D8E CD 94 3B 00         B    39    				call os_parse_path_string
001D92 C8                  B    40    				ret z
001D93 CD FE 3B 00         B    41    				call os_restore_original_vol_di
001D97 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001D98                     B    46    cd_show_path
                           B    47    			
                           B    48    			
       00000010            B    49    max_dirs	equ 16
                           B    50    			
001D98 0610                B    51    				ld b,max_dirs
001D9A 0E00                B    52    				ld c,0
001D9C C5                  B    53    lp1				push bc
001D9D CD 27 1B 00         B    54    				call fs_get_dir_cluster
001DA1 C1                  B    55    				pop bc
001DA2 D5                  B    56    				push de
001DA3 0C                  B    57    				inc c
001DA4 C5                  B    58    				push bc
001DA5 CD A7 17 00         B    59    				call os_parent_dir
001DA9 C1                  B    60    				pop bc
001DAA 20 02               B    61    				jr nz,shdir_lp
001DAC 10 EE               B    62    				djnz lp1
                           B    63    				
001DAE D1                  B    64    shdir_lp		pop de
001DAF C5                  B    65    				push bc
001DB0 CD 33 1B 00         B    66    				call fs_update_dir_cluster
001DB4 CD D3 17 00         B    67    				call os_get_current_dir_name
001DB8 CD 60 10 00         B    68    				call os_print_string
001DBC C1                  B    69    				pop bc
001DBD 0D                  B    70    				dec c
001DBE 28 11               B    71    				jr z,cd_sp_done
001DC0 2B                  B    72    				dec hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001DC1 2B                  B    73    				dec hl
001DC2 7E                  B    74    				ld a,(hl)
001DC3 FE3A                B    75    				cp ':'
001DC5 28 E7               B    76    				jr z,shdir_lp				;no
001DC7 21 D7 1D 00         B    77    				ld hl,cd_fwdslash_txt
001DCB CD 60 10 00         B    78    				call os_print_string
001DCF 18 DD               B    79    				jr shdir_lp
                           B    80    			
001DD1 CD 06 15 00         B    81    cd_sp_done		call os_new_line	
001DD5 AF                  B    82    				xor a
001DD6 C9                  B    83    				ret
                           B    84    			
001DD7 2F00                B    85    cd_fwdslash_txt	db '/',0	
                           B    86    			
                           B    87    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DD9                     B     5    os_cmd_cls
                           B     6    
001DD9 CD 07 46 00         B     7    				call hwsc_clear_screen
001DDD AF                  B     8    				xor a
001DDE C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001DDF                     B     5    os_cmd_colon
                           B     6    	
001DDF CD 50 1D 00         B     7    				call hexword_or_bust			001DE3 CA C6 16 00         B     8    				jp z,os_no_start_addr			001DE7 D5                  B     9    				push de
001DE8 DDE1                B    10    				pop ix							                           B    11    			
001DEA CD 50 1D 00         B    12    wmblp			call hexword_or_bust			001DEE 28 07               B    13    				jr z,os_ccmdn
001DF0 DD7300              B    14    				ld (ix),e						001DF3 DD23                B    15    				inc ix
001DF5 18 F3               B    16    				jr wmblp
                           B    17    
001DF7 AF                  B    18    os_ccmdn		xor a
001DF8 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001DF9 FD21 E0 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DFE FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001E02 CD 50 1D 00         B     9    os_cmd_d_go		call hexword_or_bust			001E06 28 05               B    10    				jr z,d_no_hex					001E08 ED53 57 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001E0D 3A 1C 68 00         B    13    d_no_hex		ld a,(charmap_rows)				001E11 D602                B    14    				sub a,2
001E13 47                  B    15    				ld b,a
001E14 C5                  B    16    dis_loop		push bc
                           B    17    				
001E15 DD2A 57 29 00       B    18    				ld ix,(dis_addr)				001E1A CD C2 23 00         B    19    				call show_ix					001E1E 3E20                B    20    				ld a,' '
001E20 CD B6 23 00         B    21    				call show_ascii_char
                           B    22    
001E24 FD21 E0 23 00       B    23    				ld iy,prefix_bits_loc
001E29 FD360000            B    24    				ld (iy),0						001E2D CD 69 1E 00         B    25    				call dis_instr					001E31 DD23                B    26    				inc ix							                           B    27    				
001E33 3E1A                B    28    				ld a,26							001E35 32 62 6A 00         B    29    				ld (cursor_pos+1),a				001E39 ED4B 57 29 00       B    30    				ld bc,(dis_addr)
001E3E DD22 57 29 00       B    31    				ld (dis_addr),ix				001E43 DDE5                B    32    				push ix
001E45 E1                  B    33    				pop hl
001E46 AF                  B    34    				xor a
001E47 ED42                B    35    				sbc hl,bc						001E49 7D                  B    36    				ld a,l
001E4A E607                B    37    				and 7
001E4C 6F                  B    38    				ld l,a
001E4D 0A                  B    39    shexoplp		ld a,(bc)						001E4E CD A5 23 00         B    40    				call show_hex_byte
001E52 3E20                B    41    				ld a,' '
001E54 CD B6 23 00         B    42    				call show_ascii_char
001E58 03                  B    43    				inc bc
001E59 2D                  B    44    				dec l
001E5A 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E5C CD 06 15 00         B    47    				call os_new_line
001E60 C1                  B    48    				pop bc
001E61 10 B1               B    49    				djnz dis_loop
                           B    50    
001E63 CD 06 15 00         B    51    				call os_new_line
001E67 AF                  B    52    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E68 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E69 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E6C FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E70 28 04               B    73    			jr z,z80_list					; T
001E72 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E76                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E76 FE40                B    79    			cp 40h
001E78 20 0A               B    80    			jr nz,not_sis
001E7A FDCB00B6            B    81    			res il_prefix,(iy)
001E7E FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E82 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E84 FE49                B    85    not_sis		cp 49h
001E86 20 0A               B    86    			jr nz,not_lis
001E88 FDCB00B6            B    87    			res il_prefix,(iy)
001E8C FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E90 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E92 FE52                B    91    not_lis		cp 52h
001E94 20 0A               B    92    			jr nz,not_sil
001E96 FDCB00F6            B    93    			set il_prefix,(iy)
001E9A FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E9E 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001EA0 FE5B                B    97    not_sil		cp 5bh
001EA2 20 11               B    98    			jr nz,not_adl_prefix_byte
001EA4 FDCB00F6            B    99    			set il_prefix,(iy)
001EA8 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001EAC FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001EB0 DD23                B   103    			inc ix
001EB2 DD7E00              B   104    			ld a,(ix)	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001EB5                     B   108    not_adl_prefix_byte			
                           B   109    			
001EB5 FECB                B   110    			cp 0cbh								001EB7 20 08               B   111    			jr nz,not_cb
001EB9 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001EBD DD23                B   113    			inc ix
001EBF 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001EC1 FEED                B   116    not_cb		cp 0edh
001EC3 20 08               B   117    			jr nz,not_ed
001EC5 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001EC9 DD23                B   119    			inc ix
001ECB 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001ECD FEDD                B   122    not_ed		cp 0ddh
001ECF 20 18               B   123    			jr nz,not_dd
001ED1 CD 04 21 00         B   124    do_dd		call check_nxt_byte_prefix			001ED5 28 92               B   125    			jr z,dis_instr						001ED7 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001EDB FECB                B   127    xdcb_query	cp 0cbh								001EDD 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001EDF FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001EE3 DD23                B   130    			inc ix								001EE5 DD23                B   131    			inc ix								001EE7 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001EE9 FEFD                B   134    not_dd		cp 0fdh
001EEB 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001EED CD 04 21 00         B   136    do_fd		call check_nxt_byte_prefix
001EF1 CA 69 1E 00         B   137    			jr z,dis_instr	
001EF5 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001EF9 18 E0               B   139    			jr xdcb_query
                           B   140    
001EFB                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001EFB DD7E00              B   145    			ld a,(ix)	
001EFE E6C0                B   146    			and 11000000b			; seperate 
001F00 07                  B   147    			rlca
001F01 07                  B   148    			rlca
001F02 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001F05 DD7E00              B   151    			ld a,(ix)
001F08 E638                B   152    			and 00111000b
001F0A CB3F                B   153    			srl a
001F0C CB3F                B   154    			srl a
001F0E CB3F                B   155    			srl a	
001F10 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   157    
001F13 DD7E00              B   158    			ld a,(ix)
001F16 E607                B   159    			and 00000111b
001F18 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001F1B DD7E00              B   162    			ld a,(ix)
001F1E E630                B   163    			and 00110000b
001F20 CB3F                B   164    			srl a
001F22 CB3F                B   165    			srl a
001F24 CB3F                B   166    			srl a
001F26 CB3F                B   167    			srl a
001F28 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F2B DD7E00              B   170    			ld a,(ix)
001F2E E608                B   171    			and 00001000b
001F30 CB3F                B   172    			srl a
001F32 CB3F                B   173    			srl a
001F34 CB3F                B   174    			srl a
001F36 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F39 CD 12 21 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F3D 78                  B   181    index_table	ld a,b							; a
001F3E B7                  B   182    			or a
001F3F 28 07               B   183    			jr z,parse_instr				; m
001F41 CB7E                B   184    d_filp		bit 7,(hl)						; w
001F43 23                  B   185    			inc hl							; o
001F44 28 FB               B   186    			jr z,d_filp					
001F46 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001F48 FD21 E0 23 00       B   190    parse_instr	ld iy,opcode_vars
001F4D 01000000            B   191    			ld bc,0
001F51 7E                  B   192    			ld a,(hl)						;ge
001F52 FE80                B   193    			cp 80h
001F54 C8                  B   194    			ret z
001F55 E67F                B   195    			and 7fh
                           B   196    			
001F57 FE26                B   197    			cp '&'							;sy
001F59 20 28               B   198    			jr nz,not_adlsym
001F5B FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F5F CA ED 20 00         B   200    			jr z,next_opcode_ascii_char
001F63 0600                B   201    			ld b,0
001F65 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F69 28 02               B   203    			jr z,naplsb
001F6B CBC0                B   204    			set 0,b
001F6D FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F71 28 02               B   206    			jr z,napmsb
001F73 CBC8                B   207    			set 1,b
001F75 E5                  B   208    napmsb		push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F76 21 3F 29 00         B   209    			ld hl,adl_prefix_list
001F7A CD 3D 1F 00         B   210    			call index_table				; r
001F7E E1                  B   211    			pop hl
001F7F C3 ED 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F83 FE5E                B   214    not_adlsym	cp '^'							;sy
001F85 20 0D               B   215    			jr nz,d_not_imm8
001F87 DD23                B   216    			inc ix							;th
001F89 DD7E00              B   217    			ld a,(ix)
001F8C CD A5 23 00         B   218    			call show_hex_byte
001F90 C3 ED 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F94 FE21                B   221    d_not_imm8	cp '!'							;sy
001F96 20 26               B   222    			jr nz,d_not_imm16					001F98 11020000            B   223    			ld de,2
001F9C FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001FA0 28 08               B   225    			jr z,imm16
001FA2 13                  B   226    			inc de
001FA3 DD7E03              B   227    			ld a,(ix+3)
001FA6 CD A5 23 00         B   228    			call show_hex_byte
001FAA DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001FAD CD A5 23 00         B   230    			call show_hex_byte			
001FB1 DD7E01              B   231    			ld a,(ix+1)						;th
001FB4 CD A5 23 00         B   232    			call show_hex_byte
001FB8 DD19                B   233    			add ix,de						;ad
001FBA C3 ED 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001FBE FE2F                B   236    d_not_imm16	cp '/'							;sy
001FC0 20 36               B   237    			jr nz,d_not_sb
001FC2 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001FC6 28 05               B   239    			jr z,norm_dbyte
001FC8 DD7EFF              B   240    			ld a,(ix-1)						;if
001FCB 18 05               B   241    			jr xdcb_dbyte
001FCD DD23                B   242    norm_dbyte	inc ix
001FCF DD7E00              B   243    			ld a,(ix)						;th
001FD2 CB7F                B   244    xdcb_dbyte	bit 7,a
001FD4 20 10               B   245    			jr nz,d_sbin					;sh
001FD6 F5                  B   246    			push af
001FD7 3E2B                B   247    			ld a,'+'
001FD9 CD B6 23 00         B   248    			call show_ascii_char
001FDD F1                  B   249    			pop af
001FDE CD A5 23 00         B   250    			call show_hex_byte
001FE2 C3 ED 20 00         B   251    			jp next_opcode_ascii_char
001FE6 F5                  B   252    d_sbin		push af
001FE7 3E2D                B   253    			ld a,'-'
001FE9 CD B6 23 00         B   254    			call show_ascii_char
001FED F1                  B   255    			pop af
001FEE ED44                B   256    			neg
001FF0 CD A5 23 00         B   257    			call show_hex_byte
001FF4 C3 ED 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FF8 FE64                B   260    d_not_sb	cp 'd'							;sy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FFA 20 1E               B   261    			jr nz,d_not_pcdip
001FFC DD23                B   262    			inc ix
001FFE 01000000            B   263    			ld bc,0
002002 DD7E00              B   264    			ld a,(ix)
002005 CB7F                B   265    			bit 7,a
002007 28 01               B   266    			jr z,d_spcd_pos
002009 0B                  B   267    			dec bc
00200A 4F                  B   268    d_spcd_pos	ld c,a
00200B 03                  B   269    			inc bc
00200C DDE5                B   270    			push ix
00200E DD09                B   271    			add ix,bc
002010 CD C2 23 00         B   272    			call show_ix
002014 DDE1                B   273    			pop ix
002016 C3 ED 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
00201A FE3E                B   276    d_not_pcdip	cp '>'							;sy
00201C 20 16               B   277    			jr nz,d_not_sdig
00201E 23                  B   278    			inc hl							;th
00201F 01000000            B   279    			ld bc,0
002023 4E                  B   280    			ld c,(hl)
002024 FD21 E0 23 00       B   281    			ld iy,opcode_vars
002029 FD09                B   282    			add iy,bc
00202B FD7E00              B   283    			ld a,(iy)						;a 
00202E C630                B   284    			add a,30h						;co
002030 C3 E9 20 00         B   285    			jp d_output_char
                           B   286    
002034 FE5F                B   287    d_not_sdig	cp '_'
002036 20 12               B   288    			jr nz,d_nhlsubst				; s
002038 E5                  B   289    			push hl
002039 21 17 29 00         B   290    			ld hl,hl_subs
00203D CD F5 20 00         B   291    hl_subst	call prefix_to_offset
002041 CD 3D 1F 00         B   292    			call index_table				; r
002045 E1                  B   293    			pop hl
002046 C3 ED 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
00204A FE7C                B   296    d_nhlsubst	cp '|'
00204C 20 07               B   297    			jr nz,d_noinvhls
00204E E5                  B   298    			push hl
00204F 21 1D 29 00         B   299    			ld hl,inv_hl_subs
002053 18 E8               B   300    			jr hl_subst
                           B   301    			
002055 FE68                B   302    d_noinvhls	cp 'h'							;sy
002057 20 07               B   303    			jr nz,d_nhsubst
002059 E5                  B   304    			push hl
00205A 21 23 29 00         B   305    			ld hl,h_subs
00205E 18 DD               B   306    			jr hl_subst
                           B   307    			
002060 FE6C                B   308    d_nhsubst	cp 'l'							;sy
002062 20 07               B   309    			jr nz,d_nlsubst
002064 E5                  B   310    			push hl
002065 21 2A 29 00         B   311    			ld hl,l_subs
002069 18 D2               B   312    			jr hl_subst
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   313    			
00206B FE24                B   314    d_nlsubst	cp '$'
00206D 20 07               B   315    			jr nz,d_nihlsubst				; s
00206F E5                  B   316    			push hl
002070 21 31 29 00         B   317    			ld hl,ind_hl_subs
002074 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002076                     B   321    d_nihlsubst	
                           B   322    
002076 FE7E                B   323    			cp '~'							; s
002078 20 1F               B   324    			jr nz,ntable_r
00207A 11 6C 28 00         B   325    			ld de,table_r
00207E 23                  B   326    do_table 	inc hl
00207F 01000000            B   327    			ld bc,0							; t
002083 4E                  B   328    			ld c,(hl)
002084 FD21 E0 23 00       B   329    			ld iy,opcode_vars
002089 FD09                B   330    			add iy,bc
00208B FD4600              B   331    			ld b,(iy)						;in
00208E E5                  B   332    			push hl
00208F EB                  B   333    			ex de,hl
002090 CD 3D 1F 00         B   334    			call index_table				; r
002094 E1                  B   335    			pop hl
002095 C3 ED 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002099 11 77 28 00         B   338    ntable_r	ld de,table_r2					; s
00209D FE3D                B   339    			cp '='
00209F 28 DD               B   340    			jr z,do_table
                           B   341    			
0020A1 11 82 28 00         B   342    			ld de,table_rp					; s
0020A5 FE40                B   343    			cp '@'
0020A7 28 D5               B   344    			jr z,do_table 
                           B   345    			
0020A9 11 89 28 00         B   346    			ld de,table_rp2					; s
0020AD FE2A                B   347    			cp '*'
0020AF 28 CD               B   348    			jr z,do_table
                           B   349    			
0020B1 11 EF 28 00         B   350    			ld de,table_rp3					; s
0020B5 FE3C                B   351    			cp '<'
0020B7 28 C5               B   352    			jr z,do_table
                           B   353    			
0020B9 11 F7 28 00         B   354    			ld de,table_rp4					; s
0020BD FE7D                B   355    			cp '}'
0020BF 28 BD               B   356    			jr z,do_table
                           B   357    			
0020C1 11 91 28 00         B   358    			ld de,table_cc					; s
0020C5 FE23                B   359    			cp '#'
0020C7 28 B5               B   360    			jr z,do_table 
                           B   361    			
0020C9 11 9D 28 00         B   362    			ld de,table_alu					; s
0020CD FE3A                B   363    			cp ':'
0020CF 28 AD               B   364    			jr z,do_table 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   365    			
0020D1 11 C9 28 00         B   366    			ld de,table_rot					; s
0020D5 FE25                B   367    			cp '%'
0020D7 28 A5               B   368    			jr z,do_table 
                           B   369    			
0020D9 11 07 29 00         B   370    			ld de,table_rst					; s
0020DD FE3B                B   371    			cp ';'
0020DF 28 9D               B   372    			jr z,do_table 
                           B   373    
0020E1 11 FF 28 00         B   374    			ld de,table_rp5					; s
0020E5 FE7B                B   375    			cp '{'
0020E7 28 95               B   376    			jr z,do_table 
                           B   377    
0020E9                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0020E9                     B   382    d_output_char
                           B   383    
0020E9 CD B6 23 00         B   384    			call show_ascii_char
                           B   385    
0020ED                     B   386    next_opcode_ascii_char
                           B   387    
0020ED CB7E                B   388    			bit 7,(hl)						;if
0020EF C0                  B   389    			ret nz
0020F0 23                  B   390    			inc hl
0020F1 C3 48 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0020F5                     B   397    prefix_to_offset
                           B   398    
0020F5 0602                B   399    			ld b,2							;se
0020F7 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020FB C0                  B   401    			ret nz
0020FC 05                  B   402    			dec b
0020FD FDCB0056            B   403    			bit sub_ix_prefix,(iy)
002101 C0                  B   404    			ret nz
002102 05                  B   405    			dec b
002103 C9                  B   406    			ret
                           B   407    			
                           B   408    			
002104                     B   409    check_nxt_byte_prefix			
                           B   410    
002104 DD23                B   411    			inc ix
002106 DD7E00              B   412    			ld a,(ix)
002109 FEDD                B   413    			cp 0ddh
00210B C8                  B   414    			ret z
00210C FEED                B   415    			cp 0edh
00210E C8                  B   416    			ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00210F FEFD                B   417    			cp 0fdh
002111 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
002112                     B   428    find_instruction_ascii
                           B   429    
002112 0600                B   430    			ld b,0						; defau
                           B   431    
002114 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
002118 28 12               B   433    			jr z,not_ddcb_fdcb_inst
00211A 21 46 28 00         B   434    			ld hl,ddcb_fdcb_z6		
00211E FD46 01             B   435    			ld b,(iy+var_x)				; x is 
002121 FD7E 03             B   436    			ld a,(iy+var_z)
002124 FE06                B   437    			cp 6
002126 C8                  B   438    			ret z
002127 21 0E 28 00         B   439    			ld hl,ddcb_fdcb_zn6					00212B C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
00212C                     B   444    not_ddcb_fdcb_inst
                           B   445    
00212C FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
002130 28 08               B   447    			jr z,not_cb_inst
002132 21 96 25 00         B   448    			ld hl,cb_group		
002136 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
002139 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
00213A                     B   454    not_cb_inst
                           B   455    
00213A FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
00213E CA 5F 22 00         B   457    			jr z,not_ed_inst
                           B   458    
002142 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
002145 B7                  B   460    			or a
002146 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
002148 FD7E 03             B   464    			ld a,(iy+var_z)				
00214B B7                  B   465    			or a
00214C 20 0D               B   466    			jr nz,notedx0z0
00214E 21 BD 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
002152 FD7E 02             B   468    			ld a,(iy+var_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002155 FE06                B   469    			cp 6
002157 C0                  B   470    			ret nz
002158 0601                B   471    			ld b,1
00215A C9                  B   472    			ret
                           B   473    
00215B FE01                B   474    notedx0z0	cp 1
00215D 20 0D               B   475    			jr nz,notedx0z1
00215F 21 CE 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
002163 FD7E 02             B   477    			ld a,(iy+var_y)
002166 FE06                B   478    			cp 6
002168 C0                  B   479    			ret nz
002169 0601                B   480    			ld b,1
00216B C9                  B   481    			ret
                           B   482    
00216C FE02                B   483    notedx0z1	cp 2
00216E 20 05               B   484    			jr nz,notedx0z2
002170 21 E4 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
002174 C9                  B   486    			ret
                           B   487    
002175 FE03                B   488    notedx0z2	cp 3
002177 20 05               B   489    			jr nz,notedx0z3
002179 21 F0 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
00217D C9                  B   491    			ret
                           B   492    			
00217E FE04                B   493    notedx0z3	cp 4
002180 20 05               B   494    			jr nz,notedx0z4
002182 21 FC 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002186 C9                  B   496    			ret
                           B   497    
002187 FE06                B   498    notedx0z4	cp 6
002189 20 05               B   499    			jr nz,notedx0z6				;x0 / z
00218B 21 06 26 00         B   500    			ld hl,ed_x0_z6
00218F C9                  B   501    			ret
                           B   502    
002190 FE07                B   503    notedx0z6	cp 7
002192 C2 69 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002196 21 11 26 00         B   505    			ld hl,ed_x0_z7
00219A FD46 05             B   506    			ld b,(iy+var_q)
00219D C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
00219E FE01                B   511    notedx0		cp 1	
0021A0 20 68               B   512    			jr nz,ed_xn1
                           B   513    
0021A2 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
0021A5 B7                  B   515    			or a
0021A6 20 0D               B   516    			jr nz,ed_x1_zn0
0021A8 21 26 26 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
0021AC FD7E 02             B   518    			ld a,(iy+var_y)
0021AF FE06                B   519    			cp 6
0021B1 C0                  B   520    			ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021B2 0601                B   521    			ld b,1
0021B4 C9                  B   522    			ret
                           B   523    			
0021B5 FE01                B   524    ed_x1_zn0	cp 1
0021B7 20 0D               B   525    			jr nz,ed_x1_zn1
0021B9 21 36 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
0021BD FD7E 02             B   527    			ld a,(iy+var_y)
0021C0 FE06                B   528    			cp 6
0021C2 C0                  B   529    			ret nz
0021C3 0601                B   530    			ld b,1
0021C5 C9                  B   531    			ret
                           B   532    		
0021C6 FE02                B   533    ed_x1_zn1	cp 2
0021C8 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0021CA 21 4B 26 00         B   535    			ld hl,ed_x1_z2	
0021CE FD46 05             B   536    			ld b,(iy+var_q)
0021D1 C9                  B   537    			ret
                           B   538    
0021D2 FE03                B   539    ed_x1_zn2	cp 3
0021D4 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0021D6 21 61 26 00         B   541    			ld hl,ed_x1_z3	
0021DA FD46 05             B   542    			ld b,(iy+var_q)
0021DD C9                  B   543    			ret
                           B   544    			
0021DE FE04                B   545    ed_x1_zn3	cp 4							;z 
0021E0 20 08               B   546    			jr nz,ed_x1_zn4
0021E2 21 76 26 00         B   547    			ld hl,ed_x1_z4
0021E6 FD46 02             B   548    			ld b,(iy+var_y)
0021E9 C9                  B   549    			ret
                           B   550    			
0021EA FE05                B   551    ed_x1_zn4	cp 5
0021EC 20 08               B   552    			jr nz,ed_x1_zn5
0021EE 21 AE 26 00         B   553    			ld hl,ed_x1_z5					;z 
0021F2 FD46 02             B   554    			ld b,(iy+var_y)
0021F5 C9                  B   555    			ret
                           B   556    			
0021F6 FE06                B   557    ed_x1_zn5	cp 6
0021F8 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021FA 21 DD 26 00         B   559    			ld hl,ed_x1_z6
0021FE FD46 02             B   560    			ld b,(iy+var_y)
002201 C9                  B   561    			ret
                           B   562    			
002202 21 02 27 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
002206 FD46 02             B   564    			ld b,(iy+var_y)
002209 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
00220A FE02                B   569    ed_xn1		cp 2
00220C 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
00220E FD46 02             B   572    			ld b,(iy+var_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002211 FD7E 03             B   573    			ld a,(iy+var_z)
002214 B7                  B   574    			or a
002215 20 05               B   575    			jr nz,edx2zn0
002217 21 26 27 00         B   576    			ld hl,ed_x2_z0					;x=
00221B C9                  B   577    			ret
                           B   578    
00221C FE01                B   579    edx2zn0		cp 1
00221E 20 05               B   580    			jr nz,edx2zn1
002220 21 40 27 00         B   581    			ld hl,ed_x2_z1					;x=
002224 C9                  B   582    			ret
                           B   583    
002225 FE02                B   584    edx2zn1		cp 2
002227 20 05               B   585    			jr nz,edx2zn2
002229 21 5A 27 00         B   586    			ld hl,ed_x2_z2					;x=
00222D C9                  B   587    			ret
                           B   588    
00222E FE03                B   589    edx2zn2		cp 3
002230 20 05               B   590    			jr nz,edx2zn3
002232 21 8A 27 00         B   591    			ld hl,ed_x2_z3					;x=
002236 C9                  B   592    			ret
                           B   593    
002237 21 BC 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
00223B C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
00223C FE03                B   599    ed_xn2		cp 3
00223E 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
002240 FD46 02             B   602    			ld b,(iy+var_y)
002243 FD7E 03             B   603    			ld a,(iy+var_z)
002246 FE02                B   604    			cp 2
002248 20 05               B   605    			jr nz,edx3zn2
00224A 21 F2 27 00         B   606    			ld hl,ed_x3_z2					;x=
00224E C9                  B   607    			ret
00224F FE03                B   608    edx3zn2		cp 3
002251 20 05               B   609    			jr nz,edx3zn3
002253 21 00 28 00         B   610    			ld hl,ed_x3_z3					;x=
002257 C9                  B   611    			ret
                           B   612    
002258                     B   613    edx3zn3
                           B   614    
002258                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
002258                     B   619    invalid_op
002258 21 69 28 00         B   620    			ld hl,bad_opcode				; x
00225C 0600                B   621    			ld b,0
00225E C9                  B   622    			ret
                           B   623    			
                           B   624    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
00225F FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
002262 B7                  B   629    			or a
002263 C2 FB 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002267 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
00226A B7                  B   636    			or a
00226B 20 14               B   637    			jr nz,x0_z_not_zero
00226D 21 E8 23 00         B   638    			ld hl,x0_z0
002271 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
002274 47                  B   640    			ld b,a
002275 D604                B   641    			sub 4
002277 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
00227A 78                  B   643    			ld a,b
00227B FE04                B   644    			cp 4
00227D D8                  B   645    			ret c
00227E 0604                B   646    			ld b,4						;if y >
002280 C9                  B   647    			ret
                           B   648    			
002281                     B   649    x0_z_not_zero		
                           B   650    			
002281 FE01                B   651    			cp 1
002283 20 1A               B   652    			jr nz,x0_z_not_one
002285 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002288 FE06                B   654    			cp 6
00228A 20 0B               B   655    			jr nz,x0z1yn6
00228C CD 9B 23 00         B   656    			call test_ixiy_prefix		;if y=6
002290 28 05               B   657    			jr z,x0z1yn6				;altern
002292 21 1B 24 00         B   658    			ld hl,x0_z1_y6
002296 C9                  B   659    			ret
                           B   660    
002297 21 08 24 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
00229B FD46 05             B   662    			ld b,(iy+var_q)				;q is t
00229E C9                  B   663    			ret 
                           B   664    			
00229F                     B   665    x0_z_not_one
                           B   666    
00229F FE02                B   667    			cp 2
0022A1 20 08               B   668    			jr nz,x0_z_not_two
0022A3 21 23 24 00         B   669    			ld hl,x0_z2
0022A7 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
0022AA C9                  B   671    			ret
                           B   672    			
0022AB                     B   673    x0_z_not_two
                           B   674    
0022AB FE03                B   675    			cp 3
0022AD 20 08               B   676    			jr nz,x0_z_not_three
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022AF 21 6F 24 00         B   677    			ld hl,x0_z3
0022B3 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
0022B6 C9                  B   679    			ret
                           B   680    			
0022B7                     B   681    x0_z_not_three
                           B   682    
0022B7 FE04                B   683    			cp 4
0022B9 20 05               B   684    			jr nz,x0_z_not_four
0022BB 21 7F 24 00         B   685    			ld hl,x0_z4					;no ini
0022BF C9                  B   686    			ret			
                           B   687    			
0022C0                     B   688    x0_z_not_four
                           B   689    
0022C0 FE05                B   690    			cp 5
0022C2 20 05               B   691    			jr nz,x0_z_not_five
0022C4 21 87 24 00         B   692    			ld hl,x0_z5					;no ini
0022C8 C9                  B   693    			ret				
                           B   694    			
0022C9                     B   695    x0_z_not_five
                           B   696    
0022C9 FE06                B   697    			cp 6
0022CB 20 1A               B   698    			jr nz,x0_z_not_six
0022CD 21 8F 24 00         B   699    			ld hl,x0_z6					;normal
0022D1 FD7E 02             B   700    			ld a,(iy+var_y)
0022D4 FE07                B   701    			cp 7
0022D6 C0                  B   702    			ret nz
0022D7 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0022DB 20 05               B   704    			jr nz,altx0z6
0022DD FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0022E1 C8                  B   706    			ret z	
0022E2 21 98 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0022E6 C9                  B   708    			ret
                           B   709    
                           B   710    
0022E7                     B   711    x0_z_not_six
                           B   712    			
0022E7 21 A0 24 00         B   713    			ld hl,x0_z7					;x=0, z
0022EB FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0022EE CD 9B 23 00         B   715    			call test_ixiy_prefix
0022F2 C8                  B   716    			ret z
0022F3 21 BA 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022F7 FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022FA C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
0022FB FE01                B   723    x_not_zero	cp 1						; is x 
0022FD 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0022FF 21 CC 24 00         B   726    			ld hl,x1_table				; x=1
002303 CD 9B 23 00         B   727    			call test_ixiy_prefix
002307 20 11               B   728    			jr nz,pref_x1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002309 FD7E 02             B   729    			ld a,(iy+var_y)
00230C FE06                B   730    			cp 6
00230E C0                  B   731    			ret nz
00230F FD7E 03             B   732    			ld a,(iy+var_z)
002312 FE06                B   733    			cp 6
002314 C0                  B   734    			ret nz
002315 21 EA 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
002319 C9                  B   736    			ret
                           B   737    
00231A FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
00231D FE06                B   739    			cp 6
00231F 20 05               B   740    			jr nz,x1yn6
002321 21 D6 24 00         B   741    			ld hl,x1_y6
002325 C9                  B   742    			ret
                           B   743    			
002326 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
002329 FE06                B   745    			cp 6
00232B C0                  B   746    			ret nz
00232C 21 E0 24 00         B   747    			ld hl,x1_z6
002330 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
002331 FE02                B   752    x_not_one	cp 2						; is x 
002333 20 05               B   753    			jr nz,x_not_two
002335 21 EE 24 00         B   754    			ld hl,x2_table				; no in
002339 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
00233A FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
00233D B7                  B   760    			or a
00233E 20 05               B   761    			jr nz,x3_z_not_zero
002340 21 F3 24 00         B   762    			ld hl,x3_z0					; no in
002344 C9                  B   763    			ret
                           B   764    						
002345                     B   765    x3_z_not_zero
                           B   766    
002345 FE01                B   767    			cp 1
002347 20 11               B   768    			jr nz,x3_z_not_one
002349 21 FB 24 00         B   769    			ld hl,x3_z1_q0
00234D FD7E 05             B   770    			ld a,(iy+var_q)
002350 B7                  B   771    			or a
002351 C8                  B   772    			ret z						; no in
002352 21 03 25 00         B   773    			ld hl,x3_z1_q1
002356 FD46 04             B   774    			ld b,(iy+var_p)				; index
002359 C9                  B   775    			ret
                           B   776    
00235A                     B   777    x3_z_not_one
                           B   778    
00235A FE02                B   779    			cp 2
00235C 20 05               B   780    			jr nz,x3_z_not_two
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00235E 21 1A 25 00         B   781    			ld hl,x3_z2					;no ini
002362 C9                  B   782    			ret
                           B   783    
002363                     B   784    x3_z_not_two
                           B   785    
002363 FE03                B   786    			cp 3
002365 20 08               B   787    			jr nz,x3_z_not_three
002367 21 23 25 00         B   788    			ld hl,x3_z3
00236B FD46 02             B   789    			ld b,(iy+var_y)				;index 
00236E C9                  B   790    			ret
                           B   791    
00236F                     B   792    x3_z_not_three
                           B   793    
00236F FE04                B   794    			cp 4
002371 20 05               B   795    			jr nz,x3_z_not_four
002373 21 58 25 00         B   796    			ld hl,x3_z4				;no initial
002377 C9                  B   797    			ret						
                           B   798    
                           B   799    
002378                     B   800    x3_z_not_four
                           B   801    
002378 FE05                B   802    			cp 5
00237A 20 11               B   803    			jr nz,x3_z_not_five
00237C 21 63 25 00         B   804    			ld hl,x3_z5_q0
002380 FD7E 05             B   805    			ld a,(iy+var_q)
002383 B7                  B   806    			or a
002384 C8                  B   807    			ret z						;no ind
002385 21 6C 25 00         B   808    			ld hl,x3_z5_q1
002389 FD46 04             B   809    			ld b,(iy+var_p)				;else i
00238C C9                  B   810    			ret
                           B   811    
00238D                     B   812    x3_z_not_five
                           B   813    
00238D FE06                B   814    			cp 6
00238F 20 05               B   815    			jr nz,x3_z_not_six
002391 21 8A 25 00         B   816    			ld hl,x3_z6					;no ind
002395 C9                  B   817    			ret
                           B   818    
002396                     B   819    x3_z_not_six
                           B   820    
002396 21 8E 25 00         B   821    			ld hl,x3_z7					;x=3, z
00239A C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
00239B                     B   827    test_ixiy_prefix
                           B   828    
00239B FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00239F C0                  B   830    			ret nz
0023A0 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
0023A4 C9                  B   832    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
0023A5                     B   837    show_hex_byte
                           B   838    
0023A5 E5                  B   839    			push hl
0023A6 21 52 29 00         B   840    			ld hl,output_byte_txt
0023AA E5                  B   841    			push hl
0023AB CD A9 11 00         B   842    			call hexbyte_to_ascii
0023AF E1                  B   843    			pop hl
0023B0 CD 60 10 00         B   844    			call os_print_string
0023B4 E1                  B   845    			pop hl
0023B5 C9                  B   846    			ret
                           B   847    			
                           B   848    
0023B6                     B   849    show_ascii_char
                           B   850    
0023B6 E5                  B   851    			push hl
0023B7 21 55 29 00         B   852    			ld hl,output_char_txt
0023BB 77                  B   853    			ld (hl),a
0023BC CD 60 10 00         B   854    			call os_print_string
0023C0 E1                  B   855    			pop hl
0023C1 C9                  B   856    			ret
                           B   857    		
                           B   858    		
0023C2 DD22 4F 29 00       B   859    show_ix		ld (d_work_address),ix
0023C7 3A 51 29 00         B   860    			ld a,(d_work_address+2)
0023CB CD A5 23 00         B   861    			call show_hex_byte
0023CF 3A 50 29 00         B   862    			ld a,(d_work_address+1)
0023D3 CD A5 23 00         B   863    			call show_hex_byte
0023D7 3A 4F 29 00         B   864    			ld a,(d_work_address)
0023DB CD A5 23 00         B   865    			call show_hex_byte
0023DF C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0023E0                     B   896    opcode_vars
                           B   897    
0023E0 00                  B   898    prefix_bits_loc	db 0	
0023E1 00                  B   899    var_x_loc		db 0	
0023E2 00                  B   900    var_y_loc		db 0	
0023E3 00                  B   901    var_z_loc		db 0	
0023E4 00                  B   902    var_p_loc		db 0	
0023E5 00                  B   903    var_q_loc		db 0
0023E6 00                  B   904    var_calc_loc	db 0
0023E7 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0023E8 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0023EB 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0023F3 A7 
0023F4 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023FB 4A522064 80         B   922    			db 'JR ','d',80h			; y3
002400 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
002408 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
00240E 2C2180 
002411 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
002419 04 80 
00241B 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
002423 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
00242B 2CC1 
00242D 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
002435 43A9 
002437 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00243F 2CC1 
002441 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
002449 45A9 
00244B 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
002453 DF 
002454 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
00245C A9 
00245D 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002465 C1 
002466 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
00246E A9 
                           B   937    
00246F 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002476 80 
002477 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
00247E 80 
                           B   940    			
00247F 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002486 80 
                           B   942    
002487 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
00248E 80 
                           B   944    			
00248F 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002495 2C5E80 
002498 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
0024A0 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
0024A4 525243C1            B   949    			db 'RRC','A'+80h		;y=1
0024A8 524CC1              B   950    			db 'RL','A'+80h			;y=2
0024AB 5252C1              B   951    			db 'RR','A'+80h			;y=3
0024AE 4441C1              B   952    			db 'DA','A'+80h			;y=4
0024B1 4350CC              B   953    			db 'CP','L'+80h			;y=5
0024B4 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
0024B7 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
0024BA 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
0024C0 2C2480 
0024C3 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
0024CB 80 
                           B   959    		
                           B   960    
                           B   961    
0024CC 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
0024D2 2C7E 03 80 
0024D6 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0024DC 2C3D 03 80 
0024E0 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		0024E6 2C7E 03 80 
                           B   965    
0024EA 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   968    
                           B   969    
0024EE 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
0024F3 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024FA 80 
                           B   975    
0024FB 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
002502 80 
002503 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
002508 4558D8              B   978    			db 'EX','X'+80h			;p=1
00250B 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
002511 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
002519 80 
                           B   981    
00251A 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
002520 2C2180 
                           B   983    
002523 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
002529 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
002530 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
002538 C1 
002539 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
002541 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
002549 2C5F80 
00254C 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
002554 44C9                B   990    			db 'D','I'+80h			;y = 6
002556 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
002558 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
002560 2C2180 
                           B   994    
002563 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
00256B 80 
00256C 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
002574 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
00257B 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
002582 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
00258A 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
00258E 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002595 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002596 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		00259C 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0025A3 2C7E 03 80 
0025A7 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
0025AE 2C7E 03 80 
0025B2 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
0025B9 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
0025BD 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
0025C3 2C285EA9 
0025C7 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0025CE 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0025D6 2C7E 02 80 
0025DA 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0025E2 5FA9 
                           B  1022    
0025E4 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0025EB 2C49582F 80 
0025F0 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025F7 2C49592F 80 
0025FC 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
002604 02 80 
                           B  1026    
002606 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
00260E 7D 04 80 
                           B  1028    
002611 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	002617 2C285FA9 
00261B 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		002623 3C 04 80 
                           B  1031    
002626 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
00262B 2C284243 A9 
002630 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
002636 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
00263E 2C7E 02 80 
002642 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
00264A B0 
                           B  1037    
00264B 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		002653 40 04 80 
002656 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		00265E 40 04 80 
                           B  1040    
002661 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002669 40 04 80 
00266C 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	002672 2C2821A9 
                           B  1043    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002676 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002679 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00267F 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002687 49592F80 
00268B 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
002691 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002699 80 
00269A 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
0026A0 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
0026A8 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
0026AE 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
0026B4 52455449 2680       B  1054    				db 'RETI&',80h				;y=
0026BA 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
0026C2 49582F80 
0026C6 BF                  B  1056    				db '?'+80h					;y=
0026C7 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0026CF 80 
0026D0 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0026D7 BF                  B  1059    				db '?'+80h					;y=
0026D8 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0026DD 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0026E1 BF                  B  1064    				db '?'+80h					;y=
0026E2 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0026E6 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0026EA 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0026F2 80 
0026F3 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026FA 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026FD 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
002702 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
002708 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
00270E 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
002714 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
00271A 5252C4              B  1076    				db 'RR','D'+80h				;y=
00271D 524CC4              B  1077    				db 'RL','D'+80h				;y=
002720 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
002723 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002726 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
00272A 4C444926 80         B  1083    				db 'LDI&',80h					00272F 4C444426 80         B  1084    				db 'LDD&',80h					002734 4C444952 2680       B  1085    				db 'LDIR&',80h					00273A 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
002740 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
002744 43504926 80         B  1089    				db 'CPI&',80h					002749 43504426 80         B  1090    				db 'CPD&',80h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00274E 43504952 2680       B  1091    				db 'CPIR&',80h					002754 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
00275A 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
002760 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
002766 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
00276D 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
002774 494E4926 80         B  1098    				db 'INI&',80h		; y4
002779 494E4426 80         B  1099    				db 'IND&',80h		; y5
00277E 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
002784 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
00278A 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
002790 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002796 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
00279D 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
0027A4 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
0027AA 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
0027B0 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
0027B6 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
0027BC 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
0027C2 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
0027C8 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0027CF 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0027D6 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0027DD 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0027E4 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0027EB 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0027F2 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027F9 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
002800 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
002807 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
00280E 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
002814 2C25 02 202480 
00281A 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		002821 2C2480 
002824 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
00282A 2C524553 26203E 02 
002832 2C2480 
002835 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
00283B 2C534554 26203E 02 
002843 2C2480 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1137    
002846 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			00284B 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		002852 2C2480 
002855 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		00285C 2C2480 
00285F 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002866 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002869 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
00286C C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002874 2480C1 
                           B  1151    
002877 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00287F 2480C1 
                           B  1153    
002882 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002889 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002891 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002899 50C5D0CD 
                           B  1159    	
00289D 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
0028A5 44432620 41AC5355 
0028AD 4226A053 42432041 
0028B5 26AC 
0028B7 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
0028BF 26A04F52 26A04350 
0028C7 26A0 
                           B  1162    			
0028C9 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0028D1 2680524C 26805252 
0028D9 2680 
0028DB 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0028E3 2680534C 4C268053 
0028EB 524C2680 
                           B  1165    	
0028EF 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0028F7 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0028FF 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
002907 30B0                B  1172    table_rst	db '0','0'+80h
002909 30B8                B  1173    			db '0','8'+80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00290B 31B0                B  1174    			db '1','0'+80h
00290D 31B8                B  1175    			db '1','8'+80h
00290F 32B0                B  1176    			db '2','0'+80h
002911 32B8                B  1177    			db '2','8'+80h	
002913 33B0                B  1178    			db '3','0'+80h
002915 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
002917 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
00291D 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
002923 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
00292A CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
002931 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
002939 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
00293F                     B  1198    adl_prefix_list
                           B  1199    
00293F 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
002947 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
00294F 000000              B  1204    d_work_address	dw24 0
                           B  1205    
002952 2D2D00              B  1206    output_byte_txt	db "--",0
002955 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
002957 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
00295A CD 4E 17 00         B     6    os_cmd_del		call os_check_volume_format	
00295E C0                  B     7    				ret nz
                           B     8    			
00295F CD 13 3C 00         B     9    				call os_cache_original_vol_dir
002963 CD 6C 29 00         B    10    				call do_del
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
002967 CD FE 3B 00         B    11    				call os_restore_original_vol_di
00296B C9                  B    12    				ret
                           B    13    			
00296C CD FE 10 00         B    14    do_del			call os_scan_for_non_space		002970 CA 79 2D 00         B    15    				jp z,missing_args
                           B    16    
002974 AF                  B    17    				xor a							002975 CD 94 3B 00         B    18    				call os_parse_path_string
002979 C0                  B    19    				ret nz
00297A C3 B7 17 00         B    20    				jp os_erase_file				                           B    21    				
                           B    22    				
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.04
                           B     3    ;----------------------------------------------
                           B     4    
00297E CD 4E 17 00         B     5    os_cmd_dir		call os_check_volume_format	
002982 C0                  B     6    				ret nz
                           B     7    				
002983 CD 13 3C 00         B     8    				call os_cache_original_vol_dir
002987 CD 90 29 00         B     9    				call do_dir
00298B CD FE 3B 00         B    10    				call os_restore_original_vol_di
00298F C9                  B    11    				ret
                           B    12    				
002990 CD FE 10 00         B    13    do_dir			call os_scan_for_non_space		002994 28 07               B    14    				jr z,dir_no_args
                           B    15    				
002996 3E01                B    16    				ld a,1							002998 CD 94 3B 00         B    17    				call os_parse_path_string
00299C C0                  B    18    				ret nz
                           B    19    										
00299D CD B1 2A 00         B    20    dir_no_args		call div_line
0029A1 CD 8F 5B 00         B    21    				call fs_get_current_dir_name	0029A5 D8                  B    22    				ret c
0029A6 C0                  B    23    				ret nz
0029A7 CD 60 10 00         B    24    				call os_print_string
0029AB CD 27 1B 00         B    25    				call fs_get_dir_cluster			0029AF 7A                  B    26    				ld a,d
0029B0 B3                  B    27    				or e
0029B1 20 08               B    28    				jr nz,dcmdnr
0029B3 CD 7A 58 00         B    29    				call fs_get_volume_label
0029B7 CD 60 10 00         B    30    				call os_print_string
0029BB CD 06 15 00         B    31    dcmdnr			call os_new_line
                           B    32    				
0029BF CD B1 2A 00         B    33    nrootdir		call div_line
0029C3 CD 7F 57 00         B    34    				call fs_goto_first_dir_entry
0029C7 D8                  B    35    				ret c
0029C8 20 6F               B    36    				jr nz,os_dlr
0029CA AF                  B    37    				xor a
0029CB 32 66 6A 00         B    38    				ld (os_linecount),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    39    				
0029CF CD 96 57 00         B    40    os_dfllp		call fs_get_dir_entry			0029D3 D8                  B    41    				ret c
0029D4 20 63               B    42    				jr nz,os_dlr					0029D6 C5                  B    43    				push bc
0029D7 CD 60 10 00         B    44    				call os_print_string			0029DB CD 31 15 00         B    45    				call os_get_cursor_position		0029DF 060E                B    46    				ld b,14
0029E1 CD 11 15 00         B    47    				call os_set_cursor_position	
0029E5 C1                  B    48    				pop bc
0029E6 CB40                B    49    				bit 0,b							0029E8 28 06               B    50    				jr z,os_deif		
0029EA 21 BE 2A 00         B    51    				ld hl,dir_txt					0029EE 18 32               B    52    				jr os_dpl
                           B    53    				
0029F0 21 C1 5E 00         B    54    os_deif			ld hl,os_hex_prefix_txt			0029F4 CD 60 10 00         B    55    				call os_print_string
0029F8 ED530001 00         B    56    				ld (scratch_pad),de
0029FD 79                  B    57    				ld a,c
0029FE 32030100            B    58    				ld (scratch_pad+3),a
002A02 21 D1 6A 00         B    59    				ld hl,output_line
002A06 E5                  B    60    				push hl
002A07 ED5B0201 00         B    61    				ld de,(scratch_pad+2)
002A0C CD CE 11 00         B    62    				call hexword_to_ascii
002A10 ED5B0001 00         B    63    				ld de,(scratch_pad)
002A15 CD CE 11 00         B    64    				call hexword_to_ascii
002A19 3600                B    65    				ld (hl),0
002A1B E1                  B    66    				pop hl
002A1C 0607                B    67    				ld b,7							002A1E CD 86 11 00         B    68    				call os_skip_leading_ascii_zero
002A22 CD 60 10 00         B    69    os_dpl			call os_print_string
002A26 CD 06 15 00         B    70    				call os_new_line
                           B    71    				
002A2A CD 23 58 00         B    72    				call fs_goto_next_dir_entry
002A2E 20 09               B    73    				jr nz,os_dlr					002A30 CD 04 13 00         B    74    				call os_count_lines
002A34 3E79                B    75    				ld a,'y'
002A36 B8                  B    76    				cp b
002A37 28 96               B    77    				jr z,os_dfllp
                           B    78    				
002A39 CD B1 2A 00         B    79    os_dlr			call div_line					002A3D CD 7D 51 00         B    80    				call fs_calc_free_space
002A41 D8                  B    81    				ret c	
                           B    82    				
002A42 CD 50 2A 00         B    83    				call show_capacity				002A46 21 CE 2A 00         B    84    				ld hl,free_txt
002A4A CD 60 10 00         B    85    				call os_print_string
002A4E AF                  B    86    				xor a
002A4F C9                  B    87    				ret
                           B    88    				
                           B    89    ;----------------------------------------------
                           B    90    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A50                     B    91    show_capacity	
                           B    92    
                           B    93    ; set xDE = capacity in KB
                           B    94    ; (trashed all other registers!)
                           B    95    
002A50 DD21 C4 2A 00       B    96    				ld ix,dir_kb_txt
002A55 AF                  B    97    				xor a
002A56 D5                  B    98    				push de
002A57 E1                  B    99    				pop hl
002A58 01241000            B   100    				ld bc,1024h
002A5C ED42                B   101    				sbc hl,bc
002A5E 38 0B               B   102    				jr c,showresinkb
002A60 060A                B   103    				ld b,10
002A62 CD 77 2A 00         B   104    				call shr_de
002A66 DD21 C9 2A 00       B   105    				ld ix,dir_mb_txt
002A6B CD 8A 2A 00         B   106    showresinkb		call show_xde_decimal
002A6F DDE5                B   107    				push ix
002A71 E1                  B   108    				pop hl
002A72 CD 60 10 00         B   109    				call os_print_string
002A76 C9                  B   110    				ret
                           B   111    				
                           B   112    ;----------------------------------------------
                           B   113    
                           B   114    ; Set xDE = value to shift
                           B   115    ; Set B = number of places to shift right (0-23
                           B   116    	
002A77 E5                  B   117    shr_de			push hl
002A78 3E18                B   118    				ld a,24
002A7A 90                  B   119    				sub b
002A7B 47                  B   120    				ld b,a
002A7C 21000000            B   121    				ld hl,0
002A80 EB                  B   122    				ex de,hl
002A81 29                  B   123    divde_lp		add hl,hl
002A82 EB                  B   124    				ex de,hl
002A83 ED6A                B   125    				adc hl,hl
002A85 EB                  B   126    				ex de,hl
002A86 10 F9               B   127    				djnz divde_lp
002A88 E1                  B   128    				pop hl
002A89 C9                  B   129    				ret
                           B   130    				
                           B   131    ;----------------------------------------------
                           B   132    
002A8A                     B   133    show_xde_decimal
                           B   134    
002A8A CD 99 13 00         B   135    				call os_hex_to_decimal			002A8E 11070000            B   136    				ld de,7
002A92 19                  B   137    				add hl,de						002A93 43                  B   138    				ld b,e
002A94 11 D1 6A 00         B   139    				ld de,output_line
002A98 D5                  B   140    				push de
002A99 7E                  B   141    dec2strlp		ld a,(hl)						002A9A B7                  B   142    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A9B 20 03               B   143    				jr nz,foundlnz
002A9D 2B                  B   144    				dec hl
002A9E 10 F9               B   145    				djnz dec2strlp
002AA0 04                  B   146    foundlnz		inc b
002AA1 7E                  B   147    ndecchar		ld a,(hl)						002AA2 C630                B   148    				add a,030h
002AA4 12                  B   149    				ld (de),a
002AA5 13                  B   150    				inc de
002AA6 2B                  B   151    				dec hl
002AA7 10 F8               B   152    				djnz ndecchar
002AA9 AF                  B   153    				xor a
002AAA 12                  B   154    				ld (de),a
002AAB E1                  B   155    				pop hl							002AAC CD 60 10 00         B   156    				call os_print_string
002AB0 C9                  B   157    				ret
                           B   158    
                           B   159    ;----------------------------------------------
                           B   160    			
002AB1 0E2D                B   161    div_line		ld c,'-'
002AB3 0613                B   162    				ld b,19
002AB5 CD 0F 1B 00         B   163    				call os_print_multiple_chars
002AB9 CD 06 15 00         B   164    				call os_new_line
002ABD C9                  B   165    				ret
                           B   166    
                           B   167    ;----------------------------------------------
                           B   168    
002ABE 5B444952 5D00       B   169    dir_txt			db '[DIR]',0
                           B   170    
002AC4 204B4220 00         B   171    dir_kb_txt		db ' KB ',0
002AC9 204D4220 00         B   172    dir_mb_txt		db ' MB ',0
002ACE 46726565 0B00       B   173    free_txt		db 'Free',11,0
                           B   174    
                           B   175    ;----------------------------------------------
                           B   176    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002AD4                     B     5    os_cmd_f			
                           B     6    
002AD4 CD 27 1D 00         B     7    				call get_start_and_end			                           B     8    			
002AD8 CD 50 1D 00         B     9    				call hexword_or_bust			002ADC CA DE 16 00         B    10    				jp z,os_no_args_error			002AE0 7B                  B    11    				ld a,e
002AE1 32 7D 6A 00         B    12    				ld (fillbyte),a
                           B    13    					
002AE5 CD 15 1D 00         B    14    				call test_mem_range
002AE9 DA DA 16 00         B    15    				jp c,os_range_error				                           B    16    					
002AED 3A 7D 6A 00         B    17    				ld a,(fillbyte)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002AF1 77                  B    18    f_floop			ld (hl),a
002AF2 EDA1                B    19    				cpi								002AF4 EA F1 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002AF8 3E20                B    22    				ld a,020h						002AFA B7                  B    23    				or a
002AFB C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002AFC                     B     9    os_cmd_format
                           B    10    
002AFC 7E                  B    11    				ld a,(hl)						002AFD B7                  B    12    				or a
002AFE 20 04               B    13    				jr nz,fgotargs					002B00 3E1F                B    14    				ld a,01fh						002B02 B7                  B    15    				or a
002B03 C9                  B    16    				ret
                           B    17    			
002B04 E5                  B    18    fgotargs		push hl
002B05 3E01                B    19    				ld a,1							002B07 CD F4 18 00         B    20    				call os_mount_volumes			002B0B E1                  B    21    				pop hl
                           B    22    				
002B0C 11 1E 5D 00         B    23    				ld de,fs_sought_filename
002B10 CD D8 5B 00         B    24    				call fs_clear_filename			002B14 E5                  B    25    				push hl							002B15 CD E9 10 00         B    26    				call os_next_arg
002B19 20 04               B    27    				jr nz,fgotlab
002B1B 21 48 2C 00         B    28    				ld hl,default_label
002B1F 060B                B    29    fgotlab			ld b,11
002B21 CD 4C 13 00         B    30    				call os_copy_ascii_run
002B25 E1                  B    31    				pop hl
                           B    32    				
002B26 3A 7C 68 00         B    33    				ld a,(device_count)				002B2A B7                  B    34    				or a
002B2B 28 25               B    35    				jr z,fno_dev
002B2D 47                  B    36    				ld b,a
002B2E 0E00                B    37    				ld c,0							002B30 DD21 26 69 00       B    38    				ld ix,host_device_hardware_info
002B35 DD7E00              B    39    fdev_lp			ld a,(ix)						002B38 CD F9 1A 00         B    40    				call locate_driver_base			002B3C D5                  B    41    				push de
002B3D FDE1                B    42    				pop iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B3F ED130C              B    43    				lea de,iy+0ch					002B42 C5                  B    44    				push bc
002B43 0607                B    45    				ld b,7
002B45 CD 2D 13 00         B    46    				call os_compare_strings
002B49 C1                  B    47    				pop bc
002B4A 28 0A               B    48    				jr z,format_dev
002B4C ED3220              B    49    				lea ix,ix+20h					002B4F 0C                  B    50    				inc c
002B50 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002B52 3ED0                B    53    fno_dev			ld a,0d0h						002B54 B7                  B    54    				or a
002B55 C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002B56 C5                  B    62    format_dev		push bc
002B57 CD 06 15 00         B    63    				call os_new_line
002B5B 21 19 2C 00         B    64    				ld hl,form_dev_warn1
002B5F CD 3D 15 00         B    65    				call os_show_packed_text
002B63 C1                  B    66    				pop bc
                           B    67    				
002B64 79                  B    68    				ld a,c							002B65 C630                B    69    				add a,030h
002B67 32 88 68 00         B    70    				ld (dev_txt+3),a
002B6B 21 85 68 00         B    71    				ld hl,dev_txt	
002B6F CD 60 10 00         B    72    				call os_print_string			                           B    73    				
002B73 79                  B    74    				ld a,c
002B74 CD 6D 1B 00         B    75    				call dev_to_driver_lookup		002B78 E5                  B    76    				push hl
002B79 32 7B 68 00         B    77    				ld (current_driver),a
002B7D CD E0 1A 00         B    78    				call show_dev_driver_name		002B81 DDE1                B    79    				pop ix
002B83 DD1701              B    80    				ld de,(ix+1)
002B86 DD7E04              B    81    				ld a,(ix+4)
002B89 B7                  B    82    				or a
002B8A 28 06               B    83    				jr z,less16gb
002B8C 21 53 2C 00         B    84    				ld hl,dev16gbplus_txt
002B90 18 14               B    85    				jr form_capdone
002B92 0601                B    86    less16gb		ld b,1
002B94 CD 77 2A 00         B    87    				call shr_de						002B98 3E28                B    88    				ld a,'('
002B9A CD A2 10 00         B    89    				call os_print_char
002B9E DDE5                B    90    				push ix
002BA0 CD 50 2A 00         B    91    				call show_capacity				002BA4 DDE1                B    92    				pop ix
002BA6 ED2205              B    93    form_capdone	lea hl,ix+5		
002BA9 CD 60 10 00         B    94    				call os_print_string			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002BAD 3E29                B    95    				ld a,')'
002BAF CD A2 10 00         B    96    				call os_print_char
                           B    97    				
002BB3 CD 06 15 00         B    98    				call os_new_line
002BB7 CD 06 15 00         B    99    				call os_new_line
002BBB 21 20 2C 00         B   100    				ld hl,form_dev_warn2
002BBF CD 10 2C 00         B   101    				call show_packed_text_and_cr
002BC3 CD F8 2B 00         B   102    				call confirm_yes
002BC7 20 27               B   103    				jr nz,ab_form
                           B   104    				
002BC9 21 2A 2C 00         B   105    				ld hl,formatting_txt			002BCD CD 60 10 00         B   106    				call os_print_string
                           B   107    				
002BD1 CD FB 4E 00         B   108    				call fs_format_device_command
002BD5 38 0F               B   109    				jr c,form_err
002BD7 20 0D               B   110    				jr nz,form_err
                           B   111    			
002BD9 21 3A 2C 00         B   112    				ld hl,ok_txt					002BDD CD 60 10 00         B   113    				call os_print_string
                           B   114    				
002BE1 CD DC 33 00         B   115    f_end			call os_cmd_remount				002BE5 C9                  B   116    				ret
                           B   117    			
002BE6                     B   118    form_err
002BE6 21 3F 2C 00         B   119    				ld hl,ferr_txt
002BEA CD 60 10 00         B   120    				call os_print_string
002BEE 18 F1               B   121    				jr f_end
                           B   122    				
                           B   123    				
                           B   124    ;----------------------------------------------
                           B   125    				
                           B   126    				
002BF0 CD 06 15 00         B   127    ab_form			call os_new_line
002BF4 3E24                B   128    				ld a,024h						002BF6 B7                  B   129    				or a
002BF7 C9                  B   130    				ret
                           B   131    				
002BF8                     B   132    confirm_yes
                           B   133    			
002BF8 21000100            B   134    				ld hl,scratch_pad
002BFC 1E03                B   135    				ld e,3
002BFE E5                  B   136    				push hl
002BFF CD 32 12 00         B   137    				call os_user_input
002C03 E1                  B   138    				pop hl
002C04 C0                  B   139    				ret nz
002C05 0603                B   140    				ld b,3
002C07 11 F4 62 00         B   141    				ld de,yes_txt+1
002C0B CD 2D 13 00         B   142    				call os_compare_strings
002C0F C9                  B   143    				ret
                           B   144    			
                           B   145    			
002C10                     B   146    show_packed_text_and_cr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B   147    			
002C10 CD 3D 15 00         B   148    				call os_show_packed_text
002C14 CD 06 15 00         B   149    				call os_new_line
002C18 C9                  B   150    				ret
                           B   151    			
                           B   152    ;----------------------------------------------
                           B   153    
002C19                     B   154    form_dev_warn1
                           B   155    
002C19 27283640 979700     B   156    				db 027h,028h,036h,040h,097h,097
                           B   157    
002C20                     B   158    form_dev_warn2
                           B   159    
002C20 52467E98 9EA2A3A5   B   160    				db 052h,046h,07eh,098h,09eh,0a2
002C28 9700 
                           B   161    
002C2A                     B   162    formatting_txt
                           B   163    
002C2A 0B0B466F 726D6174   B   164    				db 11,11,'Formatting.. ',0
002C32 74696E67 2E2E2000 
                           B   165    
002C3A 4F4B0B0B 00         B   166    ok_txt			db 'OK',11,11,0
                           B   167    
002C3F 4552524F 52210B0B   B   168    ferr_txt		db 'ERROR!',11,11,0
002C47 00 
                           B   169    
002C48                     B   170    default_label	
                           B   171    
002C48 50524F53 455F4449   B   172    				db 'PROSE_DISK',0
002C50 534B00 
                           B   173    
002C53 28313647 422B2000   B   174    dev16gbplus_txt	db '(16GB+ ',0
                           B   175    
                           B   176    ;----------------------------------------------
                           B   177    
       00000104            B   178    fs_drive_sel_cache		equ scratch_pad+4		                           B   179    
                           B   180    ;----------------------------------------------
                           B   181    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C5B CD 27 1D 00         B     5    os_cmd_h		call get_start_and_end			002C5F 22 76 6A 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002C63 CD 15 1D 00         B     8    				call test_mem_range
002C67 DA DA 16 00         B     9    				jp c,os_range_error				                           B    10    			
002C6B AF                  B    11    				xor a
002C6C 32 08 2D 00         B    12    				ld (h_ascii_mode),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B    13    				
002C70 2A 76 6A 00         B    14    				ld hl,(find_hexstringascii)
002C74 0600                B    15    				ld b,0
002C76 7E                  B    16    h_lfascii		ld a,(hl)						002C77 B7                  B    17    				or a
002C78 28 28               B    18    				jr z,h_no_text					002C7A FE22                B    19    				cp 022h
002C7C 28 03               B    20    				jr z,h_found_quote
002C7E 23                  B    21    				inc hl
002C7F 18 F5               B    22    				jr h_lfascii
002C81 23                  B    23    h_found_quote	inc hl
002C82 22 76 6A 00         B    24    				ld (find_hexstringascii),hl
002C86 7E                  B    25    h_fasc_len		ld a,(hl)
002C87 B7                  B    26    				or a
002C88 CA DE 16 00         B    27    				jp z,os_no_args_error			002C8C FE22                B    28    				cp 022h
002C8E 28 04               B    29    				jr z,h_startas
002C90 23                  B    30    				inc hl
002C91 04                  B    31    				inc b
002C92 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C94 78                  B    34    h_startas		ld a,b
002C95 B7                  B    35    				or a
002C96 CA DE 16 00         B    36    				jp z,os_no_args_error			002C9A 3E01                B    37    				ld a,1
002C9C 32 08 2D 00         B    38    				ld (h_ascii_mode),a
002CA0 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002CA2 2A 76 6A 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002CA6 0600                B    43    				ld b,0							002CA8 CD 50 1D 00         B    44    cntfbyts		call hexword_or_bust			002CAC 28 04               B    45    				jr z,gthexstr
002CAE 04                  B    46    				inc b
002CAF 23                  B    47    				inc hl
002CB0 18 F6               B    48    				jr cntfbyts
002CB2 78                  B    49    gthexstr		ld a,b
002CB3 B7                  B    50    				or a
002CB4 CA DE 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002CB8                     B    54    h_start_search
                           B    55    	
002CB8 DD2A 6A 6A 00       B    56    				ld ix,(cmdop_start_address)		002CBD DDE5                B    57    fndloop1		push ix
002CBF FDE1                B    58    				pop iy
002CC1 48                  B    59    				ld c,b							002CC2 2A 76 6A 00         B    60    				ld hl,(find_hexstringascii)
002CC6 3A 08 2D 00         B    61    fcmloop			ld a,(h_ascii_mode)
002CCA B7                  B    62    				or a
002CCB 28 08               B    63    				jr z,h_hex
002CCD FD7E00              B    64    				ld a,(iy)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002CD0 BE                  B    65    				cp (hl)
002CD1 20 23               B    66    				jr nz,nofmatch
002CD3 18 0A               B    67    				jr h_matched
002CD5 CD DD 11 00         B    68    h_hex			call ascii_to_hexword			002CD9 FD7E00              B    69    				ld a,(iy)
002CDC BB                  B    70    				cp e
002CDD 20 17               B    71    				jr nz,nofmatch
002CDF FD23                B    72    h_matched		inc iy
002CE1 23                  B    73    				inc hl
002CE2 0D                  B    74    				dec c
002CE3 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002CE5 DDE5                B    77    				push ix							002CE7 D1                  B    78    				pop de							002CE8 DDE5                B    79    				push ix
002CEA C5                  B    80    				push bc
002CEB CD 3E 14 00         B    81    				call os_show_hex_address
002CEF CD 06 15 00         B    82    				call os_new_line
002CF3 C1                  B    83    				pop bc
002CF4 DDE1                B    84    				pop ix
                           B    85    				
002CF6 DDE5                B    86    nofmatch		push ix
002CF8 DD23                B    87    				inc ix
002CFA D1                  B    88    				pop de
002CFB 2A 6D 6A 00         B    89    				ld hl,(cmdop_end_address)
002CFF AF                  B    90    				xor a
002D00 ED52                B    91    				sbc hl,de
002D02 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002D04 3E20                B    94    				ld a,020h						002D06 B7                  B    95    				or a
002D07 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002D08 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D09                     B     5    os_cmd_help		
002D09 AF                  B     6    				xor a
002D0A 32 66 6A 00         B     7    				ld (os_linecount),a
                           B     8    				
002D0E 21 64 64 00         B     9    				ld hl,packed_help1
002D12 CD 3D 15 00         B    10    show_page		call os_show_packed_text
002D16 E5                  B    11    				push hl
002D17 CD 06 15 00         B    12    				call os_new_line
002D1B E1                  B    13    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002D1C 23                  B    14    				inc hl						;sk
002D1D 7E                  B    15    				ld a,(hl)
002D1E FEFF                B    16    				cp 0ffh						;la
002D20 28 09               B    17    				jr z,last_help_page
                           B    18    				
002D22 CD 04 13 00         B    19    				call os_count_lines
002D26 78                  B    20    				ld a,b
002D27 FE79                B    21    				cp 'y'
002D29 28 E7               B    22    				jr z,show_page
                           B    23    
002D2B                     B    24    last_help_page
002D2B AF                  B    25    				xor a
002D2C C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002D2D                     B     5    os_cmd_gtr
                           B     6    
002D2D CD 50 1D 00         B     7    				call hexword_or_bust			002D31 CA C6 16 00         B     8    				jp z,os_no_start_addr
002D35 23                  B     9    fndquot1		inc hl
002D36 7E                  B    10    				ld a,(hl)
002D37 B7                  B    11    				or a
002D38 CA DE 16 00         B    12    				jp z,os_no_args_error
002D3C FE22                B    13    				cp 022h							002D3E 20 F5               B    14    				jr nz,fndquot1
002D40 23                  B    15    				inc hl
002D41 E5                  B    16    				push hl
002D42 7E                  B    17    fndquot2		ld a,(hl)
002D43 23                  B    18    				inc hl
002D44 B7                  B    19    				or a
002D45 28 15               B    20    				jr z,noquot2
002D47 FE22                B    21    				cp 022h							002D49 20 F7               B    22    				jr nz,fndquot2
002D4B E1                  B    23    				pop hl
                           B    24    					
002D4C 7E                  B    25    wmbalp			ld a,(hl)						002D4D FE22                B    26    				cp 022h
002D4F 28 09               B    27    				jr z,os_gtrdn					002D51 FE7D                B    28    				cp 07dh
002D53 28 01               B    29    				jr z,skpnasc
002D55 12                  B    30    				ld (de),a
002D56 13                  B    31    skpnasc			inc de
002D57 23                  B    32    				inc hl
002D58 18 F2               B    33    				jr wmbalp
002D5A AF                  B    34    os_gtrdn		xor a
002D5B C9                  B    35    				ret	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
                           B    36    				
002D5C E1                  B    37    noquot2			pop hl							002D5D 3E12                B    38    				ld a,012h
002D5F B7                  B    39    				or a
002D60 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.05
                           B     3    ;----------------------------------------------
                           B     4    
002D61 CD 4E 17 00         B     5    os_cmd_lb		call os_check_volume_format	
002D65 C0                  B     6    				ret nz
                           B     7    				
002D66 CD 13 3C 00         B     8    				call os_cache_original_vol_dir
002D6A CD 73 2D 00         B     9    				call do_lb
002D6E CD FE 3B 00         B    10    				call os_restore_original_vol_di
002D72 C9                  B    11    				ret
                           B    12    				
002D73 CD FE 10 00         B    13    do_lb			call os_scan_for_non_space		002D77 20 04               B    14    				jr nz,lb_got_fn
002D79 3E8D                B    15    missing_args	ld a,8dh
002D7B B7                  B    16    				or a
002D7C C9                  B    17    				ret
                           B    18    				
002D7D AF                  B    19    lb_got_fn		xor a
002D7E CD 94 3B 00         B    20    				call os_parse_path_string
002D82 C0                  B    21    				ret nz
002D83 CD E6 16 00         B    22    				call os_find_file				002D87 C0                  B    23    				ret nz
002D88 ED53 03 01 00       B    24    				ld (filesize_cache),de			002D8D 2A B7 69 00         B    25    				ld hl,(free_sysram_base)
002D91 22 00 01 00         B    26    				ld (data_load_addr),hl			                           B    27    				
002D95 2A 23 6B 00         B    28    				ld hl,(os_args_loc)
002D99 CD E9 10 00         B    29    				call os_next_arg
002D9D CD DD 11 00         B    30    				call ascii_to_hexword			002DA1 28 05               B    31    				jr z,lb_argsok
002DA3 FE81                B    32    				cp 81h
002DA5 28 D2               B    33    				jr z,missing_args
002DA7 C9                  B    34    				ret
                           B    35    				
002DA8 ED53 00 01 00       B    36    lb_argsok		ld (data_load_addr),de
002DAD ED4B 00 01 00       B    37    				ld bc,(data_load_addr)			002DB2 C5                  B    38    				push bc
002DB3 E1                  B    39    				pop hl
002DB4 ED5B 03 01 00       B    40    				ld de,(filesize_cache)
002DB9 19                  B    41    				add hl,de
002DBA EB                  B    42    				ex de,hl
002DBB CD D8 3A 00         B    43    				call os_protected_ram_test
002DBF C4 2A 3B 00         B    44    				call nz,os_protected_ram_query
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002DC3 C0                  B    45    				ret nz
                           B    46    
002DC4 2A 00 01 00         B    47    				ld hl,(data_load_addr)			002DC8 CD 13 17 00         B    48    				call os_read_bytes_from_file
002DCC C0                  B    49    				ret nz
                           B    50    			
002DCD                     B    51    report_bytes_loaded
                           B    52    
002DCD 21 C1 5E 00         B    53    				ld hl,os_hex_prefix_txt			002DD1 CD 60 10 00         B    54    				call os_print_string			                           B    55    				
002DD5 11 05 01 00         B    56    				ld de,filesize_cache+2			002DD9 21 D1 6A 00         B    57    				ld hl,output_line
002DDD 0603                B    58    				ld b,3
002DDF CD 9B 11 00         B    59    				call n_hexbytes_to_ascii
002DE3 3600                B    60    				ld (hl),0	
002DE5 0605                B    61    				ld b,5							002DE7 CD 74 14 00         B    62    				call os_print_output_line_skip_
                           B    63    				
002DEB 21 0F 66 00         B    64    				ld hl,bytes_loaded_msg			002DEF CD 3D 15 00         B    65    				call os_show_packed_text
                           B    66    				
002DF3 21 1F 5F 00         B    67    				ld hl,to_txt					002DF7 CD 60 10 00         B    68    				call os_print_string
                           B    69    
002DFB 21 C1 5E 00         B    70    				ld hl,os_hex_prefix_txt			002DFF CD 60 10 00         B    71    				call os_print_string	
                           B    72    
002E03 ED5B 00 01 00       B    73    				ld de,(data_load_addr)			002E08 CD 3E 14 00         B    74    				call os_show_hex_address
                           B    75    
002E0C CD 06 15 00         B    76    				call os_new_line
002E10 AF                  B    77    				xor a
002E11 C9                  B    78    				ret
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
       00000100            B    82    data_load_addr	equ scratch_pad
       00000103            B    83    filesize_cache	equ scratch_pad+3
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002E12 CD 50 1D 00         B     7    os_cmd_m		call hexword_or_bust			002E16 28 05               B     8    				jr z,m_no_hex					002E18 ED53 67 6A 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002E1D 0610                B    11    m_no_hex		ld b,16							002E1F C5                  B    12    smbllp			push bc							                           B    13    				
002E20 21 59 2E 00         B    14    				ld hl,colon_cmd_prefix			002E24 CD 60 10 00         B    15    				call os_print_string
002E28 ED5B 67 6A 00       B    16    				ld de,(mem_mon_addr)
002E2D CD 3E 14 00         B    17    				call os_show_hex_address
                           B    18    
002E31 21 D1 6A 00         B    19    				ld hl,output_line
002E35 0610                B    20    				ld b,bytes_per_line				002E37 3620                B    21    mmbllp			ld (hl),' '
002E39 23                  B    22    				inc hl
002E3A 1A                  B    23    				ld a,(de)	
002E3B CD A9 11 00         B    24    				call hexbyte_to_ascii
002E3F 13                  B    25    				inc de
002E40 10 F5               B    26    				djnz mmbllp
                           B    27    
002E42 ED53 67 6A 00       B    28    				ld (mem_mon_addr),de
002E47 360B                B    29    				ld (hl),11
002E49 23                  B    30    				inc hl
002E4A 3600                B    31    				ld (hl),0
002E4C 21 D1 6A 00         B    32    				ld hl,output_line
002E50 CD 60 10 00         B    33    				call os_print_string
002E54 C1                  B    34    				pop bc
002E55 10 C8               B    35    				djnz smbllp
                           B    36    				
002E57 AF                  B    37    				xor a
002E58 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002E59 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
002E5C CD 4E 17 00         B     5    os_cmd_md		call os_check_volume_format	
002E60 C0                  B     6    				ret nz
                           B     7    			
002E61 CD 13 3C 00         B     8    				call os_cache_original_vol_dir
002E65 CD 6E 2E 00         B     9    				call do_md
002E69 CD FE 3B 00         B    10    				call os_restore_original_vol_di
002E6D C9                  B    11    				ret
                           B    12    			
002E6E CD FE 10 00         B    13    do_md			call os_scan_for_non_space		002E72 CA 79 2D 00         B    14    				jp z,missing_args
                           B    15    				
002E76 AF                  B    16    				xor a							002E77 CD 94 3B 00         B    17    				call os_parse_path_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
002E7B C0                  B    18    				ret nz
                           B    19    				
002E7C C3 8F 17 00         B    20    				jp os_make_dir					                           B    21    				
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002E80                     B     5    os_cmd_r	
002E80 DD21 D2 69 00       B     6    				ld ix,store_a1					002E85 21 2A 2F 00         B     7    				ld hl,register_txt
002E89 CD 60 10 00         B     8    rcmdloop2		call os_print_string
002E8D 7E                  B     9    rcmdloop		ld a,(hl)
002E8E FE01                B    10    				cp 1
002E90 28 0B               B    11    				jr z,showbyte
002E92 FE02                B    12    				cp 2
002E94 28 15               B    13    				jr z,showword16
002E96 FE03                B    14    				cp 3
002E98 28 2E               B    15    				jr z,showaddr
002E9A 23                  B    16    				inc hl
002E9B 18 F0               B    17    				jr rcmdloop
                           B    18    				
002E9D DD7E00              B    19    showbyte		ld a,(ix)
002EA0 DD23                B    20    				inc ix
002EA2 DDE5                B    21    				push ix
002EA4 E5                  B    22    				push hl
002EA5 CD 52 14 00         B    23    				call os_show_hex_byte
002EA9 18 2A               B    24    				jr showreg
                           B    25    
002EAB DD7E01              B    26    showword16		ld a,(ix+1)
002EAE DDE5                B    27    				push ix
002EB0 E5                  B    28    				push hl
002EB1 CD 52 14 00         B    29    				call os_show_hex_byte
002EB5 E1                  B    30    				pop hl
002EB6 DDE1                B    31    				pop ix
002EB8 DD7E00              B    32    				ld a,(ix)
002EBB DD23                B    33    				inc ix
002EBD DD23                B    34    				inc ix
002EBF DDE5                B    35    				push ix
002EC1 E5                  B    36    				push hl
002EC2 CD 52 14 00         B    37    				call os_show_hex_byte
002EC6 18 0D               B    38    				jr showreg
                           B    39    
002EC8 DD1700              B    40    showaddr		ld de,(ix)
002ECB ED3203              B    41    				lea ix,ix+3
002ECE DDE5                B    42    				push ix
002ED0 E5                  B    43    				push hl
002ED1 CD 3E 14 00         B    44    				call os_show_hex_address
002ED5 E1                  B    45    showreg			pop hl
002ED6 DDE1                B    46    				pop ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002ED8 23                  B    47    				inc hl
002ED9 7E                  B    48    				ld a,(hl)
002EDA B7                  B    49    				or a
002EDB 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002EDD CD 06 15 00         B    52    				call os_new_line				002EE1 21 8E 2F 00         B    53    				ld hl,flag_txt
002EE5 CD 26 14 00         B    54    				call os_copy_to_output_line
002EE9 21 D5 6A 00         B    55    				ld hl,output_line+4
002EED 01050000            B    56    				ld bc,5
002EF1 3A F5 69 00         B    57    				ld a,(store_f)
002EF5 CB77                B    58    				bit 6,a							002EF7 28 02               B    59    				jr z,zfzero
002EF9 3631                B    60    				ld (hl),'1'
002EFB 09                  B    61    zfzero			add hl,bc
002EFC CB47                B    62    				bit 0,a							002EFE 28 02               B    63    				jr z,cfzero
002F00 3631                B    64    				ld (hl),'1'
002F02 09                  B    65    cfzero			add hl,bc
002F03 CB7F                B    66    				bit 7,a							002F05 28 02               B    67    				jr z,sfzero
002F07 364D                B    68    				ld (hl),'M'
002F09 09                  B    69    sfzero			add hl,bc
002F0A CB57                B    70    				bit 2,a							002F0C 28 02               B    71    				jr z,pfzero
002F0E 364F                B    72    				ld (hl),'O'
002F10 09                  B    73    pfzero			add hl,bc
002F11 23                  B    74    				inc hl
002F12 CB67                B    75    				bit 4,a							002F14 28 02               B    76    				jr z,iffzero
002F16 3631                B    77    				ld (hl),'1'
002F18                     B    78    iffzero			
002F18 01060000            B    79    				ld bc,6
002F1C 09                  B    80    				add hl,bc
002F1D 3A F6 69 00         B    81    				ld a,(store_adl)
002F21 C630                B    82    				add a,30h
002F23 77                  B    83    				ld (hl),a
002F24 CD 69 14 00         B    84    				call os_print_output_line
002F28 AF                  B    85    				xor a
002F29 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002F2A 20413D00 01         B    91    register_txt		db ' A=',0,1
002F2F 20204243 3D0003     B    92    					db '  BC=',0,3
002F36 20204445 3D0003     B    93    					db '  DE=',0,3
002F3D 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002F44 0B                  B    96    					db 11
                           B    97    
002F45 27413D00 01         B    98    					db 027h,'A=',0,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002F4A 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002F51 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002F58 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002F5F 0B                  B   103    					db 11
                           B   104    
002F60 2049583D 0003       B   105    					db ' IX=',0,3
002F66 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002F6C 0B                  B   108    					db 11
                           B   109    					
002F6D 2050433D 0003       B   110    					db ' PC=',0,3
002F73 204C5350 3D0003     B   111    					db ' LSP=',0,3
002F7A 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002F81 0B                  B   114    					db 11
                           B   115    					
002F82 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002F8A 010000 
                           B   117    					
002F8D 0B                  B   118    					db 11
                           B   119    
002F8E 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002F96 3D302053 463D5020 
002F9E 50563D45 20494646 
002FA6 3D302041 444C3D30 
002FAE 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002FB1 CD 4E 17 00         B     6    os_cmd_rd		call os_check_volume_format	
002FB5 C0                  B     7    				ret nz
                           B     8    				
002FB6 CD 13 3C 00         B     9    				call os_cache_original_vol_dir
002FBA CD C3 2F 00         B    10    				call do_rd
002FBE CD FE 3B 00         B    11    				call os_restore_original_vol_di
002FC2 C9                  B    12    				ret
                           B    13    			
002FC3 CD FE 10 00         B    14    do_rd			call os_scan_for_non_space		002FC7 CA 79 2D 00         B    15    				jp z,missing_args
                           B    16    				
002FCB AF                  B    17    				xor a							002FCC CD 94 3B 00         B    18    				call os_parse_path_string
002FD0 C0                  B    19    				ret nz
                           B    20    							
002FD1 C3 F9 17 00         B    21    				jp os_delete_dir				                           B    22    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rd.asm
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
002FD5 CD 4E 17 00         B     5    os_cmd_rn		call os_check_volume_format	
002FD9 C0                  B     6    				ret nz
                           B     7    			
002FDA CD 13 3C 00         B     8    				call os_cache_original_vol_dir
002FDE CD E7 2F 00         B     9    				call do_rn
002FE2 CD FE 3B 00         B    10    				call os_restore_original_vol_di
002FE6 C9                  B    11    				ret
                           B    12    			
002FE7 CD FE 10 00         B    13    do_rn			call os_scan_for_non_space		002FEB CA 79 2D 00         B    14    				jp z,missing_args
                           B    15    				
002FEF AF                  B    16    				xor a							002FF0 CD 94 3B 00         B    17    				call os_parse_path_string
002FF4 C0                  B    18    				ret nz
                           B    19    
002FF5 E5                  B    20    				push hl
002FF6 D1                  B    21    				pop de
002FF7 CD E9 10 00         B    22    				call os_next_arg
002FFB 7E                  B    23    				ld a,(hl)						002FFC B7                  B    24    				or a
002FFD CA 79 2D 00         B    25    				jp z,missing_args
                           B    26    				
003001 EB                  B    27    				ex de,hl
003002 C3 E3 17 00         B    28    				jp os_rename_file				                           B    29    		
                           B    30    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
003006                     B     5    os_cmd_sb
                           B     6    	
003006 CD 4E 17 00         B     7    				call os_check_volume_format		00300A C0                  B     8    				ret nz
                           B     9    				
00300B CD 13 3C 00         B    10    				call os_cache_original_vol_dir
00300F CD 18 30 00         B    11    				call do_sb
003013 CD FE 3B 00         B    12    				call os_restore_original_vol_di
003017 C9                  B    13    				ret
                           B    14    				
003018 CD FE 10 00         B    15    do_sb			call os_scan_for_non_space		00301C CA 79 2D 00         B    16    				jp z,missing_args
003020 22 06 01 00         B    17    				ld (sb_save_name_addr),hl	
                           B    18    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
003024 CD E9 10 00         B    19    				call os_next_arg
003028 CD DD 11 00         B    20    				call ascii_to_hexword			00302C C2 C6 16 00         B    21    				jp nz,os_no_start_addr			003030 ED53 00 01 00       B    22    				ld (sb_save_addr),de
                           B    23    				
003035 CD E9 10 00         B    24    				call os_next_arg
003039 CD DD 11 00         B    25    				call ascii_to_hexword			00303D C2 CA 16 00         B    26    				jp nz,os_no_filesize
003041 ED53 03 01 00       B    27    				ld (sb_save_length),de
                           B    28    				
003046 2A 06 01 00         B    29    				ld hl,(sb_save_name_addr)		00304A AF                  B    30    				xor a
00304B CD 94 3B 00         B    31    				call os_parse_path_string
00304F 22 06 01 00         B    32    				ld (sb_save_name_addr),hl		003053 C0                  B    33    				ret nz
                           B    34    
003054 CD E6 16 00         B    35    				call os_find_file				003058 28 06               B    36    				jr z,sb_file_exists
00305A FEC6                B    37    				cp 0c6h							00305C 20 17               B    38    				jr nz,sb_makefile
00305E B7                  B    39    				or a
00305F C9                  B    40    				ret
                           B    41    
003060 21 2B 64 00         B    42    sb_file_exists	ld hl,save_append_msg			003064 CD 3D 15 00         B    43    				call os_show_packed_text
003068 CD 18 4C 00         B    44    				call os_wait_key_press
00306C 3E79                B    45    				ld a,'y'
00306E B8                  B    46    				cp b
00306F 28 0D               B    47    				jr z,os_sfapp
003071 3E2C                B    48    				ld a,2ch						003073 B7                  B    49    				or a
003074 C9                  B    50    				ret
                           B    51    
003075 2A 06 01 00         B    52    sb_makefile		ld hl,(sb_save_name_addr)		003079 CD 22 17 00         B    53    				call os_create_file
00307D C0                  B    54    				ret nz
                           B    55    						
00307E 2A 06 01 00         B    56    os_sfapp		ld hl,(sb_save_name_addr)		003082 ED5B 00 01 00       B    57    				ld de,(sb_save_addr)			003087 ED4B 03 01 00       B    58    				ld bc,(sb_save_length)			00308C CD 37 17 00         B    59    				call os_write_bytes_to_file
003090 C0                  B    60    				ret nz	
                           B    61    				
003091 3E20                B    62    				ld a,020h						003093 B7                  B    63    				or a
003094 C9                  B    64    				ret
                           B    65    			
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00000100            B    69    sb_save_addr		equ scratch_pad
       00000103            B    70    sb_save_length		equ scratch_pad+3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
       00000106            B    71    sb_save_name_addr	equ scratch_pad+6
                           B    72    
                           B    73    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000040            B     5    buffer_blocks			 equ 64					                           B     6    
       00000100            B     7    rx_buffer_loc			 equ scratch_pad
       00000103            B     8    rx_buffer_ptr			 equ scratch_pad+3
       00000106            B     9    serial_file_length_cache equ scratch_pad+6
       00000109            B    10    rxe_args_location		 equ scratch_pad+9
                           B    11    
                           B    12    
003095 7E                  B    13    os_cmd_rx		ld a,(hl)						003096 B7                  B    14    				or a
003097 CA BE 16 00         B    15    				jp z,os_no_fn_error
                           B    16    				
00309B 3E3E                B    17    				ld a,'>'						00309D BE                  B    18    				cp (hl)
00309E C2 85 31 00         B    19    				jp nz,rx_nrs
0030A2 23                  B    20    				inc hl
0030A3 3E20                B    21    				ld a,' '
0030A5 BE                  B    22    				cp (hl)
0030A6 2B                  B    23    				dec hl
0030A7 C2 85 31 00         B    24    				jp nz,rx_nrs
                           B    25    				
0030AB CD 4E 17 00         B    26    				call os_check_volume_format		0030AF C0                  B    27    				ret nz		
                           B    28    				
0030B0 01004000            B    29    				ld bc,buffer_blocks*256			0030B4 1E00                B    30    				ld e,0
0030B6 CD 82 3A 00         B    31    				call os_allocate_ram
0030BA C0                  B    32    				ret nz
0030BB 22000100            B    33    				ld (rx_buffer_loc),hl
                           B    34    				
0030BF 112A0000            B    35    				ld de,02ah						0030C3 ED53 37 68 00       B    36    				ld (serial_filename),de			0030C8 CD C5 32 00         B    37    				call rx_get_header
0030CC C2 55 31 00         B    38    				jr nz,rxwtd_fail
0030D0 CD EB 4D 00         B    39    				call s_holdack					                           B    40    				
0030D4 21 4B 68 00         B    41    				ld hl,serial_fileheader			0030D8 CD 22 17 00         B    42    				call os_create_file
0030DC C2 55 31 00         B    43    				jp nz,rxwtd_fail				                           B    44    				
0030E0 21 4B 64 00         B    45    				ld hl,ser_recsave_msg
0030E4 CD 3D 15 00         B    46    				call os_show_packed_text
                           B    47    				
0030E8 2A 5B 68 00         B    48    rx_rnblk		ld hl,(serial_fileheader+16)	Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030EC 22060100            B    49    				ld (serial_file_length_cache),h
0030F0 2A000100            B    50    				ld hl,(rx_buffer_loc)
0030F4 22030100            B    51    				ld (rx_buffer_ptr),hl
                           B    52    				
0030F8 0640                B    53    				ld b,buffer_blocks				                           B    54    				
0030FA CD D3 4D 00         B    55    rx_lnb			call s_goodack
0030FE CD 7D 4D 00         B    56    				call s_getblock
003102 28 0F               B    57    				jr z,rxtd_blok
003104 F5                  B    58    				push af							003105 CD E4 4D 00         B    59    				call s_badack					003109 21 4B 68 00         B    60    				ld hl,serial_fileheader			00310D CD B7 17 00         B    61    				call os_erase_file
003111 18 47               B    62    				jr rx_dealloc
                           B    63    
003113 CD EB 4D 00         B    64    rxtd_blok		call s_holdack					                           B    65    				
003117 21000700            B    66    				ld hl,serial_buffer				00311B ED5B0301 00         B    67    				ld de,(rx_buffer_ptr)
003120 C5                  B    68    				push bc
003121 01000100            B    69    				ld bc,256
003125 EDB0                B    70    				ldir
003127 C1                  B    71    				pop bc
003128 ED530301 00         B    72    				ld (rx_buffer_ptr),de
                           B    73    				
00312D 2A 5B 68 00         B    74    				ld hl,(serial_fileheader+16)	003131 11000100            B    75    				ld de,256
003135 AF                  B    76    				xor a
003136 ED52                B    77    				sbc hl,de
003138 22 5B 68 00         B    78    				ld (serial_fileheader+16),hl
00313C 28 28               B    79    				jr z,rx_lbr						00313E 38 26               B    80    				jr c,rx_lbr						003140 10 B8               B    81    				djnz rx_lnb						                           B    82    
003142 01004000            B    83    				ld bc,buffer_blocks*256			003146 ED5B0001 00         B    84    				ld de,(rx_buffer_loc)
00314B 21 4B 68 00         B    85    				ld hl,serial_fileheader
00314F CD 37 17 00         B    86    				call os_write_bytes_to_file
003153 28 93               B    87    				jr z,rx_rnblk					003155 F5                  B    88    rxwtd_fail		push af
003156 CD E4 4D 00         B    89    				call s_badack
00315A 01004000            B    90    rx_dealloc		ld bc,buffer_blocks*256
00315E 1E00                B    91    				ld e,0
003160 CD AD 3A 00         B    92    				call os_deallocate_ram
003164 F1                  B    93    				pop af
003165 C9                  B    94    				ret
                           B    95    				
003166 CD D3 4D 00         B    96    rx_lbr			call s_goodack					00316A ED4B0601 00         B    97    				ld bc,(serial_file_length_cache
00316F ED5B0001 00         B    98    				ld de,(rx_buffer_loc)
003174 21 4B 68 00         B    99    				ld hl,serial_fileheader
003178 CD 37 17 00         B   100    				call os_write_bytes_to_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00317C 28 03               B   101    				jr z,rxtd_done
00317E F5                  B   102    				push af
00317F 18 D9               B   103    				jr rx_dealloc
                           B   104    				
003181 3E20                B   105    rxtd_done		ld a,020h						003183 B7                  B   106    				or a
003184 C9                  B   107    				ret
                           B   108    
                           B   109    				
                           B   110    
                           B   111    				
003185 3E21                B   112    rx_nrs			ld a,'!'						003187 BE                  B   113    				cp (hl)							003188 C2 66 32 00         B   114    				jr nz,notrxe
00318C 23                  B   115    				inc hl
00318D 3E20                B   116    				ld a,' '
00318F BE                  B   117    				cp (hl)
003190 2B                  B   118    				dec hl
003191 C2 66 32 00         B   119    				jr nz,notrxe
003195 CD E9 10 00         B   120    				call os_next_arg
003199 22090100            B   121    				ld (rxe_args_location),hl
                           B   122    							
00319D 112A0000            B   123    				ld de,02ah						0031A1 ED53 37 68 00       B   124    				ld (serial_filename),de			0031A6 CD C5 32 00         B   125    				call rx_get_header
0031AA C0                  B   126    				ret nz
0031AB 21 41 64 00         B   127    				ld hl,ser_rec2_msg
0031AF CD 3D 15 00         B   128    				call os_show_packed_text
0031B3 CD D3 4D 00         B   129    				call s_goodack
0031B7 3E01                B   130    				ld a,1							0031B9 32 4A 68 00         B   131    				ld (serial_timeout),a
0031BD CD 7D 4D 00         B   132    				call s_getblock					0031C1 28 07               B   133    				jr z,rxe_fblok
0031C3 F5                  B   134    rxe_badblock	push af							0031C4 CD E4 4D 00         B   135    				call s_badack					0031C8 F1                  B   136    				pop af
0031C9 C9                  B   137    				ret
                           B   138    	
0031CA ED4B0507 00         B   139    rxe_fblok		ld bc,(serial_buffer+5)			0031CF C5                  B   140    				push bc
0031D0 E1                  B   141    				pop hl
0031D1 ED5B 5B 68 00       B   142    				ld de,(serial_fileheader+16)
0031D6 19                  B   143    				add hl,de
0031D7 EB                  B   144    				ex de,hl
0031D8 CD D8 3A 00         B   145    				call os_protected_ram_test		0031DC 28 11               B   146    				jr z,rxe_norampro
0031DE CD EB 4D 00         B   147    				call s_holdack					0031E2 CD 2A 3B 00         B   148    				call os_protected_ram_query
0031E6 28 07               B   149    				jr z,rxe_norampro
0031E8 F5                  B   150    				push af
0031E9 CD E4 4D 00         B   151    				call s_badack
0031ED F1                  B   152    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0031EE C9                  B   153    				ret
                           B   154    	
0031EF 2A020700            B   155    rxe_norampro	ld hl,(serial_buffer+2)
0031F3 1150524F            B   156    				ld de,04f5250h					0031F7 AF                  B   157    				xor a
0031F8 28 04               B   158    				jr z,rxe_ok
0031FA 3E1A                B   159    				ld a,1ah						0031FC B7                  B   160    				or a
0031FD C9                  B   161    				ret
0031FE 2A050700            B   162    rxe_ok			ld hl,(serial_buffer+5)			003202 22 2E 68 00         B   163    				ld (serial_ez80_address),hl
003206 01000100            B   164    				ld bc,256						00320A DD21 4B 68 00       B   165    				ld ix,serial_fileheader
00320F AF                  B   166    				xor a
003210 DDB612              B   167    				or (ix+18)						003213 20 0A               B   168    				jr nz,mtones
003215 DDB611              B   169    				or a,(ix+17)					003218 20 05               B   170    				jr nz,mtones
00321A 0600                B   171    				ld b,0
00321C DD4E10              B   172    				ld c,(ix+16)					00321F 21000700            B   173    mtones			ld hl,serial_buffer				003223 ED5B 2E 68 00       B   174    				ld de,(serial_ez80_address)		003228 EDB0                B   175    				ldir
                           B   176    				
00322A D5                  B   177    				push de
00322B CD D3 4D 00         B   178    				call s_goodack		
00322F DDE1                B   179    				pop ix							003231 2A 5B 68 00         B   180    				ld hl,(serial_fileheader+16)	003235 11000100            B   181    				ld de,256
003239 AF                  B   182    				xor a
00323A ED52                B   183    				sbc hl,de						00323C 28 18               B   184    				jr z,rxe_done
00323E 38 16               B   185    				jr c,rxe_done
003240 EB                  B   186    				ex de,hl
003241 ED53 5B 68 00       B   187    				ld (serial_fileheader+16),de	003246 DD2A 2E 68 00       B   188    				ld ix,(serial_ez80_address)
00324B 01000100            B   189    				ld bc,256
00324F DD09                B   190    				add ix,bc
003251 CD 3B 4D 00         B   191    				call s_gbloop					003255 C0                  B   192    				ret nz
003256 E1                  B   193    rxe_done		pop hl							003257 CD EF 44 00         B   194    				call enable_button_nmi			00325B 2A090100            B   195    				ld hl,(rxe_args_location)
00325F DD2A 2E 68 00       B   196    				ld ix,(serial_ez80_address)
003264 DDE9                B   197    				jp (ix)							                           B   198    				
                           B   199    				
                           B   200    
003266 CD 0C 33 00         B   201    notrxe			call clear_serial_filename
                           B   202    				
00326A 0610                B   203    				ld b,16							00326C 11 37 68 00         B   204    				ld de,serial_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003270 CD 4C 13 00         B   205    				call os_copy_ascii_run			003274 79                  B   206    				ld a,c
003275 32 49 68 00         B   207    				ld (serial_fn_length),a
003279 CD F5 10 00         B   208    				call os_scan_for_space
                           B   209    				
00327D CD 50 1D 00         B   210    				call hexword_or_bust			003281 CA C6 16 00         B   211    				jp z,os_no_start_addr			003285 ED530001 00         B   212    				ld (data_load_addr),de			00328A CD C5 32 00         B   213    				call rx_get_header
00328E C0                  B   214    				ret nz
                           B   215    
00328F ED4B0001 00         B   216    				ld bc,(data_load_addr)			003294 C5                  B   217    				push bc
003295 E1                  B   218    				pop hl
003296 ED5B 5B 68 00       B   219    				ld de,(serial_fileheader+16)
00329B 19                  B   220    				add hl,de
00329C EB                  B   221    				ex de,hl
00329D CD D8 3A 00         B   222    				call os_protected_ram_test
0032A1 C4 2A 3B 00         B   223    				call nz,os_protected_ram_query
0032A5 C0                  B   224    				ret nz
                           B   225    				
0032A6 21 41 64 00         B   226    				ld hl,ser_rec2_msg
0032AA CD 3D 15 00         B   227    				call os_show_packed_text
                           B   228    	
0032AE 2A000100            B   229    				ld hl,(data_load_addr)			0032B2 CD 29 4D 00         B   230    				call serial_receive_file
0032B6 C0                  B   231    				ret nz							                           B   232    
0032B7 ED5B 5B 68 00       B   233    				ld de,(serial_fileheader+16)	0032BC ED530301 00         B   234    				ld (filesize_cache),de
0032C1 C3 CD 2D 00         B   235    				jp report_bytes_loaded			                           B   236    				
                           B   237    ;----------------------------------------------
                           B   238    
0032C5                     B   239    rx_get_header
0032C5 21 3D 64 00         B   240    				ld hl,ser_rec_msg
0032C9 CD 3D 15 00         B   241    				call os_show_packed_text
                           B   242    				
0032CD 3E00                B   243    				ld a,0
0032CF 32 6C 68 00         B   244    				ld (anim_wait_count),a			0032D3 3A 6C 68 00         B   245    get_hdr_loop	ld a,(anim_wait_count)
0032D7 3C                  B   246    				inc a
0032D8 47                  B   247    				ld b,a
0032D9 FE06                B   248    				cp 6
0032DB 20 07               B   249    				jr nz,notsix
0032DD 0E20                B   250    				ld c,' '
0032DF 0605                B   251    				ld b,5
0032E1 AF                  B   252    				xor a
0032E2 18 02               B   253    				jr mcharset
0032E4 0E2E                B   254    notsix			ld c,'.'
0032E6 32 6C 68 00         B   255    mcharset		ld (anim_wait_count),a
0032EA CD 0F 1B 00         B   256    				call os_print_multiple_chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0032EE CD A9 10 00         B   257    				call home_cursor
                           B   258    				
0032F2 21 37 68 00         B   259    				ld hl,serial_filename			0032F6 3E01                B   260    				ld a,1							0032F8 CD 8E 4C 00         B   261    				call serial_get_header
0032FC C8                  B   262    				ret z
0032FD FE83                B   263    				cp 083h							0032FF C0                  B   264    				ret nz
003300 CD 73 4C 00         B   265    				call os_get_key_press
003304 FE76                B   266    				cp 076h
003306 20 CB               B   267    				jr nz,get_hdr_loop
003308 3E80                B   268    				ld a,080h						00330A B7                  B   269    notsto			or a
00330B C9                  B   270    				ret								                           B   271    							
                           B   272    
                           B   273    ;----------------------------------------------
                           B   274    
00330C                     B   275    clear_serial_filename
                           B   276    
00330C E5                  B   277    				push hl							00330D 21 37 68 00         B   278    				ld hl,serial_filename
003311 01100000            B   279    				ld bc,16
003315 AF                  B   280    				xor a
003316 CD 47 16 00         B   281    				call os_bchl_memfill
00331A E1                  B   282    				pop hl
00331B C9                  B   283    				ret
                           B   284    
                           B   285    ;----------------------------------------------
                           B   286    
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00331C 7E                  B     5    os_cmd_tx		ld a,(hl)						00331D B7                  B     6    				or a
00331E CA BE 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003322 E5                  B     9    				push hl							003323 21 37 68 00         B    10    				ld hl,serial_filename
003327 01100000            B    11    				ld bc,16
00332B AF                  B    12    				xor a
00332C CD 47 16 00         B    13    				call os_bchl_memfill
003330 E1                  B    14    				pop hl
                           B    15    			
003331 0610                B    16    				ld b,16							003333 11 37 68 00         B    17    				ld de,serial_filename
003337 CD 4C 13 00         B    18    				call os_copy_ascii_run			00333B 79                  B    19    				ld a,c
00333C 32 49 68 00         B    20    				ld (serial_fn_length),a
003340 CD F5 10 00         B    21    				call os_scan_for_space
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
                           B    22    							
003344 CD 50 1D 00         B    23    				call hexword_or_bust			003348 CA C6 16 00         B    24    				jp z,os_no_start_addr			00334C ED53 2E 68 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003351 CD 50 1D 00         B    27    				call hexword_or_bust			003355 CA CA 16 00         B    28    				jp z,os_no_filesize
003359 ED53 31 68 00       B    29    				ld (serial_file_length),de
00335E 21000000            B    30    				ld hl,0
003362 3E07                B    31    				ld a,07h						003364 B7                  B    32    				or a
003365 ED5A                B    33    				adc hl,de
003367 28 1D               B    34    				jr z,s_error
                           B    35    				
003369 21 46 64 00         B    36    				ld hl,ser_send_msg
00336D CD 3D 15 00         B    37    				call os_show_packed_text
                           B    38    			
003371 ED5B 31 68 00       B    39    				ld de,(serial_file_length)
003376 21 37 68 00         B    40    				ld hl,serial_filename			00337A DD2A 2E 68 00       B    41    				ld ix,(serial_ez80_address)
00337F CD F2 4D 00         B    42    				call serial_send_file
003383 C0                  B    43    				ret nz			
                           B    44    			
003384 3E20                B    45    				ld a,020h						003386 B7                  B    46    s_error			or a
003387 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
003388 CD 50 1D 00         B     5    os_cmd_t		call hexword_or_bust			00338C 28 05               B     6    				jr z,t_no_hex					00338E ED53 67 6A 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003393 0610                B     9    t_no_hex		ld b,16
003395 C5                  B    10    smaalp			push bc
                           B    11    				
003396 21 D9 33 00         B    12    				ld hl,gtr_cmd_prefix			00339A CD 60 10 00         B    13    				call os_print_string
00339E ED5B 67 6A 00       B    14    				ld de,(mem_mon_addr)
0033A3 CD 3E 14 00         B    15    				call os_show_hex_address
                           B    16    
0033A7 21 D1 6A 00         B    17    				ld hl,output_line
0033AB 3620                B    18    				ld (hl),' '
0033AD 23                  B    19    				inc hl
0033AE 3622                B    20    				ld (hl),022h
0033B0 0610                B    21    				ld b,16
0033B2 23                  B    22    mabllp			inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
0033B3 1A                  B    23    				ld a,(de)	
0033B4 FE20                B    24    				cp 020h
0033B6 38 04               B    25    				jr c,chchar
0033B8 FE7F                B    26    				cp 07fh
0033BA 38 02               B    27    				jr c,nchchar
0033BC 3E7C                B    28    chchar			ld a,07ch
0033BE 77                  B    29    nchchar			ld (hl),a
0033BF 13                  B    30    				inc de
0033C0 10 F0               B    31    				djnz mabllp
                           B    32    
0033C2 ED53 67 6A 00       B    33    				ld (mem_mon_addr),de
0033C7 23                  B    34    				inc hl
0033C8 3622                B    35    				ld (hl),022h
0033CA 23                  B    36    				inc hl
0033CB 360B                B    37    				ld (hl),11
0033CD 23                  B    38    				inc hl
0033CE 3600                B    39    				ld (hl),0
0033D0 CD 69 14 00         B    40    				call os_print_output_line
0033D4 C1                  B    41    				pop bc
0033D5 10 BE               B    42    				djnz smaalp
0033D7 AF                  B    43    				xor a
0033D8 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0033D9 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0033DC                     B     5    os_cmd_remount
                           B     6    
0033DC 3E00                B     7    				ld a,0							0033DE CD F4 18 00         B     8    				call os_mount_volumes
0033E2 CD 06 15 00         B     9    				call os_new_line
0033E6 AF                  B    10    				xor a
0033E7 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.04
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0033E8 E5                  B     6    os_cmd_vers		push hl
0033E9 CD 7E 48 00         B     7    				call hwsc_get_version
0033ED 22100100            B     8    				ld (scratch_pad+10h),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
0033F1 ED531301 00         B     9    				ld (scratch_pad+13h),de
0033F6 E1                  B    10    				pop hl
0033F7 7E                  B    11    				ld a,(hl)
0033F8 FE23                B    12    				cp '#'
0033FA 20 13               B    13    				jr nz,vers_not_quiet
                           B    14    				
0033FC CD 78 3B 00         B    15    				call clear_output_envars
003400 DD211001 00         B    16    				ld ix,scratch_pad+10h
003405 0602                B    17    				ld b,2
003407 0E00                B    18    				ld c,0
003409 CD 45 3B 00         B    19    				call os_output_to_envars
00340D AF                  B    20    				xor a
00340E C9                  B    21    				ret
                           B    22    								
                           B    23    				
00340F 21 C3 5E 00         B    24    vers_not_quiet	ld hl,os_version_txt
003413 CD 60 10 00         B    25    				call os_print_string
                           B    26    			
003417 CD 7E 48 00         B    27    				call hwsc_get_version
00341B D5                  B    28    				push de
00341C EB                  B    29    				ex de,hl
00341D CD 5D 14 00         B    30    				call os_show_hex_word
                           B    31    				
003421 21 DE 5E 00         B    32    				ld hl,fwd_slash_txt
003425 CD 60 10 00         B    33    				call os_print_string
                           B    34    				
003429 21 D0 5E 00         B    35    				ld hl,hw_version_txt
00342D CD 60 10 00         B    36    				call os_print_string
003431 D1                  B    37    				pop de
003432 CD 5D 14 00         B    38    				call os_show_hex_word
                           B    39    				
003436 CD 06 15 00         B    40    				call os_new_line
00343A CD 06 15 00         B    41    				call os_new_line	
00343E AF                  B    42    				xor a
00343F C9                  B    43    				ret
                           B    44    				
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    	
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003440                     B     7    os_cmd_ltn
                           B     8    
003440 AF                  B     9    				xor a
003441 C9                  B    10    				ret
                           B    11    
                           B    12    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003442                     B     5    os_cmd_pen
                           B     6    	
003442 0612                B     7    				ld b,18							003444 DD21 F2 67 00       B     8    				ld ix,current_pen
                           B     9    				
003449 CD 50 1D 00         B    10    chpenlp			call hexword_or_bust			00344D 28 0D               B    11    				jr z,pendone					00344F 23                  B    12    				inc hl
003450 DD7300              B    13    				ld (ix),e
003453 DD7201              B    14    				ld (ix+1),d
003456 DD23                B    15    				inc ix
003458 DD23                B    16    				inc ix
00345A 10 ED               B    17    				djnz chpenlp	
                           B    18    				
00345C 21 F6 67 00         B    19    pendone			ld hl,pen_palette				003460 CD FB 45 00         B    20    				call hswc_set_ui_colours
003464 AF                  B    21    				xor a
003465 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
003466                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
003466 CD DB 42 00         B    15    				call disable_ms_irq
                           B    16    
00346A 21 B6 69 00         B    17    				ld hl,devices_connected
00346E CB8E                B    18    				res 1,(hl)
                           B    19    		
003470 CD 07 4A 00         B    20    				call init_mouse
003474 C0                  B    21    				ret nz
                           B    22    			
003475 AF                  B    23    				xor a
003476 32 A8 6B 00         B    24    				ld (mouse_packet_index),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
00347A 32 A9 6B 00         B    25    				ld (mouse_buttons),a
00347E 21000000            B    26    				ld hl,0
003482 22 AA 6B 00         B    27    				ld (mouse_disp_x),hl
003486 22 AD 6B 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00348A 21800200            B    30    				ld hl,window_width_pixels
00348E 11E00100            B    31    				ld de,window_height_pixels
003492 CD 87 15 00         B    32    				call os_set_mouse_window
                           B    33    
003496 CD D5 42 00         B    34    				call enable_ms_irq
                           B    35    
00349A 21 B6 69 00         B    36    				ld hl,devices_connected
00349E CBCE                B    37    				set 1,(hl)
0034A0 AF                  B    38    				xor a
0034A1 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
0034A2                     B     5    os_cmd_vmode
                           B     6    	
0034A2 CD 50 1D 00         B     7    				call hexword_or_bust			0034A6 20 04               B     8    				jr nz,vm_data					0034A8 3E81                B     9    				ld a,81h						0034AA B7                  B    10    				or a
0034AB C9                  B    11    				ret
                           B    12    
0034AC 7B                  B    13    vm_data			ld a,e
0034AD CD 20 16 00         B    14    				call os_set_vmode
0034B1 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0034B2 CD 4E 17 00         B     5    os_cmd_font		call os_check_volume_format	
0034B6 C0                  B     6    				ret nz
                           B     7    				
0034B7 CD 13 3C 00         B     8    				call os_cache_original_vol_dir
0034BB CD C4 34 00         B     9    				call do_font
0034BF CD FE 3B 00         B    10    				call os_restore_original_vol_di
0034C3 C9                  B    11    				ret
                           B    12    
0034C4 CD FE 10 00         B    13    do_font			call os_scan_for_non_space		0034C8 CA 79 2D 00         B    14    				jp z,missing_args
                           B    15    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
0034CC AF                  B    16    				xor a							0034CD CD 94 3B 00         B    17    				call os_parse_path_string
0034D1 C0                  B    18    				ret nz
0034D2 22000100            B    19    				ld (scratch_pad),hl				                           B    20    
0034D6 CD E6 16 00         B    21    				call os_find_file				0034DA 28 17               B    22    				jr z,got_font
                           B    23    
0034DC CD AD 17 00         B    24    				call os_root_dir				0034E0 C0                  B    25    				ret nz
0034E1 21 43 35 00         B    26    				ld hl,fonts_fn
0034E5 CD 9D 17 00         B    27    				call os_change_dir
0034E9 C0                  B    28    				ret nz
0034EA 2A000100            B    29    				ld hl,(scratch_pad)
0034EE CD E6 16 00         B    30    				call os_find_file				0034F2 C0                  B    31    				ret nz
                           B    32    				
0034F3 11000800            B    33    got_font		ld de,800h
0034F7 CD F5 16 00         B    34    				call os_set_load_length			0034FB 21000080            B    35    				ld hl,vram_a_addr				0034FF CD 13 17 00         B    36    				call os_read_bytes_from_file
003503 CD 09 35 00         B    37    				call convert_font
003507 AF                  B    38    				xor a
003508 C9                  B    39    				ret
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    				
003509 1EFF                B    43    convert_font	ld e,255						00350B 01080000            B    44    				ld bc,8
00350F 21F80780            B    45    				ld hl,vram_a_addr+07f8h	
003513 CD 1E 35 00         B    46    conv_allch		call char_to_font
003517 AF                  B    47    				xor a
003518 ED42                B    48    				sbc hl,bc
00351A 1D                  B    49    				dec e
00351B 20 F6               B    50    				jr nz,conv_allch
00351D C9                  B    51    				ret
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    
                           B    55    ; set E = character number
                           B    56    ;     HL = character source def address
                           B    57    
00351E E5                  B    58    char_to_font	push hl
00351F C5                  B    59    				push bc
003520 01400000            B    60    				ld bc,64
003524 43                  B    61    				ld b,e
003525 ED4C                B    62    				mlt bc
003527 DD210000 80         B    63    				ld ix,vram_a_addr
00352C DD09                B    64    				add ix,bc
00352E CD 36 35 00         B    65    				call conv_char
003532 C1                  B    66    				pop bc
003533 E1                  B    67    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
003534 AF                  B    68    				xor a
003535 C9                  B    69    				ret
                           B    70    	
                           B    71    ;----------------------------------------------
                           B    72    
003536 0608                B    73    conv_char		ld b,8
003538 7E                  B    74    bfontlp1		ld a,(hl)
003539 DD7700              B    75    				ld (ix),a
00353C 23                  B    76    				inc hl
00353D ED3208              B    77    				lea ix,ix+8
003540 10 F6               B    78    				djnz bfontlp1
003542 C9                  B    79    				ret	
                           B    80    				
                           B    81    ;----------------------------------------------
                           B    82    
003543 666F6E74 7300       B    83    fonts_fn		db "fonts",0
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.02
                           B     3    ;
                           B     4    ; Command should be in format: SET BLAH = SOMET
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
003549 7E                  B     8    os_cmd_set		ld a,(hl)					; i
00354A B7                  B     9    				or a
00354B 28 61               B    10    				jr z,show_envars
                           B    11    		
00354D 11030100            B    12    				ld de,scratch_pad+3			; p
003551 7E                  B    13    evsalp1			ld a,(hl)
003552 12                  B    14    				ld (de),a
003553 B7                  B    15    				or a
003554 28 54               B    16    				jr z,set_bad_args
003556 FE3D                B    17    				cp '='
003558 28 11               B    18    				jr z,ev_goteq
00355A FE20                B    19    				cp ' '
00355C 28 04               B    20    				jr z,set_fequ
00355E 23                  B    21    				inc hl
00355F 13                  B    22    				inc de
003560 18 EF               B    23    				jr evsalp1
                           B    24    
003562 23                  B    25    set_fequ		inc hl						; f
003563 7E                  B    26    				ld a,(hl)
003564 B7                  B    27    				or a
003565 28 43               B    28    				jr z,set_bad_args
003567 FE3D                B    29    				cp '='
003569 20 F7               B    30    				jr nz,set_fequ
                           B    31    				
00356B 23                  B    32    ev_goteq		inc hl
00356C CD FE 10 00         B    33    				call os_scan_for_non_space		Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
003570 28 38               B    34    				jr z,set_bad_args
                           B    35    				
003572 AF                  B    36    				xor a
003573 12                  B    37    				ld (de),a
003574 13                  B    38    				inc de
003575 ED530001 00         B    39    				ld (scratch_pad),de				                           B    40    				
00357A 7E                  B    41    				ld a,(hl)
00357B 0E00                B    42    				ld c,0
00357D FE22                B    43    				cp 022h						
00357F 20 02               B    44    				jr nz,set_noquotes
003581 0C                  B    45    				inc c
003582 23                  B    46    				inc hl
                           B    47    
003583 7E                  B    48    set_noquotes	ld a,(hl)
003584 12                  B    49    				ld (de),a
003585 CB41                B    50    				bit 0,c
003587 28 06               B    51    				jr z,set_fcs
003589 FE22                B    52    				cp 022h
00358B 28 0D               B    53    				jr z,evsadone2
00358D 18 04               B    54    				jr set_igsp
00358F FE20                B    55    set_fcs			cp ' '
003591 28 07               B    56    				jr z,evsadone2
003593 B7                  B    57    set_igsp		or a
003594 28 14               B    58    				jr z,set_bad_args
003596 23                  B    59    				inc hl
003597 13                  B    60    				inc de
003598 18 E9               B    61    				jr set_noquotes
00359A AF                  B    62    evsadone2		xor a
00359B 12                  B    63    				ld (de),a
                           B    64    				
00359C 21030100            B    65    				ld hl,scratch_pad+3
0035A0 ED5B0001 00         B    66    				ld de,(scratch_pad)
0035A5 CD 36 1C 00         B    67    				call os_set_envar
0035A9 C9                  B    68    				ret
                           B    69    
0035AA 3E82                B    70    set_bad_args	ld a,82h
0035AC B7                  B    71    				or a
0035AD C9                  B    72    				ret
                           B    73    				
                           B    74    
0035AE 21000200            B    75    show_envars		ld hl,envar_list
                           B    76    				
0035B2 7E                  B    77    show_envlp		ld a,(hl)
0035B3 FEFF                B    78    				cp 0ffh
0035B5 28 12               B    79    				jr z,set_done
0035B7 E5                  B    80    				push hl
0035B8 CD 60 10 00         B    81    				call os_print_string
0035BC CD 06 15 00         B    82    				call os_new_line
0035C0 E1                  B    83    				pop hl
                           B    84    				
0035C1 23                  B    85    set_fnl			inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0035C2 7E                  B    86    				ld a,(hl)
0035C3 B7                  B    87    				or a
0035C4 20 FB               B    88    				jr nz,set_fnl
0035C6 23                  B    89    				inc hl
0035C7 18 E9               B    90    				jr show_envlp
                           B    91    				
0035C9 AF                  B    92    set_done		xor a
0035CA C9                  B    93    				ret
                           B    94    								
                           B    95    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
0035CB FD21 E0 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
0035D0 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
0035D4 C3 02 1E 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
0035D8 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					0035DC ED53 6B 36 00       B     6    				ld (aud_per),de
0035E1 3E40                B     7    				ld a,64
0035E3 32 6D 36 00         B     8    				ld (aud_vol),a
0035E7 3E11                B     9    				ld a,11h
0035E9 32 6E 36 00         B    10    				ld (aud_chans),a
                           B    11    				
0035ED CD 50 1D 00         B    12    				call hexword_or_bust			0035F1 20 06               B    13    				jr nz,alocok					0035F3 CD D2 4B 00         B    14    				call hwsc_disable_audio			0035F7 AF                  B    15    				xor a
0035F8 C9                  B    16    				ret
0035F9 ED53 5F 36 00       B    17    alocok			ld (aud_loc),de
0035FE ED53 65 36 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
003603 CD 50 1D 00         B    20    				call hexword_or_bust
003607 20 04               B    21    				jr nz,gotaudlen
003609 3E8D                B    22    missaudpar		ld a,8dh						00360B B7                  B    23    				or a
00360C C9                  B    24    				ret				
00360D ED53 62 36 00       B    25    gotaudlen		ld (aud_len),de
003612 ED53 68 36 00       B    26    				ld (aud_len_loop),de
                           B    27    				
003617 CD 50 1D 00         B    28    				call hexword_or_bust
00361B 28 33               B    29    				jr z,play_sound
00361D 7B                  B    30    				ld a,e
00361E 32 6B 36 00         B    31    				ld (aud_per),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
003622 7A                  B    32    				ld a,d
003623 32 6C 36 00         B    33    				ld (aud_per+1),a
                           B    34    				
003627 CD 50 1D 00         B    35    				call hexword_or_bust
00362B 28 23               B    36    				jr z,play_sound
00362D 7B                  B    37    				ld a,e
00362E 32 6D 36 00         B    38    				ld (aud_vol),a
                           B    39    				
003632 CD 50 1D 00         B    40    				call hexword_or_bust
003636 28 18               B    41    				jr z,play_sound
003638 7B                  B    42    				ld a,e
003639 32 6E 36 00         B    43    				ld (aud_chans),a
                           B    44    				
00363D CD 50 1D 00         B    45    				call hexword_or_bust
003641 28 0D               B    46    				jr z,play_sound
003643 7B                  B    47    				ld a,e
003644 B7                  B    48    				or a
003645 20 09               B    49    				jr nz,play_sound
003647 11010000            B    50    				ld de,1
00364B ED53 68 36 00       B    51    				ld (aud_len_loop),de
                           B    52    				
003650 21 5F 36 00         B    53    play_sound		ld hl,audio_structure
003654 3A 6E 36 00         B    54    				ld a,(aud_chans)
003658 4F                  B    55    				ld c,a
003659 CD 85 4B 00         B    56    				call hwsc_play_audio
00365D AF                  B    57    				xor a
00365E C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
00365F                     B    63    audio_structure
                           B    64    
00365F 000000              B    65    aud_loc			dw24 0			;loc
003662 000000              B    66    aud_len			dw24 0			;len
003665 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
003668 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
00366B FFFF                B    70    aud_per			dw 0ffffh		;per
00366D 40                  B    71    aud_vol			db 64			;vol
                           B    72    
00366E 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           B     0    	include 'commands\avail.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Avail" = Show OS / Hardware version v0.03
                           B     3    ;----------------------------------------------
                           B     4    
00366F 7E                  B     5    os_cmd_avail	ld a,(hl)
003670 FE23                B     6    				cp '#'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\avail.asm
003672 20 13               B     7    				jr nz,avnoenv
                           B     8    				
003674 CD 78 3B 00         B     9    				call clear_output_envars		003678 DD21 B7 69 00       B    10    				ld ix,free_sysram_base
00367D 0606                B    11    				ld b,6
00367F 0E00                B    12    				ld c,0
003681 CD 45 3B 00         B    13    				call os_output_to_envars
003685 AF                  B    14    				xor a
003686 C9                  B    15    				ret
                           B    16    				
                           B    17    								
003687 DD21 B7 69 00       B    18    avnoenv			ld ix,free_sysram_base
00368C 21 D6 36 00         B    19    				ld hl,sysram_txt
003690 CD 60 10 00         B    20    				call os_print_string
003694 CD BA 36 00         B    21    				call show_range
                           B    22    				
003698 21 E5 36 00         B    23    				ld hl,vram_a_txt
00369C CD 60 10 00         B    24    				call os_print_string
0036A0 CD BA 36 00         B    25    				call show_range
                           B    26    				
0036A4 21 F3 36 00         B    27    				ld hl,vram_b_txt
0036A8 CD 60 10 00         B    28    				call os_print_string
0036AC CD BA 36 00         B    29    				call show_range
                           B    30    				
0036B0 CD 06 15 00         B    31    				call os_new_line
0036B4 CD 06 15 00         B    32    				call os_new_line	
0036B8 AF                  B    33    				xor a
0036B9 C9                  B    34    				ret
                           B    35    				
                           B    36    				
0036BA DD1700              B    37    show_range		ld de,(ix)
0036BD CD 3E 14 00         B    38    				call os_show_hex_address
0036C1 3E2D                B    39    				ld a,'-'
0036C3 CD A2 10 00         B    40    				call os_print_char
0036C7 DD1703              B    41    				ld de,(ix+3)
0036CA CD 3E 14 00         B    42    				call os_show_hex_address
0036CE CD 06 15 00         B    43    				call os_new_line
0036D2 ED3206              B    44    				lea ix,ix+6
0036D5 C9                  B    45    				ret
                           B    46    
                           B    47    			
                           B    48    
0036D6 0B537973 74656D20   B    49    sysram_txt		db 11,'System  RAM: ',0
0036DE 2052414D 3A2000 
0036E5 56696465 6F202020   B    50    vram_a_txt		db    'Video   RAM: ',0
0036ED 52414D3A 2000 
0036F3 5370722F 41756420   B    51    vram_b_txt		db    'Spr/Aud RAM: ',0
0036FB 52414D3A 2000 
                           B    52    
                           B    53    
                           B    54    ;----------------------------------------------
                           B    55    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
                           B     0    	include 'commands\fi.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "FI" = Show file info.  v0.02
                           B     3    ;----------------------------------------------
                           B     4    
003701 CD FE 10 00         B     5    os_cmd_fi		call os_scan_for_non_space		003705 CA 79 2D 00         B     6    				jp z,missing_args
                           B     7    								
003709 CD 4E 17 00         B     8    				call os_check_volume_format	
00370D C0                  B     9    				ret nz
                           B    10    
00370E CD 13 3C 00         B    11    				call os_cache_original_vol_dir
003712 CD 1B 37 00         B    12    				call do_fi
003716 CD FE 3B 00         B    13    				call os_restore_original_vol_di
00371A C9                  B    14    				ret
                           B    15    
00371B E5                  B    16    do_fi			push hl
00371C CD E9 10 00         B    17    				call os_next_arg
003720 7E                  B    18    				ld a,(hl)	
003721 32220100            B    19    				ld (scratch_pad+34),a			003725 E1                  B    20    				pop hl
                           B    21    
003726 AF                  B    22    				xor a							003727 CD 94 3B 00         B    23    				call os_parse_path_string
00372B C0                  B    24    				ret nz
                           B    25    
00372C CD E6 16 00         B    26    				call os_find_file				003730 28 12               B    27    				jr z,fi_filexists
003732 F5                  B    28    				push af							003733 3A220100            B    29    				ld a,(scratch_pad+34)			003737 FE23                B    30    				cp '#'
003739 28 02               B    31    				jr z,fi_remove
00373B F1                  B    32    				pop af
00373C C9                  B    33    				ret
                           B    34    				
00373D CD 78 3B 00         B    35    fi_remove		call clear_output_envars
003741 F1                  B    36    				pop af
003742 AF                  B    37    				xor a							003743 C9                  B    38    				ret
                           B    39    				
                           B    40    				
                           B    41    				
003744 21260100            B    42    fi_filexists	ld hl,scratch_pad+38
003748 71                  B    43    				ld (hl),c
003749 ED532301 00         B    44    				ld (scratch_pad+35),de			                           B    45    				
00374E 11100000            B    46    				ld de,16
003752 CD F5 16 00         B    47    				call os_set_load_length			                           B    48    				
003756 21100100            B    49    				ld hl,scratch_pad+16			00375A CD 13 17 00         B    50    				call os_read_bytes_from_file
00375E C0                  B    51    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
                           B    52    
00375F FD211501 00         B    53    				ld iy,scratch_pad+16+5			003764 DD213001 00         B    54    				ld ix,scratch_pad+48			003769 CD 1D 38 00         B    55    				call fi_conv_w24				00376D CD 1D 38 00         B    56    				call fi_conv_w24				003771 CD 2A 38 00         B    57    				call fi_conv_w16				003775 CD 2A 38 00         B    58    				call fi_conv_w16				003779 11000000            B    59    				ld de,0
00377D FD5E00              B    60    				ld e,(iy)
003780 DD1F00              B    61    				ld (ix),de						                           B    62    
003783 3A220100            B    63    				ld a,(scratch_pad+34)
003787 FE23                B    64    				cp '#'
003789 28 31               B    65    				jr z,fi_quiet
                           B    66    				
00378B CD FF 37 00         B    67    				call fi_show_length				                           B    68    				
00378F CD 3E 38 00         B    69    				call test_ezp
003793 20 21               B    70    				jr nz,not_ezp_file
                           B    71    				
003795 21 5B 38 00         B    72    				ld hl,fi_txt2					003799 0605                B    73    				ld b,5
00379B DD213001 00         B    74    				ld ix,scratch_pad+48	
0037A0 CD 60 10 00         B    75    fi_sptlp		call os_print_string
0037A4 E5                  B    76    				push hl
0037A5 DD1700              B    77    				ld de,(ix+0)
0037A8 CD 3E 14 00         B    78    				call os_show_hex_address
0037AC CD 06 15 00         B    79    				call os_new_line
0037B0 E1                  B    80    				pop hl
0037B1 ED3203              B    81    				lea ix,ix+3
0037B4 10 EA               B    82    				djnz fi_sptlp
                           B    83    				
0037B6 CD 06 15 00         B    84    not_ezp_file	call os_new_line
0037BA AF                  B    85    				xor a
0037BB C9                  B    86    				ret
                           B    87    				
                           B    88    
                           B    89    
0037BC E5                  B    90    fi_quiet		push hl
0037BD CD 78 3B 00         B    91    				call clear_output_envars
0037C1 E1                  B    92    				pop hl	
                           B    93    
0037C2 11260100            B    94    				ld de,scratch_pad+38			0037C6 21280100            B    95    				ld hl,scratch_pad+40
0037CA E5                  B    96    				push hl
0037CB 0604                B    97    				ld b,4
0037CD CD 9B 11 00         B    98    				call n_hexbytes_to_ascii
0037D1 3600                B    99    				ld (hl),0
0037D3 D1                  B   100    				pop de
0037D4 DD21 80 5F 00       B   101    				ld ix,envar_out_n_txt
0037D9 DD360330            B   102    				ld (ix+3),'0'
0037DD DD360430            B   103    				ld (ix+4),'0'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
0037E1 DDE5                B   104    				push ix
0037E3 E1                  B   105    				pop hl
0037E4 CD 36 1C 00         B   106    				call os_set_envar
                           B   107    				
0037E8 CD 3E 38 00         B   108    				call test_ezp
0037EC 28 02               B   109    				jr z,q_ezp_file
0037EE AF                  B   110    				xor a
0037EF C9                  B   111    				ret
                           B   112    				
0037F0 DD213001 00         B   113    q_ezp_file		ld ix,scratch_pad+48			0037F5 0605                B   114    				ld b,5
0037F7 0E01                B   115    				ld c,1
0037F9 CD 45 3B 00         B   116    				call os_output_to_envars		0037FD AF                  B   117    				xor a
0037FE C9                  B   118    				ret
                           B   119    
                           B   120    
                           B   121    
0037FF 21 4A 38 00         B   122    fi_show_length	ld hl,fi_txt
003803 CD 60 10 00         B   123    				call os_print_string
003807 3A260100            B   124    				ld a,(scratch_pad+38)
00380B CD 52 14 00         B   125    				call os_show_hex_byte
00380F ED5B2301 00         B   126    				ld de,(scratch_pad+35)
003814 CD 3E 14 00         B   127    				call os_show_hex_address
003818 CD 06 15 00         B   128    				call os_new_line
00381C C9                  B   129    				ret
                           B   130    
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
00381D FD1700              B   134    fi_conv_w24		ld de,(iy)
003820 DD1F00              B   135    				ld (ix),de
003823 ED3203              B   136    				lea ix,ix+3
003826 ED3303              B   137    				lea iy,iy+3
003829 C9                  B   138    				ret
                           B   139    				
00382A 11000000            B   140    fi_conv_w16		ld de,0
00382E FD5E00              B   141    				ld e,(iy)
003831 FD5601              B   142    				ld d,(iy+1)
003834 DD1F00              B   143    				ld (ix),de
003837 ED3203              B   144    				lea ix,ix+3
00383A ED3302              B   145    				lea iy,iy+2
00383D C9                  B   146    				ret
                           B   147    
                           B   148    ;----------------------------------------------
                           B   149    
                           B   150    
00383E 2A120100            B   151    test_ezp		ld hl,(scratch_pad+16+2)		003842 AF                  B   152    				xor a
003843 1150524F            B   153    				ld de,04f5250h	
003847 ED52                B   154    				sbc hl,de
003849 C9                  B   155    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
                           B   156    					
                           B   157    ;----------------------------------------------
                           B   158    				
00384A 546F7461 6C204C65   B   159    fi_txt			db "Total Length  : ",0
003852 6E677468 20203A20 
00385A 00 
00385B 4C6F6164 204C6F63   B   160    fi_txt2			db "Load Location : ",0
003863 6174696F 6E203A20 
00386B 00 
00386C 5472756E 63617465   B   161    				db "Truncate to   : ",0
003874 20746F20 20203A20 
00387C 00 
00387D 50524F53 45205265   B   162    				db "PROSE Reqd    : ",0
003885 71642020 20203A20 
00388D 00 
00388E 414D4F45 42412052   B   163    				db "AMOEBA Reqd   : ",0
003896 65716420 20203A20 
00389E 00 
00389F 41444C20 6D6F6465   B   164    				db "ADL mode      : ",0
0038A7 20202020 20203A20 
0038AF 00 
                           B   165    
                           B   166    ;----------------------------------------------
                           B   167    
                           B     0    	include 'commands\echo.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; echo v0.01
                           B     3    ;----------------------------------------------
                           B     4    
0038B0                     B     5    os_cmd_echo
                           B     6    
0038B0 7E                  B     7    			ld a,(hl)					;if no 
0038B1 B7                  B     8    			or a
0038B2 20 04               B     9    			jr nz,got_args
0038B4 3E81                B    10    			ld a,81h					;no dat
0038B6 B7                  B    11    			or a
0038B7 C9                  B    12    			ret
                           B    13    
                           B    14    
0038B8 11000100            B    15    got_args	ld de,scratch_pad
0038BC 7E                  B    16    			ld a,(hl)					;is cha
0038BD FE22                B    17    			cp 22h
0038BF 20 0C               B    18    			jr nz,got_string
                           B    19    						
0038C1 0650                B    20    			ld b,80
0038C3 23                  B    21    echolp1		inc hl
0038C4 7E                  B    22    			ld a,(hl)
0038C5 FE22                B    23    			cp 22h
0038C7 28 04               B    24    			jr z,got_string
0038C9 12                  B    25    			ld (de),a
0038CA 13                  B    26    			inc de
0038CB 10 F6               B    27    			djnz echolp1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\echo.asm
                           B    28    
0038CD 3E0B                B    29    got_string	ld a,11
0038CF 12                  B    30    			ld (de),a					;add a 
0038D0 13                  B    31    			inc de
0038D1 AF                  B    32    			xor a
0038D2 12                  B    33    			ld (de),a
                           B    34    			
0038D3 21000100            B    35    			ld hl,scratch_pad
0038D7 CD 60 10 00         B    36    			call os_print_string
0038DB AF                  B    37    			xor a
0038DC C9                  B    38    			ret
                           B    39    			
                           B    40    ;----------------------------------------------
                           B    41    
                           A  3221    	
0038DD C9                  A  3222    os_cmd_unused	ret		; <- dummy command, sho
                           A  3223    
                           A  3224    ;----------------------------------------------
                           A  3225    
0038DE                     A  3226    os_get_mem_base
                           A  3227    
0038DE 2A B7 69 00         A  3228    		ld hl,(free_sysram_base)
0038E2 ED5B BD 69 00       A  3229    		ld de,(free_vram_a_base)
0038E7 ED4B C3 69 00       A  3230    		ld bc,(free_vram_b_base)
0038EC BF                  A  3231    		cp a
0038ED C9                  A  3232    		ret
                           A  3233    
                           A  3234    
0038EE                     A  3235    os_get_mem_top
                           A  3236    
0038EE 2A BA 69 00         A  3237    		ld hl,(free_sysram_top)
0038F2 ED5B C0 69 00       A  3238    		ld de,(free_vram_a_top)
0038F7 ED4B C6 69 00       A  3239    		ld bc,(free_vram_b_top)
0038FC BF                  A  3240    		cp a
0038FD C9                  A  3241    		ret
                           A  3242    
                           A  3243    ;----------------------------------------------
                           A  3244    
0038FE                     A  3245    ext_set_pointer
                           A  3246    
                           A  3247    ; Set D = 1: use default pointer, otherwise:
                           A  3248    
                           A  3249    ;  Set HL to location of sprite data in memory 
                           A  3250    ;  followed by:
                           A  3251    ;   $00 - palette offset
                           A  3252    ;   $00 - colour count
                           A  3253    ;  then.. palette data (starting from colour 1)
                           A  3254    
                           A  3255    ;   Set C to pointer height (max 32)
                           A  3256    ;   Set B to palette 0-3
                           A  3257    ;   Set E to enable/disable pointer sprite
                           A  3258    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3259    ;   Returns with Zero Flag set if mouse driver 
                           A  3260    				
0038FE CC 6E 16 00         A  3261    				call z,mbase_hl
                           A  3262    
003902                     A  3263    os_set_pointer
                           A  3264    
003902 7B                  A  3265    				ld a,e
003903 B7                  A  3266    				or a
003904 CA A8 39 00         A  3267    				jr z,disable_pointer
                           A  3268    				
003908 3A B6 69 00         A  3269    				ld a,(devices_connected)		00390C E602                A  3270    				and 2
00390E 20 07               A  3271    				jr nz,ok_md_enabled
003910 CD A8 39 00         A  3272    				call disable_pointer
003914 AF                  A  3273    				xor a
003915 3C                  A  3274    				inc a
003916 C9                  A  3275    				ret
                           A  3276    				
                           A  3277    				
003917 7A                  A  3278    ok_md_enabled	ld a,d
003918 E601                A  3279    				and 1
00391A 28 27               A  3280    				jr z,user_def_pointer
                           A  3281    					
00391C 21 D1 6E 00         A  3282    				ld hl,default_pointer
003920 1100FEC7            A  3283    				ld de,vram_b_addr+vram_b_size-5
003924 01 AC 00 00         A  3284    				ld bc,default_pointer_colours-d
003928 CD 92 16 00         A  3285    				call unpack_rle
                           A  3286    					
00392C 01000000            A  3287    				ld bc,0
003930 0E 14               A  3288    				ld c,default_pointer_height
003932 ED43 CF 6B 00       A  3289    				ld (os_pointer_height),bc
003937 21 7D 6F 00         A  3290    				ld hl,default_pointer_colours
00393B 3E03                A  3291    				ld a,3
00393D 32 D2 6B 00         A  3292    				ld (os_pointer_palette),a		003941 18 1F               A  3293    				jr copy_spr_pal
                           A  3294    				
003943                     A  3295    user_def_pointer
003943 78                  A  3296    				ld a,b
003944 E603                A  3297    				and 3
003946 32 D2 6B 00         A  3298    				ld (os_pointer_palette),a	
00394A 79                  A  3299    				ld a,c
00394B FE20                A  3300    				cp 020h
00394D 38 02               A  3301    				jr c,pointhok
00394F 3E20                A  3302    				ld a,020h
003951 32 CF 6B 00         A  3303    pointhok		ld (os_pointer_height),a
003955 01100000            A  3304    				ld bc,16
003959 47                  A  3305    				ld b,a
00395A ED4C                A  3306    				mlt bc							00395C 1100FEC7            A  3307    				ld de,vram_b_addr+vram_b_size-5
003960 EDB0                A  3308    				ldir							                           A  3309    							
003962 E5                  A  3310    copy_spr_pal	push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003963 01000000            A  3311    				ld bc,0
003967 4E                  A  3312    				ld c,(hl)
003968 CB21                A  3313    				sla c
00396A CB10                A  3314    				rl b							00396C 210000FF            A  3315    				ld hl,hw_palette			
003970 09                  A  3316    				add hl,bc
003971 3A D2 6B 00         A  3317    				ld a,(os_pointer_palette)		003975 CB27                A  3318    				sla a
003977 47                  A  3319    				ld b,a
003978 0E00                A  3320    				ld c,0
00397A 09                  A  3321    				add hl,bc				
00397B EB                  A  3322    				ex de,hl						00397C E1                  A  3323    				pop hl							00397D 23                  A  3324    				inc hl							00397E 0600                A  3325    				ld b,0
003980 4E                  A  3326    				ld c,(hl)
003981 CB21                A  3327    				sla c
003983 CB10                A  3328    				rl b							003985 23                  A  3329    				inc hl
003986 EDB0                A  3330    				ldir							                           A  3331    				
003988 21E07F00            A  3332    				ld hl,07fe0h
00398C 22 CC 6B 00         A  3333    				ld (os_pointer_definition),hl	003990 3E01                A  3334    				ld a,1
003992 32 CB 6B 00         A  3335    				ld (os_pointer_enable),a
003996 320118FF            A  3336    				ld (sprite_control),a			00399A 3A D2 6B 00         A  3337    				ld a,(os_pointer_palette)
00399E 320318FF            A  3338    				ld (sprite_palette_select),a	0039A2 CD 39 48 00         A  3339    				call hwsc_update_pointer_sprite
0039A6 AF                  A  3340    				xor a
0039A7 C9                  A  3341    				ret
                           A  3342    
                           A  3343    
0039A8                     A  3344    disable_pointer
                           A  3345    
0039A8 AF                  A  3346    				xor a
0039A9 32 CB 6B 00         A  3347    				ld (os_pointer_enable),a
0039AD 320118FF            A  3348    				ld (sprite_control),a			0039B1 C9                  A  3349    				ret
                           A  3350    				
                           A  3351    ;----------------------------------------------
                           A  3352    
0039B2                     A  3353    test_amoeba_vers
                           A  3354    
0039B2 CD 7E 48 00         A  3355    				call hwsc_get_version			0039B6 21060100            A  3356    				ld hl,amoeba_version_required-1
0039BA AF                  A  3357    				xor a
0039BB ED52                A  3358    				sbc hl,de
0039BD D8                  A  3359    				ret c
                           A  3360    				
0039BE 21 46 5F 00         A  3361    				ld hl,hw_warn_txt2
0039C2 11070100            A  3362    				ld de,amoeba_version_required
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0039C6 CD CE 11 00         A  3363    				call hexword_to_ascii
                           A  3364    				
0039CA 21004080            A  3365    				ld hl,vram_a_addr+16384			0039CE 222010FF            A  3366    				ld (bitmap_parameters),hl		0039D2 3600                A  3367    				ld (hl),0
0039D4 E5                  A  3368    				push hl
0039D5 D1                  A  3369    				pop de
0039D6 13                  A  3370    				inc de
0039D7 01002C01            A  3371    				ld bc,320*240
0039DB EDB0                A  3372    				ldir
                           A  3373    					
0039DD DD2138D1 80         A  3374    				ld ix,vram_a_addr+16384+(320*11
0039E2 FD21 31 5F 00       A  3375    				ld iy,hw_warn_txt1				0039E7 FD7E00              A  3376    nextwchar		ld a,(iy)
0039EA B7                  A  3377    				or a
0039EB 28 3B               A  3378    				jr z,wmsg_done
0039ED 21400000            A  3379    				ld hl,64
0039F1 67                  A  3380    				ld h,a
0039F2 ED6C                A  3381    				mlt hl
0039F4 11000080            A  3382    				ld de,vram_a_addr
0039F8 19                  A  3383    				add hl,de						0039F9 0E08                A  3384    				ld c,8
0039FB 7E                  A  3385    wpixlp2			ld a,(hl)
0039FC 0608                A  3386    				ld b,8
0039FE CB17                A  3387    wpixlp1			rl a
003A00 30 06               A  3388    				jr nc,nowpix
003A02 DD360001            A  3389    				ld (ix),1
003A06 18 04               A  3390    				jr wpixd
003A08 DD360000            A  3391    nowpix			ld (ix),0
003A0C DD23                A  3392    wpixd			inc ix
003A0E 10 EE               A  3393    				djnz wpixlp1
003A10 11380100            A  3394    				ld de,320-8
003A14 DD19                A  3395    				add ix,de
003A16 11080000            A  3396    				ld de,8
003A1A 19                  A  3397    				add hl,de
003A1B 0D                  A  3398    				dec c
003A1C 20 DD               A  3399    				jr nz,wpixlp2
                           A  3400    				
003A1E 1108F6FF            A  3401    				ld de,8-(320*8)
003A22 DD19                A  3402    				add ix,de
003A24 FD23                A  3403    				inc iy
003A26 18 BF               A  3404    				jr nextwchar
                           A  3405    
                           A  3406    
003A28 CD FC 49 00         A  3407    wmsg_done		call purge_keyboard
003A2C CD 66 42 00         A  3408    				call set_irq_vectors
003A30 CD BE 42 00         A  3409    				call enable_os_irqs
003A34 FB                  A  3410    				ei
                           A  3411    
003A35 CD D7 47 00         A  3412    wmsg_loop		call hwsc_wait_vrt			;	                           A  3413    				
003A39 11CC0C00            A  3414    				ld de,ccch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003A3D 21 64 6A 00         A  3415    				ld hl,cursorflashtimer
003A41 34                  A  3416    				inc (hl)
003A42 7E                  A  3417    				ld a,(hl)
003A43 E640                A  3418    				and 64
003A45 28 04               A  3419    				jr z,got_wcolour
003A47 11000000            A  3420    				ld de,000h
003A4B ED530200 FF         A  3421    got_wcolour		ld (hw_palette+2),de
                           A  3422    								
003A50 CD 73 4C 00         A  3423    				call os_get_key_press
003A54 FE76                A  3424    				cp 76h
003A56 20 DD               A  3425    				jr nz,wmsg_loop
003A58 C3000000            A  3426    				jp 0
                           A  3427    
                           A  3428    ;----------------------------------------------
                           A  3429    
                           A  3430    
003A5C D5                  A  3431    relativize_hl	push de						
                           A  3432    
003A5D D1                  A  3433    				pop de
003A5E D1                  A  3434    				pop de						; P
003A5F 19                  A  3435    				add hl,de
003A60 11080000            A  3436    				ld de,8
003A64 B7                  A  3437    				or a
003A65 ED52                A  3438    				sbc hl,de
003A67 3B                  A  3439    				dec sp
003A68 3B                  A  3440    				dec sp
003A69 3B                  A  3441    				dec sp
003A6A 3B                  A  3442    				dec sp
003A6B 3B                  A  3443    				dec sp
003A6C 3B                  A  3444    				dec sp
003A6D D1                  A  3445    				pop de						; o
003A6E C9                  A  3446    				ret
                           A  3447    
                           A  3448    
003A6F D5                  A  3449    relative_call	push de						
                           A  3450    
003A70 D1                  A  3451    				pop de
003A71 D1                  A  3452    				pop de						; P
003A72 19                  A  3453    				add hl,de
003A73 11080000            A  3454    				ld de,8
003A77 B7                  A  3455    				or a
003A78 ED52                A  3456    				sbc hl,de
003A7A 3B                  A  3457    				dec sp
003A7B 3B                  A  3458    				dec sp
003A7C 3B                  A  3459    				dec sp
003A7D 3B                  A  3460    				dec sp
003A7E 3B                  A  3461    				dec sp
003A7F 3B                  A  3462    				dec sp
003A80 D1                  A  3463    				pop de						; o
003A81 E9                  A  3464    				jp (hl)
                           A  3465    
                           A  3466    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3467    ;----------------------------------------------
                           A  3468    
003A82                     A  3469    os_allocate_ram
                           A  3470    
                           A  3471    ; set BC = number of bytes to allocate
                           A  3472    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3473    ; returns HL = address of allocated RAM
                           A  3474    ; ZF set if all OK
                           A  3475    
003A82 7B                  A  3476    				ld a,e
003A83 11060000            A  3477    				ld de,6
003A87 57                  A  3478    				ld d,a
003A88 ED5C                A  3479    				mlt de
003A8A DD21 B7 69 00       A  3480    				ld ix,free_sysram_base
003A8F DD19                A  3481    				add ix,de
                           A  3482    				
003A91 DD2703              A  3483    				ld hl,(ix+3)
003A94 AF                  A  3484    				xor a
003A95 ED42                A  3485    				sbc hl,bc
003A97 38 0E               A  3486    				jr c,alloc_err
003A99 DD2F03              A  3487    				ld (ix+3),hl
                           A  3488    				
003A9C DD1700              A  3489    				ld de,(ix)
003A9F AF                  A  3490    				xor a
003AA0 E5                  A  3491    				push hl
003AA1 ED52                A  3492    				sbc hl,de
003AA3 E1                  A  3493    				pop hl
003AA4 23                  A  3494    				inc hl
003AA5 30 04               A  3495    				jr nc,alloc_ok
003AA7 3E8E                A  3496    alloc_err		ld a,8eh						003AA9 B7                  A  3497    				or a
003AAA C9                  A  3498    				ret
                           A  3499    				
003AAB AF                  A  3500    alloc_ok		xor a
003AAC C9                  A  3501    				ret
                           A  3502    			
                           A  3503    
                           A  3504    
003AAD                     A  3505    os_deallocate_ram
                           A  3506    
                           A  3507    ; set BC = number of bytes to de-allocate
                           A  3508    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3509    ; returns HL = address of allocated RAM
                           A  3510    ; ZF set if all OK		
                           A  3511    
003AAD D5                  A  3512    				push de
                           A  3513    				
003AAE 7B                  A  3514    				ld a,e
003AAF 11060000            A  3515    				ld de,6
003AB3 57                  A  3516    				ld d,a
003AB4 ED5C                A  3517    				mlt de
003AB6 DD21 B7 69 00       A  3518    				ld ix,free_sysram_base
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003ABB DD19                A  3519    				add ix,de
                           A  3520    				
003ABD DD2703              A  3521    				ld hl,(ix+3)
003AC0 09                  A  3522    				add hl,bc
003AC1 DD2F03              A  3523    				ld (ix+3),hl
                           A  3524    				
003AC4 D1                  A  3525    				pop de							003AC5 7B                  A  3526    				ld a,e
003AC6 B7                  A  3527    				or a
003AC7 20 0D               A  3528    				jr nz,dealloc_ok				                           A  3529    				
003AC9 1100FE07            A  3530    				ld de,sysram_addr+sysram_size-s
003ACD AF                  A  3531    				xor a
003ACE ED52                A  3532    				sbc hl,de
003AD0 38 04               A  3533    				jr c,dealloc_ok
003AD2 1B                  A  3534    				dec de
003AD3 DD1F03              A  3535    				ld (ix+3),de
003AD6 AF                  A  3536    dealloc_ok		xor a
003AD7 C9                  A  3537    				ret
                           A  3538    				
                           A  3539    				
                           A  3540    ;----------------------------------------------
                           A  3541    
003AD8                     A  3542    os_protected_ram_test
                           A  3543    
                           A  3544    ; set bc = start of range
                           A  3545    ; set de = end of range
                           A  3546    
                           A  3547    ; Returns ZF set if no collision
                           A  3548    
                           A  3549    
003AD8 DD21 B7 69 00       A  3550    				ld ix,free_sysram_base			003ADD DD2700              A  3551    				ld hl,(ix)
003AE0 AF                  A  3552    				xor a
003AE1 ED42                A  3553    				sbc hl,bc
003AE3 38 04               A  3554    				jr c,no_prose_hit
003AE5 3E26                A  3555    				ld a,26h						003AE7 B7                  A  3556    				or a
003AE8 C9                  A  3557    				ret
                           A  3558    				
003AE9 DD2706              A  3559    no_prose_hit	ld hl,(ix+6)					003AEC AF                  A  3560    				xor a
003AED ED42                A  3561    				sbc hl,bc
003AEF 38 0D               A  3562    				jr c,no_vram_a_low_hit
003AF1 21000080            A  3563    				ld hl,800000h
003AF5 AF                  A  3564    				xor a
003AF6 ED52                A  3565    				sbc hl,de
003AF8 30 04               A  3566    				jr nc,no_vram_a_low_hit
003AFA 3E36                A  3567    				ld a,36h						003AFC B7                  A  3568    				or a
003AFD C9                  A  3569    				ret
                           A  3570    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003AFE                     A  3571    no_vram_a_low_hit
                           A  3572    				
003AFE CD 13 3B 00         A  3573    				call test_alloc
003B02 C0                  A  3574    				ret nz
003B03 ED3206              A  3575    				lea ix,ix+6
003B06 CD 13 3B 00         A  3576    				call test_alloc
003B0A C0                  A  3577    				ret nz
003B0B ED3206              A  3578    				lea ix,ix+6
003B0E CD 13 3B 00         A  3579    				call test_alloc
003B12 C9                  A  3580    				ret 
                           A  3581    				
003B13 DD2703              A  3582    test_alloc		ld hl,(ix+3)					003B16 AF                  A  3583    				xor a
003B17 ED52                A  3584    				sbc hl,de
003B19 30 0D               A  3585    				jr nc,no_colis
003B1B 21000008            A  3586    				ld hl,sysram_addr+sysram_size	003B1F AF                  A  3587    				xor a
003B20 ED42                A  3588    				sbc hl,bc
003B22 38 04               A  3589    				jr c,no_colis
003B24 3E35                A  3590    				ld a,35h						003B26 B7                  A  3591    				or a
003B27 C9                  A  3592    				ret
                           A  3593    				
003B28 AF                  A  3594    no_colis		xor a
003B29 C9                  A  3595    				ret
                           A  3596    				
                           A  3597    ;----------------------------------------------
                           A  3598    
003B2A                     A  3599    os_protected_ram_query
                           A  3600    
003B2A F5                  A  3601    				push af
003B2B 21 4B 5F 00         A  3602    				ld hl,pmq_txt
003B2F CD 60 10 00         A  3603    				call os_print_string
003B33 CD 18 4C 00         A  3604    				call os_wait_key_press
003B37 78                  A  3605    				ld a,b
003B38 FE79                A  3606    				cp 'y'
003B3A 28 06               A  3607    				jr z,ok_pmwrite
003B3C FE59                A  3608    				cp 'Y'
003B3E 28 02               A  3609    				jr z,ok_pmwrite
003B40 F1                  A  3610    				pop af
003B41 C9                  A  3611    				ret
                           A  3612    				
003B42 F1                  A  3613    ok_pmwrite		pop af
003B43 AF                  A  3614    				xor a
003B44 C9                  A  3615    				ret
                           A  3616    
                           A  3617    ;----------------------------------------------
                           A  3618    					
003B45                     A  3619    os_output_to_envars
                           A  3620    
                           A  3621    ; Set IX to location of first 24bit value to ou
                           A  3622    ; B = number of envars to make 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3623    ; C = Start envar number
                           A  3624    				
003B45 C5                  A  3625    out_to_envlp	push bc
003B46 79                  A  3626    				ld a,c
003B47 21 83 5F 00         A  3627    				ld hl,envar_out_n_txt+3
003B4B CD A9 11 00         A  3628    				call hexbyte_to_ascii
                           A  3629    						
003B4F 21000100            A  3630    				ld hl,scratch_pad
003B53 ED1202              A  3631    				lea de,ix+2
003B56 0603                A  3632    				ld b,3
003B58 CD 9B 11 00         A  3633    				call n_hexbytes_to_ascii
003B5C 3600                A  3634    				ld (hl),0
                           A  3635    				
003B5E 21 80 5F 00         A  3636    				ld hl,envar_out_n_txt
003B62 11000100            A  3637    				ld de,scratch_pad
003B66 DDE5                A  3638    				push ix
003B68 CD 36 1C 00         A  3639    				call os_set_envar
003B6C DDE1                A  3640    				pop ix
003B6E C1                  A  3641    				pop bc
003B6F C0                  A  3642    				ret nz
                           A  3643    				
003B70 ED3203              A  3644    				lea ix,ix+3
003B73 0C                  A  3645    				inc c
003B74 10 CF               A  3646    				djnz out_to_envlp
003B76 AF                  A  3647    				xor a
003B77 C9                  A  3648    				ret			
                           A  3649    
                           A  3650    
003B78                     A  3651    clear_output_envars
                           A  3652    
003B78 0E00                A  3653    				ld c,0
003B7A C5                  A  3654    del_out_envlp	push bc
003B7B 79                  A  3655    				ld a,c
003B7C 21 83 5F 00         A  3656    				ld hl,envar_out_n_txt+3
003B80 CD A9 11 00         A  3657    				call hexbyte_to_ascii
003B84 21 80 5F 00         A  3658    				ld hl,envar_out_n_txt
003B88 CD 8C 1C 00         A  3659    				call os_delete_envar
003B8C C1                  A  3660    				pop bc
003B8D C0                  A  3661    				ret nz
003B8E 0C                  A  3662    				inc c
003B8F 10 E9               A  3663    				djnz del_out_envlp
003B91 AF                  A  3664    				xor a
003B92 C9                  A  3665    				ret			
                           A  3666    
                           A  3667    
                           A  3668    ;----------------------------------------------
                           A  3669    
003B93                     A  3670    ext_parse_path
                           A  3671    
003B93 7B                  A  3672    				ld a,e
                           A  3673    				
003B94                     A  3674    os_parse_path_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3675    
                           A  3676    ; Set HL = string address in format "locomotion
                           A  3677    ; A: 1 = change to all names in string, 0 = sto
                           A  3678    				
003B94 32060100            A  3679    				ld (scratch_pad+6),a
                           A  3680    	
003B98 E5                  A  3681    				push hl
003B99 DDE1                A  3682    				pop ix
003B9B DD7E04              A  3683    				ld a,(ix+4)
003B9E FE3A                A  3684    				cp ':'							003BA0 20 27               A  3685    				jr nz,pp_nchvol
003BA2 11 7F 68 00         A  3686    				ld de,vol_txt+1
003BA6 0603                A  3687    				ld b,3
003BA8 CD 2D 13 00         A  3688    				call os_compare_strings
003BAC 20 1B               A  3689    				jr nz,pp_nchvol
003BAE 11050000            A  3690    				ld de,5
003BB2 19                  A  3691    				add hl,de
003BB3 22 23 6B 00         A  3692    				ld (os_args_loc),hl				003BB7 DD7E03              A  3693    				ld a,(ix+3)						003BBA D630                A  3694    				sub 030h
003BBC CD 83 1B 00         A  3695    				call os_change_volume
003BC0 C0                  A  3696    				ret nz							003BC1 CD AD 17 00         A  3697    				call os_root_dir				003BC5 2A 23 6B 00         A  3698    				ld hl,(os_args_loc)	
                           A  3699    			
003BC9 E5                  A  3700    pp_nchvol		push hl
003BCA D1                  A  3701    				pop de
                           A  3702    				
003BCB 1B                  A  3703    				dec de
003BCC 13                  A  3704    pp_chkstring	inc de
003BCD 1A                  A  3705    				ld a,(de)						003BCE B7                  A  3706    				or a
003BCF 28 1D               A  3707    				jr z,pp_end
003BD1 FE20                A  3708    				cp ' '
003BD3 28 19               A  3709    				jr z,pp_end
003BD5 FE2F                A  3710    				cp '/'
003BD7 20 F3               A  3711    				jr nz,pp_chkstring
                           A  3712    
003BD9 13                  A  3713    				inc de
003BDA ED530701 00         A  3714    				ld (scratch_pad+7),de
003BDF CD 9D 17 00         A  3715    				call os_change_dir				003BE3 C0                  A  3716    				ret nz
                           A  3717    				
003BE4 2A070100            A  3718    				ld hl,(scratch_pad+7)			003BE8 22 23 6B 00         A  3719    				ld (os_args_loc),hl
003BEC 18 DB               A  3720    				jr pp_nchvol
                           A  3721    					
003BEE 3A060100            A  3722    pp_end			ld a,(scratch_pad+6)			003BF2 B7                  A  3723    				or a
003BF3 C8                  A  3724    				ret z
003BF4 ED53 23 6B 00       A  3725    				ld (os_args_loc),de	
003BF9 CD 9D 17 00         A  3726    				call os_change_dir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003BFD C9                  A  3727    				ret
                           A  3728    
                           A  3729    ;----------------------------------------------
                           A  3730    
003BFE                     A  3731    os_restore_original_vol_dir
                           A  3732    
003BFE F5                  A  3733    				push af							003BFF ED5B 3F 6B 00       A  3734    				ld de,(original_dir)
003C04 CD 33 1B 00         A  3735    				call fs_update_dir_cluster
003C08 3A 42 6B 00         A  3736    				ld a,(original_vol)
003C0C CD 83 1B 00         A  3737    				call os_change_volume	
003C10 F1                  A  3738    				pop af
003C11 B7                  A  3739    				or a
003C12 C9                  A  3740    				ret
                           A  3741    				
                           A  3742    				
003C13                     A  3743    os_cache_original_vol_dir
                           A  3744    
003C13 F5                  A  3745    				push af
003C14 C5                  A  3746    				push bc
003C15 D5                  A  3747    				push de
003C16 E5                  A  3748    				push hl
003C17 3A 7A 68 00         A  3749    				ld a,(current_volume)
003C1B 32 42 6B 00         A  3750    				ld (original_vol),a
003C1F CD 27 1B 00         A  3751    				call fs_get_dir_cluster
003C23 ED53 3F 6B 00       A  3752    				ld (original_dir),de
003C28 E1                  A  3753    				pop hl
003C29 D1                  A  3754    				pop de
003C2A C1                  A  3755    				pop bc
003C2B F1                  A  3756    				pop af
003C2C C9                  A  3757    				ret
                           A  3758    				
                           A  3759    ;----------------------------------------------
                           A  3760    
                           B     0    	include 'script_routines.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"PROSE script routines V0.04 
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003C2D CD 38 3C 00         B    22    os_do_script	call run_script
003C31 21 3B 6B 00         B    23    				ld hl,script_flags
003C35 CB86                B    24    				res scr_in_script,(hl)
003C37 C9                  B    25    				ret
                           B    26    				
003C38 21 3B 6B 00         B    27    run_script		ld hl,script_flags	
003C3C CBC6                B    28    				set scr_in_script,(hl)
                           B    29    
003C3E CD 4E 17 00         B    30    				call os_check_volume_format		003C42 C0                  B    31    				ret nz
                           B    32    				
003C43 CD 93 3D 00         B    33    				call new_script
                           B    34    
                           B    35    ;----------------------------------------------
                           B    36    
                           B    37    
003C47 3A 9F 6B 00         B    38    scrp_loop		ld a,(key_mod_flags)			003C4B E602                B    39    				and 2
003C4D 28 12               B    40    				jr z,no_quit_script	
003C4F CD 73 4C 00         B    41    				call os_get_key_press
003C53 FE21                B    42    				cp 021h							003C55 20 0A               B    43    				jr nz,no_quit_script
                           B    44    
003C57 21 5A 64 00         B    45    				ld hl,script_aborted_msg
003C5B CD 3D 15 00         B    46    				call os_show_packed_text
003C5F AF                  B    47    				xor a							003C60 C9                  B    48    				ret
                           B    49    					
                           B    50    
003C61 CD A6 3D 00         B    51    no_quit_script	call get_script_line	
003C65 C0                  B    52    				ret nz
003C66 21 3B 6B 00         B    53    				ld hl,script_flags				003C6A CB5E                B    54    				bit scr_end,(hl)
003C6C 28 02               B    55    				jr z,scr_to_do
003C6E AF                  B    56    scr_done		xor a
003C6F C9                  B    57    				ret
                           B    58    				
003C70 21 7F 6A 00         B    59    scr_to_do		ld hl,commandstring				003C74 7E                  B    60    				ld a,(hl)
003C75 FE5B                B    61    				cp '['
003C77 28 1C               B    62    				jr z,exec_scr_next
                           B    63    
003C79 11 2A 5F 00         B    64    				ld de,if_command_txt			003C7D 0603                B    65    				ld b,3
003C7F CD 2D 13 00         B    66    				call os_compare_strings
003C83 28 18               B    67    				jr z,do_exec_if
                           B    68    				
003C85 11 2D 5F 00         B    69    				ld de,end_command_txt			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003C89 0604                B    70    				ld b,4
003C8B CD 2D 13 00         B    71    				call os_compare_strings
003C8F 28 DD               B    72    				jr z,scr_done
                           B    73    			
003C91 CD C8 0C 00         B    74    				call os_parse_cmd_chk_ps		                           B    75    				
003C95 21 3B 6B 00         B    76    exec_scr_next	ld hl,script_flags
003C99 CBCE                B    77    				set scr_find_new_line,(hl)
003C9B 18 AA               B    78    				jr scrp_loop
                           B    79    
                           B    80    		
                           B    81    ;----------------------------------------------
                           B    82    
                           B    83    ; Handle "IF" instructions in the format:
                           B    84    
                           B    85    ; "IF ENVAR = VALUE LABLE"
                           B    86    ; "IF ENVAR <> VALUE LABLE"
                           B    87    ;  (LABEL must be declared at start of a script
                           B    88    ;  square brackets ([label]) with no other data
                           B    89    
003C9D 21 81 6A 00         B    90    do_exec_if		ld hl,commandstring+2			003CA1 CD FE 10 00         B    91    				call os_scan_for_non_space
003CA5 CA DF 3D 00         B    92    				jr z,script_error				003CA9 11 43 6B 00         B    93    				ld de,if_name_txt
003CAD 0610                B    94    				ld b,max_if_chars
003CAF CD 4C 13 00         B    95    				call os_copy_ascii_run			003CB3 AF                  B    96    				xor a
003CB4 12                  B    97    				ld (de),a
                           B    98    				
003CB5 CD FE 10 00         B    99    				call os_scan_for_non_space		003CB9 CA DF 3D 00         B   100    				jr z,script_error
003CBD DD21 3B 6B 00       B   101    				ld ix,script_flags
003CC2 DDCB0096            B   102    				res scr_if_condition,(ix)
003CC6 7E                  B   103    				ld a,(hl)
003CC7 FE3D                B   104    				cp '='
003CC9 28 04               B   105    				jr z,if_equals
003CCB DDCB00D6            B   106    				set scr_if_condition,(ix)		                           B   107    
003CCF CD F5 10 00         B   108    if_equals		call os_scan_for_space			003CD3 CD FE 10 00         B   109    				call os_scan_for_non_space		003CD7 CA DF 3D 00         B   110    				jr z,script_error
003CDB 11 55 6B 00         B   111    				ld de,if_value_txt				003CDF 0610                B   112    				ld b,max_if_chars
003CE1 CD 4C 13 00         B   113    				call os_copy_ascii_run
003CE5 AF                  B   114    				xor a
003CE6 12                  B   115    				ld (de),a
                           B   116    				
003CE7 CD FE 10 00         B   117    				call os_scan_for_non_space
003CEB CA DF 3D 00         B   118    				jr z,script_error
003CEF 11 67 6B 00         B   119    				ld de,if_label_txt				003CF3 0610                B   120    				ld b,max_if_chars
003CF5 CD 4C 13 00         B   121    				call os_copy_ascii_run			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003CF9 AF                  B   122    				xor a
003CFA 12                  B   123    				ld (de),a						                           B   124    								
003CFB 21 43 6B 00         B   125    				ld hl,if_name_txt				003CFF CD F6 1B 00         B   126    				call os_get_envar				003D03 28 17               B   127    				jr z,scr_env_exists				                           B   128    				
003D05 3A 55 6B 00         B   129    				ld a,(if_value_txt)				003D09 FE2A                B   130    				cp '*'
003D0B 20 0B               B   131    				jr nz,if_cond_failed
003D0D DD21 3B 6B 00       B   132    				ld ix,script_flags				003D12 DDCB0056            B   133    				bit scr_if_condition,(ix)
003D16 20 3A               B   134    				jr nz,if_cond_met
003D18 C3 95 3C 00         B   135    if_cond_failed	jp exec_scr_next
                           B   136    
003D1C 3A 55 6B 00         B   137    scr_env_exists	ld a,(if_value_txt)				003D20 FE2A                B   138    				cp '*'
003D22 20 0D               B   139    				jr nz,if_test_cond
003D24 DD21 3B 6B 00       B   140    				ld ix,script_flags				003D29 DDCB0056            B   141    				bit scr_if_condition,(ix)
003D2D 20 E9               B   142    				jr nz,if_cond_failed
003D2F 18 21               B   143    				jr if_cond_met
                           B   144    
003D31 21 55 6B 00         B   145    if_test_cond	ld hl,if_value_txt
003D35 DD21 3B 6B 00       B   146    				ld ix,script_flags
003D3A DDCB0056            B   147    				bit scr_if_condition,(ix)
003D3E 20 0A               B   148    				jr nz,if_cond_diff
003D40 CD 2D 13 00         B   149    				call os_compare_strings			003D44 C2 95 3C 00         B   150    				jp nz,exec_scr_next				003D48 18 08               B   151    				jr if_cond_met
003D4A CD 2D 13 00         B   152    if_cond_diff	call os_compare_strings			003D4E CA 95 3C 00         B   153    				jp z,exec_scr_next				                           B   154    
003D52 CD 93 3D 00         B   155    if_cond_met		call new_script					                           B   156    
003D56 CD A6 3D 00         B   157    find_if_label	call get_script_line			003D5A C0                  B   158    				ret nz
003D5B 21 3B 6B 00         B   159    				ld hl,script_flags
003D5F CB5E                B   160    				bit scr_end,(hl)
003D61 C2 6E 3C 00         B   161    				jp nz,scr_done
                           B   162    				
003D65 21 7F 6A 00         B   163    				ld hl,commandstring				003D69 7E                  B   164    				ld a,(hl)
003D6A FE5B                B   165    				cp '['
003D6C 20 1D               B   166    				jr nz,not_a_label				                           B   167    				
003D6E 23                  B   168    if_find_csb		inc hl
003D6F 7E                  B   169    				ld a,(hl)
003D70 B7                  B   170    				or a
003D71 28 18               B   171    				jr z,not_a_label				003D73 FE5D                B   172    				cp ']'							003D75 20 F7               B   173    				jr nz,if_find_csb
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003D77 3600                B   174    				ld (hl),0						003D79 21 80 6A 00         B   175    				ld hl,commandstring+1
003D7D 11 67 6B 00         B   176    				ld de,if_label_txt				003D81 0610                B   177    				ld b,max_if_chars
003D83 CD 2D 13 00         B   178    				call os_compare_strings
003D87 CA 95 3C 00         B   179    				jp z,exec_scr_next				                           B   180    
003D8B 21 3B 6B 00         B   181    not_a_label		ld hl,script_flags
003D8F CBCE                B   182    				set scr_find_new_line,(hl)		003D91 18 C3               B   183    				jr find_if_label
                           B   184    											
                           B   185    ;----------------------------------------------
                           B   186    
                           B   187    
003D93 E5                  B   188    new_script		push hl
003D94 21000000            B   189    				ld hl,0
003D98 22 35 6B 00         B   190    				ld (script_file_offset),hl		003D9C 21 3B 6B 00         B   191    				ld hl,script_flags
003DA0 CB8E                B   192    				res scr_find_new_line,(hl)		003DA2 CB9E                B   193    				res scr_end,(hl)
003DA4 E1                  B   194    				pop hl
003DA5 C9                  B   195    				ret
                           B   196    
                           B   197    
                           B   198    ;----------------------------------------------
                           B   199    	
                           B   200    	
003DA6                     B   201    get_script_line
                           B   202    				
003DA6 CD 27 1B 00         B   203    				call fs_get_dir_cluster			003DAA ED53 2F 6B 00       B   204    				ld (script_orig_dir),de			003DAF ED5B 32 6B 00       B   205    				ld de,(script_dir)				003DB4 CD 33 1B 00         B   206    				call fs_update_dir_cluster
                           B   207    
003DB8 CD CE 3D 00         B   208    				call open_script				003DBC 20 04               B   209    				jr nz,scr_error
003DBE CD E3 3D 00         B   210    				call read_script				                           B   211    								
003DC2 F5                  B   212    scr_error		push af
003DC3 ED5B 2F 6B 00       B   213    				ld de,(script_orig_dir)			003DC8 CD 33 1B 00         B   214    				call fs_update_dir_cluster
003DCC F1                  B   215    				pop af
003DCD C9                  B   216    				ret
                           B   217    
                           B   218    
                           B   219    ;----------------------------------------------
                           B   220    
                           B   221    
003DCE 21 50 6A 00         B   222    open_script		ld hl,script_fn					003DD2 CD E6 16 00         B   223    				call os_find_file				003DD6 C0                  B   224    				ret nz
                           B   225    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003DD7 ED53 38 6B 00       B   226    				ld (script_length),de			003DDC 79                  B   227    				ld a,c							003DDD B7                  B   228    				or a
003DDE C8                  B   229    				ret z
                           B   230    				
003DDF 3E8C                B   231    script_error	ld a,08ch						003DE1 B7                  B   232    				or a
003DE2 C9                  B   233    				ret
                           B   234    				
                           B   235    
                           B   236    ;----------------------------------------------
                           B   237    
                           B   238    
003DE3 21 7F 6A 00         B   239    read_script		ld hl,commandstring				003DE7 01500000            B   240    				ld bc,max_buffer_chars			003DEB 3E20                B   241    				ld a,32
003DED CD 47 16 00         B   242    				call os_bchl_memfill
                           B   243    				
003DF1 11500000            B   244    				ld de,max_buffer_chars			003DF5 CD F5 16 00         B   245    				call os_set_load_length
                           B   246    				
003DF9 AF                  B   247    				xor a
003DFA 2A 38 6B 00         B   248    				ld hl,(script_length)
003DFE ED5B 35 6B 00       B   249    				ld de,(script_file_offset)		003E03 37                  B   250    				scf
003E04 ED52                B   251    				sbc hl,de						003E06 30 08               B   252    				jr nc,not_eoscr					003E08 21 3B 6B 00         B   253    				ld hl,script_flags
003E0C CBDE                B   254    				set scr_end,(hl)				003E0E AF                  B   255    				xor a
003E0F C9                  B   256    				ret
003E10 CD FD 16 00         B   257    not_eoscr		call os_set_file_pointer
                           B   258    
003E14 21 7F 6A 00         B   259    				ld hl,commandstring				003E18 CD 13 17 00         B   260    				call os_read_bytes_from_file
003E1C B7                  B   261    				or a			
003E1D 28 03               B   262    				jr z,scr_load_ok
003E1F FECC                B   263    				cp 0cch							003E21 C0                  B   264    				ret nz							                           B   265    
003E22 21 3B 6B 00         B   266    scr_load_ok		ld hl,script_flags
003E26 CB4E                B   267    				bit scr_find_new_line,(hl)		003E28 20 17               B   268    				jr nz,scr_fnl					                           B   269    
003E2A 21 7F 6A 00         B   270    				ld hl,commandstring				003E2E 0650                B   271    				ld b,max_buffer_chars
003E30 7E                  B   272    scr_fcr			ld a,(hl)
003E31 FE20                B   273    				cp 32
003E33 38 05               B   274    				jr c,scr_gotclcr
003E35 23                  B   275    				inc hl
003E36 10 F8               B   276    				djnz scr_fcr
003E38 AF                  B   277    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003E39 C9                  B   278    				ret
003E3A 3620                B   279    scr_gotclcr		ld (hl),32						003E3C 23                  B   280    				inc hl
003E3D 10 FB               B   281    				djnz scr_gotclcr
003E3F AF                  B   282    				xor a
003E40 C9                  B   283    				ret
                           B   284    
003E41 FD2A 35 6B 00       B   285    scr_fnl			ld iy,(script_file_offset)
003E46 21 7F 6A 00         B   286    				ld hl,commandstring	
003E4A 7E                  B   287    scr_find_cr		ld a,(hl)						003E4B B7                  B   288    				or a
003E4C 20 07               B   289    				jr nz,scr_neocl					003E4E FD22 35 6B 00       B   290    scr_eocl		ld (script_file_offset),iy
003E53 18 8E               B   291    				jr read_script				
003E55 FE20                B   292    scr_neocl		cp 20h							003E57 38 05               B   293    				jr c,scr_got_cr
003E59 23                  B   294    				inc hl
003E5A FD23                B   295    				inc iy
003E5C 18 EC               B   296    				jr scr_find_cr
                           B   297    				
003E5E 7E                  B   298    scr_got_cr		ld a,(hl)
003E5F B7                  B   299    				or a							003E60 28 EC               B   300    				jr z,scr_eocl					003E62 FE20                B   301    				cp 20h
003E64 30 05               B   302    				jr nc,scr_got_ch				003E66 23                  B   303    				inc hl
003E67 FD23                B   304    				inc iy
003E69 18 F3               B   305    				jr scr_got_cr
                           B   306    
003E6B FD22 35 6B 00       B   307    scr_got_ch		ld (script_file_offset),iy
003E70 21 3B 6B 00         B   308    				ld hl,script_flags				003E74 CB8E                B   309    				res scr_find_new_line,(hl)
003E76 C3 E3 3D 00         B   310    				jr read_script
                           B   311    
                           B   312    
                           B   313    ;----------------------------------------------
                           B   314    
                           B   315    		
                           B   316    				
                           B   317    				
                           B   318    				
                           B   319    				
                           B   320    				
                           A  3762    	
                           A  3763    ;----------------------------------------------
                           A  3764    ; Storage Device Drivers
                           A  3765    ;----------------------------------------------
                           A  3766    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
003E7A C3 8E 3E 00         B    76    sd_card_driver	jp sd_initialize			; $
003E7E C3 B0 3E 00         B    77    				jp sd_read_sector			; $
003E82 C3 B6 3E 00         B    78    				jp sd_write_sector			; $
003E86 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
003E8E CD BC 3E 00         B    85    sd_initialize	call sd_init_main
003E92 B7                  B    86    				or a						; i
003E93 28 05               B    87    				jr z,sd_inok
003E95 CD 4D 42 00         B    88    				call sd_power_off			; i
003E99 C9                  B    89    				ret
                           B    90    
003E9A CD 52 42 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
003E9E CD 1E 40 00         B    93    				call sd_read_cid			; a
003EA2 20 06               B    94    				jr nz,sd_done
003EA4 E5                  B    95    				push hl						; c
003EA5 CD 87 3F 00         B    96    				call sd_read_csd
003EA9 E1                  B    97    				pop hl
                           B    98    
003EAA CD 35 42 00         B    99    sd_done			call sd_deselect_card		; R
003EAE B7                  B   100    				or a						; I
003EAF C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
003EB0 CD A2 40 00         B   105    sd_read_sector	call sd_read_sector_main
003EB4 18 F4               B   106    				jr sd_done
                           B   107    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   108    ;----------------------------------------------
                           B   109    	
003EB6 CD C8 40 00         B   110    sd_write_sector	call sd_write_sector_main
003EBA 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003EBC AF                  B   115    sd_init_main	xor a							003EBD 32 CC 41 00         B   116    				ld (sd_card_info),a			
                           B   117    
003EC1 CD 4D 42 00         B   118    				call sd_power_off				                           B   119    				
003EC5 11004000            B   120    				ld de,16384						003EC9 CD 99 48 00         B   121    				call hwsc_time_delay
                           B   122    							
003ECD CD 41 42 00         B   123    				call sd_power_on				                           B   124    
003ED1 11830000            B   125    				ld de,131						003ED5 CD 99 48 00         B   126    				call hwsc_time_delay
                           B   127    				
003ED9 060A                B   128    				ld b,10							003EDB CD 51 41 00         B   129    sd_ecilp		call sd_send_eight_clocks
003EDF 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
003EE1 21 A0 41 00         B   132    				ld hl,CMD0_string				003EE5 CD 69 41 00         B   133    				call sd_send_command_string		003EE9 FE01                B   134    				cp 01h							003EEB 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003EED 3E01                B   137    				ld a,sd_error_spi_mode_failed
003EEF C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
003EF0 21 A6 41 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				003EF4 CD 69 41 00         B   143    				call sd_send_command_string
003EF8 FE01                B   144    				cp 01h
003EFA 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
003EFC 0604                B   147    				ld b,4
003EFE CD 91 41 00         B   148    				call sd_read_bytes_to_sector_bu
003F02 3E01                B   149    				ld a,1
003F04 23                  B   150    				inc hl
003F05 23                  B   151    				inc hl
003F06 BE                  B   152    				cp (hl)							003F07 28 03               B   153    				jr z,sd_vrok
003F09 3E13                B   154    				ld a,sd_error_vrange_bad
003F0B C9                  B   155    				ret				
                           B   156    
003F0C 3EAA                B   157    sd_vrok			ld a,0aah
003F0E 23                  B   158    				inc hl
003F0F BE                  B   159    				cp (hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003F10 28 03               B   160    				jr z,sd_check_pattern_ok
003F12 3E14                B   161    				ld a,sd_error_check_pattern_bad
003F14 C9                  B   162    				ret
                           B   163    				
003F15                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
003F15 01401F00            B   168    				ld bc,8000						                           B   169    
003F19 3E77                B   170    sdhc_iwl		ld a,CMD55						003F1B CD 58 41 00         B   171    				call sd_send_command_null_args
                           B   172    				
003F1F 21 AC 41 00         B   173    				ld hl,ACMD41HCS_string			003F23 CD 69 41 00         B   174    				call sd_send_command_string
003F27 28 0C               B   175    				jr z,sdhc_init_ok				003F29 CB57                B   176    				bit 2,a
003F2B 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
003F2D 0B                  B   179    				dec bc
003F2E 78                  B   180    				ld a,b
003F2F B1                  B   181    				or c
003F30 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
003F32 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	003F34 C9                  B   185    				ret
                           B   186    				
003F35                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
003F35 3E7A                B   191    				ld a,CMD58						003F37 CD 58 41 00         B   192    				call sd_send_command_null_args
                           B   193    					
003F3B 0604                B   194    				ld b,4							003F3D CD 91 41 00         B   195    				call sd_read_bytes_to_sector_bu
003F41 7E                  B   196    				ld a,(hl)
003F42 E640                B   197    				and 040h						003F44 0F                  B   198    				rrca
003F45 0F                  B   199    				rrca 
003F46 F602                B   200    				or 00000010b				
003F48 32 CC 41 00         B   201    				ld (sd_card_info),a				003F4C AF                  B   202    				xor a							003F4D C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
003F4E 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
003F52 3E77                B   210    sd_iwl			ld a,CMD55						003F54 CD 58 41 00         B   211    				call sd_send_command_null_args
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   212    
003F58 3E69                B   213    				ld a,ACMD41						003F5A CD 58 41 00         B   214    				call sd_send_command_null_args
003F5E 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
003F60 CB57                B   217    				bit 2,a				
003F62 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
003F64 0B                  B   220    				dec bc
003F65 78                  B   221    				ld a,b
003F66 B1                  B   222    				or c
003F67 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
003F69 3E11                B   225    				ld a,sd_error_sd_init_failed	003F6B C9                  B   226    				ret
                           B   227    				
003F6C 3E01                B   228    sd_rdy			ld a,1
003F6E 32 CC 41 00         B   229    				ld (sd_card_info),a				003F72 AF                  B   230    				xor a							003F73 C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
003F74 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
003F78 3E41                B   237    sdmmc_iwl		ld a,CMD1
003F7A CD 58 41 00         B   238    				call sd_send_command_null_args	003F7E C8                  B   239    				ret z							                           B   240    				
003F7F 0B                  B   241    sd_mnrdy		dec bc
003F80 78                  B   242    				ld a,b
003F81 B1                  B   243    				or c
003F82 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
003F84 3E10                B   246    				ld a,sd_error_mmc_init_failed	003F86 C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
003F87                     B   253    sd_read_csd
                           B   254    				
003F87 3E49                B   255    				ld a,CMD9						003F89 CD 58 41 00         B   256    				call sd_send_command_null_args	003F8D C2 AE 40 00         B   257    				jp nz,sd_bcr_error				                           B   258    
003F91 CD 3C 41 00         B   259    				call sd_wait_data_token			003F95 C2 B7 40 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
003F99 0612                B   262    sd_id_ok		ld b,18							003F9B CD 91 41 00         B   263    				call sd_read_bytes_to_sector_bu
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   264    
003F9F DD210008 00         B   265    				ld ix,sector_buffer				003FA4 DDCB0076            B   266    				bit 6,(ix)
003FA8 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
003FAA DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						003FAD DD6608              B   270    				ld h,(ix+8)
003FB0 23                  B   271    				inc hl
003FB1 3E0A                B   272    				ld a,10
003FB3 01000000            B   273    				ld bc,0
003FB7 4029                B   274    sd_csd2lp		add.sis hl,hl
003FB9 CB11                B   275    				rl c
003FBB CB10                B   276    				rl b
003FBD 3D                  B   277    				dec a
003FBE 20 F7               B   278    				jr nz,sd_csd2lp
003FC0 EB                  B   279    				ex de,hl						003FC1 AF                  B   280    				xor a
003FC2 C9                  B   281    				ret
                           B   282    				
003FC3 DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						003FC6 E603                B   284    				and 00000011b
003FC8 57                  B   285    				ld d,a
003FC9 DD5E07              B   286    				ld e,(ix+7)
003FCC DD7E08              B   287    				ld a,(ix+8)
003FCF E6C0                B   288    				and 11000000b
003FD1 CB27                B   289    				sla a
003FD3 CB13                B   290    				rl e
003FD5 CB12                B   291    				rl d
003FD7 CB27                B   292    				sla a
003FD9 CB13                B   293    				rl e
003FDB CB12                B   294    				rl d							                           B   295    				
003FDD DD7E09              B   296    				ld a,(ix+9)
003FE0 E603                B   297    				and 00000011b
003FE2 47                  B   298    				ld b,a
003FE3 DD7E0A              B   299    				ld a,(ix+10)
003FE6 E680                B   300    				and 10000000b
003FE8 CB27                B   301    				sla a
003FEA CB10                B   302    				rl b							                           B   303    				
003FEC 04                  B   304    				inc b
003FED 04                  B   305    				inc b
003FEE 21000000            B   306    				ld hl,0
003FF2 CB23                B   307    sd_cmsh			sla e
003FF4 CB12                B   308    				rl d
003FF6 CB15                B   309    				rl l
003FF8 CB14                B   310    				rl h
003FFA 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
003FFC DD7E05              B   313    				ld a,(ix+5)
003FFF E60F                B   314    				and 00001111b					004001 28 17               B   315    				jr z,sd_nbls
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004003 47                  B   316    				ld b,a
004004 CB23                B   317    sd_blsh			sla e
004006 CB12                B   318    				rl d
004008 CB15                B   319    				rl l
00400A CB14                B   320    				rl h
00400C 10 F6               B   321    				djnz sd_blsh					                           B   322    				
00400E 0609                B   323    				ld b,9							004010 CB3C                B   324    sd_cbsec		srl h
004012 CB1D                B   325    				rr l
004014 CB1A                B   326    				rr d
004016 CB1B                B   327    				rr e
004018 10 F6               B   328    				djnz sd_cbsec
                           B   329    
00401A E5                  B   330    sd_nbls			push hl
00401B C1                  B   331    				pop bc							00401C AF                  B   332    				xor a
00401D C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
00401E                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
00401E 3E4A                B   341    				ld a,CMD10						004020 CD 58 41 00         B   342    				call sd_send_command_null_args
004024 C2 AE 40 00         B   343    				jp nz,sd_bcr_error				                           B   344    
004028 CD 3C 41 00         B   345    				call sd_wait_data_token			00402C C2 B7 40 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
004030 0612                B   348    				ld b,18
004032 CD 91 41 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
004036 21030800            B   351    				ld hl,sector_buffer+03h			00403A 11200800            B   352    				ld de,sector_buffer+20h
00403E 01050000            B   353    				ld bc,5
004042 3A CC 41 00         B   354    				ld a,(sd_card_info)
004046 E60F                B   355    				and 0fh
004048 20 01               B   356    				jr nz,sd_cn5
00404A 03                  B   357    				inc bc
00404B EDB0                B   358    sd_cn5			ldir
00404D E5                  B   359    				push hl
00404E D5                  B   360    				push de
00404F 21 B2 41 00         B   361    				ld hl,sd_vnchars
004053 01140000            B   362    				ld bc,20
004057 EDB0                B   363    				ldir
004059 D1                  B   364    				pop de
00405A E1                  B   365    				pop hl
00405B 13                  B   366    				inc de
00405C 13                  B   367    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00405D 7E                  B   368    				ld a,(hl)
00405E CB3F                B   369    				srl a
004060 CB3F                B   370    				srl a
004062 CB3F                B   371    				srl a
004064 CB3F                B   372    				srl a
004066 C630                B   373    				add a,30h						004068 12                  B   374    				ld (de),a
004069 13                  B   375    				inc de
00406A 13                  B   376    				inc de
00406B 7E                  B   377    				ld a,(hl)
00406C E60F                B   378    				and 0fh
00406E C630                B   379    				add a,30h
004070 12                  B   380    				ld (de),a						004071 13                  B   381    				inc de
004072 13                  B   382    				inc de
004073 13                  B   383    				inc de
004074 13                  B   384    				inc de
004075 13                  B   385    				inc de
004076 23                  B   386    				inc hl
004077 0604                B   387    				ld b,4
004079 7E                  B   388    sd_snulp		ld a,(hl)						00407A CB3F                B   389    				srl a
00407C CB3F                B   390    				srl a
00407E CB3F                B   391    				srl a
004080 CB3F                B   392    				srl a
004082 C630                B   393    				add a,30h
004084 FE3A                B   394    				cp 3ah
004086 38 02               B   395    				jr c,sd_hvl1
004088 C607                B   396    				add a,07h
00408A 12                  B   397    sd_hvl1			ld (de),a
00408B 13                  B   398    				inc de
00408C 7E                  B   399    				ld a,(hl)
00408D E60F                B   400    				and 0fh
00408F C630                B   401    				add a,30h
004091 FE3A                B   402    				cp 3ah
004093 38 02               B   403    				jr c,sd_hvl2
004095 C607                B   404    				add a,07h
004097 12                  B   405    sd_hvl2			ld (de),a
004098 13                  B   406    				inc de
004099 23                  B   407    				inc hl
00409A 10 DD               B   408    				djnz sd_snulp
                           B   409    				
00409C 21200800            B   410    				ld hl,sector_buffer+20h			0040A0 AF                  B   411    				xor a
0040A1 C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
0040A2                     B   418    sd_read_sector_main
                           B   419    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
0040A2 CD 13 41 00         B   422    				call sd_set_sector_addr
                           B   423    
0040A6 3E51                B   424    				ld a,CMD17						0040A8 CD 64 41 00         B   425    				call sd_send_command_current_ar
0040AC 28 03               B   426    				jr z,sd_rscr_ok					0040AE 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
0040B0 C9                  B   428    				ret
                           B   429    
0040B1 CD 3C 41 00         B   430    sd_rscr_ok		call sd_wait_data_token			0040B5 28 03               B   431    				jr z,sd_dt_ok					0040B7 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
0040B9 C9                  B   433    				ret
                           B   434    
0040BA 21000800            B   435    sd_dt_ok		ld hl,sector_buffer
0040BE CD E2 41 00         B   436    				call sd_read_513_bytes			0040C2 CD DA 41 00         B   437    				call sd_get_byte
                           B   438    				
0040C6 AF                  B   439    				xor a							0040C7 C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
0040C8                     B   446    sd_write_sector_main
                           B   447    	
0040C8 CD 13 41 00         B   448    				call sd_set_sector_addr
                           B   449    
0040CC 3E58                B   450    				ld a,CMD24						0040CE CD 64 41 00         B   451    				call sd_send_command_current_ar
0040D2 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
0040D4 CD 51 41 00         B   454    				call sd_send_eight_clocks		                           B   455    
0040D8 3EFE                B   456    				ld a,0feh
0040DA CD CD 41 00         B   457    				call sd_send_byte				                           B   458    
0040DE 21000800            B   459    				ld hl,sector_buffer
0040E2 CD 11 42 00         B   460    				call sd_write_512_bytes			0040E6 CD 51 41 00         B   461    				call sd_send_eight_clocks		0040EA CD 51 41 00         B   462    				call sd_send_eight_clocks		                           B   463    		
0040EE CD DA 41 00         B   464    				call sd_get_byte				0040F2 E61F                B   465    				and 1fh
0040F4 CB3F                B   466    				srl a
0040F6 FE02                B   467    				cp 02h
0040F8 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
0040FA 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
0040FC C9                  B   471    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   472    
0040FD 01FFFF00            B   473    sd_wr_ok		ld bc,65535						004101 CD DA 41 00         B   474    sd_wcbsy		call sd_get_byte				004105 FEFF                B   475    				cp 0ffh
004107 20 02               B   476    				jr nz,sd_busy
004109 AF                  B   477    				xor a							00410A C9                  B   478    				ret
                           B   479    				
00410B 0B                  B   480    sd_busy			dec bc
00410C 78                  B   481    				ld a,b
00410D B1                  B   482    				or c
00410E 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
004110                     B   485    sd_card_busy_timeout
                           B   486    
004110 3E23                B   487    				ld a,sd_error_write_timeout
004112 C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
004113                     B   492    sd_set_sector_addr
                           B   493    				
004113 21 5D 6A 00         B   494    				ld hl,sector_lba0
004117 4E                  B   495    				ld c,(hl)
004118 23                  B   496    				inc hl
004119 5E                  B   497    				ld e,(hl)
00411A 23                  B   498    				inc hl
00411B 56                  B   499    				ld d,(hl)
00411C 23                  B   500    				inc hl
00411D 46                  B   501    				ld b,(hl)					; s
                           B   502    
00411E 3A CC 41 00         B   503    				ld a,(sd_card_info)
004122 E610                B   504    				and 10h
004124 20 0A               B   505    				jr nz,lbatoargs				; i
004126 69                  B   506    				ld l,c
004127 63                  B   507    				ld h,e
004128 7A                  B   508    				ld a,d						; o
004129 4029                B   509    				add.sis hl,hl
00412B 8F                  B   510    				adc a,a	
00412C EB                  B   511    				ex de,hl
00412D 47                  B   512    				ld b,a
00412E 0E00                B   513    				ld c,0
004130 21 C7 41 00         B   514    lbatoargs		ld hl,cmd_generic_args
004134 70                  B   515    				ld (hl),b
004135 23                  B   516    				inc hl
004136 72                  B   517    				ld (hl),d
004137 23                  B   518    				inc hl
004138 73                  B   519    				ld (hl),e
004139 23                  B   520    				inc hl
00413A 71                  B   521    				ld (hl),c
00413B C9                  B   522    				ret
                           B   523    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
00413C                     B   527    sd_wait_data_token
                           B   528    
00413C C5                  B   529    				push bc
00413D 01401F00            B   530    				ld bc,8000				
004141 CD DA 41 00         B   531    sd_wdt			call sd_get_byte			; r
004145 FEFE                B   532    				cp 0feh
004147 28 06               B   533    				jr z,sd_gdt
004149 0B                  B   534    				dec bc
00414A 78                  B   535    				ld a,b
00414B B1                  B   536    				or c
00414C 20 F3               B   537    				jr nz,sd_wdt
00414E 0C                  B   538    				inc c						; d
00414F C1                  B   539    sd_gdt			pop bc
004150 C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
004151                     B   544    sd_send_eight_clocks
                           B   545    
004151 3EFF                B   546    				ld a,0ffh
004153 CD CD 41 00         B   547    				call sd_send_byte
004157 C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
004158                     B   553    sd_send_command_null_args
                           B   554    
004158 21000000            B   555    				ld hl,0
00415C 22 C7 41 00         B   556    				ld (cmd_generic_args),hl	; c
004160 22 C8 41 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
004164                     B   561    sd_send_command_current_args
                           B   562    	
004164 21 C6 41 00         B   563    				ld hl,cmd_generic
004168 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
004169                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
004169 CD 2D 42 00         B   574    				call sd_select_card				                           B   575    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00416D CD 51 41 00         B   576    				call sd_send_eight_clocks		                           B   577    				
004171 C5                  B   578    				push bc
004172 0606                B   579    				ld b,6
004174 7E                  B   580    sd_sclp			ld a,(hl)
004175 CD CD 41 00         B   581    				call sd_send_byte				004179 23                  B   582    				inc hl
00417A 10 F8               B   583    				djnz sd_sclp
00417C C1                  B   584    				pop bc
                           B   585    				
00417D CD DA 41 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
004181                     B   589    sd_wait_valid_response
                           B   590    				
004181 C5                  B   591    				push bc
004182 0600                B   592    				ld b,0
004184 CD DA 41 00         B   593    sd_wncrl		call sd_get_byte				004188 CB7F                B   594    				bit 7,a							00418A 28 02               B   595    				jr z,sd_gcr
00418C 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
00418E B7                  B   598    sd_gcr			or a							00418F C1                  B   599    				pop bc
004190 C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
004191                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
004191 21000800            B   607    				ld hl,sector_buffer
                           B   608    	
004195                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
004195 E5                  B   614    				push hl
004196 CD DA 41 00         B   615    sd_rblp			call sd_get_byte
00419A 77                  B   616    				ld (hl),a
00419B 23                  B   617    				inc hl
00419C 10 F8               B   618    				djnz sd_rblp
00419E E1                  B   619    				pop hl
00419F C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
0041A0 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
0041A6 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0041AC 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
0041B2 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
0041BA 3A303030 30303030 
0041C2 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
0041C6 00                  B   634    cmd_generic			db 00h
0041C7 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
0041CB 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
0041CC 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
0041CD                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
0041CD ED3903              C     9    					out0 (port_sdc_data),a
0041D0 C5                  C    10    					push bc
0041D1 0E01                C    11    					ld c,port_hw_flags
0041D3 ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
0041D6 20 FB               C    13    					jr nz,sd_wb_loop			0041D8 C1                  C    14    					pop bc
0041D9 C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
0041DA                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
0041DA CD 51 41 00         C    23    					call sd_send_eight_clocks
0041DE ED3803              C    24    					in0 a,(port_sdc_data)
0041E1 C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
0041E2                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
0041E2 C5                  C    35    					push bc
0041E3 D5                  C    36    					push de
0041E4 1EFF                C    37    					ld e,0ffh
0041E6 ED1903              C    38    					out0 (port_sdc_data),e		0041E9 0E01                C    39    					ld c,port_hw_flags			0041EB 0600                C    40    					ld b,0						                           C    41    
0041ED ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
0041F0 20 FB               C    43    					jr nz,sd_wser_loop1			0041F2 DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
0041F4 ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		0041F7 77                  C    47    					ld (hl),a					0041F8 23                  C    48    					inc hl						                           C    49    					
0041F9 ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
0041FC 20 FB               C    51    					jr nz,sd_wser_loop2			0041FE DB03                C    52    					in a,(port_sdc_data)		                           C    53    												004200 ED1903              C    54    					out0 (port_sdc_data),e		004203 77                  C    55    					ld (hl),a					004204 23                  C    56    					inc hl						                           C    57    					
004205 ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
004208 20 FB               C    59    					jr nz,sd_wser_loop3			00420A DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
00420C 10 E6               C    62    					djnz sd_512_loop
00420E D1                  C    63    					pop de
00420F C1                  C    64    					pop bc
004210 C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
004211                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
004211 0E01                C    74    					ld c,port_hw_flags			004213 0600                C    75    					ld b,0						004215 7E                  C    76    					ld a,(hl)
004216 ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
004219 23                  C    78    					inc hl
00421A 7E                  C    79    					ld a,(hl)
00421B ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
00421E 20 FB               C    81    					jr nz,sd_wser_loop4			004220 ED3903              C    82    					out0 (port_sdc_data),a
004223 23                  C    83    					inc hl
004224 7E                  C    84    					ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
004225 ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
004228 20 FB               C    86    					jr nz,sd_wser_loop5
00422A 10 EA               C    87    					djnz sd_wr512_loop
00422C C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
00422D F5                  C    95    sd_select_card		push af
00422E 3E02                C    96    					ld a,00h+(1<<sdc_cs)		004230 ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
004233 F1                  C    98    					pop af
004234 C9                  C    99    					ret
                           C   100    
                           C   101    
004235 F5                  C   102    sd_deselect_card	push af
004236 3E82                C   103    					ld a,080h+(1<<sdc_cs)		004238 ED3902              C   104    					out0 (port_sdc_ctrl),a
00423B CD 51 41 00         C   105    					call sd_send_eight_clocks	00423F F1                  C   106    					pop af
004240 C9                  C   107    					ret
                           C   108    
                           C   109    
004241 F5                  C   110    sd_power_on			push af
004242 3A040000            C   111    					ld a,(1<<sdc_speed)			004246 ED3902              C   112    					out0 (port_sdc_ctrl),a		004249 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
00424B 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
00424D F5                  C   117    sd_power_off		push af
00424E 3E01                C   118    					ld a,00h+(1<<sdc_power)		004250 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
004252 F5                  C   122    sd_spi_port_fast	push af
004253 3E84                C   123    					ld a,80h+(1<<sdc_speed)		004255 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3768    	
                           A  3769    ; Additional storage device driver source can b
                           A  3770    ; Also add the driver's PROSE header address la
                           A  3771    
004257 7A3E00              A  3772    driver_table		dw24 sd_card_driver	; Stora
00425A 000000              A  3773    					dw24 0 				; Stora
00425D 000000              A  3774    					dw24 0				; Stora
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
004260 000000              A  3775    					dw24 0				; Stora
                           A  3776    					
004263 000000              A  3777    					dw24 0				; Essen
                           A  3778    					
                           A  3779    ;----------------------------------------------
                           A  3780    ; IO routines
                           A  3781    ;----------------------------------------------
                           A  3782    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.06 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004266                     B     5    set_irq_vectors
                           B     6    		
004266 AF                  B     7    				xor a
004267 ED47                B     8    				ld i,a
                           B     9    						
004269 DD216F00 00         B    10    				ld ix,06fh						00426E 0623                B    11    				ld b,35
004270 DD3600C3            B    12    init_ivect_lp1	ld (ix),0c3h					004274 ED3204              B    13    				lea ix,ix+4
004277 10 F7               B    14    				djnz init_ivect_lp1
                           B    15    				
004279 216F0000            B    16    				ld hl,6fh						00427D DD210A00 00         B    17    				ld ix,0ah
004282 11040000            B    18    				ld de,4
004286 060B                B    19    				ld b,11							004288 DD7500              B    20    init_ivect_lp2	ld (ix),l
00428B DD7401              B    21    				ld (ix+1),h
00428E 19                  B    22    				add hl,de
00428F ED3202              B    23    				lea ix,ix+2
004292 10 F4               B    24    				djnz init_ivect_lp2
004294 DD213000 00         B    25    				ld ix,30h						004299 0619                B    26    				ld b,25
00429B DD7500              B    27    init_ivect_lp3	ld (ix),l
00429E DD7401              B    28    				ld (ix+1),h
0042A1 19                  B    29    				add hl,de
0042A2 ED3202              B    30    				lea ix,ix+2
0042A5 10 F4               B    31    				djnz init_ivect_lp3
                           B    32    				
0042A7 21 E7 42 00         B    33    				ld hl,int_routine				0042AB 229C0000            B    34    				ld (09ch),hl					                           B    35    
0042AF 3EC3                B    36    				ld a,0c3h						0042B1 32660000            B    37    				ld (066h),a
0042B5 21 A7 44 00         B    38    				ld hl,nmi_routine				0042B9 22670000            B    39    				ld (067h),hl
0042BD C9                  B    40    				ret
                           B    41    
                           B    42    
                           B    43    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    44    
                           B    45    
0042BE 21 B6 69 00         B    46    enable_os_irqs	ld hl,devices_connected			0042C2 CB46                B    47    				bit 0,(hl)
0042C4 C4 CF 42 00         B    48    				call nz,enable_kb_irq
0042C8 CB4E                B    49    				bit 1,(hl)
0042CA C4 D5 42 00         B    50    				call nz,enable_ms_irq
0042CE C9                  B    51    				ret
                           B    52    
                           B    53    
0042CF 3E81                B    54    enable_kb_irq	ld a,10000001b
0042D1 ED3905              B    55    				out0 (port_irq_ctrl),a			0042D4 C9                  B    56    				ret
                           B    57    
0042D5 3E82                B    58    enable_ms_irq	ld a,10000010b
0042D7 ED3905              B    59    				out0 (port_irq_ctrl),a			0042DA C9                  B    60    				ret
                           B    61    
0042DB 3E02                B    62    disable_ms_irq	ld a,00000010b
0042DD ED3905              B    63    				out0 (port_irq_ctrl),a			0042E0 C9                  B    64    				ret
                           B    65    
0042E1 3E3F                B    66    disable_irqs	ld a,00111111b
0042E3 ED3905              B    67    				out0 (port_irq_ctrl),a			0042E6 C9                  B    68    				ret
                           B    69    			
                           B    70    ;----------------------------------------------
                           B    71    
                           B    72    
0042E7                     B    73    int_routine
0042E7 F5                  B    74    				push af							0042E8 ED3807              B    75    				in0 a,(port_ps2_ctrl)			0042EB CB67                B    76    				bit 4,a
0042ED C4 2B 43 00         B    77    				call nz,kb_interrupt_handler
0042F1 ED3807              B    78    				in0 a,(port_ps2_ctrl)			0042F4 CB6F                B    79    				bit 5,a
0042F6 C4 CD 43 00         B    80    				call nz,ms_interrupt_handler
0042FA F1                  B    81    				pop af
0042FB FB                  B    82    				ei								0042FC 5BED4D              B    83    				reti.l							                           B    84    
                           B    85    
                           B    86    
0042FF                     B    87    prt1_irq_handler
                           B    88    
0042FF F5                  B    89    				push af
004300 D5                  B    90    				push de
004301 E5                  B    91    				push hl
004302 ED3883              B    92    				in0 a,(TMR1_CTL)				                           B    93    				
004305 2A CC 69 00         B    94    				ld hl,(milliseconds_counter)
004309 23                  B    95    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
00430A 22 CC 69 00         B    96    				ld (milliseconds_counter),hl
00430E 11E80300            B    97    				ld de,1000
004312 AF                  B    98    				xor a
004313 ED52                B    99    				sbc hl,de
004315 20 0D               B   100    				jr nz,sec_count_ok
004317 22 CC 69 00         B   101    				ld (milliseconds_counter),hl
00431B 2A CF 69 00         B   102    				ld hl,(seconds_counter)
00431F 23                  B   103    				inc hl
004320 22 CF 69 00         B   104    				ld (seconds_counter),hl
004324 E1                  B   105    sec_count_ok	pop hl
004325 D1                  B   106    				pop de
004326 F1                  B   107    				pop af
004327 FB                  B   108    				ei
004328 5BED4D              B   109    				reti.l
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Keyboard IRQ routine v0.03
                           B   113    ;----------------------------------------------
                           B   114    
00432B                     B   115    kb_interrupt_handler
                           B   116    
                           B   117    ;--- irq test ---------------------------------
                           B   118    
                           B   119    ;				push bc
                           B   120    ;				ld a,0ffh
                           B   121    ;				ld (hw_palette),a
                           B   122    ;				ld b,0
                           B   123    ;testlp1		djnz testlp1
                           B   124    ;				ld a,0
                           B   125    ;				ld (hw_palette),a
                           B   126    ;				pop bc
                           B   127    				
                           B   128    ;--- end of test ------------------------------
                           B   129    
                           B   130    
00432B E5                  B   131    				push hl							00432C C5                  B   132    				push bc
                           B   133    				
00432D ED3802              B   134    key_loop		in0 a,(port_keyboard_data)		004330 47                  B   135    				ld b,a
                           B   136    
004331 3A 9D 6B 00         B   137    				ld a,(key_release_mode)
004335 B7                  B   138    				or a
004336 28 20               B   139    				jr z,key_pressed
                           B   140    			
004338 78                  B   141    				ld a,b							004339 FEE0                B   142    				cp 0e0h							00433B 28 61               B   143    				jr z,kirq_done	
00433D FEE1                B   144    				cp 0e1h
00433F 28 5D               B   145    				jr z,kirq_done	
                           B   146    				
004341 CD A8 43 00         B   147    				call qualifiers					Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004345 7D                  B   148    				ld a,l
004346 2F                  B   149    				cpl
004347 6F                  B   150    				ld l,a
004348 3A 9F 6B 00         B   151    				ld a,(key_mod_flags)
00434C A5                  B   152    				and l							00434D 32 9F 6B 00         B   153    				ld (key_mod_flags),a
004351 AF                  B   154    				xor a
004352 32 9D 6B 00         B   155    				ld (key_release_mode),a
004356 18 46               B   156    				jr kirq_done
                           B   157    	
                           B   158    
004358 78                  B   159    key_pressed		ld a,b							004359 FEE0                B   160    				cp 0e0h							00435B 28 41               B   161    				jr z,kirq_done	
00435D FEE1                B   162    				cp 0e1h
00435F 28 3D               B   163    				jr z,kirq_done	
                           B   164    			
004361 FEF0                B   165    				cp 0f0h							004363 20 08               B   166    				jr nz,not_krel
004365 3E01                B   167    				ld a,1							004367 32 9D 6B 00         B   168    				ld (key_release_mode),a			00436B 18 31               B   169    				jr kirq_done
                           B   170    	
                           B   171    	
00436D CD A8 43 00         B   172    not_krel		call qualifiers					004371 3A 9F 6B 00         B   173    				ld a,(key_mod_flags)			004375 B5                  B   174    				or l
004376 32 9F 6B 00         B   175    				ld (key_mod_flags),a			00437A 68                  B   176    				ld l,b
00437B 01000000            B   177    				ld bc,0
00437F 3A 9B 6B 00         B   178    				ld a,(key_buf_wr_idx)
004383 4F                  B   179    				ld c,a
004384 7D                  B   180    				ld a,l
004385 21 7B 6B 00         B   181    				ld hl,scancode_buffer
004389 09                  B   182    				add hl,bc
00438A 77                  B   183    				ld (hl),a						00438B 0E10                B   184    				ld c,16
00438D 09                  B   185    				add hl,bc
00438E 3A 9F 6B 00         B   186    				ld a,(key_mod_flags)			004392 77                  B   187    				ld (hl),a	
004393 3A 9B 6B 00         B   188    				ld a,(key_buf_wr_idx)
004397 3C                  B   189    				inc a
004398 E60F                B   190    				and 15
00439A 32 9B 6B 00         B   191    				ld (key_buf_wr_idx),a			                           B   192    				
00439E ED3807              B   193    kirq_done		in0 a,(port_ps2_ctrl)			0043A1 CB67                B   194    				bit 4,a	
0043A3 20 88               B   195    				jr nz,key_loop
                           B   196    
0043A5 C1                  B   197    				pop bc
0043A6 E1                  B   198    				pop hl
0043A7 C9                  B   199    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   200    
                           B   201    
0043A8 2E40                B   202    qualifiers		ld l,040h		;apps
0043AA FE2F                B   203    				cp 02fh
0043AC C8                  B   204    				ret z
                           B   205    			
0043AD 2E20                B   206    				ld l,020h		;r gui
0043AF FE27                B   207    				cp 027h
0043B1 C8                  B   208    				ret z
                           B   209    			
0043B2 2E10                B   210    				ld l,010h		;r shift
0043B4 FE59                B   211    				cp 059h
0043B6 C8                  B   212    				ret z
                           B   213    			
0043B7 2E08                B   214    				ld l,08h		; alt
0043B9 FE11                B   215    				cp 011h
0043BB C8                  B   216    				ret z
                           B   217    			
0043BC 2E04                B   218    				ld l,04h		; l gui
0043BE FE1F                B   219    				cp 01fh
                           B   220    			
0043C0 2E02                B   221    				ld l,02h		;l ctrl / r ctr
0043C2 FE14                B   222    				cp 14h
0043C4 C8                  B   223    				ret z
                           B   224    			
0043C5 2E01                B   225    				ld l,01h		;l shift
0043C7 FE12                B   226    				cp 12h
0043C9 C8                  B   227    				ret z
                           B   228    				
0043CA 2E00                B   229    				ld l,0
0043CC C9                  B   230    				ret
                           B   231    
                           B   232    ;----------------------------------------------
                           B   233    ; Mouse IRQ routine v0.03
                           B   234    ;----------------------------------------------
                           B   235    
0043CD                     B   236    ms_interrupt_handler
                           B   237    
                           B   238    ;--- irq test ---------------------------------
                           B   239    
                           B   240    ;				push bc
                           B   241    ;				ld a,0ffh
                           B   242    ;				ld (hw_palette),a
                           B   243    ;				ld b,0
                           B   244    ;testlp1		djnz testlp1
                           B   245    ;				ld a,0
                           B   246    ;				ld (hw_palette),a
                           B   247    ;				pop bc
                           B   248    				
                           B   249    ;--- end of test ------------------------------
                           B   250    
                           B   251    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0043CD C5                  B   252    				push bc							0043CE D5                  B   253    				push de							0043CF E5                  B   254    				push hl							                           B   255    							
0043D0 11000000            B   256    ms_loop			ld de,0		
0043D4 3A A8 6B 00         B   257    				ld a,(mouse_packet_index)		0043D8 5F                  B   258    				ld e,a
0043D9 21 A4 6B 00         B   259    				ld hl,mouse_packet	
0043DD 19                  B   260    				add hl,de
0043DE ED3806              B   261    				in0 a,(port_mouse_data)
0043E1 77                  B   262    				ld (hl),a
                           B   263    								
0043E2 21 A3 6B 00         B   264    				ld hl,mouse_packet_size
0043E6 1C                  B   265    				inc e							0043E7 7B                  B   266    				ld a,e
0043E8 BE                  B   267    				cp (hl)
0043E9 C2 92 44 00         B   268    				jr nz,msubpkt
                           B   269    
0043ED 3A A4 6B 00         B   270    				ld a,(mouse_packet)				0043F1 4F                  B   271    				ld c,a	
0043F2 E607                B   272    				and 0111b
0043F4 32 A9 6B 00         B   273    				ld (mouse_buttons),a
                           B   274    				
0043F8 11000000            B   275    				ld de,0							0043FC CB61                B   276    				bit 4,c
0043FE 28 01               B   277    				jr z,mxsignpos
004400 1B                  B   278    				dec de
004401 3A A5 6B 00         B   279    mxsignpos		ld a,(mouse_packet+1)
004405 5F                  B   280    				ld e,a
004406 2A AA 6B 00         B   281    				ld hl,(mouse_disp_x)
00440A 19                  B   282    				add hl,de
00440B 22 AA 6B 00         B   283    				ld (mouse_disp_x),hl
                           B   284    				
00440F 2A B8 6B 00         B   285    				ld hl,(mouse_abs_x)				004413 19                  B   286    				add hl,de
004414 22 B8 6B 00         B   287    				ld (mouse_abs_x),hl
004418 CB61                B   288    				bit 4,c
00441A 20 12               B   289    				jr nz,m_abs_neg_x
00441C ED5B B2 6B 00       B   290    				ld de,(mouse_window_size_x)
004421 AF                  B   291    				xor a
004422 ED52                B   292    				sbc hl,de
004424 38 13               B   293    				jr c,m_abs_x_ok
004426 1B                  B   294    				dec de
004427 ED53 B8 6B 00       B   295    				ld (mouse_abs_x),de
00442C 18 0B               B   296    				jr m_abs_x_ok
00442E 29                  B   297    m_abs_neg_x		add hl,hl
00442F 30 08               B   298    				jr nc,m_abs_x_ok
004431 21000000            B   299    				ld hl,0
004435 22 B8 6B 00         B   300    				ld (mouse_abs_x),hl
                           B   301    				
                           B   302    				
004439 11000000            B   303    m_abs_x_ok		ld de,0							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
00443D CB69                B   304    				bit 5,c
00443F 28 01               B   305    				jr z,mysignpos
004441 1B                  B   306    				dec de
004442 3A A6 6B 00         B   307    mysignpos		ld a,(mouse_packet+2)
004446 5F                  B   308    				ld e,a
004447 2A AD 6B 00         B   309    				ld hl,(mouse_disp_y)			00444B AF                  B   310    				xor a							00444C ED52                B   311    				sbc hl,de
00444E 22 AD 6B 00         B   312    				ld (mouse_disp_y),hl
                           B   313    				
004452 2A BB 6B 00         B   314    				ld hl,(mouse_abs_y)				004456 AF                  B   315    				xor a
004457 ED52                B   316    				sbc hl,de
004459 22 BB 6B 00         B   317    				ld (mouse_abs_y),hl
00445D CB69                B   318    				bit 5,c
00445F 28 12               B   319    				jr z,m_abs_neg_y
004461 ED5B B5 6B 00       B   320    				ld de,(mouse_window_size_y)
004466 AF                  B   321    				xor a
004467 ED52                B   322    				sbc hl,de
004469 38 13               B   323    				jr c,m_abs_y_ok
00446B 1B                  B   324    				dec de
00446C ED53 BB 6B 00       B   325    				ld (mouse_abs_y),de
004471 18 0B               B   326    				jr m_abs_y_ok
004473 29                  B   327    m_abs_neg_y		add hl,hl
004474 30 08               B   328    				jr nc,m_abs_y_ok
004476 21000000            B   329    				ld hl,0
00447A 22 BB 6B 00         B   330    				ld (mouse_abs_y),hl
00447E                     B   331    m_abs_y_ok			
                           B   332    
00447E 21 A7 6B 00         B   333    				ld hl,mouse_packet+3			004482 3A B0 6B 00         B   334    				ld a,(mouse_wheel)
004486 86                  B   335    				add a,(hl)
004487 32 B0 6B 00         B   336    				ld (mouse_wheel),a
                           B   337    				
00448B 3E01                B   338    				ld a,1
00448D 32 B1 6B 00         B   339    				ld (mouse_updated),a			                           B   340    				
004491 AF                  B   341    				xor a
004492 32 A8 6B 00         B   342    msubpkt			ld (mouse_packet_index),a
                           B   343    				
004496 ED3807              B   344    				in0 a,(port_ps2_ctrl)			004499 CB6F                B   345    				bit 5,a
00449B C2 D0 43 00         B   346    				jr nz,ms_loop				
                           B   347    				
00449F CD 39 48 00         B   348    				call hwsc_update_pointer_sprite
                           B   349    
0044A3 E1                  B   350    				pop hl
0044A4 D1                  B   351    				pop de
0044A5 C1                  B   352    				pop bc
0044A6 C9                  B   353    				ret
                           B   354    				
                           B   355    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   356    ;----------------------------------------------
                           B   357    ; ez80p NMI code v0.03
                           B   358    ;----------------------------------------------
                           B   359    
0044A7 F5                  B   360    nmi_routine		push af							0044A8 ED3805              B   361    				in0 a,(port_irq_flags)			0044AB CB77                B   362    				bit 6,a							0044AD 20 09               B   363    				jr nz,freeze
0044AF 3E20                B   364    				ld a,00100000b					0044B1 ED3909              B   365    				out0 (port_clear_flags),a		0044B4 F1                  B   366    				pop af
0044B5 5BED45              B   367    				retn.l
                           B   368    				
0044B8 F1                  B   369    freeze			pop af
0044B9 CD 7F 14 00         B   370    				call os_store_CPU_regs
                           B   371    				
0044BD 21000000            B   372    				ld hl,0
0044C1 39                  B   373    				add hl,sp
0044C2 7E                  B   374    				ld a,(hl)						0044C3 E601                B   375    				and 1
0044C5 32 F6 69 00         B   376    				ld (store_adl),a
0044C9 20 0A               B   377    				jr nz,adl_freeze
0044CB 23                  B   378    				inc hl
0044CC 5E                  B   379    				ld e,(hl)						0044CD 23                  B   380    				inc hl
0044CE 56                  B   381    				ld d,(hl)
0044CF CD 7F 16 00         B   382    				call mbase_de
0044D3 18 02               B   383    				jr got_pc
                           B   384    				
0044D5 33                  B   385    adl_freeze		inc sp
0044D6 D1                  B   386    				pop de							0044D7 ED53 EC 69 00       B   387    got_pc			ld (store_pc),de				                           B   388    				
0044DC CD FA 44 00         B   389    				call disable_button_nmi
0044E0 3E40                B   390    				ld a,01000000b
0044E2 ED3909              B   391    				out0 (port_clear_flags),a		0044E5 3E01                B   392    				ld a,1
0044E7 32 B4 69 00         B   393    				ld (frozen),a
0044EB C3 56 0A 00         B   394    				jp os_cold_start				                           B   395    
                           B   396    ;----------------------------------------------
                           B   397    
                           B   398    ;nmi_routine
                           B   399    ;
                           B   400    ;				push af							                           B   401    ;				push bc
                           B   402    ;				ld a,0ffh
                           B   403    ;				ld (hw_palette),a
                           B   404    ;				ld b,0
                           B   405    ;nmi_testlp2		djnz nmi_testlp2
                           B   406    ;				ld a,0
                           B   407    ;				ld (hw_palette),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   408    ;				pop bc
                           B   409    ;				ld a,01100000b
                           B   410    ;				out0 (port_clear_flags)
                           B   411    ;				pop af
                           B   412    ;				retn.l							                           B   413    
                           B   414    
                           B   415    ;----------------------------------------------
                           B   416    
0044EF                     B   417    enable_button_nmi
                           B   418    
0044EF 3E40                B   419    				ld a,01000000b
0044F1 ED3909              B   420    				out0 (port_clear_flags),a		0044F4 3EC0                B   421    				ld a,11000000b					0044F6 ED3905              B   422    				out0 (port_irq_ctrl),a			0044F9 C9                  B   423    				ret
                           B   424    
                           B   425    
0044FA                     B   426    disable_button_nmi
                           B   427    
0044FA 3E40                B   428    				ld a,01000000b					0044FC ED3905              B   429    				out0 (port_irq_ctrl),a
0044FF C9                  B   430    				ret
                           B   431    
                           B   432    
004500                     B   433    disable_all_nmis
                           B   434    
004500 3E60                B   435    				ld a,01100000b					004502 ED3905              B   436    				out0 (port_irq_ctrl),a
004505 C9                  B   437    				ret
                           B   438    				
                           B   439    ;----------------------------------------------
                           B   440    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
004506                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
004506 C5                  B    10    				push bc
004507 3A 4A 68 00         B    11    				ld a,(serial_timeout)
00450B 47                  B    12    				ld b,a
00450C 3ECC                B    13    rx_set_timer	ld a,cch
00450E ED3981              B    14    				out0 (TMR0_RR_L),a				004511 3E0C                B    15    				ld a,0ch
004513 ED3982              B    16    				out0 (TMR0_RR_H),a				004516 3E03                B    17    				ld a,00000011b					004518 ED3980              B    18    				out0 (TMR0_CTL),a				Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
00451B ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
00451E 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					004520 ED7401              B    22    				tstio 1							004523 20 0E               B    23    				jr nz,rx_in_buffer
004525 AF                  B    24    				xor a
004526 B0                  B    25    				or b
004527 28 13               B    26    				jr z,rx_time_out
004529 0E80                B    27    				ld c,TMR0_CTL	
00452B ED7480              B    28    				tstio 128						00452E 28 EE               B    29    				jr z,rx_byte_lp		
004530 05                  B    30    				dec b
004531 18 D9               B    31    				jr rx_set_timer
                           B    32    
004533 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
004537 ED78                B    34    				in a,(bc)						004539 C1                  B    35    				pop bc
00453A BF                  B    36    				cp a							00453B C9                  B    37    				ret
                           B    38    
00453C C1                  B    39    rx_time_out		pop bc
00453D 3E83                B    40    				ld a,083h						00453F B7                  B    41    				or a							004540 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
004541                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
004541 C5                  B    52    				push bc
004542 0EC5                B    53    				ld c,UART0_LSR					004544 ED7420              B    54    rs232_swait		tstio 020h						004547 28 FB               B    55    				jr z,rs232_swait
004549 01C00000            B    56    				ld bc,UART0_THR
00454D ED79                B    57    				out (c),a						00454F C1                  B    58    				pop bc
004550 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
004551                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
004551 7A                  B    68    				ld a,d
004552 CD 41 45 00         B    69    				call send_serial_byte
004556 7B                  B    70    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
004557 CD 41 45 00         B    71    				call send_serial_byte
00455B C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
00455C                     B    76    hwsc_flush_serial_buffer
                           B    77    
00455C C5                  B    78    				push bc
00455D 01C00000            B    79    				ld bc,UART0_RBR
004561 ED78                B    80    				in a,(bc)						004563 C1                  B    81    				pop bc
004564 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
004565                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
004565 E603                B    15    				and 3
004567 32 1B 68 00         B    16    				ld (video_doubling),a
00456B 79                  B    17    				ld a,c
00456C 32 1C 68 00         B    18    				ld (charmap_rows),a
004570 78                  B    19    				ld a,b
004571 32 1F 68 00         B    20    				ld (charmap_columns),a
004575 21000000            B    21    				ld hl,0
004579 69                  B    22    				ld l,c
00457A 60                  B    23    				ld h,b
00457B ED6C                B    24    				mlt hl
00457D 29                  B    25    				add hl,hl
00457E 22 C9 69 00         B    26    				ld (charmap_size),hl
004582 11004080            B    27    				ld de,charmap_addr
004586 19                  B    28    				add hl,de
004587 22 BD 69 00         B    29    				ld (free_vram_a_base),hl		                           B    30    				
00458B CD 91 45 00         B    31    				call os_set_video_hw_regs
00458F AF                  B    32    				xor a
004590 C9                  B    33    				ret
                           B    34    				
                           B    35    
004591                     B    36    os_set_video_hw_regs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    37    
004591 3A 1B 68 00         B    38    				ld a,(video_doubling)
004595 CB27                B    39    				sla a
004597 F618                B    40    				or 00011000b
004599 320018FF            B    41    				ld (video_control),a			00459D AF                  B    42    				xor a
00459E 320218FF            B    43    				ld (bgnd_palette_select),a
0045A2 3E63                B    44    				ld a,99
0045A4 320418FF            B    45    				ld (right_border_position),a
                           B    46    
0045A8 DD210010 FF         B    47    				ld ix,tilemap_parameters		0045AD 21004080            B    48    				ld hl,charmap_addr
0045B1 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
0045B4 21020000            B    51    				ld hl,2
0045B8 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
0045BB 21000008            B    54    				ld hl,80000h
0045BF 11000000            B    55    				ld de,0
0045C3 3A 1F 68 00         B    56    				ld a,(charmap_columns)
0045C7 5F                  B    57    				ld e,a
0045C8 AF                  B    58    				xor a
0045C9 ED52                B    59    				sbc hl,de
0045CB AF                  B    60    				xor a
0045CC ED52                B    61    				sbc hl,de
0045CE DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
0045D1 21000000            B    64    				ld hl,0
0045D5 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
0045D8 3A 1F 68 00         B    67    				ld a,(charmap_columns)
0045DC 3D                  B    68    				dec a
0045DD DD7710              B    69    				ld (ix+10h),a					                           B    70    				
0045E0 3E00                B    71    				ld a,0
0045E2 DD7711              B    72    				ld (ix+11h),a					0045E5 DD7712              B    73    				ld (ix+12h),a					                           B    74    
0045E8 21 F6 67 00         B    75    				ld hl,pen_palette
0045EC CD FB 45 00         B    76    				call hswc_set_ui_colours
                           B    77    				
0045F0 CD 26 48 00         B    78    				call hwsc_reset_sprites
                           B    79    				
0045F4 AF                  B    80    				xor a
0045F5 32 CB 6B 00         B    81    				ld (os_pointer_enable),a		                           B    82    				
0045F9 AF                  B    83    				xor a							0045FA C9                  B    84    				ret
                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    				
0045FB                     B    88    hswc_set_ui_colours
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    89    
0045FB 110000FF            B    90    				ld de,hw_palette
0045FF 01200000            B    91    				ld bc,16*2
004603 EDB0                B    92    				ldir
004605 AF                  B    93    				xor a							004606 C9                  B    94    				ret
                           B    95    
                           B    96    
                           B    97    ;----------------------------------------------
                           B    98    
004607                     B    99    hwsc_clear_screen
                           B   100    
004607 21004080            B   101    				ld hl,charmap_addr				00460B 3620                B   102    				ld (hl),32						00460D 23                  B   103    				inc hl
00460E CD 2D 46 00         B   104    				call get_fill_attr
004612 77                  B   105    				ld (hl),a
004613 23                  B   106    				inc hl
004614 EB                  B   107    				ex de,hl
004615 21004080            B   108    				ld hl,charmap_addr
004619 ED4B C9 69 00       B   109    				ld bc,(charmap_size)
00461E 0B                  B   110    				dec bc
00461F 0B                  B   111    				dec bc
004620 EDB0                B   112    				ldir
                           B   113    				
004622 01000000            B   114    				ld bc,0
004626 ED43 61 6A 00       B   115    				ld (cursor_y),bc
00462B AF                  B   116    				xor a							00462C C9                  B   117    				ret
                           B   118    				
                           B   119    				
00462D D5                  B   120    get_fill_attr	push de
00462E 3A F2 67 00         B   121    				ld a,(current_pen)
004632 E60F                B   122    				and 0fh
004634 5F                  B   123    				ld e,a
004635 3A F4 67 00         B   124    				ld a,(background_colour)
004639 0F                  B   125    				rrca
00463A 0F                  B   126    				rrca
00463B 0F                  B   127    				rrca
00463C 0F                  B   128    				rrca
00463D E6F0                B   129    				and 0f0h
00463F B3                  B   130    				or e
004640 D1                  B   131    				pop de
004641 C9                  B   132    				ret
                           B   133    				
                           B   134    
                           B   135    ;----------------------------------------------
                           B   136    
004642                     B   137    hwsc_scroll_up	
                           B   138    				
004642 C5                  B   139    				push bc
004643 D5                  B   140    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004644 E5                  B   141    				push hl
                           B   142    
004645 2A C9 69 00         B   143    				ld hl,(charmap_size)
004649 ED5B 1F 68 00       B   144    				ld de,(charmap_columns)
00464E AF                  B   145    				xor a
00464F ED52                B   146    				sbc hl,de
004651 ED52                B   147    				sbc hl,de						004653 E5                  B   148    				push hl
004654 C1                  B   149    				pop bc							004655 21004080            B   150    				ld hl,charmap_addr
004659 E5                  B   151    				push hl
00465A 19                  B   152    				add hl,de
00465B 19                  B   153    				add hl,de
00465C D1                  B   154    				pop de
00465D EDB0                B   155    				ldir
                           B   156    				
00465F EB                  B   157    				ex de,hl						004660 E5                  B   158    				push hl
004661 3620                B   159    				ld (hl),32
004663 23                  B   160    				inc hl
004664 CD 2D 46 00         B   161    				call get_fill_attr
004668 77                  B   162    				ld (hl),a
004669 2A 1F 68 00         B   163    				ld hl,(charmap_columns)
00466D 2B                  B   164    				dec hl
00466E 29                  B   165    				add hl,hl
00466F E5                  B   166    				push hl
004670 C1                  B   167    				pop bc
004671 E1                  B   168    				pop hl
004672 E5                  B   169    				push hl
004673 D1                  B   170    				pop de
004674 13                  B   171    				inc de
004675 13                  B   172    				inc de
004676 EDB0                B   173    				ldir
                           B   174    				
004678 E1                  B   175    				pop hl
004679 D1                  B   176    				pop de
00467A C1                  B   177    				pop bc
00467B AF                  B   178    				xor a							00467C C9                  B   179    				ret
                           B   180    
                           B   181    
                           B   182    ;----------------------------------------------
                           B   183    
00467D                     B   184    hwsc_plot_char
                           B   185    
                           B   186    ; Set:
                           B   187    ; ----
                           B   188    ; A = ascii char
                           B   189    ; B = x character coordinate 
                           B   190    ; C = y character coordinate
                           B   191    
00467D E5                  B   192    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00467E D5                  B   193    				push de
00467F F5                  B   194    				push af
                           B   195    
004680 3A 1C 68 00         B   196    				ld a,(charmap_rows)				004684 3D                  B   197    				dec a
004685 B9                  B   198    				cp c							004686 38 08               B   199    				jr c,win_err
004688 3A 1F 68 00         B   200    				ld a,(charmap_columns)
00468C 3D                  B   201    				dec a
00468D B8                  B   202    				cp b
00468E 30 07               B   203    				jr nc,win_ok
004690 F1                  B   204    win_err			pop af
004691 D1                  B   205    				pop de
004692 E1                  B   206    				pop hl
004693 3E88                B   207    				ld a,88h						004695 B7                  B   208    				or a
004696 C9                  B   209    				ret
                           B   210    				
004697 2A 1F 68 00         B   211    win_ok			ld hl,(charmap_columns)			00469B 61                  B   212    				ld h,c
00469C ED6C                B   213    				mlt hl
00469E 11000000            B   214    				ld de,0
0046A2 58                  B   215    				ld e,b
0046A3 19                  B   216    				add hl,de
0046A4 29                  B   217    				add hl,hl
0046A5 11004080            B   218    				ld de,charmap_addr
0046A9 19                  B   219    				add hl,de
0046AA F1                  B   220    				pop af
0046AB 77                  B   221    				ld (hl),a
0046AC 23                  B   222    				inc hl
0046AD 3A F2 67 00         B   223    				ld a,(current_pen)
0046B1 77                  B   224    				ld (hl),a
0046B2 D1                  B   225    				pop de
0046B3 E1                  B   226    				pop hl
0046B4 AF                  B   227    				xor a
0046B5 C9                  B   228    				ret
                           B   229    				
                           B   230    				
                           B   231    ;----------------------------------------------
                           B   232    
0046B6                     B   233    hwsc_remove_cursor
                           B   234    
0046B6 3A 18 68 00         B   235    				ld a,(cursor_present)			0046BA B7                  B   236    				or a
0046BB C8                  B   237    				ret z
0046BC ED4B 61 6A 00       B   238    				ld bc,(cursor_y)
0046C1 CD 24 47 00         B   239    				call hwsc_get_charmap_addr_xy
0046C5 3A 17 68 00         B   240    				ld a,(char_under_cursor)
0046C9 77                  B   241    				ld (hl),a
0046CA AF                  B   242    				xor a
0046CB 32 18 68 00         B   243    				ld (cursor_present),a
0046CF C9                  B   244    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   245    
                           B   246    
0046D0                     B   247    hwsc_draw_cursor
                           B   248    								
0046D0 3A 18 68 00         B   249    				ld a,(cursor_present)			0046D4 B7                  B   250    				or a
0046D5 C0                  B   251    				ret nz
0046D6 3C                  B   252    				inc a
0046D7 32 18 68 00         B   253    				ld (cursor_present),a
                           B   254    				
0046DB ED4B 61 6A 00       B   255    				ld bc,(cursor_y)
0046E0 CD 24 47 00         B   256    				call hwsc_get_charmap_addr_xy
0046E4 7E                  B   257    				ld a,(hl)						0046E5 32 17 68 00         B   258    				ld (char_under_cursor),a		0046E9 36FF                B   259    				ld (hl),ffh						                           B   260    				
0046EB 11400000            B   261    				ld de,64						0046EF 57                  B   262    				ld d,a
0046F0 ED5C                B   263    				mlt de
0046F2 FD210000 80         B   264    				ld iy,vram_a_addr				0046F7 FD19                B   265    				add iy,de						                           B   266    				
0046F9 21400000            B   267    				ld hl,64
0046FD 3A 1A 68 00         B   268    				ld a,(cursor_image_char)
004701 67                  B   269    				ld h,a
004702 ED6C                B   270    				mlt hl
004704 11000080            B   271    				ld de,vram_a_addr
004708 19                  B   272    				add hl,de
                           B   273    				
004709 DD21C03F 80         B   274    				ld ix,vram_a_addr+03fc0h
00470E 11080000            B   275    				ld de,8
004712 0608                B   276    				ld b,8
004714 FD7E00              B   277    cur_loop		ld a,(iy)						004717 AE                  B   278    				xor (hl)						004718 DD7700              B   279    				ld (ix),a						00471B FD19                B   280    				add iy,de
00471D DD19                B   281    				add ix,de
00471F 19                  B   282    				add hl,de
004720 10 F2               B   283    				djnz cur_loop
                           B   284    				
004722 AF                  B   285    				xor a
004723 C9                  B   286    				ret
                           B   287    				
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    
004724                     B   291    hwsc_get_charmap_addr_xy
                           B   292    
                           B   293    ; returns address of charmap in xHL for charact
                           B   294    ; and attrmap in xDE
                           B   295    				
004724 2A 1F 68 00         B   296    				ld hl,(charmap_columns)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004728 61                  B   297    				ld h,c
004729 ED6C                B   298    				mlt hl
00472B 11000000            B   299    				ld de,0
00472F 58                  B   300    				ld e,b
004730 19                  B   301    				add hl,de
004731 29                  B   302    				add hl,hl
004732 11004080            B   303    				ld de,charmap_addr
004736 19                  B   304    				add hl,de
004737 E5                  B   305    				push hl
004738 D1                  B   306    				pop de
004739 13                  B   307    				inc de
00473A AF                  B   308    				xor a
00473B C9                  B   309    				ret
                           B   310    								
                           B   311    ;----------------------------------------------
                           B   312    
00473C                     B   313    hwsc_chars_left
                           B   314    
                           B   315    ; moves characters (in character map) on the cu
                           B   316    
00473C E5                  B   317    				push hl
00473D D5                  B   318    				push de
00473E C5                  B   319    				push bc
                           B   320    				
00473F 2A 1F 68 00         B   321    				ld hl,(charmap_columns)
004743 3A 61 6A 00         B   322    				ld a,(cursor_y)
004747 67                  B   323    				ld h,a
004748 ED6C                B   324    				mlt hl
00474A 11000000            B   325    				ld de,0
00474E 58                  B   326    				ld e,b
00474F 19                  B   327    				add hl,de
004750 29                  B   328    				add hl,hl
004751 11004080            B   329    				ld de,charmap_addr
004755 19                  B   330    				add hl,de
                           B   331    				
004756 3A 1F 68 00         B   332    				ld a,(charmap_columns)
00475A 90                  B   333    				sub b
00475B CB27                B   334    				sla a
00475D 01000000            B   335    				ld bc,0
004761 4F                  B   336    				ld c,a
004762 E5                  B   337    				push hl
004763 D1                  B   338    				pop de
004764 1B                  B   339    				dec de
004765 1B                  B   340    				dec de
004766 EDB0                B   341    				ldir
                           B   342    				
004768 3E20                B   343    				ld a,32						;pu
00476A 12                  B   344    				ld (de),a
00476B 13                  B   345    				inc de
00476C CD 2D 46 00         B   346    				call get_fill_attr
004770 12                  B   347    				ld (de),a
                           B   348    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004771 C1                  B   349    				pop bc
004772 D1                  B   350    				pop de
004773 E1                  B   351    				pop hl
004774 C9                  B   352    				ret
                           B   353    
                           B   354    
                           B   355    ;----------------------------------------------
                           B   356    
                           B   357    
004775                     B   358    hwsc_chars_right
                           B   359    
                           B   360    ; moves characters on current line right from c
                           B   361    
004775 C5                  B   362    				push bc
004776 D5                  B   363    				push de
004777 E5                  B   364    				push hl
                           B   365    	
004778 21 62 6A 00         B   366    				ld hl,cursor_x				
00477C 3A 1F 68 00         B   367    				ld a,(charmap_columns)
004780 3D                  B   368    				dec a
004781 BE                  B   369    				cp (hl)			
004782 28 30               B   370    				jr z,chright_end
004784 46                  B   371    				ld b,(hl)
                           B   372    				
004785 2A 1F 68 00         B   373    				ld hl,(charmap_columns)
004789 3A 61 6A 00         B   374    				ld a,(cursor_y)
00478D 3C                  B   375    				inc a							00478E 67                  B   376    				ld h,a
00478F ED6C                B   377    				mlt hl
004791 29                  B   378    				add hl,hl
004792 11004080            B   379    				ld de,charmap_addr
004796 19                  B   380    				add hl,de					
004797 2B                  B   381    				dec hl							004798 E5                  B   382    				push hl
004799 D1                  B   383    				pop de							00479A 2B                  B   384    				dec hl
00479B 2B                  B   385    				dec hl							00479C 3A 1F 68 00         B   386    				ld a,(charmap_columns)
0047A0 90                  B   387    				sub b
0047A1 3D                  B   388    				dec a
0047A2 CB27                B   389    				sla a
0047A4 01000000            B   390    				ld bc,0
0047A8 4F                  B   391    				ld c,a							0047A9 EDB8                B   392    				lddr
0047AB 23                  B   393    				inc hl							0047AC 3620                B   394    				ld (hl),32
0047AE 23                  B   395    				inc hl
0047AF CD 2D 46 00         B   396    				call get_fill_attr
0047B3 77                  B   397    				ld (hl),a
                           B   398    							
0047B4 E1                  B   399    chright_end		pop hl	
0047B5 D1                  B   400    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0047B6 C1                  B   401    				pop bc
0047B7 C9                  B   402    				ret
                           B   403    
                           B   404    ;----------------------------------------------
                           B   405    
                           B   406    
0047B8                     B   407    hwsc_charline_to_command_string	
                           B   408    				
                           B   409    				
0047B8 2A 1F 68 00         B   410    				ld hl,(charmap_columns)			0047BC 3A 61 6A 00         B   411    				ld a,(cursor_y)
0047C0 67                  B   412    				ld h,a
0047C1 ED6C                B   413    				mlt hl
0047C3 29                  B   414    				add hl,hl
0047C4 11004080            B   415    				ld de,charmap_addr
0047C8 19                  B   416    				add hl,de
0047C9 11 7F 6A 00         B   417    				ld de,commandstring
0047CD 0650                B   418    				ld b,max_buffer_chars			0047CF 7E                  B   419    copy_to_cmdline	ld a,(hl)
0047D0 12                  B   420    				ld (de),a
0047D1 13                  B   421    				inc de
0047D2 23                  B   422    				inc hl
0047D3 23                  B   423    				inc hl
0047D4 10 F9               B   424    				djnz copy_to_cmdline
0047D6 C9                  B   425    				ret
                           B   426    
                           B   427    ;----------------------------------------------
                           B   428    
                           B   429    
0047D7 C5                  B   430    hwsc_wait_vrt	push bc
                           B   431    
0047D8 0E01                B   432    				ld c,1
0047DA ED0909              B   433    				out0 (port_clear_flags),c
                           B   434    
0047DD 0E01                B   435    				ld c,port_hw_flags
0047DF ED7420              B   436    ewaitvrtlp1		tstio 1<<vrt
0047E2 28 FB               B   437    				jr z,ewaitvrtlp1
                           B   438    				
0047E4 C1                  B   439    				pop bc
0047E5 BF                  B   440    				cp a							0047E6 C9                  B   441    				ret
                           B   442    
                           B   443    
                           B   444    ;----------------------------------------------
                           B   445    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------
                           B     2    ;Misc eZ80p specific routines v0.06
                           B     3    ;----------------------------------
                           B     4    
0047E7                     B     5    hwsc_default_hw_settings
                           B     6    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0047E7 3E48                B     9    					ld a,01001000b				0047E9 ED39AA              B    10    					out0 (CS0_CTL),a
0047EC 3E00                B    11    					ld a,000h					0047EE ED39A8              B    12    					out0 (CS0_LBR),a
0047F1 3EFF                B    13    					ld a,0ffh	
0047F3 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
0047F6 3E58                B    16    					ld a,01011000b
0047F8 ED39AD              B    17    					out0 (CS1_CTL),a			0047FB 3E00                B    18    					ld a,0
0047FD ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004800 3EFF                B    23    					ld a,0ffh
004802 ED399F              B    24    					out0 (PC_DDR),a				004805 AF                  B    25    					xor a
004806 ED39A0              B    26    					out0 (PC_ALT1),a
004809 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
00480C 3EFF                B    29    					ld a,0ffh					00480E ED39A3              B    30    					out0 (PD_DDR),a				004811 AF                  B    31    					xor a	
004812 ED39A4              B    32    					out0 (PD_ALT1),a			004815 3E0F                B    33    					ld a,00fh				
004817 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
00481A ED3892              B    38    					in0 a,(TMR_ISS)
00481D E6FC                B    39    					and 11111100b
00481F F601                B    40    					or  00000001b
004821 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
004824 AF                  B    43    					xor a
004825 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
004826 AF                  B    49    hwsc_reset_sprites	xor a
004827 320118FF            B    50    					ld (sprite_control),a		                           B    51    					
00482B 210008FF            B    52    					ld hl,hw_sprite_registers	00482F 01000100            B    53    					ld bc,8*32
004833 AF                  B    54    					xor a
004834 CD 47 16 00         B    55    					call os_bchl_memfill
004838 C9                  B    56    					ret
                           B    57    					
                           B    58    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    59    
                           B    60    
004839                     B    61    hwsc_update_pointer_sprite
                           B    62    					
004839 3A CB 6B 00         B    63    					ld a,(os_pointer_enable)	00483D E601                B    64    					and 1
00483F C8                  B    65    					ret z
                           B    66    
004840 DDE5                B    67    					push ix
004842 DD21F808 FF         B    68    					ld ix,hw_sprite_registers+(
004847 2A B8 6B 00         B    69    					ld hl,(mouse_abs_x)
00484B 019A0000            B    70    					ld bc,x_display_offset
00484F 09                  B    71    					add hl,bc
004850 DD7500              B    72    					ld (ix),l
004853 DD7401              B    73    					ld (ix+1),h
004856 2A BB 6B 00         B    74    					ld hl,(mouse_abs_y)
00485A 01250000            B    75    					ld bc,y_display_offset
00485E 09                  B    76    					add hl,bc
00485F DD7502              B    77    					ld (ix+2),l
004862 DD7403              B    78    					ld (ix+3),h
004865 ED4B CF 6B 00       B    79    					ld bc,(os_pointer_height)
00486A DD7104              B    80    					ld (ix+4),c
00486D DD7005              B    81    					ld (ix+5),b
004870 ED4B CC 6B 00       B    82    					ld bc,(os_pointer_definitio
004875 DD7106              B    83    					ld (ix+6),c
004878 DD7007              B    84    					ld (ix+7),b
00487B DDE1                B    85    					pop ix
00487D C9                  B    86    					ret
                           B    87    
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    				
                           B    91    
00487E 11000000            B    92    hwsc_get_version	ld de,0
004882 0610                B    93    					ld b,16
004884 78                  B    94    gethwvlp			ld a,b
004885 3D                  B    95    					dec a
004886 ED3908              B    96    					out0 (port_selector),a		004889 DB01                B    97    					in a,(port_hw_flags)		00488B CB27                B    98    					sla a
00488D CB13                B    99    					rl e
00488F CB12                B   100    					rl d
004891 10 F1               B   101    					djnz gethwvlp				                           B   102    									
004893 213A0000            B   103    					ld hl,prose_version
004897 BF                  B   104    					cp a						004898 C9                  B   105    					ret
                           B   106    
                           B   107    
                           B   108    
                           B   109    ;----------------------------------------------
                           B   110    ; Timer0 related 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   111    ;----------------------------------------------
                           B   112    
004899                     B   113    hwsc_time_delay
                           B   114    
                           B   115    ; set DE to 32768Hz ticks to wait
                           B   116    
004899 CD A5 48 00         B   117    					call hwsc_set_timeout
00489D CD B6 48 00         B   118    twaitlp				call hwsc_test_timeout
0048A1 28 FA               B   119    					jr z,twaitlp
0048A3 AF                  B   120    					xor a						0048A4 C9                  B   121    					ret			
                           B   122    
                           B   123    ;----------------------------------------------
                           B   124    
                           B   125    ; Set DE to 32768 Hz ticks to allow before time
                           B   126    
0048A5 7B                  B   127    hwsc_set_timeout	ld a,e						0048A6 ED3981              B   128    					out0 (TMR0_RR_L),a			0048A9 7A                  B   129    					ld a,d
0048AA ED3982              B   130    					out0 (TMR0_RR_H),a			0048AD 3E03                B   131    					ld a,00000011b				0048AF ED3980              B   132    					out0 (TMR0_CTL),a			0048B2 ED3880              B   133    					in0 a,(TMR0_CTL)			0048B5 C9                  B   134    					ret
                           B   135    			
0048B6 ED3880              B   136    hwsc_test_timeout	in0 a,(TMR0_CTL)			0048B9 CB7F                B   137    					bit 7,a
0048BB C9                  B   138    					ret
                           B   139    			
                           B   140    ;----------------------------------------------
                           B   141    
0048BC                     B   142    hwsc_read_rtc
0048BC D5                  B   143    					push de
0048BD C5                  B   144    					push bc
0048BE 0EE0                B   145    hwsc_rtc_rlp		ld c,RTC_SEC
0048C0 0608                B   146    					ld b,8
0048C2 21 AD 69 00         B   147    					ld hl,time_data
0048C6 ED92                B   148    					inimr						0048C8 0EE0                B   149    					ld c,RTC_SEC
0048CA 0600                B   150    					ld b,0
0048CC 1E08                B   151    					ld e,8
0048CE 21 AD 69 00         B   152    					ld hl,time_data
0048D2 ED78                B   153    timevloop			in a,(bc)					0048D4 BE                  B   154    					cp (hl)						0048D5 20 E7               B   155    					jr nz,hwsc_rtc_rlp			0048D7 23                  B   156    					inc hl
0048D8 0C                  B   157    					inc c
0048D9 1D                  B   158    					dec e
0048DA 20 F6               B   159    					jr nz,timevloop
0048DC 21 AD 69 00         B   160    					ld hl,time_data
0048E0 C1                  B   161    					pop bc
0048E1 D1                  B   162    					pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0048E2 BF                  B   163    					cp a						0048E3 C9                  B   164    					ret
                           B   165    
                           B   166    
0048E4                     B   167    hwsc_write_rtc	
                           B   168    
                           B   169    ; set HL to location of BCD data for RTC: sec/m
                           B   170    
0048E4 E5                  B   171    					push hl
0048E5 C5                  B   172    					push bc
0048E6 3E21                B   173    					ld a,00100001b				0048E8 ED39ED              B   174    					out0 (RTC_CTRL),a
0048EB 0EE0                B   175    					ld c,RTC_SEC
0048ED 0608                B   176    					ld b,8
0048EF ED93                B   177    					otimr
0048F1 3E20                B   178    					ld a,00100000b				0048F3 ED39ED              B   179    					out0 (RTC_CTRL),a
0048F6 C1                  B   180    					pop bc
0048F7 E1                  B   181    					pop hl
0048F8 BF                  B   182    					cp a						0048F9 C9                  B   183    					ret	
                           B   184    
                           B   185    ;----------------------------------------------
                           B   186    ; Timer1 related 
                           B   187    ;----------------------------------------------
                           B   188    
0048FA                     B   189    os_init_msec_counter
                           B   190    
                           B   191    ; set E = 1 enable, E = 0 disable
                           B   192    
                           B   193    ; 1 tick = 50MHz/4, EG:  Reload value = 12500, 
                           B   194    			
0048FA E5                  B   195    				push hl
                           B   196    
0048FB AF                  B   197    				xor a
0048FC ED3983              B   198    				out0 (TMR1_CTL),a				                           B   199    				
0048FF CB43                B   200    				bit 0,e
004901 28 2B               B   201    				jr z,disable_tmr1
                           B   202    				
004903 21 FF 42 00         B   203    				ld hl,prt1_irq_handler
004907 22740000            B   204    				ld (074h),hl
                           B   205    				
00490B ED3892              B   206    				in0 a,(TMR_ISS)
00490E E6F3                B   207    				and 11110011b
004910 ED3992              B   208    				out0 (TMR_ISS),a
                           B   209    				
004913 21D43000            B   210    				ld hl,30d4h
004917 ED2185              B   211    				out0 (TMR1_RR_H),h
00491A ED2984              B   212    				out0 (TMR1_RR_L),l
                           B   213    
00491D 21000000            B   214    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004921 22 CF 69 00         B   215    				ld (seconds_counter),hl
004925 22 CC 69 00         B   216    				ld (milliseconds_counter),hl
                           B   217    
004929 3E53                B   218    				ld a,01010011b
00492B ED3983              B   219    				out0 (TMR1_CTL),a				                           B   220    			
00492E E1                  B   221    disable_tmr1	pop hl
00492F AF                  B   222    				xor a
004930 C9                  B   223    				ret
                           B   224    
                           B   225    
                           B   226    
004931                     B   227    os_read_msec_counter
                           B   228    			
004931 F3                  B   229    			di
004932 ED5B CC 69 00       B   230    			ld de,(milliseconds_counter)
004937 2A CF 69 00         B   231    			ld hl,(seconds_counter)
00493B FB                  B   232    			ei
00493C AF                  B   233    			xor a
00493D C9                  B   234    			ret
                           B   235    			
                           B   236    
                           B   237    ;----------------------------------------------
                           B   238    ; INIT KEYBOARD ROUTINE 
                           B   239    ;----------------------------------------------
                           B   240    
                           B   241    ; ZF set and A = 0 if all OK, else error code i
                           B   242    
00493E                     B   243    init_keyboard
                           B   244    
00493E 11004000            B   245    			ld de,16384							004942 CD 99 48 00         B   246    			call hwsc_time_delay
004946 F3                  B   247    			di
004947 CD FC 49 00         B   248    			call purge_keyboard
00494B CD 55 49 00         B   249    			call rs_keyboard
00494F FB                  B   250    			ei
004950 D0                  B   251    			ret nc
004951 3E8B                B   252    			ld a,08bh							004953 B7                  B   253    			or a
004954 C9                  B   254    			ret
                           B   255    			
                           B   256    			
004955                     B   257    rs_keyboard
                           B   258    
004955 3EFF                B   259    			ld a,0ffh
004957 CD 74 49 00         B   260    			call write_to_keyboard
00495B 30 04               B   261    			jr nc,kb_connected
00495D 3E8A                B   262    			ld a,08ah							00495F B7                  B   263    			or a
004960 C9                  B   264    			ret
                           B   265    
004961                     B   266    kb_connected
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   267    			
004961 0605                B   268    			ld b,5
004963 C5                  B   269    kb_initlp	push bc
004964 CD E0 49 00         B   270    			call wait_kb_byte					004968 C1                  B   271    			pop bc
004969 D8                  B   272    			ret c
00496A FEAA                B   273    			cp 0aah
00496C 28 04               B   274    			jr z,kb_postok
00496E 10 F3               B   275    			djnz kb_initlp						004970 37                  B   276    			scf									004971 C9                  B   277    			ret
                           B   278    			
                           B   279    			
004972 AF                  B   280    kb_postok	xor a
004973 C9                  B   281    			ret
                           B   282    	
                           B   283    	
                           B   284    ;----------------------------------------------
                           B   285    				
004974                     B   286    write_to_keyboard
                           B   287    
                           B   288    ; Put byte to send to keyboard in A
                           B   289    
004974 4F                  B   290    			ld c,a								004975 3E01                B   291    			ld a,01b							004977 ED3907              B   292    			out0 (port_ps2_ctrl),a
                           B   293    
00497A 110A0000            B   294    			ld de,10
00497E CD 99 48 00         B   295    			call hwsc_time_delay				                           B   296    
004982 3E03                B   297    			ld a,11b
004984 ED3907              B   298    			out0 (port_ps2_ctrl),a				                           B   299    			
004987 3E02                B   300    			ld a,10b
004989 ED3907              B   301    			out0 (port_ps2_ctrl),a				                           B   302    			
00498C CD 5C 4B 00         B   303    			call wait_kb_clk_high
                           B   304    			
004990 1601                B   305    			ld d,1								004992 0608                B   306    			ld b,8								004994 CD 2F 4B 00         B   307    kdoloop		call wait_kb_clk_low	
004998 D8                  B   308    			ret c
004999 AF                  B   309    			xor a
00499A CBCF                B   310    			set 1,a
00499C CB41                B   311    			bit 0,c
00499E 28 03               B   312    			jr z,kdbzero
0049A0 CB8F                B   313    			res 1,a
0049A2 14                  B   314    			inc d
0049A3 ED3907              B   315    kdbzero		out0 (port_ps2_ctrl),a				0049A6 CD 5C 4B 00         B   316    			call wait_kb_clk_high
0049AA D8                  B   317    			ret c
0049AB CB19                B   318    			rr c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0049AD 10 E5               B   319    			djnz kdoloop
                           B   320    
0049AF CD 2F 4B 00         B   321    			call wait_kb_clk_low
0049B3 D8                  B   322    			ret c
0049B4 AF                  B   323    			xor a
0049B5 CB42                B   324    			bit 0,d
0049B7 20 02               B   325    			jr nz,kparone
0049B9 CBCF                B   326    			set 1,a
0049BB ED3907              B   327    kparone		out0 (port_ps2_ctrl),a				0049BE CD 5C 4B 00         B   328    			call wait_kb_clk_high
0049C2 D8                  B   329    			ret c
                           B   330    			
0049C3 CD 2F 4B 00         B   331    			call wait_kb_clk_low
0049C7 D8                  B   332    			ret c
0049C8 AF                  B   333    			xor a
0049C9 ED3907              B   334    			out0 (port_ps2_ctrl),a				                           B   335    
0049CC CD 2B 4B 00         B   336    			call wait_kb_data_low				0049D0 D8                  B   337    			ret c
0049D1 CD 2F 4B 00         B   338    			call wait_kb_clk_low				0049D5 D8                  B   339    			ret c
                           B   340    				
0049D6 CD 58 4B 00         B   341    			call wait_kb_data_high				0049DA D8                  B   342    			ret c
0049DB CD 5C 4B 00         B   343    			call wait_kb_clk_high				0049DF C9                  B   344    			ret 
                           B   345    
                           B   346    
                           B   347    ;----------------------------------------------
                           B   348    
                           B   349    
0049E0                     B   350    wait_kb_byte
                           B   351    
0049E0 11008000            B   352    			ld de,8000h
0049E4 CD A5 48 00         B   353    			call hwsc_set_timeout				                           B   354    
0049E8 ED3807              B   355    wait_kloop	in0 a,(port_ps2_ctrl)
0049EB CB67                B   356    			bit 4,a
0049ED 20 08               B   357    			jr nz,rec_kbyte
                           B   358    			
0049EF CD B6 48 00         B   359    			call hwsc_test_timeout
0049F3 28 F3               B   360    			jr z,wait_kloop
0049F5 37                  B   361    			scf									0049F6 C9                  B   362    			ret
                           B   363    			
0049F7 ED3802              B   364    rec_kbyte	in0 a,(port_keyboard_data)			0049FA B7                  B   365    			or a
0049FB C9                  B   366    			ret
                           B   367    
                           B   368    
                           B   369    ;----------------------------------------------
                           B   370    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0049FC                     B   371    purge_keyboard
                           B   372    			
0049FC ED3807              B   373    			in0 a,(port_ps2_ctrl)
0049FF CB67                B   374    			bit 4,a
004A01 C8                  B   375    			ret z
004A02 ED3802              B   376    			in0 a,(port_keyboard_data)			004A05 18 F5               B   377    			jr purge_keyboard
                           B   378    
                           B   379    
                           B   380    
                           B   381    ;----------------------------------------------
                           B   382    ; INIT MOUSE ROUTINE 
                           B   383    ;----------------------------------------------
                           B   384    
                           B   385    ; ZF set and A = 0 if all OK, else error code i
                           B   386    
004A07                     B   387    init_mouse		
004A07 F3                  B   388    			di
004A08 CD 20 4B 00         B   389    			call purge_mouse
004A0C CD 16 4A 00         B   390    			call rs_mouse
004A10 FB                  B   391    			ei
004A11 D0                  B   392    			ret nc
004A12 3E8B                B   393    			ld a,08bh							004A14 B7                  B   394    			or a
004A15 C9                  B   395    			ret
                           B   396    
                           B   397    
004A16                     B   398    rs_mouse
004A16 3EFF                B   399    			ld a,0ffh							004A18 CD 98 4A 00         B   400    			call write_to_mouse		
004A1C 30 04               B   401    			jr nc,mouse_connected
004A1E 3E8A                B   402    			ld a,08ah							004A20 B7                  B   403    			or a
004A21 C9                  B   404    			ret
                           B   405    
                           B   406    
004A22                     B   407    mouse_connected
                           B   408    
004A22 0605                B   409    			ld b,5
004A24 C5                  B   410    ms_initlp	push bc
004A25 CD 04 4B 00         B   411    			call wait_mouse_byte				004A29 C1                  B   412    			pop bc
004A2A D8                  B   413    			ret c
004A2B FEAA                B   414    			cp 0aah
004A2D 28 04               B   415    			jr z,ms_postok
004A2F 10 F3               B   416    			djnz ms_initlp
004A31 18 43               B   417    			jr bad_mouse
                           B   418    			
004A33 CD 04 4B 00         B   419    ms_postok	call wait_mouse_byte				004A37 D8                  B   420    			ret c
004A38 B7                  B   421    			or a
004A39 20 3B               B   422    			jr nz,bad_mouse						Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   423    			
004A3B 3E03                B   424    			ld a,3
004A3D 32 A3 6B 00         B   425    			ld (mouse_packet_size),a
                           B   426    
004A41 21 6D 68 00         B   427    			ld hl,intellimouse_seq
004A45 0606                B   428    			ld b,6
004A47 CD 7A 4A 00         B   429    			call mouse_sequence
004A4B D8                  B   430    			ret c
                           B   431    			
004A4C 3EF2                B   432    			ld a,0f2h
004A4E CD 89 4A 00         B   433    			call write_mouse_wait_ack			004A52 D8                  B   434    			ret c
004A53 CD 04 4B 00         B   435    			call wait_mouse_byte				004A57 D8                  B   436    			ret c
004A58 32 A2 6B 00         B   437    			ld (mouse_id),a
004A5C B7                  B   438    			or a								004A5D 28 0A               B   439    			jr z,standard_mouse
004A5F FE03                B   440    			cp 3
004A61 20 13               B   441    			jr nz,bad_mouse						004A63 3E04                B   442    			ld a,4
004A65 32 A3 6B 00         B   443    			ld (mouse_packet_size),a
                           B   444    
004A69                     B   445    standard_mouse
                           B   446    		
004A69 21 73 68 00         B   447    			ld hl,mouse_settings_seq
004A6D 0606                B   448    			ld b,6
004A6F CD 7A 4A 00         B   449    			call mouse_sequence
004A73 D8                  B   450    			ret c
004A74 AF                  B   451    			xor a								004A75 C9                  B   452    			ret
                           B   453    
                           B   454    
004A76 3E89                B   455    bad_mouse	ld a,089h							004A78 B7                  B   456    			or a
004A79 C9                  B   457    			ret
                           B   458    
                           B   459    
004A7A                     B   460    mouse_sequence
                           B   461    
004A7A 7E                  B   462    mseqlp		ld a,(hl)
004A7B E5                  B   463    			push hl
004A7C C5                  B   464    			push bc
004A7D CD 89 4A 00         B   465    			call write_mouse_wait_ack
004A81 C1                  B   466    			pop bc
004A82 E1                  B   467    			pop hl
004A83 D8                  B   468    			ret c
004A84 23                  B   469    			inc hl
004A85 10 F3               B   470    			djnz mseqlp
004A87 AF                  B   471    			xor a
004A88 C9                  B   472    			ret
                           B   473    
                           B   474    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004A89                     B   475    write_mouse_wait_ack
                           B   476    			
004A89 CD 98 4A 00         B   477    			call write_to_mouse
004A8D D8                  B   478    			ret c
004A8E CD 04 4B 00         B   479    			call wait_mouse_byte				004A92 D8                  B   480    			ret c
004A93 FEFA                B   481    			cp 0fah								004A95 C8                  B   482    			ret z
004A96 37                  B   483    			scf
004A97 C9                  B   484    			ret
                           B   485    			
                           B   486    ;----------------------------------------------
                           B   487    				
004A98                     B   488    write_to_mouse
                           B   489    
                           B   490    ; Put byte to send to mouse in A
                           B   491    
004A98 4F                  B   492    			ld c,a								004A99 3E04                B   493    			ld a,0100b							004A9B ED3907              B   494    			out0 (port_ps2_ctrl),a
                           B   495    
004A9E 110A0000            B   496    			ld de,10
004AA2 CD 99 48 00         B   497    			call hwsc_time_delay				                           B   498    
004AA6 3E0C                B   499    			ld a,1100b
004AA8 ED3907              B   500    			out0 (port_ps2_ctrl),a				                           B   501    			
004AAB 3E08                B   502    			ld a,1000b
004AAD ED3907              B   503    			out0 (port_ps2_ctrl),a				                           B   504    			
004AB0 CD 64 4B 00         B   505    			call wait_mouse_clk_high
                           B   506    			
004AB4 1601                B   507    			ld d,1								004AB6 0608                B   508    			ld b,8								004AB8 CD 37 4B 00         B   509    mdoloop		call wait_mouse_clk_low	
004ABC D8                  B   510    			ret c
004ABD AF                  B   511    			xor a
004ABE CBDF                B   512    			set 3,a
004AC0 CB41                B   513    			bit 0,c
004AC2 28 03               B   514    			jr z,mdbzero
004AC4 CB9F                B   515    			res 3,a
004AC6 14                  B   516    			inc d
004AC7 ED3907              B   517    mdbzero		out0 (port_ps2_ctrl),a				004ACA CD 64 4B 00         B   518    			call wait_mouse_clk_high
004ACE D8                  B   519    			ret c
004ACF CB19                B   520    			rr c
004AD1 10 E5               B   521    			djnz mdoloop
                           B   522    
004AD3 CD 37 4B 00         B   523    			call wait_mouse_clk_low
004AD7 D8                  B   524    			ret c
004AD8 AF                  B   525    			xor a
004AD9 CB42                B   526    			bit 0,d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004ADB 20 02               B   527    			jr nz,parone
004ADD CBDF                B   528    			set 3,a
004ADF ED3907              B   529    parone		out0 (port_ps2_ctrl),a				004AE2 CD 64 4B 00         B   530    			call wait_mouse_clk_high
004AE6 D8                  B   531    			ret c
                           B   532    			
004AE7 CD 37 4B 00         B   533    			call wait_mouse_clk_low
004AEB D8                  B   534    			ret c
004AEC AF                  B   535    			xor a
004AED ED3907              B   536    			out0 (port_ps2_ctrl),a				                           B   537    
004AF0 CD 33 4B 00         B   538    			call wait_mouse_data_low			004AF4 D8                  B   539    			ret c
004AF5 CD 37 4B 00         B   540    			call wait_mouse_clk_low				004AF9 D8                  B   541    			ret c
                           B   542    				
004AFA CD 60 4B 00         B   543    			call wait_mouse_data_high			004AFE D8                  B   544    			ret c
004AFF CD 64 4B 00         B   545    			call wait_mouse_clk_high			004B03 C9                  B   546    			ret 
                           B   547    
                           B   548    ;----------------------------------------------
                           B   549    
                           B   550    
004B04                     B   551    wait_mouse_byte
                           B   552    
004B04 11008000            B   553    			ld de,8000h
004B08 CD A5 48 00         B   554    			call hwsc_set_timeout				                           B   555    
004B0C ED3807              B   556    wait_mloop	in0 a,(port_ps2_ctrl)
004B0F CB6F                B   557    			bit 5,a
004B11 20 08               B   558    			jr nz,rec_mbyte
                           B   559    			
004B13 CD B6 48 00         B   560    			call hwsc_test_timeout
004B17 28 F3               B   561    			jr z,wait_mloop
004B19 37                  B   562    			scf									004B1A C9                  B   563    			ret
                           B   564    			
004B1B ED3806              B   565    rec_mbyte	in0 a,(port_mouse_data)				004B1E B7                  B   566    			or a
004B1F C9                  B   567    			ret
                           B   568    
                           B   569    ;----------------------------------------------
                           B   570    
004B20                     B   571    purge_mouse
                           B   572    			
004B20 ED3807              B   573    			in0 a,(port_ps2_ctrl)
004B23 CB6F                B   574    			bit 5,a
004B25 C8                  B   575    			ret z
004B26 ED3806              B   576    			in0 a,(port_mouse_data)			; r
004B29 18 F5               B   577    			jr purge_mouse
                           B   578    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   579    
                           B   580    ;----------------------------------------------
                           B   581    
                           B   582    
004B2B                     B   583    wait_kb_data_low
                           B   584    
004B2B 3E02                B   585    			ld a,2
004B2D 18 0A               B   586    			jr test_lo_ps2
                           B   587    			
004B2F                     B   588    wait_kb_clk_low
                           B   589    
004B2F 3E01                B   590    			ld a,1
004B31 18 06               B   591    			jr test_lo_ps2			
                           B   592    
004B33                     B   593    wait_mouse_data_low
                           B   594    
004B33 3E08                B   595    			ld a,8
004B35 18 02               B   596    			jr test_lo_ps2
                           B   597    
004B37                     B   598    wait_mouse_clk_low
                           B   599    
004B37 3E04                B   600    			ld a,4
                           B   601    
004B39 C5                  B   602    test_lo_ps2	push bc
004B3A D5                  B   603    			push de
004B3B 4F                  B   604    			ld c,a
004B3C 11004000            B   605    			ld de,04000h					; a
004B40 CD A5 48 00         B   606    			call hwsc_set_timeout
                           B   607    
004B44 CD B6 48 00         B   608    nkb_lw		call hwsc_test_timeout			; t
004B48 28 04               B   609    			jr z,nkb_lnto
004B4A D1                  B   610    			pop de
004B4B C1                  B   611    			pop bc
004B4C 37                  B   612    			scf								; c
004B4D C9                  B   613    			ret
004B4E ED3807              B   614    nkb_lnto	in0 a,(port_ps2_ctrl)
004B51 A1                  B   615    			and c
004B52 20 F0               B   616    			jr nz,nkb_lw
                           B   617    					
004B54 D1                  B   618    			pop de
004B55 C1                  B   619    			pop bc
004B56 AF                  B   620    			xor a
004B57 C9                  B   621    			ret					
                           B   622    
                           B   623    
                           B   624    
                           B   625    
004B58                     B   626    wait_kb_data_high
                           B   627    
004B58 3E02                B   628    			ld a,2
004B5A 18 0A               B   629    			jr test_hi_ps2
                           B   630    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004B5C                     B   631    wait_kb_clk_high
                           B   632    
004B5C 3E01                B   633    			ld a,1
004B5E 18 06               B   634    			jr test_hi_ps2
                           B   635    
                           B   636    
004B60                     B   637    wait_mouse_data_high
                           B   638    			
004B60 3E08                B   639    			ld a,8
004B62 18 02               B   640    			jr test_hi_ps2
                           B   641    			 
004B64                     B   642    wait_mouse_clk_high
                           B   643    
004B64 3E04                B   644    			ld a,4
                           B   645    
004B66 C5                  B   646    test_hi_ps2	push bc
004B67 D5                  B   647    			push de
004B68 4F                  B   648    			ld c,a
004B69 11004000            B   649    			ld de,04000h					; a
004B6D CD A5 48 00         B   650    			call hwsc_set_timeout
                           B   651    
004B71 CD B6 48 00         B   652    nkb_hw		call hwsc_test_timeout			; t
004B75 28 04               B   653    			jr z,nkb_hnto
004B77 D1                  B   654    			pop de
004B78 C1                  B   655    			pop bc
004B79 37                  B   656    			scf								; c
004B7A C9                  B   657    			ret
004B7B ED3807              B   658    nkb_hnto	in0 a,(port_ps2_ctrl)
004B7E A1                  B   659    			and c
004B7F 28 F0               B   660    			jr z,nkb_hw
                           B   661    					
004B81 D1                  B   662    			pop de
004B82 C1                  B   663    			pop bc
004B83 AF                  B   664    			xor a							; c
004B84 C9                  B   665    			ret
                           B   666    
                           B   667    
                           B   668    ;==============================================
                           B   669    
004B85                     B   670    hwsc_play_audio
                           B   671    
                           B   672    ; set HL register to location of an audio data 
                           B   673    
                           B   674    ; 0 - start 
                           B   675    ; 3 - length
                           B   676    ; 6 - loop start
                           B   677    ; 9 - loop length
                           B   678    ; c - frequency constant
                           B   679    ; e - volume
                           B   680    
                           B   681    ; set C register to set channels wave is to pla
                           B   682    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004B85 E5                  B   683    				push hl
004B86 FDE1                B   684    				pop iy
004B88 DD210014 FF         B   685    				ld ix,hw_audio_registers
004B8D CD C2 4B 00         B   686    				call audio_reg_wait				                           B   687    				
004B91 0608                B   688    				ld b,8
004B93 CB39                B   689    audchanloop		srl c
004B95 30 24               B   690    				jr nc,not_this_chan
                           B   691    				
004B97 FD1700              B   692    				ld de,(iy)
004B9A DD1F00              B   693    				ld (ix),de						                           B   694    
004B9D FD1703              B   695    				ld de,(iy+3)
004BA0 DD1F04              B   696    				ld (ix+04h),de					                           B   697    				
004BA3 FD170C              B   698    				ld de,(iy+0ch)
004BA6 DD1F08              B   699    				ld (ix+08h),de					                           B   700    				
004BA9 FD5E0E              B   701    				ld e,(iy+0eh)
004BAC DD1F0C              B   702    				ld (ix+0ch),de					                           B   703    				
004BAF FD1706              B   704    				ld de,(iy+6)
004BB2 DD1F10              B   705    				ld (ix+10h),de					                           B   706    				
004BB5 FD1709              B   707    				ld de,(iy+9)
004BB8 DD1F14              B   708    				ld (ix+14h),de					                           B   709    
004BBB                     B   710    not_this_chan	
004BBB ED3220              B   711    				lea ix,ix+20h			
004BBE 10 D3               B   712    				djnz audchanloop
004BC0 AF                  B   713    				xor a
004BC1 C9                  B   714    				ret
                           B   715    
                           B   716    
                           B   717    ;----------------------------------------------
                           B   718    
004BC2                     B   719    audio_reg_wait	
                           B   720    
004BC2 3E01                B   721    				ld a,1
004BC4 320314FF            B   722    				ld (hw_audio_registers+3),a		                           B   723    				
004BC8 ED3801              B   724    wait_audreg		in0 a,(port_hw_flags)			004BCB E640                B   725    				and 040h
004BCD 28 F9               B   726    				jr z,wait_audreg				004BCF AF                  B   727    				xor a
004BD0 C9                  B   728    				ret
004BD1 C9                  B   729    				ret
                           B   730    
                           B   731    
                           B   732    ;----------------------------------------------
                           B   733    				
                           B   734    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004BD2                     B   735    hwsc_disable_audio
                           B   736    
004BD2 AF                  B   737    				xor a
004BD3 320314FF            B   738    				ld (hw_audio_registers+3),a		                           B   739    				
004BD7 DD210014 FF         B   740    				ld ix,hw_audio_registers		004BDC 0608                B   741    				ld b,8
004BDE 11000000            B   742    				ld de,0
004BE2 DD1F0C              B   743    disaud_lp		ld (ix+0ch),de
004BE5 ED3220              B   744    				lea ix,ix+020h
004BE8 10 F8               B   745    				djnz disaud_lp
004BEA C9                  B   746    				ret
                           B   747    				
                           B   748    ;----------------------------------------------
                           B   749    
004BEB                     B   750    hwsc_get_joysticks
                           B   751    
004BEB ED389E              B   752    				in0 a,(PC_DR)				
004BEE 2F                  B   753    				cpl
004BEF 47                  B   754    				ld b,a
004BF0 E60F                B   755    				and 0fh
004BF2 5F                  B   756    				ld e,a
004BF3 78                  B   757    				ld a,b
004BF4 0F                  B   758    				rrca
004BF5 0F                  B   759    				rrca
004BF6 0F                  B   760    				rrca
004BF7 0F                  B   761    				rrca
004BF8 E60F                B   762    				and 0fh
004BFA 57                  B   763    				ld d,a
                           B   764    				
004BFB ED38A2              B   765    				in0 a,(PD_DR)	
004BFE CB67                B   766    				bit 4,a						; f
004C00 20 02               B   767    				jr nz,noj1b1
004C02 CBEA                B   768    				set 5,d
                           B   769    
004C04 CB6F                B   770    noj1b1			bit 5,a						; f
004C06 20 02               B   771    				jr nz,noj1b0
004C08 CBE2                B   772    				set 4,d
                           B   773    				
004C0A CB77                B   774    noj1b0			bit 6,a						; f
004C0C 20 02               B   775    				jr nz,noj0b1
004C0E CBEB                B   776    				set 5,e
                           B   777    
004C10 CB7F                B   778    noj0b1			bit 7,a						; f
004C12 20 02               B   779    				jr nz,noj0b0
004C14 CBE3                B   780    				set 4,e
                           B   781    
004C16 AF                  B   782    noj0b0			xor a
004C17 C9                  B   783    				ret
                           B   784    				
                           B   785    				
                           B   786    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   787    			
                           B   788    				
                           B   789    				
                           A  3787    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004C18                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004C18 D5                  B    13    				push de
004C19 51                  B    14    				ld d,c
004C1A E5                  B    15    				push hl
                           B    16    				
004C1B CD 85 4C 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004C1F BE                  B    18    				cp (hl)							004C20 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004C22 01000000            B    21    new_key			ld bc,0							004C26 4F                  B    22    				ld c,a
004C27 21 7B 6B 00         B    23    				ld hl,scancode_buffer	
004C2B 09                  B    24    				add hl,bc
004C2C 7E                  B    25    				ld a,(hl)						                           B    26    
004C2D 0E10                B    27    				ld c,16
004C2F 09                  B    28    				add hl,bc						004C30 4F                  B    29    				ld c,a							004C31 7E                  B    30    				ld a,(hl)						                           B    31    
004C32 1E00                B    32    				ld e,0							004C34 21 C6 66 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004C38 CB4F                B    35    				bit 1,a
004C3A 28 04               B    36    				jr z,not_ctrl					004C3C 1E60                B    37    				ld e,96							004C3E 18 16               B    38    				jr got_keymap					                           B    39    							
004C40 CB47                B    40    not_ctrl		bit 0,a
004C42 20 04               B    41    				jr nz,shifted
004C44 CB67                B    42    				bit 4,a
004C46 28 06               B    43    				jr z,not_shifted
004C48 21 28 67 00         B    44    shifted			ld hl,shifted_keymap			004C4C 18 08               B    45    				jr got_keymap
                           B    46    				
004C4E CB5F                B    47    not_shifted		bit 3,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004C50 28 04               B    48    				jr z,got_keymap	
004C52 21 8A 67 00         B    49    				ld hl,alted_keymap				                           B    50    
004C56 79                  B    51    got_keymap		ld a,c							004C57 FE62                B    52    				cp 062h
004C59 30 07               B    53    				jr nc,gotkdone
004C5B 09                  B    54    				add hl,bc						004C5C 7E                  B    55    				ld a,(hl)						004C5D 93                  B    56    				sub a,e							004C5E 30 01               B    57    				jr nc,subkey_ok	
004C60 AF                  B    58    				xor a							004C61 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004C62 3A 9C 6B 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004C66 3C                  B    62    				inc a							004C67 E60F                B    63    				and 15
004C69 32 9C 6B 00         B    64    				ld (key_buf_rd_idx),a			004C6D 79                  B    65    				ld a,c							004C6E E1                  B    66    				pop hl
004C6F 4A                  B    67    				ld c,d
004C70 D1                  B    68    				pop de
004C71 BF                  B    69    				cp a							004C72 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004C73                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
004C73 D5                  B    82    				push de
004C74 51                  B    83    				ld d,c
004C75 E5                  B    84    				push hl
004C76 CD 85 4C 00         B    85    				call get_kb_buffer_indexes		004C7A BE                  B    86    				cp (hl)							004C7B 20 A5               B    87    				jr nz,new_key					004C7D 3E81                B    88    				ld a,81h			
004C7F 47                  B    89    				ld b,a
004C80 B7                  B    90    				or a
004C81 E1                  B    91    				pop hl
004C82 4A                  B    92    				ld c,d
004C83 D1                  B    93    				pop de
004C84 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
004C85                     B    98    get_kb_buffer_indexes
                           B    99    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B   100    			
004C85 21 9B 6B 00         B   101    				ld hl,key_buf_wr_idx			004C89 3A 9C 6B 00         B   102    				ld a,(key_buf_rd_idx)			004C8D C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004C8E                     B    21    serial_get_header
                           B    22    
004C8E 32 4A 68 00         B    23    				ld (serial_timeout),a			004C92 22 34 68 00         B    24    				ld (serial_fn_addr),hl
004C96 CD 5C 45 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004C9A CD 7D 4D 00         B    27    				call s_getblock					004C9E 28 0C               B    28    				jr z,s_gbfhok					004CA0 F5                  B    29    				push af							004CA1 3A 6B 68 00         B    30    				ld a,(serial_transfer_started)
004CA5 B7                  B    31    				or a							004CA6 C4 E4 4D 00         B    32    				call nz,s_badack				004CAA F1                  B    33    				pop af
004CAB C9                  B    34    				ret
                           B    35    	
004CAC 21 5F 68 00         B    36    s_gbfhok		ld hl,serial_header_id			004CB0 11140700            B    37    				ld de,serial_buffer+20			004CB4 060C                B    38    				ld b,12
004CB6 CD 2D 13 00         B    39    				call os_compare_strings
004CBA 20 0F               B    40    				jr nz,s_nfhdr
004CBC 06E0                B    41    				ld b,256-32						004CBE 21200700            B    42    				ld hl,serial_buffer+32
004CC2 7E                  B    43    s_chdr			ld a,(hl)
004CC3 23                  B    44    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004CC4 B7                  B    45    				or a
004CC5 20 04               B    46    				jr nz,s_nfhdr
004CC7 10 F9               B    47    				djnz s_chdr
004CC9 18 08               B    48    				jr s_fhcsok
                           B    49    				
004CCB CD E4 4D 00         B    50    s_nfhdr			call s_badack					004CCF 3E85                B    51    				ld a,085h						004CD1 B7                  B    52    				or a
004CD2 C9                  B    53    				ret
                           B    54    		
004CD3 21100700            B    55    s_fhcsok		ld hl,serial_buffer+16			004CD7 11 5B 68 00         B    56    				ld de,serial_fileheader+16
004CDB 01040000            B    57    				ld bc,4
004CDF EDB0                B    58    				ldir
                           B    59    				
004CE1 21000700            B    60    				ld hl,serial_buffer
004CE5 11 4B 68 00         B    61    				ld de,serial_fileheader			004CE9 0610                B    62    				ld b,16							004CEB 7E                  B    63    s_tuclp			ld a,(hl)						004CEC B7                  B    64    				or a
004CED 28 0B               B    65    				jr z,s_ffhswz	
004CEF CD 67 13 00         B    66    				call os_uppercasify
004CF3 12                  B    67    				ld (de),a
004CF4 23                  B    68    				inc hl
004CF5 13                  B    69    				inc de
004CF6 10 F3               B    70    				djnz s_tuclp
004CF8 18 04               B    71    				jr s_tucdone
004CFA 12                  B    72    s_ffhswz		ld (de),a
004CFB 13                  B    73    				inc de
004CFC 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004CFE 2A 34 68 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004D02 7E                  B    77    				ld a,(hl)
004D03 FE2A                B    78    				cp '*'
004D05 28 14               B    79    				jr z,s_rffns					004D07 11 4B 68 00         B    80    				ld de,serial_fileheader
004D0B 0610                B    81    				ld b,16
004D0D CD 2D 13 00         B    82    				call os_compare_strings
004D11 28 08               B    83    				jr z,s_rffns
004D13 CD E4 4D 00         B    84    s_rfnbad		call s_badack
004D17 3E87                B    85    				ld a,087h						004D19 B7                  B    86    				or a
004D1A C9                  B    87    				ret
                           B    88    				
004D1B DD21 4B 68 00       B    89    s_rffns			ld ix,serial_fileheader			004D20 AF                  B    90    				xor a
004D21 C9                  B    91    				ret
                           B    92    
004D22 F5                  B    93    s_fail			push af				
004D23 CD E4 4D 00         B    94    				call s_badack		 
004D27 F1                  B    95    				pop af
004D28 C9                  B    96    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004D29                     B   114    serial_receive_file
                           B   115    
004D29 3E0A                B   116    				ld a,10							004D2B 32 4A 68 00         B   117    				ld (serial_timeout),a
004D2F E5                  B   118    				push hl
004D30 CD D3 4D 00         B   119    				call s_goodack					004D34 DDE1                B   120    				pop ix							004D36 ED5B 5B 68 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004D3B CD 7D 4D 00         B   123    s_gbloop		call s_getblock
004D3F 20 E1               B   124    				jr nz,s_fail
004D41 0E00                B   125    				ld c,0							004D43 FD210007 00         B   126    				ld iy,serial_buffer
004D48 FD7E00              B   127    s_rfloop		ld a,(iy)
004D4B DD7700              B   128    				ld (ix),a						004D4E 1B                  B   129    				dec de							004D4F 21000000            B   130    				ld hl,0
004D53 AF                  B   131    				xor a
004D54 ED5A                B   132    				adc hl,de						004D56 28 1A               B   133    				jr z,s_rfabr					004D58 C5                  B   134    				push bc
004D59 01010000            B   135    				ld bc,1
004D5D DD09                B   136    				add ix,bc						004D5F C1                  B   137    				pop bc
004D60 30 05               B   138    				jr nc,s_nbt
004D62 3E84                B   139    				ld a,84h						004D64 B7                  B   140    				or a
004D65 18 BB               B   141    				jr s_fail
004D67 FD23                B   142    s_nbt			inc iy
004D69 0D                  B   143    				dec c
004D6A 20 DC               B   144    				jr nz,s_rfloop
004D6C CD D3 4D 00         B   145    				call s_goodack					004D70 18 C9               B   146    				jr s_gbloop
                           B   147    			
004D72 CD D3 4D 00         B   148    s_rfabr			call s_goodack					Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004D76 DD21 4B 68 00       B   149    				ld ix,serial_fileheader			004D7B AF                  B   150    				xor a							004D7C C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004D7D                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004D7D AF                  B   159    				xor a
004D7E 32 6B 68 00         B   160    				ld (serial_transfer_started),a	004D82 E5                  B   161    				push hl							004D83 D5                  B   162    				push de
004D84 C5                  B   163    				push bc
004D85 21000700            B   164    				ld hl,serial_buffer				004D89 0600                B   165    				ld b,0
004D8B D9                  B   166    				exx
004D8C 21FFFF00            B   167    				ld hl,0ffffh					004D90 D9                  B   168    				exx
004D91 CD 06 45 00         B   169    s_lgb			call receive_serial_byte
004D95 20 38               B   170    				jr nz,s_gberr					004D97 F5                  B   171    				push af
004D98 3E01                B   172    				ld a,1
004D9A 32 6B 68 00         B   173    				ld (serial_transfer_started),a
004D9E F1                  B   174    				pop af
004D9F 77                  B   175    				ld (hl),a
004DA0 D9                  B   176    				exx
004DA1 AC                  B   177    				xor h							004DA2 67                  B   178    				ld h,a			
004DA3 0608                B   179    				ld b,8
004DA5 4029                B   180    rxcrcbyte		add.sis hl,hl					004DA7 30 08               B   181    				jr nc,rxcrcnext
004DA9 7C                  B   182    				ld a,h
004DAA EE10                B   183    				xor 10h
004DAC 67                  B   184    				ld h,a
004DAD 7D                  B   185    				ld a,l
004DAE EE21                B   186    				xor 21h
004DB0 6F                  B   187    				ld l,a
004DB1 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
004DB3 D9                  B   189    				exx
004DB4 23                  B   190    				inc hl
004DB5 10 DA               B   191    				djnz s_lgb
004DB7 D9                  B   192    				exx								                           B   193    			
004DB8 CD 06 45 00         B   194    				call receive_serial_byte		004DBC 20 11               B   195    				jr nz,s_gberr
004DBE 4F                  B   196    				ld c,a
004DBF CD 06 45 00         B   197    				call receive_serial_byte
004DC3 20 0A               B   198    				jr nz,s_gberr		
004DC5 47                  B   199    				ld b,a
                           B   200    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004DC6 AF                  B   201    				xor a							004DC7 52ED42              B   202    				sbc.s hl,bc						004DCA 28 03               B   203    				jr z,s_gberr
                           B   204    			
004DCC 3E86                B   205    				ld a,86h						004DCE B7                  B   206    				or a							004DCF C1                  B   207    s_gberr			pop bc
004DD0 D1                  B   208    				pop de
004DD1 E1                  B   209    				pop hl
004DD2 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
004DD3 C5                  B   214    s_goodack		push bc
004DD4 014F4B00            B   215    				ld bc,04b4fh					004DD8 79                  B   216    ackbytes		ld a,c
004DD9 CD 41 45 00         B   217    				call send_serial_byte
004DDD 78                  B   218    				ld a,b
004DDE CD 41 45 00         B   219    				call send_serial_byte
004DE2 C1                  B   220    				pop bc
004DE3 C9                  B   221    				ret
                           B   222    
004DE4 C5                  B   223    s_badack		push bc
004DE5 01585800            B   224    				ld bc,05858h					004DE9 18 ED               B   225    				jr ackbytes
                           B   226    
004DEB C5                  B   227    s_holdack		push bc
004DEC 01575700            B   228    				ld bc,05757h					004DF0 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004DF2                     B   249    serial_send_file
                           B   250    			
004DF2 3E01                B   251    				ld a,1							004DF4 32 4A 68 00         B   252    				ld (serial_timeout),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   253    			
004DF8 DD22 2E 68 00       B   254    				ld (serial_ez80_address),ix
004DFD ED53 5B 68 00       B   255    				ld (serial_fileheader+10h),de	004E02 E5                  B   256    				push hl
004E03 21000000            B   257    				ld hl,0
004E07 AF                  B   258    				xor a
004E08 ED5A                B   259    				adc hl,de
004E0A 20 05               B   260    				jr nz,s_flok
004E0C E1                  B   261    				pop hl
004E0D 3E81                B   262    				ld a,081h						004E0F B7                  B   263    				or a							004E10 C9                  B   264    				ret
                           B   265    			
004E11 21 4B 68 00         B   266    s_flok			ld hl,serial_fileheader			004E15 01100000            B   267    				ld bc,16
004E19 AF                  B   268    				xor a
004E1A CD 47 16 00         B   269    				call os_bchl_memfill
004E1E E1                  B   270    				pop hl							004E1F 11 4B 68 00         B   271    				ld de,serial_fileheader
004E23 0610                B   272    				ld b,16
004E25 CD 4C 13 00         B   273    				call os_copy_ascii_run
                           B   274    				
004E29 21 5F 68 00         B   275    				ld hl,serial_header_id			004E2D 11 5F 68 00         B   276    				ld de,serial_fileheader+014h
004E31 010C0000            B   277    				ld bc,12		
004E35 EDB0                B   278    				ldir
                           B   279    			
004E37 DD21 4B 68 00       B   280    				ld ix,serial_fileheader			004E3C 11200000            B   281    				ld de,32
004E40 CD 76 4E 00         B   282    				call s_makeblock			
004E44 C0                  B   283    				ret nz
004E45 CD AE 4E 00         B   284    				call s_sendblock
004E49 C0                  B   285    				ret nz
004E4A CD DB 4E 00         B   286    				call s_waitack					004E4E C0                  B   287    				ret nz							                           B   288    				
004E4F DD2A 2E 68 00       B   289    				ld ix,(serial_ez80_address)
004E54 ED5B 5B 68 00       B   290    				ld de,(serial_fileheader+16)	004E59 CD 76 4E 00         B   291    s_sbloop		call s_makeblock				004E5D 38 16               B   292    				jr c,s_rerr
004E5F CD AE 4E 00         B   293    				call s_sendblock				004E63 38 10               B   294    				jr c,s_rerr	
004E65 CD DB 4E 00         B   295    				call s_waitack					004E69 38 0A               B   296    				jr c,s_rerr
004E6B 21000000            B   297    				ld hl,0
004E6F AF                  B   298    				xor a
004E70 ED5A                B   299    				adc hl,de
004E72 20 E5               B   300    				jr nz,s_sbloop					004E74 AF                  B   301    				xor a							004E75 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   305    
004E76                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004E76 21000700            B   312    				ld hl,serial_buffer				004E7A 01000100            B   313    				ld bc,256						004E7E AF                  B   314    				xor a							004E7F CD 47 16 00         B   315    				call os_bchl_memfill			                           B   316    				
004E83 0600                B   317    				ld b,0							004E85 FD210007 00         B   318    				ld iy,serial_buffer	
004E8A DD7E00              B   319    s_sloop			ld a,(ix)
004E8D FD7700              B   320    				ld (iy),a
004E90 1B                  B   321    				dec de							004E91 21000000            B   322    				ld hl,0
004E95 AF                  B   323    				xor a
004E96 ED5A                B   324    				adc hl,de
004E98 28 12               B   325    				jr z,s_mbend	
004E9A FD23                B   326    				inc iy							004E9C C5                  B   327    				push bc
004E9D 01010000            B   328    				ld bc,1
004EA1 DD09                B   329    				add ix,bc						004EA3 C1                  B   330    				pop bc							004EA4 20 04               B   331    				jr nz,s_sbok
004EA6 3E84                B   332    				ld a,84h						004EA8 B7                  B   333    				or a
004EA9 C9                  B   334    				ret
004EAA 10 DE               B   335    s_sbok			djnz s_sloop
004EAC AF                  B   336    s_mbend			xor a
004EAD C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004EAE                     B   341    s_sendblock
                           B   342    
004EAE E5                  B   343    				push hl
004EAF D5                  B   344    				push de							004EB0 C5                  B   345    				push bc				
004EB1 21000700            B   346    				ld hl,serial_buffer			
004EB5 1E00                B   347    				ld e,0
004EB7 7E                  B   348    s_sblklp		ld a,(hl)
004EB8 CD 41 45 00         B   349    				call send_serial_byte
004EBC 23                  B   350    				inc hl
004EBD 1D                  B   351    				dec e
004EBE 20 F7               B   352    				jr nz,s_sblklp
004EC0 11000700            B   353    				ld de,serial_buffer
004EC4 01000000            B   354    				ld bc,0
004EC8 CD ED 15 00         B   355    				call crc_checksum
004ECC 7D                  B   356    				ld a,l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004ECD CD 41 45 00         B   357    				call send_serial_byte
004ED1 7C                  B   358    				ld a,h
004ED2 CD 41 45 00         B   359    				call send_serial_byte
004ED6 AF                  B   360    				xor a
004ED7 C1                  B   361    s_popall		pop bc
004ED8 D1                  B   362    				pop de
004ED9 E1                  B   363    				pop hl
004EDA C9                  B   364    				ret
                           B   365    	
                           B   366    
004EDB                     B   367    s_waitack
004EDB E5                  B   368    				push hl
004EDC D5                  B   369    				push de
004EDD C5                  B   370    				push bc
004EDE CD 06 45 00         B   371    				call receive_serial_byte		004EE2 20 F3               B   372    				jr nz,s_popall
004EE4 47                  B   373    				ld b,a
004EE5 CD 06 45 00         B   374    				call receive_serial_byte
004EE9 20 EC               B   375    				jr nz,s_popall
004EEB 4F                  B   376    				ld c,a
004EEC 264F                B   377    				ld h,'O'
004EEE 2E4B                B   378    				ld l,'K'
004EF0 AF                  B   379    				xor a
004EF1 52ED42              B   380    				sbc.s hl,bc						004EF4 28 E1               B   381    				jr z,s_popall					                           B   382    			
004EF6 3E85                B   383    				ld a,085h						004EF8 B7                  B   384    				or a
004EF9 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v08.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.08 - Speeded up reading of files (pre-calc 
                           B     8    ;        All routines return with ZF not set if
                           B     9    ;
                           B    10    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    11    ; 0.06 - Fixed "fs_get_volume_label"
                           B    12    ; 0.05 - Fixed format command
                           B    13    ; 0.04 - File system error codes are now in the
                           B    14    ; 0.03 - ADL mode
                           B    15    ; 0.02 - removed references to banks, added 24 
                           B    16    ; 0.01 - first version based on FLOS routines v
                           B    17    ;
                           B    18    ; Known limitations:
                           B    19    ; ------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B    20    ; If a disk full error is returned during a fil
                           B    21    ; Allows a file to be created in root even if t
                           B    22    ;        
                           B    23    ;----------------------------------------------
                           B    24    ;
                           B    25    ; All routines return carry clear / zero flag s
                           B    26    ;
                           B    27    ; If carry set there was a driver error, A = Er
                           B    28    ; Check for "carry set" first!
                           B    29    ; If carry clear, check zero flag. If not set: 
                           B    30    ;
                           B    31    ;					$c1  - Disk full
                           B    32    ;					$c2  - file not found
                           B    33    ;             	    $c3  - (root) dir table is 
                           B    34    ;					$c4  - directory requested 
                           B    35    ;             	    $c5  - cant delete dir, it 
                           B    36    ;					$c6  - not a file
                           B    37    ;					$c7  - file length is zero
                           B    38    ;              	    $c8  - out of memory
                           B    39    ;					$c9  - filename already exi
                           B    40    ;					$ca  - already at root dire
                           B    41    ;                  	$cb  - directory not found
                           B    42    ;					$cc  - requested bytes beyo
                           B    43    ;					$cd  - invalid filename
                           B    44    ;					$ce  - unknown/incorrect di
                           B    45    ;					$cf  - invalid volume
                           B    46    ;                 	$d0  - device not present	                           B    47    ;					$d1  - directory not found	                           B    48    ;                 	$d2  - end of directory lis
                           B    49    ;                 	$d3  - device does not use 
                           B    50    ;                  	$d4  - cant find volume lab
                           B    51    ;                   $d5  - sector out of range
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    ; Main routines called by external programs
                           B    55    ;----------------------------------------------
                           B    56    
004EFB                     B    57    fs_format_device_command
                           B    58    
                           B    59    ; Creates a single partition (truncated to 2GB)
                           B    60    
                           B    61    
004EFB 3A 7C 68 00         B    62    				ld a,(device_count)				004EFF 47                  B    63    				ld b,a							004F00 DD21 26 69 00       B    64    				ld ix,host_device_hardware_info
004F05 3A 7B 68 00         B    65    fdevinfo		ld a,(current_driver)
004F09 DDBE00              B    66    				cp (ix)
004F0C 28 09               B    67    				jr z,got_dev_info
004F0E ED3220              B    68    				lea ix,ix+32
004F11 10 F2               B    69    				djnz fdevinfo
004F13 3ED0                B    70    				ld a,0d0h						004F15 B7                  B    71    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F16 C9                  B    72    				ret	
                           B    73    	
004F17 CD EC 59 00         B    74    got_dev_info	call fs_clear_sector_buffer		004F1B 11000000            B    75    				ld de,0							004F1F CD 0F 50 00         B    76    form_ws			call set_lba_and_write_sector
004F23 D8                  B    77    				ret c
004F24 13                  B    78    				inc de
004F25 7A                  B    79    				ld a,d
004F26 FE03                B    80    				cp 3
004F28 20 F5               B    81    				jr nz,form_ws
                           B    82    	
004F2A 21 C8 5C 00         B    83    				ld hl,bootsector_stub			004F2E 11000800            B    84    				ld de,sector_buffer				004F32 013F0000            B    85    				ld bc,03fh
004F36 EDB0                B    86    				ldir
                           B    87    	
004F38 DD7E04              B    88    				ld a,(ix+4)						004F3B B7                  B    89    				or a
004F3C 20 0C               B    90    				jr nz,above_2gb
004F3E 2100003F            B    91    				ld hl,3f0000h					004F42 DD1701              B    92    				ld de,(ix+1)					004F45 AF                  B    93    				xor a			
004F46 ED52                B    94    				sbc hl,de						004F48 30 08               B    95    				jr nc,lessthan2gb				004F4A 3E40                B    96    above_2gb		ld a,40h						004F4C 1100003F            B    97    				ld de,3f0000h					004F50 18 11               B    98    				jr spcvalok
                           B    99    
004F52 DD4E03              B   100    lessthan2gb		ld c,(ix+3)						004F55 0C                  B   101    				inc c							004F56 3E01                B   102    spc_loop		ld a,1							004F58 B9                  B   103    spc_comp		cp c							004F59 28 08               B   104    				jr z,spcvalok
004F5B 07                  B   105    				rlca
004F5C FE80                B   106    				cp 080h							004F5E 20 F8               B   107    				jr nz,spc_comp
004F60 0C                  B   108    				inc c			
004F61 18 F3               B   109    				jr spc_loop						                           B   110    							
004F63 DD210008 00         B   111    spcvalok		ld ix,sector_buffer
004F68 DD770D              B   112    				ld (ix+0dh),a					                           B   113    				
004F6B CD 64 16 00         B   114    				call os_get_xde_msb				004F6F 4F                  B   115    				ld c,a							004F70 B7                  B   116    				or a							004F71 20 08               B   117    				jr nz,ts_dword					004F73 DD7313              B   118    				ld (ix+13h),e					004F76 DD7214              B   119    				ld (ix+14h),d
004F79 18 07               B   120    				jr ts_done
004F7B DD1F20              B   121    ts_dword		ld (ix+20h),de					004F7E DD362300            B   122    				ld (ix+23h),0
                           B   123    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F82 EB                  B   124    ts_done			ex de,hl						004F83 11000000            B   125    				ld de,0						
004F87 DD560D              B   126    				ld d,(ix+0dh)					004F8A 01000000            B   127    				ld bc,0							004F8E AF                  B   128    div_tscls		xor a							004F8F ED52                B   129    				sbc hl,de
004F91 28 05               B   130    				jr z,gotfats
004F93 38 03               B   131    				jr c,gotfats	
004F95 03                  B   132    				inc bc
004F96 18 F6               B   133    				jr div_tscls
004F98 03                  B   134    gotfats			inc bc
004F99 DD7116              B   135    				ld (ix+16h),c					004F9C DD7017              B   136    				ld (ix+17h),b
004F9F ED43 18 5D 00       B   137    				ld (fs_sectors_per_fat),bc
                           B   138    				
004FA4 010055AA            B   139    				ld bc,0aa5500h
004FA8 ED43FD09 00         B   140    				ld (sector_buffer+1fdh),bc		004FAD 11000000            B   141    				ld de,0
004FB1 CD 0F 50 00         B   142    				call set_lba_and_write_sector	004FB5 D8                  B   143    				ret c
                           B   144    				
004FB6 21000000            B   145    				ld hl,0
004FBA DD6E0E              B   146    				ld l,(ix+0eh)					004FBD DD660F              B   147    				ld h,(ix+0fh)
004FC0 19                  B   148    				add hl,de
004FC1 EB                  B   149    				ex de,hl						                           B   150    				
004FC2 CD EC 59 00         B   151    				call fs_clear_sector_buffer		004FC6 DD3600FF            B   152    				ld (ix+0),0ffh
004FCA DD3601F8            B   153    				ld (ix+1),0f8h
004FCE DD3602FF            B   154    				ld (ix+2),0ffh
004FD2 DD3603FF            B   155    				ld (ix+3),0ffh
004FD6 CD 0F 50 00         B   156    				call set_lba_and_write_sector	004FDA D8                  B   157    				ret c
                           B   158    
004FDB 2A 18 5D 00         B   159    				ld hl,(fs_sectors_per_fat)	
004FDF 19                  B   160    				add hl,de
004FE0 EB                  B   161    				ex de,hl
004FE1 CD 0F 50 00         B   162    				call set_lba_and_write_sector 	004FE5 D8                  B   163    				ret c	
                           B   164    				
004FE6 D5                  B   165    				push de							004FE7 CD EC 59 00         B   166    				call fs_clear_sector_buffer
004FEB 21 1E 5D 00         B   167    				ld hl,fs_sought_filename
004FEF 11000800            B   168    				ld de,sector_buffer
004FF3 010B0000            B   169    				ld bc,11
004FF7 EDB0                B   170    				ldir							004FF9 D1                  B   171    				pop de							004FFA DD360B08            B   172    				ld (ix+0bh),8					004FFE DD361821            B   173    				ld (ix+018h),021h				005002 2A 18 5D 00         B   174    				ld hl,(fs_sectors_per_fat)		005006 19                  B   175    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005007 EB                  B   176    				ex de,hl
005008 CD 0F 50 00         B   177    				call set_lba_and_write_sector	00500C D8                  B   178    				ret c	
                           B   179    			
00500D AF                  B   180    				xor a							00500E C9                  B   181    				ret
                           B   182    	
                           B   183    
                           B   184    
00500F                     B   185    set_lba_and_write_sector
                           B   186    
00500F DDE5                B   187    				push ix
005011 DD21 5D 6A 00       B   188    				ld ix,sector_lba0				005016 DD1F00              B   189    				ld (ix),de						005019 DD360300            B   190    				ld (ix+3),0
00501D DDE1                B   191    				pop ix
00501F CD 8F 5C 00         B   192    				call fs_write_sector
005023 C9                  B   193    				ret
                           B   194    				
                           B   195    				
                           B   196    ;----------------------------------------------
                           B   197    
005024                     B   198    fs_get_partition_info
                           B   199    
                           B   200    ; Set A to partition: $00 to $03
                           B   201    ; On return: If A = $00, xHL = Address of reque
                           B   202    ;            If A = $25, A partition table is n
                           B   203    ;            If A = $13, Disk format is bad 
                           B   204    ;            If carry flag set, there was a har
                           B   205    
                           B   206    
005024 32 A9 69 00         B   207    				ld (partition_temp),a
                           B   208    				
005028 21000000            B   209    				ld hl,0							00502C 22 5D 6A 00         B   210    				ld (sector_lba0),hl
005030 7D                  B   211    				ld a,l
005031 32 60 6A 00         B   212    				ld (sector_lba3),a
005035 CD 66 5C 00         B   213    				call fs_read_sector
005039 D8                  B   214    				ret c
                           B   215    			
00503A CD 75 50 00         B   216    				call fs_check_fat_sig			00503E 20 42               B   217    				jr nz,formbad
                           B   218    			
005040 CD 66 50 00         B   219    				call check_fat16_id				005044 28 1C               B   220    				jr z,at_pbs						                           B   221    				
005046 3AC20900            B   222    				ld a,(sector_buffer+01c2h)		00504A E604                B   223    				and 4							00504C 28 34               B   224    				jr z,formbad	
00504E 11000000            B   225    				ld de,0
005052 3A A9 69 00         B   226    				ld a,(partition_temp)
005056 5F                  B   227    				ld e,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005057 1610                B   228    				ld d,16
005059 ED5C                B   229    				mlt de
00505B 21BE0900            B   230    				ld hl,sector_buffer+01beh
00505F 19                  B   231    				add hl,de						005060 AF                  B   232    				xor a
005061 C9                  B   233    				ret
                           B   234    					
005062 3ED3                B   235    at_pbs			ld a,0d3h						005064 B7                  B   236    				or a
005065 C9                  B   237    				ret
                           B   238    
                           B   239    
                           B   240    
005066                     B   241    check_fat16_id
                           B   242    		
005066 21360800            B   243    				ld hl,sector_buffer+036h		00506A 11 31 62 00         B   244    				ld de,fat16_txt			
00506E 0605                B   245    				ld b,5
005070 CD 2D 13 00         B   246    				call os_compare_strings
005074 C9                  B   247    				ret
                           B   248    				
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    
005075                     B   252    fs_check_fat_sig
                           B   253    
005075 2AFE0900            B   254    				ld hl,(sector_buffer+01feh)		005079 1155AA00            B   255    				ld de,0aa55h
00507D AF                  B   256    				xor a
00507E 52ED52              B   257    				sbc.s hl,de						005081 C9                  B   258    				ret
                           B   259    			
                           B   260    			
                           B   261    			
005082 3ECE                B   262    formbad			ld a,0ceh						005084 B7                  B   263    				or a
005085 C9                  B   264    				ret
                           B   265    
                           B   266    ;----------------------------------------------
                           B   267    
                           B   268    
005086                     B   269    fs_check_disk_format
                           B   270    
                           B   271    ; ensures disk is FAT16, sets up constants..
                           B   272    	
005086 C5                  B   273    				push bc
005087 D5                  B   274    				push de
005088 E5                  B   275    				push hl
005089 CD 91 50 00         B   276    				call go_checkf
00508D E1                  B   277    				pop hl
00508E D1                  B   278    				pop de
00508F C1                  B   279    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005090 C9                  B   280    				ret
                           B   281    				
005091 CD 58 51 00         B   282    go_checkf		call fs_read_partition_bootsect
005095 D8                  B   283    				ret c
005096 B7                  B   284    				or a
005097 C0                  B   285    				ret nz
                           B   286    				
005098 CD 75 50 00         B   287    				call fs_check_fat_sig			00509C 20 E4               B   288    				jr nz,formbad		
                           B   289    			
00509E CD 66 50 00         B   290    				call check_fat16_id				0050A2 20 DE               B   291    				jr nz,formbad
                           B   292    			
0050A4 DD210008 00         B   293    				ld ix,sector_buffer
0050A9 DD270B              B   294    				ld hl,(ix+0bh)					0050AC 11000200            B   295    				ld de,512						0050B0 AF                  B   296    				xor a
0050B1 52ED52              B   297    				sbc.s hl,de						0050B4 20 CC               B   298    				jr nz,formbad
                           B   299    			
0050B6 DD7E0D              B   300    				ld a,(ix+0dh)					0050B9 32 07 5D 00         B   301    				ld (fs_cluster_size),a
0050BD CB27                B   302    				sla a
0050BF 32 09 5D 00         B   303    				ld (fs_bytes_per_cluster+1),a
                           B   304    							
0050C3 21000000            B   305    				ld hl,0
0050C7 DD6E0E              B   306    				ld l,(ix+0eh)					0050CA DD660F              B   307    				ld h,(ix+0fh)
0050CD 22 0B 5D 00         B   308    				ld (fs_fat1_position),hl		0050D1 11000000            B   309    				ld de,0
0050D5 DD5E16              B   310    				ld e,(ix+16h)					0050D8 DD5617              B   311    				ld d,(ix+17h)
0050DB ED53 18 5D 00       B   312    				ld (fs_sectors_per_fat),de
0050E0 19                  B   313    				add hl,de
0050E1 22 0E 5D 00         B   314    				ld (fs_fat2_position),hl		0050E5 19                  B   315    				add hl,de
0050E6 22 11 5D 00         B   316    				ld (fs_root_dir_position),hl 	0050EA EB                  B   317    				ex de,hl
0050EB DD6E11              B   318    				ld l,(ix+11h)					0050EE DD6612              B   319    				ld h,(ix+12h)					0050F1 7C                  B   320    				ld a,h
0050F2 B5                  B   321    				or l
0050F3 28 8D               B   322    				jr z,formbad					0050F5 29                  B   323    				add hl,hl						0050F6 29                  B   324    				add hl,hl						0050F7 29                  B   325    				add hl,hl
0050F8 29                  B   326    				add hl,hl
0050F9 EB                  B   327    				ex de,hl
0050FA 7A                  B   328    				ld a,d
0050FB 32 17 5D 00         B   329    				ld (fs_root_dir_sectors),a		0050FF 01000000            B   330    				ld bc,0
005103 4A                  B   331    				ld c,d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005104 09                  B   332    				add hl,bc				
005105 22 14 5D 00         B   333    				ld (fs_data_area),hl			                           B   334    												005109 21000000            B   335    				ld hl,0
00510D 01000000            B   336    				ld bc,0
005111 DD4E22              B   337    				ld c,(ix+022h)					005114 DD4623              B   338    				ld b,(ix+023h)
005117 DD6E13              B   339    				ld l,(ix+013h)					00511A DD6614              B   340    				ld h,(ix+014h)
00511D 7C                  B   341    				ld a,h							00511E B5                  B   342    				or l
00511F 20 06               B   343    				jr nz,got_tsfbs
005121 DD6E20              B   344    				ld l,(ix+020h)					005124 DD6621              B   345    				ld h,(ix+021h)
005127 ED5B 14 5D 00       B   346    got_tsfbs 		ld de,(fs_data_area)
00512C AF                  B   347    				xor a							00512D 52ED52              B   348    				sbc.s hl,de						005130 30 02               B   349    				jr nc,nomxcb
005132 520B                B   350    				dec.s bc
005134 3A 07 5D 00         B   351    nomxcb			ld a,(fs_cluster_size)
005138 CB3F                B   352    fmaxcl			srl a
00513A 28 08               B   353    				jr z,got_cmaxc					00513C CB39                B   354    				srl c				
00513E CB1C                B   355    				rr h
005140 CB1D                B   356    				rr l
005142 18 F4               B   357    				jr fmaxcl
005144 E5                  B   358    got_cmaxc		push hl							005145 11F0FF00            B   359    				ld de,0fff0h
005149 AF                  B   360    				xor a
00514A 52ED52              B   361    				sbc.s hl,de						00514D 38 02               B   362    				jr c,cmaxok
00514F E1                  B   363    				pop hl
005150 D5                  B   364    				push de
005151 E1                  B   365    cmaxok			pop hl
005152 22 1B 5D 00         B   366    				ld (fs_max_data_clusters),hl
005156 AF                  B   367    				xor a
005157 C9                  B   368    				ret				
                           B   369    
                           B   370    ;----------------------------------------------
                           B   371    
005158                     B   372    fs_read_partition_bootsector
                           B   373    
005158 CD 61 1B 00         B   374    				call fs_calc_volume_offset		00515C 21 A6 68 00         B   375    				ld hl,volume_mount_list
005160 19                  B   376    				add hl,de
005161 7E                  B   377    				ld a,(hl)
005162 B7                  B   378    				or a							005163 20 04               B   379    				jr nz,fs_volpre
005165 3ECF                B   380    				ld a,0cfh						005167 B7                  B   381    				or a
005168 C9                  B   382    				ret
                           B   383    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005169 11080000            B   384    fs_volpre		ld de,8							00516D 19                  B   385    				add hl,de
00516E 11 5D 6A 00         B   386    				ld de,sector_lba0
005172 01040000            B   387    				ld bc,4
005176 EDB0                B   388    				ldir
005178 CD 66 5C 00         B   389    				call fs_read_sector
00517C C9                  B   390    				ret	
                           B   391    
                           B   392    ;----------------------------------------------
                           B   393    
00517D                     B   394    fs_calc_free_space
                           B   395    
                           B   396    ;returns free space in KB in HL:DE
                           B   397    
00517D ED5B 1B 5D 00       B   398    				ld de,(fs_max_data_clusters)
005182 13                  B   399    				inc de
005183 13                  B   400    				inc de							005184 D5                  B   401    				push de
005185 DDE1                B   402    				pop ix
                           B   403    			
005187 AF                  B   404    				xor a
005188 32 60 5D 00         B   405    cfs_lp2			ld (fs_working_sector),a
00518C 2A 0B 5D 00         B   406    				ld hl,(fs_fat1_position)
005190 CD 3C 5C 00         B   407    				call set_abs_lba_and_read_secto
005194 D8                  B   408    				ret c
                           B   409    				
005195 21000800            B   410    				ld hl,sector_buffer
005199 0600                B   411    				ld b,0
00519B AF                  B   412    cfs_lp1			xor a
00519C B6                  B   413    				or a,(hl)						00519D 23                  B   414    				inc hl							00519E 20 03               B   415    				jr nz,cfs_ciu					0051A0 B6                  B   416    				or a,(hl)
0051A1 28 02               B   417    				jr z,cfs_ddcc
0051A3 DD2B                B   418    cfs_ciu			dec ix							0051A5 23                  B   419    cfs_ddcc		inc hl
0051A6 1B                  B   420    				dec de
0051A7 7A                  B   421    				ld a,d
0051A8 B3                  B   422    				or e
0051A9 28 09               B   423    				jr z,cfs_ok						0051AB 10 EE               B   424    				djnz cfs_lp1
0051AD 3A 60 5D 00         B   425    				ld a,(fs_working_sector)
0051B1 3C                  B   426    				inc a
0051B2 18 D4               B   427    				jr cfs_lp2
                           B   428    				
0051B4 3A 07 5D 00         B   429    cfs_ok			ld a,(fs_cluster_size)			0051B8 CB3F                B   430    cltoslp			srl a
0051BA 28 04               B   431    				jr z,powdone
0051BC DD29                B   432    				add ix,ix
0051BE 18 F8               B   433    				jr cltoslp	
0051C0 FD21 79 6A 00       B   434    powdone			ld iy,xrr_temp
0051C5 FD3E00              B   435    				ld (iy),ix						Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0051C8 FDCB023E            B   436    				srl (iy+2)
0051CC FDCB011E            B   437    				rr (iy+1)
0051D0 FDCB001E            B   438    				rr (iy+0)						0051D4 FD1700              B   439    				ld de,(iy)						0051D7 AF                  B   440    				xor a
0051D8 C9                  B   441    				ret
                           B   442    
                           B   443    ;----------------------------------------------
                           B   444    
0051D9                     B   445    fs_change_dir_command
                           B   446    
                           B   447    ; INPUT: HL = directory name ascii (zero/space 
                           B   448    			
                           B   449    			
0051D9 CD FE 59 00         B   450    				call fs_find_filename			0051DD D8                  B   451    				ret c							0051DE FEC2                B   452    				cp 0c2h							0051E0 20 04               B   453    				jr nz,founddir
0051E2 3ED1                B   454    				ld a,0d1h						0051E4 B7                  B   455    				or a
0051E5 C9                  B   456    				ret
                           B   457    
0051E6 DDCB0B66            B   458    founddir		bit 4,(ix+0bh)
0051EA 20 04               B   459    				jr nz,fs_isadir
0051EC 3EC4                B   460    				ld a,0c4h
0051EE B7                  B   461    				or a
0051EF C9                  B   462    				ret
                           B   463    				
0051F0 11000000            B   464    fs_isadir		ld de,0
0051F4 DD5E1A              B   465    				ld e,(ix+01ah)
0051F7 DD561B              B   466    				ld d,(ix+01bh)					0051FA CD 33 1B 00         B   467    				call fs_update_dir_cluster
0051FE AF                  B   468    				xor a
0051FF C9                  B   469    				ret
                           B   470    
                           B   471    
                           B   472    ;----------------------------------------------
                           B   473    	
                           B   474    	
005200                     B   475    fs_goto_root_dir_command
                           B   476    
005200 D5                  B   477    				push de
005201 11000000            B   478    				ld de,0
005205 CD 33 1B 00         B   479    				call fs_update_dir_cluster
005209 D1                  B   480    				pop de
00520A AF                  B   481    				xor a
00520B C9                  B   482    				ret
                           B   483    
                           B   484    ;----------------------------------------------
                           B   485    	
                           B   486    	
00520C                     B   487    fs_parent_dir_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   488    
00520C CD 27 1B 00         B   489    				call fs_get_dir_cluster
005210 7A                  B   490    				ld a,d
005211 B3                  B   491    				or e
005212 20 04               B   492    				jr nz,pdnaroot
005214 3ECA                B   493    				ld a,0cah						005216 B7                  B   494    				or a
005217 C9                  B   495    				ret
005218 212E2E20            B   496    pdnaroot		ld hl,0202e2eh					00521C 22 1E 5D 00         B   497    				ld (fs_sought_filename),hl		005220 21 21 5D 00         B   498    				ld hl,fs_sought_filename+3		005224 3E20                B   499    				ld a,32
005226 01080000            B   500    				ld bc,8
00522A CD 47 16 00         B   501    				call os_bchl_memfill
00522E 18 A9               B   502    				jr fs_change_dir_command
                           B   503    				
                           B   504    		
                           B   505    ;----------------------------------------------
                           B   506    		
005230                     B   507    fs_open_file_command
                           B   508    
                           B   509    ; INPUT: xHL = directory name ascii (zero/space
                           B   510    ; OUTPUT: C:xDE  = File length
                           B   511    ;            HL  = Start cluster of file
                           B   512    ;            Internal vars (file pointer reset 
                           B   513    
                           B   514    			
005230 CD FE 59 00         B   515    				call fs_find_filename			005234 D8                  B   516    				ret c							005235 C0                  B   517    				ret nz							                           B   518    								
005236 3EC6                B   519    				ld a,0c6h						005238 DDCB0B66            B   520    				bit 4,(ix+0bh)
00523C C0                  B   521    				ret nz
                           B   522    
00523D AF                  B   523    				xor a
00523E 32 74 5D 00         B   524    				ld (fs_filepointer_valid),a		005242 21000000            B   525    				ld hl,0
005246 22 42 5D 00         B   526    				ld (fs_file_pointer),hl			00524A 32 45 5D 00         B   527    				ld (fs_file_pointer+3),a		00524E 22 80 5D 00         B   528    				ld (fs_sector_last_read_lba0),h
005252 32 83 5D 00         B   529    				ld (fs_sector_last_read_lba0+3)
                           B   530    
005256 DD171C              B   531    				ld de,(ix+01ch)
005259 D5                  B   532    				push de
00525A E1                  B   533    				pop hl
00525B DD4E1F              B   534    				ld c,(ix+01fh)					00525E ED53 46 5D 00       B   535    				ld (fs_file_length),de			005263 79                  B   536    				ld a,c
005264 32 49 5D 00         B   537    				ld (fs_file_length+3),a			005268 B7                  B   538    				or a							005269 28 04               B   539    				jr z,fs_dflsm					Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00526B 21FFFFFF            B   540    				ld hl,0ffffffh
00526F 22 4E 5D 00         B   541    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   542    				
005273 21000000            B   543    				ld hl,0
005277 DD6E1A              B   544    				ld l,(ix+01ah)		
00527A DD661B              B   545    				ld h,(ix+01bh)
00527D 22 51 5D 00         B   546    				ld (fs_file_start_cluster),hl	                           B   547    				
005281 AF                  B   548    				xor a
005282 C9                  B   549    				ret
                           B   550    
                           B   551    
                           B   552    ;----------------------------------------------
                           B   553    
005283                     B   554    fs_read_data_command		
                           B   555    
                           B   556    ;*******************************************
                           B   557    ;*** 'fs_open_file' must be called first ***
                           B   558    ;*******************************************
                           B   559    		
005283 CD C2 53 00         B   560    fs_load			call fs_test_transfer_length	005287 20 04               B   561    				jr nz,fs_btrok
                           B   562    
005289 3EC7                B   563    fs_fliz			ld a,0c7h						00528B B7                  B   564    				or a
00528C C9                  B   565    				ret
                           B   566    			 
00528D 2A 57 5D 00         B   567    fs_btrok		ld hl,(fs_ez80_address)			005291 22 5A 5D 00         B   568    				ld (fs_ez80_working_address),hl
                           B   569    			
005295 2A 42 5D 00         B   570    				ld hl,(fs_file_pointer)			005299 3A 45 5D 00         B   571    				ld a,(fs_file_pointer+3)		00529D 11010000            B   572    				ld de,1							0052A1 19                  B   573    				add hl,de
0052A2 CE00                B   574    				adc a,0
0052A4 4F                  B   575    				ld c,a
0052A5 EB                  B   576    				ex de,hl						0052A6 2A 46 5D 00         B   577    				ld hl,(fs_file_length)			0052AA 3A 49 5D 00         B   578    				ld a,(fs_file_length+3)			0052AE B7                  B   579    				or a							0052AF ED52                B   580    				sbc hl,de						0052B1 99                  B   581    				sbc a,c
0052B2 DA 13 53 00         B   582    				jp c,fs_rd_eof
                           B   583    					
0052B6 3A 74 5D 00         B   584    fs_fpok			ld a,(fs_filepointer_valid)		0052BA B7                  B   585    				or a							0052BB 20 46               B   586    				jr nz,fs_get_sector_if_necessar
                           B   587    			
0052BD 3E01                B   588    seek_strt		ld a,1
0052BF 32 74 5D 00         B   589    				ld (fs_filepointer_valid),a
0052C3 2A 51 5D 00         B   590    				ld hl,(fs_file_start_cluster)	0052C7 22 54 5D 00         B   591    				ld (fs_file_working_cluster),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   592    			
0052CB 3A 45 5D 00         B   593    				ld a,(fs_file_pointer+3)		0052CF 2A 42 5D 00         B   594    				ld hl,(fs_file_pointer)			0052D3 ED4B 08 5D 00       B   595    fs_fpblp		ld bc,(fs_bytes_per_cluster)
0052D8 AF                  B   596    				xor a
0052D9 ED42                B   597    				sbc hl,bc						0052DB DE00                B   598    				sbc a,0
0052DD 38 14               B   599    				jr c,fs_fpgbo
0052DF E5                  B   600    				push hl				
0052E0 2A 54 5D 00         B   601    				ld hl,(fs_file_working_cluster)
0052E4 CD 0E 5B 00         B   602    				call get_fat_entry_for_cluster
0052E8 30 02               B   603    				jr nc,fs_ghok					0052EA E1                  B   604    				pop hl
0052EB C9                  B   605    				ret
0052EC 22 54 5D 00         B   606    fs_ghok			ld (fs_file_working_cluster),hl
0052F0 E1                  B   607    				pop hl
0052F1 18 E0               B   608    				jr fs_fpblp
                           B   609    			
0052F3 09                  B   610    fs_fpgbo		add hl,bc						0052F4 7C                  B   611    				ld a,h
0052F5 CB3F                B   612    				srl a							0052F7 32 75 5D 00         B   613    				ld (fs_sector_pos_cnt),a
0052FB 7C                  B   614    				ld a,h
0052FC E601                B   615    				and 01h
0052FE 67                  B   616    				ld h,a
0052FF 22 5D 5D 00         B   617    				ld (fs_in_sector_offset),hl		                           B   618    
                           B   619    				
                           B   620    
005303                     B   621    fs_get_sector_if_necessary
                           B   622    				
005303 CD C2 53 00         B   623    				call fs_test_transfer_length	005307 28 64               B   624    				jr z,fs_read_done	
                           B   625    				
005309 2A 54 5D 00         B   626    				ld hl,(fs_file_working_cluster)
00530D CD B7 58 00         B   627    				call fs_compare_hl_fff8			005311 38 04               B   628    				jr c,fs_rd_noteof		
005313 3ECC                B   629    fs_rd_eof		ld a,0cch						005315 B7                  B   630    				or a
005316 C9                  B   631    				ret
                           B   632    				
005317 2A 54 5D 00         B   633    fs_rd_noteof	ld hl,(fs_file_working_cluster)
00531B 3A 75 5D 00         B   634    				ld a,(fs_sector_pos_cnt)		00531F CD E5 5B 00         B   635    				call cluster_and_offset_to_lba
005323 CD AB 5C 00         B   636    				call fs_is_same_sector_in_buffe
005327 28 05               B   637    				jr z,fs_same_sector
005329 CD 66 5C 00         B   638    				call fs_read_sector				00532D D8                  B   639    				ret c							                           B   640    			
00532E 21000200            B   641    fs_same_sector	ld hl,512
005332 ED5B 5D 5D 00       B   642    				ld de,(fs_in_sector_offset)
005337 AF                  B   643    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005338 ED52                B   644    				sbc hl,de						00533A E5                  B   645    				push hl
00533B C1                  B   646    				pop bc							                           B   647    				
00533C ED5B 4E 5D 00       B   648    				ld de,(fs_file_transfer_length)
005341 AF                  B   649    				xor a
005342 ED52                B   650    				sbc hl,de
005344 38 02               B   651    				jr c,fs_got_bc					005346 D5                  B   652    				push de							005347 C1                  B   653    				pop bc
                           B   654    
005348 21000800            B   655    fs_got_bc		ld hl,sector_buffer
00534C ED5B 5D 5D 00       B   656    				ld de,(fs_in_sector_offset)		005351 19                  B   657    				add hl,de
005352 ED5B 5A 5D 00       B   658    				ld de,(fs_ez80_working_address)
005357 C5                  B   659    				push bc
005358 EDB0                B   660    				ldir							00535A ED53 5A 5D 00       B   661    				ld (fs_ez80_working_address),de
00535F C1                  B   662    				pop bc
005360 CD 96 53 00         B   663    				call fs_adjust_fp_tl_so
005364 2A 5D 5D 00         B   664    				ld hl,(fs_in_sector_offset)
005368 7C                  B   665    				ld a,h
005369 FE02                B   666    				cp 02h							00536B 28 02               B   667    				jr z,fs_new_sec
00536D AF                  B   668    fs_read_done	xor a
00536E C9                  B   669    				ret
                           B   670    
00536F 21000000            B   671    fs_new_sec		ld hl,0
005373 22 5D 5D 00         B   672    				ld (fs_in_sector_offset),hl		005377 21 75 5D 00         B   673    				ld hl,fs_sector_pos_cnt			00537B 34                  B   674    				inc (hl)
00537C 3A 07 5D 00         B   675    				ld a,(fs_cluster_size)
005380 BE                  B   676    				cp (hl)
005381 20 80               B   677    				jr nz,fs_get_sector_if_necessar
                           B   678    				
005383 3600                B   679    				ld (hl),0						005385 2A 54 5D 00         B   680    				ld hl,(fs_file_working_cluster)
005389 CD 0E 5B 00         B   681    				call get_fat_entry_for_cluster	00538D D8                  B   682    				ret c							00538E 22 54 5D 00         B   683    				ld (fs_file_working_cluster),hl
005392 C3 03 53 00         B   684    				jr fs_get_sector_if_necessary
                           B   685    
                           B   686    ;----------------------------------------------
                           B   687    
005396                     B   688    fs_adjust_fp_tl_so
                           B   689    
                           B   690    ; advance / reduce by BC
                           B   691    
005396 C5                  B   692    				push bc
005397 E5                  B   693    				push hl
005398 2A 42 5D 00         B   694    				ld hl,(fs_file_pointer)			00539C 09                  B   695    				add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00539D 22 42 5D 00         B   696    				ld (fs_file_pointer),hl			0053A1 3A 45 5D 00         B   697    				ld a,(fs_file_pointer+3)		0053A5 CE00                B   698    				adc a,0
0053A7 32 42 5D 00         B   699    				ld (fs_file_pointer),a		
                           B   700    				
0053AB 2A 4E 5D 00         B   701    				ld hl,(fs_file_transfer_length)
0053AF AF                  B   702    				xor a
0053B0 ED42                B   703    				sbc hl,bc
0053B2 22 4E 5D 00         B   704    				ld (fs_file_transfer_length),hl
                           B   705    				
0053B6 2A 5D 5D 00         B   706    				ld hl,(fs_in_sector_offset)
0053BA 09                  B   707    				add hl,bc
0053BB 22 5D 5D 00         B   708    				ld (fs_in_sector_offset),hl
                           B   709    				
0053BF E1                  B   710    				pop hl
0053C0 C1                  B   711    				pop bc
0053C1 C9                  B   712    				ret
                           B   713    				
                           B   714    				
0053C2                     B   715    fs_test_transfer_length
                           B   716    				
0053C2 C5                  B   717    				push bc
0053C3 E5                  B   718    				push hl
0053C4 21000000            B   719    				ld hl,0
0053C8 ED4B 4E 5D 00       B   720    				ld bc,(fs_file_transfer_length)
0053CD AF                  B   721    				xor a
0053CE ED4A                B   722    				adc hl,bc
0053D0 E1                  B   723    				pop hl
0053D1 C1                  B   724    				pop bc
0053D2 C9                  B   725    				ret
                           B   726    				
                           B   727    ;----------------------------------------------
                           B   728    
0053D3                     B   729    fs_make_dir_command		
                           B   730    				
0053D3 CD FE 59 00         B   731    				call fs_find_filename			0053D7 D8                  B   732    				ret c
0053D8 FEC2                B   733    				cp 0c2h							0053DA 28 04               B   734    				jr z,mdirfnde
0053DC 3EC9                B   735    				ld a,0c9h						0053DE B7                  B   736    				or a
0053DF C9                  B   737    				ret
                           B   738    			
0053E0 CD C4 58 00         B   739    mdirfnde		call fs_find_free_cluster		0053E4 D8                  B   740    				ret c							0053E5 C0                  B   741    				ret nz							                           B   742    							
0053E6 2A 64 5D 00         B   743    				ld hl,(fs_free_cluster)
0053EA 22 67 5D 00         B   744    				ld (fs_new_file_cluster),hl
                           B   745    			
0053EE CD 15 59 00         B   746    				call fs_find_free_dir_entry		0053F2 D8                  B   747    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0053F3 C0                  B   748    				ret nz							                           B   749    			
0053F4 DDE5                B   750    				push ix							0053F6 D1                  B   751    				pop de
0053F7 21 1E 5D 00         B   752    				ld hl,fs_sought_filename
0053FB 010B0000            B   753    				ld bc,11
0053FF EDB0                B   754    				ldir
005401 AF                  B   755    				xor a							005402 0615                B   756    				ld b,21
005404 12                  B   757    clrdiren		ld (de),a
005405 13                  B   758    				inc de
005406 10 FC               B   759    				djnz clrdiren
005408 DD360B10            B   760    				ld (ix+0bh),010h				00540C DD361821            B   761    				ld (ix+018h),021h				005410 ED5B 67 5D 00       B   762    				ld de,(fs_new_file_cluster)
005415 DD731A              B   763    				ld (ix+01ah),e					005418 DD721B              B   764    				ld (ix+01bh),d
00541B CD 8F 5C 00         B   765    				call fs_write_sector			00541F D8                  B   766    				ret c							                           B   767    				
005420 CD EC 59 00         B   768    				call fs_clear_sector_buffer
005424 DD210008 00         B   769    				ld ix,sector_buffer				005429 DD36002E            B   770    				ld (ix+00h),02eh				00542D DD360120            B   771    				ld (ix+01h),020h
005431 DD36202E            B   772    				ld (ix+020h),02eh
005435 DD36212E            B   773    				ld (ix+021h),02eh
005439 DD360B10            B   774    				ld (ix+0bh),010h
00543D DD362B10            B   775    				ld (ix+02bh),010h
005441 ED5B 67 5D 00       B   776    				ld de,(fs_new_file_cluster)		005446 DD731A              B   777    				ld (ix+01ah),e
005449 DD721B              B   778    				ld (ix+01bh),d
00544C CD 27 1B 00         B   779    				call fs_get_dir_cluster			005450 DD733A              B   780    				ld (ix+03ah),e
005453 DD723B              B   781    				ld (ix+03bh),d
005456 DD361821            B   782    				ld (ix+018h),021h				00545A DD363821            B   783    				ld (ix+038h),021h				00545E 0609                B   784    				ld b,9
005460 DD360220            B   785    mndelp			ld (ix+002h),32
005464 DD362220            B   786    				ld (ix+022h),32
005468 DD23                B   787    				inc ix
00546A 10 F4               B   788    				djnz mndelp
00546C 2A 67 5D 00         B   789    				ld hl,(fs_new_file_cluster)		005470 AF                  B   790    				xor a
005471 CD E5 5B 00         B   791    				call cluster_and_offset_to_lba
005475 CD 8F 5C 00         B   792    				call fs_write_sector
005479 D8                  B   793    				ret c							                           B   794    			
00547A CD EC 59 00         B   795    				call fs_clear_sector_buffer		00547E AF                  B   796    				xor a
00547F 3C                  B   797    wroslp			inc a
005480 32 60 5D 00         B   798    				ld (fs_working_sector),a
005484 21 07 5D 00         B   799    				ld hl,fs_cluster_size
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005488 BE                  B   800    				cp (hl)
005489 28 13               B   801    				jr z,allsclr
00548B 2A 67 5D 00         B   802    				ld hl,(fs_new_file_cluster)
00548F CD E5 5B 00         B   803    				call cluster_and_offset_to_lba
005493 CD 8F 5C 00         B   804    				call fs_write_sector
005497 D8                  B   805    				ret c
005498 3A 60 5D 00         B   806    				ld a,(fs_working_sector)
00549C 18 E1               B   807    				jr wroslp
                           B   808    			
00549E 2A 67 5D 00         B   809    allsclr			ld hl,(fs_new_file_cluster)		0054A2 11FFFF00            B   810    				ld de,0ffffh
0054A6 CD 3A 5B 00         B   811    				call update_fat_entry_for_clust
0054AA AF                  B   812    				xor a
0054AB C9                  B   813    				ret
                           B   814    
                           B   815    
                           B   816    
                           B   817    ;----------------------------------------------
                           B   818    
0054AC                     B   819    fs_delete_dir_command
                           B   820    
0054AC CD FE 59 00         B   821    				call fs_find_filename			0054B0 D8                  B   822    				ret c
0054B1 28 04               B   823    				jr z,ddc_gotd
0054B3 3ED1                B   824    				ld a,0d1h						0054B5 B7                  B   825    				or a
0054B6 C9                  B   826    				ret
                           B   827    				
0054B7 DDCB0B66            B   828    ddc_gotd		bit 4,(ix+0bh)					0054BB 20 04               B   829    				jr nz,okdeldir
0054BD 3EC4                B   830    				ld a,0c4h						0054BF B7                  B   831    				or a
0054C0 C9                  B   832    				ret
                           B   833    				
0054C1 DD22 6A 5D 00       B   834    okdeldir		ld (fs_fname_in_sector_addr),ix
0054C6 CD 44 5C 00         B   835    				call backup_sector_lba
0054CA DD6E1A              B   836    				ld l,(ix+01ah)					0054CD DD661B              B   837    				ld h,(ix+01bh)
                           B   838    				
0054D0 3A 07 5D 00         B   839    fs_ddecl		ld a,(fs_cluster_size)
0054D4 47                  B   840    				ld b,a							0054D5 0E00                B   841    				ld c,0			
0054D7 79                  B   842    fs_cne2 		ld a,c
0054D8 CD E5 5B 00         B   843    				call cluster_and_offset_to_lba
0054DC CD 66 5C 00         B   844    				call fs_read_sector
0054E0 D8                  B   845    				ret c							                           B   846    				
0054E1 C5                  B   847    				push bc
0054E2 0610                B   848    				ld b,16							0054E4 DD210008 00         B   849    				ld ix,sector_buffer
0054E9 11200000            B   850    				ld de,020h
0054ED DD7E00              B   851    fs_cne1			ld a,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0054F0 B7                  B   852    				or a
0054F1 28 0D               B   853    				jr z,fs_chnde
0054F3 FEE5                B   854    				cp 0e5h
0054F5 28 09               B   855    				jr z,fs_chnde
0054F7 FE2E                B   856    				cp '.'
0054F9 28 05               B   857    				jr z,fs_chnde
0054FB C1                  B   858    				pop bc
0054FC 3EC5                B   859    				ld a,0c5h						0054FE B7                  B   860    				or a
0054FF C9                  B   861    				ret
                           B   862    			
005500 DD19                B   863    fs_chnde		add ix,de
005502 10 E9               B   864    				djnz fs_cne1
005504 C1                  B   865    				pop bc
005505 0C                  B   866    				inc c
005506 10 CF               B   867    				djnz fs_cne2
                           B   868    			
005508 CD 0E 5B 00         B   869    				call get_fat_entry_for_cluster	00550C D8                  B   870    				ret c
00550D CD B7 58 00         B   871    				call fs_compare_hl_fff8
005511 38 BD               B   872    				jr c,fs_ddecl
                           B   873    			
005513 CD 59 5C 00         B   874    dir_empty		call restore_sector_lba			005517 CD 66 5C 00         B   875    				call fs_read_sector
00551B D8                  B   876    				ret c							00551C 2A 6A 5D 00         B   877    				ld hl,(fs_fname_in_sector_addr)
005520 36E5                B   878    fs_delco		ld (hl),0e5h					005522 CD 8F 5C 00         B   879    				call fs_write_sector
005526 D8                  B   880    				ret c
                           B   881    			
005527 E5                  B   882    				push hl
005528 DDE1                B   883    				pop ix
00552A DD6E1A              B   884    				ld l,(ix+01ah)
00552D DD661B              B   885    				ld h,(ix+01bh)
005530 22 61 5D 00         B   886    				ld (fs_working_cluster),hl
005534 7C                  B   887    				ld a,h							005535 B5                  B   888    				or l							005536 C8                  B   889    				ret z							                           B   890    				
005537 2A 61 5D 00         B   891    clrfatlp		ld hl,(fs_working_cluster)
00553B CD 0E 5B 00         B   892    				call get_fat_entry_for_cluster
00553F D8                  B   893    				ret c
005540 EB                  B   894    				ex de,hl
                           B   895    				
005541 2A 61 5D 00         B   896    				ld hl,(fs_working_cluster)
005545 ED53 61 5D 00       B   897    				ld (fs_working_cluster),de
00554A 11000000            B   898    				ld de,0
00554E CD 3A 5B 00         B   899    				call update_fat_entry_for_clust
005552 D8                  B   900    				ret c
                           B   901    				
005553 CD B7 58 00         B   902    				call fs_compare_hl_fff8			005557 38 DE               B   903    				jr c,clrfatlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005559 AF                  B   904    				xor a
00555A C9                  B   905    				ret
                           B   906    
                           B   907    
                           B   908    ;----------------------------------------------
                           B   909    
00555B                     B   910    fs_create_file_command
                           B   911    
                           B   912    ; Note: As per FAT standard, creating a file (0
                           B   913    ; only a directory entry (FAT is only updated w
                           B   914    
00555B CD FE 59 00         B   915    				call fs_find_filename			00555F D8                  B   916    				ret c
005560 FEC2                B   917    				cp 0c2h							005562 28 04               B   918    				jr z,mfilefnde
                           B   919    				
005564 3EC9                B   920    				ld a,0c9h						005566 B7                  B   921    				or a
005567 C9                  B   922    				ret
                           B   923    			
005568 CD 15 59 00         B   924    mfilefnde		call fs_find_free_dir_entry		00556C D8                  B   925    				ret c							00556D C0                  B   926    				ret nz							                           B   927    			
00556E DDE5                B   928    				push ix							005570 D1                  B   929    				pop de
005571 21 1E 5D 00         B   930    				ld hl,fs_sought_filename
005575 010B0000            B   931    				ld bc,11
005579 EDB0                B   932    				ldir
00557B AF                  B   933    				xor a							00557C 0615                B   934    				ld b,21
00557E 12                  B   935    clrfnen			ld (de),a
00557F 13                  B   936    				inc de
005580 10 FC               B   937    				djnz clrfnen
005582 DD361821            B   938    				ld (ix+018h),021h				005586 CD 8F 5C 00         B   939    				call fs_write_sector			00558A D8                  B   940    				ret c							00558B AF                  B   941    				xor a
00558C C9                  B   942    				ret								                           B   943    
                           B   944    
                           B   945    ;----------------------------------------------
                           B   946    
00558D                     B   947    fs_write_bytes_to_file_command
                           B   948    	
                           B   949    ; *********************************************
                           B   950    ; * set up: fs_file_transfer_length (new data),
                           B   951    ; * before calling                             
                           B   952    ; *********************************************
                           B   953    
                           B   954    				
00558D ED5B 4E 5D 00       B   955    				ld de,(fs_file_transfer_length)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005592 21000000            B   956    				ld hl,0
005596 AF                  B   957    				xor a
005597 ED5A                B   958    				adc hl,de
005599 CA 89 52 00         B   959    				jp z,fs_fliz					                           B   960    				 
00559D CD FE 59 00         B   961    				call fs_find_filename			0055A1 D8                  B   962    				ret c							0055A2 FEC2                B   963    				cp 0c2h				
0055A4 20 02               B   964    				jr nz,fs_fetwt					0055A6 B7                  B   965    				or a
0055A7 C9                  B   966    				ret
0055A8 DDCB0B66            B   967    fs_fetwt		bit 4,(ix+0bh)					0055AC 28 04               B   968    				jr z,fs_oknad					0055AE 3EC6                B   969    				ld a,0c6h						0055B0 B7                  B   970    				or a
0055B1 C9                  B   971    				ret
                           B   972    
0055B2 CD 44 5C 00         B   973    fs_oknad		call backup_sector_lba
0055B6 DD22 6A 5D 00       B   974    				ld (fs_fname_in_sector_addr),ix
                           B   975    
0055BB DD311C              B   976    				ld iy,(ix+01ch)					0055BE DD7E1F              B   977    				ld a,(ix+01fh)
0055C1 FD22 4A 5D 00       B   978    				ld (fs_existing_file_length),iy
0055C6 32 4A 5D 00         B   979    				ld (fs_existing_file_length),a
0055CA ED5B 4E 5D 00       B   980    				ld de,(fs_file_transfer_length)
0055CF FD19                B   981    				add iy,de						0055D1 CE00                B   982    				adc a,0
0055D3 DD3E1C              B   983    				ld (ix+01ch),iy					0055D6 DD771F              B   984    				ld (ix+01fh),a					0055D9 30 04               B   985    				jr nc,nfsizeok
0055DB 3EC7                B   986    				ld a,0c7h						0055DD B7                  B   987    				or a
0055DE C9                  B   988    				ret
                           B   989    
0055DF 11000000            B   990    nfsizeok		ld de,0
0055E3 DD5E1A              B   991    				ld e,(ix+01ah)					0055E6 DD561B              B   992    				ld d,(ix+01bh)					0055E9 ED53 54 5D 00       B   993    				ld (fs_file_working_cluster),de
0055EE CD 8F 5C 00         B   994    				call fs_write_sector			0055F2 D8                  B   995    				ret c
0055F3 7A                  B   996    				ld a,d
0055F4 B3                  B   997    				or e
0055F5 20 35               B   998    				jr nz,apenclch	
                           B   999    				
0055F7 CD C4 58 00         B  1000    				call fs_find_free_cluster		0055FB D8                  B  1001    				ret c
0055FC C0                  B  1002    				ret nz
0055FD 2A 64 5D 00         B  1003    				ld hl,(fs_free_cluster)
005601 22 54 5D 00         B  1004    				ld (fs_file_working_cluster),hl
005605 11FFFF00            B  1005    				ld de,0ffffh
005609 CD 3A 5B 00         B  1006    				call update_fat_entry_for_clust
00560D D8                  B  1007    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1008    			
00560E CD 59 5C 00         B  1009    				call restore_sector_lba			005612 CD 66 5C 00         B  1010    				call fs_read_sector
005616 D8                  B  1011    				ret c
005617 DD2A 6A 5D 00       B  1012    				ld ix,(fs_fname_in_sector_addr)
00561C ED5B 54 5D 00       B  1013    				ld de,(fs_file_working_cluster)
005621 DD731A              B  1014    				ld (ix+01ah),e
005624 DD721B              B  1015    				ld (ix+01bh),d
005627 CD 8F 5C 00         B  1016    				call fs_write_sector			00562B D8                  B  1017    				ret c
                           B  1018    				
                           B  1019    					
00562C 2A 54 5D 00         B  1020    apenclch		ld hl,(fs_file_working_cluster)
005630 CD 0E 5B 00         B  1021    				call get_fat_entry_for_cluster
005634 D8                  B  1022    				ret c
005635 CD B7 58 00         B  1023    				call fs_compare_hl_fff8
005639 30 1C               B  1024    				jr nc,atlclif
00563B 22 54 5D 00         B  1025    				ld (fs_file_working_cluster),hl
00563F 01000000            B  1026    				ld bc,0
005643 3A 07 5D 00         B  1027    				ld a,(fs_cluster_size)
005647 CB27                B  1028    				sla a
005649 47                  B  1029    				ld b,a
00564A 2A 4A 5D 00         B  1030    				ld hl,(fs_existing_file_length)
00564E AF                  B  1031    				xor a							00564F ED42                B  1032    				sbc hl,bc						005651 22 4A 5D 00         B  1033    				ld (fs_existing_file_length),hl
005655 18 D5               B  1034    				jr apenclch
                           B  1035    				
005657 ED4B 4A 5D 00       B  1036    atlclif			ld bc,(fs_existing_file_length)
00565C CB38                B  1037    				srl b				
00565E 48                  B  1038    				ld c,b							00565F 3A 07 5D 00         B  1039    				ld a,(fs_cluster_size)
005663 91                  B  1040    				sub c
005664 47                  B  1041    				ld b,a							005665 28 79               B  1042    				jr z,fs_sfncl					                           B  1043    				
005667 2A 54 5D 00         B  1044    				ld hl,(fs_file_working_cluster)
00566B 79                  B  1045    				ld a,c
00566C CD E5 5B 00         B  1046    				call cluster_and_offset_to_lba
005670 CD 66 5C 00         B  1047    				call fs_read_sector
005674 D8                  B  1048    				ret c
005675 C5                  B  1049    				push bc							                           B  1050    				
005676 11000000            B  1051    				ld de,0
00567A 3A 4A 5D 00         B  1052    				ld a,(fs_existing_file_length)
00567E 5F                  B  1053    				ld e,a
00567F 3A 4B 5D 00         B  1054    				ld a,(fs_existing_file_length+1
005683 E601                B  1055    				and 1
005685 57                  B  1056    				ld d,a							005686 21000200            B  1057    				ld hl,512	
00568A AF                  B  1058    				xor a
00568B ED52                B  1059    				sbc hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00568D E5                  B  1060    				push hl
00568E C1                  B  1061    				pop bc							00568F 21000800            B  1062    				ld hl,sector_buffer
005693 19                  B  1063    				add hl,de
005694 EB                  B  1064    				ex de,hl						005695 7C                  B  1065    				ld a,h			
005696 B5                  B  1066    				or l
005697 20 04               B  1067    				jr nz,fs_dcsb					005699 CD EC 59 00         B  1068    fs_dbfil		call fs_clear_sector_buffer
00569D 2A 57 5D 00         B  1069    fs_dcsb			ld hl,(fs_ez80_address)			0056A1 EDA0                B  1070    fs_cbsb			ldi								0056A3 7C                  B  1071    				ld a,h							0056A4 B5                  B  1072    				or l
0056A5 20 0D               B  1073    				jr nz,fs_srcadok
0056A7 22 57 5D 00         B  1074    				ld (fs_ez80_address),hl
0056AB 3A 59 5D 00         B  1075    				ld a,(fs_ez80_address+2)
0056AF B7                  B  1076    				or a
0056B0 CA 1F 57 00         B  1077    				jp z,fs_mem_error
0056B4 CD 6E 5B 00         B  1078    fs_srcadok		call transfer_length_countdown
0056B8 28 54               B  1079    				jr z,fs_lbof					0056BA 78                  B  1080    fs_sadok		ld a,b							0056BB B1                  B  1081    				or c
0056BC 20 E3               B  1082    				jr nz,fs_cbsb					                           B  1083    
0056BE 22 57 5D 00         B  1084    				ld (fs_ez80_address),hl			0056C2 C1                  B  1085    				pop bc							0056C3 79                  B  1086    				ld a,c
0056C4 2A 54 5D 00         B  1087    				ld hl,(fs_file_working_cluster)
0056C8 CD E5 5B 00         B  1088    				call cluster_and_offset_to_lba
0056CC CD 8F 5C 00         B  1089    				call fs_write_sector			0056D0 D8                  B  1090    				ret c							0056D1 0C                  B  1091    				inc c							0056D2 05                  B  1092    				dec b
0056D3 28 0B               B  1093    				jr z,fs_sfncl					0056D5 C5                  B  1094    fs_sfns			push bc				
0056D6 01000200            B  1095    				ld bc,512						0056DA 11000800            B  1096    				ld de,sector_buffer				0056DE 18 B9               B  1097    				jr fs_dbfil						                           B  1098    				
0056E0 CD C4 58 00         B  1099    fs_sfncl		call fs_find_free_cluster		0056E4 D8                  B  1100    				ret c							0056E5 C0                  B  1101    				ret nz							0056E6 2A 54 5D 00         B  1102    				ld hl,(fs_file_working_cluster)
0056EA ED5B 64 5D 00       B  1103    				ld de,(fs_free_cluster)
0056EF CD 3A 5B 00         B  1104    				call update_fat_entry_for_clust
0056F3 D8                  B  1105    				ret c
0056F4 2A 64 5D 00         B  1106    				ld hl,(fs_free_cluster)
0056F8 22 54 5D 00         B  1107    				ld (fs_file_working_cluster),hl
0056FC 11FFFF00            B  1108    				ld de,0ffffh
005700 CD 3A 5B 00         B  1109    				call update_fat_entry_for_clust
005704 D8                  B  1110    				ret c
005705 3A 07 5D 00         B  1111    				ld a,(fs_cluster_size)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005709 47                  B  1112    				ld b,a							00570A 0E00                B  1113    				ld c,0							00570C 18 C7               B  1114    				jr fs_sfns						                           B  1115    				
00570E C1                  B  1116    fs_lbof			pop bc
00570F 79                  B  1117    				ld a,c							005710 2A 54 5D 00         B  1118    				ld hl,(fs_file_working_cluster)
005714 CD E5 5B 00         B  1119    				call cluster_and_offset_to_lba
005718 CD 8F 5C 00         B  1120    				call fs_write_sector	
00571C D8                  B  1121    				ret c
00571D AF                  B  1122    				xor a							00571E C9                  B  1123    				ret
                           B  1124    
                           B  1125    
00571F 3EC8                B  1126    fs_mem_error	ld a,0c8h						005721 C1                  B  1127    fs_flerr		pop bc
005722 B7                  B  1128    				or a							005723 C9                  B  1129    				ret			
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
005724                     B  1133    fs_erase_file_command
                           B  1134    
                           B  1135    
005724 CD FE 59 00         B  1136    				call fs_find_filename			005728 D8                  B  1137    				ret c
005729 C0                  B  1138    				ret nz
                           B  1139    				
00572A DDCB0B66            B  1140    				bit 4,(ix+0bh)					00572E 28 04               B  1141    				jr z,okdelf
005730 3EC6                B  1142    				ld a,0c6h						005732 B7                  B  1143    				or a
005733 C9                  B  1144    				ret
                           B  1145    				
005734 DDE5                B  1146    okdelf			push ix
005736 E1                  B  1147    				pop hl
005737 C3 20 55 00         B  1148    				jp fs_delco						                           B  1149    					
                           B  1150    
                           B  1151    ;----------------------------------------------
                           B  1152    
                           B  1153    
00573B                     B  1154    fs_rename_command
                           B  1155    
00573B CD FE 59 00         B  1156    				call fs_find_filename			00573F D8                  B  1157    				ret c							005740 FEC2                B  1158    				cp 0c2h							005742 28 04               B  1159    				jr z,fs_nfnok					005744 3EC9                B  1160    				ld a,0c9h						005746 B7                  B  1161    				or a
005747 C9                  B  1162    				ret
                           B  1163    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005748 21 1E 5D 00         B  1164    fs_nfnok		ld hl,fs_sought_filename		00574C 11 36 5D 00         B  1165    				ld de,fs_filename_buffer
005750 010B0000            B  1166    				ld bc,11
005754 EDB0                B  1167    				ldir
005756 21 2A 5D 00         B  1168    				ld hl,fs_alt_filename			00575A 11 1E 5D 00         B  1169    				ld de,fs_sought_filename
00575E 010B0000            B  1170    				ld bc,11
005762 EDB0                B  1171    				ldir
005764 CD FE 59 00         B  1172    				call fs_find_filename			005768 D8                  B  1173    				ret c
005769 FEC2                B  1174    				cp 0c2h
00576B C8                  B  1175    				ret z							                           B  1176    				
00576C DDE5                B  1177    				push ix
00576E D1                  B  1178    				pop de
00576F 21 36 5D 00         B  1179    				ld hl,fs_filename_buffer	 	005773 010B0000            B  1180    				ld bc,11
005777 EDB0                B  1181    				ldir							005779 CD 8F 5C 00         B  1182    				call fs_write_sector			                           B  1183    				
00577D AF                  B  1184    fs_rndone		xor a
00577E C9                  B  1185    				ret
                           B  1186    				
                           B  1187    
                           B  1188    ;----------------------------------------------
                           B  1189    
                           B  1190    
00577F                     B  1191    fs_goto_first_dir_entry
                           B  1192    
00577F CD 27 1B 00         B  1193    				call fs_get_dir_cluster
005783 ED53 6D 5D 00       B  1194    				ld (fs_dir_entry_cluster),de
005788 AF                  B  1195    				xor a
005789 32 73 5D 00         B  1196    				ld (fs_dir_entry_sector),a		00578D 11000000            B  1197    				ld de,0
005791 ED53 70 5D 00       B  1198    				ld (fs_dir_entry_line_offset),d
                           B  1199    				
                           B  1200    
                           B  1201    
005796                     B  1202    fs_get_dir_entry
                           B  1203    
                           B  1204    ; No input parameters.
                           B  1205    ;
                           B  1206    ; Returns HL    = Location of null terminated f
                           B  1207    ;         IX:IY = Length of file (if applicable
                           B  1208    ;         B     = File flag (1 = directory, 0 =
                           B  1209    ;         A     = Error code
                           B  1210    ;         Carry = Set if hardware error encount
                           B  1211    
                           B  1212    
005796 3A 73 5D 00         B  1213    				ld a,(fs_dir_entry_sector)		00579A 4F                  B  1214    				ld c,a
00579B 2A 6D 5D 00         B  1215    				ld hl,(fs_dir_entry_cluster)	Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00579F CD E5 5B 00         B  1216    				call cluster_and_offset_to_lba
                           B  1217    			
0057A3 7C                  B  1218    				ld a,h							0057A4 B5                  B  1219    				or l							0057A5 20 09               B  1220    				jr nz,nr_read					0057A7 2A 11 5D 00         B  1221    				ld hl,(fs_root_dir_position)	0057AB 79                  B  1222    				ld a,c
0057AC CD 2B 5C 00         B  1223    				call set_absolute_lba
                           B  1224    				
0057B0 CD 66 5C 00         B  1225    nr_read			call fs_read_sector				0057B4 D8                  B  1226    				ret c							                           B  1227    				
0057B5 ED5B 70 5D 00       B  1228    				ld de,(fs_dir_entry_line_offset
0057BA DD210008 00         B  1229    dscan_int_loop	ld ix,sector_buffer
0057BF DD19                B  1230    				add ix,de
0057C1 DD7E00              B  1231    ds_int_loop		ld a,(ix)
0057C4 B7                  B  1232    				or a							0057C5 28 0E               B  1233    				jr z,fs_dir_entry_free		
0057C7 FEE5                B  1234    				cp 0e5h							0057C9 28 0A               B  1235    				jr z,fs_dir_entry_free	
0057CB FE05                B  1236    				cp 05h							0057CD 28 06               B  1237    				jr z,fs_dir_entry_free	
0057CF DDCB0B5E            B  1238    				bit 3,(ix+0bh)					0057D3 28 0D               B  1239    				jr z,fs_dir_entry_in_use		                           B  1240    
0057D5                     B  1241    fs_dir_entry_free
                           B  1242    
0057D5 EB                  B  1243    				ex de,hl
0057D6 11200000            B  1244    				ld de,32
0057DA 19                  B  1245    				add hl,de
0057DB EB                  B  1246    				ex de,hl
0057DC CB4A                B  1247    				bit 1,d
0057DE 28 DA               B  1248    				jr z,dscan_int_loop
0057E0 18 54               B  1249    				jr dscan_new_sect
                           B  1250    
0057E2                     B  1251    fs_dir_entry_in_use
                           B  1252    				
0057E2 ED53 70 5D 00       B  1253    				ld (fs_dir_entry_line_offset),d
0057E7 DDE5                B  1254    				push ix
0057E9 E1                  B  1255    				pop hl
0057EA CD 73 11 00         B  1256    				call os_clear_output_line
0057EE 0608                B  1257    				ld b,8							0057F0 11 D1 6A 00         B  1258    				ld de,output_line
0057F4 7E                  B  1259    dcopyn			ld a,(hl)
0057F5 FE20                B  1260    				cp ' '							0057F7 28 02               B  1261    				jr z,digchar
0057F9 12                  B  1262    				ld (de),a
0057FA 13                  B  1263    				inc de
0057FB 23                  B  1264    digchar			inc hl
0057FC 10 F6               B  1265    				djnz dcopyn
0057FE 7E                  B  1266    				ld a,(hl)						0057FF FE20                B  1267    				cp ' '							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005801 28 0A               B  1268    				jr z,dirnoex
005803 3E2E                B  1269    				ld a,'.'						005805 12                  B  1270    				ld (de),a
005806 13                  B  1271    				inc de	
005807 01030000            B  1272    				ld bc,3							00580B EDB0                B  1273    				ldir
00580D AF                  B  1274    dirnoex			xor a 
00580E 12                  B  1275    				ld (de),a						                           B  1276    				
00580F 47                  B  1277    				ld b,a
005810 DDCB0B66            B  1278    				bit 4,(ix+0bh)					005814 28 01               B  1279    				jr z,fs_fniaf		
005816 04                  B  1280    				inc b							005817 DD171C              B  1281    fs_fniaf		ld de,(ix+01ch)					00581A DD4E1F              B  1282    				ld c,(ix+01fh)
00581D 21 D1 6A 00         B  1283    				ld hl,output_line				005821 AF                  B  1284    				xor a
005822 C9                  B  1285    				ret
                           B  1286    
                           B  1287    
                           B  1288    
                           B  1289    
005823                     B  1290    fs_goto_next_dir_entry
                           B  1291    
005823 11200000            B  1292    				ld de,32
005827 2A 70 5D 00         B  1293    				ld hl,(fs_dir_entry_line_offset
00582B 19                  B  1294    				add hl,de
00582C 22 70 5D 00         B  1295    				ld (fs_dir_entry_line_offset),h
005830 CB4C                B  1296    				bit 1,h
005832 CA 96 57 00         B  1297    				jp z,fs_get_dir_entry
                           B  1298    
005836 21000000            B  1299    dscan_new_sect	ld hl,0				
00583A 22 70 5D 00         B  1300    				ld (fs_dir_entry_line_offset),h
                           B  1301    			
00583E 21 73 5D 00         B  1302    				ld hl,fs_dir_entry_sector
005842 34                  B  1303    				inc (hl)						                           B  1304    			
005843 ED5B 6D 5D 00       B  1305    				ld de,(fs_dir_entry_cluster)
005848 7A                  B  1306    				ld a,d
005849 B3                  B  1307    				or e							00584A 20 0B               B  1308    				jr nz,nonroot2
00584C 3A 17 5D 00         B  1309    				ld a,(fs_root_dir_sectors)
005850 BE                  B  1310    				cp (hl)
005851 28 23               B  1311    				jr z,endofdir			
005853 C3 96 57 00         B  1312    				jp fs_get_dir_entry
                           B  1313    												005857 3A 07 5D 00         B  1314    nonroot2		ld a,(fs_cluster_size)		
00585B BE                  B  1315    				cp (hl)							00585C C2 96 57 00         B  1316    				jp nz,fs_get_dir_entry
005860 3600                B  1317    				ld (hl),0						005862 2A 6D 5D 00         B  1318    				ld hl,(fs_dir_entry_cluster)
005866 CD 0E 5B 00         B  1319    				call get_fat_entry_for_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00586A 22 6D 5D 00         B  1320    				ld (fs_dir_entry_cluster),hl
00586E CD B7 58 00         B  1321    				call fs_compare_hl_fff8			005872 DA 96 57 00         B  1322    				jp c,fs_get_dir_entry
                           B  1323    	
005876 3ED2                B  1324    endofdir		ld a,0d2h
005878 B7                  B  1325    				or a							005879 C9                  B  1326    				ret	
                           B  1327    				
                           B  1328    ;----------------------------------------------
                           B  1329    
00587A                     B  1330    fs_get_volume_label
                           B  1331    
                           B  1332    
                           B  1333    ; On return HL = volume label
                           B  1334    
                           B  1335    
00587A 2A 11 5D 00         B  1336    				ld hl,(fs_root_dir_position)
00587E 0E00                B  1337    				ld c,0
005880 AF                  B  1338    gvl_nrsec		xor a
005881 CD 3C 5C 00         B  1339    				call set_abs_lba_and_read_secto
005885 D8                  B  1340    				ret c
005886 0610                B  1341    				ld b,16							005888 DD210008 00         B  1342    				ld ix,sector_buffer
00588D DD7E0B              B  1343    find_vl			ld a,(ix+0bh)
005890 FE08                B  1344    				cp 08h
005892 28 1A               B  1345    				jr z,got_label
005894 ED3220              B  1346    				lea ix,ix+32					005897 10 F4               B  1347    				djnz find_vl					005899 23                  B  1348    				inc hl
00589A 0C                  B  1349    				inc c
00589B 3A 17 5D 00         B  1350    				ld a,(fs_root_dir_sectors)		00589F B9                  B  1351    				cp c							0058A0 20 DE               B  1352    				jr nz,gvl_nrsec
                           B  1353    			
0058A2 CD 58 51 00         B  1354    				call fs_read_partition_bootsect
0058A6 D8                  B  1355    				ret c
0058A7 B7                  B  1356    				or a
0058A8 C0                  B  1357    				ret nz
0058A9 DD212B08 00         B  1358    				ld ix,sector_buffer+02bh
                           B  1359    				
0058AE DD360B00            B  1360    got_label		ld (ix+0bh),0					0058B2 DDE5                B  1361    				push ix
0058B4 E1                  B  1362    				pop hl
0058B5 AF                  B  1363    				xor a
0058B6 C9                  B  1364    				ret
                           B  1365    				
                           B  1366    				
                           B  1367    ;----------------------------------------------
                           B  1368    ; Internal subroutines
                           B  1369    ;----------------------------------------------
                           B  1370    
0058B7                     B  1371    fs_compare_hl_fff8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1372    
                           B  1373    ;INPUT HL = value to compare with fff8
                           B  1374    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1375    	
                           B  1376    	
0058B7 E5                  B  1377    				push hl
0058B8 D5                  B  1378    				push de
0058B9 11F8FF00            B  1379    				ld de,0fff8h			
0058BD B7                  B  1380    				or a							0058BE 52ED52              B  1381    				sbc.s hl,de						0058C1 D1                  B  1382    				pop de
0058C2 E1                  B  1383    				pop hl
0058C3 C9                  B  1384    				ret
                           B  1385    
                           B  1386    ;----------------------------------------------
                           B  1387    
                           B  1388    
0058C4                     B  1389    fs_find_free_cluster
                           B  1390    	
0058C4 DD210000 00         B  1391    				ld ix,0							0058C9 ED5B 0B 5D 00       B  1392    				ld de,(fs_fat1_position)		0058CE AF                  B  1393    				xor a				
0058CF 32 60 5D 00         B  1394    fs_ffcl2		ld (fs_working_sector),a	
0058D3 D5                  B  1395    				push de
0058D4 E1                  B  1396    				pop hl
0058D5 3A 60 5D 00         B  1397    				ld a,(fs_working_sector)
0058D9 CD 3C 5C 00         B  1398    				call set_abs_lba_and_read_secto
0058DD D8                  B  1399    				ret c
0058DE 21000800            B  1400    				ld hl,sector_buffer
0058E2 0600                B  1401    				ld b,0
0058E4 7E                  B  1402    fs_ffcl1		ld a,(hl)						0058E5 23                  B  1403    				inc hl
0058E6 B6                  B  1404    				or (hl)
0058E7 23                  B  1405    				inc hl
0058E8 28 14               B  1406    				jr z,fs_gotfc
0058EA DD23                B  1407    				inc ix
0058EC 10 F6               B  1408    				djnz fs_ffcl1
                           B  1409    				
0058EE 2A 18 5D 00         B  1410    				ld hl,(fs_sectors_per_fat)
0058F2 3A 60 5D 00         B  1411    				ld a,(fs_working_sector)		0058F6 3C                  B  1412    				inc a				
0058F7 BD                  B  1413    				cp l		
0058F8 20 D5               B  1414    				jr nz,fs_ffcl2					0058FA 3EC1                B  1415    fs_dfull		ld a,c1h						0058FC B7                  B  1416    				or a							0058FD C9                  B  1417    				ret
                           B  1418    			
0058FE DDE5                B  1419    fs_gotfc		push ix							005900 E1                  B  1420    				pop hl							005901 2B                  B  1421    				dec hl							005902 2B                  B  1422    				dec hl							005903 ED5B 1B 5D 00       B  1423    				ld de,(fs_max_data_clusters)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005908 AF                  B  1424    				xor a
005909 52ED52              B  1425    				sbc.s hl,de						00590C 30 EC               B  1426    				jr nc,fs_dfull
                           B  1427    			
00590E DD22 64 5D 00       B  1428    				ld (fs_free_cluster),ix
005913 AF                  B  1429    				xor a
005914 C9                  B  1430    				ret
                           B  1431    	
                           B  1432    	
                           B  1433    ;----------------------------------------------
                           B  1434    	
                           B  1435    	
005915                     B  1436    fs_find_free_dir_entry
                           B  1437    
                           B  1438    
                           B  1439    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1440    
                           B  1441    			
005915 CD 27 1B 00         B  1442    				call fs_get_dir_cluster			005919 EB                  B  1443    				ex de,hl
00591A 22 54 5D 00         B  1444    ffenxtclu		ld (fs_file_working_cluster),hl
00591E AF                  B  1445    				xor a
00591F 32 60 5D 00         B  1446    				ld (fs_working_sector),a
                           B  1447    			
005923 2A 11 5D 00         B  1448    ffenxtsec		ld hl,(fs_root_dir_position)	005927 3A 60 5D 00         B  1449    				ld a,(fs_working_sector)
00592B CD 2B 5C 00         B  1450    				call set_absolute_lba
                           B  1451    				
00592F CD 27 1B 00         B  1452    				call fs_get_dir_cluster			005933 7A                  B  1453    				ld a,d
005934 B3                  B  1454    				or e
005935 28 0C               B  1455    				jr z,at_rootd
005937 2A 54 5D 00         B  1456    				ld hl,(fs_file_working_cluster)
00593B 3A 60 5D 00         B  1457    				ld a,(fs_working_sector)
00593F CD E5 5B 00         B  1458    				call cluster_and_offset_to_lba
                           B  1459    				
005943 CD 66 5C 00         B  1460    at_rootd		call fs_read_sector
005947 D8                  B  1461    				ret c
005948 0610                B  1462    				ld b,16							00594A 11200000            B  1463    				ld de,32
00594E DD210008 00         B  1464    				ld ix,sector_buffer
005953 DD7E00              B  1465    scdirfe			ld a,(ix)						005956 B7                  B  1466    				or a
005957 28 65               B  1467    				jr z,got_fde
005959 FEE5                B  1468    				cp 0e5h
00595B 28 61               B  1469    				jr z,got_fde
00595D DD19                B  1470    				add ix,de						00595F 10 F2               B  1471    				djnz scdirfe					                           B  1472    				
005961 21 60 5D 00         B  1473    				ld hl,fs_working_sector			005965 34                  B  1474    				inc (hl)
                           B  1475    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005966 CD 27 1B 00         B  1476    				call fs_get_dir_cluster			00596A 7A                  B  1477    				ld a,d
00596B B3                  B  1478    				or e
00596C 20 0B               B  1479    				jr nz,ffenotroo
00596E 3A 17 5D 00         B  1480    				ld a,(fs_root_dir_sectors)		005972 BE                  B  1481    				cp (hl)							005973 20 AE               B  1482    				jr nz,ffenxtsec
005975 3EC3                B  1483    fenotfnd		ld a,0c3h						005977 B7                  B  1484    				or a
005978 C9                  B  1485    				ret
                           B  1486    			
005979 3A 07 5D 00         B  1487    ffenotroo		ld a,(fs_cluster_size)			00597D BE                  B  1488    				cp (hl)
00597E 20 A3               B  1489    				jr nz,ffenxtsec
005980 2A 54 5D 00         B  1490    				ld hl,(fs_file_working_cluster)
005984 CD 0E 5B 00         B  1491    				call get_fat_entry_for_cluster	005988 D8                  B  1492    				ret c
005989 CD B7 58 00         B  1493    				call fs_compare_hl_fff8			00598D 38 8B               B  1494    				jr c,ffenxtclu
                           B  1495    			
00598F CD C4 58 00         B  1496    				call fs_find_free_cluster		005993 D8                  B  1497    				ret c							005994 C0                  B  1498    				ret nz							005995 ED5B 64 5D 00       B  1499    				ld de,(fs_free_cluster)
00599A 2A 54 5D 00         B  1500    				ld hl,(fs_file_working_cluster)
00599E CD 3A 5B 00         B  1501    				call update_fat_entry_for_clust
0059A2 D8                  B  1502    				ret c
0059A3 EB                  B  1503    				ex de,hl						0059A4 11FFFF00            B  1504    				ld de,0ffffh
0059A8 CD 3A 5B 00         B  1505    				call update_fat_entry_for_clust
0059AC D8                  B  1506    				ret c
                           B  1507    			
0059AD 2A 64 5D 00         B  1508    				ld hl,(fs_free_cluster)			0059B1 CD C0 59 00         B  1509    				call fs_clear_cluster			0059B5 D8                  B  1510    				ret c
0059B6 2A 64 5D 00         B  1511    				ld hl,(fs_free_cluster)			0059BA C3 1A 59 00         B  1512    				jp ffenxtclu					                           B  1513    			
0059BE AF                  B  1514    got_fde			xor a
0059BF C9                  B  1515    				ret
                           B  1516    					
                           B  1517    
                           B  1518    ;----------------------------------------------
                           B  1519    
0059C0                     B  1520    fs_clear_cluster
                           B  1521    
                           B  1522    ;INPUT HL = cluster to clear
                           B  1523    
0059C0 22 61 5D 00         B  1524    				ld (fs_working_cluster),hl
                           B  1525    			
0059C4 CD EC 59 00         B  1526    				call fs_clear_sector_buffer
                           B  1527    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0059C8 AF                  B  1528    				xor a				
0059C9 32 60 5D 00         B  1529    				ld (fs_working_sector),a		0059CD 3A 60 5D 00         B  1530    wipeclulp		ld a,(fs_working_sector)		0059D1 2A 61 5D 00         B  1531    				ld hl,(fs_working_cluster)		0059D5 CD E5 5B 00         B  1532    				call cluster_and_offset_to_lba	0059D9 CD 8F 5C 00         B  1533    				call fs_write_sector
0059DD D8                  B  1534    				ret c
0059DE 21 60 5D 00         B  1535    				ld hl,fs_working_sector
0059E2 34                  B  1536    				inc (hl)
0059E3 3A 07 5D 00         B  1537    				ld a,(fs_cluster_size)
0059E7 BE                  B  1538    				cp (hl)
0059E8 20 E3               B  1539    				jr nz,wipeclulp
0059EA AF                  B  1540    				xor a
0059EB C9                  B  1541    				ret
                           B  1542    			
                           B  1543    			
0059EC                     B  1544    fs_clear_sector_buffer
                           B  1545    			
0059EC E5                  B  1546    				push hl
0059ED C5                  B  1547    				push bc
0059EE 21000800            B  1548    				ld hl,sector_buffer			
0059F2 01000200            B  1549    				ld bc,512				
0059F6 AF                  B  1550    				xor a				
0059F7 CD 47 16 00         B  1551    				call os_bchl_memfill	
0059FB C1                  B  1552    				pop bc
0059FC E1                  B  1553    				pop hl
0059FD C9                  B  1554    				ret
                           B  1555    				
                           B  1556    
                           B  1557    	
                           B  1558    ;----------------------------------------------
                           B  1559    	
0059FE                     B  1560    fs_find_filename
                           B  1561    
0059FE AF                  B  1562    				xor a
                           B  1563    
0059FF                     B  1564    fs_search	
                           B  1565    				
0059FF 32 7B 5D 00         B  1566    				ld (fs_search_type),a
                           B  1567    			
                           B  1568    ; OUTPUT IX start of 32 byte dir entry
                           B  1569    			
005A03 CD 27 1B 00         B  1570    				call fs_get_dir_cluster
005A07 ED53 54 5D 00       B  1571    ffnnxtclu		ld (fs_file_working_cluster),de
005A0C AF                  B  1572    				xor a
005A0D 32 60 5D 00         B  1573    				ld (fs_working_sector),a
                           B  1574    			
005A11 2A 11 5D 00         B  1575    ffnnxtsec		ld hl,(fs_root_dir_position)	005A15 3A 60 5D 00         B  1576    				ld a,(fs_working_sector)
005A19 CD 2B 5C 00         B  1577    				call set_absolute_lba
                           B  1578    				
005A1D CD 27 1B 00         B  1579    				call fs_get_dir_cluster			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005A21 7A                  B  1580    				ld a,d
005A22 B3                  B  1581    				or e
005A23 28 0C               B  1582    				jr z,at_rootd2
005A25 2A 54 5D 00         B  1583    				ld hl,(fs_file_working_cluster)
005A29 3A 60 5D 00         B  1584    				ld a,(fs_working_sector)
005A2D CD E5 5B 00         B  1585    				call cluster_and_offset_to_lba	                           B  1586    				
005A31 CD 66 5C 00         B  1587    at_rootd2		call fs_read_sector
005A35 D8                  B  1588    				ret c
005A36 0E10                B  1589    				ld c,16							005A38 DD210008 00         B  1590    				ld ix,sector_buffer
005A3D DDE5                B  1591    ndirentr		push ix
005A3F D1                  B  1592    				pop de
005A40 3A 7B 5D 00         B  1593    				ld a,(fs_search_type)
005A44 B7                  B  1594    				or a
005A45 28 1E               B  1595    				jr z,fs_ststr
                           B  1596    			
005A47 DD7E00              B  1597    				ld a,(ix)						005A4A FE80                B  1598    				cp 080h							005A4C 30 35               B  1599    				jr nc,fnnotsame
005A4E FE20                B  1600    				cp 020h
005A50 38 31               B  1601    				jr c,fnnotsame
005A52 ED5B 78 5D 00       B  1602    				ld de,(fs_stash_dir_block)		005A57 DD7E1A              B  1603    				ld a,(ix+01ah)
005A5A BB                  B  1604    				cp e
005A5B 20 26               B  1605    				jr nz,fnnotsame
005A5D DD7E1B              B  1606    				ld a,(ix+01bh)
005A60 BA                  B  1607    				cp d
005A61 28 1E               B  1608    				jr z,fs_found
005A63 18 1E               B  1609    				jr fnnotsame
                           B  1610    				
005A65 FD21 1E 5D 00       B  1611    fs_ststr		ld iy,fs_sought_filename		005A6A 060B                B  1612    				ld b,11							005A6C 1A                  B  1613    cmpfnlp			ld a,(de)						005A6D CD 67 13 00         B  1614    				call os_uppercasify				005A71 6F                  B  1615    				ld l,a
005A72 FD7E00              B  1616    				ld a,(iy)
005A75 CD 67 13 00         B  1617    				call os_uppercasify
005A79 BD                  B  1618    				cp l				
005A7A 20 07               B  1619    				jr nz,fnnotsame
005A7C FD23                B  1620    				inc iy
005A7E 13                  B  1621    				inc de
005A7F 10 EB               B  1622    				djnz cmpfnlp
005A81 AF                  B  1623    fs_found		xor a							005A82 C9                  B  1624    				ret
                           B  1625    			
005A83 11200000            B  1626    fnnotsame		ld de,32						005A87 DD19                B  1627    				add ix,de
005A89 0D                  B  1628    				dec c
005A8A 20 B1               B  1629    				jr nz,ndirentr					                           B  1630    				
005A8C 21 60 5D 00         B  1631    				ld hl,fs_working_sector			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005A90 34                  B  1632    				inc (hl)
                           B  1633    				
005A91 CD 27 1B 00         B  1634    				call fs_get_dir_cluster			005A95 7A                  B  1635    				ld a,d
005A96 B3                  B  1636    				or e
005A97 20 0D               B  1637    				jr nz,notrootdir
005A99 3A 17 5D 00         B  1638    				ld a,(fs_root_dir_sectors)		005A9D BE                  B  1639    				cp (hl)							005A9E C2 11 5A 00         B  1640    				jp nz,ffnnxtsec
005AA2 3EC2                B  1641    fnnotfnd		ld a,0c2h						005AA4 B7                  B  1642    				or a
005AA5 C9                  B  1643    				ret
                           B  1644    			
005AA6                     B  1645    notrootdir
                           B  1646    				
005AA6 3A 07 5D 00         B  1647    				ld a,(fs_cluster_size)			005AAA BE                  B  1648    				cp (hl)
005AAB C2 11 5A 00         B  1649    				jp nz,ffnnxtsec
                           B  1650    				
005AAF 2A 54 5D 00         B  1651    				ld hl,(fs_file_working_cluster)
005AB3 CD 0E 5B 00         B  1652    				call get_fat_entry_for_cluster
005AB7 D8                  B  1653    				ret c
005AB8 CD B7 58 00         B  1654    				call fs_compare_hl_fff8			005ABC 30 E4               B  1655    				jr nc,fnnotfnd					005ABE EB                  B  1656    				ex de,hl						005ABF C3 07 5A 00         B  1657    				jp ffnnxtclu					                           B  1658    				
                           B  1659    
                           B  1660    ;----------------------------------------------
                           B  1661    
005AC3                     B  1662    fs_hl_to_alt_filename
                           B  1663    
005AC3 11 2A 5D 00         B  1664    				ld de,fs_alt_filename
005AC7 18 04               B  1665    				jr hltofngo
                           B  1666    
                           B  1667    
005AC9                     B  1668    fs_hl_to_filename
                           B  1669    
                           B  1670    ;INPUT: HL = address of filename (null / space 
                           B  1671    ;OUTPUT HL = address of first character after f
                           B  1672    ;        C = number of characters in filename
                           B  1673    
005AC9 11 1E 5D 00         B  1674    				ld de,fs_sought_filename
005ACD CD D8 5B 00         B  1675    hltofngo		call fs_clear_filename			005AD1 D5                  B  1676    				push de			
005AD2 DDE1                B  1677    				pop ix							                           B  1678    				
005AD4 0E00                B  1679    				ld c,0
005AD6 0608                B  1680    				ld b,8
005AD8 7E                  B  1681    csfnlp2			ld a,(hl)						005AD9 B7                  B  1682    				or a
005ADA C8                  B  1683    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005ADB FE20                B  1684    				cp 32
005ADD C8                  B  1685    				ret z							005ADE FE2F                B  1686    				cp 02fh
005AE0 C8                  B  1687    				ret z							005AE1 FE2E                B  1688    				cp '.'
005AE3 28 16               B  1689    				jr z,dofn_ext					005AE5 12                  B  1690    				ld (de),a
005AE6 13                  B  1691    				inc de
005AE7 23                  B  1692    				inc hl
005AE8 0C                  B  1693    				inc c							005AE9 10 ED               B  1694    				djnz csfnlp2					005AEB 7E                  B  1695    find_ext		ld a,(hl)
005AEC FE2E                B  1696    				cp '.'							005AEE 28 0B               B  1697    				jr z,dofn_ext	
005AF0 FE20                B  1698    				cp ' '							005AF2 C8                  B  1699    				ret z
005AF3 FE2F                B  1700    				cp 02fh
005AF5 C8                  B  1701    				ret z
005AF6 B7                  B  1702    				or a
005AF7 C8                  B  1703    				ret z
005AF8 23                  B  1704    				inc hl
005AF9 18 F0               B  1705    				jr find_ext
                           B  1706    				
005AFB 23                  B  1707    dofn_ext		inc hl							005AFC 0603                B  1708    				ld b,3				
005AFE 7E                  B  1709    fnextlp			ld a,(hl)						005AFF B7                  B  1710    				or a
005B00 C8                  B  1711    				ret z							005B01 FE20                B  1712    				cp 32
005B03 C8                  B  1713    				ret z
005B04 DD7708              B  1714    				ld (ix+8),a
005B07 DD23                B  1715    				inc ix
005B09 23                  B  1716    				inc hl
005B0A 0C                  B  1717    				inc c
005B0B 10 F1               B  1718    				djnz fnextlp
005B0D C9                  B  1719    				ret
                           B  1720    				
                           B  1721    ;----------------------------------------------
                           B  1722    
                           B  1723    
005B0E                     B  1724    get_fat_entry_for_cluster
                           B  1725    
                           B  1726    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1727    
005B0E C5                  B  1728    				push bc
005B0F D5                  B  1729    				push de
005B10 01000000            B  1730    				ld bc,0
005B14 4D                  B  1731    				ld c,l
005B15 7C                  B  1732    				ld a,h
005B16 2A 0B 5D 00         B  1733    				ld hl,(fs_fat1_position)
005B1A CD 3C 5C 00         B  1734    				call set_abs_lba_and_read_secto
005B1E 38 17               B  1735    				jr c,hwerr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005B20 DDE5                B  1736    				push ix
005B22 DD210008 00         B  1737    				ld ix,sector_buffer
005B27 DD09                B  1738    				add ix,bc
005B29 DD09                B  1739    				add ix,bc
005B2B 21000000            B  1740    				ld hl,0
005B2F DD6E00              B  1741    				ld l,(ix)
005B32 DD6601              B  1742    				ld h,(ix+1)
005B35 DDE1                B  1743    				pop ix
005B37 D1                  B  1744    hwerr			pop de
005B38 C1                  B  1745    				pop bc
005B39 C9                  B  1746    				ret
                           B  1747    
                           B  1748    
                           B  1749    ;----------------------------------------------
                           B  1750    
                           B  1751    
005B3A                     B  1752    update_fat_entry_for_cluster
                           B  1753    
                           B  1754    ; INPUT: HL = cluster in question
                           B  1755    ;        DE = new value to put in FAT tables
                           B  1756    			
005B3A C5                  B  1757    				push bc
005B3B E5                  B  1758    				push hl
005B3C 01000000            B  1759    				ld bc,0
005B40 4D                  B  1760    				ld c,l
005B41 7C                  B  1761    				ld a,h
005B42 2A 0B 5D 00         B  1762    				ld hl,(fs_fat1_position)		005B46 CD 5A 5B 00         B  1763    				call fat_upd
005B4A 38 0B               B  1764    				jr c,fup_end
                           B  1765    			
005B4C E1                  B  1766    				pop hl
005B4D E5                  B  1767    				push hl
005B4E 7C                  B  1768    				ld a,h
005B4F 2A 0E 5D 00         B  1769    				ld hl,(fs_fat2_position)		005B53 CD 5A 5B 00         B  1770    				call fat_upd
005B57 E1                  B  1771    fup_end			pop hl
005B58 C1                  B  1772    				pop bc
005B59 C9                  B  1773    				ret
                           B  1774    			
                           B  1775    			
005B5A CD 3C 5C 00         B  1776    fat_upd			call set_abs_lba_and_read_secto
005B5E 38 0D               B  1777    				jr c,ufehwerr
005B60 21000800            B  1778    				ld hl,sector_buffer
005B64 09                  B  1779    				add hl,bc
005B65 09                  B  1780    				add hl,bc
005B66 73                  B  1781    				ld (hl),e
005B67 23                  B  1782    				inc hl
005B68 72                  B  1783    				ld (hl),d
005B69 CD 8F 5C 00         B  1784    				call fs_write_sector
005B6D C9                  B  1785    ufehwerr		ret
                           B  1786    				
                           B  1787    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1788    ;----------------------------------------------
                           B  1789    
005B6E                     B  1790    transfer_length_countdown
                           B  1791    
005B6E E5                  B  1792    				push hl							005B6F C5                  B  1793    				push bc
                           B  1794    			
005B70 0604                B  1795    				ld b,4
005B72 21 42 5D 00         B  1796    				ld hl,fs_file_pointer			005B76 34                  B  1797    fpinclp			inc (hl)
005B77 20 03               B  1798    				jr nz,fs_fpino
005B79 23                  B  1799    				inc hl
005B7A 10 FA               B  1800    				djnz fpinclp
                           B  1801    				
005B7C 2A 4E 5D 00         B  1802    fs_fpino		ld hl,(fs_file_transfer_length)
005B80 2B                  B  1803    				dec hl
005B81 22 4E 5D 00         B  1804    				ld (fs_file_transfer_length),hl
005B85 01000000            B  1805    				ld bc,0
005B89 B7                  B  1806    				or a
005B8A ED4A                B  1807    				adc hl,bc						                           B  1808    				
005B8C C1                  B  1809    				pop bc
005B8D E1                  B  1810    				pop hl
005B8E C9                  B  1811    				ret
                           B  1812    
                           B  1813    ;----------------------------------------------
                           B  1814    
005B8F                     B  1815    fs_get_current_dir_name
                           B  1816    
                           B  1817    ;returns current dir name - location at HL
                           B  1818    
005B8F CD 27 1B 00         B  1819    				call fs_get_dir_cluster			005B93 7A                  B  1820    				ld a,d
005B94 B3                  B  1821    				or e
005B95 20 10               B  1822    				jr nz,fs_dnnr
005B97 21 7F 68 00         B  1823    				ld hl,vol_txt+1					005B9B 3A 7A 68 00         B  1824    				ld a,(current_volume)
005B9F C630                B  1825    				add a,030h
005BA1 32 82 68 00         B  1826    				ld (vol_txt+4),a
005BA5 AF                  B  1827    				xor a
005BA6 C9                  B  1828    				ret
                           B  1829    					
005BA7 ED53 78 5D 00       B  1830    fs_dnnr			ld (fs_stash_dir_block),de
005BAC CD 0C 52 00         B  1831    				call fs_parent_dir_command		005BB0 D8                  B  1832    				ret c
005BB1 B7                  B  1833    				or a
005BB2 C0                  B  1834    				ret nz
005BB3 3E01                B  1835    				ld a,1
005BB5 CD FF 59 00         B  1836    				call fs_search					005BB9 D8                  B  1837    				ret c
005BBA C0                  B  1838    				ret nz
                           B  1839    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005BBB DDE5                B  1840    fs_gdbn			push ix
005BBD E1                  B  1841    				pop hl
005BBE 060B                B  1842    				ld b,11							005BC0 7E                  B  1843    ntdirn			ld a,(hl)
005BC1 FE20                B  1844    				cp ' '
005BC3 28 03               B  1845    				jr z,rdirfsp
005BC5 23                  B  1846    				inc hl
005BC6 10 F8               B  1847    rdirnsp			djnz ntdirn
                           B  1848    				
005BC8 3600                B  1849    rdirfsp			ld (hl),0
005BCA DDE5                B  1850    				push ix
005BCC ED5B 78 5D 00       B  1851    				ld de,(fs_stash_dir_block)
005BD1 CD 33 1B 00         B  1852    				call fs_update_dir_cluster		005BD5 E1                  B  1853    				pop hl	
005BD6 AF                  B  1854    				xor a							005BD7 C9                  B  1855    				ret
                           B  1856    
                           B  1857    			
                           B  1858    ;----------------------------------------------
                           B  1859    
005BD8                     B  1860    fs_clear_filename
                           B  1861    
005BD8 D5                  B  1862    				push de							005BD9 C5                  B  1863    				push bc
005BDA 060C                B  1864    				ld b,12
005BDC 3E20                B  1865    				ld a,' '
005BDE 12                  B  1866    clrfnlp			ld (de),a
005BDF 13                  B  1867    				inc de
005BE0 10 FC               B  1868    				djnz clrfnlp
005BE2 C1                  B  1869    				pop bc
005BE3 D1                  B  1870    				pop de
005BE4 C9                  B  1871    				ret
                           B  1872    				
                           B  1873    ;----------------------------------------------
                           B  1874    
                           B  1875    
005BE5                     B  1876    cluster_and_offset_to_lba
                           B  1877    
                           B  1878    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1879    
005BE5 C5                  B  1880    				push bc
005BE6 D5                  B  1881    				push de
005BE7 E5                  B  1882    				push hl
005BE8 DDE5                B  1883    				push ix
                           B  1884    
005BEA 2B                  B  1885    				dec hl							005BEB 2B                  B  1886    				dec hl							005BEC 11000000            B  1887    				ld de,0							005BF0 01000000            B  1888    				ld bc,0
005BF4 5F                  B  1889    				ld e,a
005BF5 3A 07 5D 00         B  1890    				ld a,(fs_cluster_size)			005BF9 CB3F                B  1891    caotllp			srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005BFB 28 03               B  1892    				jr z,clusdone
005BFD 29                  B  1893    				add hl,hl						005BFE 18 F9               B  1894    				jr caotllp
                           B  1895    			
005C00 ED4B 14 5D 00       B  1896    clusdone		ld bc,(fs_data_area)			005C05 09                  B  1897    				add hl,bc						005C06 19                  B  1898    				add hl,de						                           B  1899    				
005C07 E5                  B  1900    add_ptn_offset	push hl							005C08 CD 61 1B 00         B  1901    				call fs_calc_volume_offset
005C0C DD21 A6 68 00       B  1902    				ld ix,volume_mount_list
005C11 DD19                B  1903    				add ix,de
005C13 E1                  B  1904    				pop hl
005C14 DD0708              B  1905    				ld bc,(ix+08h)					005C17 DD7E0B              B  1906    				ld a,(ix+0bh)
005C1A 09                  B  1907    				add hl,bc
005C1B CE00                B  1908    				adc a,0
005C1D 22 5D 6A 00         B  1909    				ld (sector_lba0),hl				005C21 32 60 6A 00         B  1910    				ld (sector_lba3),a				                           B  1911    				
005C25 DDE1                B  1912    				pop ix
005C27 E1                  B  1913    				pop hl
005C28 D1                  B  1914    				pop de
005C29 C1                  B  1915    				pop bc
005C2A C9                  B  1916    				ret
                           B  1917    				
                           B  1918    
                           B  1919    ;----------------------------------------------
                           B  1920    
005C2B                     B  1921    set_absolute_lba
                           B  1922    
                           B  1923    ; set A to sector offset, HL to sectors from st
                           B  1924    
005C2B C5                  B  1925    				push bc							005C2C D5                  B  1926    				push de							005C2D E5                  B  1927    				push hl							005C2E DDE5                B  1928    				push ix							005C30 01000000            B  1929    				ld bc,0
005C34 11000000            B  1930    				ld de,0
005C38 5F                  B  1931    				ld e,a
005C39 19                  B  1932    				add hl,de
005C3A 18 CB               B  1933    				jr add_ptn_offset		
                           B  1934    				
                           B  1935    
005C3C                     B  1936    set_abs_lba_and_read_sector
                           B  1937    
005C3C CD 2B 5C 00         B  1938    				call set_absolute_lba
005C40 C3 66 5C 00         B  1939    				jp fs_read_sector
                           B  1940    				
                           B  1941    ;----------------------------------------------
                           B  1942    
                           B  1943    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005C44                     B  1944    backup_sector_lba
                           B  1945    
005C44 C5                  B  1946    				push bc
005C45 D5                  B  1947    				push de
005C46 E5                  B  1948    				push hl
005C47 21 5D 6A 00         B  1949    				ld hl,sector_lba0
005C4B 11 7C 5D 00         B  1950    				ld de,fs_backed_up_sector_lba0
005C4F 01040000            B  1951    lbabur			ld bc,4
005C53 EDB0                B  1952    				ldir
005C55 E1                  B  1953    				pop hl
005C56 D1                  B  1954    				pop de
005C57 C1                  B  1955    				pop bc
005C58 C9                  B  1956    				ret
                           B  1957    
                           B  1958    
005C59                     B  1959    restore_sector_lba
                           B  1960    
005C59 C5                  B  1961    				push bc
005C5A D5                  B  1962    				push de
005C5B E5                  B  1963    				push hl
005C5C 21 7C 5D 00         B  1964    				ld hl,fs_backed_up_sector_lba0
005C60 11 5D 6A 00         B  1965    				ld de,sector_lba0
005C64 18 E9               B  1966    				jr lbabur	
                           B  1967    					
                           B  1968    ;----------------------------------------------
                           B  1969    
005C66                     B  1970    fs_read_sector
                           B  1971    			
005C66 C5                  B  1972    				push bc
005C67 D5                  B  1973    				push de
005C68 E5                  B  1974    				push hl
005C69 DDE5                B  1975    				push ix
005C6B FDE5                B  1976    				push iy
005C6D 01040000            B  1977    				ld bc,04h						005C71 CD A0 5C 00         B  1978    				call sector_access_redirect
005C75 2A 5D 6A 00         B  1979    secaccend		ld hl,(sector_lba0)
005C79 22 80 5D 00         B  1980    				ld (fs_sector_last_read_lba0),h
005C7D 3A 60 6A 00         B  1981    				ld a,(sector_lba0+3)
005C81 32 83 5D 00         B  1982    				ld (fs_sector_last_read_lba0+3)
005C85 FDE1                B  1983    				pop iy
005C87 DDE1                B  1984    				pop ix
005C89 E1                  B  1985    				pop hl
005C8A D1                  B  1986    				pop de
005C8B C1                  B  1987    				pop bc
005C8C C8                  B  1988    				ret z							005C8D 37                  B  1989    				scf								005C8E C9                  B  1990    				ret								                           B  1991    
                           B  1992    
005C8F                     B  1993    fs_write_sector	
                           B  1994    				
005C8F C5                  B  1995    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005C90 D5                  B  1996    				push de
005C91 E5                  B  1997    				push hl
005C92 DDE5                B  1998    				push ix
005C94 FDE5                B  1999    				push iy
005C96 01080000            B  2000    				ld bc,08h						005C9A CD A0 5C 00         B  2001    				call sector_access_redirect
005C9E 18 D5               B  2002    				jr secaccend
                           B  2003    
                           B  2004    
                           B  2005    
005CA0                     B  2006    sector_access_redirect
                           B  2007    
                           B  2008    	
005CA0 3A 7B 68 00         B  2009    				ld a,(current_driver)			005CA4 CD F9 1A 00         B  2010    				call locate_driver_base			005CA8 EB                  B  2011    				ex de,hl
005CA9 09                  B  2012    				add hl,bc						005CAA E9                  B  2013    				jp (hl)
                           B  2014    
                           B  2015    ;----------------------------------------------
                           B  2016    
005CAB                     B  2017    fs_is_same_sector_in_buffer
                           B  2018    				
005CAB E5                  B  2019    				push hl
005CAC D5                  B  2020    				push de
005CAD 2A 5D 6A 00         B  2021    				ld hl,(sector_lba0)
005CB1 ED5B 80 5D 00       B  2022    				ld de,(fs_sector_last_read_lba0
005CB6 AF                  B  2023    				xor a
005CB7 ED52                B  2024    				sbc hl,de
005CB9 20 0A               B  2025    				jr nz,fs_notsamsec
005CBB 3A 60 6A 00         B  2026    				ld a,(sector_lba0+3)
005CBF 6F                  B  2027    				ld l,a
005CC0 3A 83 5D 00         B  2028    				ld a,(fs_sector_last_read_lba0+
005CC4 BD                  B  2029    				cp l
005CC5 D1                  B  2030    fs_notsamsec	pop de
005CC6 E1                  B  2031    				pop hl
005CC7 C9                  B  2032    				ret
                           B  2033    
                           B  2034    ;----------------------------------------------
                           B  2035    	
005CC8                     B  2036    bootsector_stub
                           B  2037    
005CC8 EB3C904D 53444F53   B  2038    				db  0EBh,03Ch,090h,04Dh,053h,04
005CD0 352E3000 02004000 
005CD8 02000200 00F8F200   B  2039    				db  002h,000h,002h,000h,000h,0F
005CE0 3F00FF00 00000000 
005CE8 00000000 000029C4   B  2040    				db  000h,000h,000h,000h,000h,00
005CF0 E636984E 4F204E41 
005CF8 4D452020 20204641   B  2041    				db  04Dh,045h,020h,020h,020h,02
005D00 54313620 2020C3 
                           B  2042    
                           B  2043    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  2044    
005D07 00                  B  2045    fs_cluster_size				db 0
005D08 000000              B  2046    fs_bytes_per_cluster		dw24 0
005D0B 000000              B  2047    fs_fat1_position			dw24 0		; offse
005D0E 000000              B  2048    fs_fat2_position			dw24 0		; offse
005D11 000000              B  2049    fs_root_dir_position		dw24 0		; offse
005D14 000000              B  2050    fs_data_area				dw24 0		; offse
005D17 00                  B  2051    fs_root_dir_sectors			db 0
                           B  2052    
005D18 000000              B  2053    fs_sectors_per_fat			dw24 0
005D1B 000000              B  2054    fs_max_data_clusters		dw24 0
                           B  2055    
005D1E 00 00 00 00 00 00   B  2056    fs_sought_filename			blkb 12,0
005D24 00 00 00 00 00 00 
005D2A 00 00 00 00 00 00   B  2057    fs_alt_filename				blkb 12,0
005D30 00 00 00 00 00 00 
005D36 00 00 00 00 00 00   B  2058    fs_filename_buffer			blkb 12,0
005D3C 00 00 00 00 00 00 
                           B  2059    
005D42 00000000            B  2060    fs_file_pointer				dw 0,0		; 32 bi
005D46 00000000            B  2061    fs_file_length				dw 0,0		; 32 bi
005D4A 00000000            B  2062    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  2063    
005D4E 000000              B  2064    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2065    
005D51 000000              B  2066    fs_file_start_cluster		dw24 0
005D54 000000              B  2067    fs_file_working_cluster		dw24 0
                           B  2068    
005D57 000000              B  2069    fs_ez80_address				dw24 0
005D5A 000000              B  2070    fs_ez80_working_address		dw24 0
                           B  2071    
005D5D 000000              B  2072    fs_in_sector_offset			dw24 0
005D60 00                  B  2073    fs_working_sector			db 0
                           B  2074    
005D61 000000              B  2075    fs_working_cluster			dw24 0
005D64 000000              B  2076    fs_free_cluster				dw24 0
005D67 000000              B  2077    fs_new_file_cluster			dw24 0
                           B  2078    
005D6A 000000              B  2079    fs_fname_in_sector_addr		dw24 0
                           B  2080    
005D6D 000000              B  2081    fs_dir_entry_cluster		dw24 0
005D70 000000              B  2082    fs_dir_entry_line_offset	dw24 0
005D73 00                  B  2083    fs_dir_entry_sector			db 0
                           B  2084    
005D74 00                  B  2085    fs_filepointer_valid		db 0
005D75 000000              B  2086    fs_sector_pos_cnt			dw24 0
                           B  2087    
005D78 000000              B  2088    fs_stash_dir_block	 		dw24 0
                           B  2089    
005D7B 00                  B  2090    fs_search_type				db 0
                           B  2091    
005D7C 00000000            B  2092    fs_backed_up_sector_lba0	db 0,0,0,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  2093    
005D80 00000000            B  2094    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2095    
                           B  2096    ;----------------------------------------------
                           B  2097    
                           A  3791    
                           A  3792    ;----------------------------------------------
                           A  3793    ; OS Data 
                           A  3794    ;----------------------------------------------
                           A  3795    
                           A  3796    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005D84                     B     9    kernal_table
                           B    10    
005D84 F31800              B    11    	dw24 ext_mount_volumes			;00		
005D87 991800              B    12    	dw24 os_get_device_info			;01		
005D8A 4E1700              B    13    	dw24 os_check_volume_format		;02		
005D8D 821B00              B    14    	dw24 ext_change_volume			;03		
005D90 AC1800              B    15    	dw24 os_get_volume_info			;04		
005D93 591700              B    16    	dw24 ext_format					;05		
005D96 8B1700              B    17    	dw24 ext_make_dir				;06		
005D99 991700              B    18    	dw24 ext_change_dir				;07		
005D9C A71700              B    19    	dw24 os_parent_dir				;08		
005D9F AD1700              B    20    	dw24 os_root_dir				;09		
005DA2 F51700              B    21    	dw24 ext_delete_dir				;0a		
005DA5 E21600              B    22    	dw24 ext_find_file				;0b		
005DA8 FC1600              B    23    	dw24 ext_set_file_pointer		;0c		
005DAB F51600              B    24    	dw24 os_set_load_length			;0d		
005DAE 0F1700              B    25    	dw24 ext_read_bytes_from_file	;0e		
005DB1 B31700              B    26    	dw24 ext_erase_file				;0f		
005DB4 DB1700              B    27    	dw24 ext_rename_file			;10		
005DB7 1E1700              B    28    	dw24 ext_create_file			;11		
005DBA 2F1700              B    29    	dw24 ext_write_bytes_to_file	;12		
005DBD 501B00              B    30    	dw24 fs_get_total_sectors		;13		
005DC0 C11700              B    31    	dw24 os_goto_first_dir_entry	;14		 
005DC3 C71700              B    32    	dw24 os_get_dir_entry			;15		
005DC6 CD1700              B    33    	dw24 os_goto_next_dir_entry		;16		
005DC9 051800              B    34    	dw24 ext_read_sector			;17		
005DCC 331800              B    35    	dw24 ext_write_sector			;18		
005DCF BD1B00              B    36    	dw24 ext_file_sector_list		;19		
005DD2 271B00              B    37    	dw24 fs_get_dir_cluster			;1a		
005DD5 331B00              B    38    	dw24 fs_update_dir_cluster		;1b		
005DD8 D31700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005DDB 184C00              B    41    	dw24 os_wait_key_press			;1d		
005DDE 734C00              B    42    	dw24 os_get_key_press			;1e		
005DE1 091600              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005DE4 BA1800              B    45    	dw24 ext_serial_get_header		;20		
005DE7 C71800              B    46    	dw24 ext_serial_receive_file	;21		 
005DEA D01800              B    47    	dw24 ext_serial_send_file		;22		 
005DED E21800              B    48    	dw24 ext_serial_tx				;23		
005DF0 E91800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005DF3 551000              B    51    	dw24 ext_print_string			;25		
005DF6 074600              B    52    	dw24 hwsc_clear_screen			;26		
005DF9 D74700              B    53    	dw24 hwsc_wait_vrt				;27		
005DFC 111500              B    54    	dw24 os_set_cursor_position		;28		
005DFF 221B00              B    55    	dw24 ext_plot_char				;29		
005E02 4F1600              B    56    	dw24 ext_set_pen				;2a		
005E05 5C1600              B    57    	dw24 ext_background_colours		;2b		
005E08 D04600              B    58    	dw24 hwsc_draw_cursor			;2c		
005E0B 561600              B    59    	dw24 os_get_pen					;2d		
005E0E 424600              B    60    	dw24 hwsc_scroll_up				;2e		
005E11 914500              B    61    	dw24 os_set_video_hw_regs		;2f		
005E14 0F1600              B    62    	dw24 os_get_vmode				;30			005E17 244700              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005E1A 311500              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005E1D 2E1C00              B    66    	dw24 ext_set_envar				;33		
005E20 F21B00              B    67    	dw24 ext_get_envar				;34		
005E23 881C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
005E26 871500              B    70    	dw24 os_set_mouse_window		;36		
005E29 CD1500              B    71    	dw24 os_get_mouse_position		;37		
005E2C A41500              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005E2F 994800              B    74    	dw24 hwsc_time_delay			;39		
005E32 251300              B    75    	dw24 ext_compare_strings		;3a		
005E35 A41100              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005E38 D91100              B    77    	dw24 ext_ascii_to_hexword		;3c		
005E3B 2E1200              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005E3E 7E4800              B    80    	dw24 hwsc_get_version			;3e		
005E41 FB1400              B    81    	dw24 os_dont_store_registers	;3f		
005E44 DD3800              B    82    	dw24 os_cmd_unused				;40 		005E47 BC4800              B    83    	dw24 hwsc_read_rtc				;41     
005E4A E44800              B    84    	dw24 hwsc_write_rtc				;42		 
005E4D D91C00              B    85    	dw24 os_get_keymap_location		;43		 
005E50 DE3800              B    86    	dw24 os_get_mem_base			;44
005E53 DF1C00              B    87    	dw24 ext_play_audio				;45
005E56 D24B00              B    88    	dw24 hwsc_disable_audio			;46
005E59 EB4B00              B    89    	dw24 hwsc_get_joysticks			;47
005E5C 1F1600              B    90    	dw24 ext_set_vmode				;48
005E5F E21000              B    91    	dw24 ext_set_cursor_image		;49
005E62 B64600              B    92    	dw24 hwsc_remove_cursor			;4a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005E65 1E3500              B    93    	dw24 char_to_font				;4b
005E68 D91B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
005E6B A54800              B    95    	dw24 hwsc_set_timeout			;4d
005E6E B64800              B    96    	dw24 hwsc_test_timeout			;4e
                           B    97    	
005E71 FE3800              B    98    	dw24 ext_set_pointer			;4f
005E74 823A00              B    99    	dw24 os_allocate_ram			;50
005E77 AD3A00              B   100    	dw24 os_deallocate_ram			;51
005E7A EE3800              B   101    	dw24 os_get_mem_top				;52
005E7D FA4800              B   102    	dw24 os_init_msec_counter		;53
005E80 314900              B   103    	dw24 os_read_msec_counter		;54
005E83 933B00              B   104    	dw24 ext_parse_path				;55
                           B   105    	
                           B   106    ;----------------------------------------------
                           B   107    ; Non-packed Text Strings
                           B   108    ;----------------------------------------------
                           B   109    
005E86 50524F53 4520666F   B   110    welcome_message			db "PROSE for EZ80P by 
005E8E 7220455A 38305020 
005E96 62792050 68696C20 
005E9E 52757374 6F6E2032 
005EA6 3031310B 0B00 
005EAC 44726976 65733A0B   B   111    storage_txt				db "Drives:",11,0
005EB4 00 
005EB5 53544152 5455502E   B   112    startup_script_fn		db "STARTUP.PBF",0
005EBD 50424600 
005EC1 2400                B   113    os_hex_prefix_txt		db "$",0
005EC3 50524F53 45205665   B   114    os_version_txt			db "PROSE Ver: $",0		005ECB 723A2024 00 
005ED0 414D4F45 42412056   B   115    hw_version_txt			db "AMOEBA Ver: $",0
005ED8 65723A20 2400 
005EDE 202F2000            B   116    fwd_slash_txt			db " / ",0
005EE2 4C6F6164 696E672E   B   117    loading_txt				db "Loading..",11,0
005EEA 2E0B00 
005EED 53617669 6E672E2E   B   118    saving_txt				db "Saving..",11,0
005EF5 0B00 
005EF7 2E657A70 2000       B   119    ezp_txt					db ".ezp",32,0
005EFD 2E706266 2000       B   120    pbf_txt					db ".pbf",32,0
005F03 0B4D6F72 653F0B0B   B   121    os_more_txt				db 11,"More?",11,11,0
005F0B 00 
005F0C 52656769 73746572   B   122    nmi_freeze_txt			db "Register Dump:"
005F14 2044756D 703A 
005F1A 0B0B00              B   123    crlfx2_txt				db 11,11,0
005F1D 7800                B   124    rep_char_txt			db "x",0
005F1F 20746F20 00         B   125    to_txt					db " to ",0
005F24 4552524F 5200       B   126    error_txt				db "ERROR",0
005F2A 494620              B   127    if_command_txt			db "IF "
005F2D 454E4420            B   128    end_command_txt			db "END "
005F31 4F532052 45515549   B   129    hw_warn_txt1			db "OS REQUIRES AMOEBA 
005F39 52455320 414D4F45 
005F41 42412056 3A 
005F46 2D2D2D2D 00         B   130    hw_warn_txt2			db "----",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F4B 54686973 2077696C   B   131    pmq_txt					db "This will overwrite
005F53 6C206F76 65727772 
005F5B 69746520 70726F74 
005F63 65637465 64205241 
005F6B 4D2E2043 6F6E7469 
005F73 6E756520 28792F6E 
005F7B 293F200B 00 
005F80 4F555478 7800       B   132    envar_out_n_txt			db "OUTxx",0
005F86 50415448 00         B   133    path_txt				db "PATH",0
005F8B 564F4C78 3A2000     B   134    chvol_txt				db "VOLx: ",0
                           B   135    
                           B   136    ;----------------------------------------------
                           B   137    ; Packed text section
                           B   138    ;----------------------------------------------
                           B   139    
005F92 00444542 5547       B   140    dictionary				db 0,"DEBUG"			005F98 002D2D2D 2D2D       B   141    						db 0,"-----"			005F9E 00494F              B   142    						db 0,"IO"				005FA1 002D2D              B   143    						db 0,"--"				005FA4 004D4953 43         B   144    						db 0,"MISC"				005FA9 002D2D2D 2D         B   145    						db 0,"----"				005FAE 00616464 72         B   146    						db 0,"addr"				005FB3 0050524F 5345       B   147    						db 0,"PROSE"			005FB9 00612062 2063       B   148    						db 0,"a b c"			005FBF 00416464 72657373   B   149    						db 0,"Address"			005FC7 00427974 6573       B   150    						db 0,"Bytes"			005FCD 00457865 63757461   B   151    						db 0,"Executable"		005FD5 626C65 
005FD8 0048756E 74         B   152    						db 0,"Hunt"				005FDD 0046696C 6C         B   153    						db 0,"Fill"				005FE2 00476F74 6F         B   154    						db 0,"Goto"				                           B   155    						
005FE7 0053686F 77         B   156    						db 0,"Show"				005FEC 00435055            B   157    						db 0,"CPU"				005FF0 00526567 69737465   B   158    						db 0,"Registers"		005FF8 7273 
005FFA 004173              B   159    						db 0,"As"				005FFD 00415343 4949       B   160    						db 0,"ASCII"			006003 00436C65 6172       B   161    						db 0,"Clear"			006009 00536372 65656E     B   162    						db 0,"Screen"			006010 00446973 61737365   B   163    						db 0,"Disassemble"		006018 6D626C65 
00601C 00537769 746368     B   164    						db 0,"Switch"			006023 00436F70 79         B   165    						db 0,"Copy"				006028 00446576 696365     B   166    						db 0,"Device"			00602F 00436861 6E6765     B   167    						db 0,"Change"			006036 00447269 7665       B   168    						db 0,"Drive"			00603C 00446972            B   169    						db 0,"Dir"				006040 002F                B   170    						db 0,"/"				006042 00666E              B   171    						db 0,"fn"				                           B   172    						
006045 0044656C 657465     B   173    						db 0,"Delete"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 254


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00604C 0046696C 65         B   174    						db 0,"File"				006051 00496E66 6F         B   175    						db 0,"Info"				006056 00564F4C 783A       B   176    						db 0,"VOLx:"			00605C 004D616B 65         B   177    						db 0,"Make"				006061 0052656D 6F756E74   B   178    						db 0,"Remount"			006069 00537461 7274       B   179    						db 0,"Start"			00606F 00576172 6E696E67   B   180    						db 0,"Warning!"			006077 21 
006078 00416C6C            B   181    						db 0,"All"				00607C 0052656D 6F7665     B   182    						db 0,"Remove"			006083 0052656E 616D65     B   183    						db 0,"Rename"			00608A 004F72              B   184    						db 0,"Or"				00608D 00526563 65697665   B   185    						db 0,"Receive"			006095 00536176 65         B   186    						db 0,"Save"				00609A 00547261 6E736D69   B   187    						db 0,"Transmit"			0060A2 74 
0060A3 004C6F61 64         B   188    						db 0,"Load"				                           B   189    						
0060A8 004F532F 4857       B   190    						db 0,"OS/HW"			0060AE 00566572 73696F6E   B   191    						db 0,"Version"			0060B6 0070656E 20706170   B   192    						db 0,"pen paper"		0060BE 6572 
0060C0 803A                B   193    						db 80h,":"				0060C2 813E                B   194    						db 81h,">"				0060C4 82534F55 4E44       B   195    						db 82h,"SOUND"			0060CA 00566F6C 756D6573   B   196    						db 0,"Volumes"			0060D2 8343                B   197    						db 83h,"C"				0060D4 844344              B   198    						db 84h,"CD"				0060D7 85434C53            B   199    						db 85h,"CLS"			0060DB 8650454E            B   200    						db 86h,"PEN"			0060DF 8744                B   201    						db 87h,"D"				0060E1 8844454C            B   202    						db 88h,"DEL"			0060E5 89444952            B   203    						db 89h,"DIR"			0060E9 8A48                B   204    						db 8ah,"H"				0060EB 8B46                B   205    						db 8bh,"F"				                           B   206    						
0060ED 004F6E              B   207    						db 0,"On"				0060F0 8C464F52 4D4154     B   208    						db 8ch,"FORMAT"			0060F7 0047                B   209    						db 0,"G"				0060F9 8D4C42              B   210    						db 8dh,"LB"				0060FC 8E4D                B   211    						db 8eh,"M"				0060FE 8F4D4F55 4E54       B   212    						db 8fh,"MOUNT"			006104 004265              B   213    						db 0,"Be"				006107 9052                B   214    						db 90h,"R"				006109 915244              B   215    						db 91h,"RD"				00610C 92524E              B   216    						db 92h,"RN"				00610F 935258              B   217    						db 93h,"RX"				006112 945342              B   218    						db 94h,"SB"				006115 9554                B   219    						db 95h,"T"				006117 965458              B   220    						db 96h,"TX"				00611A 97564552 53         B   221    						db 97h,"VERS"			00611F 00577269 7465       B   222    						db 0,"Write"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 255


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   223    						
006125 004D656D 6F7279     B   224    						db 0,"Memory"			00612C 00227478 7422       B   225    						db 0,22h,"txt",22h		006132 0057696C 6C         B   226    						db 0,"Will"				006137 00526174 65         B   227    						db 0,"Rate"				00613C 0061                B   228    						db 0,"a"				00613E 00507265 70         B   229    						db 0,"Prep"				006143 984D44              B   230    						db 98h,"MD"				006146 00447269 766573     B   231    						db 0,"Drives"			00614D 006F6C64 666E       B   232    						db 0,"oldfn"			006153 006E6577 666E       B   233    						db 0,"newfn"			006159 006C656E            B   234    						db 0,"len"				00615D 00436F6C 6F757273   B   235    						db 0,"Colours"			006165 993F                B   236    						db 99h,"?"				006167 00436F6D 6D616E64   B   237    						db 0,"Commands"			00616F 73 
006170 0020                B   238    						db 0," "				006172 002D                B   239    						db 0,"-"				                           B   240    						
006174 00566F6C 756D65     B   241    						db 0,"Volume"			00617B 0046756C 6C         B   242    						db 0,"Full"				006180 004E6F74            B   243    						db 0,"Not"				006184 00466F75 6E64       B   244    						db 0,"Found"			00618A 004C656E 677468     B   245    						db 0,"Length"			006191 005A6572 6F         B   246    						db 0,"Zero"				006196 004F7574            B   247    						db 0,"Out"				00619A 004F66              B   248    						db 0,"Of"				00619D 0052616E 6765       B   249    						db 0,"Range"			0061A3 00416C72 65616479   B   250    						db 0,"Already"			0061AB 00457869 737473     B   251    						db 0,"Exists"			0061B2 004174              B   252    						db 0,"At"				0061B5 00526F6F 74         B   253    						db 0,"Root"				0061BA 004D6973 6D617463   B   254    						db 0,"Mismatch"			0061C2 68 
0061C3 00526571 75657374   B   255    						db 0,"Request"			0061CB 00446174 61         B   256    						db 0,"Data"				                           B   257    				
0061D0 00454F46            B   258    						db 0,"EOF"				0061D4 00416674 6572       B   259    						db 0,"After"			0061DA 00556E6B 6E6F776E   B   260    						db 0,"Unknown"			0061E2 00436F6D 6D616E64   B   261    						db 0,"Command"			0061EA 00426164            B   262    						db 0,"Bad"				0061EE 00486578            B   263    						db 0,"Hex"				0061F2 004E6F              B   264    						db 0,"No"				0061F5 0041626F 72746564   B   265    						db 0,"Aborted"			0061FD 00507265 73656E74   B   266    						db 0,"Present"			006205 00436865 636B7375   B   267    						db 0,"Checksum"			00620D 6D 
00620E 004C6F61 646564     B   268    						db 0,"Loaded"			006215 00436F6D 6D73       B   269    						db 0,"Comms"			00621B 00457272 6F72       B   270    						db 0,"Error"			006221 00417267 756D656E   B   271    						db 0,"Arguments"		Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 256


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006229 7473 
00622B 004C6F73 74         B   272    						db 0,"Lost"				                           B   273    						
006230 00                  B   274    						db 0
006231 46415431 36         B   275    fat16_txt				db "FAT16"				                           B   276    
006236 00536572 69616C     B   277    						db 0,"Serial"			00623D 0054696D 65         B   278    						db 0,"Time"				006242 00466F6E 74         B   279    						db 0,"Font"				006247 00546F6F            B   280    						db 0,"Too"				00624B 004C6F6E 67         B   281    						db 0,"Long"				006250 00446573 74696E61   B   282    						db 0,"Destination"		006258 74696F6E 
00625C 0053656C 65637465   B   283    						db 0,"Selected"			006264 64 
006265 00496E76 616C6964   B   284    						db 0,"Invalid"			00626D 004D6973 73696E67   B   285    						db 0,"Missing"			006275 004F4B              B   286    						db 0,"OK"				006278 004F53              B   287    						db 0,"OS"				00627B 0050726F 74656374   B   288    						db 0,"Protected"		006283 6564 
006285 0041                B   289    						db 0,"A"				006287 004973              B   290    						db 0,"Is"				00628A 00456D70 7479       B   291    						db 0,"Empty"			006290 00456E64            B   292    						db 0,"End"				                           B   293    						
006294 0024                B   294    						db 0,"$"
006296 7878                B   295    hex_byte_txt			db "xx"					                           B   296    						
006298 00417070 656E64     B   297    						db 0,"Append"			00629F 003F                B   298    						db 0,"?"				0062A1 0024                B   299    						db 0,"$"				0062A3 00417761 6974696E   B   300    						db 0,"Awaiting"			0062AB 67 
0062AC 00526563 65697669   B   301    						db 0,"Receiving"		0062B4 6E67 
0062B6 0053656E 64696E67   B   302    						db 0,"Sending"			0062BE 000B                B   303    						db 0,11					0062C0 002E2E              B   304    						db 0,".."				0062C3 004E616D 65         B   305    						db 0,"Name"				0062C8 00204279 746573     B   306    						db 0," Bytes"			0062CF 00507265 7373       B   307    						db 0,"Press"			0062D5 00416E79            B   308    						db 0,"Any"				0062D9 004B6579            B   309    						db 0,"Key"				0062DD 00456E74 6572       B   310    						db 0,"Enter"			0062E3 9A454348 4F         B   311    						db 9ah,"ECHO"			                           B   312    				
0062E8 0052756E            B   313    						db 0,"Run"				0062EC 00536372 697074     B   314    						db 0,"Script"			0062F3 00594553            B   315    yes_txt					db 0,"YES" 				0062F7 00546F              B   316    						db 0,"To"				0062FA 00536574            B   317    						db 0,"Set"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 257


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0062FE 00436F6E 74696E75   B   318    						db 0,"Continue"			006306 65 
006307 004E6F6E 65         B   319    						db 0,"None"				00630C 00447269 766572     B   320    						db 0,"Driver"			006313 9B3C                B   321    						db 9bh,"<"				006315 004E6577 6572       B   322    						db 0,"Newer"			00631B 00526571 75697265   B   323    						db 0,"Required"			006323 64 
006324 00465047 4120636F   B   324    						db 0,"FPGA config"		00632C 6E666967 
006330 00556E63 68616E67   B   325    						db 0,"Unchanged"		006338 6564 
00633A 006C6F63 206C656E   B   326    						db 0,"loc len [per vol 
006342 205B7065 7220766F 
00634A 6C206368 616E7320 
006352 6C6F6F70 3F5D20 
006359 003E3E55 6E757365   B   327    						db 0,">>Unused<<"		006361 643C3C 
006364 0070616C 65747465   B   328    						db 0,"palette"			                           B   329    						
00636C 9D4D4F55 5345       B   330    						db 9dh,"MOUSE"			006372 00456E61 626C65     B   331    						db 0,"Enable"			006379 004B6579 626F6172   B   332    						db 0,"Keyboard"			006381 64 
006382 00446574 65637465   B   333    						db 0,"Detected"			00638A 64 
00638B 004D6F75 7365       B   334    						db 0,"Mouse"			006391 00536563 746F72     B   335    						db 0,"Sector"			006398 00496E63 6F727265   B   336    						db 0,"Incorrect"		0063A0 6374 
0063A2 9E564D4F 4445       B   337    						db 9eh,"VMODE"			0063A8 00566964 656F       B   338    						db 0,"Video"			0063AE 004D6F64 65         B   339    						db 0,"Mode"				0063B3 9F464F4E 54         B   340    						db 9fh,"FONT"			0063B8 00416E64            B   341    						db 0,"And"				0063BC 00536176 696E67     B   342    						db 0,"Saving"			0063C3 00556E73 7570706F   B   343    						db 0,"Unsupported"		0063CB 72746564 
0063CF A0534554            B   344    						db 0a0h,"SET"			0063D3 005B7661 723D7374   B   345    						db 0,"[var=string]"		0063DB 72696E67 5D 
                           B   346    
0063E0 00456E76 6172       B   347    						db 0,"Envar"			0063E6 A1445A              B   348    						db 0a1h,"DZ"			0063E9 0041444C            B   349    						db 0,"ADL"				0063ED 005A3830            B   350    						db 0,"Z80"				0063F1 00506C61 79         B   351    						db 0,"Play"				0063F6 00417564 696F       B   352    						db 0,"Audio"			0063FC A2415641 494C       B   353    						db 0a2h,"AVAIL"			006402 00467265 65         B   354    						db 0,"Free"				006407 0043616E 6E6F74     B   355    						db 0,"Cannot"			00640E 00416C6C 6F636174   B   356    						db 0,"Allocate"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 258


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006416 65 
006417 00416C6C 6F636174   B   357    						db 0,"Allocated"		00641F 6564 
006421 A34649              B   358    						db 0a3h,"FI"			006424 00546578 74         B   359    						db 0,"Text"				                           B   360    						
006429 0001                B   361    						db 0,1					                           B   362    
                           B   363    
                           B   364    
                           B   365    
                           B   366    
00642B 2199696A 5F916F92   B   367    save_append_msg			db 021h,099h,069h,06ah,
006433 9700 
006435 2F0A9300            B   368    os_loadaddress_msg 		db 02fh,00ah,093h,0		006439 21649300            B   369    os_filesize_msg			db 021h,064h,093h,0		00643D 94219700            B   370    ser_rec_msg				db 094h,021h,097h,0		006441 956F9897 00         B   371    ser_rec2_msg			db 095h,06fh,098h,097h,
006446 966F9897 00         B   372    ser_send_msg			db 096h,06fh,098h,097h,
00644B 9521BBBC 989700     B   373    ser_recsave_msg			db 095h,021h,0bbh,0bch,
006452 A77C9097 00         B   374    hw_err_msg				db 0a7h,07ch,090h,097h,
006457 607C00              B   375    disk_err_msg			db 060h,07ch,0			00645A A1779797 00         B   376    script_aborted_msg		db 0a1h,077h,097h,097h,
00645F 76B2B397 00         B   377    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   378    
006464 9700                B   379    packed_help1				db 097h,0
006466 0100                B   380    							db 001h,0			006468 0200                B   381    							db 002h,0			00646A 3307095F 4F500B00   B   382    							db 033h,007h,009h,0
006472 3407515F 4F1400     B   383    							db 034h,007h,051h,0
006479 37070707 5F195000   B   384    							db 037h,007h,007h,0
006481 3B075FC2 1700       B   385    							db 03bh,007h,05fh,0
006487 C1075FC3 1700       B   386    							db 0c1h,007h,05fh,0
00648D 3F070754 5F0E5000   B   387    							db 03fh,007h,007h,0
006495 42075F0F 0A00       B   388    							db 042h,007h,05fh,0
00649B 3E070709 5F0D5000   B   389    							db 03eh,007h,007h,0
0064A3 44075F10 500B00     B   390    							db 044h,007h,05fh,0
0064AA 475F1011 1200       B   391    							db 047h,05fh,010h,0
0064B0 4C075F10 50131400   B   392    							db 04ch,007h,05fh,0
                           B   393    	
0064B8 9700                B   394    							db 097h,0
0064BA 0300                B   395    							db 003h,0			0064BC 0400                B   396    							db 004h,0			0064BE 38231E1D 5F1B601E   B   397    							db 038h,023h,01eh,0
0064C6 1D00 
0064C8 3C1F5F20 2100       B   398    							db 03ch,01fh,05fh,0
0064CE 3D5F101D 00         B   399    							db 03dh,05fh,010h,0
0064D3 CB1F5F21 2200       B   400    							db 0cbh,01fh,05fh,0
0064D9 411A995F 551C00     B   401    							db 041h,01ah,099h,0
0064E0 431F075F 2F2100     B   402    							db 043h,01fh,007h,0
0064E7 561D5F24 1D00       B   403    							db 056h,01dh,05fh,0
0064ED 455F2557 00         B   404    							db 045h,05fh,025h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 259


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0064F2 481D5F29 1D00       B   405    							db 048h,01dh,05fh,0
0064F8 4958595F 2A2100     B   406    							db 049h,058h,059h,0
0064FF 4A1F075F 2C2100     B   407    							db 04ah,01fh,007h,0
006506 4B1F075A 5F2D2100   B   408    							db 04bh,01fh,007h,0
00650E 4D1F075A 5F2E2100   B   409    							db 04dh,01fh,007h,0
006516 235F1860 00         B   410    							db 023h,05fh,018h,0
                           B   411    
00651B 9700                B   412    							db 097h,0
00651D 0500                B   413    							db 005h,0			00651F 0600                B   414    							db 006h,0			006521 C65F10C7 5000       B   415    							db 0c6h,05fh,010h,0
006527 395F1516 00         B   416    							db 039h,05fh,015h,0
00652C 9F515F10 CC00       B   417    							db 09fh,051h,05fh,0
006532 BA1F5F1B 8200       B   418    							db 0bah,01fh,05fh,0
006538 B05FB1B0 A700       B   419    							db 0b0h,05fh,0b1h,0
00653E 3A325F09 1B5B00     B   420    							db 03ah,032h,05fh,0
006545 BEBF5FA4 C000       B   421    							db 0beh,0bfh,05fh,0
00654B 35AD5FC4 5013C500   B   422    							db 035h,0adh,05fh,0
006553 4E5F1030 3100       B   423    							db 04eh,05fh,010h,0
006559 B7095F1B B8B900     B   424    							db 0b7h,09h,5fh,01b
006560 5C5F105D 00         B   425    							db 05ch,05fh,010h,0
006565 9700                B   426    							db 097h,0
006567 FF                  B   427    							db 0ffh
                           B   428    
                           B   429    
                           B   430    
                           B   431    
006568 DF1D00              B   432    os_cmd_locs					dw24 os_cmd_colon	00656B 2D2D00              B   433    							dw24 os_cmd_gtr		00656E D83500              B   434    							dw24 os_cmd_sound	006571 F11C00              B   435    							dw24 os_cmd_c		006574 5E1D00              B   436    							dw24 os_cmd_cd		006577 D91D00              B   437    							dw24 os_cmd_cls		00657A 423400              B   438    							dw24 os_cmd_pen		00657D F91D00              B   439    							dw24 os_cmd_d		                           B   440    					
006580 5A2900              B   441    							dw24 os_cmd_del		006583 7E2900              B   442    							dw24 os_cmd_dir		006586 5B2C00              B   443    							dw24 os_cmd_h		006589 D42A00              B   444    							dw24 os_cmd_f		00658C FC2A00              B   445    							dw24 os_cmd_format	00658F 612D00              B   446    							dw24 os_cmd_lb		006592 122E00              B   447    							dw24 os_cmd_m		006595 DC3300              B   448    							dw24 os_cmd_remount
                           B   449    
006598 802E00              B   450    							dw24 os_cmd_r		00659B B12F00              B   451    							dw24 os_cmd_rd		00659E D52F00              B   452    							dw24 os_cmd_rn		0065A1 953000              B   453    							dw24 os_cmd_rx		0065A4 063000              B   454    							dw24 os_cmd_sb		0065A7 883300              B   455    							dw24 os_cmd_t		0065AA 1C3300              B   456    							dw24 os_cmd_tx		Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 260


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0065AD E83300              B   457    							dw24 os_cmd_vers	                           B   458    							
0065B0 5C2E00              B   459    							dw24 os_cmd_md		0065B3 092D00              B   460    							dw24 os_cmd_help	0065B6 B03800              B   461    							dw24 os_cmd_echo	0065B9 403400              B   462    							dw24 os_cmd_ltn		0065BC DD3800              B   463    							dw24 os_cmd_unused	0065BF 663400              B   464    							dw24 os_cmd_mouse	0065C2 A23400              B   465    							dw24 os_cmd_vmode	0065C5 B23400              B   466    							dw24 os_cmd_font	                           B   467    							
0065C8 493500              B   468    							dw24 os_cmd_set		0065CB CB3500              B   469    							dw24 os_cmd_dz		0065CE 6F3600              B   470    							dw24 os_cmd_avail	0065D1 013700              B   471    							dw24 os_cmd_fi		                           B   472    							
                           B   473    								
0065D4 00                  B   474    packed_msg_list				db 0				                           B   475    		
0065D5 606100              B   476    							db 060h,061h,0		0065D8 21626300            B   477    							db 021h,062h,063h,0
0065DC 1D6100              B   478    							db 01dh,061h,0		0065DF 628C1D00            B   479    							db 062h,08ch,01dh,0
0065E3 1D8D628E 00         B   480    							db 01dh,08dh,062h,0
0065E8 628C2100            B   481    							db 062h,08ch,021h,0
0065EC 21648D65 00         B   482    							db 021h,064h,08dh,0
0065F1 0A666768 00         B   483    							db 00ah,066h,067h,0
0065F6 2199696A 00         B   484    							db 021h,099h,069h,0
0065FB 696B6C00            B   485    							db 069h,06bh,06ch,0
                           B   486    					
0065FF 727300              B   487    							db 072h,073h,0		006602 877500              B   488    							db 087h,075h,0		006605 76219900            B   489    							db 076h,021h,099h,0
                           B   490    					
006609 87B500              B   491    							db 087h,0b5h,0		00660C 797400              B   492    							db 079h,074h,0		00660F 9A7A00              B   493    bytes_loaded_msg			db 09ah,07ah,0		006612 7B7C00              B   494    							db 07bh,07ch,0		006615 747D00              B   495    							db 074h,07dh,0		                           B   496    
006618 627F00              B   497    format_err_msg				db 062h,07fh,0		                           B   498    
00661B 816600              B   499    							db 081h,066h,0		00661E 21998384 00         B   500    							db 021h,099h,083h,0
006623 76260A00            B   501    							db 076h,026h,00ah,0
006627 76216400            B   502    							db 076h,021h,064h,0
00662B 2D7700              B   503    							db 02dh,077h,0		00662E 2D7C6B85 00         B   504    							db 02dh,07ch,06bh,0
006633 628C080C 00         B   505    							db 062h,08ch,08h,0c
006638 A9316708 AA00       B   506    							db 0a9h,031h,067h,0
00663E 768F0A00            B   507    							db 076h,08fh,00ah,0
006642 76850A00            B   508    							db 076h,085h,00ah,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 261


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   509    					
006646 746800              B   510    							db 074h,068h,0		006649 887D00              B   511    							db 088h,07dh,0		00664C 8900                B   512    ok_msg						db 089h,0			                           B   513    					
00664E 876000              B   514    							db 087h,060h,0		006651 1A627800            B   515    							db 01ah,062h,078h,0
                           B   516    					
006655 1D626300            B   517    							db 01dh,062h,063h,0
006659 7700                B   518    							db 077h,0			                           B   519    					
00665B 21996D00            B   520    							db 021h,099h,06dh,0
00665F 8A508B00            B   521    							db 08ah,050h,08bh,0
006663 6F71706E 00         B   522    							db 06fh,071h,070h,0
006668 763600              B   523    no_vols_msg					db 076h,036h,0		00666B 97A66300            B   524    none_found_msg				db 097h,0a6h,063h,0
                           B   525    							
00666F B62100              B   526    							db 0b6h,021h,0		006672 A9316708 AA00       B   527    							db 0a9h,031h,067h,0
006678 21AC00              B   528    							db 021h,0ach,0		                           B   529    							
00667B 766F00              B   530    							db 076h,06fh,0		00667E 746F00              B   531    							db 074h,06fh,0		006681 66676800            B   532    							db 066h,067h,068h,0
006685 BD1A00              B   533    							db 0bdh,01ah,0		006688 1A62B300            B   534    							db 01ah,062h,0b3h,0
00668C 1A7C00              B   535    							db 01ah,07ch,0		00668F 817C00              B   536    							db 081h,07ch,0		006692 C8C95000            B   537    							db 0c8h,0c9h,050h,0
006696 CA508B00            B   538    							db 0cah,050h,08bh,0
00669A B8508B00            B   539    							db 0b8h,050h,08bh,0
                           B   540    							
00669E FF                  B   541    							db 0ffh				                           B   542    
                           B   543    ;----------------------------------------------
                           B   544    
00669F                     B   545    kernal_error_code_translation
                           B   546    
00669F 242D2E14 08110F2A   B   547    					db 24h,2dh,2eh,14h, 08h,11h
0066A7 2F303132 331F34 
                           B   548    					
0066AE                     B   549    fs_error_code_translation
                           B   550    
0066AE 00010203 04050607   B   551    					db 00h,01h,02h,03h, 04h,05h
0066B6 08090A23 270D1321 
0066BE 22232425 260E0000   B   552    					db 22h,23h,24h,25h, 26h,0eh
                           B   553    
                           B   554    
                           B   555    ;----------------------------------------------
                           B   556    ; Scancode to ASCII keymaps
                           B   557    ;----------------------------------------------
                           B   558    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 262


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
                           C     0    include	'UK_keymap.asm'
0066C6                     C     1    keymap:
0066C6 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
0066CE 00000000 00006000 
0066D6 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
0066DE 00007A73 61773200 
0066E6 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
0066EE 00207666 74723500 
0066F6 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
0066FE 00006D6A 75373800 
006706 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
00670E 002E2F6C 3B702D00 
006716 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
00671E 0000005D 00230000 
006726 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
00672E 00000000 00000000 
006736 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
00673E 21000000 5A534157 
006746 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
00674E A3000020 56465452 
006756 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
00675E 5E000000 4D4A5526 
006766 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
00676E 2800003E 3F4C3A50 
006776 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
00677E 00000000 007D007E 
006786 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
00678E 00000000 00000000 
006796 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
00679E 00000000 00000000 
0067A6 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
0067AE 00000000 00000000 
0067B6 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
0067BE 00000000 00000000 
0067C6 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
0067CE 00000000 00000000 
0067D6 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
0067DE 00000000 00000000 
0067E6 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   560    
       000066C6            B   561    unshifted_keymap equ keymap+00h
       00006728            B   562    shifted_keymap   equ keymap+62h
       0000678A            B   563    alted_keymap	 equ keymap+c4h
                           B   564    	
                           B   565    ;----------------------------------------------
                           B   566    
0067EC 00                  B   567    ui_index				db 0				; u
0067ED 00                  B   568    ui_maxchars				db 0				; "
0067EE 000000              B   569    ui_string_addr			dw24 0				; "
                           B   570    
                           B   571    ;----------------------------------------------
                           B   572    ; OS Display parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 263


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   573    ;----------------------------------------------
                           B   574    
0067F1 00                  B   575    video_mode				db 0
0067F2 0700                B   576    current_pen				dw 07h				; C
0067F4 0000                B   577    background_colour		dw 00h				; F
                           B   578    
0067F6 00000F00 000F0F0F   B   579    pen_palette				dw 0000h,000fh,0f00h,0f
0067FE F000FF00 F00FFF0F 
006806 55059909 CC0C710F   B   580    						dw 0555h,0999h,0ccch,0f
00680E 7F00F80D 4008880F 
                           B   581    
006816 00                  B   582    plotchar_colour			db 0				; c
                           B   583    
006817 00                  B   584    char_under_cursor		db 0			
006818 00                  B   585    cursor_present			db 0				; 1
006819 00                  B   586    overwrite_mode			db 0
00681A 00                  B   587    cursor_image_char		db 0
                           B   588    
                           B   589    ;----------------------------------------------
                           B   590    
00681B                     B   591    display_parameters
                           B   592    
00681B 00                  B   593    video_doubling			db 0
00681C 000000              B   594    charmap_rows			dw24 0					00681F 000000              B   595    charmap_columns			dw24 0				
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
006822                     B   599    vmode_parameter_list
                           B   600    
006822 00503C              B   601    				db 00b, 80,60	; vmode 0 (vide
006825 01501E              B   602    				db 01b, 80,30	; vmode 1
006828 02283C              B   603    				db 10b, 40,60	; vmode 2	
00682B 03281E              B   604    				db 11b, 40,30	; vmode 3
                           B   605    				
                           B   606    ;==============================================
                           B   607    ;  Serial Routine Data
                           B   608    ;==============================================
                           B   609    
00682E 000000              B   610    serial_ez80_address		dw24 0
006831 000000              B   611    serial_file_length		dw24 0
006834 000000              B   612    serial_fn_addr			dw24 0
006837 00 00 00 00 00 00   B   613    serial_filename			blkb 18,0		
00683D 00 00 00 00 00 00 
006843 00 00 00 00 00 00 
006849 00                  B   614    serial_fn_length		db 0
00684A 00                  B   615    serial_timeout			db 0
                           B   616    
00684B 00 00 00 00 00 00   B   617    serial_fileheader		blkb 20,0
006851 00 00 00 00 00 00 
006857 00 00 00 00 00 00 
00685D 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 264


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00685F 5A383050 2E464845   B   618    serial_header_id		db "Z80P.FHEADER"		006867 41444552 
00686B 00                  B   619    serial_transfer_started	db 0
                           B   620    
00686C 00                  B   621    anim_wait_count			db 0
                           B   622    
                           B   623    ;==============================================
                           B   624    
00686D F3C8                B   625    intellimouse_seq	db 0f3h,200
00686F F364                B   626    					db 0f3h,100
006871 F350                B   627    					db 0f3h,80
                           B   628    
006873 E803                B   629    mouse_settings_seq	db 0e8h,default_resolution
006875 E6                  B   630    					db default_scaling
006876 F364                B   631    					db 0f3h,default_sample_rate
006878 F4                  B   632    					db 0f4h
                           B   633    					
                           B   634    ;----------------------------------------------
                           B   635    ; FILE SYSTEM RELATED VARIABLES
                           B   636    ;----------------------------------------------
                           B   637    
006879 00                  B   638    boot_drive			db 0
                           B   639    
00687A 00                  B   640    current_volume		db 0
                           B   641    	
00687B 00                  B   642    current_driver		db 0			;normally u
                           B   643    
00687C 00                  B   644    device_count		db 0			;IE: the nu
                           B   645    
00687D 00                  B   646    volume_count		db 0
                           B   647    				
00687E 20564F4C 303A00     B   648    vol_txt				db " VOL0:",0	;space pref
006885 44455630 3A00       B   649    dev_txt				db "DEV0:",0
                           B   650    
00688B 000000              B   651    sector_rd_wr_addr	dw24 0
                           B   652    
                           B   653    
                           B   654    ;==============================================
                           B   655    
00688E                     B   656    volume_dir_clusters
                           B   657    
00688E 00 00 00 00 00 00   B   658    					blkb max_volumes*3,0
006894 00 00 00 00 00 00 
00689A 00 00 00 00 00 00 
0068A0 00 00 00 00 00 00 
                           B   659    	
0068A6                     B   660    volume_mount_list
                           B   661    
0068A6 00 00 00 00 00 00   B   662    					blkb max_volumes*16,0
0068AC 00 00 00 00 00 00 
0068B2 00 00 00 00 00 00 
0068B8 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 265


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0068BE 00 00 00 00 00 00 
0068C4 00 00 00 00 00 00 
0068CA 00 00 00 00 00 00 
0068D0 00 00 00 00 00 00 
0068D6 00 00 00 00 00 00 
0068DC 00 00 00 00 00 00 
0068E2 00 00 00 00 00 00 
0068E8 00 00 00 00 00 00 
0068EE 00 00 00 00 00 00 
0068F4 00 00 00 00 00 00 
0068FA 00 00 00 00 00 00 
006900 00 00 00 00 00 00 
006906 00 00 00 00 00 00 
00690C 00 00 00 00 00 00 
006912 00 00 00 00 00 00 
006918 00 00 00 00 00 00 
00691E 00 00 00 00 00 00 
006924 00 00 
                           B   663    
                           B   664    ; Each entry is 16 bytes in the form:
                           B   665    
                           B   666    ; OFFSETS
                           B   667    ; -------
                           B   668    ; $00 - Volume is present (0/1)
                           B   669    ; $01 - Volume's host driver number (1 byte)	                           B   670    ; $02 - [reserved]
                           B   671    ; $03 - [reserved]
                           B   672    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   673    ; $07 - Partition number on host drive (0/1/2/3
                           B   674    ; $08 - Offset in sectors from MBR to partition
                           B   675    ; $0c - [reserved]
                           B   676    ; $0d - [reserved]	
                           B   677    ; $0e - [reserved]
                           B   678    ; $0f - [reserved]
                           B   679    
                           B   680    ;==============================================
                           B   681    
006926                     B   682    host_device_hardware_info
                           B   683    
006926 00 00 00 00 00 00   B   684    					blkb 32*4,0
00692C 00 00 00 00 00 00 
006932 00 00 00 00 00 00 
006938 00 00 00 00 00 00 
00693E 00 00 00 00 00 00 
006944 00 00 00 00 00 00 
00694A 00 00 00 00 00 00 
006950 00 00 00 00 00 00 
006956 00 00 00 00 00 00 
00695C 00 00 00 00 00 00 
006962 00 00 00 00 00 00 
006968 00 00 00 00 00 00 
00696E 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 266


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006974 00 00 00 00 00 00 
00697A 00 00 00 00 00 00 
006980 00 00 00 00 00 00 
006986 00 00 00 00 00 00 
00698C 00 00 00 00 00 00 
006992 00 00 00 00 00 00 
006998 00 00 00 00 00 00 
00699E 00 00 00 00 00 00 
0069A4 00 00 
                           B   685    
                           B   686    ; Each entry is 32 bytes..
                           B   687    ;
                           B   688    ; OFFSETS
                           B   689    ; -------
                           B   690    ; $00 - Device driver number
                           B   691    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   692    ; $05 - Zero terminated hardware name (22 ASCII
                           B   693    ; (remaining bytes to $1F currently unused)
                           B   694    
                           B   695    ;----------------------------------------------
                           B   696    
0069A6 000000              B   697    dhwn_temp_pointer		dw24 0
                           B   698    
0069A9 00                  B   699    partition_temp			db 0
0069AA 00                  B   700    vols_on_device_temp		db 0
0069AB 00                  B   701    sys_driver_backup		db 0
0069AC 00                  B   702    os_quiet_mode			db 0
                           B   703    
                           B   704    ;----------------------------------------------
                           B   705    
0069AD 00 00 00 00 00 00   B   706    time_data				blkb	7,0
0069B3 00 
                           B   707    
0069B4 00                  B   708    frozen					db 0
0069B5 01                  B   709    first_run				db 1
0069B6 01                  B   710    devices_connected		db 1					                           B   711    
                           B   712    ;----------------------------------------------
                           B   713    
0069B7 836F00              B   714    free_sysram_base		dw24 os_max_addr
0069BA FFFF07              B   715    free_sysram_top			dw24 sysram_addr+sysram
                           B   716    
0069BD 000080              B   717    free_vram_a_base		dw24 vram_a_addr
0069C0 FFFF87              B   718    free_vram_a_top			dw24 vram_a_addr+7ffffh
                           B   719    
0069C3 0000C0              B   720    free_vram_b_base		dw24 vram_b_addr
0069C6 FFFFC7              B   721    free_vram_b_top			dw24 vram_b_addr+7ffffh
                           B   722    
0069C9 000000              B   723    charmap_size			dw24 0
                           B   724    
                           B   725    ;----------------------------------------------
                           B   726    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 267


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0069CC 000000              B   727    milliseconds_counter	dw24 0
0069CF 000000              B   728    seconds_counter			dw24 0
                           B   729    
                           B   730    ;----------------------------------------------
                           B   731    
0069D2 00                  B   732    store_a1				db 0		
0069D3 000000              B   733    store_bc1				dw24 0
0069D6 000000              B   734    store_de1				dw24 0
0069D9 000000              B   735    store_hl1				dw24 0
0069DC 00                  B   736    store_a2				db 0
0069DD 000000              B   737    store_bc2				dw24 0
0069E0 000000              B   738    store_de2				dw24 0
0069E3 000000              B   739    store_hl2				dw24 0
0069E6 000000              B   740    store_ix				dw24 0
0069E9 000000              B   741    store_iy				dw24 0
0069EC 000000              B   742    store_pc				dw24 0		;only relev
0069EF 000000              B   743    store_spl				dw24 0
0069F2 0000                B   744    store_sps				dw 0
0069F4 00                  B   745    store_mbase				db 0
0069F5 00                  B   746    store_f	 				db 0
0069F6 00                  B   747    store_adl				db 0
                           B   748    
                           B   749    ;----------------------------------------------
0069F7                     B   750    os_variables
                           B   751    ;----------------------------------------------
                           B   752    
0069F7 000000              B   753    kernal_ix_cache			dw24 0
                           B   754    
0069FA 00                  B   755    store_registers			db 0
0069FB 000000              B   756    com_start_addr			dw24 0
                           B   757    
0069FE 00 00 00 00 00 00   B   758    temp_string				blkb max_buffer_chars+2
006A04 00 00 00 00 00 00 
006A0A 00 00 00 00 00 00 
006A10 00 00 00 00 00 00 
006A16 00 00 00 00 00 00 
006A1C 00 00 00 00 00 00 
006A22 00 00 00 00 00 00 
006A28 00 00 00 00 00 00 
006A2E 00 00 00 00 00 00 
006A34 00 00 00 00 00 00 
006A3A 00 00 00 00 00 00 
006A40 00 00 00 00 00 00 
006A46 00 00 00 00 00 00 
006A4C 00 00 00 00 
006A50 00 00 00 00 00 00   B   759    script_fn				blkb 13,0
006A56 00 00 00 00 00 00 
006A5C 00 
                           B   760    
006A5D 00                  B   761    sector_lba0				db 0			; keep 
006A5E 00                  B   762    sector_lba1				db 0
006A5F 00                  B   763    sector_lba2				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 268


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006A60 00                  B   764    sector_lba3				db 0
                           B   765    
                           B   766    ;----------------------------------------------
                           B   767    
006A61 000000              B   768    cursor_pos				dw24 0			; 3rd b
                           B   769    
       00006A61            B   770    cursor_y 				equ cursor_pos
       00006A62            B   771    cursor_x 				equ cursor_pos+1
                           B   772    						
006A64 00                  B   773    cursorflashtimer		db 0
006A65 00                  B   774    cursor_status			db 0
006A66 00                  B   775    os_linecount			db 0
                           B   776    		
006A67 000000              B   777    mem_mon_addr			dw24 0
006A6A 000000              B   778    cmdop_start_address		dw24 0
006A6D 000000              B   779    cmdop_end_address		dw24 0
006A70 000000              B   780    copy_dest_address		dw24 0
006A73 000000              B   781    hex_address				dw24 0
                           B   782    
006A76 000000              B   783    find_hexstringascii 	dw24 0
006A79 000000              B   784    xrr_temp				dw24 0
006A7C 00                  B   785    temphex					db 0
006A7D 00                  B   786    fillbyte				db 0 
006A7E 00                  B   787    ui_im_cache				db 0
                           B   788    
006A7F 00 00 00 00 00 00   B   789    commandstring			blkb max_buffer_chars+2
006A85 00 00 00 00 00 00 
006A8B 00 00 00 00 00 00 
006A91 00 00 00 00 00 00 
006A97 00 00 00 00 00 00 
006A9D 00 00 00 00 00 00 
006AA3 00 00 00 00 00 00 
006AA9 00 00 00 00 00 00 
006AAF 00 00 00 00 00 00 
006AB5 00 00 00 00 00 00 
006ABB 00 00 00 00 00 00 
006AC1 00 00 00 00 00 00 
006AC7 00 00 00 00 00 00 
006ACD 00 00 00 00 
006AD1 00 00 00 00 00 00   B   790    output_line				blkb max_buffer_chars+2
006AD7 00 00 00 00 00 00 
006ADD 00 00 00 00 00 00 
006AE3 00 00 00 00 00 00 
006AE9 00 00 00 00 00 00 
006AEF 00 00 00 00 00 00 
006AF5 00 00 00 00 00 00 
006AFB 00 00 00 00 00 00 
006B01 00 00 00 00 00 00 
006B07 00 00 00 00 00 00 
006B0D 00 00 00 00 00 00 
006B13 00 00 00 00 00 00 
006B19 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 269


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006B1F 00 00 00 00 
                           B   791    				
006B23 000000              B   792    os_args_loc				dw24 0
006B26 000000              B   793    os_args_pos_cache		dw24 0
                           B   794    
006B29 000000              B   795    os_dir_block_cache  	dw24 0
006B2C 000000              B   796    os_extcmd_jmp_addr		dw24 0
                           B   797    
006B2F 000000              B   798    script_orig_dir			dw24 0
006B32 000000              B   799    script_dir				dw24 0
006B35 000000              B   800    script_file_offset		dw24 0
006B38 000000              B   801    script_length			dw24 0
                           B   802    
006B3B 00                  B   803    script_flags			db 0
                           B   804    
006B3C 000000              B   805    path_parse_loc			dw24 0
                           B   806    
006B3F 000000              B   807    original_dir			dw24 0 
006B42 00                  B   808    original_vol		 	db 0
                           B   809    		
006B43 00 00 00 00 00 00   B   810    if_name_txt				blkb max_if_chars+2,0
006B49 00 00 00 00 00 00 
006B4F 00 00 00 00 00 00 
006B55 00 00 00 00 00 00   B   811    if_value_txt			blkb max_if_chars+2,0
006B5B 00 00 00 00 00 00 
006B61 00 00 00 00 00 00 
006B67 00 00 00 00 00 00   B   812    if_label_txt			blkb max_if_chars+2,0
006B6D 00 00 00 00 00 00 
006B73 00 00 00 00 00 00 
                           B   813    
                           B   814    
006B79 0000                B   815    char_to_print			db 0,0	; zero terminat
                           B   816    
                           B   817    ;----------------------------------------------
                           B   818    ; Keyboard buffer and registers
                           B   819    ;----------------------------------------------
                           B   820    
006B7B 00 00 00 00 00 00   B   821    scancode_buffer			blkb 32,0
006B81 00 00 00 00 00 00 
006B87 00 00 00 00 00 00 
006B8D 00 00 00 00 00 00 
006B93 00 00 00 00 00 00 
006B99 00 00 
                           B   822    
006B9B 00                  B   823    key_buf_wr_idx			db 0
006B9C 00                  B   824    key_buf_rd_idx			db 0
006B9D 00                  B   825    key_release_mode		db 0		
006B9E 00                  B   826    not_currently_used		db 0
006B9F 00                  B   827    key_mod_flags			db 0
006BA0 00                  B   828    current_scancode		db 0
006BA1 00                  B   829    current_asciicode		db 0
                           B   830    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 270


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   831    ;----------------------------------------------
                           B   832    ; Mouse related registers
                           B   833    ;----------------------------------------------
                           B   834    
006BA2 00                  B   835    mouse_id				db 0
006BA3 00                  B   836    mouse_packet_size		db 0
                           B   837    
006BA4 00 00 00 00         B   838    mouse_packet			blkb 4,0			; t
006BA8 00                  B   839    mouse_packet_index		db 0				;
006BA9 00                  B   840    mouse_buttons			db 0				;
006BAA 000000              B   841    mouse_disp_x			dw24 0				; c
006BAD 000000              B   842    mouse_disp_y			dw24 0				; c
006BB0 00                  B   843    mouse_wheel				db 0				; m
006BB1 00                  B   844    mouse_updated			db 0
                           B   845    
006BB2 000000              B   846    mouse_window_size_x		dw24 0				; t
006BB5 000000              B   847    mouse_window_size_y		dw24 0
006BB8 000000              B   848    mouse_abs_x				dw24 0
006BBB 000000              B   849    mouse_abs_y				dw24 0
006BBE 000000              B   850    mouse_disp_x_old		dw24 0
006BC1 000000              B   851    mouse_disp_y_old		dw24 0
006BC4 000000              B   852    mouse_disp_x_buffer		dw24 0
006BC7 000000              B   853    mouse_disp_y_buffer		dw24 0
006BCA 00                  B   854    mouse_new_window		db 0
                           B   855    
006BCB 00                  B   856    os_pointer_enable		db 0
006BCC 000000              B   857    os_pointer_definition	dw24 0				
006BCF 000000              B   858    os_pointer_height		dw24 0
006BD2 00                  B   859    os_pointer_palette		db 0
                           B   860    
                           B   861    ;----------------------------------------------
       00006A61            B   862    first_os_var			equ cursor_y
006BD3 00                  B   863    last_os_var				db 0
                           B   864    ;----------------------------------------------
                           B   865    
                           B   866    ;==============================================
                           B   867    ; Default environment variables
                           B   868    ;==============================================
                           B   869    
006BD4 4552524F 523D3030   B   870    default_envars			db "ERROR=00",0
006BDC 00 
006BDD 50415448 3D434F4D   B   871    						db "PATH=COMMANDS",0
006BE5 4D414E44 5300 
006BEB FF                  B   872    						db 0ffh
006BEC 000000              B   873    envar_top_loc			dw24 0 					                           B   874    
                           B   875    ;==============================================
                           B   876    
                           B     0    	include		'phil_font_packed.asm'			006BEF                     B     1    packed_font_start
006BEF 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006BF7 3C3C1800 181800EE 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 271


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006BFF EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006C07 6CFE6C6C 00187EE0 
006C0F 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006C17 3870E6C6 0078ECEC 
006C1F 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006C27 01000518 30016003 
006C2F 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006C37 18300010 5438FE38 
006C3F 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006C47 18010007 38387001 
006C4F 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006C57 0000060E 1C3870E0 
006C5F 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006C67 00387801 38047C00 
006C6F 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
006C77 FE0C180C 0ECE7C00 
006C7F 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
006C87 FEE0FC01 0E03FC00 
006C8F 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
006C97 FE060C18 01380300 
006C9F 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
006CA7 7C01CE03 7E0E7C01 
006CAF 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
006CB7 00033030 00303060 
006CBF 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
006CC7 00037E00 7E010003 
006CCF 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006CD7 7CEE0E3C 38003800 
006CDF 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006CE7 7CE6E6FE 01E60300 
006CEF FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006CF7 7CE601E0 03E67C00 
006CFF FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006D07 E0F8E0E0 FE00FEE0 
006D0F E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
006D17 E0EEE6E6 7C0001E6 
006D1F 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006D27 38057C00 7E011C04 
006D2F DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006D37 E6030001 E006FE00 
006D3F C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006D47 E6F6FEFE EEE6E600 
006D4F 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006D57 E603FCE0 E0007C01 
006D5F E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006D67 E603FCE6 E6007CEE 
006D6F E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
006D77 38060001 E6067C00 
006D7F 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
006D87 04D6FE6C 00E6E66C 
006D8F 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
006D97 7E06FC00 FE0E1C38 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 272


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006D9F 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
006DA7 3C00C0E0 70381C0E 
006DAF 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
006DB7 10386CC6 01000BFE 
006DBF 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
006DC7 E67E0000 E0E0FCE6 
006DCF E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006DD7 037C0000 06067EE6 
006DDF E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006DE7 E07C0000 3E70FC01 
006DEF 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006DF7 7E067C00 E0E0FC01 
006DFF E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006E07 387C0000 1C00011C 
006E0F 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
006E17 EE000078 0138047C 
006E1F 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006E27 010003FC 01E60401 
006E2F 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006E37 0003FCE6 E6FCE0E0 
006E3F 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006E47 0000DCE6 01E00301 
006E4F 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
006E57 00387E01 38031E01 
006E5F 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
006E67 0301E603 6C380100 
006E6F 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
006E77 03E67C38 7CE60100 
006E7F 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
006E87 00FE1C38 70FE003C 
006E8F 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
006E97 18070078 18180C18 
006E9F 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
006EA7 0501FE07 0100FF01 
006EAF 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
006EB7 BC010029 7CC6BAA2 
006EBF BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
006EC7 060100FF 0100FF01 
006ECF 009C                B    48                    db 000h,09Ch
006ED1                     B    49    packed_font_end
                           A  3799    
                           A  3800    
       00000014            A  3801    default_pointer_height equ 20
                           A  3802    
                           B     0    	include		'default_pointer_packed.asm'	006ED1                     B     1    default_pointer:
006ED1 03010103 000E0301   B     2                    db 003h,001h,001h,003h,000h,00E
006ED9 0303000D 01020101 
006EE1 03000C01 02020101   B     3                    db 003h,000h,00Ch,001h,002h,002
006EE9 03000B01 03020301 
006EF1 0103000A 01030204   B     4                    db 001h,003h,000h,00Ah,001h,003
006EF9 01010300 09010302 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Sep-11     16:24:58     page: 273


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\default_pointer_packed.asm
006F01 05010103 00080103   B     5                    db 005h,001h,001h,003h,000h,008
006F09 02060101 03000701 
006F11 03020701 01030006   B     6                    db 003h,002h,007h,001h,001h,003
006F19 01030208 01010300 
006F21 05010302 09010103   B     7                    db 005h,001h,003h,002h,009h,001
006F29 00040103 020A0101 
006F31 03000301 03020603   B     8                    db 003h,000h,003h,001h,003h,002
006F39 01060300 03010302 
006F41 03010202 01010300   B     9                    db 003h,001h,002h,002h,001h,001
006F49 07010202 01000102 
006F51 02010300 07010201   B    10                    db 002h,001h,003h,000h,007h,001
006F59 00000102 02010103 
006F61 00060101 03000401   B    11                    db 000h,006h,001h,001h,003h,000
006F69 02020103 000C0102 
006F71 02010103 000C0301   B    12                    db 002h,001h,001h,003h,000h,00C
006F79 04030015 
                           A  3804    
006F7D 0102                A  3805    default_pointer_colours	db 1,2					006F7F 0000FF0F            A  3806    						dw 000h,0fffh
                           A  3807    
                           A  3808    ;==============================================
                           A  3809    	
006F83 00                  A  3810    os_max_addr		db 0							                           A  3811    	
                           A  3812    
                           A  3813    ;==============================================
                           A  3814    
                           A  3815    				end	
                           A  3816    				
                           A  3817    ;==============================================
                           A  3818    	


Errors: 0
Warnings: 0
Lines Assembled: 13824
